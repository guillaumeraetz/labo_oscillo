
STM32CubeIDE-RealtimeOscilloscope.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002d228  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00005850  0802d3f8  0802d3f8  0003d3f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00000cc2  08032c48  08032c48  00042c48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000020  0803390c  0803390c  0004390c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00007880  0803392c  0803392c  0004392c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000cc  0803b1ac  0803b1ac  0004b1ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0803b278  0803b278  00050124  2**0
                  CONTENTS
  8 .ARM          00000008  0803b278  0803b278  0004b278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0803b280  0803b280  00050124  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000024  0803b280  0803b280  0004b280  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000018  0803b2a4  0803b2a4  0004b2a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000124  20000000  0803b2bc  00050000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0000430c  20000124  0803b3e0  00050124  2**2
                  ALLOC
 14 ._user_heap_stack 00002000  20004430  0803b3e0  00054430  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00050124  2**0
                  CONTENTS, READONLY
 16 .debug_info   000d724c  00000000  00000000  00050154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00019b1a  00000000  00000000  001273a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 000047a8  00000000  00000000  00140ec0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_ranges 00004218  00000000  00000000  00145668  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00040f8e  00000000  00000000  00149880  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   0006a7a7  00000000  00000000  0018a80e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    001344f7  00000000  00000000  001f4fb5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .comment      000000cf  00000000  00000000  003294ac  2**0
                  CONTENTS, READONLY
 24 .debug_frame  00014a18  00000000  00000000  0032957c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000124 	.word	0x20000124
 80001ec:	00000000 	.word	0x00000000
 80001f0:	0802d3e0 	.word	0x0802d3e0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000128 	.word	0x20000128
 800020c:	0802d3e0 	.word	0x0802d3e0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <_ZN17ButtonsController11getInstanceEv>:
                      interface::ButtonsControllerCallbackProvider::CallbackMethod> CallbackProvider;

    ButtonsController();
    virtual ~ButtonsController();

    static ButtonsController & getInstance() { assert(_pInstance); return *_pInstance; }    ///< Access to single instance
 80005c4:	b580      	push	{r7, lr}
 80005c6:	af00      	add	r7, sp, #0
 80005c8:	4b06      	ldr	r3, [pc, #24]	; (80005e4 <_ZN17ButtonsController11getInstanceEv+0x20>)
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	2b00      	cmp	r3, #0
 80005ce:	d105      	bne.n	80005dc <_ZN17ButtonsController11getInstanceEv+0x18>
 80005d0:	4b05      	ldr	r3, [pc, #20]	; (80005e8 <_ZN17ButtonsController11getInstanceEv+0x24>)
 80005d2:	4a06      	ldr	r2, [pc, #24]	; (80005ec <_ZN17ButtonsController11getInstanceEv+0x28>)
 80005d4:	211e      	movs	r1, #30
 80005d6:	4806      	ldr	r0, [pc, #24]	; (80005f0 <_ZN17ButtonsController11getInstanceEv+0x2c>)
 80005d8:	f02b fc86 	bl	802bee8 <__assert_func>
 80005dc:	4b01      	ldr	r3, [pc, #4]	; (80005e4 <_ZN17ButtonsController11getInstanceEv+0x20>)
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	4618      	mov	r0, r3
 80005e2:	bd80      	pop	{r7, pc}
 80005e4:	20003f28 	.word	0x20003f28
 80005e8:	0802d3f8 	.word	0x0802d3f8
 80005ec:	0802d404 	.word	0x0802d404
 80005f0:	0802d440 	.word	0x0802d440

080005f4 <HAL_ADC_ConvCpltCallback>:
#include "stm32f7xx_hal.h"
#include "main.h"
#include "board/buttonscontroller.h"

extern "C" void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef * hadc)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b084      	sub	sp, #16
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
volatile uint32_t value = HAL_ADC_GetValue(hadc);
 80005fc:	6878      	ldr	r0, [r7, #4]
 80005fe:	f002 f859 	bl	80026b4 <HAL_ADC_GetValue>
 8000602:	4603      	mov	r3, r0
 8000604:	60fb      	str	r3, [r7, #12]

}
 8000606:	bf00      	nop
 8000608:	3710      	adds	r7, #16
 800060a:	46bd      	mov	sp, r7
 800060c:	bd80      	pop	{r7, pc}
	...

08000610 <HAL_TIM_OC_DelayElapsedCallback>:

extern "C" void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef * htimer) //10KHz
{
 8000610:	b580      	push	{r7, lr}
 8000612:	b082      	sub	sp, #8
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(outputtimer_GPIO_Port, outputtimer_Pin); //blink the output pf9
 8000618:	f44f 7100 	mov.w	r1, #512	; 0x200
 800061c:	4803      	ldr	r0, [pc, #12]	; (800062c <HAL_TIM_OC_DelayElapsedCallback+0x1c>)
 800061e:	f003 f9f4 	bl	8003a0a <HAL_GPIO_TogglePin>
}
 8000622:	bf00      	nop
 8000624:	3708      	adds	r7, #8
 8000626:	46bd      	mov	sp, r7
 8000628:	bd80      	pop	{r7, pc}
 800062a:	bf00      	nop
 800062c:	40021400 	.word	0x40021400

08000630 <HAL_GPIO_EXTI_Callback>:

extern "C" void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8000630:	b580      	push	{r7, lr}
 8000632:	b082      	sub	sp, #8
 8000634:	af00      	add	r7, sp, #0
 8000636:	4603      	mov	r3, r0
 8000638:	80fb      	strh	r3, [r7, #6]
      switch (GPIO_Pin)
 800063a:	88fb      	ldrh	r3, [r7, #6]
 800063c:	2b80      	cmp	r3, #128	; 0x80
 800063e:	d009      	beq.n	8000654 <HAL_GPIO_EXTI_Callback+0x24>
 8000640:	2b80      	cmp	r3, #128	; 0x80
 8000642:	dc10      	bgt.n	8000666 <HAL_GPIO_EXTI_Callback+0x36>
 8000644:	2b40      	cmp	r3, #64	; 0x40
 8000646:	d005      	beq.n	8000654 <HAL_GPIO_EXTI_Callback+0x24>
 8000648:	2b40      	cmp	r3, #64	; 0x40
 800064a:	dc0c      	bgt.n	8000666 <HAL_GPIO_EXTI_Callback+0x36>
 800064c:	2b04      	cmp	r3, #4
 800064e:	d001      	beq.n	8000654 <HAL_GPIO_EXTI_Callback+0x24>
 8000650:	2b08      	cmp	r3, #8
 8000652:	d108      	bne.n	8000666 <HAL_GPIO_EXTI_Callback+0x36>
      {
        case BUTTON0_Pin:
        case BUTTON1_Pin:
        case BUTTON2_Pin:
        case BUTTON3_Pin:
            ButtonsController::getInstance().onIrq();
 8000654:	f7ff ffb6 	bl	80005c4 <_ZN17ButtonsController11getInstanceEv>
 8000658:	4603      	mov	r3, r0
 800065a:	681a      	ldr	r2, [r3, #0]
 800065c:	3208      	adds	r2, #8
 800065e:	6812      	ldr	r2, [r2, #0]
 8000660:	4618      	mov	r0, r3
 8000662:	4790      	blx	r2
            break;
 8000664:	e000      	b.n	8000668 <HAL_GPIO_EXTI_Callback+0x38>
        default:
            break;
 8000666:	bf00      	nop
      }
}
 8000668:	bf00      	nop
 800066a:	3708      	adds	r7, #8
 800066c:	46bd      	mov	sp, r7
 800066e:	bd80      	pop	{r7, pc}

08000670 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000670:	b580      	push	{r7, lr}
 8000672:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000674:	f001 fda1 	bl	80021ba <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000678:	f000 f81e 	bl	80006b8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800067c:	f000 fbb8 	bl	8000df0 <MX_GPIO_Init>
  MX_ADC3_Init();
 8000680:	f000 f88a 	bl	8000798 <MX_ADC3_Init>
  MX_CRC_Init();
 8000684:	f000 f8da 	bl	800083c <MX_CRC_Init>
  MX_DMA2D_Init();
 8000688:	f000 f8fa 	bl	8000880 <MX_DMA2D_Init>
  MX_FMC_Init();
 800068c:	f000 fb04 	bl	8000c98 <MX_FMC_Init>
  MX_I2C3_Init();
 8000690:	f000 f928 	bl	80008e4 <MX_I2C3_Init>
  MX_LTDC_Init();
 8000694:	f000 f966 	bl	8000964 <MX_LTDC_Init>
  MX_SPI2_Init();
 8000698:	f000 f9e6 	bl	8000a68 <MX_SPI2_Init>
  MX_TIM1_Init();
 800069c:	f000 fa22 	bl	8000ae4 <MX_TIM1_Init>
  MX_USART1_UART_Init();
 80006a0:	f000 faca 	bl	8000c38 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  //HAL_ADC_Start_IT(&hadc3);
  //HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1); // start TIM1
  Factory_initialize();
 80006a4:	f010 fe39 	bl	801131a <Factory_initialize>
  Factory_build();
 80006a8:	f010 fe3d 	bl	8011326 <Factory_build>
  XF_initialize(10);
 80006ac:	200a      	movs	r0, #10
 80006ae:	f014 fe87 	bl	80153c0 <XF_initialize>
  XF_exec(); //blocking function
 80006b2:	f014 fe92 	bl	80153da <XF_exec>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 80006b6:	e7fe      	b.n	80006b6 <main+0x46>

080006b8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b094      	sub	sp, #80	; 0x50
 80006bc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80006be:	f107 0320 	add.w	r3, r7, #32
 80006c2:	2230      	movs	r2, #48	; 0x30
 80006c4:	2100      	movs	r1, #0
 80006c6:	4618      	mov	r0, r3
 80006c8:	f02b fcb4 	bl	802c034 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80006cc:	f107 030c 	add.w	r3, r7, #12
 80006d0:	2200      	movs	r2, #0
 80006d2:	601a      	str	r2, [r3, #0]
 80006d4:	605a      	str	r2, [r3, #4]
 80006d6:	609a      	str	r2, [r3, #8]
 80006d8:	60da      	str	r2, [r3, #12]
 80006da:	611a      	str	r2, [r3, #16]

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 80006dc:	f004 fb8c 	bl	8004df8 <HAL_PWR_EnableBkUpAccess>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80006e0:	4b2b      	ldr	r3, [pc, #172]	; (8000790 <SystemClock_Config+0xd8>)
 80006e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006e4:	4a2a      	ldr	r2, [pc, #168]	; (8000790 <SystemClock_Config+0xd8>)
 80006e6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80006ea:	6413      	str	r3, [r2, #64]	; 0x40
 80006ec:	4b28      	ldr	r3, [pc, #160]	; (8000790 <SystemClock_Config+0xd8>)
 80006ee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80006f0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80006f4:	60bb      	str	r3, [r7, #8]
 80006f6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80006f8:	4b26      	ldr	r3, [pc, #152]	; (8000794 <SystemClock_Config+0xdc>)
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	4a25      	ldr	r2, [pc, #148]	; (8000794 <SystemClock_Config+0xdc>)
 80006fe:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000702:	6013      	str	r3, [r2, #0]
 8000704:	4b23      	ldr	r3, [pc, #140]	; (8000794 <SystemClock_Config+0xdc>)
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800070c:	607b      	str	r3, [r7, #4]
 800070e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000710:	2301      	movs	r3, #1
 8000712:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000714:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000718:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800071a:	2302      	movs	r3, #2
 800071c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800071e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000722:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8000724:	2319      	movs	r3, #25
 8000726:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 400;
 8000728:	f44f 73c8 	mov.w	r3, #400	; 0x190
 800072c:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800072e:	2302      	movs	r3, #2
 8000730:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 9;
 8000732:	2309      	movs	r3, #9
 8000734:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000736:	f107 0320 	add.w	r3, r7, #32
 800073a:	4618      	mov	r0, r3
 800073c:	f004 fbbc 	bl	8004eb8 <HAL_RCC_OscConfig>
 8000740:	4603      	mov	r3, r0
 8000742:	2b00      	cmp	r3, #0
 8000744:	d001      	beq.n	800074a <SystemClock_Config+0x92>
  {
    Error_Handler();
 8000746:	f000 ff13 	bl	8001570 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800074a:	f004 fb65 	bl	8004e18 <HAL_PWREx_EnableOverDrive>
 800074e:	4603      	mov	r3, r0
 8000750:	2b00      	cmp	r3, #0
 8000752:	d001      	beq.n	8000758 <SystemClock_Config+0xa0>
  {
    Error_Handler();
 8000754:	f000 ff0c 	bl	8001570 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000758:	230f      	movs	r3, #15
 800075a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800075c:	2302      	movs	r3, #2
 800075e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000760:	2300      	movs	r3, #0
 8000762:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000764:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000768:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800076a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800076e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 8000770:	f107 030c 	add.w	r3, r7, #12
 8000774:	2106      	movs	r1, #6
 8000776:	4618      	mov	r0, r3
 8000778:	f004 fe42 	bl	8005400 <HAL_RCC_ClockConfig>
 800077c:	4603      	mov	r3, r0
 800077e:	2b00      	cmp	r3, #0
 8000780:	d001      	beq.n	8000786 <SystemClock_Config+0xce>
  {
    Error_Handler();
 8000782:	f000 fef5 	bl	8001570 <Error_Handler>
  }
}
 8000786:	bf00      	nop
 8000788:	3750      	adds	r7, #80	; 0x50
 800078a:	46bd      	mov	sp, r7
 800078c:	bd80      	pop	{r7, pc}
 800078e:	bf00      	nop
 8000790:	40023800 	.word	0x40023800
 8000794:	40007000 	.word	0x40007000

08000798 <MX_ADC3_Init>:
  * @brief ADC3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC3_Init(void)
{
 8000798:	b580      	push	{r7, lr}
 800079a:	b084      	sub	sp, #16
 800079c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 800079e:	463b      	mov	r3, r7
 80007a0:	2200      	movs	r2, #0
 80007a2:	601a      	str	r2, [r3, #0]
 80007a4:	605a      	str	r2, [r3, #4]
 80007a6:	609a      	str	r2, [r3, #8]
 80007a8:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC3_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc3.Instance = ADC3;
 80007aa:	4b22      	ldr	r3, [pc, #136]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007ac:	4a22      	ldr	r2, [pc, #136]	; (8000838 <MX_ADC3_Init+0xa0>)
 80007ae:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80007b0:	4b20      	ldr	r3, [pc, #128]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007b2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80007b6:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 80007b8:	4b1e      	ldr	r3, [pc, #120]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007ba:	2200      	movs	r2, #0
 80007bc:	609a      	str	r2, [r3, #8]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 80007be:	4b1d      	ldr	r3, [pc, #116]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007c0:	2200      	movs	r2, #0
 80007c2:	611a      	str	r2, [r3, #16]
  hadc3.Init.ContinuousConvMode = DISABLE;
 80007c4:	4b1b      	ldr	r3, [pc, #108]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007c6:	2200      	movs	r2, #0
 80007c8:	619a      	str	r2, [r3, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 80007ca:	4b1a      	ldr	r3, [pc, #104]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007cc:	2200      	movs	r2, #0
 80007ce:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISINGFALLING;
 80007d2:	4b18      	ldr	r3, [pc, #96]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007d4:	f04f 5240 	mov.w	r2, #805306368	; 0x30000000
 80007d8:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc3.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC1;
 80007da:	4b16      	ldr	r3, [pc, #88]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007dc:	2200      	movs	r2, #0
 80007de:	629a      	str	r2, [r3, #40]	; 0x28
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80007e0:	4b14      	ldr	r3, [pc, #80]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007e2:	2200      	movs	r2, #0
 80007e4:	60da      	str	r2, [r3, #12]
  hadc3.Init.NbrOfConversion = 1;
 80007e6:	4b13      	ldr	r3, [pc, #76]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007e8:	2201      	movs	r2, #1
 80007ea:	61da      	str	r2, [r3, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 80007ec:	4b11      	ldr	r3, [pc, #68]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007ee:	2200      	movs	r2, #0
 80007f0:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80007f4:	4b0f      	ldr	r3, [pc, #60]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007f6:	2201      	movs	r2, #1
 80007f8:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 80007fa:	480e      	ldr	r0, [pc, #56]	; (8000834 <MX_ADC3_Init+0x9c>)
 80007fc:	f001 fd2e 	bl	800225c <HAL_ADC_Init>
 8000800:	4603      	mov	r3, r0
 8000802:	2b00      	cmp	r3, #0
 8000804:	d001      	beq.n	800080a <MX_ADC3_Init+0x72>
  {
    Error_Handler();
 8000806:	f000 feb3 	bl	8001570 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_0;
 800080a:	2300      	movs	r3, #0
 800080c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 800080e:	2301      	movs	r3, #1
 8000810:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8000812:	2300      	movs	r3, #0
 8000814:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000816:	463b      	mov	r3, r7
 8000818:	4619      	mov	r1, r3
 800081a:	4806      	ldr	r0, [pc, #24]	; (8000834 <MX_ADC3_Init+0x9c>)
 800081c:	f001 ff6c 	bl	80026f8 <HAL_ADC_ConfigChannel>
 8000820:	4603      	mov	r3, r0
 8000822:	2b00      	cmp	r3, #0
 8000824:	d001      	beq.n	800082a <MX_ADC3_Init+0x92>
  {
    Error_Handler();
 8000826:	f000 fea3 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 800082a:	bf00      	nop
 800082c:	3710      	adds	r7, #16
 800082e:	46bd      	mov	sp, r7
 8000830:	bd80      	pop	{r7, pc}
 8000832:	bf00      	nop
 8000834:	20000140 	.word	0x20000140
 8000838:	40012200 	.word	0x40012200

0800083c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800083c:	b580      	push	{r7, lr}
 800083e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8000840:	4b0d      	ldr	r3, [pc, #52]	; (8000878 <MX_CRC_Init+0x3c>)
 8000842:	4a0e      	ldr	r2, [pc, #56]	; (800087c <MX_CRC_Init+0x40>)
 8000844:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000846:	4b0c      	ldr	r3, [pc, #48]	; (8000878 <MX_CRC_Init+0x3c>)
 8000848:	2200      	movs	r2, #0
 800084a:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 800084c:	4b0a      	ldr	r3, [pc, #40]	; (8000878 <MX_CRC_Init+0x3c>)
 800084e:	2200      	movs	r2, #0
 8000850:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 8000852:	4b09      	ldr	r3, [pc, #36]	; (8000878 <MX_CRC_Init+0x3c>)
 8000854:	2200      	movs	r2, #0
 8000856:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000858:	4b07      	ldr	r3, [pc, #28]	; (8000878 <MX_CRC_Init+0x3c>)
 800085a:	2200      	movs	r2, #0
 800085c:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 800085e:	4b06      	ldr	r3, [pc, #24]	; (8000878 <MX_CRC_Init+0x3c>)
 8000860:	2201      	movs	r2, #1
 8000862:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000864:	4804      	ldr	r0, [pc, #16]	; (8000878 <MX_CRC_Init+0x3c>)
 8000866:	f002 fa83 	bl	8002d70 <HAL_CRC_Init>
 800086a:	4603      	mov	r3, r0
 800086c:	2b00      	cmp	r3, #0
 800086e:	d001      	beq.n	8000874 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 8000870:	f000 fe7e 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8000874:	bf00      	nop
 8000876:	bd80      	pop	{r7, pc}
 8000878:	20000188 	.word	0x20000188
 800087c:	40023000 	.word	0x40023000

08000880 <MX_DMA2D_Init>:
  * @brief DMA2D Initialization Function
  * @param None
  * @retval None
  */
static void MX_DMA2D_Init(void)
{
 8000880:	b580      	push	{r7, lr}
 8000882:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8000884:	4b15      	ldr	r3, [pc, #84]	; (80008dc <MX_DMA2D_Init+0x5c>)
 8000886:	4a16      	ldr	r2, [pc, #88]	; (80008e0 <MX_DMA2D_Init+0x60>)
 8000888:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 800088a:	4b14      	ldr	r3, [pc, #80]	; (80008dc <MX_DMA2D_Init+0x5c>)
 800088c:	2200      	movs	r2, #0
 800088e:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8000890:	4b12      	ldr	r3, [pc, #72]	; (80008dc <MX_DMA2D_Init+0x5c>)
 8000892:	2200      	movs	r2, #0
 8000894:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 8000896:	4b11      	ldr	r3, [pc, #68]	; (80008dc <MX_DMA2D_Init+0x5c>)
 8000898:	2200      	movs	r2, #0
 800089a:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 800089c:	4b0f      	ldr	r3, [pc, #60]	; (80008dc <MX_DMA2D_Init+0x5c>)
 800089e:	2200      	movs	r2, #0
 80008a0:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 80008a2:	4b0e      	ldr	r3, [pc, #56]	; (80008dc <MX_DMA2D_Init+0x5c>)
 80008a4:	2200      	movs	r2, #0
 80008a6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 80008a8:	4b0c      	ldr	r3, [pc, #48]	; (80008dc <MX_DMA2D_Init+0x5c>)
 80008aa:	2200      	movs	r2, #0
 80008ac:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 80008ae:	4b0b      	ldr	r3, [pc, #44]	; (80008dc <MX_DMA2D_Init+0x5c>)
 80008b0:	2200      	movs	r2, #0
 80008b2:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80008b4:	4809      	ldr	r0, [pc, #36]	; (80008dc <MX_DMA2D_Init+0x5c>)
 80008b6:	f002 fbd3 	bl	8003060 <HAL_DMA2D_Init>
 80008ba:	4603      	mov	r3, r0
 80008bc:	2b00      	cmp	r3, #0
 80008be:	d001      	beq.n	80008c4 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 80008c0:	f000 fe56 	bl	8001570 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80008c4:	2101      	movs	r1, #1
 80008c6:	4805      	ldr	r0, [pc, #20]	; (80008dc <MX_DMA2D_Init+0x5c>)
 80008c8:	f002 fd24 	bl	8003314 <HAL_DMA2D_ConfigLayer>
 80008cc:	4603      	mov	r3, r0
 80008ce:	2b00      	cmp	r3, #0
 80008d0:	d001      	beq.n	80008d6 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 80008d2:	f000 fe4d 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 80008d6:	bf00      	nop
 80008d8:	bd80      	pop	{r7, pc}
 80008da:	bf00      	nop
 80008dc:	200001ac 	.word	0x200001ac
 80008e0:	4002b000 	.word	0x4002b000

080008e4 <MX_I2C3_Init>:
  * @brief I2C3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C3_Init(void)
{
 80008e4:	b580      	push	{r7, lr}
 80008e6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 80008e8:	4b1b      	ldr	r3, [pc, #108]	; (8000958 <MX_I2C3_Init+0x74>)
 80008ea:	4a1c      	ldr	r2, [pc, #112]	; (800095c <MX_I2C3_Init+0x78>)
 80008ec:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x00C0EAFF;
 80008ee:	4b1a      	ldr	r3, [pc, #104]	; (8000958 <MX_I2C3_Init+0x74>)
 80008f0:	4a1b      	ldr	r2, [pc, #108]	; (8000960 <MX_I2C3_Init+0x7c>)
 80008f2:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 80008f4:	4b18      	ldr	r3, [pc, #96]	; (8000958 <MX_I2C3_Init+0x74>)
 80008f6:	2200      	movs	r2, #0
 80008f8:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80008fa:	4b17      	ldr	r3, [pc, #92]	; (8000958 <MX_I2C3_Init+0x74>)
 80008fc:	2201      	movs	r2, #1
 80008fe:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000900:	4b15      	ldr	r3, [pc, #84]	; (8000958 <MX_I2C3_Init+0x74>)
 8000902:	2200      	movs	r2, #0
 8000904:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 8000906:	4b14      	ldr	r3, [pc, #80]	; (8000958 <MX_I2C3_Init+0x74>)
 8000908:	2200      	movs	r2, #0
 800090a:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 800090c:	4b12      	ldr	r3, [pc, #72]	; (8000958 <MX_I2C3_Init+0x74>)
 800090e:	2200      	movs	r2, #0
 8000910:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000912:	4b11      	ldr	r3, [pc, #68]	; (8000958 <MX_I2C3_Init+0x74>)
 8000914:	2200      	movs	r2, #0
 8000916:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000918:	4b0f      	ldr	r3, [pc, #60]	; (8000958 <MX_I2C3_Init+0x74>)
 800091a:	2200      	movs	r2, #0
 800091c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800091e:	480e      	ldr	r0, [pc, #56]	; (8000958 <MX_I2C3_Init+0x74>)
 8000920:	f003 f8a6 	bl	8003a70 <HAL_I2C_Init>
 8000924:	4603      	mov	r3, r0
 8000926:	2b00      	cmp	r3, #0
 8000928:	d001      	beq.n	800092e <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 800092a:	f000 fe21 	bl	8001570 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800092e:	2100      	movs	r1, #0
 8000930:	4809      	ldr	r0, [pc, #36]	; (8000958 <MX_I2C3_Init+0x74>)
 8000932:	f003 fe31 	bl	8004598 <HAL_I2CEx_ConfigAnalogFilter>
 8000936:	4603      	mov	r3, r0
 8000938:	2b00      	cmp	r3, #0
 800093a:	d001      	beq.n	8000940 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 800093c:	f000 fe18 	bl	8001570 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000940:	2100      	movs	r1, #0
 8000942:	4805      	ldr	r0, [pc, #20]	; (8000958 <MX_I2C3_Init+0x74>)
 8000944:	f003 fe73 	bl	800462e <HAL_I2CEx_ConfigDigitalFilter>
 8000948:	4603      	mov	r3, r0
 800094a:	2b00      	cmp	r3, #0
 800094c:	d001      	beq.n	8000952 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 800094e:	f000 fe0f 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000952:	bf00      	nop
 8000954:	bd80      	pop	{r7, pc}
 8000956:	bf00      	nop
 8000958:	200001ec 	.word	0x200001ec
 800095c:	40005c00 	.word	0x40005c00
 8000960:	00c0eaff 	.word	0x00c0eaff

08000964 <MX_LTDC_Init>:
  * @brief LTDC Initialization Function
  * @param None
  * @retval None
  */
static void MX_LTDC_Init(void)
{
 8000964:	b580      	push	{r7, lr}
 8000966:	b08e      	sub	sp, #56	; 0x38
 8000968:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800096a:	1d3b      	adds	r3, r7, #4
 800096c:	2234      	movs	r2, #52	; 0x34
 800096e:	2100      	movs	r1, #0
 8000970:	4618      	mov	r0, r3
 8000972:	f02b fb5f 	bl	802c034 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000976:	4b3a      	ldr	r3, [pc, #232]	; (8000a60 <MX_LTDC_Init+0xfc>)
 8000978:	4a3a      	ldr	r2, [pc, #232]	; (8000a64 <MX_LTDC_Init+0x100>)
 800097a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800097c:	4b38      	ldr	r3, [pc, #224]	; (8000a60 <MX_LTDC_Init+0xfc>)
 800097e:	2200      	movs	r2, #0
 8000980:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000982:	4b37      	ldr	r3, [pc, #220]	; (8000a60 <MX_LTDC_Init+0xfc>)
 8000984:	2200      	movs	r2, #0
 8000986:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000988:	4b35      	ldr	r3, [pc, #212]	; (8000a60 <MX_LTDC_Init+0xfc>)
 800098a:	2200      	movs	r2, #0
 800098c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800098e:	4b34      	ldr	r3, [pc, #208]	; (8000a60 <MX_LTDC_Init+0xfc>)
 8000990:	2200      	movs	r2, #0
 8000992:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 40;
 8000994:	4b32      	ldr	r3, [pc, #200]	; (8000a60 <MX_LTDC_Init+0xfc>)
 8000996:	2228      	movs	r2, #40	; 0x28
 8000998:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 800099a:	4b31      	ldr	r3, [pc, #196]	; (8000a60 <MX_LTDC_Init+0xfc>)
 800099c:	2209      	movs	r2, #9
 800099e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 80009a0:	4b2f      	ldr	r3, [pc, #188]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009a2:	2235      	movs	r2, #53	; 0x35
 80009a4:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 80009a6:	4b2e      	ldr	r3, [pc, #184]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009a8:	220b      	movs	r2, #11
 80009aa:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 533;
 80009ac:	4b2c      	ldr	r3, [pc, #176]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009ae:	f240 2215 	movw	r2, #533	; 0x215
 80009b2:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 283;
 80009b4:	4b2a      	ldr	r3, [pc, #168]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009b6:	f240 121b 	movw	r2, #283	; 0x11b
 80009ba:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 565;
 80009bc:	4b28      	ldr	r3, [pc, #160]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009be:	f240 2235 	movw	r2, #565	; 0x235
 80009c2:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 285;
 80009c4:	4b26      	ldr	r3, [pc, #152]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009c6:	f240 121d 	movw	r2, #285	; 0x11d
 80009ca:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 80009cc:	4b24      	ldr	r3, [pc, #144]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009ce:	2200      	movs	r2, #0
 80009d0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 80009d4:	4b22      	ldr	r3, [pc, #136]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009d6:	2200      	movs	r2, #0
 80009d8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 80009dc:	4b20      	ldr	r3, [pc, #128]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009de:	2200      	movs	r2, #0
 80009e0:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80009e4:	481e      	ldr	r0, [pc, #120]	; (8000a60 <MX_LTDC_Init+0xfc>)
 80009e6:	f003 fe6f 	bl	80046c8 <HAL_LTDC_Init>
 80009ea:	4603      	mov	r3, r0
 80009ec:	2b00      	cmp	r3, #0
 80009ee:	d001      	beq.n	80009f4 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 80009f0:	f000 fdbe 	bl	8001570 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 80009f4:	2300      	movs	r3, #0
 80009f6:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 80009f8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80009fc:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 80009fe:	2300      	movs	r3, #0
 8000a00:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 272;
 8000a02:	f44f 7388 	mov.w	r3, #272	; 0x110
 8000a06:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000a08:	2302      	movs	r3, #2
 8000a0a:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000a0c:	23ff      	movs	r3, #255	; 0xff
 8000a0e:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000a10:	2300      	movs	r3, #0
 8000a12:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_PAxCA;
 8000a14:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000a18:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_PAxCA;
 8000a1a:	2307      	movs	r3, #7
 8000a1c:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000a1e:	f04f 4340 	mov.w	r3, #3221225472	; 0xc0000000
 8000a22:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 480;
 8000a24:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8000a28:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 272;
 8000a2a:	f44f 7388 	mov.w	r3, #272	; 0x110
 8000a2e:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000a30:	2300      	movs	r3, #0
 8000a32:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000a36:	2300      	movs	r3, #0
 8000a38:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000a42:	1d3b      	adds	r3, r7, #4
 8000a44:	2200      	movs	r2, #0
 8000a46:	4619      	mov	r1, r3
 8000a48:	4805      	ldr	r0, [pc, #20]	; (8000a60 <MX_LTDC_Init+0xfc>)
 8000a4a:	f003 ffc5 	bl	80049d8 <HAL_LTDC_ConfigLayer>
 8000a4e:	4603      	mov	r3, r0
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	d001      	beq.n	8000a58 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8000a54:	f000 fd8c 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000a58:	bf00      	nop
 8000a5a:	3738      	adds	r7, #56	; 0x38
 8000a5c:	46bd      	mov	sp, r7
 8000a5e:	bd80      	pop	{r7, pc}
 8000a60:	20000238 	.word	0x20000238
 8000a64:	40016800 	.word	0x40016800

08000a68 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8000a6c:	4b1b      	ldr	r3, [pc, #108]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a6e:	4a1c      	ldr	r2, [pc, #112]	; (8000ae0 <MX_SPI2_Init+0x78>)
 8000a70:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8000a72:	4b1a      	ldr	r3, [pc, #104]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a74:	f44f 7282 	mov.w	r2, #260	; 0x104
 8000a78:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8000a7a:	4b18      	ldr	r3, [pc, #96]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_4BIT;
 8000a80:	4b16      	ldr	r3, [pc, #88]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a82:	f44f 7240 	mov.w	r2, #768	; 0x300
 8000a86:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000a88:	4b14      	ldr	r3, [pc, #80]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a8a:	2200      	movs	r2, #0
 8000a8c:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000a8e:	4b13      	ldr	r3, [pc, #76]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a90:	2200      	movs	r2, #0
 8000a92:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8000a94:	4b11      	ldr	r3, [pc, #68]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a96:	f44f 7200 	mov.w	r2, #512	; 0x200
 8000a9a:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000a9c:	4b0f      	ldr	r3, [pc, #60]	; (8000adc <MX_SPI2_Init+0x74>)
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000aa2:	4b0e      	ldr	r3, [pc, #56]	; (8000adc <MX_SPI2_Init+0x74>)
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8000aa8:	4b0c      	ldr	r3, [pc, #48]	; (8000adc <MX_SPI2_Init+0x74>)
 8000aaa:	2200      	movs	r2, #0
 8000aac:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000aae:	4b0b      	ldr	r3, [pc, #44]	; (8000adc <MX_SPI2_Init+0x74>)
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 8000ab4:	4b09      	ldr	r3, [pc, #36]	; (8000adc <MX_SPI2_Init+0x74>)
 8000ab6:	2207      	movs	r2, #7
 8000ab8:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8000aba:	4b08      	ldr	r3, [pc, #32]	; (8000adc <MX_SPI2_Init+0x74>)
 8000abc:	2200      	movs	r2, #0
 8000abe:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000ac0:	4b06      	ldr	r3, [pc, #24]	; (8000adc <MX_SPI2_Init+0x74>)
 8000ac2:	2208      	movs	r2, #8
 8000ac4:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8000ac6:	4805      	ldr	r0, [pc, #20]	; (8000adc <MX_SPI2_Init+0x74>)
 8000ac8:	f005 fb33 	bl	8006132 <HAL_SPI_Init>
 8000acc:	4603      	mov	r3, r0
 8000ace:	2b00      	cmp	r3, #0
 8000ad0:	d001      	beq.n	8000ad6 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 8000ad2:	f000 fd4d 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8000ad6:	bf00      	nop
 8000ad8:	bd80      	pop	{r7, pc}
 8000ada:	bf00      	nop
 8000adc:	200002e0 	.word	0x200002e0
 8000ae0:	40003800 	.word	0x40003800

08000ae4 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000ae4:	b580      	push	{r7, lr}
 8000ae6:	b09a      	sub	sp, #104	; 0x68
 8000ae8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000aea:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000aee:	2200      	movs	r2, #0
 8000af0:	601a      	str	r2, [r3, #0]
 8000af2:	605a      	str	r2, [r3, #4]
 8000af4:	609a      	str	r2, [r3, #8]
 8000af6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000af8:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000afc:	2200      	movs	r2, #0
 8000afe:	601a      	str	r2, [r3, #0]
 8000b00:	605a      	str	r2, [r3, #4]
 8000b02:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000b04:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8000b08:	2200      	movs	r2, #0
 8000b0a:	601a      	str	r2, [r3, #0]
 8000b0c:	605a      	str	r2, [r3, #4]
 8000b0e:	609a      	str	r2, [r3, #8]
 8000b10:	60da      	str	r2, [r3, #12]
 8000b12:	611a      	str	r2, [r3, #16]
 8000b14:	615a      	str	r2, [r3, #20]
 8000b16:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000b18:	1d3b      	adds	r3, r7, #4
 8000b1a:	222c      	movs	r2, #44	; 0x2c
 8000b1c:	2100      	movs	r1, #0
 8000b1e:	4618      	mov	r0, r3
 8000b20:	f02b fa88 	bl	802c034 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000b24:	4b42      	ldr	r3, [pc, #264]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b26:	4a43      	ldr	r2, [pc, #268]	; (8000c34 <MX_TIM1_Init+0x150>)
 8000b28:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8000b2a:	4b41      	ldr	r3, [pc, #260]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b2c:	2200      	movs	r2, #0
 8000b2e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000b30:	4b3f      	ldr	r3, [pc, #252]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b32:	2200      	movs	r2, #0
 8000b34:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 19999;
 8000b36:	4b3e      	ldr	r3, [pc, #248]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b38:	f644 621f 	movw	r2, #19999	; 0x4e1f
 8000b3c:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000b3e:	4b3c      	ldr	r3, [pc, #240]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b40:	2200      	movs	r2, #0
 8000b42:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000b44:	4b3a      	ldr	r3, [pc, #232]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b46:	2200      	movs	r2, #0
 8000b48:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000b4a:	4b39      	ldr	r3, [pc, #228]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b4c:	2200      	movs	r2, #0
 8000b4e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000b50:	4837      	ldr	r0, [pc, #220]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b52:	f005 fe8f 	bl	8006874 <HAL_TIM_Base_Init>
 8000b56:	4603      	mov	r3, r0
 8000b58:	2b00      	cmp	r3, #0
 8000b5a:	d001      	beq.n	8000b60 <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8000b5c:	f000 fd08 	bl	8001570 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000b60:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b64:	65bb      	str	r3, [r7, #88]	; 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000b66:	f107 0358 	add.w	r3, r7, #88	; 0x58
 8000b6a:	4619      	mov	r1, r3
 8000b6c:	4830      	ldr	r0, [pc, #192]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b6e:	f006 fa95 	bl	800709c <HAL_TIM_ConfigClockSource>
 8000b72:	4603      	mov	r3, r0
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	d001      	beq.n	8000b7c <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8000b78:	f000 fcfa 	bl	8001570 <Error_Handler>
  }
  if (HAL_TIM_OC_Init(&htim1) != HAL_OK)
 8000b7c:	482c      	ldr	r0, [pc, #176]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000b7e:	f005 ff49 	bl	8006a14 <HAL_TIM_OC_Init>
 8000b82:	4603      	mov	r3, r0
 8000b84:	2b00      	cmp	r3, #0
 8000b86:	d001      	beq.n	8000b8c <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8000b88:	f000 fcf2 	bl	8001570 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	64fb      	str	r3, [r7, #76]	; 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8000b90:	2300      	movs	r3, #0
 8000b92:	653b      	str	r3, [r7, #80]	; 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000b94:	2300      	movs	r3, #0
 8000b96:	657b      	str	r3, [r7, #84]	; 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000b98:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 8000b9c:	4619      	mov	r1, r3
 8000b9e:	4824      	ldr	r0, [pc, #144]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000ba0:	f006 ff22 	bl	80079e8 <HAL_TIMEx_MasterConfigSynchronization>
 8000ba4:	4603      	mov	r3, r0
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	d001      	beq.n	8000bae <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 8000baa:	f000 fce1 	bl	8001570 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_TOGGLE;
 8000bae:	2330      	movs	r3, #48	; 0x30
 8000bb0:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.Pulse = 0;
 8000bb2:	2300      	movs	r3, #0
 8000bb4:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000bb6:	2300      	movs	r3, #0
 8000bb8:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000bba:	2300      	movs	r3, #0
 8000bbc:	63fb      	str	r3, [r7, #60]	; 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000bc6:	2300      	movs	r3, #0
 8000bc8:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000bca:	f107 0330 	add.w	r3, r7, #48	; 0x30
 8000bce:	2200      	movs	r2, #0
 8000bd0:	4619      	mov	r1, r3
 8000bd2:	4817      	ldr	r0, [pc, #92]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000bd4:	f006 f9e8 	bl	8006fa8 <HAL_TIM_OC_ConfigChannel>
 8000bd8:	4603      	mov	r3, r0
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d001      	beq.n	8000be2 <MX_TIM1_Init+0xfe>
  {
    Error_Handler();
 8000bde:	f000 fcc7 	bl	8001570 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000be2:	2300      	movs	r3, #0
 8000be4:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000be6:	2300      	movs	r3, #0
 8000be8:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000bea:	2300      	movs	r3, #0
 8000bec:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000bee:	2300      	movs	r3, #0
 8000bf0:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000bf6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000bfa:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8000bfc:	2300      	movs	r3, #0
 8000bfe:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8000c00:	2300      	movs	r3, #0
 8000c02:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8000c04:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8000c08:	627b      	str	r3, [r7, #36]	; 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	62bb      	str	r3, [r7, #40]	; 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000c0e:	2300      	movs	r3, #0
 8000c10:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000c12:	1d3b      	adds	r3, r7, #4
 8000c14:	4619      	mov	r1, r3
 8000c16:	4806      	ldr	r0, [pc, #24]	; (8000c30 <MX_TIM1_Init+0x14c>)
 8000c18:	f006 ff74 	bl	8007b04 <HAL_TIMEx_ConfigBreakDeadTime>
 8000c1c:	4603      	mov	r3, r0
 8000c1e:	2b00      	cmp	r3, #0
 8000c20:	d001      	beq.n	8000c26 <MX_TIM1_Init+0x142>
  {
    Error_Handler();
 8000c22:	f000 fca5 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 8000c26:	bf00      	nop
 8000c28:	3768      	adds	r7, #104	; 0x68
 8000c2a:	46bd      	mov	sp, r7
 8000c2c:	bd80      	pop	{r7, pc}
 8000c2e:	bf00      	nop
 8000c30:	20000344 	.word	0x20000344
 8000c34:	40010000 	.word	0x40010000

08000c38 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8000c38:	b580      	push	{r7, lr}
 8000c3a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000c3c:	4b14      	ldr	r3, [pc, #80]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c3e:	4a15      	ldr	r2, [pc, #84]	; (8000c94 <MX_USART1_UART_Init+0x5c>)
 8000c40:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8000c42:	4b13      	ldr	r3, [pc, #76]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c44:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000c48:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000c4a:	4b11      	ldr	r3, [pc, #68]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c4c:	2200      	movs	r2, #0
 8000c4e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000c50:	4b0f      	ldr	r3, [pc, #60]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c52:	2200      	movs	r2, #0
 8000c54:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000c56:	4b0e      	ldr	r3, [pc, #56]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c58:	2200      	movs	r2, #0
 8000c5a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000c5c:	4b0c      	ldr	r3, [pc, #48]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c5e:	220c      	movs	r2, #12
 8000c60:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c62:	4b0b      	ldr	r3, [pc, #44]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c64:	2200      	movs	r2, #0
 8000c66:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000c68:	4b09      	ldr	r3, [pc, #36]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8000c6e:	4b08      	ldr	r3, [pc, #32]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c70:	2200      	movs	r2, #0
 8000c72:	621a      	str	r2, [r3, #32]
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8000c74:	4b06      	ldr	r3, [pc, #24]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c76:	2200      	movs	r2, #0
 8000c78:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000c7a:	4805      	ldr	r0, [pc, #20]	; (8000c90 <MX_USART1_UART_Init+0x58>)
 8000c7c:	f006 ffde 	bl	8007c3c <HAL_UART_Init>
 8000c80:	4603      	mov	r3, r0
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	d001      	beq.n	8000c8a <MX_USART1_UART_Init+0x52>
  {
    Error_Handler();
 8000c86:	f000 fc73 	bl	8001570 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000c8a:	bf00      	nop
 8000c8c:	bd80      	pop	{r7, pc}
 8000c8e:	bf00      	nop
 8000c90:	20000390 	.word	0x20000390
 8000c94:	40011000 	.word	0x40011000

08000c98 <MX_FMC_Init>:

/* FMC initialization function */
static void MX_FMC_Init(void)
{
 8000c98:	b580      	push	{r7, lr}
 8000c9a:	b088      	sub	sp, #32
 8000c9c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 8000c9e:	1d3b      	adds	r3, r7, #4
 8000ca0:	2200      	movs	r2, #0
 8000ca2:	601a      	str	r2, [r3, #0]
 8000ca4:	605a      	str	r2, [r3, #4]
 8000ca6:	609a      	str	r2, [r3, #8]
 8000ca8:	60da      	str	r2, [r3, #12]
 8000caa:	611a      	str	r2, [r3, #16]
 8000cac:	615a      	str	r2, [r3, #20]
 8000cae:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000cb0:	4b4c      	ldr	r3, [pc, #304]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cb2:	4a4d      	ldr	r2, [pc, #308]	; (8000de8 <MX_FMC_Init+0x150>)
 8000cb4:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000cb6:	4b4b      	ldr	r3, [pc, #300]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cb8:	2200      	movs	r2, #0
 8000cba:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000cbc:	4b49      	ldr	r3, [pc, #292]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cbe:	2200      	movs	r2, #0
 8000cc0:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000cc2:	4b48      	ldr	r3, [pc, #288]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cc4:	2204      	movs	r2, #4
 8000cc6:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000cc8:	4b46      	ldr	r3, [pc, #280]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cca:	2210      	movs	r2, #16
 8000ccc:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000cce:	4b45      	ldr	r3, [pc, #276]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cd0:	2240      	movs	r2, #64	; 0x40
 8000cd2:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000cd4:	4b43      	ldr	r3, [pc, #268]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cd6:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000cda:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000cdc:	4b41      	ldr	r3, [pc, #260]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cde:	2200      	movs	r2, #0
 8000ce0:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000ce2:	4b40      	ldr	r3, [pc, #256]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000ce4:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000ce8:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000cea:	4b3e      	ldr	r3, [pc, #248]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cec:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000cf0:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 8000cf2:	4b3c      	ldr	r3, [pc, #240]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000cf4:	2200      	movs	r2, #0
 8000cf6:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000cf8:	2302      	movs	r3, #2
 8000cfa:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000cfc:	2307      	movs	r3, #7
 8000cfe:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8000d00:	2304      	movs	r3, #4
 8000d02:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8000d04:	2307      	movs	r3, #7
 8000d06:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8000d08:	2303      	movs	r3, #3
 8000d0a:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000d0c:	2302      	movs	r3, #2
 8000d0e:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8000d10:	2302      	movs	r3, #2
 8000d12:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000d14:	1d3b      	adds	r3, r7, #4
 8000d16:	4619      	mov	r1, r3
 8000d18:	4832      	ldr	r0, [pc, #200]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000d1a:	f005 f979 	bl	8006010 <HAL_SDRAM_Init>
 8000d1e:	4603      	mov	r3, r0
 8000d20:	2b00      	cmp	r3, #0
 8000d22:	d001      	beq.n	8000d28 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000d24:	f000 fc24 	bl	8001570 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  __IO uint32_t tmpmrd = 0;
 8000d28:	2300      	movs	r3, #0
 8000d2a:	603b      	str	r3, [r7, #0]

    /* Step 1: Configure a clock configuration enable command */
    Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000d2c:	4b2f      	ldr	r3, [pc, #188]	; (8000dec <MX_FMC_Init+0x154>)
 8000d2e:	2201      	movs	r2, #1
 8000d30:	601a      	str	r2, [r3, #0]
    Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 8000d32:	4b2e      	ldr	r3, [pc, #184]	; (8000dec <MX_FMC_Init+0x154>)
 8000d34:	2210      	movs	r2, #16
 8000d36:	605a      	str	r2, [r3, #4]
    Command.AutoRefreshNumber      = 1;
 8000d38:	4b2c      	ldr	r3, [pc, #176]	; (8000dec <MX_FMC_Init+0x154>)
 8000d3a:	2201      	movs	r2, #1
 8000d3c:	609a      	str	r2, [r3, #8]
    Command.ModeRegisterDefinition = 0;
 8000d3e:	4b2b      	ldr	r3, [pc, #172]	; (8000dec <MX_FMC_Init+0x154>)
 8000d40:	2200      	movs	r2, #0
 8000d42:	60da      	str	r2, [r3, #12]

    /* Send the command */
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000d44:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d48:	4928      	ldr	r1, [pc, #160]	; (8000dec <MX_FMC_Init+0x154>)
 8000d4a:	4826      	ldr	r0, [pc, #152]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000d4c:	f005 f994 	bl	8006078 <HAL_SDRAM_SendCommand>

    /* Step 2: Insert 100 us minimum delay */
    /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
    HAL_Delay(1);
 8000d50:	2001      	movs	r0, #1
 8000d52:	f001 fa5f 	bl	8002214 <HAL_Delay>

    /* Step 3: Configure a PALL (precharge all) command */
    Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8000d56:	4b25      	ldr	r3, [pc, #148]	; (8000dec <MX_FMC_Init+0x154>)
 8000d58:	2202      	movs	r2, #2
 8000d5a:	601a      	str	r2, [r3, #0]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000d5c:	4b23      	ldr	r3, [pc, #140]	; (8000dec <MX_FMC_Init+0x154>)
 8000d5e:	2210      	movs	r2, #16
 8000d60:	605a      	str	r2, [r3, #4]
    Command.AutoRefreshNumber      = 1;
 8000d62:	4b22      	ldr	r3, [pc, #136]	; (8000dec <MX_FMC_Init+0x154>)
 8000d64:	2201      	movs	r2, #1
 8000d66:	609a      	str	r2, [r3, #8]
    Command.ModeRegisterDefinition = 0;
 8000d68:	4b20      	ldr	r3, [pc, #128]	; (8000dec <MX_FMC_Init+0x154>)
 8000d6a:	2200      	movs	r2, #0
 8000d6c:	60da      	str	r2, [r3, #12]

    /* Send the command */
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000d6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d72:	491e      	ldr	r1, [pc, #120]	; (8000dec <MX_FMC_Init+0x154>)
 8000d74:	481b      	ldr	r0, [pc, #108]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000d76:	f005 f97f 	bl	8006078 <HAL_SDRAM_SendCommand>

    /* Step 4: Configure an Auto Refresh command */
    Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8000d7a:	4b1c      	ldr	r3, [pc, #112]	; (8000dec <MX_FMC_Init+0x154>)
 8000d7c:	2203      	movs	r2, #3
 8000d7e:	601a      	str	r2, [r3, #0]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000d80:	4b1a      	ldr	r3, [pc, #104]	; (8000dec <MX_FMC_Init+0x154>)
 8000d82:	2210      	movs	r2, #16
 8000d84:	605a      	str	r2, [r3, #4]
    Command.AutoRefreshNumber      = 8;
 8000d86:	4b19      	ldr	r3, [pc, #100]	; (8000dec <MX_FMC_Init+0x154>)
 8000d88:	2208      	movs	r2, #8
 8000d8a:	609a      	str	r2, [r3, #8]
    Command.ModeRegisterDefinition = 0;
 8000d8c:	4b17      	ldr	r3, [pc, #92]	; (8000dec <MX_FMC_Init+0x154>)
 8000d8e:	2200      	movs	r2, #0
 8000d90:	60da      	str	r2, [r3, #12]

    /* Send the command */
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000d92:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d96:	4915      	ldr	r1, [pc, #84]	; (8000dec <MX_FMC_Init+0x154>)
 8000d98:	4812      	ldr	r0, [pc, #72]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000d9a:	f005 f96d 	bl	8006078 <HAL_SDRAM_SendCommand>

    /* Step 5: Program the external memory mode register */
    tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 8000d9e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8000da2:	603b      	str	r3, [r7, #0]
             SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL    | \
             SDRAM_MODEREG_CAS_LATENCY_3            | \
             SDRAM_MODEREG_OPERATING_MODE_STANDARD  | \
             SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

    Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8000da4:	4b11      	ldr	r3, [pc, #68]	; (8000dec <MX_FMC_Init+0x154>)
 8000da6:	2204      	movs	r2, #4
 8000da8:	601a      	str	r2, [r3, #0]
    Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000daa:	4b10      	ldr	r3, [pc, #64]	; (8000dec <MX_FMC_Init+0x154>)
 8000dac:	2210      	movs	r2, #16
 8000dae:	605a      	str	r2, [r3, #4]
    Command.AutoRefreshNumber      = 1;
 8000db0:	4b0e      	ldr	r3, [pc, #56]	; (8000dec <MX_FMC_Init+0x154>)
 8000db2:	2201      	movs	r2, #1
 8000db4:	609a      	str	r2, [r3, #8]
    Command.ModeRegisterDefinition = tmpmrd;
 8000db6:	683b      	ldr	r3, [r7, #0]
 8000db8:	4a0c      	ldr	r2, [pc, #48]	; (8000dec <MX_FMC_Init+0x154>)
 8000dba:	60d3      	str	r3, [r2, #12]

    /* Send the command */
    HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000dbc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dc0:	490a      	ldr	r1, [pc, #40]	; (8000dec <MX_FMC_Init+0x154>)
 8000dc2:	4808      	ldr	r0, [pc, #32]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000dc4:	f005 f958 	bl	8006078 <HAL_SDRAM_SendCommand>

    /* Step 6: Set the refresh rate counter */
    /* Set the device refresh rate */
    HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8000dc8:	f240 712b 	movw	r1, #1835	; 0x72b
 8000dcc:	4805      	ldr	r0, [pc, #20]	; (8000de4 <MX_FMC_Init+0x14c>)
 8000dce:	f005 f988 	bl	80060e2 <HAL_SDRAM_ProgramRefreshRate>

    //Deactivate speculative/cache access to first FMC Bank to save FMC bandwidth
    FMC_Bank1->BTCR[0] = 0x000030D2;
 8000dd2:	f04f 4320 	mov.w	r3, #2684354560	; 0xa0000000
 8000dd6:	f243 02d2 	movw	r2, #12498	; 0x30d2
 8000dda:	601a      	str	r2, [r3, #0]

  /* USER CODE END FMC_Init 2 */
}
 8000ddc:	bf00      	nop
 8000dde:	3720      	adds	r7, #32
 8000de0:	46bd      	mov	sp, r7
 8000de2:	bd80      	pop	{r7, pc}
 8000de4:	20000414 	.word	0x20000414
 8000de8:	a0000140 	.word	0xa0000140
 8000dec:	20000448 	.word	0x20000448

08000df0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000df0:	b580      	push	{r7, lr}
 8000df2:	b090      	sub	sp, #64	; 0x40
 8000df4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000df6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000dfa:	2200      	movs	r2, #0
 8000dfc:	601a      	str	r2, [r3, #0]
 8000dfe:	605a      	str	r2, [r3, #4]
 8000e00:	609a      	str	r2, [r3, #8]
 8000e02:	60da      	str	r2, [r3, #12]
 8000e04:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e06:	4bae      	ldr	r3, [pc, #696]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e0a:	4aad      	ldr	r2, [pc, #692]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e0c:	f043 0310 	orr.w	r3, r3, #16
 8000e10:	6313      	str	r3, [r2, #48]	; 0x30
 8000e12:	4bab      	ldr	r3, [pc, #684]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e16:	f003 0310 	and.w	r3, r3, #16
 8000e1a:	62bb      	str	r3, [r7, #40]	; 0x28
 8000e1c:	6abb      	ldr	r3, [r7, #40]	; 0x28
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e1e:	4ba8      	ldr	r3, [pc, #672]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e22:	4aa7      	ldr	r2, [pc, #668]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000e28:	6313      	str	r3, [r2, #48]	; 0x30
 8000e2a:	4ba5      	ldr	r3, [pc, #660]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e2e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000e32:	627b      	str	r3, [r7, #36]	; 0x24
 8000e34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000e36:	4ba2      	ldr	r3, [pc, #648]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e3a:	4aa1      	ldr	r2, [pc, #644]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e3c:	f043 0302 	orr.w	r3, r3, #2
 8000e40:	6313      	str	r3, [r2, #48]	; 0x30
 8000e42:	4b9f      	ldr	r3, [pc, #636]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e46:	f003 0302 	and.w	r3, r3, #2
 8000e4a:	623b      	str	r3, [r7, #32]
 8000e4c:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000e4e:	4b9c      	ldr	r3, [pc, #624]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e52:	4a9b      	ldr	r2, [pc, #620]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e54:	f043 0308 	orr.w	r3, r3, #8
 8000e58:	6313      	str	r3, [r2, #48]	; 0x30
 8000e5a:	4b99      	ldr	r3, [pc, #612]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e5e:	f003 0308 	and.w	r3, r3, #8
 8000e62:	61fb      	str	r3, [r7, #28]
 8000e64:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000e66:	4b96      	ldr	r3, [pc, #600]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e6a:	4a95      	ldr	r2, [pc, #596]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e6c:	f043 0304 	orr.w	r3, r3, #4
 8000e70:	6313      	str	r3, [r2, #48]	; 0x30
 8000e72:	4b93      	ldr	r3, [pc, #588]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e76:	f003 0304 	and.w	r3, r3, #4
 8000e7a:	61bb      	str	r3, [r7, #24]
 8000e7c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e7e:	4b90      	ldr	r3, [pc, #576]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e82:	4a8f      	ldr	r2, [pc, #572]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e84:	f043 0301 	orr.w	r3, r3, #1
 8000e88:	6313      	str	r3, [r2, #48]	; 0x30
 8000e8a:	4b8d      	ldr	r3, [pc, #564]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e8c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e8e:	f003 0301 	and.w	r3, r3, #1
 8000e92:	617b      	str	r3, [r7, #20]
 8000e94:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e96:	4b8a      	ldr	r3, [pc, #552]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e9a:	4a89      	ldr	r2, [pc, #548]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000e9c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000ea0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ea2:	4b87      	ldr	r3, [pc, #540]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ea6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000eaa:	613b      	str	r3, [r7, #16]
 8000eac:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000eae:	4b84      	ldr	r3, [pc, #528]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000eb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eb2:	4a83      	ldr	r2, [pc, #524]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000eb4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000eb8:	6313      	str	r3, [r2, #48]	; 0x30
 8000eba:	4b81      	ldr	r3, [pc, #516]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ebc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ebe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000ec2:	60fb      	str	r3, [r7, #12]
 8000ec4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000ec6:	4b7e      	ldr	r3, [pc, #504]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eca:	4a7d      	ldr	r2, [pc, #500]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ecc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000ed0:	6313      	str	r3, [r2, #48]	; 0x30
 8000ed2:	4b7b      	ldr	r3, [pc, #492]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ed4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ed6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000eda:	60bb      	str	r3, [r7, #8]
 8000edc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000ede:	4b78      	ldr	r3, [pc, #480]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ee0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ee2:	4a77      	ldr	r2, [pc, #476]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ee4:	f043 0320 	orr.w	r3, r3, #32
 8000ee8:	6313      	str	r3, [r2, #48]	; 0x30
 8000eea:	4b75      	ldr	r3, [pc, #468]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000eec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000eee:	f003 0320 	and.w	r3, r3, #32
 8000ef2:	607b      	str	r3, [r7, #4]
 8000ef4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000ef6:	4b72      	ldr	r3, [pc, #456]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000ef8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000efa:	4a71      	ldr	r2, [pc, #452]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000efc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000f00:	6313      	str	r3, [r2, #48]	; 0x30
 8000f02:	4b6f      	ldr	r3, [pc, #444]	; (80010c0 <MX_GPIO_Init+0x2d0>)
 8000f04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000f0a:	603b      	str	r3, [r7, #0]
 8000f0c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 8000f0e:	2201      	movs	r2, #1
 8000f10:	2120      	movs	r1, #32
 8000f12:	486c      	ldr	r0, [pc, #432]	; (80010c4 <MX_GPIO_Init+0x2d4>)
 8000f14:	f002 fd60 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
 8000f18:	2201      	movs	r2, #1
 8000f1a:	2108      	movs	r1, #8
 8000f1c:	486a      	ldr	r0, [pc, #424]	; (80010c8 <MX_GPIO_Init+0x2d8>)
 8000f1e:	f002 fd5b 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_DISP_GPIO_Port, LCD_DISP_Pin, GPIO_PIN_SET);
 8000f22:	2201      	movs	r2, #1
 8000f24:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f28:	4868      	ldr	r0, [pc, #416]	; (80010cc <MX_GPIO_Init+0x2dc>)
 8000f2a:	f002 fd55 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DCMI_PWR_EN_GPIO_Port, DCMI_PWR_EN_Pin, GPIO_PIN_RESET);
 8000f2e:	2200      	movs	r2, #0
 8000f30:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000f34:	4866      	ldr	r0, [pc, #408]	; (80010d0 <MX_GPIO_Init+0x2e0>)
 8000f36:	f002 fd4f 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(outputtimer_GPIO_Port, outputtimer_Pin, GPIO_PIN_RESET);
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f40:	4864      	ldr	r0, [pc, #400]	; (80010d4 <MX_GPIO_Init+0x2e4>)
 8000f42:	f002 fd49 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(EXT_RST_GPIO_Port, EXT_RST_Pin, GPIO_PIN_RESET);
 8000f46:	2200      	movs	r2, #0
 8000f48:	2108      	movs	r1, #8
 8000f4a:	4863      	ldr	r0, [pc, #396]	; (80010d8 <MX_GPIO_Init+0x2e8>)
 8000f4c:	f002 fd44 	bl	80039d8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : OTG_HS_OverCurrent_Pin */
  GPIO_InitStruct.Pin = OTG_HS_OverCurrent_Pin;
 8000f50:	2308      	movs	r3, #8
 8000f52:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000f54:	2300      	movs	r3, #0
 8000f56:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f58:	2300      	movs	r3, #0
 8000f5a:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_HS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8000f5c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000f60:	4619      	mov	r1, r3
 8000f62:	485e      	ldr	r0, [pc, #376]	; (80010dc <MX_GPIO_Init+0x2ec>)
 8000f64:	f002 fa68 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : QSPI_D2_Pin */
  GPIO_InitStruct.Pin = QSPI_D2_Pin;
 8000f68:	2304      	movs	r3, #4
 8000f6a:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f6c:	2302      	movs	r3, #2
 8000f6e:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f70:	2300      	movs	r3, #0
 8000f72:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f74:	2303      	movs	r3, #3
 8000f76:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8000f78:	2309      	movs	r3, #9
 8000f7a:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 8000f7c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000f80:	4619      	mov	r1, r3
 8000f82:	4856      	ldr	r0, [pc, #344]	; (80010dc <MX_GPIO_Init+0x2ec>)
 8000f84:	f002 fa58 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : RMII_TXD1_Pin RMII_TXD0_Pin RMII_TX_EN_Pin */
  GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 8000f88:	f44f 43d0 	mov.w	r3, #26624	; 0x6800
 8000f8c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f92:	2300      	movs	r3, #0
 8000f94:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f96:	2303      	movs	r3, #3
 8000f98:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8000f9a:	230b      	movs	r3, #11
 8000f9c:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f9e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000fa2:	4619      	mov	r1, r3
 8000fa4:	484c      	ldr	r0, [pc, #304]	; (80010d8 <MX_GPIO_Init+0x2e8>)
 8000fa6:	f002 fa47 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARDUINO_SCL_D15_Pin ARDUINO_SDA_D14_Pin */
  GPIO_InitStruct.Pin = ARDUINO_SCL_D15_Pin|ARDUINO_SDA_D14_Pin;
 8000faa:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000fae:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000fb0:	2312      	movs	r3, #18
 8000fb2:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000fb4:	2301      	movs	r3, #1
 8000fb6:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fb8:	2300      	movs	r3, #0
 8000fba:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000fbc:	2304      	movs	r3, #4
 8000fbe:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fc0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000fc4:	4619      	mov	r1, r3
 8000fc6:	4846      	ldr	r0, [pc, #280]	; (80010e0 <MX_GPIO_Init+0x2f0>)
 8000fc8:	f002 fa36 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin
                           ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
  GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin
 8000fcc:	f643 4323 	movw	r3, #15395	; 0x3c23
 8000fd0:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fd2:	2302      	movs	r3, #2
 8000fd4:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000fda:	2303      	movs	r3, #3
 8000fdc:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8000fde:	230a      	movs	r3, #10
 8000fe0:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fe2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8000fe6:	4619      	mov	r1, r3
 8000fe8:	483d      	ldr	r0, [pc, #244]	; (80010e0 <MX_GPIO_Init+0x2f0>)
 8000fea:	f002 fa25 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED3_Pin */
  GPIO_InitStruct.Pin = LED3_Pin;
 8000fee:	2310      	movs	r3, #16
 8000ff0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ff2:	2302      	movs	r3, #2
 8000ff4:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ff6:	2300      	movs	r3, #0
 8000ff8:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ffa:	2300      	movs	r3, #0
 8000ffc:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8000ffe:	2302      	movs	r3, #2
 8001000:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(LED3_GPIO_Port, &GPIO_InitStruct);
 8001002:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001006:	4619      	mov	r1, r3
 8001008:	4835      	ldr	r0, [pc, #212]	; (80010e0 <MX_GPIO_Init+0x2f0>)
 800100a:	f002 fa15 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : SPDIF_RX0_Pin */
  GPIO_InitStruct.Pin = SPDIF_RX0_Pin;
 800100e:	2380      	movs	r3, #128	; 0x80
 8001010:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001012:	2302      	movs	r3, #2
 8001014:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001016:	2300      	movs	r3, #0
 8001018:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800101a:	2300      	movs	r3, #0
 800101c:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF8_SPDIFRX;
 800101e:	2308      	movs	r3, #8
 8001020:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(SPDIF_RX0_GPIO_Port, &GPIO_InitStruct);
 8001022:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001026:	4619      	mov	r1, r3
 8001028:	4826      	ldr	r0, [pc, #152]	; (80010c4 <MX_GPIO_Init+0x2d4>)
 800102a:	f002 fa05 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : SDMMC_CK_Pin SDMMC_D3_Pin SDMMC_D2_Pin PC9
                           PC8 */
  GPIO_InitStruct.Pin = SDMMC_CK_Pin|SDMMC_D3_Pin|SDMMC_D2_Pin|GPIO_PIN_9
 800102e:	f44f 53f8 	mov.w	r3, #7936	; 0x1f00
 8001032:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001034:	2302      	movs	r3, #2
 8001036:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001038:	2300      	movs	r3, #0
 800103a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800103c:	2303      	movs	r3, #3
 800103e:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF12_SDMMC1;
 8001040:	230c      	movs	r3, #12
 8001042:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001044:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001048:	4619      	mov	r1, r3
 800104a:	4826      	ldr	r0, [pc, #152]	; (80010e4 <MX_GPIO_Init+0x2f4>)
 800104c:	f002 f9f4 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED0_Pin */
  GPIO_InitStruct.Pin = LED0_Pin;
 8001050:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8001054:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001056:	2302      	movs	r3, #2
 8001058:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800105a:	2300      	movs	r3, #0
 800105c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800105e:	2300      	movs	r3, #0
 8001060:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001062:	2301      	movs	r3, #1
 8001064:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(LED0_GPIO_Port, &GPIO_InitStruct);
 8001066:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800106a:	4619      	mov	r1, r3
 800106c:	481e      	ldr	r0, [pc, #120]	; (80010e8 <MX_GPIO_Init+0x2f8>)
 800106e:	f002 f9e3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : DCMI_D6_Pin DCMI_D7_Pin */
  GPIO_InitStruct.Pin = DCMI_D6_Pin|DCMI_D7_Pin;
 8001072:	2360      	movs	r3, #96	; 0x60
 8001074:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001076:	2302      	movs	r3, #2
 8001078:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800107a:	2300      	movs	r3, #0
 800107c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800107e:	2300      	movs	r3, #0
 8001080:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 8001082:	230d      	movs	r3, #13
 8001084:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001086:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800108a:	4619      	mov	r1, r3
 800108c:	4813      	ldr	r0, [pc, #76]	; (80010dc <MX_GPIO_Init+0x2ec>)
 800108e:	f002 f9d3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : QSPI_NCS_Pin */
  GPIO_InitStruct.Pin = QSPI_NCS_Pin;
 8001092:	2340      	movs	r3, #64	; 0x40
 8001094:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001096:	2302      	movs	r3, #2
 8001098:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109a:	2300      	movs	r3, #0
 800109c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800109e:	2303      	movs	r3, #3
 80010a0:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 80010a2:	230a      	movs	r3, #10
 80010a4:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 80010a6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80010aa:	4619      	mov	r1, r3
 80010ac:	480c      	ldr	r0, [pc, #48]	; (80010e0 <MX_GPIO_Init+0x2f0>)
 80010ae:	f002 f9c3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_VBUS_Pin */
  GPIO_InitStruct.Pin = OTG_FS_VBUS_Pin;
 80010b2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80010b6:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80010b8:	2300      	movs	r3, #0
 80010ba:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010bc:	2300      	movs	r3, #0
 80010be:	e015      	b.n	80010ec <MX_GPIO_Init+0x2fc>
 80010c0:	40023800 	.word	0x40023800
 80010c4:	40020c00 	.word	0x40020c00
 80010c8:	40022800 	.word	0x40022800
 80010cc:	40022000 	.word	0x40022000
 80010d0:	40021c00 	.word	0x40021c00
 80010d4:	40021400 	.word	0x40021400
 80010d8:	40021800 	.word	0x40021800
 80010dc:	40021000 	.word	0x40021000
 80010e0:	40020400 	.word	0x40020400
 80010e4:	40020800 	.word	0x40020800
 80010e8:	40020000 	.word	0x40020000
 80010ec:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_VBUS_GPIO_Port, &GPIO_InitStruct);
 80010ee:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80010f2:	4619      	mov	r1, r3
 80010f4:	48bc      	ldr	r0, [pc, #752]	; (80013e8 <MX_GPIO_Init+0x5f8>)
 80010f6:	f002 f99f 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : OTG_FS_P_Pin OTG_FS_N_Pin OTG_FS_ID_Pin */
  GPIO_InitStruct.Pin = OTG_FS_P_Pin|OTG_FS_N_Pin|OTG_FS_ID_Pin;
 80010fa:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 80010fe:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001100:	2302      	movs	r3, #2
 8001102:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001104:	2300      	movs	r3, #0
 8001106:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001108:	2303      	movs	r3, #3
 800110a:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 800110c:	230a      	movs	r3, #10
 800110e:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001110:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001114:	4619      	mov	r1, r3
 8001116:	48b5      	ldr	r0, [pc, #724]	; (80013ec <MX_GPIO_Init+0x5fc>)
 8001118:	f002 f98e 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : SAI2_MCLKA_Pin SAI2_SCKA_Pin SAI2_FSA_Pin SAI2_SDA_Pin */
  GPIO_InitStruct.Pin = SAI2_MCLKA_Pin|SAI2_SCKA_Pin|SAI2_FSA_Pin|SAI2_SDA_Pin;
 800111c:	23f0      	movs	r3, #240	; 0xf0
 800111e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001120:	2302      	movs	r3, #2
 8001122:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001124:	2300      	movs	r3, #0
 8001126:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001128:	2300      	movs	r3, #0
 800112a:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 800112c:	230a      	movs	r3, #10
 800112e:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001130:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001134:	4619      	mov	r1, r3
 8001136:	48ae      	ldr	r0, [pc, #696]	; (80013f0 <MX_GPIO_Init+0x600>)
 8001138:	f002 f97e 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : SAI2_SDB_Pin */
  GPIO_InitStruct.Pin = SAI2_SDB_Pin;
 800113c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001140:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001142:	2302      	movs	r3, #2
 8001144:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001146:	2300      	movs	r3, #0
 8001148:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800114a:	2300      	movs	r3, #0
 800114c:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 800114e:	230a      	movs	r3, #10
 8001150:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(SAI2_SDB_GPIO_Port, &GPIO_InitStruct);
 8001152:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001156:	4619      	mov	r1, r3
 8001158:	48a6      	ldr	r0, [pc, #664]	; (80013f4 <MX_GPIO_Init+0x604>)
 800115a:	f002 f96d 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
  GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 800115e:	2320      	movs	r3, #32
 8001160:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001162:	2301      	movs	r3, #1
 8001164:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001166:	2300      	movs	r3, #0
 8001168:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800116a:	2300      	movs	r3, #0
 800116c:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 800116e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001172:	4619      	mov	r1, r3
 8001174:	48a0      	ldr	r0, [pc, #640]	; (80013f8 <MX_GPIO_Init+0x608>)
 8001176:	f002 f95f 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : DCMI_D5_Pin */
  GPIO_InitStruct.Pin = DCMI_D5_Pin;
 800117a:	2308      	movs	r3, #8
 800117c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800117e:	2302      	movs	r3, #2
 8001180:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001182:	2300      	movs	r3, #0
 8001184:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001186:	2300      	movs	r3, #0
 8001188:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 800118a:	230d      	movs	r3, #13
 800118c:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(DCMI_D5_GPIO_Port, &GPIO_InitStruct);
 800118e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001192:	4619      	mov	r1, r3
 8001194:	4898      	ldr	r0, [pc, #608]	; (80013f8 <MX_GPIO_Init+0x608>)
 8001196:	f002 f94f 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON1_Pin BUTTON0_Pin */
  GPIO_InitStruct.Pin = BUTTON1_Pin|BUTTON0_Pin;
 800119a:	230c      	movs	r3, #12
 800119c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800119e:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 80011a2:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 80011a4:	2301      	movs	r3, #1
 80011a6:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80011a8:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80011ac:	4619      	mov	r1, r3
 80011ae:	4890      	ldr	r0, [pc, #576]	; (80013f0 <MX_GPIO_Init+0x600>)
 80011b0:	f002 f942 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : uSD_Detect_Pin */
  GPIO_InitStruct.Pin = uSD_Detect_Pin;
 80011b4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80011b8:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80011ba:	2300      	movs	r3, #0
 80011bc:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011be:	2300      	movs	r3, #0
 80011c0:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(uSD_Detect_GPIO_Port, &GPIO_InitStruct);
 80011c2:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80011c6:	4619      	mov	r1, r3
 80011c8:	488c      	ldr	r0, [pc, #560]	; (80013fc <MX_GPIO_Init+0x60c>)
 80011ca:	f002 f935 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_BL_CTRL_Pin */
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin;
 80011ce:	2308      	movs	r3, #8
 80011d0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80011d2:	2301      	movs	r3, #1
 80011d4:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011d6:	2300      	movs	r3, #0
 80011d8:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011da:	2300      	movs	r3, #0
 80011dc:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
 80011de:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80011e2:	4619      	mov	r1, r3
 80011e4:	4886      	ldr	r0, [pc, #536]	; (8001400 <MX_GPIO_Init+0x610>)
 80011e6:	f002 f927 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : DCMI_VSYNC_Pin */
  GPIO_InitStruct.Pin = DCMI_VSYNC_Pin;
 80011ea:	f44f 7300 	mov.w	r3, #512	; 0x200
 80011ee:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80011f0:	2302      	movs	r3, #2
 80011f2:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80011f4:	2300      	movs	r3, #0
 80011f6:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80011f8:	2300      	movs	r3, #0
 80011fa:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 80011fc:	230d      	movs	r3, #13
 80011fe:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(DCMI_VSYNC_GPIO_Port, &GPIO_InitStruct);
 8001200:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001204:	4619      	mov	r1, r3
 8001206:	487b      	ldr	r0, [pc, #492]	; (80013f4 <MX_GPIO_Init+0x604>)
 8001208:	f002 f916 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
  GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 800120c:	2310      	movs	r3, #16
 800120e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001210:	2300      	movs	r3, #0
 8001212:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001214:	2300      	movs	r3, #0
 8001216:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 8001218:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800121c:	4619      	mov	r1, r3
 800121e:	4876      	ldr	r0, [pc, #472]	; (80013f8 <MX_GPIO_Init+0x608>)
 8001220:	f002 f90a 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : SDMMC_CMD_Pin */
  GPIO_InitStruct.Pin = SDMMC_CMD_Pin;
 8001224:	2304      	movs	r3, #4
 8001226:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001228:	2302      	movs	r3, #2
 800122a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800122c:	2300      	movs	r3, #0
 800122e:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001230:	2303      	movs	r3, #3
 8001232:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF12_SDMMC1;
 8001234:	230c      	movs	r3, #12
 8001236:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(SDMMC_CMD_GPIO_Port, &GPIO_InitStruct);
 8001238:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800123c:	4619      	mov	r1, r3
 800123e:	486e      	ldr	r0, [pc, #440]	; (80013f8 <MX_GPIO_Init+0x608>)
 8001240:	f002 f8fa 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : TP3_Pin NC2_Pin */
  GPIO_InitStruct.Pin = TP3_Pin|NC2_Pin;
 8001244:	f248 0304 	movw	r3, #32772	; 0x8004
 8001248:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800124a:	2300      	movs	r3, #0
 800124c:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800124e:	2300      	movs	r3, #0
 8001250:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001252:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001256:	4619      	mov	r1, r3
 8001258:	486a      	ldr	r0, [pc, #424]	; (8001404 <MX_GPIO_Init+0x614>)
 800125a:	f002 f8ed 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_DISP_Pin */
  GPIO_InitStruct.Pin = LCD_DISP_Pin;
 800125e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001262:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001264:	2301      	movs	r3, #1
 8001266:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001268:	2300      	movs	r3, #0
 800126a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800126c:	2300      	movs	r3, #0
 800126e:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(LCD_DISP_GPIO_Port, &GPIO_InitStruct);
 8001270:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001274:	4619      	mov	r1, r3
 8001276:	485e      	ldr	r0, [pc, #376]	; (80013f0 <MX_GPIO_Init+0x600>)
 8001278:	f002 f8de 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : DCMI_PWR_EN_Pin */
  GPIO_InitStruct.Pin = DCMI_PWR_EN_Pin;
 800127c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001280:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001282:	2301      	movs	r3, #1
 8001284:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001286:	2300      	movs	r3, #0
 8001288:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800128a:	2300      	movs	r3, #0
 800128c:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(DCMI_PWR_EN_GPIO_Port, &GPIO_InitStruct);
 800128e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001292:	4619      	mov	r1, r3
 8001294:	485b      	ldr	r0, [pc, #364]	; (8001404 <MX_GPIO_Init+0x614>)
 8001296:	f002 f8cf 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : DCMI_D4_Pin DCMI_D3_Pin DCMI_D0_Pin DCMI_D2_Pin
                           DCMI_D1_Pin */
  GPIO_InitStruct.Pin = DCMI_D4_Pin|DCMI_D3_Pin|DCMI_D0_Pin|DCMI_D2_Pin
 800129a:	f44f 43bc 	mov.w	r3, #24064	; 0x5e00
 800129e:	62fb      	str	r3, [r7, #44]	; 0x2c
                          |DCMI_D1_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012a0:	2302      	movs	r3, #2
 80012a2:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a4:	2300      	movs	r3, #0
 80012a6:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012a8:	2300      	movs	r3, #0
 80012aa:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 80012ac:	230d      	movs	r3, #13
 80012ae:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80012b0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80012b4:	4619      	mov	r1, r3
 80012b6:	4853      	ldr	r0, [pc, #332]	; (8001404 <MX_GPIO_Init+0x614>)
 80012b8:	f002 f8be 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : ARDUINO_PWM_CS_D5_Pin */
  GPIO_InitStruct.Pin = ARDUINO_PWM_CS_D5_Pin;
 80012bc:	2301      	movs	r3, #1
 80012be:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012c0:	2302      	movs	r3, #2
 80012c2:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012c4:	2300      	movs	r3, #0
 80012c6:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012c8:	2300      	movs	r3, #0
 80012ca:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 80012cc:	2302      	movs	r3, #2
 80012ce:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(ARDUINO_PWM_CS_D5_GPIO_Port, &GPIO_InitStruct);
 80012d0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80012d4:	4619      	mov	r1, r3
 80012d6:	4846      	ldr	r0, [pc, #280]	; (80013f0 <MX_GPIO_Init+0x600>)
 80012d8:	f002 f8ae 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_INT_Pin */
  GPIO_InitStruct.Pin = LCD_INT_Pin;
 80012dc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80012e0:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 80012e2:	f44f 1390 	mov.w	r3, #1179648	; 0x120000
 80012e6:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e8:	2300      	movs	r3, #0
 80012ea:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 80012ec:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80012f0:	4619      	mov	r1, r3
 80012f2:	483f      	ldr	r0, [pc, #252]	; (80013f0 <MX_GPIO_Init+0x600>)
 80012f4:	f002 f8a0 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : ARDUINO_RX_D0_Pin ARDUINO_TX_D1_Pin */
  GPIO_InitStruct.Pin = ARDUINO_RX_D0_Pin|ARDUINO_TX_D1_Pin;
 80012f8:	23c0      	movs	r3, #192	; 0xc0
 80012fa:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80012fc:	2302      	movs	r3, #2
 80012fe:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001300:	2300      	movs	r3, #0
 8001302:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001304:	2303      	movs	r3, #3
 8001306:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 8001308:	2308      	movs	r3, #8
 800130a:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800130c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001310:	4619      	mov	r1, r3
 8001312:	483a      	ldr	r0, [pc, #232]	; (80013fc <MX_GPIO_Init+0x60c>)
 8001314:	f002 f890 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : ULPI_NXT_Pin */
  GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 8001318:	2310      	movs	r3, #16
 800131a:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800131c:	2302      	movs	r3, #2
 800131e:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001320:	2300      	movs	r3, #0
 8001322:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001324:	2303      	movs	r3, #3
 8001326:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001328:	230a      	movs	r3, #10
 800132a:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 800132c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001330:	4619      	mov	r1, r3
 8001332:	4834      	ldr	r0, [pc, #208]	; (8001404 <MX_GPIO_Init+0x614>)
 8001334:	f002 f880 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUTTON2_Pin BUTTON3_Pin */
  GPIO_InitStruct.Pin = BUTTON2_Pin|BUTTON3_Pin;
 8001338:	23c0      	movs	r3, #192	; 0xc0
 800133a:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800133c:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 8001340:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001342:	2301      	movs	r3, #1
 8001344:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001346:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800134a:	4619      	mov	r1, r3
 800134c:	4829      	ldr	r0, [pc, #164]	; (80013f4 <MX_GPIO_Init+0x604>)
 800134e:	f002 f873 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : outputtimer_Pin */
  GPIO_InitStruct.Pin = outputtimer_Pin;
 8001352:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001356:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001358:	2301      	movs	r3, #1
 800135a:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800135c:	2300      	movs	r3, #0
 800135e:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001360:	2300      	movs	r3, #0
 8001362:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(outputtimer_GPIO_Port, &GPIO_InitStruct);
 8001364:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001368:	4619      	mov	r1, r3
 800136a:	4827      	ldr	r0, [pc, #156]	; (8001408 <MX_GPIO_Init+0x618>)
 800136c:	f002 f864 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_STP_Pin ULPI_DIR_Pin */
  GPIO_InitStruct.Pin = ULPI_STP_Pin|ULPI_DIR_Pin;
 8001370:	2305      	movs	r3, #5
 8001372:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001374:	2302      	movs	r3, #2
 8001376:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001378:	2300      	movs	r3, #0
 800137a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800137c:	2303      	movs	r3, #3
 800137e:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 8001380:	230a      	movs	r3, #10
 8001382:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001384:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001388:	4619      	mov	r1, r3
 800138a:	481c      	ldr	r0, [pc, #112]	; (80013fc <MX_GPIO_Init+0x60c>)
 800138c:	f002 f854 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
  GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 8001390:	2332      	movs	r3, #50	; 0x32
 8001392:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001394:	2302      	movs	r3, #2
 8001396:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001398:	2300      	movs	r3, #0
 800139a:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800139c:	2303      	movs	r3, #3
 800139e:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 80013a0:	230b      	movs	r3, #11
 80013a2:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80013a4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80013a8:	4619      	mov	r1, r3
 80013aa:	4814      	ldr	r0, [pc, #80]	; (80013fc <MX_GPIO_Init+0x60c>)
 80013ac:	f002 f844 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80013b0:	2304      	movs	r3, #4
 80013b2:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013b4:	2302      	movs	r3, #2
 80013b6:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013b8:	2300      	movs	r3, #0
 80013ba:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013bc:	2303      	movs	r3, #3
 80013be:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80013c0:	2309      	movs	r3, #9
 80013c2:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80013c4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80013c8:	4619      	mov	r1, r3
 80013ca:	4810      	ldr	r0, [pc, #64]	; (800140c <MX_GPIO_Init+0x61c>)
 80013cc:	f002 f834 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : QSPI_D1_Pin QSPI_D3_Pin QSPI_D0_Pin */
  GPIO_InitStruct.Pin = QSPI_D1_Pin|QSPI_D3_Pin|QSPI_D0_Pin;
 80013d0:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80013d4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013d6:	2302      	movs	r3, #2
 80013d8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013da:	2300      	movs	r3, #0
 80013dc:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013de:	2303      	movs	r3, #3
 80013e0:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80013e2:	2309      	movs	r3, #9
 80013e4:	e014      	b.n	8001410 <MX_GPIO_Init+0x620>
 80013e6:	bf00      	nop
 80013e8:	40022400 	.word	0x40022400
 80013ec:	40020000 	.word	0x40020000
 80013f0:	40022000 	.word	0x40022000
 80013f4:	40021800 	.word	0x40021800
 80013f8:	40020c00 	.word	0x40020c00
 80013fc:	40020800 	.word	0x40020800
 8001400:	40022800 	.word	0x40022800
 8001404:	40021c00 	.word	0x40021c00
 8001408:	40021400 	.word	0x40021400
 800140c:	40020400 	.word	0x40020400
 8001410:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001412:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001416:	4619      	mov	r1, r3
 8001418:	483c      	ldr	r0, [pc, #240]	; (800150c <MX_GPIO_Init+0x71c>)
 800141a:	f002 f80d 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : EXT_RST_Pin */
  GPIO_InitStruct.Pin = EXT_RST_Pin;
 800141e:	2308      	movs	r3, #8
 8001420:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001422:	2301      	movs	r3, #1
 8001424:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001426:	2300      	movs	r3, #0
 8001428:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800142a:	2300      	movs	r3, #0
 800142c:	63bb      	str	r3, [r7, #56]	; 0x38
  HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 800142e:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8001432:	4619      	mov	r1, r3
 8001434:	4836      	ldr	r0, [pc, #216]	; (8001510 <MX_GPIO_Init+0x720>)
 8001436:	f001 ffff 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : RMII_RXER_Pin */
  GPIO_InitStruct.Pin = RMII_RXER_Pin;
 800143a:	2304      	movs	r3, #4
 800143c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800143e:	2300      	movs	r3, #0
 8001440:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001442:	2300      	movs	r3, #0
 8001444:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(RMII_RXER_GPIO_Port, &GPIO_InitStruct);
 8001446:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800144a:	4619      	mov	r1, r3
 800144c:	4830      	ldr	r0, [pc, #192]	; (8001510 <MX_GPIO_Init+0x720>)
 800144e:	f001 fff3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
  GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 8001452:	2386      	movs	r3, #134	; 0x86
 8001454:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001456:	2302      	movs	r3, #2
 8001458:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800145a:	2300      	movs	r3, #0
 800145c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800145e:	2303      	movs	r3, #3
 8001460:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8001462:	230b      	movs	r3, #11
 8001464:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001466:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800146a:	4619      	mov	r1, r3
 800146c:	4829      	ldr	r0, [pc, #164]	; (8001514 <MX_GPIO_Init+0x724>)
 800146e:	f001 ffe3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : DCMI_HSYNC_Pin PA6 */
  GPIO_InitStruct.Pin = DCMI_HSYNC_Pin|GPIO_PIN_6;
 8001472:	2350      	movs	r3, #80	; 0x50
 8001474:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001476:	2302      	movs	r3, #2
 8001478:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800147a:	2300      	movs	r3, #0
 800147c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800147e:	2300      	movs	r3, #0
 8001480:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF13_DCMI;
 8001482:	230d      	movs	r3, #13
 8001484:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001486:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800148a:	4619      	mov	r1, r3
 800148c:	4821      	ldr	r0, [pc, #132]	; (8001514 <MX_GPIO_Init+0x724>)
 800148e:	f001 ffd3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
  GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 8001492:	2328      	movs	r3, #40	; 0x28
 8001494:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001496:	2302      	movs	r3, #2
 8001498:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800149a:	2300      	movs	r3, #0
 800149c:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800149e:	2303      	movs	r3, #3
 80014a0:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 80014a2:	230a      	movs	r3, #10
 80014a4:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014a6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80014aa:	4619      	mov	r1, r3
 80014ac:	4819      	ldr	r0, [pc, #100]	; (8001514 <MX_GPIO_Init+0x724>)
 80014ae:	f001 ffc3 	bl	8003438 <HAL_GPIO_Init>

  /*Configure GPIO pin : LED1_Pin */
  GPIO_InitStruct.Pin = LED1_Pin;
 80014b2:	2340      	movs	r3, #64	; 0x40
 80014b4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014b6:	2302      	movs	r3, #2
 80014b8:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014ba:	2300      	movs	r3, #0
 80014bc:	637b      	str	r3, [r7, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014be:	2300      	movs	r3, #0
 80014c0:	63bb      	str	r3, [r7, #56]	; 0x38
  GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 80014c2:	2309      	movs	r3, #9
 80014c4:	63fb      	str	r3, [r7, #60]	; 0x3c
  HAL_GPIO_Init(LED1_GPIO_Port, &GPIO_InitStruct);
 80014c6:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 80014ca:	4619      	mov	r1, r3
 80014cc:	4812      	ldr	r0, [pc, #72]	; (8001518 <MX_GPIO_Init+0x728>)
 80014ce:	f001 ffb3 	bl	8003438 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 80014d2:	2200      	movs	r2, #0
 80014d4:	2100      	movs	r1, #0
 80014d6:	2008      	movs	r0, #8
 80014d8:	f001 fc20 	bl	8002d1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 80014dc:	2008      	movs	r0, #8
 80014de:	f001 fc39 	bl	8002d54 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 80014e2:	2200      	movs	r2, #0
 80014e4:	2100      	movs	r1, #0
 80014e6:	2009      	movs	r0, #9
 80014e8:	f001 fc18 	bl	8002d1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 80014ec:	2009      	movs	r0, #9
 80014ee:	f001 fc31 	bl	8002d54 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80014f2:	2200      	movs	r2, #0
 80014f4:	2100      	movs	r1, #0
 80014f6:	2017      	movs	r0, #23
 80014f8:	f001 fc10 	bl	8002d1c <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80014fc:	2017      	movs	r0, #23
 80014fe:	f001 fc29 	bl	8002d54 <HAL_NVIC_EnableIRQ>

}
 8001502:	bf00      	nop
 8001504:	3740      	adds	r7, #64	; 0x40
 8001506:	46bd      	mov	sp, r7
 8001508:	bd80      	pop	{r7, pc}
 800150a:	bf00      	nop
 800150c:	40020c00 	.word	0x40020c00
 8001510:	40021800 	.word	0x40021800
 8001514:	40020000 	.word	0x40020000
 8001518:	40021c00 	.word	0x40021c00

0800151c <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800151c:	b590      	push	{r4, r7, lr}
 800151e:	b083      	sub	sp, #12
 8001520:	af00      	add	r7, sp, #0
 8001522:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	4a10      	ldr	r2, [pc, #64]	; (800156c <HAL_TIM_PeriodElapsedCallback+0x50>)
 800152a:	4293      	cmp	r3, r2
 800152c:	d101      	bne.n	8001532 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 800152e:	f000 fe51 	bl	80021d4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
#if (PORT_IDF_STM32CUBE != 0)
    if (htim->Instance == TIM6)
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	4a0d      	ldr	r2, [pc, #52]	; (800156c <HAL_TIM_PeriodElapsedCallback+0x50>)
 8001538:	4293      	cmp	r3, r2
 800153a:	d113      	bne.n	8001564 <HAL_TIM_PeriodElapsedCallback+0x48>
    {
        // STM32 HAL tick handler gets called every millisecond (is given by code
        // generated by STM32CubeIDE). Check which interval is needed by the
        // XF (typically slower) and call XF_tick() accordingly.
        if (XF_isRunning() &&
 800153c:	f015 f8be 	bl	80166bc <XF_isRunning>
 8001540:	4603      	mov	r3, r0
 8001542:	2b00      	cmp	r3, #0
 8001544:	d00e      	beq.n	8001564 <HAL_TIM_PeriodElapsedCallback+0x48>
            (HAL_GetTick() % XF_tickIntervalInMilliseconds()) == 0)
 8001546:	f000 fe59 	bl	80021fc <HAL_GetTick>
 800154a:	4604      	mov	r4, r0
 800154c:	f015 f8a9 	bl	80166a2 <XF_tickIntervalInMilliseconds>
 8001550:	4603      	mov	r3, r0
 8001552:	fbb4 f2f3 	udiv	r2, r4, r3
 8001556:	fb02 f303 	mul.w	r3, r2, r3
 800155a:	1ae3      	subs	r3, r4, r3
        if (XF_isRunning() &&
 800155c:	2b00      	cmp	r3, #0
 800155e:	d101      	bne.n	8001564 <HAL_TIM_PeriodElapsedCallback+0x48>
        {
               XF_tick();
 8001560:	f015 f888 	bl	8016674 <XF_tick>
        }
    }
#endif // PORT_IDF_STM32CUBE
  /* USER CODE END Callback 1 */
}
 8001564:	bf00      	nop
 8001566:	370c      	adds	r7, #12
 8001568:	46bd      	mov	sp, r7
 800156a:	bd90      	pop	{r4, r7, pc}
 800156c:	40001000 	.word	0x40001000

08001570 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001570:	b480      	push	{r7}
 8001572:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001574:	b672      	cpsid	i
}
 8001576:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001578:	e7fe      	b.n	8001578 <Error_Handler+0x8>
	...

0800157c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800157c:	b480      	push	{r7}
 800157e:	b083      	sub	sp, #12
 8001580:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8001582:	4b0f      	ldr	r3, [pc, #60]	; (80015c0 <HAL_MspInit+0x44>)
 8001584:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001586:	4a0e      	ldr	r2, [pc, #56]	; (80015c0 <HAL_MspInit+0x44>)
 8001588:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800158c:	6413      	str	r3, [r2, #64]	; 0x40
 800158e:	4b0c      	ldr	r3, [pc, #48]	; (80015c0 <HAL_MspInit+0x44>)
 8001590:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001592:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001596:	607b      	str	r3, [r7, #4]
 8001598:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800159a:	4b09      	ldr	r3, [pc, #36]	; (80015c0 <HAL_MspInit+0x44>)
 800159c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800159e:	4a08      	ldr	r2, [pc, #32]	; (80015c0 <HAL_MspInit+0x44>)
 80015a0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80015a4:	6453      	str	r3, [r2, #68]	; 0x44
 80015a6:	4b06      	ldr	r3, [pc, #24]	; (80015c0 <HAL_MspInit+0x44>)
 80015a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015aa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80015ae:	603b      	str	r3, [r7, #0]
 80015b0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015b2:	bf00      	nop
 80015b4:	370c      	adds	r7, #12
 80015b6:	46bd      	mov	sp, r7
 80015b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015bc:	4770      	bx	lr
 80015be:	bf00      	nop
 80015c0:	40023800 	.word	0x40023800

080015c4 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80015c4:	b580      	push	{r7, lr}
 80015c6:	b08a      	sub	sp, #40	; 0x28
 80015c8:	af00      	add	r7, sp, #0
 80015ca:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015cc:	f107 0314 	add.w	r3, r7, #20
 80015d0:	2200      	movs	r2, #0
 80015d2:	601a      	str	r2, [r3, #0]
 80015d4:	605a      	str	r2, [r3, #4]
 80015d6:	609a      	str	r2, [r3, #8]
 80015d8:	60da      	str	r2, [r3, #12]
 80015da:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC3)
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	4a25      	ldr	r2, [pc, #148]	; (8001678 <HAL_ADC_MspInit+0xb4>)
 80015e2:	4293      	cmp	r3, r2
 80015e4:	d144      	bne.n	8001670 <HAL_ADC_MspInit+0xac>
  {
  /* USER CODE BEGIN ADC3_MspInit 0 */

  /* USER CODE END ADC3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC3_CLK_ENABLE();
 80015e6:	4b25      	ldr	r3, [pc, #148]	; (800167c <HAL_ADC_MspInit+0xb8>)
 80015e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015ea:	4a24      	ldr	r2, [pc, #144]	; (800167c <HAL_ADC_MspInit+0xb8>)
 80015ec:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80015f0:	6453      	str	r3, [r2, #68]	; 0x44
 80015f2:	4b22      	ldr	r3, [pc, #136]	; (800167c <HAL_ADC_MspInit+0xb8>)
 80015f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015f6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80015fa:	613b      	str	r3, [r7, #16]
 80015fc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 80015fe:	4b1f      	ldr	r3, [pc, #124]	; (800167c <HAL_ADC_MspInit+0xb8>)
 8001600:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001602:	4a1e      	ldr	r2, [pc, #120]	; (800167c <HAL_ADC_MspInit+0xb8>)
 8001604:	f043 0320 	orr.w	r3, r3, #32
 8001608:	6313      	str	r3, [r2, #48]	; 0x30
 800160a:	4b1c      	ldr	r3, [pc, #112]	; (800167c <HAL_ADC_MspInit+0xb8>)
 800160c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800160e:	f003 0320 	and.w	r3, r3, #32
 8001612:	60fb      	str	r3, [r7, #12]
 8001614:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001616:	4b19      	ldr	r3, [pc, #100]	; (800167c <HAL_ADC_MspInit+0xb8>)
 8001618:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800161a:	4a18      	ldr	r2, [pc, #96]	; (800167c <HAL_ADC_MspInit+0xb8>)
 800161c:	f043 0301 	orr.w	r3, r3, #1
 8001620:	6313      	str	r3, [r2, #48]	; 0x30
 8001622:	4b16      	ldr	r3, [pc, #88]	; (800167c <HAL_ADC_MspInit+0xb8>)
 8001624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001626:	f003 0301 	and.w	r3, r3, #1
 800162a:	60bb      	str	r3, [r7, #8]
 800162c:	68bb      	ldr	r3, [r7, #8]
    PF6     ------> ADC3_IN4
    PF10     ------> ADC3_IN8
    PF8     ------> ADC3_IN6
    PA0/WKUP     ------> ADC3_IN0
    */
    GPIO_InitStruct.Pin = ARDUINO_A4_Pin|ARDUINO_A5_Pin|ARDUINO_A1_Pin|ARDUINO_A3_Pin;
 800162e:	f44f 63b8 	mov.w	r3, #1472	; 0x5c0
 8001632:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001634:	2303      	movs	r3, #3
 8001636:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001638:	2300      	movs	r3, #0
 800163a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800163c:	f107 0314 	add.w	r3, r7, #20
 8001640:	4619      	mov	r1, r3
 8001642:	480f      	ldr	r0, [pc, #60]	; (8001680 <HAL_ADC_MspInit+0xbc>)
 8001644:	f001 fef8 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001648:	2301      	movs	r3, #1
 800164a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800164c:	2303      	movs	r3, #3
 800164e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001650:	2300      	movs	r3, #0
 8001652:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001654:	f107 0314 	add.w	r3, r7, #20
 8001658:	4619      	mov	r1, r3
 800165a:	480a      	ldr	r0, [pc, #40]	; (8001684 <HAL_ADC_MspInit+0xc0>)
 800165c:	f001 feec 	bl	8003438 <HAL_GPIO_Init>

    /* ADC3 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 8001660:	2200      	movs	r2, #0
 8001662:	2100      	movs	r1, #0
 8001664:	2012      	movs	r0, #18
 8001666:	f001 fb59 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 800166a:	2012      	movs	r0, #18
 800166c:	f001 fb72 	bl	8002d54 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001670:	bf00      	nop
 8001672:	3728      	adds	r7, #40	; 0x28
 8001674:	46bd      	mov	sp, r7
 8001676:	bd80      	pop	{r7, pc}
 8001678:	40012200 	.word	0x40012200
 800167c:	40023800 	.word	0x40023800
 8001680:	40021400 	.word	0x40021400
 8001684:	40020000 	.word	0x40020000

08001688 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001688:	b480      	push	{r7}
 800168a:	b085      	sub	sp, #20
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001690:	687b      	ldr	r3, [r7, #4]
 8001692:	681b      	ldr	r3, [r3, #0]
 8001694:	4a0a      	ldr	r2, [pc, #40]	; (80016c0 <HAL_CRC_MspInit+0x38>)
 8001696:	4293      	cmp	r3, r2
 8001698:	d10b      	bne.n	80016b2 <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800169a:	4b0a      	ldr	r3, [pc, #40]	; (80016c4 <HAL_CRC_MspInit+0x3c>)
 800169c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800169e:	4a09      	ldr	r2, [pc, #36]	; (80016c4 <HAL_CRC_MspInit+0x3c>)
 80016a0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80016a4:	6313      	str	r3, [r2, #48]	; 0x30
 80016a6:	4b07      	ldr	r3, [pc, #28]	; (80016c4 <HAL_CRC_MspInit+0x3c>)
 80016a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016aa:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80016ae:	60fb      	str	r3, [r7, #12]
 80016b0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80016b2:	bf00      	nop
 80016b4:	3714      	adds	r7, #20
 80016b6:	46bd      	mov	sp, r7
 80016b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016bc:	4770      	bx	lr
 80016be:	bf00      	nop
 80016c0:	40023000 	.word	0x40023000
 80016c4:	40023800 	.word	0x40023800

080016c8 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80016c8:	b580      	push	{r7, lr}
 80016ca:	b084      	sub	sp, #16
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	6078      	str	r0, [r7, #4]
  if(hdma2d->Instance==DMA2D)
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	4a0d      	ldr	r2, [pc, #52]	; (800170c <HAL_DMA2D_MspInit+0x44>)
 80016d6:	4293      	cmp	r3, r2
 80016d8:	d113      	bne.n	8001702 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80016da:	4b0d      	ldr	r3, [pc, #52]	; (8001710 <HAL_DMA2D_MspInit+0x48>)
 80016dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016de:	4a0c      	ldr	r2, [pc, #48]	; (8001710 <HAL_DMA2D_MspInit+0x48>)
 80016e0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80016e4:	6313      	str	r3, [r2, #48]	; 0x30
 80016e6:	4b0a      	ldr	r3, [pc, #40]	; (8001710 <HAL_DMA2D_MspInit+0x48>)
 80016e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016ea:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80016ee:	60fb      	str	r3, [r7, #12]
 80016f0:	68fb      	ldr	r3, [r7, #12]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 80016f2:	2200      	movs	r2, #0
 80016f4:	2100      	movs	r1, #0
 80016f6:	205a      	movs	r0, #90	; 0x5a
 80016f8:	f001 fb10 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80016fc:	205a      	movs	r0, #90	; 0x5a
 80016fe:	f001 fb29 	bl	8002d54 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001702:	bf00      	nop
 8001704:	3710      	adds	r7, #16
 8001706:	46bd      	mov	sp, r7
 8001708:	bd80      	pop	{r7, pc}
 800170a:	bf00      	nop
 800170c:	4002b000 	.word	0x4002b000
 8001710:	40023800 	.word	0x40023800

08001714 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001714:	b580      	push	{r7, lr}
 8001716:	b0aa      	sub	sp, #168	; 0xa8
 8001718:	af00      	add	r7, sp, #0
 800171a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800171c:	f107 0394 	add.w	r3, r7, #148	; 0x94
 8001720:	2200      	movs	r2, #0
 8001722:	601a      	str	r2, [r3, #0]
 8001724:	605a      	str	r2, [r3, #4]
 8001726:	609a      	str	r2, [r3, #8]
 8001728:	60da      	str	r2, [r3, #12]
 800172a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800172c:	f107 0310 	add.w	r3, r7, #16
 8001730:	2284      	movs	r2, #132	; 0x84
 8001732:	2100      	movs	r1, #0
 8001734:	4618      	mov	r0, r3
 8001736:	f02a fc7d 	bl	802c034 <memset>
  if(hi2c->Instance==I2C3)
 800173a:	687b      	ldr	r3, [r7, #4]
 800173c:	681b      	ldr	r3, [r3, #0]
 800173e:	4a22      	ldr	r2, [pc, #136]	; (80017c8 <HAL_I2C_MspInit+0xb4>)
 8001740:	4293      	cmp	r3, r2
 8001742:	d13c      	bne.n	80017be <HAL_I2C_MspInit+0xaa>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8001744:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001748:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 800174a:	2300      	movs	r3, #0
 800174c:	67fb      	str	r3, [r7, #124]	; 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800174e:	f107 0310 	add.w	r3, r7, #16
 8001752:	4618      	mov	r0, r3
 8001754:	f004 f86c 	bl	8005830 <HAL_RCCEx_PeriphCLKConfig>
 8001758:	4603      	mov	r3, r0
 800175a:	2b00      	cmp	r3, #0
 800175c:	d001      	beq.n	8001762 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 800175e:	f7ff ff07 	bl	8001570 <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8001762:	4b1a      	ldr	r3, [pc, #104]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 8001764:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001766:	4a19      	ldr	r2, [pc, #100]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 8001768:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800176c:	6313      	str	r3, [r2, #48]	; 0x30
 800176e:	4b17      	ldr	r3, [pc, #92]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 8001770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001772:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001776:	60fb      	str	r3, [r7, #12]
 8001778:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = LCD_SCL_Pin|LCD_SDA_Pin;
 800177a:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800177e:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001782:	2312      	movs	r3, #18
 8001784:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001788:	2301      	movs	r3, #1
 800178a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800178e:	2303      	movs	r3, #3
 8001790:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001794:	2304      	movs	r3, #4
 8001796:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800179a:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800179e:	4619      	mov	r1, r3
 80017a0:	480b      	ldr	r0, [pc, #44]	; (80017d0 <HAL_I2C_MspInit+0xbc>)
 80017a2:	f001 fe49 	bl	8003438 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 80017a6:	4b09      	ldr	r3, [pc, #36]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 80017a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017aa:	4a08      	ldr	r2, [pc, #32]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 80017ac:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80017b0:	6413      	str	r3, [r2, #64]	; 0x40
 80017b2:	4b06      	ldr	r3, [pc, #24]	; (80017cc <HAL_I2C_MspInit+0xb8>)
 80017b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017b6:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80017ba:	60bb      	str	r3, [r7, #8]
 80017bc:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80017be:	bf00      	nop
 80017c0:	37a8      	adds	r7, #168	; 0xa8
 80017c2:	46bd      	mov	sp, r7
 80017c4:	bd80      	pop	{r7, pc}
 80017c6:	bf00      	nop
 80017c8:	40005c00 	.word	0x40005c00
 80017cc:	40023800 	.word	0x40023800
 80017d0:	40021c00 	.word	0x40021c00

080017d4 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 80017d4:	b580      	push	{r7, lr}
 80017d6:	b082      	sub	sp, #8
 80017d8:	af00      	add	r7, sp, #0
 80017da:	6078      	str	r0, [r7, #4]
  if(hi2c->Instance==I2C3)
 80017dc:	687b      	ldr	r3, [r7, #4]
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	4a0a      	ldr	r2, [pc, #40]	; (800180c <HAL_I2C_MspDeInit+0x38>)
 80017e2:	4293      	cmp	r3, r2
 80017e4:	d10e      	bne.n	8001804 <HAL_I2C_MspDeInit+0x30>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 80017e6:	4b0a      	ldr	r3, [pc, #40]	; (8001810 <HAL_I2C_MspDeInit+0x3c>)
 80017e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80017ea:	4a09      	ldr	r2, [pc, #36]	; (8001810 <HAL_I2C_MspDeInit+0x3c>)
 80017ec:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80017f0:	6413      	str	r3, [r2, #64]	; 0x40

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(LCD_SCL_GPIO_Port, LCD_SCL_Pin);
 80017f2:	2180      	movs	r1, #128	; 0x80
 80017f4:	4807      	ldr	r0, [pc, #28]	; (8001814 <HAL_I2C_MspDeInit+0x40>)
 80017f6:	f001 ffcb 	bl	8003790 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(LCD_SDA_GPIO_Port, LCD_SDA_Pin);
 80017fa:	f44f 7180 	mov.w	r1, #256	; 0x100
 80017fe:	4805      	ldr	r0, [pc, #20]	; (8001814 <HAL_I2C_MspDeInit+0x40>)
 8001800:	f001 ffc6 	bl	8003790 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }

}
 8001804:	bf00      	nop
 8001806:	3708      	adds	r7, #8
 8001808:	46bd      	mov	sp, r7
 800180a:	bd80      	pop	{r7, pc}
 800180c:	40005c00 	.word	0x40005c00
 8001810:	40023800 	.word	0x40023800
 8001814:	40021c00 	.word	0x40021c00

08001818 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001818:	b580      	push	{r7, lr}
 800181a:	b0ae      	sub	sp, #184	; 0xb8
 800181c:	af00      	add	r7, sp, #0
 800181e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001820:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8001824:	2200      	movs	r2, #0
 8001826:	601a      	str	r2, [r3, #0]
 8001828:	605a      	str	r2, [r3, #4]
 800182a:	609a      	str	r2, [r3, #8]
 800182c:	60da      	str	r2, [r3, #12]
 800182e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001830:	f107 0320 	add.w	r3, r7, #32
 8001834:	2284      	movs	r2, #132	; 0x84
 8001836:	2100      	movs	r1, #0
 8001838:	4618      	mov	r0, r3
 800183a:	f02a fbfb 	bl	802c034 <memset>
  if(hltdc->Instance==LTDC)
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	681b      	ldr	r3, [r3, #0]
 8001842:	4a6f      	ldr	r2, [pc, #444]	; (8001a00 <HAL_LTDC_MspInit+0x1e8>)
 8001844:	4293      	cmp	r3, r2
 8001846:	f040 80d6 	bne.w	80019f6 <HAL_LTDC_MspInit+0x1de>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 800184a:	2308      	movs	r3, #8
 800184c:	623b      	str	r3, [r7, #32]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 800184e:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001852:	637b      	str	r3, [r7, #52]	; 0x34
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8001854:	2305      	movs	r3, #5
 8001856:	63fb      	str	r3, [r7, #60]	; 0x3c
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8001858:	2302      	movs	r3, #2
 800185a:	63bb      	str	r3, [r7, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV8;
 800185c:	2303      	movs	r3, #3
 800185e:	643b      	str	r3, [r7, #64]	; 0x40
    PeriphClkInitStruct.PLLSAIDivQ = 1;
 8001860:	2301      	movs	r3, #1
 8001862:	64bb      	str	r3, [r7, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001864:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8001868:	64fb      	str	r3, [r7, #76]	; 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800186a:	f107 0320 	add.w	r3, r7, #32
 800186e:	4618      	mov	r0, r3
 8001870:	f003 ffde 	bl	8005830 <HAL_RCCEx_PeriphCLKConfig>
 8001874:	4603      	mov	r3, r0
 8001876:	2b00      	cmp	r3, #0
 8001878:	d001      	beq.n	800187e <HAL_LTDC_MspInit+0x66>
    {
      Error_Handler();
 800187a:	f7ff fe79 	bl	8001570 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 800187e:	4b61      	ldr	r3, [pc, #388]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 8001880:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001882:	4a60      	ldr	r2, [pc, #384]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 8001884:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001888:	6453      	str	r3, [r2, #68]	; 0x44
 800188a:	4b5e      	ldr	r3, [pc, #376]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 800188c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800188e:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001892:	61fb      	str	r3, [r7, #28]
 8001894:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001896:	4b5b      	ldr	r3, [pc, #364]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800189a:	4a5a      	ldr	r2, [pc, #360]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 800189c:	f043 0310 	orr.w	r3, r3, #16
 80018a0:	6313      	str	r3, [r2, #48]	; 0x30
 80018a2:	4b58      	ldr	r3, [pc, #352]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018a6:	f003 0310 	and.w	r3, r3, #16
 80018aa:	61bb      	str	r3, [r7, #24]
 80018ac:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80018ae:	4b55      	ldr	r3, [pc, #340]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018b2:	4a54      	ldr	r2, [pc, #336]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018b4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80018b8:	6313      	str	r3, [r2, #48]	; 0x30
 80018ba:	4b52      	ldr	r3, [pc, #328]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018be:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80018c2:	617b      	str	r3, [r7, #20]
 80018c4:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 80018c6:	4b4f      	ldr	r3, [pc, #316]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ca:	4a4e      	ldr	r2, [pc, #312]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018cc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80018d0:	6313      	str	r3, [r2, #48]	; 0x30
 80018d2:	4b4c      	ldr	r3, [pc, #304]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018d6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80018da:	613b      	str	r3, [r7, #16]
 80018dc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80018de:	4b49      	ldr	r3, [pc, #292]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018e2:	4a48      	ldr	r2, [pc, #288]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80018e8:	6313      	str	r3, [r2, #48]	; 0x30
 80018ea:	4b46      	ldr	r3, [pc, #280]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80018f2:	60fb      	str	r3, [r7, #12]
 80018f4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 80018f6:	4b43      	ldr	r3, [pc, #268]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018fa:	4a42      	ldr	r2, [pc, #264]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 80018fc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001900:	6313      	str	r3, [r2, #48]	; 0x30
 8001902:	4b40      	ldr	r3, [pc, #256]	; (8001a04 <HAL_LTDC_MspInit+0x1ec>)
 8001904:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001906:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800190a:	60bb      	str	r3, [r7, #8]
 800190c:	68bb      	ldr	r3, [r7, #8]
    PJ3     ------> LTDC_R4
    PJ2     ------> LTDC_R3
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = LCD_B0_Pin;
 800190e:	2310      	movs	r3, #16
 8001910:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001914:	2302      	movs	r3, #2
 8001916:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800191a:	2300      	movs	r3, #0
 800191c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001920:	2300      	movs	r3, #0
 8001922:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001926:	230e      	movs	r3, #14
 8001928:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(LCD_B0_GPIO_Port, &GPIO_InitStruct);
 800192c:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8001930:	4619      	mov	r1, r3
 8001932:	4835      	ldr	r0, [pc, #212]	; (8001a08 <HAL_LTDC_MspInit+0x1f0>)
 8001934:	f001 fd80 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = LCD_B1_Pin|LCD_B2_Pin|LCD_B3_Pin|LCD_G4_Pin
 8001938:	f64e 73ff 	movw	r3, #61439	; 0xefff
 800193c:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
                          |LCD_G1_Pin|LCD_G3_Pin|LCD_G0_Pin|LCD_G2_Pin
                          |LCD_R7_Pin|LCD_R5_Pin|LCD_R6_Pin|LCD_R4_Pin
                          |LCD_R3_Pin|LCD_R1_Pin|LCD_R2_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001940:	2302      	movs	r3, #2
 8001942:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001946:	2300      	movs	r3, #0
 8001948:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800194c:	2300      	movs	r3, #0
 800194e:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001952:	230e      	movs	r3, #14
 8001954:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001958:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 800195c:	4619      	mov	r1, r3
 800195e:	482b      	ldr	r0, [pc, #172]	; (8001a0c <HAL_LTDC_MspInit+0x1f4>)
 8001960:	f001 fd6a 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = LCD_DE_Pin|LCD_B7_Pin|LCD_B6_Pin|LCD_B5_Pin
 8001964:	23f7      	movs	r3, #247	; 0xf7
 8001966:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
                          |LCD_G6_Pin|LCD_G7_Pin|LCD_G5_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800196a:	2302      	movs	r3, #2
 800196c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001970:	2300      	movs	r3, #0
 8001972:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001976:	2300      	movs	r3, #0
 8001978:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800197c:	230e      	movs	r3, #14
 800197e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001982:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 8001986:	4619      	mov	r1, r3
 8001988:	4821      	ldr	r0, [pc, #132]	; (8001a10 <HAL_LTDC_MspInit+0x1f8>)
 800198a:	f001 fd55 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = LCD_B4_Pin;
 800198e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001992:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001996:	2302      	movs	r3, #2
 8001998:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800199c:	2300      	movs	r3, #0
 800199e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019a2:	2300      	movs	r3, #0
 80019a4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80019a8:	2309      	movs	r3, #9
 80019aa:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(LCD_B4_GPIO_Port, &GPIO_InitStruct);
 80019ae:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80019b2:	4619      	mov	r1, r3
 80019b4:	4817      	ldr	r0, [pc, #92]	; (8001a14 <HAL_LTDC_MspInit+0x1fc>)
 80019b6:	f001 fd3f 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = LCD_HSYNC_Pin|LCD_VSYNC_Pin|LCD_R0_Pin|LCD_CLK_Pin;
 80019ba:	f44f 4346 	mov.w	r3, #50688	; 0xc600
 80019be:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019c2:	2302      	movs	r3, #2
 80019c4:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019c8:	2300      	movs	r3, #0
 80019ca:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019ce:	2300      	movs	r3, #0
 80019d0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80019d4:	230e      	movs	r3, #14
 80019d6:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80019da:	f107 03a4 	add.w	r3, r7, #164	; 0xa4
 80019de:	4619      	mov	r1, r3
 80019e0:	480d      	ldr	r0, [pc, #52]	; (8001a18 <HAL_LTDC_MspInit+0x200>)
 80019e2:	f001 fd29 	bl	8003438 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 80019e6:	2200      	movs	r2, #0
 80019e8:	2100      	movs	r1, #0
 80019ea:	2058      	movs	r0, #88	; 0x58
 80019ec:	f001 f996 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80019f0:	2058      	movs	r0, #88	; 0x58
 80019f2:	f001 f9af 	bl	8002d54 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80019f6:	bf00      	nop
 80019f8:	37b8      	adds	r7, #184	; 0xb8
 80019fa:	46bd      	mov	sp, r7
 80019fc:	bd80      	pop	{r7, pc}
 80019fe:	bf00      	nop
 8001a00:	40016800 	.word	0x40016800
 8001a04:	40023800 	.word	0x40023800
 8001a08:	40021000 	.word	0x40021000
 8001a0c:	40022400 	.word	0x40022400
 8001a10:	40022800 	.word	0x40022800
 8001a14:	40021800 	.word	0x40021800
 8001a18:	40022000 	.word	0x40022000

08001a1c <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001a1c:	b580      	push	{r7, lr}
 8001a1e:	b08a      	sub	sp, #40	; 0x28
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a24:	f107 0314 	add.w	r3, r7, #20
 8001a28:	2200      	movs	r2, #0
 8001a2a:	601a      	str	r2, [r3, #0]
 8001a2c:	605a      	str	r2, [r3, #4]
 8001a2e:	609a      	str	r2, [r3, #8]
 8001a30:	60da      	str	r2, [r3, #12]
 8001a32:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	681b      	ldr	r3, [r3, #0]
 8001a38:	4a25      	ldr	r2, [pc, #148]	; (8001ad0 <HAL_SPI_MspInit+0xb4>)
 8001a3a:	4293      	cmp	r3, r2
 8001a3c:	d144      	bne.n	8001ac8 <HAL_SPI_MspInit+0xac>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001a3e:	4b25      	ldr	r3, [pc, #148]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a42:	4a24      	ldr	r2, [pc, #144]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a44:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001a48:	6413      	str	r3, [r2, #64]	; 0x40
 8001a4a:	4b22      	ldr	r3, [pc, #136]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a4e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001a52:	613b      	str	r3, [r7, #16]
 8001a54:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOI_CLK_ENABLE();
 8001a56:	4b1f      	ldr	r3, [pc, #124]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a5a:	4a1e      	ldr	r2, [pc, #120]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001a60:	6313      	str	r3, [r2, #48]	; 0x30
 8001a62:	4b1c      	ldr	r3, [pc, #112]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a66:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001a6a:	60fb      	str	r3, [r7, #12]
 8001a6c:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a6e:	4b19      	ldr	r3, [pc, #100]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a72:	4a18      	ldr	r2, [pc, #96]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a74:	f043 0302 	orr.w	r3, r3, #2
 8001a78:	6313      	str	r3, [r2, #48]	; 0x30
 8001a7a:	4b16      	ldr	r3, [pc, #88]	; (8001ad4 <HAL_SPI_MspInit+0xb8>)
 8001a7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a7e:	f003 0302 	and.w	r3, r3, #2
 8001a82:	60bb      	str	r3, [r7, #8]
 8001a84:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PI1     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = ARDUINO_SCK_D13_Pin;
 8001a86:	2302      	movs	r3, #2
 8001a88:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8a:	2302      	movs	r3, #2
 8001a8c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a92:	2300      	movs	r3, #0
 8001a94:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001a96:	2305      	movs	r3, #5
 8001a98:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(ARDUINO_SCK_D13_GPIO_Port, &GPIO_InitStruct);
 8001a9a:	f107 0314 	add.w	r3, r7, #20
 8001a9e:	4619      	mov	r1, r3
 8001aa0:	480d      	ldr	r0, [pc, #52]	; (8001ad8 <HAL_SPI_MspInit+0xbc>)
 8001aa2:	f001 fcc9 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin|ARDUINO_MOSI_PWM_D11_Pin;
 8001aa6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001aaa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aac:	2302      	movs	r3, #2
 8001aae:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ab0:	2300      	movs	r3, #0
 8001ab2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ab4:	2300      	movs	r3, #0
 8001ab6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001ab8:	2305      	movs	r3, #5
 8001aba:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001abc:	f107 0314 	add.w	r3, r7, #20
 8001ac0:	4619      	mov	r1, r3
 8001ac2:	4806      	ldr	r0, [pc, #24]	; (8001adc <HAL_SPI_MspInit+0xc0>)
 8001ac4:	f001 fcb8 	bl	8003438 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8001ac8:	bf00      	nop
 8001aca:	3728      	adds	r7, #40	; 0x28
 8001acc:	46bd      	mov	sp, r7
 8001ace:	bd80      	pop	{r7, pc}
 8001ad0:	40003800 	.word	0x40003800
 8001ad4:	40023800 	.word	0x40023800
 8001ad8:	40022000 	.word	0x40022000
 8001adc:	40020400 	.word	0x40020400

08001ae0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b08a      	sub	sp, #40	; 0x28
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ae8:	f107 0314 	add.w	r3, r7, #20
 8001aec:	2200      	movs	r2, #0
 8001aee:	601a      	str	r2, [r3, #0]
 8001af0:	605a      	str	r2, [r3, #4]
 8001af2:	609a      	str	r2, [r3, #8]
 8001af4:	60da      	str	r2, [r3, #12]
 8001af6:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 8001af8:	687b      	ldr	r3, [r7, #4]
 8001afa:	681b      	ldr	r3, [r3, #0]
 8001afc:	4a27      	ldr	r2, [pc, #156]	; (8001b9c <HAL_TIM_Base_MspInit+0xbc>)
 8001afe:	4293      	cmp	r3, r2
 8001b00:	d148      	bne.n	8001b94 <HAL_TIM_Base_MspInit+0xb4>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001b02:	4b27      	ldr	r3, [pc, #156]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b06:	4a26      	ldr	r2, [pc, #152]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b08:	f043 0301 	orr.w	r3, r3, #1
 8001b0c:	6453      	str	r3, [r2, #68]	; 0x44
 8001b0e:	4b24      	ldr	r3, [pc, #144]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b12:	f003 0301 	and.w	r3, r3, #1
 8001b16:	613b      	str	r3, [r7, #16]
 8001b18:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b1a:	4b21      	ldr	r3, [pc, #132]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b1e:	4a20      	ldr	r2, [pc, #128]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b20:	f043 0301 	orr.w	r3, r3, #1
 8001b24:	6313      	str	r3, [r2, #48]	; 0x30
 8001b26:	4b1e      	ldr	r3, [pc, #120]	; (8001ba0 <HAL_TIM_Base_MspInit+0xc0>)
 8001b28:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b2a:	f003 0301 	and.w	r3, r3, #1
 8001b2e:	60fb      	str	r3, [r7, #12]
 8001b30:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = LED2_Pin;
 8001b32:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001b36:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b38:	2302      	movs	r3, #2
 8001b3a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b3c:	2300      	movs	r3, #0
 8001b3e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001b40:	2300      	movs	r3, #0
 8001b42:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001b44:	2301      	movs	r3, #1
 8001b46:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(LED2_GPIO_Port, &GPIO_InitStruct);
 8001b48:	f107 0314 	add.w	r3, r7, #20
 8001b4c:	4619      	mov	r1, r3
 8001b4e:	4815      	ldr	r0, [pc, #84]	; (8001ba4 <HAL_TIM_Base_MspInit+0xc4>)
 8001b50:	f001 fc72 	bl	8003438 <HAL_GPIO_Init>

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_TIM9_IRQn, 0, 0);
 8001b54:	2200      	movs	r2, #0
 8001b56:	2100      	movs	r1, #0
 8001b58:	2018      	movs	r0, #24
 8001b5a:	f001 f8df 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM9_IRQn);
 8001b5e:	2018      	movs	r0, #24
 8001b60:	f001 f8f8 	bl	8002d54 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_UP_TIM10_IRQn, 0, 0);
 8001b64:	2200      	movs	r2, #0
 8001b66:	2100      	movs	r1, #0
 8001b68:	2019      	movs	r0, #25
 8001b6a:	f001 f8d7 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_UP_TIM10_IRQn);
 8001b6e:	2019      	movs	r0, #25
 8001b70:	f001 f8f0 	bl	8002d54 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM11_IRQn, 0, 0);
 8001b74:	2200      	movs	r2, #0
 8001b76:	2100      	movs	r1, #0
 8001b78:	201a      	movs	r0, #26
 8001b7a:	f001 f8cf 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM11_IRQn);
 8001b7e:	201a      	movs	r0, #26
 8001b80:	f001 f8e8 	bl	8002d54 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
 8001b84:	2200      	movs	r2, #0
 8001b86:	2100      	movs	r1, #0
 8001b88:	201b      	movs	r0, #27
 8001b8a:	f001 f8c7 	bl	8002d1c <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 8001b8e:	201b      	movs	r0, #27
 8001b90:	f001 f8e0 	bl	8002d54 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 8001b94:	bf00      	nop
 8001b96:	3728      	adds	r7, #40	; 0x28
 8001b98:	46bd      	mov	sp, r7
 8001b9a:	bd80      	pop	{r7, pc}
 8001b9c:	40010000 	.word	0x40010000
 8001ba0:	40023800 	.word	0x40023800
 8001ba4:	40020000 	.word	0x40020000

08001ba8 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001ba8:	b580      	push	{r7, lr}
 8001baa:	b0ac      	sub	sp, #176	; 0xb0
 8001bac:	af00      	add	r7, sp, #0
 8001bae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bb0:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8001bb4:	2200      	movs	r2, #0
 8001bb6:	601a      	str	r2, [r3, #0]
 8001bb8:	605a      	str	r2, [r3, #4]
 8001bba:	609a      	str	r2, [r3, #8]
 8001bbc:	60da      	str	r2, [r3, #12]
 8001bbe:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001bc0:	f107 0318 	add.w	r3, r7, #24
 8001bc4:	2284      	movs	r2, #132	; 0x84
 8001bc6:	2100      	movs	r1, #0
 8001bc8:	4618      	mov	r0, r3
 8001bca:	f02a fa33 	bl	802c034 <memset>
  if(huart->Instance==USART1)
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	4a32      	ldr	r2, [pc, #200]	; (8001c9c <HAL_UART_MspInit+0xf4>)
 8001bd4:	4293      	cmp	r3, r2
 8001bd6:	d15c      	bne.n	8001c92 <HAL_UART_MspInit+0xea>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001bd8:	2340      	movs	r3, #64	; 0x40
 8001bda:	61bb      	str	r3, [r7, #24]
    PeriphClkInitStruct.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8001bdc:	2300      	movs	r3, #0
 8001bde:	65fb      	str	r3, [r7, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001be0:	f107 0318 	add.w	r3, r7, #24
 8001be4:	4618      	mov	r0, r3
 8001be6:	f003 fe23 	bl	8005830 <HAL_RCCEx_PeriphCLKConfig>
 8001bea:	4603      	mov	r3, r0
 8001bec:	2b00      	cmp	r3, #0
 8001bee:	d001      	beq.n	8001bf4 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001bf0:	f7ff fcbe 	bl	8001570 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001bf4:	4b2a      	ldr	r3, [pc, #168]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001bf6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001bf8:	4a29      	ldr	r2, [pc, #164]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001bfa:	f043 0310 	orr.w	r3, r3, #16
 8001bfe:	6453      	str	r3, [r2, #68]	; 0x44
 8001c00:	4b27      	ldr	r3, [pc, #156]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c04:	f003 0310 	and.w	r3, r3, #16
 8001c08:	617b      	str	r3, [r7, #20]
 8001c0a:	697b      	ldr	r3, [r7, #20]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c0c:	4b24      	ldr	r3, [pc, #144]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c10:	4a23      	ldr	r2, [pc, #140]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c12:	f043 0302 	orr.w	r3, r3, #2
 8001c16:	6313      	str	r3, [r2, #48]	; 0x30
 8001c18:	4b21      	ldr	r3, [pc, #132]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c1c:	f003 0302 	and.w	r3, r3, #2
 8001c20:	613b      	str	r3, [r7, #16]
 8001c22:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c24:	4b1e      	ldr	r3, [pc, #120]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c28:	4a1d      	ldr	r2, [pc, #116]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c2a:	f043 0301 	orr.w	r3, r3, #1
 8001c2e:	6313      	str	r3, [r2, #48]	; 0x30
 8001c30:	4b1b      	ldr	r3, [pc, #108]	; (8001ca0 <HAL_UART_MspInit+0xf8>)
 8001c32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c34:	f003 0301 	and.w	r3, r3, #1
 8001c38:	60fb      	str	r3, [r7, #12]
 8001c3a:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration
    PB7     ------> USART1_RX
    PA9     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = VCP_RX_Pin;
 8001c3c:	2380      	movs	r3, #128	; 0x80
 8001c3e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c42:	2302      	movs	r3, #2
 8001c44:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c48:	2300      	movs	r3, #0
 8001c4a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c4e:	2300      	movs	r3, #0
 8001c50:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001c54:	2307      	movs	r3, #7
 8001c56:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 8001c5a:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8001c5e:	4619      	mov	r1, r3
 8001c60:	4810      	ldr	r0, [pc, #64]	; (8001ca4 <HAL_UART_MspInit+0xfc>)
 8001c62:	f001 fbe9 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = VCP_TX_Pin;
 8001c66:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001c6a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c6e:	2302      	movs	r3, #2
 8001c70:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c74:	2300      	movs	r3, #0
 8001c76:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001c80:	2307      	movs	r3, #7
 8001c82:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
    HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 8001c86:	f107 039c 	add.w	r3, r7, #156	; 0x9c
 8001c8a:	4619      	mov	r1, r3
 8001c8c:	4806      	ldr	r0, [pc, #24]	; (8001ca8 <HAL_UART_MspInit+0x100>)
 8001c8e:	f001 fbd3 	bl	8003438 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8001c92:	bf00      	nop
 8001c94:	37b0      	adds	r7, #176	; 0xb0
 8001c96:	46bd      	mov	sp, r7
 8001c98:	bd80      	pop	{r7, pc}
 8001c9a:	bf00      	nop
 8001c9c:	40011000 	.word	0x40011000
 8001ca0:	40023800 	.word	0x40023800
 8001ca4:	40020400 	.word	0x40020400
 8001ca8:	40020000 	.word	0x40020000

08001cac <HAL_FMC_MspInit>:

}

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8001cac:	b580      	push	{r7, lr}
 8001cae:	b086      	sub	sp, #24
 8001cb0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001cb2:	1d3b      	adds	r3, r7, #4
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	601a      	str	r2, [r3, #0]
 8001cb8:	605a      	str	r2, [r3, #4]
 8001cba:	609a      	str	r2, [r3, #8]
 8001cbc:	60da      	str	r2, [r3, #12]
 8001cbe:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8001cc0:	4b3a      	ldr	r3, [pc, #232]	; (8001dac <HAL_FMC_MspInit+0x100>)
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	2b00      	cmp	r3, #0
 8001cc6:	d16d      	bne.n	8001da4 <HAL_FMC_MspInit+0xf8>
    return;
  }
  FMC_Initialized = 1;
 8001cc8:	4b38      	ldr	r3, [pc, #224]	; (8001dac <HAL_FMC_MspInit+0x100>)
 8001cca:	2201      	movs	r2, #1
 8001ccc:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cce:	4b38      	ldr	r3, [pc, #224]	; (8001db0 <HAL_FMC_MspInit+0x104>)
 8001cd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001cd2:	4a37      	ldr	r2, [pc, #220]	; (8001db0 <HAL_FMC_MspInit+0x104>)
 8001cd4:	f043 0301 	orr.w	r3, r3, #1
 8001cd8:	6393      	str	r3, [r2, #56]	; 0x38
 8001cda:	4b35      	ldr	r3, [pc, #212]	; (8001db0 <HAL_FMC_MspInit+0x104>)
 8001cdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001cde:	f003 0301 	and.w	r3, r3, #1
 8001ce2:	603b      	str	r3, [r7, #0]
 8001ce4:	683b      	ldr	r3, [r7, #0]
  PE10   ------> FMC_D7
  PE12   ------> FMC_D9
  PE15   ------> FMC_D12
  PE13   ------> FMC_D10
  */
  GPIO_InitStruct.Pin = FMC_NBL1_Pin|FMC_NBL0_Pin|FMC_D5_Pin|FMC_D6_Pin
 8001ce6:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001cea:	607b      	str	r3, [r7, #4]
                          |FMC_D8_Pin|FMC_D11_Pin|FMC_D4_Pin|FMC_D7_Pin
                          |FMC_D9_Pin|FMC_D12_Pin|FMC_D10_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cec:	2302      	movs	r3, #2
 8001cee:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cf0:	2300      	movs	r3, #0
 8001cf2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cf4:	2303      	movs	r3, #3
 8001cf6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cf8:	230c      	movs	r3, #12
 8001cfa:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cfc:	1d3b      	adds	r3, r7, #4
 8001cfe:	4619      	mov	r1, r3
 8001d00:	482c      	ldr	r0, [pc, #176]	; (8001db4 <HAL_FMC_MspInit+0x108>)
 8001d02:	f001 fb99 	bl	8003438 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDNCAS_Pin|FMC_SDCLK_Pin|FMC_A11_Pin|FMC_A10_Pin
 8001d06:	f248 1333 	movw	r3, #33075	; 0x8133
 8001d0a:	607b      	str	r3, [r7, #4]
                          |FMC_BA1_Pin|FMC_BA0_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0c:	2302      	movs	r3, #2
 8001d0e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d10:	2300      	movs	r3, #0
 8001d12:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d14:	2303      	movs	r3, #3
 8001d16:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d18:	230c      	movs	r3, #12
 8001d1a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d1c:	1d3b      	adds	r3, r7, #4
 8001d1e:	4619      	mov	r1, r3
 8001d20:	4825      	ldr	r0, [pc, #148]	; (8001db8 <HAL_FMC_MspInit+0x10c>)
 8001d22:	f001 fb89 	bl	8003438 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_D2_Pin|FMC_D3_Pin|FMC_D1_Pin|FMC_D15_Pin
 8001d26:	f24c 7303 	movw	r3, #50947	; 0xc703
 8001d2a:	607b      	str	r3, [r7, #4]
                          |FMC_D0_Pin|FMC_D14_Pin|FMC_D13_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d2c:	2302      	movs	r3, #2
 8001d2e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d30:	2300      	movs	r3, #0
 8001d32:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d34:	2303      	movs	r3, #3
 8001d36:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d38:	230c      	movs	r3, #12
 8001d3a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3c:	1d3b      	adds	r3, r7, #4
 8001d3e:	4619      	mov	r1, r3
 8001d40:	481e      	ldr	r0, [pc, #120]	; (8001dbc <HAL_FMC_MspInit+0x110>)
 8001d42:	f001 fb79 	bl	8003438 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_A0_Pin|FMC_A1_Pin|FMC_A2_Pin|FMC_A3_Pin
 8001d46:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001d4a:	607b      	str	r3, [r7, #4]
                          |FMC_A4_Pin|FMC_A5_Pin|FMC_A6_Pin|FMC_A9_Pin
                          |FMC_A7_Pin|FMC_A8_Pin|FMC_SDNRAS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4c:	2302      	movs	r3, #2
 8001d4e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d50:	2300      	movs	r3, #0
 8001d52:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d54:	2303      	movs	r3, #3
 8001d56:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d58:	230c      	movs	r3, #12
 8001d5a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d5c:	1d3b      	adds	r3, r7, #4
 8001d5e:	4619      	mov	r1, r3
 8001d60:	4817      	ldr	r0, [pc, #92]	; (8001dc0 <HAL_FMC_MspInit+0x114>)
 8001d62:	f001 fb69 	bl	8003438 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDNME_Pin|FMC_SDNE0_Pin;
 8001d66:	2328      	movs	r3, #40	; 0x28
 8001d68:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d6a:	2302      	movs	r3, #2
 8001d6c:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d6e:	2300      	movs	r3, #0
 8001d70:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d72:	2303      	movs	r3, #3
 8001d74:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d76:	230c      	movs	r3, #12
 8001d78:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d7a:	1d3b      	adds	r3, r7, #4
 8001d7c:	4619      	mov	r1, r3
 8001d7e:	4811      	ldr	r0, [pc, #68]	; (8001dc4 <HAL_FMC_MspInit+0x118>)
 8001d80:	f001 fb5a 	bl	8003438 <HAL_GPIO_Init>

  GPIO_InitStruct.Pin = FMC_SDCKE0_Pin;
 8001d84:	2308      	movs	r3, #8
 8001d86:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d88:	2302      	movs	r3, #2
 8001d8a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d8c:	2300      	movs	r3, #0
 8001d8e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d90:	2303      	movs	r3, #3
 8001d92:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d94:	230c      	movs	r3, #12
 8001d96:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(FMC_SDCKE0_GPIO_Port, &GPIO_InitStruct);
 8001d98:	1d3b      	adds	r3, r7, #4
 8001d9a:	4619      	mov	r1, r3
 8001d9c:	480a      	ldr	r0, [pc, #40]	; (8001dc8 <HAL_FMC_MspInit+0x11c>)
 8001d9e:	f001 fb4b 	bl	8003438 <HAL_GPIO_Init>
 8001da2:	e000      	b.n	8001da6 <HAL_FMC_MspInit+0xfa>
    return;
 8001da4:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8001da6:	3718      	adds	r7, #24
 8001da8:	46bd      	mov	sp, r7
 8001daa:	bd80      	pop	{r7, pc}
 8001dac:	20000458 	.word	0x20000458
 8001db0:	40023800 	.word	0x40023800
 8001db4:	40021000 	.word	0x40021000
 8001db8:	40021800 	.word	0x40021800
 8001dbc:	40020c00 	.word	0x40020c00
 8001dc0:	40021400 	.word	0x40021400
 8001dc4:	40021c00 	.word	0x40021c00
 8001dc8:	40020800 	.word	0x40020800

08001dcc <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	b082      	sub	sp, #8
 8001dd0:	af00      	add	r7, sp, #0
 8001dd2:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8001dd4:	f7ff ff6a 	bl	8001cac <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001dd8:	bf00      	nop
 8001dda:	3708      	adds	r7, #8
 8001ddc:	46bd      	mov	sp, r7
 8001dde:	bd80      	pop	{r7, pc}

08001de0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001de0:	b580      	push	{r7, lr}
 8001de2:	b08c      	sub	sp, #48	; 0x30
 8001de4:	af00      	add	r7, sp, #0
 8001de6:	6078      	str	r0, [r7, #4]
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
 8001de8:	2300      	movs	r3, #0
 8001dea:	62fb      	str	r3, [r7, #44]	; 0x2c
  uint32_t              uwPrescalerValue = 0;
 8001dec:	2300      	movs	r3, #0
 8001dee:	62bb      	str	r3, [r7, #40]	; 0x28
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001df0:	2200      	movs	r2, #0
 8001df2:	6879      	ldr	r1, [r7, #4]
 8001df4:	2036      	movs	r0, #54	; 0x36
 8001df6:	f000 ff91 	bl	8002d1c <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001dfa:	2036      	movs	r0, #54	; 0x36
 8001dfc:	f000 ffaa 	bl	8002d54 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e00:	4b1f      	ldr	r3, [pc, #124]	; (8001e80 <HAL_InitTick+0xa0>)
 8001e02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e04:	4a1e      	ldr	r2, [pc, #120]	; (8001e80 <HAL_InitTick+0xa0>)
 8001e06:	f043 0310 	orr.w	r3, r3, #16
 8001e0a:	6413      	str	r3, [r2, #64]	; 0x40
 8001e0c:	4b1c      	ldr	r3, [pc, #112]	; (8001e80 <HAL_InitTick+0xa0>)
 8001e0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e10:	f003 0310 	and.w	r3, r3, #16
 8001e14:	60fb      	str	r3, [r7, #12]
 8001e16:	68fb      	ldr	r3, [r7, #12]

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e18:	f107 0210 	add.w	r2, r7, #16
 8001e1c:	f107 0314 	add.w	r3, r7, #20
 8001e20:	4611      	mov	r1, r2
 8001e22:	4618      	mov	r0, r3
 8001e24:	f003 fcd2 	bl	80057cc <HAL_RCC_GetClockConfig>

  /* Compute TIM6 clock */
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e28:	f003 fca8 	bl	800577c <HAL_RCC_GetPCLK1Freq>
 8001e2c:	4603      	mov	r3, r0
 8001e2e:	005b      	lsls	r3, r3, #1
 8001e30:	62fb      	str	r3, [r7, #44]	; 0x2c
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001e34:	4a13      	ldr	r2, [pc, #76]	; (8001e84 <HAL_InitTick+0xa4>)
 8001e36:	fba2 2303 	umull	r2, r3, r2, r3
 8001e3a:	0c9b      	lsrs	r3, r3, #18
 8001e3c:	3b01      	subs	r3, #1
 8001e3e:	62bb      	str	r3, [r7, #40]	; 0x28

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e40:	4b11      	ldr	r3, [pc, #68]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e42:	4a12      	ldr	r2, [pc, #72]	; (8001e8c <HAL_InitTick+0xac>)
 8001e44:	601a      	str	r2, [r3, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e46:	4b10      	ldr	r3, [pc, #64]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e48:	f240 32e7 	movw	r2, #999	; 0x3e7
 8001e4c:	60da      	str	r2, [r3, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e4e:	4a0e      	ldr	r2, [pc, #56]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e50:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001e52:	6053      	str	r3, [r2, #4]
  htim6.Init.ClockDivision = 0;
 8001e54:	4b0c      	ldr	r3, [pc, #48]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e56:	2200      	movs	r2, #0
 8001e58:	611a      	str	r2, [r3, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e5a:	4b0b      	ldr	r3, [pc, #44]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e5c:	2200      	movs	r2, #0
 8001e5e:	609a      	str	r2, [r3, #8]

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e60:	4809      	ldr	r0, [pc, #36]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e62:	f004 fd07 	bl	8006874 <HAL_TIM_Base_Init>
 8001e66:	4603      	mov	r3, r0
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d104      	bne.n	8001e76 <HAL_InitTick+0x96>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e6c:	4806      	ldr	r0, [pc, #24]	; (8001e88 <HAL_InitTick+0xa8>)
 8001e6e:	f004 fd59 	bl	8006924 <HAL_TIM_Base_Start_IT>
 8001e72:	4603      	mov	r3, r0
 8001e74:	e000      	b.n	8001e78 <HAL_InitTick+0x98>
  }

  /* Return function status */
  return HAL_ERROR;
 8001e76:	2301      	movs	r3, #1
}
 8001e78:	4618      	mov	r0, r3
 8001e7a:	3730      	adds	r7, #48	; 0x30
 8001e7c:	46bd      	mov	sp, r7
 8001e7e:	bd80      	pop	{r7, pc}
 8001e80:	40023800 	.word	0x40023800
 8001e84:	431bde83 	.word	0x431bde83
 8001e88:	2000045c 	.word	0x2000045c
 8001e8c:	40001000 	.word	0x40001000

08001e90 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001e90:	b480      	push	{r7}
 8001e92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001e94:	e7fe      	b.n	8001e94 <NMI_Handler+0x4>

08001e96 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001e96:	b480      	push	{r7}
 8001e98:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001e9a:	e7fe      	b.n	8001e9a <HardFault_Handler+0x4>

08001e9c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001e9c:	b480      	push	{r7}
 8001e9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001ea0:	e7fe      	b.n	8001ea0 <MemManage_Handler+0x4>

08001ea2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001ea2:	b480      	push	{r7}
 8001ea4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001ea6:	e7fe      	b.n	8001ea6 <BusFault_Handler+0x4>

08001ea8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001ea8:	b480      	push	{r7}
 8001eaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001eac:	e7fe      	b.n	8001eac <UsageFault_Handler+0x4>

08001eae <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001eae:	b480      	push	{r7}
 8001eb0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001eb2:	bf00      	nop
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eba:	4770      	bx	lr

08001ebc <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001ebc:	b480      	push	{r7}
 8001ebe:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001ec0:	bf00      	nop
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec8:	4770      	bx	lr

08001eca <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001eca:	b480      	push	{r7}
 8001ecc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001ece:	bf00      	nop
 8001ed0:	46bd      	mov	sp, r7
 8001ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed6:	4770      	bx	lr

08001ed8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001ed8:	b480      	push	{r7}
 8001eda:	af00      	add	r7, sp, #0
  /* USER CODE END SysTick_IRQn 0 */

  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001edc:	bf00      	nop
 8001ede:	46bd      	mov	sp, r7
 8001ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ee4:	4770      	bx	lr

08001ee6 <EXTI2_IRQHandler>:

/**
  * @brief This function handles EXTI line2 interrupt.
  */
void EXTI2_IRQHandler(void)
{
 8001ee6:	b580      	push	{r7, lr}
 8001ee8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI2_IRQn 0 */

  /* USER CODE END EXTI2_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON0_Pin);
 8001eea:	2004      	movs	r0, #4
 8001eec:	f001 fda8 	bl	8003a40 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI2_IRQn 1 */

  /* USER CODE END EXTI2_IRQn 1 */
}
 8001ef0:	bf00      	nop
 8001ef2:	bd80      	pop	{r7, pc}

08001ef4 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON1_Pin);
 8001ef8:	2008      	movs	r0, #8
 8001efa:	f001 fda1 	bl	8003a40 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001efe:	bf00      	nop
 8001f00:	bd80      	pop	{r7, pc}
	...

08001f04 <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 global interrupts.
  */
void ADC_IRQHandler(void)
{
 8001f04:	b580      	push	{r7, lr}
 8001f06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc3);
 8001f08:	4802      	ldr	r0, [pc, #8]	; (8001f14 <ADC_IRQHandler+0x10>)
 8001f0a:	f000 fac3 	bl	8002494 <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 8001f0e:	bf00      	nop
 8001f10:	bd80      	pop	{r7, pc}
 8001f12:	bf00      	nop
 8001f14:	20000140 	.word	0x20000140

08001f18 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001f18:	b580      	push	{r7, lr}
 8001f1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUTTON3_Pin);
 8001f1c:	2040      	movs	r0, #64	; 0x40
 8001f1e:	f001 fd8f 	bl	8003a40 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(BUTTON2_Pin);
 8001f22:	2080      	movs	r0, #128	; 0x80
 8001f24:	f001 fd8c 	bl	8003a40 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001f28:	bf00      	nop
 8001f2a:	bd80      	pop	{r7, pc}

08001f2c <TIM1_BRK_TIM9_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt and TIM9 global interrupt.
  */
void TIM1_BRK_TIM9_IRQHandler(void)
{
 8001f2c:	b580      	push	{r7, lr}
 8001f2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 0 */

  /* USER CODE END TIM1_BRK_TIM9_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001f30:	4802      	ldr	r0, [pc, #8]	; (8001f3c <TIM1_BRK_TIM9_IRQHandler+0x10>)
 8001f32:	f004 ff19 	bl	8006d68 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_TIM9_IRQn 1 */

  /* USER CODE END TIM1_BRK_TIM9_IRQn 1 */
}
 8001f36:	bf00      	nop
 8001f38:	bd80      	pop	{r7, pc}
 8001f3a:	bf00      	nop
 8001f3c:	20000344 	.word	0x20000344

08001f40 <TIM1_UP_TIM10_IRQHandler>:

/**
  * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
  */
void TIM1_UP_TIM10_IRQHandler(void)
{
 8001f40:	b580      	push	{r7, lr}
 8001f42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001f44:	4802      	ldr	r0, [pc, #8]	; (8001f50 <TIM1_UP_TIM10_IRQHandler+0x10>)
 8001f46:	f004 ff0f 	bl	8006d68 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */

  /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
}
 8001f4a:	bf00      	nop
 8001f4c:	bd80      	pop	{r7, pc}
 8001f4e:	bf00      	nop
 8001f50:	20000344 	.word	0x20000344

08001f54 <TIM1_TRG_COM_TIM11_IRQHandler>:

/**
  * @brief This function handles TIM1 trigger and commutation interrupts and TIM11 global interrupt.
  */
void TIM1_TRG_COM_TIM11_IRQHandler(void)
{
 8001f54:	b580      	push	{r7, lr}
 8001f56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 0 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001f58:	4802      	ldr	r0, [pc, #8]	; (8001f64 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 8001f5a:	f004 ff05 	bl	8006d68 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_TRG_COM_TIM11_IRQn 1 */

  /* USER CODE END TIM1_TRG_COM_TIM11_IRQn 1 */
}
 8001f5e:	bf00      	nop
 8001f60:	bd80      	pop	{r7, pc}
 8001f62:	bf00      	nop
 8001f64:	20000344 	.word	0x20000344

08001f68 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 8001f68:	b580      	push	{r7, lr}
 8001f6a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8001f6c:	4802      	ldr	r0, [pc, #8]	; (8001f78 <TIM1_CC_IRQHandler+0x10>)
 8001f6e:	f004 fefb 	bl	8006d68 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 8001f72:	bf00      	nop
 8001f74:	bd80      	pop	{r7, pc}
 8001f76:	bf00      	nop
 8001f78:	20000344 	.word	0x20000344

08001f7c <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt, DAC1 and DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001f80:	4802      	ldr	r0, [pc, #8]	; (8001f8c <TIM6_DAC_IRQHandler+0x10>)
 8001f82:	f004 fef1 	bl	8006d68 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 8001f86:	bf00      	nop
 8001f88:	bd80      	pop	{r7, pc}
 8001f8a:	bf00      	nop
 8001f8c:	2000045c 	.word	0x2000045c

08001f90 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001f90:	b580      	push	{r7, lr}
 8001f92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001f94:	4802      	ldr	r0, [pc, #8]	; (8001fa0 <LTDC_IRQHandler+0x10>)
 8001f96:	f002 fc67 	bl	8004868 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 8001f9a:	bf00      	nop
 8001f9c:	bd80      	pop	{r7, pc}
 8001f9e:	bf00      	nop
 8001fa0:	20000238 	.word	0x20000238

08001fa4 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fa8:	4802      	ldr	r0, [pc, #8]	; (8001fb4 <DMA2D_IRQHandler+0x10>)
 8001faa:	f001 f8a3 	bl	80030f4 <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 8001fae:	bf00      	nop
 8001fb0:	bd80      	pop	{r7, pc}
 8001fb2:	bf00      	nop
 8001fb4:	200001ac 	.word	0x200001ac

08001fb8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001fb8:	b480      	push	{r7}
 8001fba:	af00      	add	r7, sp, #0
	return 1;
 8001fbc:	2301      	movs	r3, #1
}
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	46bd      	mov	sp, r7
 8001fc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fc6:	4770      	bx	lr

08001fc8 <_kill>:

int _kill(int pid, int sig)
{
 8001fc8:	b580      	push	{r7, lr}
 8001fca:	b082      	sub	sp, #8
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	6078      	str	r0, [r7, #4]
 8001fd0:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8001fd2:	f029 ffbb 	bl	802bf4c <__errno>
 8001fd6:	4603      	mov	r3, r0
 8001fd8:	2216      	movs	r2, #22
 8001fda:	601a      	str	r2, [r3, #0]
	return -1;
 8001fdc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001fe0:	4618      	mov	r0, r3
 8001fe2:	3708      	adds	r7, #8
 8001fe4:	46bd      	mov	sp, r7
 8001fe6:	bd80      	pop	{r7, pc}

08001fe8 <_exit>:

void _exit (int status)
{
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	b082      	sub	sp, #8
 8001fec:	af00      	add	r7, sp, #0
 8001fee:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8001ff0:	f04f 31ff 	mov.w	r1, #4294967295
 8001ff4:	6878      	ldr	r0, [r7, #4]
 8001ff6:	f7ff ffe7 	bl	8001fc8 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001ffa:	e7fe      	b.n	8001ffa <_exit+0x12>

08001ffc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b086      	sub	sp, #24
 8002000:	af00      	add	r7, sp, #0
 8002002:	60f8      	str	r0, [r7, #12]
 8002004:	60b9      	str	r1, [r7, #8]
 8002006:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002008:	2300      	movs	r3, #0
 800200a:	617b      	str	r3, [r7, #20]
 800200c:	e00a      	b.n	8002024 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800200e:	f3af 8000 	nop.w
 8002012:	4601      	mov	r1, r0
 8002014:	68bb      	ldr	r3, [r7, #8]
 8002016:	1c5a      	adds	r2, r3, #1
 8002018:	60ba      	str	r2, [r7, #8]
 800201a:	b2ca      	uxtb	r2, r1
 800201c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800201e:	697b      	ldr	r3, [r7, #20]
 8002020:	3301      	adds	r3, #1
 8002022:	617b      	str	r3, [r7, #20]
 8002024:	697a      	ldr	r2, [r7, #20]
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	429a      	cmp	r2, r3
 800202a:	dbf0      	blt.n	800200e <_read+0x12>
	}

return len;
 800202c:	687b      	ldr	r3, [r7, #4]
}
 800202e:	4618      	mov	r0, r3
 8002030:	3718      	adds	r7, #24
 8002032:	46bd      	mov	sp, r7
 8002034:	bd80      	pop	{r7, pc}

08002036 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002036:	b580      	push	{r7, lr}
 8002038:	b086      	sub	sp, #24
 800203a:	af00      	add	r7, sp, #0
 800203c:	60f8      	str	r0, [r7, #12]
 800203e:	60b9      	str	r1, [r7, #8]
 8002040:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002042:	2300      	movs	r3, #0
 8002044:	617b      	str	r3, [r7, #20]
 8002046:	e009      	b.n	800205c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002048:	68bb      	ldr	r3, [r7, #8]
 800204a:	1c5a      	adds	r2, r3, #1
 800204c:	60ba      	str	r2, [r7, #8]
 800204e:	781b      	ldrb	r3, [r3, #0]
 8002050:	4618      	mov	r0, r3
 8002052:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002056:	697b      	ldr	r3, [r7, #20]
 8002058:	3301      	adds	r3, #1
 800205a:	617b      	str	r3, [r7, #20]
 800205c:	697a      	ldr	r2, [r7, #20]
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	429a      	cmp	r2, r3
 8002062:	dbf1      	blt.n	8002048 <_write+0x12>
	}
	return len;
 8002064:	687b      	ldr	r3, [r7, #4]
}
 8002066:	4618      	mov	r0, r3
 8002068:	3718      	adds	r7, #24
 800206a:	46bd      	mov	sp, r7
 800206c:	bd80      	pop	{r7, pc}

0800206e <_close>:

int _close(int file)
{
 800206e:	b480      	push	{r7}
 8002070:	b083      	sub	sp, #12
 8002072:	af00      	add	r7, sp, #0
 8002074:	6078      	str	r0, [r7, #4]
	return -1;
 8002076:	f04f 33ff 	mov.w	r3, #4294967295
}
 800207a:	4618      	mov	r0, r3
 800207c:	370c      	adds	r7, #12
 800207e:	46bd      	mov	sp, r7
 8002080:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002084:	4770      	bx	lr

08002086 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002086:	b480      	push	{r7}
 8002088:	b083      	sub	sp, #12
 800208a:	af00      	add	r7, sp, #0
 800208c:	6078      	str	r0, [r7, #4]
 800208e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8002090:	683b      	ldr	r3, [r7, #0]
 8002092:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002096:	605a      	str	r2, [r3, #4]
	return 0;
 8002098:	2300      	movs	r3, #0
}
 800209a:	4618      	mov	r0, r3
 800209c:	370c      	adds	r7, #12
 800209e:	46bd      	mov	sp, r7
 80020a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020a4:	4770      	bx	lr

080020a6 <_isatty>:

int _isatty(int file)
{
 80020a6:	b480      	push	{r7}
 80020a8:	b083      	sub	sp, #12
 80020aa:	af00      	add	r7, sp, #0
 80020ac:	6078      	str	r0, [r7, #4]
	return 1;
 80020ae:	2301      	movs	r3, #1
}
 80020b0:	4618      	mov	r0, r3
 80020b2:	370c      	adds	r7, #12
 80020b4:	46bd      	mov	sp, r7
 80020b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ba:	4770      	bx	lr

080020bc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80020bc:	b480      	push	{r7}
 80020be:	b085      	sub	sp, #20
 80020c0:	af00      	add	r7, sp, #0
 80020c2:	60f8      	str	r0, [r7, #12]
 80020c4:	60b9      	str	r1, [r7, #8]
 80020c6:	607a      	str	r2, [r7, #4]
	return 0;
 80020c8:	2300      	movs	r3, #0
}
 80020ca:	4618      	mov	r0, r3
 80020cc:	3714      	adds	r7, #20
 80020ce:	46bd      	mov	sp, r7
 80020d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d4:	4770      	bx	lr
	...

080020d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80020d8:	b580      	push	{r7, lr}
 80020da:	b086      	sub	sp, #24
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80020e0:	4a14      	ldr	r2, [pc, #80]	; (8002134 <_sbrk+0x5c>)
 80020e2:	4b15      	ldr	r3, [pc, #84]	; (8002138 <_sbrk+0x60>)
 80020e4:	1ad3      	subs	r3, r2, r3
 80020e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80020e8:	697b      	ldr	r3, [r7, #20]
 80020ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80020ec:	4b13      	ldr	r3, [pc, #76]	; (800213c <_sbrk+0x64>)
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	2b00      	cmp	r3, #0
 80020f2:	d102      	bne.n	80020fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80020f4:	4b11      	ldr	r3, [pc, #68]	; (800213c <_sbrk+0x64>)
 80020f6:	4a12      	ldr	r2, [pc, #72]	; (8002140 <_sbrk+0x68>)
 80020f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80020fa:	4b10      	ldr	r3, [pc, #64]	; (800213c <_sbrk+0x64>)
 80020fc:	681a      	ldr	r2, [r3, #0]
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	4413      	add	r3, r2
 8002102:	693a      	ldr	r2, [r7, #16]
 8002104:	429a      	cmp	r2, r3
 8002106:	d207      	bcs.n	8002118 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002108:	f029 ff20 	bl	802bf4c <__errno>
 800210c:	4603      	mov	r3, r0
 800210e:	220c      	movs	r2, #12
 8002110:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002112:	f04f 33ff 	mov.w	r3, #4294967295
 8002116:	e009      	b.n	800212c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002118:	4b08      	ldr	r3, [pc, #32]	; (800213c <_sbrk+0x64>)
 800211a:	681b      	ldr	r3, [r3, #0]
 800211c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800211e:	4b07      	ldr	r3, [pc, #28]	; (800213c <_sbrk+0x64>)
 8002120:	681a      	ldr	r2, [r3, #0]
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	4413      	add	r3, r2
 8002126:	4a05      	ldr	r2, [pc, #20]	; (800213c <_sbrk+0x64>)
 8002128:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800212a:	68fb      	ldr	r3, [r7, #12]
}
 800212c:	4618      	mov	r0, r3
 800212e:	3718      	adds	r7, #24
 8002130:	46bd      	mov	sp, r7
 8002132:	bd80      	pop	{r7, pc}
 8002134:	20050000 	.word	0x20050000
 8002138:	00001000 	.word	0x00001000
 800213c:	200004a8 	.word	0x200004a8
 8002140:	20004430 	.word	0x20004430

08002144 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002144:	b480      	push	{r7}
 8002146:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002148:	4b06      	ldr	r3, [pc, #24]	; (8002164 <SystemInit+0x20>)
 800214a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800214e:	4a05      	ldr	r2, [pc, #20]	; (8002164 <SystemInit+0x20>)
 8002150:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002154:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002158:	bf00      	nop
 800215a:	46bd      	mov	sp, r7
 800215c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002160:	4770      	bx	lr
 8002162:	bf00      	nop
 8002164:	e000ed00 	.word	0xe000ed00

08002168 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8002168:	f8df d034 	ldr.w	sp, [pc, #52]	; 80021a0 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 800216c:	480d      	ldr	r0, [pc, #52]	; (80021a4 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800216e:	490e      	ldr	r1, [pc, #56]	; (80021a8 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8002170:	4a0e      	ldr	r2, [pc, #56]	; (80021ac <LoopFillZerobss+0x1e>)
  movs r3, #0
 8002172:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002174:	e002      	b.n	800217c <LoopCopyDataInit>

08002176 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8002176:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8002178:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800217a:	3304      	adds	r3, #4

0800217c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800217c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800217e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002180:	d3f9      	bcc.n	8002176 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002182:	4a0b      	ldr	r2, [pc, #44]	; (80021b0 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8002184:	4c0b      	ldr	r4, [pc, #44]	; (80021b4 <LoopFillZerobss+0x26>)
  movs r3, #0
 8002186:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002188:	e001      	b.n	800218e <LoopFillZerobss>

0800218a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800218a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800218c:	3204      	adds	r2, #4

0800218e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800218e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002190:	d3fb      	bcc.n	800218a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002192:	f7ff ffd7 	bl	8002144 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002196:	f029 fef1 	bl	802bf7c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800219a:	f7fe fa69 	bl	8000670 <main>
  bx  lr    
 800219e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 80021a0:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 80021a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80021a8:	20000124 	.word	0x20000124
  ldr r2, =_sidata
 80021ac:	0803b2bc 	.word	0x0803b2bc
  ldr r2, =_sbss
 80021b0:	20000124 	.word	0x20000124
  ldr r4, =_ebss
 80021b4:	20004430 	.word	0x20004430

080021b8 <CAN1_RX0_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80021b8:	e7fe      	b.n	80021b8 <CAN1_RX0_IRQHandler>

080021ba <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80021ba:	b580      	push	{r7, lr}
 80021bc:	af00      	add	r7, sp, #0
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80021be:	2003      	movs	r0, #3
 80021c0:	f000 fda1 	bl	8002d06 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80021c4:	200f      	movs	r0, #15
 80021c6:	f7ff fe0b 	bl	8001de0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80021ca:	f7ff f9d7 	bl	800157c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80021ce:	2300      	movs	r3, #0
}
 80021d0:	4618      	mov	r0, r3
 80021d2:	bd80      	pop	{r7, pc}

080021d4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80021d4:	b480      	push	{r7}
 80021d6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80021d8:	4b06      	ldr	r3, [pc, #24]	; (80021f4 <HAL_IncTick+0x20>)
 80021da:	781b      	ldrb	r3, [r3, #0]
 80021dc:	461a      	mov	r2, r3
 80021de:	4b06      	ldr	r3, [pc, #24]	; (80021f8 <HAL_IncTick+0x24>)
 80021e0:	681b      	ldr	r3, [r3, #0]
 80021e2:	4413      	add	r3, r2
 80021e4:	4a04      	ldr	r2, [pc, #16]	; (80021f8 <HAL_IncTick+0x24>)
 80021e6:	6013      	str	r3, [r2, #0]
}
 80021e8:	bf00      	nop
 80021ea:	46bd      	mov	sp, r7
 80021ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021f0:	4770      	bx	lr
 80021f2:	bf00      	nop
 80021f4:	2000000c 	.word	0x2000000c
 80021f8:	200004ac 	.word	0x200004ac

080021fc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80021fc:	b480      	push	{r7}
 80021fe:	af00      	add	r7, sp, #0
  return uwTick;
 8002200:	4b03      	ldr	r3, [pc, #12]	; (8002210 <HAL_GetTick+0x14>)
 8002202:	681b      	ldr	r3, [r3, #0]
}
 8002204:	4618      	mov	r0, r3
 8002206:	46bd      	mov	sp, r7
 8002208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220c:	4770      	bx	lr
 800220e:	bf00      	nop
 8002210:	200004ac 	.word	0x200004ac

08002214 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002214:	b580      	push	{r7, lr}
 8002216:	b084      	sub	sp, #16
 8002218:	af00      	add	r7, sp, #0
 800221a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800221c:	f7ff ffee 	bl	80021fc <HAL_GetTick>
 8002220:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002226:	68fb      	ldr	r3, [r7, #12]
 8002228:	f1b3 3fff 	cmp.w	r3, #4294967295
 800222c:	d005      	beq.n	800223a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 800222e:	4b0a      	ldr	r3, [pc, #40]	; (8002258 <HAL_Delay+0x44>)
 8002230:	781b      	ldrb	r3, [r3, #0]
 8002232:	461a      	mov	r2, r3
 8002234:	68fb      	ldr	r3, [r7, #12]
 8002236:	4413      	add	r3, r2
 8002238:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800223a:	bf00      	nop
 800223c:	f7ff ffde 	bl	80021fc <HAL_GetTick>
 8002240:	4602      	mov	r2, r0
 8002242:	68bb      	ldr	r3, [r7, #8]
 8002244:	1ad3      	subs	r3, r2, r3
 8002246:	68fa      	ldr	r2, [r7, #12]
 8002248:	429a      	cmp	r2, r3
 800224a:	d8f7      	bhi.n	800223c <HAL_Delay+0x28>
  {
  }
}
 800224c:	bf00      	nop
 800224e:	bf00      	nop
 8002250:	3710      	adds	r7, #16
 8002252:	46bd      	mov	sp, r7
 8002254:	bd80      	pop	{r7, pc}
 8002256:	bf00      	nop
 8002258:	2000000c 	.word	0x2000000c

0800225c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 800225c:	b580      	push	{r7, lr}
 800225e:	b084      	sub	sp, #16
 8002260:	af00      	add	r7, sp, #0
 8002262:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002264:	2300      	movs	r3, #0
 8002266:	73fb      	strb	r3, [r7, #15]
  
  /* Check ADC handle */
  if(hadc == NULL)
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	2b00      	cmp	r3, #0
 800226c:	d101      	bne.n	8002272 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 800226e:	2301      	movs	r3, #1
 8002270:	e031      	b.n	80022d6 <HAL_ADC_Init+0x7a>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if(hadc->State == HAL_ADC_STATE_RESET)
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002276:	2b00      	cmp	r3, #0
 8002278:	d109      	bne.n	800228e <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 800227a:	6878      	ldr	r0, [r7, #4]
 800227c:	f7ff f9a2 	bl	80015c4 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	2200      	movs	r2, #0
 8002284:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	2200      	movs	r2, #0
 800228a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002292:	f003 0310 	and.w	r3, r3, #16
 8002296:	2b00      	cmp	r3, #0
 8002298:	d116      	bne.n	80022c8 <HAL_ADC_Init+0x6c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800229e:	4b10      	ldr	r3, [pc, #64]	; (80022e0 <HAL_ADC_Init+0x84>)
 80022a0:	4013      	ands	r3, r2
 80022a2:	f043 0202 	orr.w	r2, r3, #2
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);
    
    /* Set ADC parameters */
    ADC_Init(hadc);
 80022aa:	6878      	ldr	r0, [r7, #4]
 80022ac:	f000 fb7a 	bl	80029a4 <ADC_Init>
    
    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	2200      	movs	r2, #0
 80022b4:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 80022b6:	687b      	ldr	r3, [r7, #4]
 80022b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022ba:	f023 0303 	bic.w	r3, r3, #3
 80022be:	f043 0201 	orr.w	r2, r3, #1
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	641a      	str	r2, [r3, #64]	; 0x40
 80022c6:	e001      	b.n	80022cc <HAL_ADC_Init+0x70>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 80022c8:	2301      	movs	r3, #1
 80022ca:	73fb      	strb	r3, [r7, #15]
  }
  
  /* Release Lock */
  __HAL_UNLOCK(hadc);
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	2200      	movs	r2, #0
 80022d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Return function status */
  return tmp_hal_status;
 80022d4:	7bfb      	ldrb	r3, [r7, #15]
}
 80022d6:	4618      	mov	r0, r3
 80022d8:	3710      	adds	r7, #16
 80022da:	46bd      	mov	sp, r7
 80022dc:	bd80      	pop	{r7, pc}
 80022de:	bf00      	nop
 80022e0:	ffffeefd 	.word	0xffffeefd

080022e4 <HAL_ADC_Start_IT>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
{
 80022e4:	b480      	push	{r7}
 80022e6:	b085      	sub	sp, #20
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	6078      	str	r0, [r7, #4]
  __IO uint32_t counter = 0;
 80022ec:	2300      	movs	r3, #0
 80022ee:	60fb      	str	r3, [r7, #12]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge)); 
  
  /* Process locked */
  __HAL_LOCK(hadc);
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80022f6:	2b01      	cmp	r3, #1
 80022f8:	d101      	bne.n	80022fe <HAL_ADC_Start_IT+0x1a>
 80022fa:	2302      	movs	r3, #2
 80022fc:	e0b5      	b.n	800246a <HAL_ADC_Start_IT+0x186>
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	2201      	movs	r2, #1
 8002302:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during 
     Tstab time the ADC's stabilization */
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	689b      	ldr	r3, [r3, #8]
 800230c:	f003 0301 	and.w	r3, r3, #1
 8002310:	2b01      	cmp	r3, #1
 8002312:	d018      	beq.n	8002346 <HAL_ADC_Start_IT+0x62>
  {  
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	689a      	ldr	r2, [r3, #8]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	f042 0201 	orr.w	r2, r2, #1
 8002322:	609a      	str	r2, [r3, #8]
    
    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000));
 8002324:	4b54      	ldr	r3, [pc, #336]	; (8002478 <HAL_ADC_Start_IT+0x194>)
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	4a54      	ldr	r2, [pc, #336]	; (800247c <HAL_ADC_Start_IT+0x198>)
 800232a:	fba2 2303 	umull	r2, r3, r2, r3
 800232e:	0c9a      	lsrs	r2, r3, #18
 8002330:	4613      	mov	r3, r2
 8002332:	005b      	lsls	r3, r3, #1
 8002334:	4413      	add	r3, r2
 8002336:	60fb      	str	r3, [r7, #12]
    while(counter != 0)
 8002338:	e002      	b.n	8002340 <HAL_ADC_Start_IT+0x5c>
    {
      counter--;
 800233a:	68fb      	ldr	r3, [r7, #12]
 800233c:	3b01      	subs	r3, #1
 800233e:	60fb      	str	r3, [r7, #12]
    while(counter != 0)
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	2b00      	cmp	r3, #0
 8002344:	d1f9      	bne.n	800233a <HAL_ADC_Start_IT+0x56>
    }
  }
  
  /* Start conversion if ADC is effectively enabled */
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002346:	687b      	ldr	r3, [r7, #4]
 8002348:	681b      	ldr	r3, [r3, #0]
 800234a:	689b      	ldr	r3, [r3, #8]
 800234c:	f003 0301 	and.w	r3, r3, #1
 8002350:	2b01      	cmp	r3, #1
 8002352:	d17d      	bne.n	8002450 <HAL_ADC_Start_IT+0x16c>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002358:	4b49      	ldr	r3, [pc, #292]	; (8002480 <HAL_ADC_Start_IT+0x19c>)
 800235a:	4013      	ands	r3, r2
 800235c:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	641a      	str	r2, [r3, #64]	; 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);
    
    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002364:	687b      	ldr	r3, [r7, #4]
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800236e:	2b00      	cmp	r3, #0
 8002370:	d007      	beq.n	8002382 <HAL_ADC_Start_IT+0x9e>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8002372:	687b      	ldr	r3, [r7, #4]
 8002374:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002376:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800237a:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	641a      	str	r2, [r3, #64]	; 0x40
    }
    
    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002386:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800238a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800238e:	d106      	bne.n	800239e <HAL_ADC_Start_IT+0xba>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002394:	f023 0206 	bic.w	r2, r3, #6
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	645a      	str	r2, [r3, #68]	; 0x44
 800239c:	e002      	b.n	80023a4 <HAL_ADC_Start_IT+0xc0>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	2200      	movs	r2, #0
 80023a2:	645a      	str	r2, [r3, #68]	; 0x44
    }
    
    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	2200      	movs	r2, #0
 80023a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    
    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80023b4:	601a      	str	r2, [r3, #0]
    
    /* Enable end of conversion interrupt for regular group */
    __HAL_ADC_ENABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_OVR));
 80023b6:	687b      	ldr	r3, [r7, #4]
 80023b8:	681b      	ldr	r3, [r3, #0]
 80023ba:	6859      	ldr	r1, [r3, #4]
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681a      	ldr	r2, [r3, #0]
 80023c0:	4b30      	ldr	r3, [pc, #192]	; (8002484 <HAL_ADC_Start_IT+0x1a0>)
 80023c2:	430b      	orrs	r3, r1
 80023c4:	6053      	str	r3, [r2, #4]
    
    /* Check if Multimode enabled */
    if(HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI))
 80023c6:	4b30      	ldr	r3, [pc, #192]	; (8002488 <HAL_ADC_Start_IT+0x1a4>)
 80023c8:	685b      	ldr	r3, [r3, #4]
 80023ca:	f003 031f 	and.w	r3, r3, #31
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	d10f      	bne.n	80023f2 <HAL_ADC_Start_IT+0x10e>
    {
      /* if no external trigger present enable software conversion of regular channels */
      if((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET) 
 80023d2:	687b      	ldr	r3, [r7, #4]
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	689b      	ldr	r3, [r3, #8]
 80023d8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d143      	bne.n	8002468 <HAL_ADC_Start_IT+0x184>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	689a      	ldr	r2, [r3, #8]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80023ee:	609a      	str	r2, [r3, #8]
 80023f0:	e03a      	b.n	8002468 <HAL_ADC_Start_IT+0x184>
      }
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	4a25      	ldr	r2, [pc, #148]	; (800248c <HAL_ADC_Start_IT+0x1a8>)
 80023f8:	4293      	cmp	r3, r2
 80023fa:	d10e      	bne.n	800241a <HAL_ADC_Start_IT+0x136>
 80023fc:	687b      	ldr	r3, [r7, #4]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	689b      	ldr	r3, [r3, #8]
 8002402:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8002406:	2b00      	cmp	r3, #0
 8002408:	d107      	bne.n	800241a <HAL_ADC_Start_IT+0x136>
      {
        /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	681b      	ldr	r3, [r3, #0]
 800240e:	689a      	ldr	r2, [r3, #8]
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	681b      	ldr	r3, [r3, #0]
 8002414:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8002418:	609a      	str	r2, [r3, #8]
      }

      /* if dual mode is selected, ADC3 works independently. */
      /* check if the mode selected is not triple */
      if( HAL_IS_BIT_CLR(ADC->CCR, ADC_CCR_MULTI_4) )
 800241a:	4b1b      	ldr	r3, [pc, #108]	; (8002488 <HAL_ADC_Start_IT+0x1a4>)
 800241c:	685b      	ldr	r3, [r3, #4]
 800241e:	f003 0310 	and.w	r3, r3, #16
 8002422:	2b00      	cmp	r3, #0
 8002424:	d120      	bne.n	8002468 <HAL_ADC_Start_IT+0x184>
      {
        /* if instance of handle correspond to ADC3 and  no external trigger present enable software conversion of regular channels */
        if((hadc->Instance == ADC3) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	681b      	ldr	r3, [r3, #0]
 800242a:	4a19      	ldr	r2, [pc, #100]	; (8002490 <HAL_ADC_Start_IT+0x1ac>)
 800242c:	4293      	cmp	r3, r2
 800242e:	d11b      	bne.n	8002468 <HAL_ADC_Start_IT+0x184>
 8002430:	687b      	ldr	r3, [r7, #4]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	689b      	ldr	r3, [r3, #8]
 8002436:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800243a:	2b00      	cmp	r3, #0
 800243c:	d114      	bne.n	8002468 <HAL_ADC_Start_IT+0x184>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	689a      	ldr	r2, [r3, #8]
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800244c:	609a      	str	r2, [r3, #8]
 800244e:	e00b      	b.n	8002468 <HAL_ADC_Start_IT+0x184>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002450:	687b      	ldr	r3, [r7, #4]
 8002452:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002454:	f043 0210 	orr.w	r2, r3, #16
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 800245c:	687b      	ldr	r3, [r7, #4]
 800245e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002460:	f043 0201 	orr.w	r2, r3, #1
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	645a      	str	r2, [r3, #68]	; 0x44
  }
  
  /* Return function status */
  return HAL_OK;
 8002468:	2300      	movs	r3, #0
}
 800246a:	4618      	mov	r0, r3
 800246c:	3714      	adds	r7, #20
 800246e:	46bd      	mov	sp, r7
 8002470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002474:	4770      	bx	lr
 8002476:	bf00      	nop
 8002478:	20000004 	.word	0x20000004
 800247c:	431bde83 	.word	0x431bde83
 8002480:	fffff8fe 	.word	0xfffff8fe
 8002484:	04000020 	.word	0x04000020
 8002488:	40012300 	.word	0x40012300
 800248c:	40012000 	.word	0x40012000
 8002490:	40012200 	.word	0x40012200

08002494 <HAL_ADC_IRQHandler>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
{
 8002494:	b580      	push	{r7, lr}
 8002496:	b086      	sub	sp, #24
 8002498:	af00      	add	r7, sp, #0
 800249a:	6078      	str	r0, [r7, #4]
  uint32_t tmp1 = 0, tmp2 = 0;
 800249c:	2300      	movs	r3, #0
 800249e:	617b      	str	r3, [r7, #20]
 80024a0:	2300      	movs	r3, #0
 80024a2:	613b      	str	r3, [r7, #16]

  uint32_t tmp_sr = hadc->Instance->SR;
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	681b      	ldr	r3, [r3, #0]
 80024aa:	60fb      	str	r3, [r7, #12]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	685b      	ldr	r3, [r3, #4]
 80024b2:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
  assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));

  tmp1 = tmp_sr & ADC_FLAG_EOC;
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	f003 0302 	and.w	r3, r3, #2
 80024ba:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_EOC;
 80024bc:	68bb      	ldr	r3, [r7, #8]
 80024be:	f003 0320 	and.w	r3, r3, #32
 80024c2:	613b      	str	r3, [r7, #16]

  /* Check End of conversion flag for regular channels */
  if(tmp1 && tmp2)
 80024c4:	697b      	ldr	r3, [r7, #20]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d049      	beq.n	800255e <HAL_ADC_IRQHandler+0xca>
 80024ca:	693b      	ldr	r3, [r7, #16]
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	d046      	beq.n	800255e <HAL_ADC_IRQHandler+0xca>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 80024d0:	687b      	ldr	r3, [r7, #4]
 80024d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024d4:	f003 0310 	and.w	r3, r3, #16
 80024d8:	2b00      	cmp	r3, #0
 80024da:	d105      	bne.n	80024e8 <HAL_ADC_IRQHandler+0x54>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC); 
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024e0:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	641a      	str	r2, [r3, #64]	; 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F7, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	689b      	ldr	r3, [r3, #8]
 80024ee:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d12b      	bne.n	800254e <HAL_ADC_IRQHandler+0xba>
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80024f6:	687b      	ldr	r3, [r7, #4]
 80024f8:	699b      	ldr	r3, [r3, #24]
    if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d127      	bne.n	800254e <HAL_ADC_IRQHandler+0xba>
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	681b      	ldr	r3, [r3, #0]
 8002502:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002504:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
       (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002508:	2b00      	cmp	r3, #0
 800250a:	d006      	beq.n	800251a <HAL_ADC_IRQHandler+0x86>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	681b      	ldr	r3, [r3, #0]
 8002510:	689b      	ldr	r3, [r3, #8]
 8002512:	f403 6380 	and.w	r3, r3, #1024	; 0x400
       (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) || 
 8002516:	2b00      	cmp	r3, #0
 8002518:	d119      	bne.n	800254e <HAL_ADC_IRQHandler+0xba>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	685a      	ldr	r2, [r3, #4]
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	f022 0220 	bic.w	r2, r2, #32
 8002528:	605a      	str	r2, [r3, #4]
      
      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800252e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	641a      	str	r2, [r3, #64]	; 0x40
      
      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002536:	687b      	ldr	r3, [r7, #4]
 8002538:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800253a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800253e:	2b00      	cmp	r3, #0
 8002540:	d105      	bne.n	800254e <HAL_ADC_IRQHandler+0xba>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002546:	f043 0201 	orr.w	r2, r3, #1
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	641a      	str	r2, [r3, #64]	; 0x40
    
    /* Conversion complete callback */ 
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 800254e:	6878      	ldr	r0, [r7, #4]
 8002550:	f7fe f850 	bl	80005f4 <HAL_ADC_ConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
    
    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	681b      	ldr	r3, [r3, #0]
 8002558:	f06f 0212 	mvn.w	r2, #18
 800255c:	601a      	str	r2, [r3, #0]
  }
  
  tmp1 = tmp_sr & ADC_FLAG_JEOC;
 800255e:	68fb      	ldr	r3, [r7, #12]
 8002560:	f003 0304 	and.w	r3, r3, #4
 8002564:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_JEOC;
 8002566:	68bb      	ldr	r3, [r7, #8]
 8002568:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800256c:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for injected channels */
  if(tmp1 && tmp2)
 800256e:	697b      	ldr	r3, [r7, #20]
 8002570:	2b00      	cmp	r3, #0
 8002572:	d057      	beq.n	8002624 <HAL_ADC_IRQHandler+0x190>
 8002574:	693b      	ldr	r3, [r7, #16]
 8002576:	2b00      	cmp	r3, #0
 8002578:	d054      	beq.n	8002624 <HAL_ADC_IRQHandler+0x190>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 800257a:	687b      	ldr	r3, [r7, #4]
 800257c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800257e:	f003 0310 	and.w	r3, r3, #16
 8002582:	2b00      	cmp	r3, #0
 8002584:	d105      	bne.n	8002592 <HAL_ADC_IRQHandler+0xfe>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 8002586:	687b      	ldr	r3, [r7, #4]
 8002588:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800258a:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	641a      	str	r2, [r3, #64]	; 0x40

    /* Determine whether any further conversion upcoming on group injected  */
    /* by external trigger, scan sequence on going or by automatic injected */
    /* conversion from group regular (same conditions as group regular      */
    /* interruption disabling above).                                       */
    if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002592:	687b      	ldr	r3, [r7, #4]
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	689b      	ldr	r3, [r3, #8]
 8002598:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 800259c:	2b00      	cmp	r3, #0
 800259e:	d139      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
       (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL) ||
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	681b      	ldr	r3, [r3, #0]
 80025a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80025a6:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
    if(ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d006      	beq.n	80025bc <HAL_ADC_IRQHandler+0x128>
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	681b      	ldr	r3, [r3, #0]
 80025b2:	689b      	ldr	r3, [r3, #8]
 80025b4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
       (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL) ||
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d12b      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
       (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 80025bc:	687b      	ldr	r3, [r7, #4]
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	685b      	ldr	r3, [r3, #4]
 80025c2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
        HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d124      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
       (ADC_IS_SOFTWARE_START_REGULAR(hadc) &&
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	689b      	ldr	r3, [r3, #8]
 80025d0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
       (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 80025d4:	2b00      	cmp	r3, #0
 80025d6:	d11d      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
       (hadc->Init.ContinuousConvMode == DISABLE))))
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	699b      	ldr	r3, [r3, #24]
       (ADC_IS_SOFTWARE_START_REGULAR(hadc) &&
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d119      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
    {
      /* Disable ADC end of single conversion interrupt on group injected */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	685a      	ldr	r2, [r3, #4]
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80025ee:	605a      	str	r2, [r3, #4]
      
      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);   
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80025f4:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	641a      	str	r2, [r3, #64]	; 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 80025fc:	687b      	ldr	r3, [r7, #4]
 80025fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002600:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002604:	2b00      	cmp	r3, #0
 8002606:	d105      	bne.n	8002614 <HAL_ADC_IRQHandler+0x180>
      { 
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800260c:	f043 0201 	orr.w	r2, r3, #1
 8002610:	687b      	ldr	r3, [r7, #4]
 8002612:	641a      	str	r2, [r3, #64]	; 0x40

    /* Conversion complete callback */ 
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->InjectedConvCpltCallback(hadc);
#else
      HAL_ADCEx_InjectedConvCpltCallback(hadc);
 8002614:	6878      	ldr	r0, [r7, #4]
 8002616:	f000 fabf 	bl	8002b98 <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
    
    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	f06f 020c 	mvn.w	r2, #12
 8002622:	601a      	str	r2, [r3, #0]
  }
  
  tmp1 = tmp_sr & ADC_FLAG_AWD;
 8002624:	68fb      	ldr	r3, [r7, #12]
 8002626:	f003 0301 	and.w	r3, r3, #1
 800262a:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_AWD;
 800262c:	68bb      	ldr	r3, [r7, #8]
 800262e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002632:	613b      	str	r3, [r7, #16]
  /* Check Analog watchdog flag */
  if(tmp1 && tmp2)
 8002634:	697b      	ldr	r3, [r7, #20]
 8002636:	2b00      	cmp	r3, #0
 8002638:	d017      	beq.n	800266a <HAL_ADC_IRQHandler+0x1d6>
 800263a:	693b      	ldr	r3, [r7, #16]
 800263c:	2b00      	cmp	r3, #0
 800263e:	d014      	beq.n	800266a <HAL_ADC_IRQHandler+0x1d6>
  {
    if(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	681b      	ldr	r3, [r3, #0]
 8002644:	681b      	ldr	r3, [r3, #0]
 8002646:	f003 0301 	and.w	r3, r3, #1
 800264a:	2b01      	cmp	r3, #1
 800264c:	d10d      	bne.n	800266a <HAL_ADC_IRQHandler+0x1d6>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 800264e:	687b      	ldr	r3, [r7, #4]
 8002650:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002652:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8002656:	687b      	ldr	r3, [r7, #4]
 8002658:	641a      	str	r2, [r3, #64]	; 0x40
      
      /* Level out of window callback */ 
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->LevelOutOfWindowCallback(hadc);
#else
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 800265a:	6878      	ldr	r0, [r7, #4]
 800265c:	f000 f837 	bl	80026ce <HAL_ADC_LevelOutOfWindowCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

      
      /* Clear the ADC analog watchdog flag */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 8002660:	687b      	ldr	r3, [r7, #4]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	f06f 0201 	mvn.w	r2, #1
 8002668:	601a      	str	r2, [r3, #0]
    }
  }
  
  tmp1 = tmp_sr & ADC_FLAG_OVR;
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	f003 0320 	and.w	r3, r3, #32
 8002670:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_OVR;
 8002672:	68bb      	ldr	r3, [r7, #8]
 8002674:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8002678:	613b      	str	r3, [r7, #16]
  /* Check Overrun flag */
  if(tmp1 && tmp2)
 800267a:	697b      	ldr	r3, [r7, #20]
 800267c:	2b00      	cmp	r3, #0
 800267e:	d015      	beq.n	80026ac <HAL_ADC_IRQHandler+0x218>
 8002680:	693b      	ldr	r3, [r7, #16]
 8002682:	2b00      	cmp	r3, #0
 8002684:	d012      	beq.n	80026ac <HAL_ADC_IRQHandler+0x218>
    /* Note: On STM32F7, ADC overrun can be set through other parameters    */
    /*       refer to description of parameter "EOCSelection" for more      */
    /*       details.                                                       */
    
    /* Set ADC error code to overrun */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800268a:	f043 0202 	orr.w	r2, r3, #2
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	645a      	str	r2, [r3, #68]	; 0x44
    
    /* Clear ADC overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	681b      	ldr	r3, [r3, #0]
 8002696:	f06f 0220 	mvn.w	r2, #32
 800269a:	601a      	str	r2, [r3, #0]
    
    /* Error callback */ 
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->ErrorCallback(hadc);
#else
      HAL_ADC_ErrorCallback(hadc);
 800269c:	6878      	ldr	r0, [r7, #4]
 800269e:	f000 f820 	bl	80026e2 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
    
    /* Clear the Overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 80026a2:	687b      	ldr	r3, [r7, #4]
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	f06f 0220 	mvn.w	r2, #32
 80026aa:	601a      	str	r2, [r3, #0]
  }
}
 80026ac:	bf00      	nop
 80026ae:	3718      	adds	r7, #24
 80026b0:	46bd      	mov	sp, r7
 80026b2:	bd80      	pop	{r7, pc}

080026b4 <HAL_ADC_GetValue>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval Converted value
  */
uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
{       
 80026b4:	b480      	push	{r7}
 80026b6:	b083      	sub	sp, #12
 80026b8:	af00      	add	r7, sp, #0
 80026ba:	6078      	str	r0, [r7, #4]
  /* Return the selected ADC converted value */ 
  return hadc->Instance->DR;
 80026bc:	687b      	ldr	r3, [r7, #4]
 80026be:	681b      	ldr	r3, [r3, #0]
 80026c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 80026c2:	4618      	mov	r0, r3
 80026c4:	370c      	adds	r7, #12
 80026c6:	46bd      	mov	sp, r7
 80026c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026cc:	4770      	bx	lr

080026ce <HAL_ADC_LevelOutOfWindowCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
{
 80026ce:	b480      	push	{r7}
 80026d0:	b083      	sub	sp, #12
 80026d2:	af00      	add	r7, sp, #0
 80026d4:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
   */
}
 80026d6:	bf00      	nop
 80026d8:	370c      	adds	r7, #12
 80026da:	46bd      	mov	sp, r7
 80026dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026e0:	4770      	bx	lr

080026e2 <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 80026e2:	b480      	push	{r7}
 80026e4:	b083      	sub	sp, #12
 80026e6:	af00      	add	r7, sp, #0
 80026e8:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 80026ea:	bf00      	nop
 80026ec:	370c      	adds	r7, #12
 80026ee:	46bd      	mov	sp, r7
 80026f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026f4:	4770      	bx	lr
	...

080026f8 <HAL_ADC_ConfigChannel>:
  *         the configuration information for the specified ADC.
  * @param  sConfig ADC configuration structure. 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
{
 80026f8:	b480      	push	{r7}
 80026fa:	b085      	sub	sp, #20
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	6078      	str	r0, [r7, #4]
 8002700:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0;
 8002702:	2300      	movs	r3, #0
 8002704:	60fb      	str	r3, [r7, #12]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
  
  /* Process locked */
  __HAL_LOCK(hadc);
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800270c:	2b01      	cmp	r3, #1
 800270e:	d101      	bne.n	8002714 <HAL_ADC_ConfigChannel+0x1c>
 8002710:	2302      	movs	r3, #2
 8002712:	e136      	b.n	8002982 <HAL_ADC_ConfigChannel+0x28a>
 8002714:	687b      	ldr	r3, [r7, #4]
 8002716:	2201      	movs	r2, #1
 8002718:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if ((sConfig->Channel > ADC_CHANNEL_9) && (sConfig->Channel != ADC_INTERNAL_NONE))
 800271c:	683b      	ldr	r3, [r7, #0]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	2b09      	cmp	r3, #9
 8002722:	d93a      	bls.n	800279a <HAL_ADC_ConfigChannel+0xa2>
 8002724:	683b      	ldr	r3, [r7, #0]
 8002726:	681b      	ldr	r3, [r3, #0]
 8002728:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800272c:	d035      	beq.n	800279a <HAL_ADC_ConfigChannel+0xa2>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	681b      	ldr	r3, [r3, #0]
 8002732:	68d9      	ldr	r1, [r3, #12]
 8002734:	683b      	ldr	r3, [r7, #0]
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	b29b      	uxth	r3, r3
 800273a:	461a      	mov	r2, r3
 800273c:	4613      	mov	r3, r2
 800273e:	005b      	lsls	r3, r3, #1
 8002740:	4413      	add	r3, r2
 8002742:	3b1e      	subs	r3, #30
 8002744:	2207      	movs	r2, #7
 8002746:	fa02 f303 	lsl.w	r3, r2, r3
 800274a:	43da      	mvns	r2, r3
 800274c:	687b      	ldr	r3, [r7, #4]
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	400a      	ands	r2, r1
 8002752:	60da      	str	r2, [r3, #12]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	4a8d      	ldr	r2, [pc, #564]	; (8002990 <HAL_ADC_ConfigChannel+0x298>)
 800275a:	4293      	cmp	r3, r2
 800275c:	d10a      	bne.n	8002774 <HAL_ADC_ConfigChannel+0x7c>
    {
      /* Set the new sample time */
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, ADC_CHANNEL_18);
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	68d9      	ldr	r1, [r3, #12]
 8002764:	683b      	ldr	r3, [r7, #0]
 8002766:	689b      	ldr	r3, [r3, #8]
 8002768:	061a      	lsls	r2, r3, #24
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	430a      	orrs	r2, r1
 8002770:	60da      	str	r2, [r3, #12]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002772:	e035      	b.n	80027e0 <HAL_ADC_ConfigChannel+0xe8>
    }
    else
    {
      /* Set the new sample time */
      hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	68d9      	ldr	r1, [r3, #12]
 800277a:	683b      	ldr	r3, [r7, #0]
 800277c:	689a      	ldr	r2, [r3, #8]
 800277e:	683b      	ldr	r3, [r7, #0]
 8002780:	681b      	ldr	r3, [r3, #0]
 8002782:	b29b      	uxth	r3, r3
 8002784:	4618      	mov	r0, r3
 8002786:	4603      	mov	r3, r0
 8002788:	005b      	lsls	r3, r3, #1
 800278a:	4403      	add	r3, r0
 800278c:	3b1e      	subs	r3, #30
 800278e:	409a      	lsls	r2, r3
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	430a      	orrs	r2, r1
 8002796:	60da      	str	r2, [r3, #12]
    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002798:	e022      	b.n	80027e0 <HAL_ADC_ConfigChannel+0xe8>
    }
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	681b      	ldr	r3, [r3, #0]
 800279e:	6919      	ldr	r1, [r3, #16]
 80027a0:	683b      	ldr	r3, [r7, #0]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	b29b      	uxth	r3, r3
 80027a6:	461a      	mov	r2, r3
 80027a8:	4613      	mov	r3, r2
 80027aa:	005b      	lsls	r3, r3, #1
 80027ac:	4413      	add	r3, r2
 80027ae:	2207      	movs	r2, #7
 80027b0:	fa02 f303 	lsl.w	r3, r2, r3
 80027b4:	43da      	mvns	r2, r3
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	400a      	ands	r2, r1
 80027bc:	611a      	str	r2, [r3, #16]
    
    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	6919      	ldr	r1, [r3, #16]
 80027c4:	683b      	ldr	r3, [r7, #0]
 80027c6:	689a      	ldr	r2, [r3, #8]
 80027c8:	683b      	ldr	r3, [r7, #0]
 80027ca:	681b      	ldr	r3, [r3, #0]
 80027cc:	b29b      	uxth	r3, r3
 80027ce:	4618      	mov	r0, r3
 80027d0:	4603      	mov	r3, r0
 80027d2:	005b      	lsls	r3, r3, #1
 80027d4:	4403      	add	r3, r0
 80027d6:	409a      	lsls	r2, r3
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	430a      	orrs	r2, r1
 80027de:	611a      	str	r2, [r3, #16]
  }
  
  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7)
 80027e0:	683b      	ldr	r3, [r7, #0]
 80027e2:	685b      	ldr	r3, [r3, #4]
 80027e4:	2b06      	cmp	r3, #6
 80027e6:	d824      	bhi.n	8002832 <HAL_ADC_ConfigChannel+0x13a>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80027ee:	683b      	ldr	r3, [r7, #0]
 80027f0:	685a      	ldr	r2, [r3, #4]
 80027f2:	4613      	mov	r3, r2
 80027f4:	009b      	lsls	r3, r3, #2
 80027f6:	4413      	add	r3, r2
 80027f8:	3b05      	subs	r3, #5
 80027fa:	221f      	movs	r2, #31
 80027fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002800:	43da      	mvns	r2, r3
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	681b      	ldr	r3, [r3, #0]
 8002806:	400a      	ands	r2, r1
 8002808:	635a      	str	r2, [r3, #52]	; 0x34
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8002810:	683b      	ldr	r3, [r7, #0]
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	b29b      	uxth	r3, r3
 8002816:	4618      	mov	r0, r3
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	685a      	ldr	r2, [r3, #4]
 800281c:	4613      	mov	r3, r2
 800281e:	009b      	lsls	r3, r3, #2
 8002820:	4413      	add	r3, r2
 8002822:	3b05      	subs	r3, #5
 8002824:	fa00 f203 	lsl.w	r2, r0, r3
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	681b      	ldr	r3, [r3, #0]
 800282c:	430a      	orrs	r2, r1
 800282e:	635a      	str	r2, [r3, #52]	; 0x34
 8002830:	e04c      	b.n	80028cc <HAL_ADC_ConfigChannel+0x1d4>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13)
 8002832:	683b      	ldr	r3, [r7, #0]
 8002834:	685b      	ldr	r3, [r3, #4]
 8002836:	2b0c      	cmp	r3, #12
 8002838:	d824      	bhi.n	8002884 <HAL_ADC_ConfigChannel+0x18c>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002840:	683b      	ldr	r3, [r7, #0]
 8002842:	685a      	ldr	r2, [r3, #4]
 8002844:	4613      	mov	r3, r2
 8002846:	009b      	lsls	r3, r3, #2
 8002848:	4413      	add	r3, r2
 800284a:	3b23      	subs	r3, #35	; 0x23
 800284c:	221f      	movs	r2, #31
 800284e:	fa02 f303 	lsl.w	r3, r2, r3
 8002852:	43da      	mvns	r2, r3
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	681b      	ldr	r3, [r3, #0]
 8002858:	400a      	ands	r2, r1
 800285a:	631a      	str	r2, [r3, #48]	; 0x30
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002862:	683b      	ldr	r3, [r7, #0]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	b29b      	uxth	r3, r3
 8002868:	4618      	mov	r0, r3
 800286a:	683b      	ldr	r3, [r7, #0]
 800286c:	685a      	ldr	r2, [r3, #4]
 800286e:	4613      	mov	r3, r2
 8002870:	009b      	lsls	r3, r3, #2
 8002872:	4413      	add	r3, r2
 8002874:	3b23      	subs	r3, #35	; 0x23
 8002876:	fa00 f203 	lsl.w	r2, r0, r3
 800287a:	687b      	ldr	r3, [r7, #4]
 800287c:	681b      	ldr	r3, [r3, #0]
 800287e:	430a      	orrs	r2, r1
 8002880:	631a      	str	r2, [r3, #48]	; 0x30
 8002882:	e023      	b.n	80028cc <HAL_ADC_ConfigChannel+0x1d4>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	681b      	ldr	r3, [r3, #0]
 8002888:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	685a      	ldr	r2, [r3, #4]
 800288e:	4613      	mov	r3, r2
 8002890:	009b      	lsls	r3, r3, #2
 8002892:	4413      	add	r3, r2
 8002894:	3b41      	subs	r3, #65	; 0x41
 8002896:	221f      	movs	r2, #31
 8002898:	fa02 f303 	lsl.w	r3, r2, r3
 800289c:	43da      	mvns	r2, r3
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	400a      	ands	r2, r1
 80028a4:	62da      	str	r2, [r3, #44]	; 0x2c
    
    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	681b      	ldr	r3, [r3, #0]
 80028aa:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80028ac:	683b      	ldr	r3, [r7, #0]
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	b29b      	uxth	r3, r3
 80028b2:	4618      	mov	r0, r3
 80028b4:	683b      	ldr	r3, [r7, #0]
 80028b6:	685a      	ldr	r2, [r3, #4]
 80028b8:	4613      	mov	r3, r2
 80028ba:	009b      	lsls	r3, r3, #2
 80028bc:	4413      	add	r3, r2
 80028be:	3b41      	subs	r3, #65	; 0x41
 80028c0:	fa00 f203 	lsl.w	r2, r0, r3
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	430a      	orrs	r2, r1
 80028ca:	62da      	str	r2, [r3, #44]	; 0x2c
  }
  
  /* if no internal channel selected */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_INTERNAL_NONE))
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	4a30      	ldr	r2, [pc, #192]	; (8002994 <HAL_ADC_ConfigChannel+0x29c>)
 80028d2:	4293      	cmp	r3, r2
 80028d4:	d10a      	bne.n	80028ec <HAL_ADC_ConfigChannel+0x1f4>
 80028d6:	683b      	ldr	r3, [r7, #0]
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80028de:	d105      	bne.n	80028ec <HAL_ADC_ConfigChannel+0x1f4>
  {
    /* Disable the VBAT & TSVREFE channel*/
    ADC->CCR &= ~(ADC_CCR_VBATE | ADC_CCR_TSVREFE);
 80028e0:	4b2d      	ldr	r3, [pc, #180]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 80028e2:	685b      	ldr	r3, [r3, #4]
 80028e4:	4a2c      	ldr	r2, [pc, #176]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 80028e6:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80028ea:	6053      	str	r3, [r2, #4]
  }

  /* if ADC1 Channel_18 is selected enable VBAT Channel */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	4a28      	ldr	r2, [pc, #160]	; (8002994 <HAL_ADC_ConfigChannel+0x29c>)
 80028f2:	4293      	cmp	r3, r2
 80028f4:	d10f      	bne.n	8002916 <HAL_ADC_ConfigChannel+0x21e>
 80028f6:	683b      	ldr	r3, [r7, #0]
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	2b12      	cmp	r3, #18
 80028fc:	d10b      	bne.n	8002916 <HAL_ADC_ConfigChannel+0x21e>
  {
    /* Disable the TEMPSENSOR channel as it is multiplixed with the VBAT channel */
    ADC->CCR &= ~ADC_CCR_TSVREFE;
 80028fe:	4b26      	ldr	r3, [pc, #152]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002900:	685b      	ldr	r3, [r3, #4]
 8002902:	4a25      	ldr	r2, [pc, #148]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002904:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002908:	6053      	str	r3, [r2, #4]

    /* Enable the VBAT channel*/
    ADC->CCR |= ADC_CCR_VBATE;
 800290a:	4b23      	ldr	r3, [pc, #140]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 800290c:	685b      	ldr	r3, [r3, #4]
 800290e:	4a22      	ldr	r2, [pc, #136]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002910:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8002914:	6053      	str	r3, [r2, #4]
  }
  
  /* if ADC1 Channel_18 or Channel_17 is selected enable TSVREFE Channel(Temperature sensor and VREFINT) */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8002916:	687b      	ldr	r3, [r7, #4]
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	4a1e      	ldr	r2, [pc, #120]	; (8002994 <HAL_ADC_ConfigChannel+0x29c>)
 800291c:	4293      	cmp	r3, r2
 800291e:	d12b      	bne.n	8002978 <HAL_ADC_ConfigChannel+0x280>
 8002920:	683b      	ldr	r3, [r7, #0]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	4a1a      	ldr	r2, [pc, #104]	; (8002990 <HAL_ADC_ConfigChannel+0x298>)
 8002926:	4293      	cmp	r3, r2
 8002928:	d003      	beq.n	8002932 <HAL_ADC_ConfigChannel+0x23a>
 800292a:	683b      	ldr	r3, [r7, #0]
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	2b11      	cmp	r3, #17
 8002930:	d122      	bne.n	8002978 <HAL_ADC_ConfigChannel+0x280>
  {
    /* Disable the VBAT channel as it is multiplixed with TEMPSENSOR channel */
    ADC->CCR &= ~ADC_CCR_VBATE;
 8002932:	4b19      	ldr	r3, [pc, #100]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002934:	685b      	ldr	r3, [r3, #4]
 8002936:	4a18      	ldr	r2, [pc, #96]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002938:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800293c:	6053      	str	r3, [r2, #4]

    /* Enable the TSVREFE channel*/
    ADC->CCR |= ADC_CCR_TSVREFE;
 800293e:	4b16      	ldr	r3, [pc, #88]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002940:	685b      	ldr	r3, [r3, #4]
 8002942:	4a15      	ldr	r2, [pc, #84]	; (8002998 <HAL_ADC_ConfigChannel+0x2a0>)
 8002944:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002948:	6053      	str	r3, [r2, #4]

    if(sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 800294a:	683b      	ldr	r3, [r7, #0]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	4a10      	ldr	r2, [pc, #64]	; (8002990 <HAL_ADC_ConfigChannel+0x298>)
 8002950:	4293      	cmp	r3, r2
 8002952:	d111      	bne.n	8002978 <HAL_ADC_ConfigChannel+0x280>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000));
 8002954:	4b11      	ldr	r3, [pc, #68]	; (800299c <HAL_ADC_ConfigChannel+0x2a4>)
 8002956:	681b      	ldr	r3, [r3, #0]
 8002958:	4a11      	ldr	r2, [pc, #68]	; (80029a0 <HAL_ADC_ConfigChannel+0x2a8>)
 800295a:	fba2 2303 	umull	r2, r3, r2, r3
 800295e:	0c9a      	lsrs	r2, r3, #18
 8002960:	4613      	mov	r3, r2
 8002962:	009b      	lsls	r3, r3, #2
 8002964:	4413      	add	r3, r2
 8002966:	005b      	lsls	r3, r3, #1
 8002968:	60fb      	str	r3, [r7, #12]
      while(counter != 0)
 800296a:	e002      	b.n	8002972 <HAL_ADC_ConfigChannel+0x27a>
      {
        counter--;
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	3b01      	subs	r3, #1
 8002970:	60fb      	str	r3, [r7, #12]
      while(counter != 0)
 8002972:	68fb      	ldr	r3, [r7, #12]
 8002974:	2b00      	cmp	r3, #0
 8002976:	d1f9      	bne.n	800296c <HAL_ADC_ConfigChannel+0x274>
      }
    }
  }
  
  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002978:	687b      	ldr	r3, [r7, #4]
 800297a:	2200      	movs	r2, #0
 800297c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
  
  /* Return function status */
  return HAL_OK;
 8002980:	2300      	movs	r3, #0
}
 8002982:	4618      	mov	r0, r3
 8002984:	3714      	adds	r7, #20
 8002986:	46bd      	mov	sp, r7
 8002988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800298c:	4770      	bx	lr
 800298e:	bf00      	nop
 8002990:	10000012 	.word	0x10000012
 8002994:	40012000 	.word	0x40012000
 8002998:	40012300 	.word	0x40012300
 800299c:	20000004 	.word	0x20000004
 80029a0:	431bde83 	.word	0x431bde83

080029a4 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef* hadc)
{
 80029a4:	b480      	push	{r7}
 80029a6:	b083      	sub	sp, #12
 80029a8:	af00      	add	r7, sp, #0
 80029aa:	6078      	str	r0, [r7, #4]
  /* Set ADC parameters */
  /* Set the ADC clock prescaler */
  ADC->CCR &= ~(ADC_CCR_ADCPRE);
 80029ac:	4b78      	ldr	r3, [pc, #480]	; (8002b90 <ADC_Init+0x1ec>)
 80029ae:	685b      	ldr	r3, [r3, #4]
 80029b0:	4a77      	ldr	r2, [pc, #476]	; (8002b90 <ADC_Init+0x1ec>)
 80029b2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80029b6:	6053      	str	r3, [r2, #4]
  ADC->CCR |=  hadc->Init.ClockPrescaler;
 80029b8:	4b75      	ldr	r3, [pc, #468]	; (8002b90 <ADC_Init+0x1ec>)
 80029ba:	685a      	ldr	r2, [r3, #4]
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	685b      	ldr	r3, [r3, #4]
 80029c0:	4973      	ldr	r1, [pc, #460]	; (8002b90 <ADC_Init+0x1ec>)
 80029c2:	4313      	orrs	r3, r2
 80029c4:	604b      	str	r3, [r1, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	685a      	ldr	r2, [r3, #4]
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	681b      	ldr	r3, [r3, #0]
 80029d0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80029d4:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	6859      	ldr	r1, [r3, #4]
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	691b      	ldr	r3, [r3, #16]
 80029e0:	021a      	lsls	r2, r3, #8
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	430a      	orrs	r2, r1
 80029e8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	685a      	ldr	r2, [r3, #4]
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	681b      	ldr	r3, [r3, #0]
 80029f4:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80029f8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80029fa:	687b      	ldr	r3, [r7, #4]
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	6859      	ldr	r1, [r3, #4]
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	689a      	ldr	r2, [r3, #8]
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	430a      	orrs	r2, r1
 8002a0a:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	689a      	ldr	r2, [r3, #8]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002a1a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	6899      	ldr	r1, [r3, #8]
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	68da      	ldr	r2, [r3, #12]
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	430a      	orrs	r2, r1
 8002a2c:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8002a2e:	687b      	ldr	r3, [r7, #4]
 8002a30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a32:	4a58      	ldr	r2, [pc, #352]	; (8002b94 <ADC_Init+0x1f0>)
 8002a34:	4293      	cmp	r3, r2
 8002a36:	d022      	beq.n	8002a7e <ADC_Init+0xda>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	681b      	ldr	r3, [r3, #0]
 8002a3c:	689a      	ldr	r2, [r3, #8]
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	681b      	ldr	r3, [r3, #0]
 8002a42:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002a46:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	681b      	ldr	r3, [r3, #0]
 8002a4c:	6899      	ldr	r1, [r3, #8]
 8002a4e:	687b      	ldr	r3, [r7, #4]
 8002a50:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	681b      	ldr	r3, [r3, #0]
 8002a56:	430a      	orrs	r2, r1
 8002a58:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	689a      	ldr	r2, [r3, #8]
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002a68:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8002a6a:	687b      	ldr	r3, [r7, #4]
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	6899      	ldr	r1, [r3, #8]
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	430a      	orrs	r2, r1
 8002a7a:	609a      	str	r2, [r3, #8]
 8002a7c:	e00f      	b.n	8002a9e <ADC_Init+0xfa>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	681b      	ldr	r3, [r3, #0]
 8002a82:	689a      	ldr	r2, [r3, #8]
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002a8c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	689a      	ldr	r2, [r3, #8]
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	681b      	ldr	r3, [r3, #0]
 8002a98:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002a9c:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	689a      	ldr	r2, [r3, #8]
 8002aa4:	687b      	ldr	r3, [r7, #4]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	f022 0202 	bic.w	r2, r2, #2
 8002aac:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	6899      	ldr	r1, [r3, #8]
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	699b      	ldr	r3, [r3, #24]
 8002ab8:	005a      	lsls	r2, r3, #1
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	430a      	orrs	r2, r1
 8002ac0:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d01b      	beq.n	8002b04 <ADC_Init+0x160>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	681b      	ldr	r3, [r3, #0]
 8002ad0:	685a      	ldr	r2, [r3, #4]
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002ada:	605a      	str	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	685a      	ldr	r2, [r3, #4]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	681b      	ldr	r3, [r3, #0]
 8002ae6:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8002aea:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	681b      	ldr	r3, [r3, #0]
 8002af0:	6859      	ldr	r1, [r3, #4]
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002af6:	3b01      	subs	r3, #1
 8002af8:	035a      	lsls	r2, r3, #13
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	430a      	orrs	r2, r1
 8002b00:	605a      	str	r2, [r3, #4]
 8002b02:	e007      	b.n	8002b14 <ADC_Init+0x170>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	681b      	ldr	r3, [r3, #0]
 8002b08:	685a      	ldr	r2, [r3, #4]
 8002b0a:	687b      	ldr	r3, [r7, #4]
 8002b0c:	681b      	ldr	r3, [r3, #0]
 8002b0e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002b12:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8002b14:	687b      	ldr	r3, [r7, #4]
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002b1a:	687b      	ldr	r3, [r7, #4]
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002b22:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	69db      	ldr	r3, [r3, #28]
 8002b2e:	3b01      	subs	r3, #1
 8002b30:	051a      	lsls	r2, r3, #20
 8002b32:	687b      	ldr	r3, [r7, #4]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	430a      	orrs	r2, r1
 8002b38:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	689a      	ldr	r2, [r3, #8]
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002b48:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	6899      	ldr	r1, [r3, #8]
 8002b50:	687b      	ldr	r3, [r7, #4]
 8002b52:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8002b56:	025a      	lsls	r2, r3, #9
 8002b58:	687b      	ldr	r3, [r7, #4]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	430a      	orrs	r2, r1
 8002b5e:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	681b      	ldr	r3, [r3, #0]
 8002b64:	689a      	ldr	r2, [r3, #8]
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	681b      	ldr	r3, [r3, #0]
 8002b6a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002b6e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	6899      	ldr	r1, [r3, #8]
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	695b      	ldr	r3, [r3, #20]
 8002b7a:	029a      	lsls	r2, r3, #10
 8002b7c:	687b      	ldr	r3, [r7, #4]
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	430a      	orrs	r2, r1
 8002b82:	609a      	str	r2, [r3, #8]
}
 8002b84:	bf00      	nop
 8002b86:	370c      	adds	r7, #12
 8002b88:	46bd      	mov	sp, r7
 8002b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b8e:	4770      	bx	lr
 8002b90:	40012300 	.word	0x40012300
 8002b94:	0f000001 	.word	0x0f000001

08002b98 <HAL_ADCEx_InjectedConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef* hadc)
{
 8002b98:	b480      	push	{r7}
 8002b9a:	b083      	sub	sp, #12
 8002b9c:	af00      	add	r7, sp, #0
 8002b9e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 8002ba0:	bf00      	nop
 8002ba2:	370c      	adds	r7, #12
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002baa:	4770      	bx	lr

08002bac <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002bac:	b480      	push	{r7}
 8002bae:	b085      	sub	sp, #20
 8002bb0:	af00      	add	r7, sp, #0
 8002bb2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	f003 0307 	and.w	r3, r3, #7
 8002bba:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002bbc:	4b0b      	ldr	r3, [pc, #44]	; (8002bec <__NVIC_SetPriorityGrouping+0x40>)
 8002bbe:	68db      	ldr	r3, [r3, #12]
 8002bc0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8002bc2:	68ba      	ldr	r2, [r7, #8]
 8002bc4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002bc8:	4013      	ands	r3, r2
 8002bca:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002bcc:	68fb      	ldr	r3, [r7, #12]
 8002bce:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002bd0:	68bb      	ldr	r3, [r7, #8]
 8002bd2:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8002bd4:	4b06      	ldr	r3, [pc, #24]	; (8002bf0 <__NVIC_SetPriorityGrouping+0x44>)
 8002bd6:	4313      	orrs	r3, r2
 8002bd8:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002bda:	4a04      	ldr	r2, [pc, #16]	; (8002bec <__NVIC_SetPriorityGrouping+0x40>)
 8002bdc:	68bb      	ldr	r3, [r7, #8]
 8002bde:	60d3      	str	r3, [r2, #12]
}
 8002be0:	bf00      	nop
 8002be2:	3714      	adds	r7, #20
 8002be4:	46bd      	mov	sp, r7
 8002be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bea:	4770      	bx	lr
 8002bec:	e000ed00 	.word	0xe000ed00
 8002bf0:	05fa0000 	.word	0x05fa0000

08002bf4 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8002bf4:	b480      	push	{r7}
 8002bf6:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002bf8:	4b04      	ldr	r3, [pc, #16]	; (8002c0c <__NVIC_GetPriorityGrouping+0x18>)
 8002bfa:	68db      	ldr	r3, [r3, #12]
 8002bfc:	0a1b      	lsrs	r3, r3, #8
 8002bfe:	f003 0307 	and.w	r3, r3, #7
}
 8002c02:	4618      	mov	r0, r3
 8002c04:	46bd      	mov	sp, r7
 8002c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c0a:	4770      	bx	lr
 8002c0c:	e000ed00 	.word	0xe000ed00

08002c10 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002c10:	b480      	push	{r7}
 8002c12:	b083      	sub	sp, #12
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	4603      	mov	r3, r0
 8002c18:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002c1a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	db0b      	blt.n	8002c3a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002c22:	79fb      	ldrb	r3, [r7, #7]
 8002c24:	f003 021f 	and.w	r2, r3, #31
 8002c28:	4907      	ldr	r1, [pc, #28]	; (8002c48 <__NVIC_EnableIRQ+0x38>)
 8002c2a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c2e:	095b      	lsrs	r3, r3, #5
 8002c30:	2001      	movs	r0, #1
 8002c32:	fa00 f202 	lsl.w	r2, r0, r2
 8002c36:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8002c3a:	bf00      	nop
 8002c3c:	370c      	adds	r7, #12
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c44:	4770      	bx	lr
 8002c46:	bf00      	nop
 8002c48:	e000e100 	.word	0xe000e100

08002c4c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002c4c:	b480      	push	{r7}
 8002c4e:	b083      	sub	sp, #12
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	4603      	mov	r3, r0
 8002c54:	6039      	str	r1, [r7, #0]
 8002c56:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002c58:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	db0a      	blt.n	8002c76 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002c60:	683b      	ldr	r3, [r7, #0]
 8002c62:	b2da      	uxtb	r2, r3
 8002c64:	490c      	ldr	r1, [pc, #48]	; (8002c98 <__NVIC_SetPriority+0x4c>)
 8002c66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c6a:	0112      	lsls	r2, r2, #4
 8002c6c:	b2d2      	uxtb	r2, r2
 8002c6e:	440b      	add	r3, r1
 8002c70:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002c74:	e00a      	b.n	8002c8c <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002c76:	683b      	ldr	r3, [r7, #0]
 8002c78:	b2da      	uxtb	r2, r3
 8002c7a:	4908      	ldr	r1, [pc, #32]	; (8002c9c <__NVIC_SetPriority+0x50>)
 8002c7c:	79fb      	ldrb	r3, [r7, #7]
 8002c7e:	f003 030f 	and.w	r3, r3, #15
 8002c82:	3b04      	subs	r3, #4
 8002c84:	0112      	lsls	r2, r2, #4
 8002c86:	b2d2      	uxtb	r2, r2
 8002c88:	440b      	add	r3, r1
 8002c8a:	761a      	strb	r2, [r3, #24]
}
 8002c8c:	bf00      	nop
 8002c8e:	370c      	adds	r7, #12
 8002c90:	46bd      	mov	sp, r7
 8002c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c96:	4770      	bx	lr
 8002c98:	e000e100 	.word	0xe000e100
 8002c9c:	e000ed00 	.word	0xe000ed00

08002ca0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002ca0:	b480      	push	{r7}
 8002ca2:	b089      	sub	sp, #36	; 0x24
 8002ca4:	af00      	add	r7, sp, #0
 8002ca6:	60f8      	str	r0, [r7, #12]
 8002ca8:	60b9      	str	r1, [r7, #8]
 8002caa:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002cac:	68fb      	ldr	r3, [r7, #12]
 8002cae:	f003 0307 	and.w	r3, r3, #7
 8002cb2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002cb4:	69fb      	ldr	r3, [r7, #28]
 8002cb6:	f1c3 0307 	rsb	r3, r3, #7
 8002cba:	2b04      	cmp	r3, #4
 8002cbc:	bf28      	it	cs
 8002cbe:	2304      	movcs	r3, #4
 8002cc0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002cc2:	69fb      	ldr	r3, [r7, #28]
 8002cc4:	3304      	adds	r3, #4
 8002cc6:	2b06      	cmp	r3, #6
 8002cc8:	d902      	bls.n	8002cd0 <NVIC_EncodePriority+0x30>
 8002cca:	69fb      	ldr	r3, [r7, #28]
 8002ccc:	3b03      	subs	r3, #3
 8002cce:	e000      	b.n	8002cd2 <NVIC_EncodePriority+0x32>
 8002cd0:	2300      	movs	r3, #0
 8002cd2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002cd4:	f04f 32ff 	mov.w	r2, #4294967295
 8002cd8:	69bb      	ldr	r3, [r7, #24]
 8002cda:	fa02 f303 	lsl.w	r3, r2, r3
 8002cde:	43da      	mvns	r2, r3
 8002ce0:	68bb      	ldr	r3, [r7, #8]
 8002ce2:	401a      	ands	r2, r3
 8002ce4:	697b      	ldr	r3, [r7, #20]
 8002ce6:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002ce8:	f04f 31ff 	mov.w	r1, #4294967295
 8002cec:	697b      	ldr	r3, [r7, #20]
 8002cee:	fa01 f303 	lsl.w	r3, r1, r3
 8002cf2:	43d9      	mvns	r1, r3
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002cf8:	4313      	orrs	r3, r2
         );
}
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	3724      	adds	r7, #36	; 0x24
 8002cfe:	46bd      	mov	sp, r7
 8002d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d04:	4770      	bx	lr

08002d06 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002d06:	b580      	push	{r7, lr}
 8002d08:	b082      	sub	sp, #8
 8002d0a:	af00      	add	r7, sp, #0
 8002d0c:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002d0e:	6878      	ldr	r0, [r7, #4]
 8002d10:	f7ff ff4c 	bl	8002bac <__NVIC_SetPriorityGrouping>
}
 8002d14:	bf00      	nop
 8002d16:	3708      	adds	r7, #8
 8002d18:	46bd      	mov	sp, r7
 8002d1a:	bd80      	pop	{r7, pc}

08002d1c <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002d1c:	b580      	push	{r7, lr}
 8002d1e:	b086      	sub	sp, #24
 8002d20:	af00      	add	r7, sp, #0
 8002d22:	4603      	mov	r3, r0
 8002d24:	60b9      	str	r1, [r7, #8]
 8002d26:	607a      	str	r2, [r7, #4]
 8002d28:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8002d2e:	f7ff ff61 	bl	8002bf4 <__NVIC_GetPriorityGrouping>
 8002d32:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002d34:	687a      	ldr	r2, [r7, #4]
 8002d36:	68b9      	ldr	r1, [r7, #8]
 8002d38:	6978      	ldr	r0, [r7, #20]
 8002d3a:	f7ff ffb1 	bl	8002ca0 <NVIC_EncodePriority>
 8002d3e:	4602      	mov	r2, r0
 8002d40:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002d44:	4611      	mov	r1, r2
 8002d46:	4618      	mov	r0, r3
 8002d48:	f7ff ff80 	bl	8002c4c <__NVIC_SetPriority>
}
 8002d4c:	bf00      	nop
 8002d4e:	3718      	adds	r7, #24
 8002d50:	46bd      	mov	sp, r7
 8002d52:	bd80      	pop	{r7, pc}

08002d54 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8002d54:	b580      	push	{r7, lr}
 8002d56:	b082      	sub	sp, #8
 8002d58:	af00      	add	r7, sp, #0
 8002d5a:	4603      	mov	r3, r0
 8002d5c:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8002d5e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d62:	4618      	mov	r0, r3
 8002d64:	f7ff ff54 	bl	8002c10 <__NVIC_EnableIRQ>
}
 8002d68:	bf00      	nop
 8002d6a:	3708      	adds	r7, #8
 8002d6c:	46bd      	mov	sp, r7
 8002d6e:	bd80      	pop	{r7, pc}

08002d70 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8002d70:	b580      	push	{r7, lr}
 8002d72:	b082      	sub	sp, #8
 8002d74:	af00      	add	r7, sp, #0
 8002d76:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d101      	bne.n	8002d82 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8002d7e:	2301      	movs	r3, #1
 8002d80:	e054      	b.n	8002e2c <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8002d82:	687b      	ldr	r3, [r7, #4]
 8002d84:	7f5b      	ldrb	r3, [r3, #29]
 8002d86:	b2db      	uxtb	r3, r3
 8002d88:	2b00      	cmp	r3, #0
 8002d8a:	d105      	bne.n	8002d98 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	2200      	movs	r2, #0
 8002d90:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8002d92:	6878      	ldr	r0, [r7, #4]
 8002d94:	f7fe fc78 	bl	8001688 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	2202      	movs	r2, #2
 8002d9c:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	791b      	ldrb	r3, [r3, #4]
 8002da2:	2b00      	cmp	r3, #0
 8002da4:	d10c      	bne.n	8002dc0 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	681b      	ldr	r3, [r3, #0]
 8002daa:	4a22      	ldr	r2, [pc, #136]	; (8002e34 <HAL_CRC_Init+0xc4>)
 8002dac:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	689a      	ldr	r2, [r3, #8]
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	f022 0218 	bic.w	r2, r2, #24
 8002dbc:	609a      	str	r2, [r3, #8]
 8002dbe:	e00c      	b.n	8002dda <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	6899      	ldr	r1, [r3, #8]
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	68db      	ldr	r3, [r3, #12]
 8002dc8:	461a      	mov	r2, r3
 8002dca:	6878      	ldr	r0, [r7, #4]
 8002dcc:	f000 f834 	bl	8002e38 <HAL_CRCEx_Polynomial_Set>
 8002dd0:	4603      	mov	r3, r0
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	d001      	beq.n	8002dda <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 8002dd6:	2301      	movs	r3, #1
 8002dd8:	e028      	b.n	8002e2c <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	795b      	ldrb	r3, [r3, #5]
 8002dde:	2b00      	cmp	r3, #0
 8002de0:	d105      	bne.n	8002dee <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	f04f 32ff 	mov.w	r2, #4294967295
 8002dea:	611a      	str	r2, [r3, #16]
 8002dec:	e004      	b.n	8002df8 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8002dee:	687b      	ldr	r3, [r7, #4]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	687a      	ldr	r2, [r7, #4]
 8002df4:	6912      	ldr	r2, [r2, #16]
 8002df6:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	689b      	ldr	r3, [r3, #8]
 8002dfe:	f023 0160 	bic.w	r1, r3, #96	; 0x60
 8002e02:	687b      	ldr	r3, [r7, #4]
 8002e04:	695a      	ldr	r2, [r3, #20]
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	681b      	ldr	r3, [r3, #0]
 8002e0a:	430a      	orrs	r2, r1
 8002e0c:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8002e0e:	687b      	ldr	r3, [r7, #4]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	689b      	ldr	r3, [r3, #8]
 8002e14:	f023 0180 	bic.w	r1, r3, #128	; 0x80
 8002e18:	687b      	ldr	r3, [r7, #4]
 8002e1a:	699a      	ldr	r2, [r3, #24]
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	430a      	orrs	r2, r1
 8002e22:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	2201      	movs	r2, #1
 8002e28:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8002e2a:	2300      	movs	r3, #0
}
 8002e2c:	4618      	mov	r0, r3
 8002e2e:	3708      	adds	r7, #8
 8002e30:	46bd      	mov	sp, r7
 8002e32:	bd80      	pop	{r7, pc}
 8002e34:	04c11db7 	.word	0x04c11db7

08002e38 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8002e38:	b480      	push	{r7}
 8002e3a:	b087      	sub	sp, #28
 8002e3c:	af00      	add	r7, sp, #0
 8002e3e:	60f8      	str	r0, [r7, #12]
 8002e40:	60b9      	str	r1, [r7, #8]
 8002e42:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8002e44:	2300      	movs	r3, #0
 8002e46:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8002e48:	231f      	movs	r3, #31
 8002e4a:	613b      	str	r3, [r7, #16]
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8002e4c:	bf00      	nop
 8002e4e:	693b      	ldr	r3, [r7, #16]
 8002e50:	1e5a      	subs	r2, r3, #1
 8002e52:	613a      	str	r2, [r7, #16]
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d009      	beq.n	8002e6c <HAL_CRCEx_Polynomial_Set+0x34>
 8002e58:	693b      	ldr	r3, [r7, #16]
 8002e5a:	f003 031f 	and.w	r3, r3, #31
 8002e5e:	68ba      	ldr	r2, [r7, #8]
 8002e60:	fa22 f303 	lsr.w	r3, r2, r3
 8002e64:	f003 0301 	and.w	r3, r3, #1
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	d0f0      	beq.n	8002e4e <HAL_CRCEx_Polynomial_Set+0x16>
  {
  }

  switch (PolyLength)
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	2b18      	cmp	r3, #24
 8002e70:	d846      	bhi.n	8002f00 <HAL_CRCEx_Polynomial_Set+0xc8>
 8002e72:	a201      	add	r2, pc, #4	; (adr r2, 8002e78 <HAL_CRCEx_Polynomial_Set+0x40>)
 8002e74:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002e78:	08002f07 	.word	0x08002f07
 8002e7c:	08002f01 	.word	0x08002f01
 8002e80:	08002f01 	.word	0x08002f01
 8002e84:	08002f01 	.word	0x08002f01
 8002e88:	08002f01 	.word	0x08002f01
 8002e8c:	08002f01 	.word	0x08002f01
 8002e90:	08002f01 	.word	0x08002f01
 8002e94:	08002f01 	.word	0x08002f01
 8002e98:	08002ef5 	.word	0x08002ef5
 8002e9c:	08002f01 	.word	0x08002f01
 8002ea0:	08002f01 	.word	0x08002f01
 8002ea4:	08002f01 	.word	0x08002f01
 8002ea8:	08002f01 	.word	0x08002f01
 8002eac:	08002f01 	.word	0x08002f01
 8002eb0:	08002f01 	.word	0x08002f01
 8002eb4:	08002f01 	.word	0x08002f01
 8002eb8:	08002ee9 	.word	0x08002ee9
 8002ebc:	08002f01 	.word	0x08002f01
 8002ec0:	08002f01 	.word	0x08002f01
 8002ec4:	08002f01 	.word	0x08002f01
 8002ec8:	08002f01 	.word	0x08002f01
 8002ecc:	08002f01 	.word	0x08002f01
 8002ed0:	08002f01 	.word	0x08002f01
 8002ed4:	08002f01 	.word	0x08002f01
 8002ed8:	08002edd 	.word	0x08002edd
  {
    case CRC_POLYLENGTH_7B:
      if (msb >= HAL_CRC_LENGTH_7B)
 8002edc:	693b      	ldr	r3, [r7, #16]
 8002ede:	2b06      	cmp	r3, #6
 8002ee0:	d913      	bls.n	8002f0a <HAL_CRCEx_Polynomial_Set+0xd2>
      {
        status =   HAL_ERROR;
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	75fb      	strb	r3, [r7, #23]
      }
      break;
 8002ee6:	e010      	b.n	8002f0a <HAL_CRCEx_Polynomial_Set+0xd2>
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
 8002ee8:	693b      	ldr	r3, [r7, #16]
 8002eea:	2b07      	cmp	r3, #7
 8002eec:	d90f      	bls.n	8002f0e <HAL_CRCEx_Polynomial_Set+0xd6>
      {
        status =   HAL_ERROR;
 8002eee:	2301      	movs	r3, #1
 8002ef0:	75fb      	strb	r3, [r7, #23]
      }
      break;
 8002ef2:	e00c      	b.n	8002f0e <HAL_CRCEx_Polynomial_Set+0xd6>
    case CRC_POLYLENGTH_16B:
      if (msb >= HAL_CRC_LENGTH_16B)
 8002ef4:	693b      	ldr	r3, [r7, #16]
 8002ef6:	2b0f      	cmp	r3, #15
 8002ef8:	d90b      	bls.n	8002f12 <HAL_CRCEx_Polynomial_Set+0xda>
      {
        status =   HAL_ERROR;
 8002efa:	2301      	movs	r3, #1
 8002efc:	75fb      	strb	r3, [r7, #23]
      }
      break;
 8002efe:	e008      	b.n	8002f12 <HAL_CRCEx_Polynomial_Set+0xda>

    case CRC_POLYLENGTH_32B:
      /* no polynomial definition vs. polynomial length issue possible */
      break;
    default:
      status =  HAL_ERROR;
 8002f00:	2301      	movs	r3, #1
 8002f02:	75fb      	strb	r3, [r7, #23]
      break;
 8002f04:	e006      	b.n	8002f14 <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8002f06:	bf00      	nop
 8002f08:	e004      	b.n	8002f14 <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8002f0a:	bf00      	nop
 8002f0c:	e002      	b.n	8002f14 <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8002f0e:	bf00      	nop
 8002f10:	e000      	b.n	8002f14 <HAL_CRCEx_Polynomial_Set+0xdc>
      break;
 8002f12:	bf00      	nop
  }
  if (status == HAL_OK)
 8002f14:	7dfb      	ldrb	r3, [r7, #23]
 8002f16:	2b00      	cmp	r3, #0
 8002f18:	d10d      	bne.n	8002f36 <HAL_CRCEx_Polynomial_Set+0xfe>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	68ba      	ldr	r2, [r7, #8]
 8002f20:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8002f22:	68fb      	ldr	r3, [r7, #12]
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	689b      	ldr	r3, [r3, #8]
 8002f28:	f023 0118 	bic.w	r1, r3, #24
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	687a      	ldr	r2, [r7, #4]
 8002f32:	430a      	orrs	r2, r1
 8002f34:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 8002f36:	7dfb      	ldrb	r3, [r7, #23]
}
 8002f38:	4618      	mov	r0, r3
 8002f3a:	371c      	adds	r7, #28
 8002f3c:	46bd      	mov	sp, r7
 8002f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f42:	4770      	bx	lr

08002f44 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8002f44:	b580      	push	{r7, lr}
 8002f46:	b086      	sub	sp, #24
 8002f48:	af00      	add	r7, sp, #0
 8002f4a:	60f8      	str	r0, [r7, #12]
 8002f4c:	60b9      	str	r1, [r7, #8]
 8002f4e:	607a      	str	r2, [r7, #4]
 8002f50:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8002f52:	2300      	movs	r3, #0
 8002f54:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8002f56:	68fb      	ldr	r3, [r7, #12]
 8002f58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002f5a:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 8002f5c:	68fb      	ldr	r3, [r7, #12]
 8002f5e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8002f62:	2b01      	cmp	r3, #1
 8002f64:	d101      	bne.n	8002f6a <HAL_DMA_Start_IT+0x26>
 8002f66:	2302      	movs	r3, #2
 8002f68:	e048      	b.n	8002ffc <HAL_DMA_Start_IT+0xb8>
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	2201      	movs	r2, #1
 8002f6e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002f78:	b2db      	uxtb	r3, r3
 8002f7a:	2b01      	cmp	r3, #1
 8002f7c:	d137      	bne.n	8002fee <HAL_DMA_Start_IT+0xaa>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 8002f7e:	68fb      	ldr	r3, [r7, #12]
 8002f80:	2202      	movs	r2, #2
 8002f82:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8002f86:	68fb      	ldr	r3, [r7, #12]
 8002f88:	2200      	movs	r2, #0
 8002f8a:	655a      	str	r2, [r3, #84]	; 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8002f8c:	683b      	ldr	r3, [r7, #0]
 8002f8e:	687a      	ldr	r2, [r7, #4]
 8002f90:	68b9      	ldr	r1, [r7, #8]
 8002f92:	68f8      	ldr	r0, [r7, #12]
 8002f94:	f000 f836 	bl	8003004 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002f9c:	223f      	movs	r2, #63	; 0x3f
 8002f9e:	409a      	lsls	r2, r3
 8002fa0:	693b      	ldr	r3, [r7, #16]
 8002fa2:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8002fa4:	68fb      	ldr	r3, [r7, #12]
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	681a      	ldr	r2, [r3, #0]
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	f042 0216 	orr.w	r2, r2, #22
 8002fb2:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR |= DMA_IT_FE;
 8002fb4:	68fb      	ldr	r3, [r7, #12]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	695a      	ldr	r2, [r3, #20]
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002fc2:	615a      	str	r2, [r3, #20]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8002fc4:	68fb      	ldr	r3, [r7, #12]
 8002fc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	d007      	beq.n	8002fdc <HAL_DMA_Start_IT+0x98>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	681b      	ldr	r3, [r3, #0]
 8002fd0:	681a      	ldr	r2, [r3, #0]
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	f042 0208 	orr.w	r2, r2, #8
 8002fda:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	681a      	ldr	r2, [r3, #0]
 8002fe2:	68fb      	ldr	r3, [r7, #12]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	f042 0201 	orr.w	r2, r2, #1
 8002fea:	601a      	str	r2, [r3, #0]
 8002fec:	e005      	b.n	8002ffa <HAL_DMA_Start_IT+0xb6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8002fee:	68fb      	ldr	r3, [r7, #12]
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8002ff6:	2302      	movs	r3, #2
 8002ff8:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8002ffa:	7dfb      	ldrb	r3, [r7, #23]
}
 8002ffc:	4618      	mov	r0, r3
 8002ffe:	3718      	adds	r7, #24
 8003000:	46bd      	mov	sp, r7
 8003002:	bd80      	pop	{r7, pc}

08003004 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003004:	b480      	push	{r7}
 8003006:	b085      	sub	sp, #20
 8003008:	af00      	add	r7, sp, #0
 800300a:	60f8      	str	r0, [r7, #12]
 800300c:	60b9      	str	r1, [r7, #8]
 800300e:	607a      	str	r2, [r7, #4]
 8003010:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003012:	68fb      	ldr	r3, [r7, #12]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	681a      	ldr	r2, [r3, #0]
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8003020:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003022:	68fb      	ldr	r3, [r7, #12]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	683a      	ldr	r2, [r7, #0]
 8003028:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 800302a:	68fb      	ldr	r3, [r7, #12]
 800302c:	689b      	ldr	r3, [r3, #8]
 800302e:	2b40      	cmp	r3, #64	; 0x40
 8003030:	d108      	bne.n	8003044 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003032:	68fb      	ldr	r3, [r7, #12]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	687a      	ldr	r2, [r7, #4]
 8003038:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	68ba      	ldr	r2, [r7, #8]
 8003040:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003042:	e007      	b.n	8003054 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003044:	68fb      	ldr	r3, [r7, #12]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	68ba      	ldr	r2, [r7, #8]
 800304a:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 800304c:	68fb      	ldr	r3, [r7, #12]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	687a      	ldr	r2, [r7, #4]
 8003052:	60da      	str	r2, [r3, #12]
}
 8003054:	bf00      	nop
 8003056:	3714      	adds	r7, #20
 8003058:	46bd      	mov	sp, r7
 800305a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800305e:	4770      	bx	lr

08003060 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003060:	b580      	push	{r7, lr}
 8003062:	b082      	sub	sp, #8
 8003064:	af00      	add	r7, sp, #0
 8003066:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	2b00      	cmp	r3, #0
 800306c:	d101      	bne.n	8003072 <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 800306e:	2301      	movs	r3, #1
 8003070:	e039      	b.n	80030e6 <HAL_DMA2D_Init+0x86>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8003078:	b2db      	uxtb	r3, r3
 800307a:	2b00      	cmp	r3, #0
 800307c:	d106      	bne.n	800308c <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	2200      	movs	r2, #0
 8003082:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003086:	6878      	ldr	r0, [r7, #4]
 8003088:	f7fe fb1e 	bl	80016c8 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800308c:	687b      	ldr	r3, [r7, #4]
 800308e:	2202      	movs	r2, #2
 8003090:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	681b      	ldr	r3, [r3, #0]
 8003098:	681b      	ldr	r3, [r3, #0]
 800309a:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	685a      	ldr	r2, [r3, #4]
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	430a      	orrs	r2, r1
 80030a8:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	681b      	ldr	r3, [r3, #0]
 80030ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80030b0:	f023 0107 	bic.w	r1, r3, #7
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	689a      	ldr	r2, [r3, #8]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	430a      	orrs	r2, r1
 80030be:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80030c6:	4b0a      	ldr	r3, [pc, #40]	; (80030f0 <HAL_DMA2D_Init+0x90>)
 80030c8:	4013      	ands	r3, r2
 80030ca:	687a      	ldr	r2, [r7, #4]
 80030cc:	68d1      	ldr	r1, [r2, #12]
 80030ce:	687a      	ldr	r2, [r7, #4]
 80030d0:	6812      	ldr	r2, [r2, #0]
 80030d2:	430b      	orrs	r3, r1
 80030d4:	6413      	str	r3, [r2, #64]	; 0x40
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	2200      	movs	r2, #0
 80030da:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	2201      	movs	r2, #1
 80030e0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 80030e4:	2300      	movs	r3, #0
}
 80030e6:	4618      	mov	r0, r3
 80030e8:	3708      	adds	r7, #8
 80030ea:	46bd      	mov	sp, r7
 80030ec:	bd80      	pop	{r7, pc}
 80030ee:	bf00      	nop
 80030f0:	ffffc000 	.word	0xffffc000

080030f4 <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 80030f4:	b580      	push	{r7, lr}
 80030f6:	b084      	sub	sp, #16
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	685b      	ldr	r3, [r3, #4]
 8003102:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	681b      	ldr	r3, [r3, #0]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800310c:	68fb      	ldr	r3, [r7, #12]
 800310e:	f003 0301 	and.w	r3, r3, #1
 8003112:	2b00      	cmp	r3, #0
 8003114:	d026      	beq.n	8003164 <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003116:	68bb      	ldr	r3, [r7, #8]
 8003118:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800311c:	2b00      	cmp	r3, #0
 800311e:	d021      	beq.n	8003164 <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	681a      	ldr	r2, [r3, #0]
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800312e:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003134:	f043 0201 	orr.w	r2, r3, #1
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	2201      	movs	r2, #1
 8003142:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	2204      	movs	r2, #4
 8003148:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	2200      	movs	r2, #0
 8003150:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	695b      	ldr	r3, [r3, #20]
 8003158:	2b00      	cmp	r3, #0
 800315a:	d003      	beq.n	8003164 <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	695b      	ldr	r3, [r3, #20]
 8003160:	6878      	ldr	r0, [r7, #4]
 8003162:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	f003 0320 	and.w	r3, r3, #32
 800316a:	2b00      	cmp	r3, #0
 800316c:	d026      	beq.n	80031bc <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800316e:	68bb      	ldr	r3, [r7, #8]
 8003170:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8003174:	2b00      	cmp	r3, #0
 8003176:	d021      	beq.n	80031bc <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	681a      	ldr	r2, [r3, #0]
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003186:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	681b      	ldr	r3, [r3, #0]
 800318c:	2220      	movs	r2, #32
 800318e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003194:	f043 0202 	orr.w	r2, r3, #2
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	2204      	movs	r2, #4
 80031a0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80031a4:	687b      	ldr	r3, [r7, #4]
 80031a6:	2200      	movs	r2, #0
 80031a8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	695b      	ldr	r3, [r3, #20]
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d003      	beq.n	80031bc <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	695b      	ldr	r3, [r3, #20]
 80031b8:	6878      	ldr	r0, [r7, #4]
 80031ba:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	f003 0308 	and.w	r3, r3, #8
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d026      	beq.n	8003214 <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80031c6:	68bb      	ldr	r3, [r7, #8]
 80031c8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d021      	beq.n	8003214 <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	681a      	ldr	r2, [r3, #0]
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80031de:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	681b      	ldr	r3, [r3, #0]
 80031e4:	2208      	movs	r2, #8
 80031e6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80031ec:	f043 0204 	orr.w	r2, r3, #4
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	2204      	movs	r2, #4
 80031f8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	2200      	movs	r2, #0
 8003200:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	695b      	ldr	r3, [r3, #20]
 8003208:	2b00      	cmp	r3, #0
 800320a:	d003      	beq.n	8003214 <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	695b      	ldr	r3, [r3, #20]
 8003210:	6878      	ldr	r0, [r7, #4]
 8003212:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	f003 0304 	and.w	r3, r3, #4
 800321a:	2b00      	cmp	r3, #0
 800321c:	d013      	beq.n	8003246 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800321e:	68bb      	ldr	r3, [r7, #8]
 8003220:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003224:	2b00      	cmp	r3, #0
 8003226:	d00e      	beq.n	8003246 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	681b      	ldr	r3, [r3, #0]
 800322c:	681a      	ldr	r2, [r3, #0]
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003236:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	2204      	movs	r2, #4
 800323e:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003240:	6878      	ldr	r0, [r7, #4]
 8003242:	f000 f853 	bl	80032ec <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	f003 0302 	and.w	r3, r3, #2
 800324c:	2b00      	cmp	r3, #0
 800324e:	d024      	beq.n	800329a <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003250:	68bb      	ldr	r3, [r7, #8]
 8003252:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8003256:	2b00      	cmp	r3, #0
 8003258:	d01f      	beq.n	800329a <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	681a      	ldr	r2, [r3, #0]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003268:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	2202      	movs	r2, #2
 8003270:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800327a:	687b      	ldr	r3, [r7, #4]
 800327c:	2201      	movs	r2, #1
 800327e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003282:	687b      	ldr	r3, [r7, #4]
 8003284:	2200      	movs	r2, #0
 8003286:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	691b      	ldr	r3, [r3, #16]
 800328e:	2b00      	cmp	r3, #0
 8003290:	d003      	beq.n	800329a <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	691b      	ldr	r3, [r3, #16]
 8003296:	6878      	ldr	r0, [r7, #4]
 8003298:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800329a:	68fb      	ldr	r3, [r7, #12]
 800329c:	f003 0310 	and.w	r3, r3, #16
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d01f      	beq.n	80032e4 <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80032a4:	68bb      	ldr	r3, [r7, #8]
 80032a6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d01a      	beq.n	80032e4 <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	681a      	ldr	r2, [r3, #0]
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80032bc:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	2210      	movs	r2, #16
 80032c4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	2201      	movs	r2, #1
 80032d2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	2200      	movs	r2, #0
 80032da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80032de:	6878      	ldr	r0, [r7, #4]
 80032e0:	f000 f80e 	bl	8003300 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80032e4:	bf00      	nop
 80032e6:	3710      	adds	r7, #16
 80032e8:	46bd      	mov	sp, r7
 80032ea:	bd80      	pop	{r7, pc}

080032ec <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 80032ec:	b480      	push	{r7}
 80032ee:	b083      	sub	sp, #12
 80032f0:	af00      	add	r7, sp, #0
 80032f2:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 80032f4:	bf00      	nop
 80032f6:	370c      	adds	r7, #12
 80032f8:	46bd      	mov	sp, r7
 80032fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032fe:	4770      	bx	lr

08003300 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8003300:	b480      	push	{r7}
 8003302:	b083      	sub	sp, #12
 8003304:	af00      	add	r7, sp, #0
 8003306:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8003308:	bf00      	nop
 800330a:	370c      	adds	r7, #12
 800330c:	46bd      	mov	sp, r7
 800330e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003312:	4770      	bx	lr

08003314 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003314:	b480      	push	{r7}
 8003316:	b087      	sub	sp, #28
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	685b      	ldr	r3, [r3, #4]
 8003322:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003326:	687b      	ldr	r3, [r7, #4]
 8003328:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800332c:	2b01      	cmp	r3, #1
 800332e:	d101      	bne.n	8003334 <HAL_DMA2D_ConfigLayer+0x20>
 8003330:	2302      	movs	r3, #2
 8003332:	e079      	b.n	8003428 <HAL_DMA2D_ConfigLayer+0x114>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	2201      	movs	r2, #1
 8003338:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	2202      	movs	r2, #2
 8003340:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8003344:	683b      	ldr	r3, [r7, #0]
 8003346:	011b      	lsls	r3, r3, #4
 8003348:	3318      	adds	r3, #24
 800334a:	687a      	ldr	r2, [r7, #4]
 800334c:	4413      	add	r3, r2
 800334e:	613b      	str	r3, [r7, #16]
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003350:	693b      	ldr	r3, [r7, #16]
 8003352:	685a      	ldr	r2, [r3, #4]
 8003354:	693b      	ldr	r3, [r7, #16]
 8003356:	689b      	ldr	r3, [r3, #8]
 8003358:	041b      	lsls	r3, r3, #16
 800335a:	4313      	orrs	r3, r2
 800335c:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 800335e:	4b35      	ldr	r3, [pc, #212]	; (8003434 <HAL_DMA2D_ConfigLayer+0x120>)
 8003360:	60fb      	str	r3, [r7, #12]
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003362:	693b      	ldr	r3, [r7, #16]
 8003364:	685b      	ldr	r3, [r3, #4]
 8003366:	2b0a      	cmp	r3, #10
 8003368:	d003      	beq.n	8003372 <HAL_DMA2D_ConfigLayer+0x5e>
 800336a:	693b      	ldr	r3, [r7, #16]
 800336c:	685b      	ldr	r3, [r3, #4]
 800336e:	2b09      	cmp	r3, #9
 8003370:	d107      	bne.n	8003382 <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003372:	693b      	ldr	r3, [r7, #16]
 8003374:	68db      	ldr	r3, [r3, #12]
 8003376:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800337a:	697a      	ldr	r2, [r7, #20]
 800337c:	4313      	orrs	r3, r2
 800337e:	617b      	str	r3, [r7, #20]
 8003380:	e005      	b.n	800338e <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003382:	693b      	ldr	r3, [r7, #16]
 8003384:	68db      	ldr	r3, [r3, #12]
 8003386:	061b      	lsls	r3, r3, #24
 8003388:	697a      	ldr	r2, [r7, #20]
 800338a:	4313      	orrs	r3, r2
 800338c:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800338e:	683b      	ldr	r3, [r7, #0]
 8003390:	2b00      	cmp	r3, #0
 8003392:	d120      	bne.n	80033d6 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	681b      	ldr	r3, [r3, #0]
 8003398:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	43db      	mvns	r3, r3
 800339e:	ea02 0103 	and.w	r1, r2, r3
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	697a      	ldr	r2, [r7, #20]
 80033a8:	430a      	orrs	r2, r1
 80033aa:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80033ac:	687b      	ldr	r3, [r7, #4]
 80033ae:	681b      	ldr	r3, [r3, #0]
 80033b0:	693a      	ldr	r2, [r7, #16]
 80033b2:	6812      	ldr	r2, [r2, #0]
 80033b4:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80033b6:	693b      	ldr	r3, [r7, #16]
 80033b8:	685b      	ldr	r3, [r3, #4]
 80033ba:	2b0a      	cmp	r3, #10
 80033bc:	d003      	beq.n	80033c6 <HAL_DMA2D_ConfigLayer+0xb2>
 80033be:	693b      	ldr	r3, [r7, #16]
 80033c0:	685b      	ldr	r3, [r3, #4]
 80033c2:	2b09      	cmp	r3, #9
 80033c4:	d127      	bne.n	8003416 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80033c6:	693b      	ldr	r3, [r7, #16]
 80033c8:	68da      	ldr	r2, [r3, #12]
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	681b      	ldr	r3, [r3, #0]
 80033ce:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80033d2:	629a      	str	r2, [r3, #40]	; 0x28
 80033d4:	e01f      	b.n	8003416 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	69da      	ldr	r2, [r3, #28]
 80033dc:	68fb      	ldr	r3, [r7, #12]
 80033de:	43db      	mvns	r3, r3
 80033e0:	ea02 0103 	and.w	r1, r2, r3
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	697a      	ldr	r2, [r7, #20]
 80033ea:	430a      	orrs	r2, r1
 80033ec:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	693a      	ldr	r2, [r7, #16]
 80033f4:	6812      	ldr	r2, [r2, #0]
 80033f6:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80033f8:	693b      	ldr	r3, [r7, #16]
 80033fa:	685b      	ldr	r3, [r3, #4]
 80033fc:	2b0a      	cmp	r3, #10
 80033fe:	d003      	beq.n	8003408 <HAL_DMA2D_ConfigLayer+0xf4>
 8003400:	693b      	ldr	r3, [r7, #16]
 8003402:	685b      	ldr	r3, [r3, #4]
 8003404:	2b09      	cmp	r3, #9
 8003406:	d106      	bne.n	8003416 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003408:	693b      	ldr	r3, [r7, #16]
 800340a:	68da      	ldr	r2, [r3, #12]
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003414:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003416:	687b      	ldr	r3, [r7, #4]
 8003418:	2201      	movs	r2, #1
 800341a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	2200      	movs	r2, #0
 8003422:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8003426:	2300      	movs	r3, #0
}
 8003428:	4618      	mov	r0, r3
 800342a:	371c      	adds	r7, #28
 800342c:	46bd      	mov	sp, r7
 800342e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003432:	4770      	bx	lr
 8003434:	ff03000f 	.word	0xff03000f

08003438 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003438:	b480      	push	{r7}
 800343a:	b089      	sub	sp, #36	; 0x24
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]
 8003440:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 8003442:	2300      	movs	r3, #0
 8003444:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8003446:	2300      	movs	r3, #0
 8003448:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 800344a:	2300      	movs	r3, #0
 800344c:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 800344e:	2300      	movs	r3, #0
 8003450:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 8003452:	2300      	movs	r3, #0
 8003454:	61fb      	str	r3, [r7, #28]
 8003456:	e175      	b.n	8003744 <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8003458:	2201      	movs	r2, #1
 800345a:	69fb      	ldr	r3, [r7, #28]
 800345c:	fa02 f303 	lsl.w	r3, r2, r3
 8003460:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003462:	683b      	ldr	r3, [r7, #0]
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	697a      	ldr	r2, [r7, #20]
 8003468:	4013      	ands	r3, r2
 800346a:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 800346c:	693a      	ldr	r2, [r7, #16]
 800346e:	697b      	ldr	r3, [r7, #20]
 8003470:	429a      	cmp	r2, r3
 8003472:	f040 8164 	bne.w	800373e <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	685b      	ldr	r3, [r3, #4]
 800347a:	f003 0303 	and.w	r3, r3, #3
 800347e:	2b01      	cmp	r3, #1
 8003480:	d005      	beq.n	800348e <HAL_GPIO_Init+0x56>
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	685b      	ldr	r3, [r3, #4]
 8003486:	f003 0303 	and.w	r3, r3, #3
 800348a:	2b02      	cmp	r3, #2
 800348c:	d130      	bne.n	80034f0 <HAL_GPIO_Init+0xb8>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	689b      	ldr	r3, [r3, #8]
 8003492:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8003494:	69fb      	ldr	r3, [r7, #28]
 8003496:	005b      	lsls	r3, r3, #1
 8003498:	2203      	movs	r2, #3
 800349a:	fa02 f303 	lsl.w	r3, r2, r3
 800349e:	43db      	mvns	r3, r3
 80034a0:	69ba      	ldr	r2, [r7, #24]
 80034a2:	4013      	ands	r3, r2
 80034a4:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 80034a6:	683b      	ldr	r3, [r7, #0]
 80034a8:	68da      	ldr	r2, [r3, #12]
 80034aa:	69fb      	ldr	r3, [r7, #28]
 80034ac:	005b      	lsls	r3, r3, #1
 80034ae:	fa02 f303 	lsl.w	r3, r2, r3
 80034b2:	69ba      	ldr	r2, [r7, #24]
 80034b4:	4313      	orrs	r3, r2
 80034b6:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	69ba      	ldr	r2, [r7, #24]
 80034bc:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	685b      	ldr	r3, [r3, #4]
 80034c2:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80034c4:	2201      	movs	r2, #1
 80034c6:	69fb      	ldr	r3, [r7, #28]
 80034c8:	fa02 f303 	lsl.w	r3, r2, r3
 80034cc:	43db      	mvns	r3, r3
 80034ce:	69ba      	ldr	r2, [r7, #24]
 80034d0:	4013      	ands	r3, r2
 80034d2:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	685b      	ldr	r3, [r3, #4]
 80034d8:	091b      	lsrs	r3, r3, #4
 80034da:	f003 0201 	and.w	r2, r3, #1
 80034de:	69fb      	ldr	r3, [r7, #28]
 80034e0:	fa02 f303 	lsl.w	r3, r2, r3
 80034e4:	69ba      	ldr	r2, [r7, #24]
 80034e6:	4313      	orrs	r3, r2
 80034e8:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	69ba      	ldr	r2, [r7, #24]
 80034ee:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80034f0:	683b      	ldr	r3, [r7, #0]
 80034f2:	685b      	ldr	r3, [r3, #4]
 80034f4:	f003 0303 	and.w	r3, r3, #3
 80034f8:	2b03      	cmp	r3, #3
 80034fa:	d017      	beq.n	800352c <HAL_GPIO_Init+0xf4>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	68db      	ldr	r3, [r3, #12]
 8003500:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8003502:	69fb      	ldr	r3, [r7, #28]
 8003504:	005b      	lsls	r3, r3, #1
 8003506:	2203      	movs	r2, #3
 8003508:	fa02 f303 	lsl.w	r3, r2, r3
 800350c:	43db      	mvns	r3, r3
 800350e:	69ba      	ldr	r2, [r7, #24]
 8003510:	4013      	ands	r3, r2
 8003512:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8003514:	683b      	ldr	r3, [r7, #0]
 8003516:	689a      	ldr	r2, [r3, #8]
 8003518:	69fb      	ldr	r3, [r7, #28]
 800351a:	005b      	lsls	r3, r3, #1
 800351c:	fa02 f303 	lsl.w	r3, r2, r3
 8003520:	69ba      	ldr	r2, [r7, #24]
 8003522:	4313      	orrs	r3, r2
 8003524:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	69ba      	ldr	r2, [r7, #24]
 800352a:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800352c:	683b      	ldr	r3, [r7, #0]
 800352e:	685b      	ldr	r3, [r3, #4]
 8003530:	f003 0303 	and.w	r3, r3, #3
 8003534:	2b02      	cmp	r3, #2
 8003536:	d123      	bne.n	8003580 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8003538:	69fb      	ldr	r3, [r7, #28]
 800353a:	08da      	lsrs	r2, r3, #3
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	3208      	adds	r2, #8
 8003540:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003544:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8003546:	69fb      	ldr	r3, [r7, #28]
 8003548:	f003 0307 	and.w	r3, r3, #7
 800354c:	009b      	lsls	r3, r3, #2
 800354e:	220f      	movs	r2, #15
 8003550:	fa02 f303 	lsl.w	r3, r2, r3
 8003554:	43db      	mvns	r3, r3
 8003556:	69ba      	ldr	r2, [r7, #24]
 8003558:	4013      	ands	r3, r2
 800355a:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 800355c:	683b      	ldr	r3, [r7, #0]
 800355e:	691a      	ldr	r2, [r3, #16]
 8003560:	69fb      	ldr	r3, [r7, #28]
 8003562:	f003 0307 	and.w	r3, r3, #7
 8003566:	009b      	lsls	r3, r3, #2
 8003568:	fa02 f303 	lsl.w	r3, r2, r3
 800356c:	69ba      	ldr	r2, [r7, #24]
 800356e:	4313      	orrs	r3, r2
 8003570:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 8003572:	69fb      	ldr	r3, [r7, #28]
 8003574:	08da      	lsrs	r2, r3, #3
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	3208      	adds	r2, #8
 800357a:	69b9      	ldr	r1, [r7, #24]
 800357c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }
      
      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	681b      	ldr	r3, [r3, #0]
 8003584:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8003586:	69fb      	ldr	r3, [r7, #28]
 8003588:	005b      	lsls	r3, r3, #1
 800358a:	2203      	movs	r2, #3
 800358c:	fa02 f303 	lsl.w	r3, r2, r3
 8003590:	43db      	mvns	r3, r3
 8003592:	69ba      	ldr	r2, [r7, #24]
 8003594:	4013      	ands	r3, r2
 8003596:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8003598:	683b      	ldr	r3, [r7, #0]
 800359a:	685b      	ldr	r3, [r3, #4]
 800359c:	f003 0203 	and.w	r2, r3, #3
 80035a0:	69fb      	ldr	r3, [r7, #28]
 80035a2:	005b      	lsls	r3, r3, #1
 80035a4:	fa02 f303 	lsl.w	r3, r2, r3
 80035a8:	69ba      	ldr	r2, [r7, #24]
 80035aa:	4313      	orrs	r3, r2
 80035ac:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	69ba      	ldr	r2, [r7, #24]
 80035b2:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80035b4:	683b      	ldr	r3, [r7, #0]
 80035b6:	685b      	ldr	r3, [r3, #4]
 80035b8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80035bc:	2b00      	cmp	r3, #0
 80035be:	f000 80be 	beq.w	800373e <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80035c2:	4b66      	ldr	r3, [pc, #408]	; (800375c <HAL_GPIO_Init+0x324>)
 80035c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80035c6:	4a65      	ldr	r2, [pc, #404]	; (800375c <HAL_GPIO_Init+0x324>)
 80035c8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80035cc:	6453      	str	r3, [r2, #68]	; 0x44
 80035ce:	4b63      	ldr	r3, [pc, #396]	; (800375c <HAL_GPIO_Init+0x324>)
 80035d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80035d2:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80035d6:	60fb      	str	r3, [r7, #12]
 80035d8:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 80035da:	4a61      	ldr	r2, [pc, #388]	; (8003760 <HAL_GPIO_Init+0x328>)
 80035dc:	69fb      	ldr	r3, [r7, #28]
 80035de:	089b      	lsrs	r3, r3, #2
 80035e0:	3302      	adds	r3, #2
 80035e2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80035e6:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 80035e8:	69fb      	ldr	r3, [r7, #28]
 80035ea:	f003 0303 	and.w	r3, r3, #3
 80035ee:	009b      	lsls	r3, r3, #2
 80035f0:	220f      	movs	r2, #15
 80035f2:	fa02 f303 	lsl.w	r3, r2, r3
 80035f6:	43db      	mvns	r3, r3
 80035f8:	69ba      	ldr	r2, [r7, #24]
 80035fa:	4013      	ands	r3, r2
 80035fc:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	4a58      	ldr	r2, [pc, #352]	; (8003764 <HAL_GPIO_Init+0x32c>)
 8003602:	4293      	cmp	r3, r2
 8003604:	d037      	beq.n	8003676 <HAL_GPIO_Init+0x23e>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	4a57      	ldr	r2, [pc, #348]	; (8003768 <HAL_GPIO_Init+0x330>)
 800360a:	4293      	cmp	r3, r2
 800360c:	d031      	beq.n	8003672 <HAL_GPIO_Init+0x23a>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	4a56      	ldr	r2, [pc, #344]	; (800376c <HAL_GPIO_Init+0x334>)
 8003612:	4293      	cmp	r3, r2
 8003614:	d02b      	beq.n	800366e <HAL_GPIO_Init+0x236>
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	4a55      	ldr	r2, [pc, #340]	; (8003770 <HAL_GPIO_Init+0x338>)
 800361a:	4293      	cmp	r3, r2
 800361c:	d025      	beq.n	800366a <HAL_GPIO_Init+0x232>
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	4a54      	ldr	r2, [pc, #336]	; (8003774 <HAL_GPIO_Init+0x33c>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d01f      	beq.n	8003666 <HAL_GPIO_Init+0x22e>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	4a53      	ldr	r2, [pc, #332]	; (8003778 <HAL_GPIO_Init+0x340>)
 800362a:	4293      	cmp	r3, r2
 800362c:	d019      	beq.n	8003662 <HAL_GPIO_Init+0x22a>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	4a52      	ldr	r2, [pc, #328]	; (800377c <HAL_GPIO_Init+0x344>)
 8003632:	4293      	cmp	r3, r2
 8003634:	d013      	beq.n	800365e <HAL_GPIO_Init+0x226>
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	4a51      	ldr	r2, [pc, #324]	; (8003780 <HAL_GPIO_Init+0x348>)
 800363a:	4293      	cmp	r3, r2
 800363c:	d00d      	beq.n	800365a <HAL_GPIO_Init+0x222>
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	4a50      	ldr	r2, [pc, #320]	; (8003784 <HAL_GPIO_Init+0x34c>)
 8003642:	4293      	cmp	r3, r2
 8003644:	d007      	beq.n	8003656 <HAL_GPIO_Init+0x21e>
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	4a4f      	ldr	r2, [pc, #316]	; (8003788 <HAL_GPIO_Init+0x350>)
 800364a:	4293      	cmp	r3, r2
 800364c:	d101      	bne.n	8003652 <HAL_GPIO_Init+0x21a>
 800364e:	2309      	movs	r3, #9
 8003650:	e012      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003652:	230a      	movs	r3, #10
 8003654:	e010      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003656:	2308      	movs	r3, #8
 8003658:	e00e      	b.n	8003678 <HAL_GPIO_Init+0x240>
 800365a:	2307      	movs	r3, #7
 800365c:	e00c      	b.n	8003678 <HAL_GPIO_Init+0x240>
 800365e:	2306      	movs	r3, #6
 8003660:	e00a      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003662:	2305      	movs	r3, #5
 8003664:	e008      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003666:	2304      	movs	r3, #4
 8003668:	e006      	b.n	8003678 <HAL_GPIO_Init+0x240>
 800366a:	2303      	movs	r3, #3
 800366c:	e004      	b.n	8003678 <HAL_GPIO_Init+0x240>
 800366e:	2302      	movs	r3, #2
 8003670:	e002      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003672:	2301      	movs	r3, #1
 8003674:	e000      	b.n	8003678 <HAL_GPIO_Init+0x240>
 8003676:	2300      	movs	r3, #0
 8003678:	69fa      	ldr	r2, [r7, #28]
 800367a:	f002 0203 	and.w	r2, r2, #3
 800367e:	0092      	lsls	r2, r2, #2
 8003680:	4093      	lsls	r3, r2
 8003682:	69ba      	ldr	r2, [r7, #24]
 8003684:	4313      	orrs	r3, r2
 8003686:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 8003688:	4935      	ldr	r1, [pc, #212]	; (8003760 <HAL_GPIO_Init+0x328>)
 800368a:	69fb      	ldr	r3, [r7, #28]
 800368c:	089b      	lsrs	r3, r3, #2
 800368e:	3302      	adds	r3, #2
 8003690:	69ba      	ldr	r2, [r7, #24]
 8003692:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003696:	4b3d      	ldr	r3, [pc, #244]	; (800378c <HAL_GPIO_Init+0x354>)
 8003698:	689b      	ldr	r3, [r3, #8]
 800369a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800369c:	693b      	ldr	r3, [r7, #16]
 800369e:	43db      	mvns	r3, r3
 80036a0:	69ba      	ldr	r2, [r7, #24]
 80036a2:	4013      	ands	r3, r2
 80036a4:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80036a6:	683b      	ldr	r3, [r7, #0]
 80036a8:	685b      	ldr	r3, [r3, #4]
 80036aa:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80036ae:	2b00      	cmp	r3, #0
 80036b0:	d003      	beq.n	80036ba <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80036b2:	69ba      	ldr	r2, [r7, #24]
 80036b4:	693b      	ldr	r3, [r7, #16]
 80036b6:	4313      	orrs	r3, r2
 80036b8:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80036ba:	4a34      	ldr	r2, [pc, #208]	; (800378c <HAL_GPIO_Init+0x354>)
 80036bc:	69bb      	ldr	r3, [r7, #24]
 80036be:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80036c0:	4b32      	ldr	r3, [pc, #200]	; (800378c <HAL_GPIO_Init+0x354>)
 80036c2:	68db      	ldr	r3, [r3, #12]
 80036c4:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80036c6:	693b      	ldr	r3, [r7, #16]
 80036c8:	43db      	mvns	r3, r3
 80036ca:	69ba      	ldr	r2, [r7, #24]
 80036cc:	4013      	ands	r3, r2
 80036ce:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	685b      	ldr	r3, [r3, #4]
 80036d4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d003      	beq.n	80036e4 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 80036dc:	69ba      	ldr	r2, [r7, #24]
 80036de:	693b      	ldr	r3, [r7, #16]
 80036e0:	4313      	orrs	r3, r2
 80036e2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80036e4:	4a29      	ldr	r2, [pc, #164]	; (800378c <HAL_GPIO_Init+0x354>)
 80036e6:	69bb      	ldr	r3, [r7, #24]
 80036e8:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80036ea:	4b28      	ldr	r3, [pc, #160]	; (800378c <HAL_GPIO_Init+0x354>)
 80036ec:	685b      	ldr	r3, [r3, #4]
 80036ee:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80036f0:	693b      	ldr	r3, [r7, #16]
 80036f2:	43db      	mvns	r3, r3
 80036f4:	69ba      	ldr	r2, [r7, #24]
 80036f6:	4013      	ands	r3, r2
 80036f8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80036fa:	683b      	ldr	r3, [r7, #0]
 80036fc:	685b      	ldr	r3, [r3, #4]
 80036fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003702:	2b00      	cmp	r3, #0
 8003704:	d003      	beq.n	800370e <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8003706:	69ba      	ldr	r2, [r7, #24]
 8003708:	693b      	ldr	r3, [r7, #16]
 800370a:	4313      	orrs	r3, r2
 800370c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800370e:	4a1f      	ldr	r2, [pc, #124]	; (800378c <HAL_GPIO_Init+0x354>)
 8003710:	69bb      	ldr	r3, [r7, #24]
 8003712:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003714:	4b1d      	ldr	r3, [pc, #116]	; (800378c <HAL_GPIO_Init+0x354>)
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800371a:	693b      	ldr	r3, [r7, #16]
 800371c:	43db      	mvns	r3, r3
 800371e:	69ba      	ldr	r2, [r7, #24]
 8003720:	4013      	ands	r3, r2
 8003722:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8003724:	683b      	ldr	r3, [r7, #0]
 8003726:	685b      	ldr	r3, [r3, #4]
 8003728:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800372c:	2b00      	cmp	r3, #0
 800372e:	d003      	beq.n	8003738 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8003730:	69ba      	ldr	r2, [r7, #24]
 8003732:	693b      	ldr	r3, [r7, #16]
 8003734:	4313      	orrs	r3, r2
 8003736:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003738:	4a14      	ldr	r2, [pc, #80]	; (800378c <HAL_GPIO_Init+0x354>)
 800373a:	69bb      	ldr	r3, [r7, #24]
 800373c:	6013      	str	r3, [r2, #0]
  for(position = 0; position < GPIO_NUMBER; position++)
 800373e:	69fb      	ldr	r3, [r7, #28]
 8003740:	3301      	adds	r3, #1
 8003742:	61fb      	str	r3, [r7, #28]
 8003744:	69fb      	ldr	r3, [r7, #28]
 8003746:	2b0f      	cmp	r3, #15
 8003748:	f67f ae86 	bls.w	8003458 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 800374c:	bf00      	nop
 800374e:	bf00      	nop
 8003750:	3724      	adds	r7, #36	; 0x24
 8003752:	46bd      	mov	sp, r7
 8003754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003758:	4770      	bx	lr
 800375a:	bf00      	nop
 800375c:	40023800 	.word	0x40023800
 8003760:	40013800 	.word	0x40013800
 8003764:	40020000 	.word	0x40020000
 8003768:	40020400 	.word	0x40020400
 800376c:	40020800 	.word	0x40020800
 8003770:	40020c00 	.word	0x40020c00
 8003774:	40021000 	.word	0x40021000
 8003778:	40021400 	.word	0x40021400
 800377c:	40021800 	.word	0x40021800
 8003780:	40021c00 	.word	0x40021c00
 8003784:	40022000 	.word	0x40022000
 8003788:	40022400 	.word	0x40022400
 800378c:	40013c00 	.word	0x40013c00

08003790 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8003790:	b480      	push	{r7}
 8003792:	b087      	sub	sp, #28
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]
 8003798:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00;
 800379a:	2300      	movs	r3, #0
 800379c:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00;
 800379e:	2300      	movs	r3, #0
 80037a0:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00;
 80037a2:	2300      	movs	r3, #0
 80037a4:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for(position = 0; position < GPIO_NUMBER; position++)
 80037a6:	2300      	movs	r3, #0
 80037a8:	617b      	str	r3, [r7, #20]
 80037aa:	e0d9      	b.n	8003960 <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 80037ac:	2201      	movs	r2, #1
 80037ae:	697b      	ldr	r3, [r7, #20]
 80037b0:	fa02 f303 	lsl.w	r3, r2, r3
 80037b4:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 80037b6:	683a      	ldr	r2, [r7, #0]
 80037b8:	693b      	ldr	r3, [r7, #16]
 80037ba:	4013      	ands	r3, r2
 80037bc:	60fb      	str	r3, [r7, #12]

    if(iocurrent == ioposition)
 80037be:	68fa      	ldr	r2, [r7, #12]
 80037c0:	693b      	ldr	r3, [r7, #16]
 80037c2:	429a      	cmp	r2, r3
 80037c4:	f040 80c9 	bne.w	800395a <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
 80037c8:	4a6b      	ldr	r2, [pc, #428]	; (8003978 <HAL_GPIO_DeInit+0x1e8>)
 80037ca:	697b      	ldr	r3, [r7, #20]
 80037cc:	089b      	lsrs	r3, r3, #2
 80037ce:	3302      	adds	r3, #2
 80037d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80037d4:	60bb      	str	r3, [r7, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 80037d6:	697b      	ldr	r3, [r7, #20]
 80037d8:	f003 0303 	and.w	r3, r3, #3
 80037dc:	009b      	lsls	r3, r3, #2
 80037de:	220f      	movs	r2, #15
 80037e0:	fa02 f303 	lsl.w	r3, r2, r3
 80037e4:	68ba      	ldr	r2, [r7, #8]
 80037e6:	4013      	ands	r3, r2
 80037e8:	60bb      	str	r3, [r7, #8]
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	4a63      	ldr	r2, [pc, #396]	; (800397c <HAL_GPIO_DeInit+0x1ec>)
 80037ee:	4293      	cmp	r3, r2
 80037f0:	d037      	beq.n	8003862 <HAL_GPIO_DeInit+0xd2>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	4a62      	ldr	r2, [pc, #392]	; (8003980 <HAL_GPIO_DeInit+0x1f0>)
 80037f6:	4293      	cmp	r3, r2
 80037f8:	d031      	beq.n	800385e <HAL_GPIO_DeInit+0xce>
 80037fa:	687b      	ldr	r3, [r7, #4]
 80037fc:	4a61      	ldr	r2, [pc, #388]	; (8003984 <HAL_GPIO_DeInit+0x1f4>)
 80037fe:	4293      	cmp	r3, r2
 8003800:	d02b      	beq.n	800385a <HAL_GPIO_DeInit+0xca>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	4a60      	ldr	r2, [pc, #384]	; (8003988 <HAL_GPIO_DeInit+0x1f8>)
 8003806:	4293      	cmp	r3, r2
 8003808:	d025      	beq.n	8003856 <HAL_GPIO_DeInit+0xc6>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	4a5f      	ldr	r2, [pc, #380]	; (800398c <HAL_GPIO_DeInit+0x1fc>)
 800380e:	4293      	cmp	r3, r2
 8003810:	d01f      	beq.n	8003852 <HAL_GPIO_DeInit+0xc2>
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	4a5e      	ldr	r2, [pc, #376]	; (8003990 <HAL_GPIO_DeInit+0x200>)
 8003816:	4293      	cmp	r3, r2
 8003818:	d019      	beq.n	800384e <HAL_GPIO_DeInit+0xbe>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	4a5d      	ldr	r2, [pc, #372]	; (8003994 <HAL_GPIO_DeInit+0x204>)
 800381e:	4293      	cmp	r3, r2
 8003820:	d013      	beq.n	800384a <HAL_GPIO_DeInit+0xba>
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	4a5c      	ldr	r2, [pc, #368]	; (8003998 <HAL_GPIO_DeInit+0x208>)
 8003826:	4293      	cmp	r3, r2
 8003828:	d00d      	beq.n	8003846 <HAL_GPIO_DeInit+0xb6>
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	4a5b      	ldr	r2, [pc, #364]	; (800399c <HAL_GPIO_DeInit+0x20c>)
 800382e:	4293      	cmp	r3, r2
 8003830:	d007      	beq.n	8003842 <HAL_GPIO_DeInit+0xb2>
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	4a5a      	ldr	r2, [pc, #360]	; (80039a0 <HAL_GPIO_DeInit+0x210>)
 8003836:	4293      	cmp	r3, r2
 8003838:	d101      	bne.n	800383e <HAL_GPIO_DeInit+0xae>
 800383a:	2309      	movs	r3, #9
 800383c:	e012      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 800383e:	230a      	movs	r3, #10
 8003840:	e010      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 8003842:	2308      	movs	r3, #8
 8003844:	e00e      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 8003846:	2307      	movs	r3, #7
 8003848:	e00c      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 800384a:	2306      	movs	r3, #6
 800384c:	e00a      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 800384e:	2305      	movs	r3, #5
 8003850:	e008      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 8003852:	2304      	movs	r3, #4
 8003854:	e006      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 8003856:	2303      	movs	r3, #3
 8003858:	e004      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 800385a:	2302      	movs	r3, #2
 800385c:	e002      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 800385e:	2301      	movs	r3, #1
 8003860:	e000      	b.n	8003864 <HAL_GPIO_DeInit+0xd4>
 8003862:	2300      	movs	r3, #0
 8003864:	697a      	ldr	r2, [r7, #20]
 8003866:	f002 0203 	and.w	r2, r2, #3
 800386a:	0092      	lsls	r2, r2, #2
 800386c:	4093      	lsls	r3, r2
 800386e:	68ba      	ldr	r2, [r7, #8]
 8003870:	429a      	cmp	r2, r3
 8003872:	d132      	bne.n	80038da <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8003874:	4b4b      	ldr	r3, [pc, #300]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 8003876:	681a      	ldr	r2, [r3, #0]
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	43db      	mvns	r3, r3
 800387c:	4949      	ldr	r1, [pc, #292]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 800387e:	4013      	ands	r3, r2
 8003880:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 8003882:	4b48      	ldr	r3, [pc, #288]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 8003884:	685a      	ldr	r2, [r3, #4]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	43db      	mvns	r3, r3
 800388a:	4946      	ldr	r1, [pc, #280]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 800388c:	4013      	ands	r3, r2
 800388e:	604b      	str	r3, [r1, #4]

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 8003890:	4b44      	ldr	r3, [pc, #272]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 8003892:	68da      	ldr	r2, [r3, #12]
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	43db      	mvns	r3, r3
 8003898:	4942      	ldr	r1, [pc, #264]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 800389a:	4013      	ands	r3, r2
 800389c:	60cb      	str	r3, [r1, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800389e:	4b41      	ldr	r3, [pc, #260]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 80038a0:	689a      	ldr	r2, [r3, #8]
 80038a2:	68fb      	ldr	r3, [r7, #12]
 80038a4:	43db      	mvns	r3, r3
 80038a6:	493f      	ldr	r1, [pc, #252]	; (80039a4 <HAL_GPIO_DeInit+0x214>)
 80038a8:	4013      	ands	r3, r2
 80038aa:	608b      	str	r3, [r1, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
 80038ac:	697b      	ldr	r3, [r7, #20]
 80038ae:	f003 0303 	and.w	r3, r3, #3
 80038b2:	009b      	lsls	r3, r3, #2
 80038b4:	220f      	movs	r2, #15
 80038b6:	fa02 f303 	lsl.w	r3, r2, r3
 80038ba:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 80038bc:	4a2e      	ldr	r2, [pc, #184]	; (8003978 <HAL_GPIO_DeInit+0x1e8>)
 80038be:	697b      	ldr	r3, [r7, #20]
 80038c0:	089b      	lsrs	r3, r3, #2
 80038c2:	3302      	adds	r3, #2
 80038c4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80038c8:	68bb      	ldr	r3, [r7, #8]
 80038ca:	43da      	mvns	r2, r3
 80038cc:	482a      	ldr	r0, [pc, #168]	; (8003978 <HAL_GPIO_DeInit+0x1e8>)
 80038ce:	697b      	ldr	r3, [r7, #20]
 80038d0:	089b      	lsrs	r3, r3, #2
 80038d2:	400a      	ands	r2, r1
 80038d4:	3302      	adds	r3, #2
 80038d6:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	681a      	ldr	r2, [r3, #0]
 80038de:	697b      	ldr	r3, [r7, #20]
 80038e0:	005b      	lsls	r3, r3, #1
 80038e2:	2103      	movs	r1, #3
 80038e4:	fa01 f303 	lsl.w	r3, r1, r3
 80038e8:	43db      	mvns	r3, r3
 80038ea:	401a      	ands	r2, r3
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 80038f0:	697b      	ldr	r3, [r7, #20]
 80038f2:	08da      	lsrs	r2, r3, #3
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	3208      	adds	r2, #8
 80038f8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80038fc:	697b      	ldr	r3, [r7, #20]
 80038fe:	f003 0307 	and.w	r3, r3, #7
 8003902:	009b      	lsls	r3, r3, #2
 8003904:	220f      	movs	r2, #15
 8003906:	fa02 f303 	lsl.w	r3, r2, r3
 800390a:	43db      	mvns	r3, r3
 800390c:	697a      	ldr	r2, [r7, #20]
 800390e:	08d2      	lsrs	r2, r2, #3
 8003910:	4019      	ands	r1, r3
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	3208      	adds	r2, #8
 8003916:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	68da      	ldr	r2, [r3, #12]
 800391e:	697b      	ldr	r3, [r7, #20]
 8003920:	005b      	lsls	r3, r3, #1
 8003922:	2103      	movs	r1, #3
 8003924:	fa01 f303 	lsl.w	r3, r1, r3
 8003928:	43db      	mvns	r3, r3
 800392a:	401a      	ands	r2, r3
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	685a      	ldr	r2, [r3, #4]
 8003934:	2101      	movs	r1, #1
 8003936:	697b      	ldr	r3, [r7, #20]
 8003938:	fa01 f303 	lsl.w	r3, r1, r3
 800393c:	43db      	mvns	r3, r3
 800393e:	401a      	ands	r2, r3
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	689a      	ldr	r2, [r3, #8]
 8003948:	697b      	ldr	r3, [r7, #20]
 800394a:	005b      	lsls	r3, r3, #1
 800394c:	2103      	movs	r1, #3
 800394e:	fa01 f303 	lsl.w	r3, r1, r3
 8003952:	43db      	mvns	r3, r3
 8003954:	401a      	ands	r2, r3
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	609a      	str	r2, [r3, #8]
  for(position = 0; position < GPIO_NUMBER; position++)
 800395a:	697b      	ldr	r3, [r7, #20]
 800395c:	3301      	adds	r3, #1
 800395e:	617b      	str	r3, [r7, #20]
 8003960:	697b      	ldr	r3, [r7, #20]
 8003962:	2b0f      	cmp	r3, #15
 8003964:	f67f af22 	bls.w	80037ac <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 8003968:	bf00      	nop
 800396a:	bf00      	nop
 800396c:	371c      	adds	r7, #28
 800396e:	46bd      	mov	sp, r7
 8003970:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003974:	4770      	bx	lr
 8003976:	bf00      	nop
 8003978:	40013800 	.word	0x40013800
 800397c:	40020000 	.word	0x40020000
 8003980:	40020400 	.word	0x40020400
 8003984:	40020800 	.word	0x40020800
 8003988:	40020c00 	.word	0x40020c00
 800398c:	40021000 	.word	0x40021000
 8003990:	40021400 	.word	0x40021400
 8003994:	40021800 	.word	0x40021800
 8003998:	40021c00 	.word	0x40021c00
 800399c:	40022000 	.word	0x40022000
 80039a0:	40022400 	.word	0x40022400
 80039a4:	40013c00 	.word	0x40013c00

080039a8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80039a8:	b480      	push	{r7}
 80039aa:	b085      	sub	sp, #20
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	6078      	str	r0, [r7, #4]
 80039b0:	460b      	mov	r3, r1
 80039b2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	691a      	ldr	r2, [r3, #16]
 80039b8:	887b      	ldrh	r3, [r7, #2]
 80039ba:	4013      	ands	r3, r2
 80039bc:	2b00      	cmp	r3, #0
 80039be:	d002      	beq.n	80039c6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80039c0:	2301      	movs	r3, #1
 80039c2:	73fb      	strb	r3, [r7, #15]
 80039c4:	e001      	b.n	80039ca <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80039c6:	2300      	movs	r3, #0
 80039c8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80039ca:	7bfb      	ldrb	r3, [r7, #15]
}
 80039cc:	4618      	mov	r0, r3
 80039ce:	3714      	adds	r7, #20
 80039d0:	46bd      	mov	sp, r7
 80039d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d6:	4770      	bx	lr

080039d8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80039d8:	b480      	push	{r7}
 80039da:	b083      	sub	sp, #12
 80039dc:	af00      	add	r7, sp, #0
 80039de:	6078      	str	r0, [r7, #4]
 80039e0:	460b      	mov	r3, r1
 80039e2:	807b      	strh	r3, [r7, #2]
 80039e4:	4613      	mov	r3, r2
 80039e6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80039e8:	787b      	ldrb	r3, [r7, #1]
 80039ea:	2b00      	cmp	r3, #0
 80039ec:	d003      	beq.n	80039f6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80039ee:	887a      	ldrh	r2, [r7, #2]
 80039f0:	687b      	ldr	r3, [r7, #4]
 80039f2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
  }
}
 80039f4:	e003      	b.n	80039fe <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 80039f6:	887b      	ldrh	r3, [r7, #2]
 80039f8:	041a      	lsls	r2, r3, #16
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	619a      	str	r2, [r3, #24]
}
 80039fe:	bf00      	nop
 8003a00:	370c      	adds	r7, #12
 8003a02:	46bd      	mov	sp, r7
 8003a04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a08:	4770      	bx	lr

08003a0a <HAL_GPIO_TogglePin>:
  * @param  GPIOx Where x can be (A..I) to select the GPIO peripheral.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003a0a:	b480      	push	{r7}
 8003a0c:	b085      	sub	sp, #20
 8003a0e:	af00      	add	r7, sp, #0
 8003a10:	6078      	str	r0, [r7, #4]
 8003a12:	460b      	mov	r3, r1
 8003a14:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	695b      	ldr	r3, [r3, #20]
 8003a1a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003a1c:	887a      	ldrh	r2, [r7, #2]
 8003a1e:	68fb      	ldr	r3, [r7, #12]
 8003a20:	4013      	ands	r3, r2
 8003a22:	041a      	lsls	r2, r3, #16
 8003a24:	68fb      	ldr	r3, [r7, #12]
 8003a26:	43d9      	mvns	r1, r3
 8003a28:	887b      	ldrh	r3, [r7, #2]
 8003a2a:	400b      	ands	r3, r1
 8003a2c:	431a      	orrs	r2, r3
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	619a      	str	r2, [r3, #24]
}
 8003a32:	bf00      	nop
 8003a34:	3714      	adds	r7, #20
 8003a36:	46bd      	mov	sp, r7
 8003a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a3c:	4770      	bx	lr
	...

08003a40 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8003a40:	b580      	push	{r7, lr}
 8003a42:	b082      	sub	sp, #8
 8003a44:	af00      	add	r7, sp, #0
 8003a46:	4603      	mov	r3, r0
 8003a48:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8003a4a:	4b08      	ldr	r3, [pc, #32]	; (8003a6c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003a4c:	695a      	ldr	r2, [r3, #20]
 8003a4e:	88fb      	ldrh	r3, [r7, #6]
 8003a50:	4013      	ands	r3, r2
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d006      	beq.n	8003a64 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8003a56:	4a05      	ldr	r2, [pc, #20]	; (8003a6c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8003a58:	88fb      	ldrh	r3, [r7, #6]
 8003a5a:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8003a5c:	88fb      	ldrh	r3, [r7, #6]
 8003a5e:	4618      	mov	r0, r3
 8003a60:	f7fc fde6 	bl	8000630 <HAL_GPIO_EXTI_Callback>
  }
}
 8003a64:	bf00      	nop
 8003a66:	3708      	adds	r7, #8
 8003a68:	46bd      	mov	sp, r7
 8003a6a:	bd80      	pop	{r7, pc}
 8003a6c:	40013c00 	.word	0x40013c00

08003a70 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8003a70:	b580      	push	{r7, lr}
 8003a72:	b082      	sub	sp, #8
 8003a74:	af00      	add	r7, sp, #0
 8003a76:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	2b00      	cmp	r3, #0
 8003a7c:	d101      	bne.n	8003a82 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8003a7e:	2301      	movs	r3, #1
 8003a80:	e07f      	b.n	8003b82 <HAL_I2C_Init+0x112>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003a88:	b2db      	uxtb	r3, r3
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d106      	bne.n	8003a9c <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	2200      	movs	r2, #0
 8003a92:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 8003a96:	6878      	ldr	r0, [r7, #4]
 8003a98:	f7fd fe3c 	bl	8001714 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2224      	movs	r2, #36	; 0x24
 8003aa0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	681a      	ldr	r2, [r3, #0]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	f022 0201 	bic.w	r2, r2, #1
 8003ab2:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	685a      	ldr	r2, [r3, #4]
 8003ab8:	687b      	ldr	r3, [r7, #4]
 8003aba:	681b      	ldr	r3, [r3, #0]
 8003abc:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8003ac0:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	689a      	ldr	r2, [r3, #8]
 8003ac8:	687b      	ldr	r3, [r7, #4]
 8003aca:	681b      	ldr	r3, [r3, #0]
 8003acc:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003ad0:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	68db      	ldr	r3, [r3, #12]
 8003ad6:	2b01      	cmp	r3, #1
 8003ad8:	d107      	bne.n	8003aea <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	689a      	ldr	r2, [r3, #8]
 8003ade:	687b      	ldr	r3, [r7, #4]
 8003ae0:	681b      	ldr	r3, [r3, #0]
 8003ae2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003ae6:	609a      	str	r2, [r3, #8]
 8003ae8:	e006      	b.n	8003af8 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	689a      	ldr	r2, [r3, #8]
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	681b      	ldr	r3, [r3, #0]
 8003af2:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8003af6:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	68db      	ldr	r3, [r3, #12]
 8003afc:	2b02      	cmp	r3, #2
 8003afe:	d104      	bne.n	8003b0a <HAL_I2C_Init+0x9a>
  {
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8003b08:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8003b0a:	687b      	ldr	r3, [r7, #4]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	6859      	ldr	r1, [r3, #4]
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681a      	ldr	r2, [r3, #0]
 8003b14:	4b1d      	ldr	r3, [pc, #116]	; (8003b8c <HAL_I2C_Init+0x11c>)
 8003b16:	430b      	orrs	r3, r1
 8003b18:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	68da      	ldr	r2, [r3, #12]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	681b      	ldr	r3, [r3, #0]
 8003b24:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8003b28:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	691a      	ldr	r2, [r3, #16]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	695b      	ldr	r3, [r3, #20]
 8003b32:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8003b36:	687b      	ldr	r3, [r7, #4]
 8003b38:	699b      	ldr	r3, [r3, #24]
 8003b3a:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	430a      	orrs	r2, r1
 8003b42:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003b44:	687b      	ldr	r3, [r7, #4]
 8003b46:	69d9      	ldr	r1, [r3, #28]
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	6a1a      	ldr	r2, [r3, #32]
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	681b      	ldr	r3, [r3, #0]
 8003b50:	430a      	orrs	r2, r1
 8003b52:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	681a      	ldr	r2, [r3, #0]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f042 0201 	orr.w	r2, r2, #1
 8003b62:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	2200      	movs	r2, #0
 8003b68:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	2220      	movs	r2, #32
 8003b6e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	2200      	movs	r2, #0
 8003b76:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003b78:	687b      	ldr	r3, [r7, #4]
 8003b7a:	2200      	movs	r2, #0
 8003b7c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  return HAL_OK;
 8003b80:	2300      	movs	r3, #0
}
 8003b82:	4618      	mov	r0, r3
 8003b84:	3708      	adds	r7, #8
 8003b86:	46bd      	mov	sp, r7
 8003b88:	bd80      	pop	{r7, pc}
 8003b8a:	bf00      	nop
 8003b8c:	02008000 	.word	0x02008000

08003b90 <HAL_I2C_DeInit>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
{
 8003b90:	b580      	push	{r7, lr}
 8003b92:	b082      	sub	sp, #8
 8003b94:	af00      	add	r7, sp, #0
 8003b96:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	2b00      	cmp	r3, #0
 8003b9c:	d101      	bne.n	8003ba2 <HAL_I2C_DeInit+0x12>
  {
    return HAL_ERROR;
 8003b9e:	2301      	movs	r3, #1
 8003ba0:	e021      	b.n	8003be6 <HAL_I2C_DeInit+0x56>
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	2224      	movs	r2, #36	; 0x24
 8003ba6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

  /* Disable the I2C Peripheral Clock */
  __HAL_I2C_DISABLE(hi2c);
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	681b      	ldr	r3, [r3, #0]
 8003bae:	681a      	ldr	r2, [r3, #0]
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	f022 0201 	bic.w	r2, r2, #1
 8003bb8:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  hi2c->MspDeInitCallback(hi2c);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  HAL_I2C_MspDeInit(hi2c);
 8003bba:	6878      	ldr	r0, [r7, #4]
 8003bbc:	f7fd fe0a 	bl	80017d4 <HAL_I2C_MspDeInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	2200      	movs	r2, #0
 8003bc4:	645a      	str	r2, [r3, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_RESET;
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	2200      	movs	r2, #0
 8003bca:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8003bce:	687b      	ldr	r3, [r7, #4]
 8003bd0:	2200      	movs	r2, #0
 8003bd2:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	2200      	movs	r2, #0
 8003bd8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

  /* Release Lock */
  __HAL_UNLOCK(hi2c);
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	2200      	movs	r2, #0
 8003be0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

  return HAL_OK;
 8003be4:	2300      	movs	r3, #0
}
 8003be6:	4618      	mov	r0, r3
 8003be8:	3708      	adds	r7, #8
 8003bea:	46bd      	mov	sp, r7
 8003bec:	bd80      	pop	{r7, pc}
	...

08003bf0 <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003bf0:	b580      	push	{r7, lr}
 8003bf2:	b088      	sub	sp, #32
 8003bf4:	af02      	add	r7, sp, #8
 8003bf6:	60f8      	str	r0, [r7, #12]
 8003bf8:	4608      	mov	r0, r1
 8003bfa:	4611      	mov	r1, r2
 8003bfc:	461a      	mov	r2, r3
 8003bfe:	4603      	mov	r3, r0
 8003c00:	817b      	strh	r3, [r7, #10]
 8003c02:	460b      	mov	r3, r1
 8003c04:	813b      	strh	r3, [r7, #8]
 8003c06:	4613      	mov	r3, r2
 8003c08:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003c0a:	68fb      	ldr	r3, [r7, #12]
 8003c0c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003c10:	b2db      	uxtb	r3, r3
 8003c12:	2b20      	cmp	r3, #32
 8003c14:	f040 80f9 	bne.w	8003e0a <HAL_I2C_Mem_Write+0x21a>
  {
    if ((pData == NULL) || (Size == 0U))
 8003c18:	6a3b      	ldr	r3, [r7, #32]
 8003c1a:	2b00      	cmp	r3, #0
 8003c1c:	d002      	beq.n	8003c24 <HAL_I2C_Mem_Write+0x34>
 8003c1e:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d105      	bne.n	8003c30 <HAL_I2C_Mem_Write+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003c2a:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 8003c2c:	2301      	movs	r3, #1
 8003c2e:	e0ed      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003c36:	2b01      	cmp	r3, #1
 8003c38:	d101      	bne.n	8003c3e <HAL_I2C_Mem_Write+0x4e>
 8003c3a:	2302      	movs	r3, #2
 8003c3c:	e0e6      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
 8003c3e:	68fb      	ldr	r3, [r7, #12]
 8003c40:	2201      	movs	r2, #1
 8003c42:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003c46:	f7fe fad9 	bl	80021fc <HAL_GetTick>
 8003c4a:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003c4c:	697b      	ldr	r3, [r7, #20]
 8003c4e:	9300      	str	r3, [sp, #0]
 8003c50:	2319      	movs	r3, #25
 8003c52:	2201      	movs	r2, #1
 8003c54:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003c58:	68f8      	ldr	r0, [r7, #12]
 8003c5a:	f000 fac3 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8003c5e:	4603      	mov	r3, r0
 8003c60:	2b00      	cmp	r3, #0
 8003c62:	d001      	beq.n	8003c68 <HAL_I2C_Mem_Write+0x78>
    {
      return HAL_ERROR;
 8003c64:	2301      	movs	r3, #1
 8003c66:	e0d1      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003c68:	68fb      	ldr	r3, [r7, #12]
 8003c6a:	2221      	movs	r2, #33	; 0x21
 8003c6c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	2240      	movs	r2, #64	; 0x40
 8003c74:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003c78:	68fb      	ldr	r3, [r7, #12]
 8003c7a:	2200      	movs	r2, #0
 8003c7c:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	6a3a      	ldr	r2, [r7, #32]
 8003c82:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8003c84:	68fb      	ldr	r3, [r7, #12]
 8003c86:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003c88:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8003c8a:	68fb      	ldr	r3, [r7, #12]
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003c90:	88f8      	ldrh	r0, [r7, #6]
 8003c92:	893a      	ldrh	r2, [r7, #8]
 8003c94:	8979      	ldrh	r1, [r7, #10]
 8003c96:	697b      	ldr	r3, [r7, #20]
 8003c98:	9301      	str	r3, [sp, #4]
 8003c9a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c9c:	9300      	str	r3, [sp, #0]
 8003c9e:	4603      	mov	r3, r0
 8003ca0:	68f8      	ldr	r0, [r7, #12]
 8003ca2:	f000 f9d3 	bl	800404c <I2C_RequestMemoryWrite>
 8003ca6:	4603      	mov	r3, r0
 8003ca8:	2b00      	cmp	r3, #0
 8003caa:	d005      	beq.n	8003cb8 <HAL_I2C_Mem_Write+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003cac:	68fb      	ldr	r3, [r7, #12]
 8003cae:	2200      	movs	r2, #0
 8003cb0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 8003cb4:	2301      	movs	r3, #1
 8003cb6:	e0a9      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003cbc:	b29b      	uxth	r3, r3
 8003cbe:	2bff      	cmp	r3, #255	; 0xff
 8003cc0:	d90e      	bls.n	8003ce0 <HAL_I2C_Mem_Write+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003cc2:	68fb      	ldr	r3, [r7, #12]
 8003cc4:	22ff      	movs	r2, #255	; 0xff
 8003cc6:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ccc:	b2da      	uxtb	r2, r3
 8003cce:	8979      	ldrh	r1, [r7, #10]
 8003cd0:	2300      	movs	r3, #0
 8003cd2:	9300      	str	r3, [sp, #0]
 8003cd4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003cd8:	68f8      	ldr	r0, [r7, #12]
 8003cda:	f000 fc2b 	bl	8004534 <I2C_TransferConfig>
 8003cde:	e00f      	b.n	8003d00 <HAL_I2C_Mem_Write+0x110>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003ce0:	68fb      	ldr	r3, [r7, #12]
 8003ce2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003ce4:	b29a      	uxth	r2, r3
 8003ce6:	68fb      	ldr	r3, [r7, #12]
 8003ce8:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003cea:	68fb      	ldr	r3, [r7, #12]
 8003cec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003cee:	b2da      	uxtb	r2, r3
 8003cf0:	8979      	ldrh	r1, [r7, #10]
 8003cf2:	2300      	movs	r3, #0
 8003cf4:	9300      	str	r3, [sp, #0]
 8003cf6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003cfa:	68f8      	ldr	r0, [r7, #12]
 8003cfc:	f000 fc1a 	bl	8004534 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003d00:	697a      	ldr	r2, [r7, #20]
 8003d02:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003d04:	68f8      	ldr	r0, [r7, #12]
 8003d06:	f000 faad 	bl	8004264 <I2C_WaitOnTXISFlagUntilTimeout>
 8003d0a:	4603      	mov	r3, r0
 8003d0c:	2b00      	cmp	r3, #0
 8003d0e:	d001      	beq.n	8003d14 <HAL_I2C_Mem_Write+0x124>
      {
        return HAL_ERROR;
 8003d10:	2301      	movs	r3, #1
 8003d12:	e07b      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003d14:	68fb      	ldr	r3, [r7, #12]
 8003d16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d18:	781a      	ldrb	r2, [r3, #0]
 8003d1a:	68fb      	ldr	r3, [r7, #12]
 8003d1c:	681b      	ldr	r3, [r3, #0]
 8003d1e:	629a      	str	r2, [r3, #40]	; 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003d20:	68fb      	ldr	r3, [r7, #12]
 8003d22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d24:	1c5a      	adds	r2, r3, #1
 8003d26:	68fb      	ldr	r3, [r7, #12]
 8003d28:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferCount--;
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d2e:	b29b      	uxth	r3, r3
 8003d30:	3b01      	subs	r3, #1
 8003d32:	b29a      	uxth	r2, r3
 8003d34:	68fb      	ldr	r3, [r7, #12]
 8003d36:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d3c:	3b01      	subs	r3, #1
 8003d3e:	b29a      	uxth	r2, r3
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d48:	b29b      	uxth	r3, r3
 8003d4a:	2b00      	cmp	r3, #0
 8003d4c:	d034      	beq.n	8003db8 <HAL_I2C_Mem_Write+0x1c8>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	d130      	bne.n	8003db8 <HAL_I2C_Mem_Write+0x1c8>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003d56:	697b      	ldr	r3, [r7, #20]
 8003d58:	9300      	str	r3, [sp, #0]
 8003d5a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003d5c:	2200      	movs	r2, #0
 8003d5e:	2180      	movs	r1, #128	; 0x80
 8003d60:	68f8      	ldr	r0, [r7, #12]
 8003d62:	f000 fa3f 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8003d66:	4603      	mov	r3, r0
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	d001      	beq.n	8003d70 <HAL_I2C_Mem_Write+0x180>
        {
          return HAL_ERROR;
 8003d6c:	2301      	movs	r3, #1
 8003d6e:	e04d      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003d70:	68fb      	ldr	r3, [r7, #12]
 8003d72:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d74:	b29b      	uxth	r3, r3
 8003d76:	2bff      	cmp	r3, #255	; 0xff
 8003d78:	d90e      	bls.n	8003d98 <HAL_I2C_Mem_Write+0x1a8>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	22ff      	movs	r2, #255	; 0xff
 8003d7e:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003d84:	b2da      	uxtb	r2, r3
 8003d86:	8979      	ldrh	r1, [r7, #10]
 8003d88:	2300      	movs	r3, #0
 8003d8a:	9300      	str	r3, [sp, #0]
 8003d8c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003d90:	68f8      	ldr	r0, [r7, #12]
 8003d92:	f000 fbcf 	bl	8004534 <I2C_TransferConfig>
 8003d96:	e00f      	b.n	8003db8 <HAL_I2C_Mem_Write+0x1c8>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003d9c:	b29a      	uxth	r2, r3
 8003d9e:	68fb      	ldr	r3, [r7, #12]
 8003da0:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003da6:	b2da      	uxtb	r2, r3
 8003da8:	8979      	ldrh	r1, [r7, #10]
 8003daa:	2300      	movs	r3, #0
 8003dac:	9300      	str	r3, [sp, #0]
 8003dae:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003db2:	68f8      	ldr	r0, [r7, #12]
 8003db4:	f000 fbbe 	bl	8004534 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003dbc:	b29b      	uxth	r3, r3
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d19e      	bne.n	8003d00 <HAL_I2C_Mem_Write+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003dc2:	697a      	ldr	r2, [r7, #20]
 8003dc4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003dc6:	68f8      	ldr	r0, [r7, #12]
 8003dc8:	f000 fa8c 	bl	80042e4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003dcc:	4603      	mov	r3, r0
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	d001      	beq.n	8003dd6 <HAL_I2C_Mem_Write+0x1e6>
    {
      return HAL_ERROR;
 8003dd2:	2301      	movs	r3, #1
 8003dd4:	e01a      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	2220      	movs	r2, #32
 8003ddc:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	6859      	ldr	r1, [r3, #4]
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	681a      	ldr	r2, [r3, #0]
 8003de8:	4b0a      	ldr	r3, [pc, #40]	; (8003e14 <HAL_I2C_Mem_Write+0x224>)
 8003dea:	400b      	ands	r3, r1
 8003dec:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	2220      	movs	r2, #32
 8003df2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	2200      	movs	r2, #0
 8003dfa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	2200      	movs	r2, #0
 8003e02:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8003e06:	2300      	movs	r3, #0
 8003e08:	e000      	b.n	8003e0c <HAL_I2C_Mem_Write+0x21c>
  }
  else
  {
    return HAL_BUSY;
 8003e0a:	2302      	movs	r3, #2
  }
}
 8003e0c:	4618      	mov	r0, r3
 8003e0e:	3718      	adds	r7, #24
 8003e10:	46bd      	mov	sp, r7
 8003e12:	bd80      	pop	{r7, pc}
 8003e14:	fe00e800 	.word	0xfe00e800

08003e18 <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003e18:	b580      	push	{r7, lr}
 8003e1a:	b088      	sub	sp, #32
 8003e1c:	af02      	add	r7, sp, #8
 8003e1e:	60f8      	str	r0, [r7, #12]
 8003e20:	4608      	mov	r0, r1
 8003e22:	4611      	mov	r1, r2
 8003e24:	461a      	mov	r2, r3
 8003e26:	4603      	mov	r3, r0
 8003e28:	817b      	strh	r3, [r7, #10]
 8003e2a:	460b      	mov	r3, r1
 8003e2c:	813b      	strh	r3, [r7, #8]
 8003e2e:	4613      	mov	r3, r2
 8003e30:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003e32:	68fb      	ldr	r3, [r7, #12]
 8003e34:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003e38:	b2db      	uxtb	r3, r3
 8003e3a:	2b20      	cmp	r3, #32
 8003e3c:	f040 80fd 	bne.w	800403a <HAL_I2C_Mem_Read+0x222>
  {
    if ((pData == NULL) || (Size == 0U))
 8003e40:	6a3b      	ldr	r3, [r7, #32]
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d002      	beq.n	8003e4c <HAL_I2C_Mem_Read+0x34>
 8003e46:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 8003e48:	2b00      	cmp	r3, #0
 8003e4a:	d105      	bne.n	8003e58 <HAL_I2C_Mem_Read+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003e52:	645a      	str	r2, [r3, #68]	; 0x44
      return  HAL_ERROR;
 8003e54:	2301      	movs	r3, #1
 8003e56:	e0f1      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003e58:	68fb      	ldr	r3, [r7, #12]
 8003e5a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8003e5e:	2b01      	cmp	r3, #1
 8003e60:	d101      	bne.n	8003e66 <HAL_I2C_Mem_Read+0x4e>
 8003e62:	2302      	movs	r3, #2
 8003e64:	e0ea      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
 8003e66:	68fb      	ldr	r3, [r7, #12]
 8003e68:	2201      	movs	r2, #1
 8003e6a:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003e6e:	f7fe f9c5 	bl	80021fc <HAL_GetTick>
 8003e72:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003e74:	697b      	ldr	r3, [r7, #20]
 8003e76:	9300      	str	r3, [sp, #0]
 8003e78:	2319      	movs	r3, #25
 8003e7a:	2201      	movs	r2, #1
 8003e7c:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8003e80:	68f8      	ldr	r0, [r7, #12]
 8003e82:	f000 f9af 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8003e86:	4603      	mov	r3, r0
 8003e88:	2b00      	cmp	r3, #0
 8003e8a:	d001      	beq.n	8003e90 <HAL_I2C_Mem_Read+0x78>
    {
      return HAL_ERROR;
 8003e8c:	2301      	movs	r3, #1
 8003e8e:	e0d5      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003e90:	68fb      	ldr	r3, [r7, #12]
 8003e92:	2222      	movs	r2, #34	; 0x22
 8003e94:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003e98:	68fb      	ldr	r3, [r7, #12]
 8003e9a:	2240      	movs	r2, #64	; 0x40
 8003e9c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	2200      	movs	r2, #0
 8003ea4:	645a      	str	r2, [r3, #68]	; 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003ea6:	68fb      	ldr	r3, [r7, #12]
 8003ea8:	6a3a      	ldr	r2, [r7, #32]
 8003eaa:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount = Size;
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8003eb0:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferISR   = NULL;
 8003eb2:	68fb      	ldr	r3, [r7, #12]
 8003eb4:	2200      	movs	r2, #0
 8003eb6:	635a      	str	r2, [r3, #52]	; 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003eb8:	88f8      	ldrh	r0, [r7, #6]
 8003eba:	893a      	ldrh	r2, [r7, #8]
 8003ebc:	8979      	ldrh	r1, [r7, #10]
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	9301      	str	r3, [sp, #4]
 8003ec2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003ec4:	9300      	str	r3, [sp, #0]
 8003ec6:	4603      	mov	r3, r0
 8003ec8:	68f8      	ldr	r0, [r7, #12]
 8003eca:	f000 f913 	bl	80040f4 <I2C_RequestMemoryRead>
 8003ece:	4603      	mov	r3, r0
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d005      	beq.n	8003ee0 <HAL_I2C_Mem_Read+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	2200      	movs	r2, #0
 8003ed8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
      return HAL_ERROR;
 8003edc:	2301      	movs	r3, #1
 8003ede:	e0ad      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003ee0:	68fb      	ldr	r3, [r7, #12]
 8003ee2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003ee4:	b29b      	uxth	r3, r3
 8003ee6:	2bff      	cmp	r3, #255	; 0xff
 8003ee8:	d90e      	bls.n	8003f08 <HAL_I2C_Mem_Read+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	22ff      	movs	r2, #255	; 0xff
 8003eee:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003ef4:	b2da      	uxtb	r2, r3
 8003ef6:	8979      	ldrh	r1, [r7, #10]
 8003ef8:	4b52      	ldr	r3, [pc, #328]	; (8004044 <HAL_I2C_Mem_Read+0x22c>)
 8003efa:	9300      	str	r3, [sp, #0]
 8003efc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003f00:	68f8      	ldr	r0, [r7, #12]
 8003f02:	f000 fb17 	bl	8004534 <I2C_TransferConfig>
 8003f06:	e00f      	b.n	8003f28 <HAL_I2C_Mem_Read+0x110>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003f08:	68fb      	ldr	r3, [r7, #12]
 8003f0a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f0c:	b29a      	uxth	r2, r3
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	851a      	strh	r2, [r3, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f16:	b2da      	uxtb	r2, r3
 8003f18:	8979      	ldrh	r1, [r7, #10]
 8003f1a:	4b4a      	ldr	r3, [pc, #296]	; (8004044 <HAL_I2C_Mem_Read+0x22c>)
 8003f1c:	9300      	str	r3, [sp, #0]
 8003f1e:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003f22:	68f8      	ldr	r0, [r7, #12]
 8003f24:	f000 fb06 	bl	8004534 <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8003f28:	697b      	ldr	r3, [r7, #20]
 8003f2a:	9300      	str	r3, [sp, #0]
 8003f2c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003f2e:	2200      	movs	r2, #0
 8003f30:	2104      	movs	r1, #4
 8003f32:	68f8      	ldr	r0, [r7, #12]
 8003f34:	f000 f956 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8003f38:	4603      	mov	r3, r0
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d001      	beq.n	8003f42 <HAL_I2C_Mem_Read+0x12a>
      {
        return HAL_ERROR;
 8003f3e:	2301      	movs	r3, #1
 8003f40:	e07c      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	681b      	ldr	r3, [r3, #0]
 8003f46:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f4c:	b2d2      	uxtb	r2, r2
 8003f4e:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f54:	1c5a      	adds	r2, r3, #1
 8003f56:	68fb      	ldr	r3, [r7, #12]
 8003f58:	625a      	str	r2, [r3, #36]	; 0x24

      hi2c->XferSize--;
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f5e:	3b01      	subs	r3, #1
 8003f60:	b29a      	uxth	r2, r3
 8003f62:	68fb      	ldr	r3, [r7, #12]
 8003f64:	851a      	strh	r2, [r3, #40]	; 0x28
      hi2c->XferCount--;
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f6a:	b29b      	uxth	r3, r3
 8003f6c:	3b01      	subs	r3, #1
 8003f6e:	b29a      	uxth	r2, r3
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	855a      	strh	r2, [r3, #42]	; 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003f78:	b29b      	uxth	r3, r3
 8003f7a:	2b00      	cmp	r3, #0
 8003f7c:	d034      	beq.n	8003fe8 <HAL_I2C_Mem_Read+0x1d0>
 8003f7e:	68fb      	ldr	r3, [r7, #12]
 8003f80:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d130      	bne.n	8003fe8 <HAL_I2C_Mem_Read+0x1d0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003f86:	697b      	ldr	r3, [r7, #20]
 8003f88:	9300      	str	r3, [sp, #0]
 8003f8a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	2180      	movs	r1, #128	; 0x80
 8003f90:	68f8      	ldr	r0, [r7, #12]
 8003f92:	f000 f927 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8003f96:	4603      	mov	r3, r0
 8003f98:	2b00      	cmp	r3, #0
 8003f9a:	d001      	beq.n	8003fa0 <HAL_I2C_Mem_Read+0x188>
        {
          return HAL_ERROR;
 8003f9c:	2301      	movs	r3, #1
 8003f9e:	e04d      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003fa0:	68fb      	ldr	r3, [r7, #12]
 8003fa2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003fa4:	b29b      	uxth	r3, r3
 8003fa6:	2bff      	cmp	r3, #255	; 0xff
 8003fa8:	d90e      	bls.n	8003fc8 <HAL_I2C_Mem_Read+0x1b0>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003faa:	68fb      	ldr	r3, [r7, #12]
 8003fac:	22ff      	movs	r2, #255	; 0xff
 8003fae:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8003fb0:	68fb      	ldr	r3, [r7, #12]
 8003fb2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003fb4:	b2da      	uxtb	r2, r3
 8003fb6:	8979      	ldrh	r1, [r7, #10]
 8003fb8:	2300      	movs	r3, #0
 8003fba:	9300      	str	r3, [sp, #0]
 8003fbc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003fc0:	68f8      	ldr	r0, [r7, #12]
 8003fc2:	f000 fab7 	bl	8004534 <I2C_TransferConfig>
 8003fc6:	e00f      	b.n	8003fe8 <HAL_I2C_Mem_Read+0x1d0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003fc8:	68fb      	ldr	r3, [r7, #12]
 8003fca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003fcc:	b29a      	uxth	r2, r3
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	851a      	strh	r2, [r3, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003fd2:	68fb      	ldr	r3, [r7, #12]
 8003fd4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003fd6:	b2da      	uxtb	r2, r3
 8003fd8:	8979      	ldrh	r1, [r7, #10]
 8003fda:	2300      	movs	r3, #0
 8003fdc:	9300      	str	r3, [sp, #0]
 8003fde:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8003fe2:	68f8      	ldr	r0, [r7, #12]
 8003fe4:	f000 faa6 	bl	8004534 <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8003fec:	b29b      	uxth	r3, r3
 8003fee:	2b00      	cmp	r3, #0
 8003ff0:	d19a      	bne.n	8003f28 <HAL_I2C_Mem_Read+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003ff2:	697a      	ldr	r2, [r7, #20]
 8003ff4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003ff6:	68f8      	ldr	r0, [r7, #12]
 8003ff8:	f000 f974 	bl	80042e4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003ffc:	4603      	mov	r3, r0
 8003ffe:	2b00      	cmp	r3, #0
 8004000:	d001      	beq.n	8004006 <HAL_I2C_Mem_Read+0x1ee>
    {
      return HAL_ERROR;
 8004002:	2301      	movs	r3, #1
 8004004:	e01a      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	681b      	ldr	r3, [r3, #0]
 800400a:	2220      	movs	r2, #32
 800400c:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	681b      	ldr	r3, [r3, #0]
 8004012:	6859      	ldr	r1, [r3, #4]
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	681a      	ldr	r2, [r3, #0]
 8004018:	4b0b      	ldr	r3, [pc, #44]	; (8004048 <HAL_I2C_Mem_Read+0x230>)
 800401a:	400b      	ands	r3, r1
 800401c:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 800401e:	68fb      	ldr	r3, [r7, #12]
 8004020:	2220      	movs	r2, #32
 8004022:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8004026:	68fb      	ldr	r3, [r7, #12]
 8004028:	2200      	movs	r2, #0
 800402a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800402e:	68fb      	ldr	r3, [r7, #12]
 8004030:	2200      	movs	r2, #0
 8004032:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 8004036:	2300      	movs	r3, #0
 8004038:	e000      	b.n	800403c <HAL_I2C_Mem_Read+0x224>
  }
  else
  {
    return HAL_BUSY;
 800403a:	2302      	movs	r3, #2
  }
}
 800403c:	4618      	mov	r0, r3
 800403e:	3718      	adds	r7, #24
 8004040:	46bd      	mov	sp, r7
 8004042:	bd80      	pop	{r7, pc}
 8004044:	80002400 	.word	0x80002400
 8004048:	fe00e800 	.word	0xfe00e800

0800404c <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 800404c:	b580      	push	{r7, lr}
 800404e:	b086      	sub	sp, #24
 8004050:	af02      	add	r7, sp, #8
 8004052:	60f8      	str	r0, [r7, #12]
 8004054:	4608      	mov	r0, r1
 8004056:	4611      	mov	r1, r2
 8004058:	461a      	mov	r2, r3
 800405a:	4603      	mov	r3, r0
 800405c:	817b      	strh	r3, [r7, #10]
 800405e:	460b      	mov	r3, r1
 8004060:	813b      	strh	r3, [r7, #8]
 8004062:	4613      	mov	r3, r2
 8004064:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004066:	88fb      	ldrh	r3, [r7, #6]
 8004068:	b2da      	uxtb	r2, r3
 800406a:	8979      	ldrh	r1, [r7, #10]
 800406c:	4b20      	ldr	r3, [pc, #128]	; (80040f0 <I2C_RequestMemoryWrite+0xa4>)
 800406e:	9300      	str	r3, [sp, #0]
 8004070:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004074:	68f8      	ldr	r0, [r7, #12]
 8004076:	f000 fa5d 	bl	8004534 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800407a:	69fa      	ldr	r2, [r7, #28]
 800407c:	69b9      	ldr	r1, [r7, #24]
 800407e:	68f8      	ldr	r0, [r7, #12]
 8004080:	f000 f8f0 	bl	8004264 <I2C_WaitOnTXISFlagUntilTimeout>
 8004084:	4603      	mov	r3, r0
 8004086:	2b00      	cmp	r3, #0
 8004088:	d001      	beq.n	800408e <I2C_RequestMemoryWrite+0x42>
  {
    return HAL_ERROR;
 800408a:	2301      	movs	r3, #1
 800408c:	e02c      	b.n	80040e8 <I2C_RequestMemoryWrite+0x9c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800408e:	88fb      	ldrh	r3, [r7, #6]
 8004090:	2b01      	cmp	r3, #1
 8004092:	d105      	bne.n	80040a0 <I2C_RequestMemoryWrite+0x54>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004094:	893b      	ldrh	r3, [r7, #8]
 8004096:	b2da      	uxtb	r2, r3
 8004098:	68fb      	ldr	r3, [r7, #12]
 800409a:	681b      	ldr	r3, [r3, #0]
 800409c:	629a      	str	r2, [r3, #40]	; 0x28
 800409e:	e015      	b.n	80040cc <I2C_RequestMemoryWrite+0x80>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80040a0:	893b      	ldrh	r3, [r7, #8]
 80040a2:	0a1b      	lsrs	r3, r3, #8
 80040a4:	b29b      	uxth	r3, r3
 80040a6:	b2da      	uxtb	r2, r3
 80040a8:	68fb      	ldr	r3, [r7, #12]
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80040ae:	69fa      	ldr	r2, [r7, #28]
 80040b0:	69b9      	ldr	r1, [r7, #24]
 80040b2:	68f8      	ldr	r0, [r7, #12]
 80040b4:	f000 f8d6 	bl	8004264 <I2C_WaitOnTXISFlagUntilTimeout>
 80040b8:	4603      	mov	r3, r0
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d001      	beq.n	80040c2 <I2C_RequestMemoryWrite+0x76>
    {
      return HAL_ERROR;
 80040be:	2301      	movs	r3, #1
 80040c0:	e012      	b.n	80040e8 <I2C_RequestMemoryWrite+0x9c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80040c2:	893b      	ldrh	r3, [r7, #8]
 80040c4:	b2da      	uxtb	r2, r3
 80040c6:	68fb      	ldr	r3, [r7, #12]
 80040c8:	681b      	ldr	r3, [r3, #0]
 80040ca:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80040cc:	69fb      	ldr	r3, [r7, #28]
 80040ce:	9300      	str	r3, [sp, #0]
 80040d0:	69bb      	ldr	r3, [r7, #24]
 80040d2:	2200      	movs	r2, #0
 80040d4:	2180      	movs	r1, #128	; 0x80
 80040d6:	68f8      	ldr	r0, [r7, #12]
 80040d8:	f000 f884 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 80040dc:	4603      	mov	r3, r0
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d001      	beq.n	80040e6 <I2C_RequestMemoryWrite+0x9a>
  {
    return HAL_ERROR;
 80040e2:	2301      	movs	r3, #1
 80040e4:	e000      	b.n	80040e8 <I2C_RequestMemoryWrite+0x9c>
  }

  return HAL_OK;
 80040e6:	2300      	movs	r3, #0
}
 80040e8:	4618      	mov	r0, r3
 80040ea:	3710      	adds	r7, #16
 80040ec:	46bd      	mov	sp, r7
 80040ee:	bd80      	pop	{r7, pc}
 80040f0:	80002000 	.word	0x80002000

080040f4 <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 80040f4:	b580      	push	{r7, lr}
 80040f6:	b086      	sub	sp, #24
 80040f8:	af02      	add	r7, sp, #8
 80040fa:	60f8      	str	r0, [r7, #12]
 80040fc:	4608      	mov	r0, r1
 80040fe:	4611      	mov	r1, r2
 8004100:	461a      	mov	r2, r3
 8004102:	4603      	mov	r3, r0
 8004104:	817b      	strh	r3, [r7, #10]
 8004106:	460b      	mov	r3, r1
 8004108:	813b      	strh	r3, [r7, #8]
 800410a:	4613      	mov	r3, r2
 800410c:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800410e:	88fb      	ldrh	r3, [r7, #6]
 8004110:	b2da      	uxtb	r2, r3
 8004112:	8979      	ldrh	r1, [r7, #10]
 8004114:	4b20      	ldr	r3, [pc, #128]	; (8004198 <I2C_RequestMemoryRead+0xa4>)
 8004116:	9300      	str	r3, [sp, #0]
 8004118:	2300      	movs	r3, #0
 800411a:	68f8      	ldr	r0, [r7, #12]
 800411c:	f000 fa0a 	bl	8004534 <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004120:	69fa      	ldr	r2, [r7, #28]
 8004122:	69b9      	ldr	r1, [r7, #24]
 8004124:	68f8      	ldr	r0, [r7, #12]
 8004126:	f000 f89d 	bl	8004264 <I2C_WaitOnTXISFlagUntilTimeout>
 800412a:	4603      	mov	r3, r0
 800412c:	2b00      	cmp	r3, #0
 800412e:	d001      	beq.n	8004134 <I2C_RequestMemoryRead+0x40>
  {
    return HAL_ERROR;
 8004130:	2301      	movs	r3, #1
 8004132:	e02c      	b.n	800418e <I2C_RequestMemoryRead+0x9a>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004134:	88fb      	ldrh	r3, [r7, #6]
 8004136:	2b01      	cmp	r3, #1
 8004138:	d105      	bne.n	8004146 <I2C_RequestMemoryRead+0x52>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800413a:	893b      	ldrh	r3, [r7, #8]
 800413c:	b2da      	uxtb	r2, r3
 800413e:	68fb      	ldr	r3, [r7, #12]
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	629a      	str	r2, [r3, #40]	; 0x28
 8004144:	e015      	b.n	8004172 <I2C_RequestMemoryRead+0x7e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004146:	893b      	ldrh	r3, [r7, #8]
 8004148:	0a1b      	lsrs	r3, r3, #8
 800414a:	b29b      	uxth	r3, r3
 800414c:	b2da      	uxtb	r2, r3
 800414e:	68fb      	ldr	r3, [r7, #12]
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	629a      	str	r2, [r3, #40]	; 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004154:	69fa      	ldr	r2, [r7, #28]
 8004156:	69b9      	ldr	r1, [r7, #24]
 8004158:	68f8      	ldr	r0, [r7, #12]
 800415a:	f000 f883 	bl	8004264 <I2C_WaitOnTXISFlagUntilTimeout>
 800415e:	4603      	mov	r3, r0
 8004160:	2b00      	cmp	r3, #0
 8004162:	d001      	beq.n	8004168 <I2C_RequestMemoryRead+0x74>
    {
      return HAL_ERROR;
 8004164:	2301      	movs	r3, #1
 8004166:	e012      	b.n	800418e <I2C_RequestMemoryRead+0x9a>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004168:	893b      	ldrh	r3, [r7, #8]
 800416a:	b2da      	uxtb	r2, r3
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004172:	69fb      	ldr	r3, [r7, #28]
 8004174:	9300      	str	r3, [sp, #0]
 8004176:	69bb      	ldr	r3, [r7, #24]
 8004178:	2200      	movs	r2, #0
 800417a:	2140      	movs	r1, #64	; 0x40
 800417c:	68f8      	ldr	r0, [r7, #12]
 800417e:	f000 f831 	bl	80041e4 <I2C_WaitOnFlagUntilTimeout>
 8004182:	4603      	mov	r3, r0
 8004184:	2b00      	cmp	r3, #0
 8004186:	d001      	beq.n	800418c <I2C_RequestMemoryRead+0x98>
  {
    return HAL_ERROR;
 8004188:	2301      	movs	r3, #1
 800418a:	e000      	b.n	800418e <I2C_RequestMemoryRead+0x9a>
  }

  return HAL_OK;
 800418c:	2300      	movs	r3, #0
}
 800418e:	4618      	mov	r0, r3
 8004190:	3710      	adds	r7, #16
 8004192:	46bd      	mov	sp, r7
 8004194:	bd80      	pop	{r7, pc}
 8004196:	bf00      	nop
 8004198:	80002000 	.word	0x80002000

0800419c <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 800419c:	b480      	push	{r7}
 800419e:	b083      	sub	sp, #12
 80041a0:	af00      	add	r7, sp, #0
 80041a2:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	681b      	ldr	r3, [r3, #0]
 80041a8:	699b      	ldr	r3, [r3, #24]
 80041aa:	f003 0302 	and.w	r3, r3, #2
 80041ae:	2b02      	cmp	r3, #2
 80041b0:	d103      	bne.n	80041ba <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	2200      	movs	r2, #0
 80041b8:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	681b      	ldr	r3, [r3, #0]
 80041be:	699b      	ldr	r3, [r3, #24]
 80041c0:	f003 0301 	and.w	r3, r3, #1
 80041c4:	2b01      	cmp	r3, #1
 80041c6:	d007      	beq.n	80041d8 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	699a      	ldr	r2, [r3, #24]
 80041ce:	687b      	ldr	r3, [r7, #4]
 80041d0:	681b      	ldr	r3, [r3, #0]
 80041d2:	f042 0201 	orr.w	r2, r2, #1
 80041d6:	619a      	str	r2, [r3, #24]
  }
}
 80041d8:	bf00      	nop
 80041da:	370c      	adds	r7, #12
 80041dc:	46bd      	mov	sp, r7
 80041de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e2:	4770      	bx	lr

080041e4 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 80041e4:	b580      	push	{r7, lr}
 80041e6:	b084      	sub	sp, #16
 80041e8:	af00      	add	r7, sp, #0
 80041ea:	60f8      	str	r0, [r7, #12]
 80041ec:	60b9      	str	r1, [r7, #8]
 80041ee:	603b      	str	r3, [r7, #0]
 80041f0:	4613      	mov	r3, r2
 80041f2:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80041f4:	e022      	b.n	800423c <I2C_WaitOnFlagUntilTimeout+0x58>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80041f6:	683b      	ldr	r3, [r7, #0]
 80041f8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80041fc:	d01e      	beq.n	800423c <I2C_WaitOnFlagUntilTimeout+0x58>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80041fe:	f7fd fffd 	bl	80021fc <HAL_GetTick>
 8004202:	4602      	mov	r2, r0
 8004204:	69bb      	ldr	r3, [r7, #24]
 8004206:	1ad3      	subs	r3, r2, r3
 8004208:	683a      	ldr	r2, [r7, #0]
 800420a:	429a      	cmp	r2, r3
 800420c:	d302      	bcc.n	8004214 <I2C_WaitOnFlagUntilTimeout+0x30>
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	2b00      	cmp	r3, #0
 8004212:	d113      	bne.n	800423c <I2C_WaitOnFlagUntilTimeout+0x58>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004218:	f043 0220 	orr.w	r2, r3, #32
 800421c:	68fb      	ldr	r3, [r7, #12]
 800421e:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	2220      	movs	r2, #32
 8004224:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8004228:	68fb      	ldr	r3, [r7, #12]
 800422a:	2200      	movs	r2, #0
 800422c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004230:	68fb      	ldr	r3, [r7, #12]
 8004232:	2200      	movs	r2, #0
 8004234:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
        return HAL_ERROR;
 8004238:	2301      	movs	r3, #1
 800423a:	e00f      	b.n	800425c <I2C_WaitOnFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800423c:	68fb      	ldr	r3, [r7, #12]
 800423e:	681b      	ldr	r3, [r3, #0]
 8004240:	699a      	ldr	r2, [r3, #24]
 8004242:	68bb      	ldr	r3, [r7, #8]
 8004244:	4013      	ands	r3, r2
 8004246:	68ba      	ldr	r2, [r7, #8]
 8004248:	429a      	cmp	r2, r3
 800424a:	bf0c      	ite	eq
 800424c:	2301      	moveq	r3, #1
 800424e:	2300      	movne	r3, #0
 8004250:	b2db      	uxtb	r3, r3
 8004252:	461a      	mov	r2, r3
 8004254:	79fb      	ldrb	r3, [r7, #7]
 8004256:	429a      	cmp	r2, r3
 8004258:	d0cd      	beq.n	80041f6 <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800425a:	2300      	movs	r3, #0
}
 800425c:	4618      	mov	r0, r3
 800425e:	3710      	adds	r7, #16
 8004260:	46bd      	mov	sp, r7
 8004262:	bd80      	pop	{r7, pc}

08004264 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004264:	b580      	push	{r7, lr}
 8004266:	b084      	sub	sp, #16
 8004268:	af00      	add	r7, sp, #0
 800426a:	60f8      	str	r0, [r7, #12]
 800426c:	60b9      	str	r1, [r7, #8]
 800426e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004270:	e02c      	b.n	80042cc <I2C_WaitOnTXISFlagUntilTimeout+0x68>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004272:	687a      	ldr	r2, [r7, #4]
 8004274:	68b9      	ldr	r1, [r7, #8]
 8004276:	68f8      	ldr	r0, [r7, #12]
 8004278:	f000 f870 	bl	800435c <I2C_IsErrorOccurred>
 800427c:	4603      	mov	r3, r0
 800427e:	2b00      	cmp	r3, #0
 8004280:	d001      	beq.n	8004286 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004282:	2301      	movs	r3, #1
 8004284:	e02a      	b.n	80042dc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004286:	68bb      	ldr	r3, [r7, #8]
 8004288:	f1b3 3fff 	cmp.w	r3, #4294967295
 800428c:	d01e      	beq.n	80042cc <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800428e:	f7fd ffb5 	bl	80021fc <HAL_GetTick>
 8004292:	4602      	mov	r2, r0
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	1ad3      	subs	r3, r2, r3
 8004298:	68ba      	ldr	r2, [r7, #8]
 800429a:	429a      	cmp	r2, r3
 800429c:	d302      	bcc.n	80042a4 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 800429e:	68bb      	ldr	r3, [r7, #8]
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d113      	bne.n	80042cc <I2C_WaitOnTXISFlagUntilTimeout+0x68>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80042a8:	f043 0220 	orr.w	r2, r3, #32
 80042ac:	68fb      	ldr	r3, [r7, #12]
 80042ae:	645a      	str	r2, [r3, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80042b0:	68fb      	ldr	r3, [r7, #12]
 80042b2:	2220      	movs	r2, #32
 80042b4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	2200      	movs	r2, #0
 80042bc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	2200      	movs	r2, #0
 80042c4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

        return HAL_ERROR;
 80042c8:	2301      	movs	r3, #1
 80042ca:	e007      	b.n	80042dc <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80042cc:	68fb      	ldr	r3, [r7, #12]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	699b      	ldr	r3, [r3, #24]
 80042d2:	f003 0302 	and.w	r3, r3, #2
 80042d6:	2b02      	cmp	r3, #2
 80042d8:	d1cb      	bne.n	8004272 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80042da:	2300      	movs	r3, #0
}
 80042dc:	4618      	mov	r0, r3
 80042de:	3710      	adds	r7, #16
 80042e0:	46bd      	mov	sp, r7
 80042e2:	bd80      	pop	{r7, pc}

080042e4 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80042e4:	b580      	push	{r7, lr}
 80042e6:	b084      	sub	sp, #16
 80042e8:	af00      	add	r7, sp, #0
 80042ea:	60f8      	str	r0, [r7, #12]
 80042ec:	60b9      	str	r1, [r7, #8]
 80042ee:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80042f0:	e028      	b.n	8004344 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80042f2:	687a      	ldr	r2, [r7, #4]
 80042f4:	68b9      	ldr	r1, [r7, #8]
 80042f6:	68f8      	ldr	r0, [r7, #12]
 80042f8:	f000 f830 	bl	800435c <I2C_IsErrorOccurred>
 80042fc:	4603      	mov	r3, r0
 80042fe:	2b00      	cmp	r3, #0
 8004300:	d001      	beq.n	8004306 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004302:	2301      	movs	r3, #1
 8004304:	e026      	b.n	8004354 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004306:	f7fd ff79 	bl	80021fc <HAL_GetTick>
 800430a:	4602      	mov	r2, r0
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	1ad3      	subs	r3, r2, r3
 8004310:	68ba      	ldr	r2, [r7, #8]
 8004312:	429a      	cmp	r2, r3
 8004314:	d302      	bcc.n	800431c <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004316:	68bb      	ldr	r3, [r7, #8]
 8004318:	2b00      	cmp	r3, #0
 800431a:	d113      	bne.n	8004344 <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
    {
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800431c:	68fb      	ldr	r3, [r7, #12]
 800431e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004320:	f043 0220 	orr.w	r2, r3, #32
 8004324:	68fb      	ldr	r3, [r7, #12]
 8004326:	645a      	str	r2, [r3, #68]	; 0x44
      hi2c->State = HAL_I2C_STATE_READY;
 8004328:	68fb      	ldr	r3, [r7, #12]
 800432a:	2220      	movs	r2, #32
 800432c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
      hi2c->Mode = HAL_I2C_MODE_NONE;
 8004330:	68fb      	ldr	r3, [r7, #12]
 8004332:	2200      	movs	r2, #0
 8004334:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004338:	68fb      	ldr	r3, [r7, #12]
 800433a:	2200      	movs	r2, #0
 800433c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

      return HAL_ERROR;
 8004340:	2301      	movs	r3, #1
 8004342:	e007      	b.n	8004354 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	699b      	ldr	r3, [r3, #24]
 800434a:	f003 0320 	and.w	r3, r3, #32
 800434e:	2b20      	cmp	r3, #32
 8004350:	d1cf      	bne.n	80042f2 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
    }
  }
  return HAL_OK;
 8004352:	2300      	movs	r3, #0
}
 8004354:	4618      	mov	r0, r3
 8004356:	3710      	adds	r7, #16
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}

0800435c <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800435c:	b580      	push	{r7, lr}
 800435e:	b08a      	sub	sp, #40	; 0x28
 8004360:	af00      	add	r7, sp, #0
 8004362:	60f8      	str	r0, [r7, #12]
 8004364:	60b9      	str	r1, [r7, #8]
 8004366:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004368:	2300      	movs	r3, #0
 800436a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	681b      	ldr	r3, [r3, #0]
 8004372:	699b      	ldr	r3, [r3, #24]
 8004374:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8004376:	2300      	movs	r3, #0
 8004378:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800437e:	69bb      	ldr	r3, [r7, #24]
 8004380:	f003 0310 	and.w	r3, r3, #16
 8004384:	2b00      	cmp	r3, #0
 8004386:	d075      	beq.n	8004474 <I2C_IsErrorOccurred+0x118>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004388:	68fb      	ldr	r3, [r7, #12]
 800438a:	681b      	ldr	r3, [r3, #0]
 800438c:	2210      	movs	r2, #16
 800438e:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004390:	e056      	b.n	8004440 <I2C_IsErrorOccurred+0xe4>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 8004392:	68bb      	ldr	r3, [r7, #8]
 8004394:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004398:	d052      	beq.n	8004440 <I2C_IsErrorOccurred+0xe4>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800439a:	f7fd ff2f 	bl	80021fc <HAL_GetTick>
 800439e:	4602      	mov	r2, r0
 80043a0:	69fb      	ldr	r3, [r7, #28]
 80043a2:	1ad3      	subs	r3, r2, r3
 80043a4:	68ba      	ldr	r2, [r7, #8]
 80043a6:	429a      	cmp	r2, r3
 80043a8:	d302      	bcc.n	80043b0 <I2C_IsErrorOccurred+0x54>
 80043aa:	68bb      	ldr	r3, [r7, #8]
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	d147      	bne.n	8004440 <I2C_IsErrorOccurred+0xe4>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	685b      	ldr	r3, [r3, #4]
 80043b6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80043ba:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 80043bc:	68fb      	ldr	r3, [r7, #12]
 80043be:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 80043c2:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80043c4:	68fb      	ldr	r3, [r7, #12]
 80043c6:	681b      	ldr	r3, [r3, #0]
 80043c8:	699b      	ldr	r3, [r3, #24]
 80043ca:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80043ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80043d2:	d12e      	bne.n	8004432 <I2C_IsErrorOccurred+0xd6>
 80043d4:	697b      	ldr	r3, [r7, #20]
 80043d6:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80043da:	d02a      	beq.n	8004432 <I2C_IsErrorOccurred+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
 80043dc:	7cfb      	ldrb	r3, [r7, #19]
 80043de:	2b20      	cmp	r3, #32
 80043e0:	d027      	beq.n	8004432 <I2C_IsErrorOccurred+0xd6>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	685a      	ldr	r2, [r3, #4]
 80043e8:	68fb      	ldr	r3, [r7, #12]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80043f0:	605a      	str	r2, [r3, #4]
            
            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 80043f2:	f7fd ff03 	bl	80021fc <HAL_GetTick>
 80043f6:	61f8      	str	r0, [r7, #28]
          }
          
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80043f8:	e01b      	b.n	8004432 <I2C_IsErrorOccurred+0xd6>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80043fa:	f7fd feff 	bl	80021fc <HAL_GetTick>
 80043fe:	4602      	mov	r2, r0
 8004400:	69fb      	ldr	r3, [r7, #28]
 8004402:	1ad3      	subs	r3, r2, r3
 8004404:	2b19      	cmp	r3, #25
 8004406:	d914      	bls.n	8004432 <I2C_IsErrorOccurred+0xd6>
            {
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004408:	68fb      	ldr	r3, [r7, #12]
 800440a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800440c:	f043 0220 	orr.w	r2, r3, #32
 8004410:	68fb      	ldr	r3, [r7, #12]
 8004412:	645a      	str	r2, [r3, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 8004414:	68fb      	ldr	r3, [r7, #12]
 8004416:	2220      	movs	r2, #32
 8004418:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 800441c:	68fb      	ldr	r3, [r7, #12]
 800441e:	2200      	movs	r2, #0
 8004420:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
              
              /* Process Unlocked */
              __HAL_UNLOCK(hi2c);
 8004424:	68fb      	ldr	r3, [r7, #12]
 8004426:	2200      	movs	r2, #0
 8004428:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
              
              status = HAL_ERROR;
 800442c:	2301      	movs	r3, #1
 800442e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	699b      	ldr	r3, [r3, #24]
 8004438:	f003 0320 	and.w	r3, r3, #32
 800443c:	2b20      	cmp	r3, #32
 800443e:	d1dc      	bne.n	80043fa <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004440:	68fb      	ldr	r3, [r7, #12]
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	699b      	ldr	r3, [r3, #24]
 8004446:	f003 0320 	and.w	r3, r3, #32
 800444a:	2b20      	cmp	r3, #32
 800444c:	d003      	beq.n	8004456 <I2C_IsErrorOccurred+0xfa>
 800444e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8004452:	2b00      	cmp	r3, #0
 8004454:	d09d      	beq.n	8004392 <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 8004456:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800445a:	2b00      	cmp	r3, #0
 800445c:	d103      	bne.n	8004466 <I2C_IsErrorOccurred+0x10a>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800445e:	68fb      	ldr	r3, [r7, #12]
 8004460:	681b      	ldr	r3, [r3, #0]
 8004462:	2220      	movs	r2, #32
 8004464:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 8004466:	6a3b      	ldr	r3, [r7, #32]
 8004468:	f043 0304 	orr.w	r3, r3, #4
 800446c:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 800446e:	2301      	movs	r3, #1
 8004470:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 8004474:	68fb      	ldr	r3, [r7, #12]
 8004476:	681b      	ldr	r3, [r3, #0]
 8004478:	699b      	ldr	r3, [r3, #24]
 800447a:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 800447c:	69bb      	ldr	r3, [r7, #24]
 800447e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004482:	2b00      	cmp	r3, #0
 8004484:	d00b      	beq.n	800449e <I2C_IsErrorOccurred+0x142>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8004486:	6a3b      	ldr	r3, [r7, #32]
 8004488:	f043 0301 	orr.w	r3, r3, #1
 800448c:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 800448e:	68fb      	ldr	r3, [r7, #12]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004496:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004498:	2301      	movs	r3, #1
 800449a:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 800449e:	69bb      	ldr	r3, [r7, #24]
 80044a0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80044a4:	2b00      	cmp	r3, #0
 80044a6:	d00b      	beq.n	80044c0 <I2C_IsErrorOccurred+0x164>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 80044a8:	6a3b      	ldr	r3, [r7, #32]
 80044aa:	f043 0308 	orr.w	r3, r3, #8
 80044ae:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80044b8:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80044ba:	2301      	movs	r3, #1
 80044bc:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80044c0:	69bb      	ldr	r3, [r7, #24]
 80044c2:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80044c6:	2b00      	cmp	r3, #0
 80044c8:	d00b      	beq.n	80044e2 <I2C_IsErrorOccurred+0x186>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 80044ca:	6a3b      	ldr	r3, [r7, #32]
 80044cc:	f043 0302 	orr.w	r3, r3, #2
 80044d0:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80044d2:	68fb      	ldr	r3, [r7, #12]
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80044da:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80044dc:	2301      	movs	r3, #1
 80044de:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  }

  if (status != HAL_OK)
 80044e2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80044e6:	2b00      	cmp	r3, #0
 80044e8:	d01c      	beq.n	8004524 <I2C_IsErrorOccurred+0x1c8>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80044ea:	68f8      	ldr	r0, [r7, #12]
 80044ec:	f7ff fe56 	bl	800419c <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	6859      	ldr	r1, [r3, #4]
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	681a      	ldr	r2, [r3, #0]
 80044fa:	4b0d      	ldr	r3, [pc, #52]	; (8004530 <I2C_IsErrorOccurred+0x1d4>)
 80044fc:	400b      	ands	r3, r1
 80044fe:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8004504:	6a3b      	ldr	r3, [r7, #32]
 8004506:	431a      	orrs	r2, r3
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	645a      	str	r2, [r3, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 800450c:	68fb      	ldr	r3, [r7, #12]
 800450e:	2220      	movs	r2, #32
 8004510:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004514:	68fb      	ldr	r3, [r7, #12]
 8004516:	2200      	movs	r2, #0
 8004518:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	2200      	movs	r2, #0
 8004520:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
  }

  return status;
 8004524:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
}
 8004528:	4618      	mov	r0, r3
 800452a:	3728      	adds	r7, #40	; 0x28
 800452c:	46bd      	mov	sp, r7
 800452e:	bd80      	pop	{r7, pc}
 8004530:	fe00e800 	.word	0xfe00e800

08004534 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004534:	b480      	push	{r7}
 8004536:	b087      	sub	sp, #28
 8004538:	af00      	add	r7, sp, #0
 800453a:	60f8      	str	r0, [r7, #12]
 800453c:	607b      	str	r3, [r7, #4]
 800453e:	460b      	mov	r3, r1
 8004540:	817b      	strh	r3, [r7, #10]
 8004542:	4613      	mov	r3, r2
 8004544:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004546:	897b      	ldrh	r3, [r7, #10]
 8004548:	f3c3 0209 	ubfx	r2, r3, #0, #10
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 800454c:	7a7b      	ldrb	r3, [r7, #9]
 800454e:	041b      	lsls	r3, r3, #16
 8004550:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004554:	431a      	orrs	r2, r3
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800455a:	6a3b      	ldr	r3, [r7, #32]
 800455c:	4313      	orrs	r3, r2
 800455e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004562:	617b      	str	r3, [r7, #20]
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004564:	68fb      	ldr	r3, [r7, #12]
 8004566:	681b      	ldr	r3, [r3, #0]
 8004568:	685a      	ldr	r2, [r3, #4]
 800456a:	6a3b      	ldr	r3, [r7, #32]
 800456c:	0d5b      	lsrs	r3, r3, #21
 800456e:	f403 6180 	and.w	r1, r3, #1024	; 0x400
 8004572:	4b08      	ldr	r3, [pc, #32]	; (8004594 <I2C_TransferConfig+0x60>)
 8004574:	430b      	orrs	r3, r1
 8004576:	43db      	mvns	r3, r3
 8004578:	ea02 0103 	and.w	r1, r2, r3
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	697a      	ldr	r2, [r7, #20]
 8004582:	430a      	orrs	r2, r1
 8004584:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004586:	bf00      	nop
 8004588:	371c      	adds	r7, #28
 800458a:	46bd      	mov	sp, r7
 800458c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004590:	4770      	bx	lr
 8004592:	bf00      	nop
 8004594:	03ff63ff 	.word	0x03ff63ff

08004598 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004598:	b480      	push	{r7}
 800459a:	b083      	sub	sp, #12
 800459c:	af00      	add	r7, sp, #0
 800459e:	6078      	str	r0, [r7, #4]
 80045a0:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80045a8:	b2db      	uxtb	r3, r3
 80045aa:	2b20      	cmp	r3, #32
 80045ac:	d138      	bne.n	8004620 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80045b4:	2b01      	cmp	r3, #1
 80045b6:	d101      	bne.n	80045bc <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80045b8:	2302      	movs	r3, #2
 80045ba:	e032      	b.n	8004622 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	2201      	movs	r2, #1
 80045c0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	2224      	movs	r2, #36	; 0x24
 80045c8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	681b      	ldr	r3, [r3, #0]
 80045d0:	681a      	ldr	r2, [r3, #0]
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	681b      	ldr	r3, [r3, #0]
 80045d6:	f022 0201 	bic.w	r2, r2, #1
 80045da:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	681b      	ldr	r3, [r3, #0]
 80045e0:	681a      	ldr	r2, [r3, #0]
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80045ea:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	6819      	ldr	r1, [r3, #0]
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	683a      	ldr	r2, [r7, #0]
 80045f8:	430a      	orrs	r2, r1
 80045fa:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	681b      	ldr	r3, [r3, #0]
 8004600:	681a      	ldr	r2, [r3, #0]
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	f042 0201 	orr.w	r2, r2, #1
 800460a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	2220      	movs	r2, #32
 8004610:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	2200      	movs	r2, #0
 8004618:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 800461c:	2300      	movs	r3, #0
 800461e:	e000      	b.n	8004622 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8004620:	2302      	movs	r3, #2
  }
}
 8004622:	4618      	mov	r0, r3
 8004624:	370c      	adds	r7, #12
 8004626:	46bd      	mov	sp, r7
 8004628:	f85d 7b04 	ldr.w	r7, [sp], #4
 800462c:	4770      	bx	lr

0800462e <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800462e:	b480      	push	{r7}
 8004630:	b085      	sub	sp, #20
 8004632:	af00      	add	r7, sp, #0
 8004634:	6078      	str	r0, [r7, #4]
 8004636:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004638:	687b      	ldr	r3, [r7, #4]
 800463a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800463e:	b2db      	uxtb	r3, r3
 8004640:	2b20      	cmp	r3, #32
 8004642:	d139      	bne.n	80046b8 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800464a:	2b01      	cmp	r3, #1
 800464c:	d101      	bne.n	8004652 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 800464e:	2302      	movs	r3, #2
 8004650:	e033      	b.n	80046ba <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	2201      	movs	r2, #1
 8004656:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	2224      	movs	r2, #36	; 0x24
 800465e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	681a      	ldr	r2, [r3, #0]
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	681b      	ldr	r3, [r3, #0]
 800466c:	f022 0201 	bic.w	r2, r2, #1
 8004670:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800467a:	68fb      	ldr	r3, [r7, #12]
 800467c:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8004680:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8004682:	683b      	ldr	r3, [r7, #0]
 8004684:	021b      	lsls	r3, r3, #8
 8004686:	68fa      	ldr	r2, [r7, #12]
 8004688:	4313      	orrs	r3, r2
 800468a:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	68fa      	ldr	r2, [r7, #12]
 8004692:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	681a      	ldr	r2, [r3, #0]
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	f042 0201 	orr.w	r2, r2, #1
 80046a2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80046a4:	687b      	ldr	r3, [r7, #4]
 80046a6:	2220      	movs	r2, #32
 80046a8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	2200      	movs	r2, #0
 80046b0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40

    return HAL_OK;
 80046b4:	2300      	movs	r3, #0
 80046b6:	e000      	b.n	80046ba <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 80046b8:	2302      	movs	r3, #2
  }
}
 80046ba:	4618      	mov	r0, r3
 80046bc:	3714      	adds	r7, #20
 80046be:	46bd      	mov	sp, r7
 80046c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c4:	4770      	bx	lr
	...

080046c8 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80046c8:	b580      	push	{r7, lr}
 80046ca:	b084      	sub	sp, #16
 80046cc:	af00      	add	r7, sp, #0
 80046ce:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2b00      	cmp	r3, #0
 80046d4:	d101      	bne.n	80046da <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80046d6:	2301      	movs	r3, #1
 80046d8:	e0bf      	b.n	800485a <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80046da:	687b      	ldr	r3, [r7, #4]
 80046dc:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 80046e0:	b2db      	uxtb	r3, r3
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d106      	bne.n	80046f4 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	2200      	movs	r2, #0
 80046ea:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 80046ee:	6878      	ldr	r0, [r7, #4]
 80046f0:	f7fd f892 	bl	8001818 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80046f4:	687b      	ldr	r3, [r7, #4]
 80046f6:	2202      	movs	r2, #2
 80046f8:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	699a      	ldr	r2, [r3, #24]
 8004702:	687b      	ldr	r3, [r7, #4]
 8004704:	681b      	ldr	r3, [r3, #0]
 8004706:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800470a:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	6999      	ldr	r1, [r3, #24]
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	685a      	ldr	r2, [r3, #4]
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	689b      	ldr	r3, [r3, #8]
 800471a:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004720:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	691b      	ldr	r3, [r3, #16]
 8004726:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004728:	687b      	ldr	r3, [r7, #4]
 800472a:	681b      	ldr	r3, [r3, #0]
 800472c:	430a      	orrs	r2, r1
 800472e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	681b      	ldr	r3, [r3, #0]
 8004734:	6899      	ldr	r1, [r3, #8]
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	681a      	ldr	r2, [r3, #0]
 800473a:	4b4a      	ldr	r3, [pc, #296]	; (8004864 <HAL_LTDC_Init+0x19c>)
 800473c:	400b      	ands	r3, r1
 800473e:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	695b      	ldr	r3, [r3, #20]
 8004744:	041b      	lsls	r3, r3, #16
 8004746:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	6899      	ldr	r1, [r3, #8]
 800474e:	687b      	ldr	r3, [r7, #4]
 8004750:	699a      	ldr	r2, [r3, #24]
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	431a      	orrs	r2, r3
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	681b      	ldr	r3, [r3, #0]
 800475a:	430a      	orrs	r2, r1
 800475c:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	68d9      	ldr	r1, [r3, #12]
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681a      	ldr	r2, [r3, #0]
 8004768:	4b3e      	ldr	r3, [pc, #248]	; (8004864 <HAL_LTDC_Init+0x19c>)
 800476a:	400b      	ands	r3, r1
 800476c:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	69db      	ldr	r3, [r3, #28]
 8004772:	041b      	lsls	r3, r3, #16
 8004774:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	68d9      	ldr	r1, [r3, #12]
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	6a1a      	ldr	r2, [r3, #32]
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	431a      	orrs	r2, r3
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	430a      	orrs	r2, r1
 800478a:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800478c:	687b      	ldr	r3, [r7, #4]
 800478e:	681b      	ldr	r3, [r3, #0]
 8004790:	6919      	ldr	r1, [r3, #16]
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681a      	ldr	r2, [r3, #0]
 8004796:	4b33      	ldr	r3, [pc, #204]	; (8004864 <HAL_LTDC_Init+0x19c>)
 8004798:	400b      	ands	r3, r1
 800479a:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a0:	041b      	lsls	r3, r3, #16
 80047a2:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	6919      	ldr	r1, [r3, #16]
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80047ae:	68fb      	ldr	r3, [r7, #12]
 80047b0:	431a      	orrs	r2, r3
 80047b2:	687b      	ldr	r3, [r7, #4]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	430a      	orrs	r2, r1
 80047b8:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	681b      	ldr	r3, [r3, #0]
 80047be:	6959      	ldr	r1, [r3, #20]
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	681a      	ldr	r2, [r3, #0]
 80047c4:	4b27      	ldr	r3, [pc, #156]	; (8004864 <HAL_LTDC_Init+0x19c>)
 80047c6:	400b      	ands	r3, r1
 80047c8:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80047ce:	041b      	lsls	r3, r3, #16
 80047d0:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80047d2:	687b      	ldr	r3, [r7, #4]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	6959      	ldr	r1, [r3, #20]
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80047dc:	68fb      	ldr	r3, [r7, #12]
 80047de:	431a      	orrs	r2, r3
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	681b      	ldr	r3, [r3, #0]
 80047e4:	430a      	orrs	r2, r1
 80047e6:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80047ee:	021b      	lsls	r3, r3, #8
 80047f0:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 80047f8:	041b      	lsls	r3, r3, #16
 80047fa:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800480a:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	681b      	ldr	r3, [r3, #0]
 8004810:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8004812:	68ba      	ldr	r2, [r7, #8]
 8004814:	68fb      	ldr	r3, [r7, #12]
 8004816:	4313      	orrs	r3, r2
 8004818:	687a      	ldr	r2, [r7, #4]
 800481a:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 800481e:	431a      	orrs	r2, r3
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	430a      	orrs	r2, r1
 8004826:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	f042 0206 	orr.w	r2, r2, #6
 8004836:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	681b      	ldr	r3, [r3, #0]
 800483c:	699a      	ldr	r2, [r3, #24]
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f042 0201 	orr.w	r2, r2, #1
 8004846:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	2200      	movs	r2, #0
 800484c:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	2201      	movs	r2, #1
 8004854:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8004858:	2300      	movs	r3, #0
}
 800485a:	4618      	mov	r0, r3
 800485c:	3710      	adds	r7, #16
 800485e:	46bd      	mov	sp, r7
 8004860:	bd80      	pop	{r7, pc}
 8004862:	bf00      	nop
 8004864:	f000f800 	.word	0xf000f800

08004868 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8004868:	b580      	push	{r7, lr}
 800486a:	b084      	sub	sp, #16
 800486c:	af00      	add	r7, sp, #0
 800486e:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	681b      	ldr	r3, [r3, #0]
 8004874:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004876:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800487e:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	f003 0304 	and.w	r3, r3, #4
 8004886:	2b00      	cmp	r3, #0
 8004888:	d023      	beq.n	80048d2 <HAL_LTDC_IRQHandler+0x6a>
 800488a:	68bb      	ldr	r3, [r7, #8]
 800488c:	f003 0304 	and.w	r3, r3, #4
 8004890:	2b00      	cmp	r3, #0
 8004892:	d01e      	beq.n	80048d2 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	681b      	ldr	r3, [r3, #0]
 8004898:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800489a:	687b      	ldr	r3, [r7, #4]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	f022 0204 	bic.w	r2, r2, #4
 80048a2:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	2204      	movs	r2, #4
 80048aa:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80048b2:	f043 0201 	orr.w	r2, r3, #1
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	2204      	movs	r2, #4
 80048c0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	2200      	movs	r2, #0
 80048c8:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80048cc:	6878      	ldr	r0, [r7, #4]
 80048ce:	f000 f86f 	bl	80049b0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80048d2:	68fb      	ldr	r3, [r7, #12]
 80048d4:	f003 0302 	and.w	r3, r3, #2
 80048d8:	2b00      	cmp	r3, #0
 80048da:	d023      	beq.n	8004924 <HAL_LTDC_IRQHandler+0xbc>
 80048dc:	68bb      	ldr	r3, [r7, #8]
 80048de:	f003 0302 	and.w	r3, r3, #2
 80048e2:	2b00      	cmp	r3, #0
 80048e4:	d01e      	beq.n	8004924 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	681b      	ldr	r3, [r3, #0]
 80048ea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	f022 0202 	bic.w	r2, r2, #2
 80048f4:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	2202      	movs	r2, #2
 80048fc:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8004904:	f043 0202 	orr.w	r2, r3, #2
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	2204      	movs	r2, #4
 8004912:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	2200      	movs	r2, #0
 800491a:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 800491e:	6878      	ldr	r0, [r7, #4]
 8004920:	f000 f846 	bl	80049b0 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004924:	68fb      	ldr	r3, [r7, #12]
 8004926:	f003 0301 	and.w	r3, r3, #1
 800492a:	2b00      	cmp	r3, #0
 800492c:	d01b      	beq.n	8004966 <HAL_LTDC_IRQHandler+0xfe>
 800492e:	68bb      	ldr	r3, [r7, #8]
 8004930:	f003 0301 	and.w	r3, r3, #1
 8004934:	2b00      	cmp	r3, #0
 8004936:	d016      	beq.n	8004966 <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	f022 0201 	bic.w	r2, r2, #1
 8004946:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	2201      	movs	r2, #1
 800494e:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004950:	687b      	ldr	r3, [r7, #4]
 8004952:	2201      	movs	r2, #1
 8004954:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	2200      	movs	r2, #0
 800495c:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8004960:	6878      	ldr	r0, [r7, #4]
 8004962:	f00c fc15 	bl	8011190 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	f003 0308 	and.w	r3, r3, #8
 800496c:	2b00      	cmp	r3, #0
 800496e:	d01b      	beq.n	80049a8 <HAL_LTDC_IRQHandler+0x140>
 8004970:	68bb      	ldr	r3, [r7, #8]
 8004972:	f003 0308 	and.w	r3, r3, #8
 8004976:	2b00      	cmp	r3, #0
 8004978:	d016      	beq.n	80049a8 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f022 0208 	bic.w	r2, r2, #8
 8004988:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800498a:	687b      	ldr	r3, [r7, #4]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	2208      	movs	r2, #8
 8004990:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004992:	687b      	ldr	r3, [r7, #4]
 8004994:	2201      	movs	r2, #1
 8004996:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	2200      	movs	r2, #0
 800499e:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80049a2:	6878      	ldr	r0, [r7, #4]
 80049a4:	f000 f80e 	bl	80049c4 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80049a8:	bf00      	nop
 80049aa:	3710      	adds	r7, #16
 80049ac:	46bd      	mov	sp, r7
 80049ae:	bd80      	pop	{r7, pc}

080049b0 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80049b0:	b480      	push	{r7}
 80049b2:	b083      	sub	sp, #12
 80049b4:	af00      	add	r7, sp, #0
 80049b6:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80049b8:	bf00      	nop
 80049ba:	370c      	adds	r7, #12
 80049bc:	46bd      	mov	sp, r7
 80049be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049c2:	4770      	bx	lr

080049c4 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80049c4:	b480      	push	{r7}
 80049c6:	b083      	sub	sp, #12
 80049c8:	af00      	add	r7, sp, #0
 80049ca:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80049cc:	bf00      	nop
 80049ce:	370c      	adds	r7, #12
 80049d0:	46bd      	mov	sp, r7
 80049d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d6:	4770      	bx	lr

080049d8 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80049d8:	b5b0      	push	{r4, r5, r7, lr}
 80049da:	b084      	sub	sp, #16
 80049dc:	af00      	add	r7, sp, #0
 80049de:	60f8      	str	r0, [r7, #12]
 80049e0:	60b9      	str	r1, [r7, #8]
 80049e2:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80049ea:	2b01      	cmp	r3, #1
 80049ec:	d101      	bne.n	80049f2 <HAL_LTDC_ConfigLayer+0x1a>
 80049ee:	2302      	movs	r3, #2
 80049f0:	e02c      	b.n	8004a4c <HAL_LTDC_ConfigLayer+0x74>
 80049f2:	68fb      	ldr	r3, [r7, #12]
 80049f4:	2201      	movs	r2, #1
 80049f6:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80049fa:	68fb      	ldr	r3, [r7, #12]
 80049fc:	2202      	movs	r2, #2
 80049fe:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004a02:	68fa      	ldr	r2, [r7, #12]
 8004a04:	687b      	ldr	r3, [r7, #4]
 8004a06:	2134      	movs	r1, #52	; 0x34
 8004a08:	fb01 f303 	mul.w	r3, r1, r3
 8004a0c:	4413      	add	r3, r2
 8004a0e:	f103 0238 	add.w	r2, r3, #56	; 0x38
 8004a12:	68bb      	ldr	r3, [r7, #8]
 8004a14:	4614      	mov	r4, r2
 8004a16:	461d      	mov	r5, r3
 8004a18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004a1a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004a1c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004a1e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004a20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004a22:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004a24:	682b      	ldr	r3, [r5, #0]
 8004a26:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004a28:	687a      	ldr	r2, [r7, #4]
 8004a2a:	68b9      	ldr	r1, [r7, #8]
 8004a2c:	68f8      	ldr	r0, [r7, #12]
 8004a2e:	f000 f849 	bl	8004ac4 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	2201      	movs	r2, #1
 8004a38:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	2201      	movs	r2, #1
 8004a3e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8004a42:	68fb      	ldr	r3, [r7, #12]
 8004a44:	2200      	movs	r2, #0
 8004a46:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8004a4a:	2300      	movs	r3, #0
}
 8004a4c:	4618      	mov	r0, r3
 8004a4e:	3710      	adds	r7, #16
 8004a50:	46bd      	mov	sp, r7
 8004a52:	bdb0      	pop	{r4, r5, r7, pc}

08004a54 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8004a54:	b480      	push	{r7}
 8004a56:	b083      	sub	sp, #12
 8004a58:	af00      	add	r7, sp, #0
 8004a5a:	6078      	str	r0, [r7, #4]
 8004a5c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 8004a64:	2b01      	cmp	r3, #1
 8004a66:	d101      	bne.n	8004a6c <HAL_LTDC_ProgramLineEvent+0x18>
 8004a68:	2302      	movs	r3, #2
 8004a6a:	e023      	b.n	8004ab4 <HAL_LTDC_ProgramLineEvent+0x60>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	2201      	movs	r2, #1
 8004a70:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	2202      	movs	r2, #2
 8004a78:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	f022 0201 	bic.w	r2, r2, #1
 8004a8a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8004a8c:	4a0c      	ldr	r2, [pc, #48]	; (8004ac0 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8004a8e:	683b      	ldr	r3, [r7, #0]
 8004a90:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	f042 0201 	orr.w	r2, r2, #1
 8004aa0:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	2201      	movs	r2, #1
 8004aa6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	2200      	movs	r2, #0
 8004aae:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8004ab2:	2300      	movs	r3, #0
}
 8004ab4:	4618      	mov	r0, r3
 8004ab6:	370c      	adds	r7, #12
 8004ab8:	46bd      	mov	sp, r7
 8004aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004abe:	4770      	bx	lr
 8004ac0:	40016800 	.word	0x40016800

08004ac4 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004ac4:	b480      	push	{r7}
 8004ac6:	b089      	sub	sp, #36	; 0x24
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	60f8      	str	r0, [r7, #12]
 8004acc:	60b9      	str	r1, [r7, #8]
 8004ace:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004ad0:	68bb      	ldr	r3, [r7, #8]
 8004ad2:	685a      	ldr	r2, [r3, #4]
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	68db      	ldr	r3, [r3, #12]
 8004ada:	0c1b      	lsrs	r3, r3, #16
 8004adc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ae0:	4413      	add	r3, r2
 8004ae2:	041b      	lsls	r3, r3, #16
 8004ae4:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	461a      	mov	r2, r3
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	01db      	lsls	r3, r3, #7
 8004af0:	4413      	add	r3, r2
 8004af2:	3384      	adds	r3, #132	; 0x84
 8004af4:	685b      	ldr	r3, [r3, #4]
 8004af6:	68fa      	ldr	r2, [r7, #12]
 8004af8:	6812      	ldr	r2, [r2, #0]
 8004afa:	4611      	mov	r1, r2
 8004afc:	687a      	ldr	r2, [r7, #4]
 8004afe:	01d2      	lsls	r2, r2, #7
 8004b00:	440a      	add	r2, r1
 8004b02:	3284      	adds	r2, #132	; 0x84
 8004b04:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8004b08:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8004b0a:	68bb      	ldr	r3, [r7, #8]
 8004b0c:	681a      	ldr	r2, [r3, #0]
 8004b0e:	68fb      	ldr	r3, [r7, #12]
 8004b10:	681b      	ldr	r3, [r3, #0]
 8004b12:	68db      	ldr	r3, [r3, #12]
 8004b14:	0c1b      	lsrs	r3, r3, #16
 8004b16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004b1a:	4413      	add	r3, r2
 8004b1c:	1c5a      	adds	r2, r3, #1
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	4619      	mov	r1, r3
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	01db      	lsls	r3, r3, #7
 8004b28:	440b      	add	r3, r1
 8004b2a:	3384      	adds	r3, #132	; 0x84
 8004b2c:	4619      	mov	r1, r3
 8004b2e:	69fb      	ldr	r3, [r7, #28]
 8004b30:	4313      	orrs	r3, r2
 8004b32:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8004b34:	68bb      	ldr	r3, [r7, #8]
 8004b36:	68da      	ldr	r2, [r3, #12]
 8004b38:	68fb      	ldr	r3, [r7, #12]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	68db      	ldr	r3, [r3, #12]
 8004b3e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004b42:	4413      	add	r3, r2
 8004b44:	041b      	lsls	r3, r3, #16
 8004b46:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	461a      	mov	r2, r3
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	01db      	lsls	r3, r3, #7
 8004b52:	4413      	add	r3, r2
 8004b54:	3384      	adds	r3, #132	; 0x84
 8004b56:	689b      	ldr	r3, [r3, #8]
 8004b58:	68fa      	ldr	r2, [r7, #12]
 8004b5a:	6812      	ldr	r2, [r2, #0]
 8004b5c:	4611      	mov	r1, r2
 8004b5e:	687a      	ldr	r2, [r7, #4]
 8004b60:	01d2      	lsls	r2, r2, #7
 8004b62:	440a      	add	r2, r1
 8004b64:	3284      	adds	r2, #132	; 0x84
 8004b66:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8004b6a:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8004b6c:	68bb      	ldr	r3, [r7, #8]
 8004b6e:	689a      	ldr	r2, [r3, #8]
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	681b      	ldr	r3, [r3, #0]
 8004b74:	68db      	ldr	r3, [r3, #12]
 8004b76:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8004b7a:	4413      	add	r3, r2
 8004b7c:	1c5a      	adds	r2, r3, #1
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	4619      	mov	r1, r3
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	01db      	lsls	r3, r3, #7
 8004b88:	440b      	add	r3, r1
 8004b8a:	3384      	adds	r3, #132	; 0x84
 8004b8c:	4619      	mov	r1, r3
 8004b8e:	69fb      	ldr	r3, [r7, #28]
 8004b90:	4313      	orrs	r3, r2
 8004b92:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8004b94:	68fb      	ldr	r3, [r7, #12]
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	461a      	mov	r2, r3
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	01db      	lsls	r3, r3, #7
 8004b9e:	4413      	add	r3, r2
 8004ba0:	3384      	adds	r3, #132	; 0x84
 8004ba2:	691b      	ldr	r3, [r3, #16]
 8004ba4:	68fa      	ldr	r2, [r7, #12]
 8004ba6:	6812      	ldr	r2, [r2, #0]
 8004ba8:	4611      	mov	r1, r2
 8004baa:	687a      	ldr	r2, [r7, #4]
 8004bac:	01d2      	lsls	r2, r2, #7
 8004bae:	440a      	add	r2, r1
 8004bb0:	3284      	adds	r2, #132	; 0x84
 8004bb2:	f023 0307 	bic.w	r3, r3, #7
 8004bb6:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	681b      	ldr	r3, [r3, #0]
 8004bbc:	461a      	mov	r2, r3
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	01db      	lsls	r3, r3, #7
 8004bc2:	4413      	add	r3, r2
 8004bc4:	3384      	adds	r3, #132	; 0x84
 8004bc6:	461a      	mov	r2, r3
 8004bc8:	68bb      	ldr	r3, [r7, #8]
 8004bca:	691b      	ldr	r3, [r3, #16]
 8004bcc:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8004bce:	68bb      	ldr	r3, [r7, #8]
 8004bd0:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 8004bd4:	021b      	lsls	r3, r3, #8
 8004bd6:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8004bd8:	68bb      	ldr	r3, [r7, #8]
 8004bda:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8004bde:	041b      	lsls	r3, r3, #16
 8004be0:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8004be2:	68bb      	ldr	r3, [r7, #8]
 8004be4:	699b      	ldr	r3, [r3, #24]
 8004be6:	061b      	lsls	r3, r3, #24
 8004be8:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	461a      	mov	r2, r3
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	01db      	lsls	r3, r3, #7
 8004bf4:	4413      	add	r3, r2
 8004bf6:	3384      	adds	r3, #132	; 0x84
 8004bf8:	699b      	ldr	r3, [r3, #24]
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	461a      	mov	r2, r3
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	01db      	lsls	r3, r3, #7
 8004c04:	4413      	add	r3, r2
 8004c06:	3384      	adds	r3, #132	; 0x84
 8004c08:	461a      	mov	r2, r3
 8004c0a:	2300      	movs	r3, #0
 8004c0c:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8004c0e:	68bb      	ldr	r3, [r7, #8]
 8004c10:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8004c14:	461a      	mov	r2, r3
 8004c16:	69fb      	ldr	r3, [r7, #28]
 8004c18:	431a      	orrs	r2, r3
 8004c1a:	69bb      	ldr	r3, [r7, #24]
 8004c1c:	431a      	orrs	r2, r3
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	4619      	mov	r1, r3
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	01db      	lsls	r3, r3, #7
 8004c28:	440b      	add	r3, r1
 8004c2a:	3384      	adds	r3, #132	; 0x84
 8004c2c:	4619      	mov	r1, r3
 8004c2e:	697b      	ldr	r3, [r7, #20]
 8004c30:	4313      	orrs	r3, r2
 8004c32:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8004c34:	68fb      	ldr	r3, [r7, #12]
 8004c36:	681b      	ldr	r3, [r3, #0]
 8004c38:	461a      	mov	r2, r3
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	01db      	lsls	r3, r3, #7
 8004c3e:	4413      	add	r3, r2
 8004c40:	3384      	adds	r3, #132	; 0x84
 8004c42:	695b      	ldr	r3, [r3, #20]
 8004c44:	68fa      	ldr	r2, [r7, #12]
 8004c46:	6812      	ldr	r2, [r2, #0]
 8004c48:	4611      	mov	r1, r2
 8004c4a:	687a      	ldr	r2, [r7, #4]
 8004c4c:	01d2      	lsls	r2, r2, #7
 8004c4e:	440a      	add	r2, r1
 8004c50:	3284      	adds	r2, #132	; 0x84
 8004c52:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8004c56:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	461a      	mov	r2, r3
 8004c5e:	687b      	ldr	r3, [r7, #4]
 8004c60:	01db      	lsls	r3, r3, #7
 8004c62:	4413      	add	r3, r2
 8004c64:	3384      	adds	r3, #132	; 0x84
 8004c66:	461a      	mov	r2, r3
 8004c68:	68bb      	ldr	r3, [r7, #8]
 8004c6a:	695b      	ldr	r3, [r3, #20]
 8004c6c:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	461a      	mov	r2, r3
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	01db      	lsls	r3, r3, #7
 8004c78:	4413      	add	r3, r2
 8004c7a:	3384      	adds	r3, #132	; 0x84
 8004c7c:	69da      	ldr	r2, [r3, #28]
 8004c7e:	68fb      	ldr	r3, [r7, #12]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	4619      	mov	r1, r3
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	01db      	lsls	r3, r3, #7
 8004c88:	440b      	add	r3, r1
 8004c8a:	3384      	adds	r3, #132	; 0x84
 8004c8c:	4619      	mov	r1, r3
 8004c8e:	4b58      	ldr	r3, [pc, #352]	; (8004df0 <LTDC_SetConfig+0x32c>)
 8004c90:	4013      	ands	r3, r2
 8004c92:	61cb      	str	r3, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8004c94:	68bb      	ldr	r3, [r7, #8]
 8004c96:	69da      	ldr	r2, [r3, #28]
 8004c98:	68bb      	ldr	r3, [r7, #8]
 8004c9a:	6a1b      	ldr	r3, [r3, #32]
 8004c9c:	68f9      	ldr	r1, [r7, #12]
 8004c9e:	6809      	ldr	r1, [r1, #0]
 8004ca0:	4608      	mov	r0, r1
 8004ca2:	6879      	ldr	r1, [r7, #4]
 8004ca4:	01c9      	lsls	r1, r1, #7
 8004ca6:	4401      	add	r1, r0
 8004ca8:	3184      	adds	r1, #132	; 0x84
 8004caa:	4313      	orrs	r3, r2
 8004cac:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8004cae:	68fb      	ldr	r3, [r7, #12]
 8004cb0:	681b      	ldr	r3, [r3, #0]
 8004cb2:	461a      	mov	r2, r3
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	01db      	lsls	r3, r3, #7
 8004cb8:	4413      	add	r3, r2
 8004cba:	3384      	adds	r3, #132	; 0x84
 8004cbc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004cbe:	68fb      	ldr	r3, [r7, #12]
 8004cc0:	681b      	ldr	r3, [r3, #0]
 8004cc2:	461a      	mov	r2, r3
 8004cc4:	687b      	ldr	r3, [r7, #4]
 8004cc6:	01db      	lsls	r3, r3, #7
 8004cc8:	4413      	add	r3, r2
 8004cca:	3384      	adds	r3, #132	; 0x84
 8004ccc:	461a      	mov	r2, r3
 8004cce:	2300      	movs	r3, #0
 8004cd0:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8004cd2:	68fb      	ldr	r3, [r7, #12]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	461a      	mov	r2, r3
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	01db      	lsls	r3, r3, #7
 8004cdc:	4413      	add	r3, r2
 8004cde:	3384      	adds	r3, #132	; 0x84
 8004ce0:	461a      	mov	r2, r3
 8004ce2:	68bb      	ldr	r3, [r7, #8]
 8004ce4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ce6:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8004ce8:	68bb      	ldr	r3, [r7, #8]
 8004cea:	691b      	ldr	r3, [r3, #16]
 8004cec:	2b00      	cmp	r3, #0
 8004cee:	d102      	bne.n	8004cf6 <LTDC_SetConfig+0x232>
  {
    tmp = 4U;
 8004cf0:	2304      	movs	r3, #4
 8004cf2:	61fb      	str	r3, [r7, #28]
 8004cf4:	e01b      	b.n	8004d2e <LTDC_SetConfig+0x26a>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8004cf6:	68bb      	ldr	r3, [r7, #8]
 8004cf8:	691b      	ldr	r3, [r3, #16]
 8004cfa:	2b01      	cmp	r3, #1
 8004cfc:	d102      	bne.n	8004d04 <LTDC_SetConfig+0x240>
  {
    tmp = 3U;
 8004cfe:	2303      	movs	r3, #3
 8004d00:	61fb      	str	r3, [r7, #28]
 8004d02:	e014      	b.n	8004d2e <LTDC_SetConfig+0x26a>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004d04:	68bb      	ldr	r3, [r7, #8]
 8004d06:	691b      	ldr	r3, [r3, #16]
 8004d08:	2b04      	cmp	r3, #4
 8004d0a:	d00b      	beq.n	8004d24 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004d0c:	68bb      	ldr	r3, [r7, #8]
 8004d0e:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8004d10:	2b02      	cmp	r3, #2
 8004d12:	d007      	beq.n	8004d24 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004d14:	68bb      	ldr	r3, [r7, #8]
 8004d16:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8004d18:	2b03      	cmp	r3, #3
 8004d1a:	d003      	beq.n	8004d24 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8004d1c:	68bb      	ldr	r3, [r7, #8]
 8004d1e:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8004d20:	2b07      	cmp	r3, #7
 8004d22:	d102      	bne.n	8004d2a <LTDC_SetConfig+0x266>
  {
    tmp = 2U;
 8004d24:	2302      	movs	r3, #2
 8004d26:	61fb      	str	r3, [r7, #28]
 8004d28:	e001      	b.n	8004d2e <LTDC_SetConfig+0x26a>
  }
  else
  {
    tmp = 1U;
 8004d2a:	2301      	movs	r3, #1
 8004d2c:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8004d2e:	68fb      	ldr	r3, [r7, #12]
 8004d30:	681b      	ldr	r3, [r3, #0]
 8004d32:	461a      	mov	r2, r3
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	01db      	lsls	r3, r3, #7
 8004d38:	4413      	add	r3, r2
 8004d3a:	3384      	adds	r3, #132	; 0x84
 8004d3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d3e:	68fa      	ldr	r2, [r7, #12]
 8004d40:	6812      	ldr	r2, [r2, #0]
 8004d42:	4611      	mov	r1, r2
 8004d44:	687a      	ldr	r2, [r7, #4]
 8004d46:	01d2      	lsls	r2, r2, #7
 8004d48:	440a      	add	r2, r1
 8004d4a:	3284      	adds	r2, #132	; 0x84
 8004d4c:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8004d50:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8004d52:	68bb      	ldr	r3, [r7, #8]
 8004d54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d56:	69fa      	ldr	r2, [r7, #28]
 8004d58:	fb02 f303 	mul.w	r3, r2, r3
 8004d5c:	041a      	lsls	r2, r3, #16
 8004d5e:	68bb      	ldr	r3, [r7, #8]
 8004d60:	6859      	ldr	r1, [r3, #4]
 8004d62:	68bb      	ldr	r3, [r7, #8]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	1acb      	subs	r3, r1, r3
 8004d68:	69f9      	ldr	r1, [r7, #28]
 8004d6a:	fb01 f303 	mul.w	r3, r1, r3
 8004d6e:	3303      	adds	r3, #3
 8004d70:	68f9      	ldr	r1, [r7, #12]
 8004d72:	6809      	ldr	r1, [r1, #0]
 8004d74:	4608      	mov	r0, r1
 8004d76:	6879      	ldr	r1, [r7, #4]
 8004d78:	01c9      	lsls	r1, r1, #7
 8004d7a:	4401      	add	r1, r0
 8004d7c:	3184      	adds	r1, #132	; 0x84
 8004d7e:	4313      	orrs	r3, r2
 8004d80:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8004d82:	68fb      	ldr	r3, [r7, #12]
 8004d84:	681b      	ldr	r3, [r3, #0]
 8004d86:	461a      	mov	r2, r3
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	01db      	lsls	r3, r3, #7
 8004d8c:	4413      	add	r3, r2
 8004d8e:	3384      	adds	r3, #132	; 0x84
 8004d90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004d92:	68fb      	ldr	r3, [r7, #12]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	4619      	mov	r1, r3
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	01db      	lsls	r3, r3, #7
 8004d9c:	440b      	add	r3, r1
 8004d9e:	3384      	adds	r3, #132	; 0x84
 8004da0:	4619      	mov	r1, r3
 8004da2:	4b14      	ldr	r3, [pc, #80]	; (8004df4 <LTDC_SetConfig+0x330>)
 8004da4:	4013      	ands	r3, r2
 8004da6:	630b      	str	r3, [r1, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	461a      	mov	r2, r3
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	01db      	lsls	r3, r3, #7
 8004db2:	4413      	add	r3, r2
 8004db4:	3384      	adds	r3, #132	; 0x84
 8004db6:	461a      	mov	r2, r3
 8004db8:	68bb      	ldr	r3, [r7, #8]
 8004dba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004dbc:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8004dbe:	68fb      	ldr	r3, [r7, #12]
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	461a      	mov	r2, r3
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	01db      	lsls	r3, r3, #7
 8004dc8:	4413      	add	r3, r2
 8004dca:	3384      	adds	r3, #132	; 0x84
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	68fa      	ldr	r2, [r7, #12]
 8004dd0:	6812      	ldr	r2, [r2, #0]
 8004dd2:	4611      	mov	r1, r2
 8004dd4:	687a      	ldr	r2, [r7, #4]
 8004dd6:	01d2      	lsls	r2, r2, #7
 8004dd8:	440a      	add	r2, r1
 8004dda:	3284      	adds	r2, #132	; 0x84
 8004ddc:	f043 0301 	orr.w	r3, r3, #1
 8004de0:	6013      	str	r3, [r2, #0]
}
 8004de2:	bf00      	nop
 8004de4:	3724      	adds	r7, #36	; 0x24
 8004de6:	46bd      	mov	sp, r7
 8004de8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dec:	4770      	bx	lr
 8004dee:	bf00      	nop
 8004df0:	fffff8f8 	.word	0xfffff8f8
 8004df4:	fffff800 	.word	0xfffff800

08004df8 <HAL_PWR_EnableBkUpAccess>:
  * @note If the HSE divided by 2, 3, ..31 is used as the RTC clock, the 
  *         Backup Domain Access should be kept enabled.
  * @retval None
  */
void HAL_PWR_EnableBkUpAccess(void)
{
 8004df8:	b480      	push	{r7}
 8004dfa:	af00      	add	r7, sp, #0
  /* Enable access to RTC and backup registers */
  SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8004dfc:	4b05      	ldr	r3, [pc, #20]	; (8004e14 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	4a04      	ldr	r2, [pc, #16]	; (8004e14 <HAL_PWR_EnableBkUpAccess+0x1c>)
 8004e02:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e06:	6013      	str	r3, [r2, #0]
}
 8004e08:	bf00      	nop
 8004e0a:	46bd      	mov	sp, r7
 8004e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e10:	4770      	bx	lr
 8004e12:	bf00      	nop
 8004e14:	40007000 	.word	0x40007000

08004e18 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8004e18:	b580      	push	{r7, lr}
 8004e1a:	b082      	sub	sp, #8
 8004e1c:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8004e1e:	2300      	movs	r3, #0
 8004e20:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8004e22:	4b23      	ldr	r3, [pc, #140]	; (8004eb0 <HAL_PWREx_EnableOverDrive+0x98>)
 8004e24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e26:	4a22      	ldr	r2, [pc, #136]	; (8004eb0 <HAL_PWREx_EnableOverDrive+0x98>)
 8004e28:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004e2c:	6413      	str	r3, [r2, #64]	; 0x40
 8004e2e:	4b20      	ldr	r3, [pc, #128]	; (8004eb0 <HAL_PWREx_EnableOverDrive+0x98>)
 8004e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e32:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004e36:	603b      	str	r3, [r7, #0]
 8004e38:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8004e3a:	4b1e      	ldr	r3, [pc, #120]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	4a1d      	ldr	r2, [pc, #116]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e40:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004e44:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004e46:	f7fd f9d9 	bl	80021fc <HAL_GetTick>
 8004e4a:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8004e4c:	e009      	b.n	8004e62 <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004e4e:	f7fd f9d5 	bl	80021fc <HAL_GetTick>
 8004e52:	4602      	mov	r2, r0
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	1ad3      	subs	r3, r2, r3
 8004e58:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004e5c:	d901      	bls.n	8004e62 <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8004e5e:	2303      	movs	r3, #3
 8004e60:	e022      	b.n	8004ea8 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8004e62:	4b14      	ldr	r3, [pc, #80]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e64:	685b      	ldr	r3, [r3, #4]
 8004e66:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8004e6a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004e6e:	d1ee      	bne.n	8004e4e <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8004e70:	4b10      	ldr	r3, [pc, #64]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	4a0f      	ldr	r2, [pc, #60]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e76:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004e7a:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8004e7c:	f7fd f9be 	bl	80021fc <HAL_GetTick>
 8004e80:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004e82:	e009      	b.n	8004e98 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8004e84:	f7fd f9ba 	bl	80021fc <HAL_GetTick>
 8004e88:	4602      	mov	r2, r0
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	1ad3      	subs	r3, r2, r3
 8004e8e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004e92:	d901      	bls.n	8004e98 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8004e94:	2303      	movs	r3, #3
 8004e96:	e007      	b.n	8004ea8 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8004e98:	4b06      	ldr	r3, [pc, #24]	; (8004eb4 <HAL_PWREx_EnableOverDrive+0x9c>)
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004ea0:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8004ea4:	d1ee      	bne.n	8004e84 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8004ea6:	2300      	movs	r3, #0
}
 8004ea8:	4618      	mov	r0, r3
 8004eaa:	3708      	adds	r7, #8
 8004eac:	46bd      	mov	sp, r7
 8004eae:	bd80      	pop	{r7, pc}
 8004eb0:	40023800 	.word	0x40023800
 8004eb4:	40007000 	.word	0x40007000

08004eb8 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004eb8:	b580      	push	{r7, lr}
 8004eba:	b086      	sub	sp, #24
 8004ebc:	af00      	add	r7, sp, #0
 8004ebe:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8004ec0:	2300      	movs	r3, #0
 8004ec2:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	2b00      	cmp	r3, #0
 8004ec8:	d101      	bne.n	8004ece <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 8004eca:	2301      	movs	r3, #1
 8004ecc:	e291      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	f003 0301 	and.w	r3, r3, #1
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	f000 8087 	beq.w	8004fea <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8004edc:	4b96      	ldr	r3, [pc, #600]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004ede:	689b      	ldr	r3, [r3, #8]
 8004ee0:	f003 030c 	and.w	r3, r3, #12
 8004ee4:	2b04      	cmp	r3, #4
 8004ee6:	d00c      	beq.n	8004f02 <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8004ee8:	4b93      	ldr	r3, [pc, #588]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004eea:	689b      	ldr	r3, [r3, #8]
 8004eec:	f003 030c 	and.w	r3, r3, #12
 8004ef0:	2b08      	cmp	r3, #8
 8004ef2:	d112      	bne.n	8004f1a <HAL_RCC_OscConfig+0x62>
 8004ef4:	4b90      	ldr	r3, [pc, #576]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004ef6:	685b      	ldr	r3, [r3, #4]
 8004ef8:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8004efc:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8004f00:	d10b      	bne.n	8004f1a <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004f02:	4b8d      	ldr	r3, [pc, #564]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d06c      	beq.n	8004fe8 <HAL_RCC_OscConfig+0x130>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	685b      	ldr	r3, [r3, #4]
 8004f12:	2b00      	cmp	r3, #0
 8004f14:	d168      	bne.n	8004fe8 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8004f16:	2301      	movs	r3, #1
 8004f18:	e26b      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	685b      	ldr	r3, [r3, #4]
 8004f1e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8004f22:	d106      	bne.n	8004f32 <HAL_RCC_OscConfig+0x7a>
 8004f24:	4b84      	ldr	r3, [pc, #528]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	4a83      	ldr	r2, [pc, #524]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f2e:	6013      	str	r3, [r2, #0]
 8004f30:	e02e      	b.n	8004f90 <HAL_RCC_OscConfig+0xd8>
 8004f32:	687b      	ldr	r3, [r7, #4]
 8004f34:	685b      	ldr	r3, [r3, #4]
 8004f36:	2b00      	cmp	r3, #0
 8004f38:	d10c      	bne.n	8004f54 <HAL_RCC_OscConfig+0x9c>
 8004f3a:	4b7f      	ldr	r3, [pc, #508]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	4a7e      	ldr	r2, [pc, #504]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f40:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004f44:	6013      	str	r3, [r2, #0]
 8004f46:	4b7c      	ldr	r3, [pc, #496]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	4a7b      	ldr	r2, [pc, #492]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f4c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004f50:	6013      	str	r3, [r2, #0]
 8004f52:	e01d      	b.n	8004f90 <HAL_RCC_OscConfig+0xd8>
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	685b      	ldr	r3, [r3, #4]
 8004f58:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8004f5c:	d10c      	bne.n	8004f78 <HAL_RCC_OscConfig+0xc0>
 8004f5e:	4b76      	ldr	r3, [pc, #472]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	4a75      	ldr	r2, [pc, #468]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f64:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004f68:	6013      	str	r3, [r2, #0]
 8004f6a:	4b73      	ldr	r3, [pc, #460]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	4a72      	ldr	r2, [pc, #456]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f70:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8004f74:	6013      	str	r3, [r2, #0]
 8004f76:	e00b      	b.n	8004f90 <HAL_RCC_OscConfig+0xd8>
 8004f78:	4b6f      	ldr	r3, [pc, #444]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	4a6e      	ldr	r2, [pc, #440]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f7e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8004f82:	6013      	str	r3, [r2, #0]
 8004f84:	4b6c      	ldr	r3, [pc, #432]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	4a6b      	ldr	r2, [pc, #428]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004f8a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8004f8e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	685b      	ldr	r3, [r3, #4]
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d013      	beq.n	8004fc0 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004f98:	f7fd f930 	bl	80021fc <HAL_GetTick>
 8004f9c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004f9e:	e008      	b.n	8004fb2 <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004fa0:	f7fd f92c 	bl	80021fc <HAL_GetTick>
 8004fa4:	4602      	mov	r2, r0
 8004fa6:	693b      	ldr	r3, [r7, #16]
 8004fa8:	1ad3      	subs	r3, r2, r3
 8004faa:	2b64      	cmp	r3, #100	; 0x64
 8004fac:	d901      	bls.n	8004fb2 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8004fae:	2303      	movs	r3, #3
 8004fb0:	e21f      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004fb2:	4b61      	ldr	r3, [pc, #388]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004fba:	2b00      	cmp	r3, #0
 8004fbc:	d0f0      	beq.n	8004fa0 <HAL_RCC_OscConfig+0xe8>
 8004fbe:	e014      	b.n	8004fea <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8004fc0:	f7fd f91c 	bl	80021fc <HAL_GetTick>
 8004fc4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004fc6:	e008      	b.n	8004fda <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8004fc8:	f7fd f918 	bl	80021fc <HAL_GetTick>
 8004fcc:	4602      	mov	r2, r0
 8004fce:	693b      	ldr	r3, [r7, #16]
 8004fd0:	1ad3      	subs	r3, r2, r3
 8004fd2:	2b64      	cmp	r3, #100	; 0x64
 8004fd4:	d901      	bls.n	8004fda <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8004fd6:	2303      	movs	r3, #3
 8004fd8:	e20b      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004fda:	4b57      	ldr	r3, [pc, #348]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004fdc:	681b      	ldr	r3, [r3, #0]
 8004fde:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004fe2:	2b00      	cmp	r3, #0
 8004fe4:	d1f0      	bne.n	8004fc8 <HAL_RCC_OscConfig+0x110>
 8004fe6:	e000      	b.n	8004fea <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004fe8:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	f003 0302 	and.w	r3, r3, #2
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d069      	beq.n	80050ca <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8004ff6:	4b50      	ldr	r3, [pc, #320]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8004ff8:	689b      	ldr	r3, [r3, #8]
 8004ffa:	f003 030c 	and.w	r3, r3, #12
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d00b      	beq.n	800501a <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005002:	4b4d      	ldr	r3, [pc, #308]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005004:	689b      	ldr	r3, [r3, #8]
 8005006:	f003 030c 	and.w	r3, r3, #12
 800500a:	2b08      	cmp	r3, #8
 800500c:	d11c      	bne.n	8005048 <HAL_RCC_OscConfig+0x190>
 800500e:	4b4a      	ldr	r3, [pc, #296]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005010:	685b      	ldr	r3, [r3, #4]
 8005012:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005016:	2b00      	cmp	r3, #0
 8005018:	d116      	bne.n	8005048 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800501a:	4b47      	ldr	r3, [pc, #284]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	f003 0302 	and.w	r3, r3, #2
 8005022:	2b00      	cmp	r3, #0
 8005024:	d005      	beq.n	8005032 <HAL_RCC_OscConfig+0x17a>
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	68db      	ldr	r3, [r3, #12]
 800502a:	2b01      	cmp	r3, #1
 800502c:	d001      	beq.n	8005032 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 800502e:	2301      	movs	r3, #1
 8005030:	e1df      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005032:	4b41      	ldr	r3, [pc, #260]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	691b      	ldr	r3, [r3, #16]
 800503e:	00db      	lsls	r3, r3, #3
 8005040:	493d      	ldr	r1, [pc, #244]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005042:	4313      	orrs	r3, r2
 8005044:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005046:	e040      	b.n	80050ca <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	68db      	ldr	r3, [r3, #12]
 800504c:	2b00      	cmp	r3, #0
 800504e:	d023      	beq.n	8005098 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005050:	4b39      	ldr	r3, [pc, #228]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	4a38      	ldr	r2, [pc, #224]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005056:	f043 0301 	orr.w	r3, r3, #1
 800505a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800505c:	f7fd f8ce 	bl	80021fc <HAL_GetTick>
 8005060:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005062:	e008      	b.n	8005076 <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005064:	f7fd f8ca 	bl	80021fc <HAL_GetTick>
 8005068:	4602      	mov	r2, r0
 800506a:	693b      	ldr	r3, [r7, #16]
 800506c:	1ad3      	subs	r3, r2, r3
 800506e:	2b02      	cmp	r3, #2
 8005070:	d901      	bls.n	8005076 <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 8005072:	2303      	movs	r3, #3
 8005074:	e1bd      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005076:	4b30      	ldr	r3, [pc, #192]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	f003 0302 	and.w	r3, r3, #2
 800507e:	2b00      	cmp	r3, #0
 8005080:	d0f0      	beq.n	8005064 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005082:	4b2d      	ldr	r3, [pc, #180]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005084:	681b      	ldr	r3, [r3, #0]
 8005086:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	691b      	ldr	r3, [r3, #16]
 800508e:	00db      	lsls	r3, r3, #3
 8005090:	4929      	ldr	r1, [pc, #164]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005092:	4313      	orrs	r3, r2
 8005094:	600b      	str	r3, [r1, #0]
 8005096:	e018      	b.n	80050ca <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005098:	4b27      	ldr	r3, [pc, #156]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	4a26      	ldr	r2, [pc, #152]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 800509e:	f023 0301 	bic.w	r3, r3, #1
 80050a2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80050a4:	f7fd f8aa 	bl	80021fc <HAL_GetTick>
 80050a8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80050aa:	e008      	b.n	80050be <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80050ac:	f7fd f8a6 	bl	80021fc <HAL_GetTick>
 80050b0:	4602      	mov	r2, r0
 80050b2:	693b      	ldr	r3, [r7, #16]
 80050b4:	1ad3      	subs	r3, r2, r3
 80050b6:	2b02      	cmp	r3, #2
 80050b8:	d901      	bls.n	80050be <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 80050ba:	2303      	movs	r3, #3
 80050bc:	e199      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80050be:	4b1e      	ldr	r3, [pc, #120]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	f003 0302 	and.w	r3, r3, #2
 80050c6:	2b00      	cmp	r3, #0
 80050c8:	d1f0      	bne.n	80050ac <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	f003 0308 	and.w	r3, r3, #8
 80050d2:	2b00      	cmp	r3, #0
 80050d4:	d038      	beq.n	8005148 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	695b      	ldr	r3, [r3, #20]
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d019      	beq.n	8005112 <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80050de:	4b16      	ldr	r3, [pc, #88]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 80050e0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80050e2:	4a15      	ldr	r2, [pc, #84]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 80050e4:	f043 0301 	orr.w	r3, r3, #1
 80050e8:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80050ea:	f7fd f887 	bl	80021fc <HAL_GetTick>
 80050ee:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80050f0:	e008      	b.n	8005104 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80050f2:	f7fd f883 	bl	80021fc <HAL_GetTick>
 80050f6:	4602      	mov	r2, r0
 80050f8:	693b      	ldr	r3, [r7, #16]
 80050fa:	1ad3      	subs	r3, r2, r3
 80050fc:	2b02      	cmp	r3, #2
 80050fe:	d901      	bls.n	8005104 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8005100:	2303      	movs	r3, #3
 8005102:	e176      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005104:	4b0c      	ldr	r3, [pc, #48]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005106:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005108:	f003 0302 	and.w	r3, r3, #2
 800510c:	2b00      	cmp	r3, #0
 800510e:	d0f0      	beq.n	80050f2 <HAL_RCC_OscConfig+0x23a>
 8005110:	e01a      	b.n	8005148 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005112:	4b09      	ldr	r3, [pc, #36]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005114:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005116:	4a08      	ldr	r2, [pc, #32]	; (8005138 <HAL_RCC_OscConfig+0x280>)
 8005118:	f023 0301 	bic.w	r3, r3, #1
 800511c:	6753      	str	r3, [r2, #116]	; 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800511e:	f7fd f86d 	bl	80021fc <HAL_GetTick>
 8005122:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005124:	e00a      	b.n	800513c <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005126:	f7fd f869 	bl	80021fc <HAL_GetTick>
 800512a:	4602      	mov	r2, r0
 800512c:	693b      	ldr	r3, [r7, #16]
 800512e:	1ad3      	subs	r3, r2, r3
 8005130:	2b02      	cmp	r3, #2
 8005132:	d903      	bls.n	800513c <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8005134:	2303      	movs	r3, #3
 8005136:	e15c      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
 8005138:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800513c:	4b91      	ldr	r3, [pc, #580]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 800513e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005140:	f003 0302 	and.w	r3, r3, #2
 8005144:	2b00      	cmp	r3, #0
 8005146:	d1ee      	bne.n	8005126 <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	f003 0304 	and.w	r3, r3, #4
 8005150:	2b00      	cmp	r3, #0
 8005152:	f000 80a4 	beq.w	800529e <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005156:	4b8b      	ldr	r3, [pc, #556]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800515a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800515e:	2b00      	cmp	r3, #0
 8005160:	d10d      	bne.n	800517e <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8005162:	4b88      	ldr	r3, [pc, #544]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005164:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005166:	4a87      	ldr	r2, [pc, #540]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005168:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800516c:	6413      	str	r3, [r2, #64]	; 0x40
 800516e:	4b85      	ldr	r3, [pc, #532]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005170:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005172:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005176:	60bb      	str	r3, [r7, #8]
 8005178:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800517a:	2301      	movs	r3, #1
 800517c:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800517e:	4b82      	ldr	r3, [pc, #520]	; (8005388 <HAL_RCC_OscConfig+0x4d0>)
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005186:	2b00      	cmp	r3, #0
 8005188:	d118      	bne.n	80051bc <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 800518a:	4b7f      	ldr	r3, [pc, #508]	; (8005388 <HAL_RCC_OscConfig+0x4d0>)
 800518c:	681b      	ldr	r3, [r3, #0]
 800518e:	4a7e      	ldr	r2, [pc, #504]	; (8005388 <HAL_RCC_OscConfig+0x4d0>)
 8005190:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005194:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005196:	f7fd f831 	bl	80021fc <HAL_GetTick>
 800519a:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800519c:	e008      	b.n	80051b0 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800519e:	f7fd f82d 	bl	80021fc <HAL_GetTick>
 80051a2:	4602      	mov	r2, r0
 80051a4:	693b      	ldr	r3, [r7, #16]
 80051a6:	1ad3      	subs	r3, r2, r3
 80051a8:	2b64      	cmp	r3, #100	; 0x64
 80051aa:	d901      	bls.n	80051b0 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 80051ac:	2303      	movs	r3, #3
 80051ae:	e120      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 80051b0:	4b75      	ldr	r3, [pc, #468]	; (8005388 <HAL_RCC_OscConfig+0x4d0>)
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d0f0      	beq.n	800519e <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	689b      	ldr	r3, [r3, #8]
 80051c0:	2b01      	cmp	r3, #1
 80051c2:	d106      	bne.n	80051d2 <HAL_RCC_OscConfig+0x31a>
 80051c4:	4b6f      	ldr	r3, [pc, #444]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80051c8:	4a6e      	ldr	r2, [pc, #440]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051ca:	f043 0301 	orr.w	r3, r3, #1
 80051ce:	6713      	str	r3, [r2, #112]	; 0x70
 80051d0:	e02d      	b.n	800522e <HAL_RCC_OscConfig+0x376>
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	689b      	ldr	r3, [r3, #8]
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d10c      	bne.n	80051f4 <HAL_RCC_OscConfig+0x33c>
 80051da:	4b6a      	ldr	r3, [pc, #424]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80051de:	4a69      	ldr	r2, [pc, #420]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051e0:	f023 0301 	bic.w	r3, r3, #1
 80051e4:	6713      	str	r3, [r2, #112]	; 0x70
 80051e6:	4b67      	ldr	r3, [pc, #412]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80051ea:	4a66      	ldr	r2, [pc, #408]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051ec:	f023 0304 	bic.w	r3, r3, #4
 80051f0:	6713      	str	r3, [r2, #112]	; 0x70
 80051f2:	e01c      	b.n	800522e <HAL_RCC_OscConfig+0x376>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	689b      	ldr	r3, [r3, #8]
 80051f8:	2b05      	cmp	r3, #5
 80051fa:	d10c      	bne.n	8005216 <HAL_RCC_OscConfig+0x35e>
 80051fc:	4b61      	ldr	r3, [pc, #388]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80051fe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005200:	4a60      	ldr	r2, [pc, #384]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005202:	f043 0304 	orr.w	r3, r3, #4
 8005206:	6713      	str	r3, [r2, #112]	; 0x70
 8005208:	4b5e      	ldr	r3, [pc, #376]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 800520a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800520c:	4a5d      	ldr	r2, [pc, #372]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 800520e:	f043 0301 	orr.w	r3, r3, #1
 8005212:	6713      	str	r3, [r2, #112]	; 0x70
 8005214:	e00b      	b.n	800522e <HAL_RCC_OscConfig+0x376>
 8005216:	4b5b      	ldr	r3, [pc, #364]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005218:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800521a:	4a5a      	ldr	r2, [pc, #360]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 800521c:	f023 0301 	bic.w	r3, r3, #1
 8005220:	6713      	str	r3, [r2, #112]	; 0x70
 8005222:	4b58      	ldr	r3, [pc, #352]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005224:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005226:	4a57      	ldr	r2, [pc, #348]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005228:	f023 0304 	bic.w	r3, r3, #4
 800522c:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	689b      	ldr	r3, [r3, #8]
 8005232:	2b00      	cmp	r3, #0
 8005234:	d015      	beq.n	8005262 <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005236:	f7fc ffe1 	bl	80021fc <HAL_GetTick>
 800523a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800523c:	e00a      	b.n	8005254 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800523e:	f7fc ffdd 	bl	80021fc <HAL_GetTick>
 8005242:	4602      	mov	r2, r0
 8005244:	693b      	ldr	r3, [r7, #16]
 8005246:	1ad3      	subs	r3, r2, r3
 8005248:	f241 3288 	movw	r2, #5000	; 0x1388
 800524c:	4293      	cmp	r3, r2
 800524e:	d901      	bls.n	8005254 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 8005250:	2303      	movs	r3, #3
 8005252:	e0ce      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005254:	4b4b      	ldr	r3, [pc, #300]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005256:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005258:	f003 0302 	and.w	r3, r3, #2
 800525c:	2b00      	cmp	r3, #0
 800525e:	d0ee      	beq.n	800523e <HAL_RCC_OscConfig+0x386>
 8005260:	e014      	b.n	800528c <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005262:	f7fc ffcb 	bl	80021fc <HAL_GetTick>
 8005266:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005268:	e00a      	b.n	8005280 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800526a:	f7fc ffc7 	bl	80021fc <HAL_GetTick>
 800526e:	4602      	mov	r2, r0
 8005270:	693b      	ldr	r3, [r7, #16]
 8005272:	1ad3      	subs	r3, r2, r3
 8005274:	f241 3288 	movw	r2, #5000	; 0x1388
 8005278:	4293      	cmp	r3, r2
 800527a:	d901      	bls.n	8005280 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 800527c:	2303      	movs	r3, #3
 800527e:	e0b8      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005280:	4b40      	ldr	r3, [pc, #256]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005282:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005284:	f003 0302 	and.w	r3, r3, #2
 8005288:	2b00      	cmp	r3, #0
 800528a:	d1ee      	bne.n	800526a <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 800528c:	7dfb      	ldrb	r3, [r7, #23]
 800528e:	2b01      	cmp	r3, #1
 8005290:	d105      	bne.n	800529e <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005292:	4b3c      	ldr	r3, [pc, #240]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005294:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005296:	4a3b      	ldr	r2, [pc, #236]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005298:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800529c:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	699b      	ldr	r3, [r3, #24]
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	f000 80a4 	beq.w	80053f0 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80052a8:	4b36      	ldr	r3, [pc, #216]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80052aa:	689b      	ldr	r3, [r3, #8]
 80052ac:	f003 030c 	and.w	r3, r3, #12
 80052b0:	2b08      	cmp	r3, #8
 80052b2:	d06b      	beq.n	800538c <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	699b      	ldr	r3, [r3, #24]
 80052b8:	2b02      	cmp	r3, #2
 80052ba:	d149      	bne.n	8005350 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80052bc:	4b31      	ldr	r3, [pc, #196]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	4a30      	ldr	r2, [pc, #192]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80052c2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80052c6:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80052c8:	f7fc ff98 	bl	80021fc <HAL_GetTick>
 80052cc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80052ce:	e008      	b.n	80052e2 <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80052d0:	f7fc ff94 	bl	80021fc <HAL_GetTick>
 80052d4:	4602      	mov	r2, r0
 80052d6:	693b      	ldr	r3, [r7, #16]
 80052d8:	1ad3      	subs	r3, r2, r3
 80052da:	2b02      	cmp	r3, #2
 80052dc:	d901      	bls.n	80052e2 <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 80052de:	2303      	movs	r3, #3
 80052e0:	e087      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80052e2:	4b28      	ldr	r3, [pc, #160]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80052ea:	2b00      	cmp	r3, #0
 80052ec:	d1f0      	bne.n	80052d0 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	69da      	ldr	r2, [r3, #28]
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	6a1b      	ldr	r3, [r3, #32]
 80052f6:	431a      	orrs	r2, r3
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80052fc:	019b      	lsls	r3, r3, #6
 80052fe:	431a      	orrs	r2, r3
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005304:	085b      	lsrs	r3, r3, #1
 8005306:	3b01      	subs	r3, #1
 8005308:	041b      	lsls	r3, r3, #16
 800530a:	431a      	orrs	r2, r3
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005310:	061b      	lsls	r3, r3, #24
 8005312:	4313      	orrs	r3, r2
 8005314:	4a1b      	ldr	r2, [pc, #108]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005316:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800531a:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800531c:	4b19      	ldr	r3, [pc, #100]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	4a18      	ldr	r2, [pc, #96]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005322:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8005326:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005328:	f7fc ff68 	bl	80021fc <HAL_GetTick>
 800532c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800532e:	e008      	b.n	8005342 <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005330:	f7fc ff64 	bl	80021fc <HAL_GetTick>
 8005334:	4602      	mov	r2, r0
 8005336:	693b      	ldr	r3, [r7, #16]
 8005338:	1ad3      	subs	r3, r2, r3
 800533a:	2b02      	cmp	r3, #2
 800533c:	d901      	bls.n	8005342 <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 800533e:	2303      	movs	r3, #3
 8005340:	e057      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005342:	4b10      	ldr	r3, [pc, #64]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800534a:	2b00      	cmp	r3, #0
 800534c:	d0f0      	beq.n	8005330 <HAL_RCC_OscConfig+0x478>
 800534e:	e04f      	b.n	80053f0 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005350:	4b0c      	ldr	r3, [pc, #48]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005352:	681b      	ldr	r3, [r3, #0]
 8005354:	4a0b      	ldr	r2, [pc, #44]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005356:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800535a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800535c:	f7fc ff4e 	bl	80021fc <HAL_GetTick>
 8005360:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005362:	e008      	b.n	8005376 <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005364:	f7fc ff4a 	bl	80021fc <HAL_GetTick>
 8005368:	4602      	mov	r2, r0
 800536a:	693b      	ldr	r3, [r7, #16]
 800536c:	1ad3      	subs	r3, r2, r3
 800536e:	2b02      	cmp	r3, #2
 8005370:	d901      	bls.n	8005376 <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 8005372:	2303      	movs	r3, #3
 8005374:	e03d      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005376:	4b03      	ldr	r3, [pc, #12]	; (8005384 <HAL_RCC_OscConfig+0x4cc>)
 8005378:	681b      	ldr	r3, [r3, #0]
 800537a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800537e:	2b00      	cmp	r3, #0
 8005380:	d1f0      	bne.n	8005364 <HAL_RCC_OscConfig+0x4ac>
 8005382:	e035      	b.n	80053f0 <HAL_RCC_OscConfig+0x538>
 8005384:	40023800 	.word	0x40023800
 8005388:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 800538c:	4b1b      	ldr	r3, [pc, #108]	; (80053fc <HAL_RCC_OscConfig+0x544>)
 800538e:	685b      	ldr	r3, [r3, #4]
 8005390:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005392:	687b      	ldr	r3, [r7, #4]
 8005394:	699b      	ldr	r3, [r3, #24]
 8005396:	2b01      	cmp	r3, #1
 8005398:	d028      	beq.n	80053ec <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80053a4:	429a      	cmp	r2, r3
 80053a6:	d121      	bne.n	80053ec <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80053b2:	429a      	cmp	r2, r3
 80053b4:	d11a      	bne.n	80053ec <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80053b6:	68fa      	ldr	r2, [r7, #12]
 80053b8:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80053bc:	4013      	ands	r3, r2
 80053be:	687a      	ldr	r2, [r7, #4]
 80053c0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80053c2:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80053c4:	4293      	cmp	r3, r2
 80053c6:	d111      	bne.n	80053ec <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80053c8:	68fb      	ldr	r3, [r7, #12]
 80053ca:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80053d2:	085b      	lsrs	r3, r3, #1
 80053d4:	3b01      	subs	r3, #1
 80053d6:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80053d8:	429a      	cmp	r2, r3
 80053da:	d107      	bne.n	80053ec <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053e6:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80053e8:	429a      	cmp	r2, r3
 80053ea:	d001      	beq.n	80053f0 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 80053ec:	2301      	movs	r3, #1
 80053ee:	e000      	b.n	80053f2 <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 80053f0:	2300      	movs	r3, #0
}
 80053f2:	4618      	mov	r0, r3
 80053f4:	3718      	adds	r7, #24
 80053f6:	46bd      	mov	sp, r7
 80053f8:	bd80      	pop	{r7, pc}
 80053fa:	bf00      	nop
 80053fc:	40023800 	.word	0x40023800

08005400 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005400:	b580      	push	{r7, lr}
 8005402:	b084      	sub	sp, #16
 8005404:	af00      	add	r7, sp, #0
 8005406:	6078      	str	r0, [r7, #4]
 8005408:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 800540a:	2300      	movs	r3, #0
 800540c:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	2b00      	cmp	r3, #0
 8005412:	d101      	bne.n	8005418 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 8005414:	2301      	movs	r3, #1
 8005416:	e0d0      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005418:	4b6a      	ldr	r3, [pc, #424]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	f003 030f 	and.w	r3, r3, #15
 8005420:	683a      	ldr	r2, [r7, #0]
 8005422:	429a      	cmp	r2, r3
 8005424:	d910      	bls.n	8005448 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005426:	4b67      	ldr	r3, [pc, #412]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005428:	681b      	ldr	r3, [r3, #0]
 800542a:	f023 020f 	bic.w	r2, r3, #15
 800542e:	4965      	ldr	r1, [pc, #404]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005430:	683b      	ldr	r3, [r7, #0]
 8005432:	4313      	orrs	r3, r2
 8005434:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005436:	4b63      	ldr	r3, [pc, #396]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	f003 030f 	and.w	r3, r3, #15
 800543e:	683a      	ldr	r2, [r7, #0]
 8005440:	429a      	cmp	r2, r3
 8005442:	d001      	beq.n	8005448 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 8005444:	2301      	movs	r3, #1
 8005446:	e0b8      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	f003 0302 	and.w	r3, r3, #2
 8005450:	2b00      	cmp	r3, #0
 8005452:	d020      	beq.n	8005496 <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	f003 0304 	and.w	r3, r3, #4
 800545c:	2b00      	cmp	r3, #0
 800545e:	d005      	beq.n	800546c <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005460:	4b59      	ldr	r3, [pc, #356]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005462:	689b      	ldr	r3, [r3, #8]
 8005464:	4a58      	ldr	r2, [pc, #352]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005466:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800546a:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	f003 0308 	and.w	r3, r3, #8
 8005474:	2b00      	cmp	r3, #0
 8005476:	d005      	beq.n	8005484 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005478:	4b53      	ldr	r3, [pc, #332]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 800547a:	689b      	ldr	r3, [r3, #8]
 800547c:	4a52      	ldr	r2, [pc, #328]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 800547e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8005482:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005484:	4b50      	ldr	r3, [pc, #320]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005486:	689b      	ldr	r3, [r3, #8]
 8005488:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	689b      	ldr	r3, [r3, #8]
 8005490:	494d      	ldr	r1, [pc, #308]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005492:	4313      	orrs	r3, r2
 8005494:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f003 0301 	and.w	r3, r3, #1
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d040      	beq.n	8005524 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	685b      	ldr	r3, [r3, #4]
 80054a6:	2b01      	cmp	r3, #1
 80054a8:	d107      	bne.n	80054ba <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80054aa:	4b47      	ldr	r3, [pc, #284]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	d115      	bne.n	80054e2 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80054b6:	2301      	movs	r3, #1
 80054b8:	e07f      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	685b      	ldr	r3, [r3, #4]
 80054be:	2b02      	cmp	r3, #2
 80054c0:	d107      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80054c2:	4b41      	ldr	r3, [pc, #260]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80054ca:	2b00      	cmp	r3, #0
 80054cc:	d109      	bne.n	80054e2 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80054ce:	2301      	movs	r3, #1
 80054d0:	e073      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054d2:	4b3d      	ldr	r3, [pc, #244]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	f003 0302 	and.w	r3, r3, #2
 80054da:	2b00      	cmp	r3, #0
 80054dc:	d101      	bne.n	80054e2 <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80054de:	2301      	movs	r3, #1
 80054e0:	e06b      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80054e2:	4b39      	ldr	r3, [pc, #228]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 80054e4:	689b      	ldr	r3, [r3, #8]
 80054e6:	f023 0203 	bic.w	r2, r3, #3
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	685b      	ldr	r3, [r3, #4]
 80054ee:	4936      	ldr	r1, [pc, #216]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 80054f0:	4313      	orrs	r3, r2
 80054f2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80054f4:	f7fc fe82 	bl	80021fc <HAL_GetTick>
 80054f8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80054fa:	e00a      	b.n	8005512 <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80054fc:	f7fc fe7e 	bl	80021fc <HAL_GetTick>
 8005500:	4602      	mov	r2, r0
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	1ad3      	subs	r3, r2, r3
 8005506:	f241 3288 	movw	r2, #5000	; 0x1388
 800550a:	4293      	cmp	r3, r2
 800550c:	d901      	bls.n	8005512 <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 800550e:	2303      	movs	r3, #3
 8005510:	e053      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005512:	4b2d      	ldr	r3, [pc, #180]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005514:	689b      	ldr	r3, [r3, #8]
 8005516:	f003 020c 	and.w	r2, r3, #12
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	685b      	ldr	r3, [r3, #4]
 800551e:	009b      	lsls	r3, r3, #2
 8005520:	429a      	cmp	r2, r3
 8005522:	d1eb      	bne.n	80054fc <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005524:	4b27      	ldr	r3, [pc, #156]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005526:	681b      	ldr	r3, [r3, #0]
 8005528:	f003 030f 	and.w	r3, r3, #15
 800552c:	683a      	ldr	r2, [r7, #0]
 800552e:	429a      	cmp	r2, r3
 8005530:	d210      	bcs.n	8005554 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005532:	4b24      	ldr	r3, [pc, #144]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005534:	681b      	ldr	r3, [r3, #0]
 8005536:	f023 020f 	bic.w	r2, r3, #15
 800553a:	4922      	ldr	r1, [pc, #136]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 800553c:	683b      	ldr	r3, [r7, #0]
 800553e:	4313      	orrs	r3, r2
 8005540:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005542:	4b20      	ldr	r3, [pc, #128]	; (80055c4 <HAL_RCC_ClockConfig+0x1c4>)
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	f003 030f 	and.w	r3, r3, #15
 800554a:	683a      	ldr	r2, [r7, #0]
 800554c:	429a      	cmp	r2, r3
 800554e:	d001      	beq.n	8005554 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 8005550:	2301      	movs	r3, #1
 8005552:	e032      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	f003 0304 	and.w	r3, r3, #4
 800555c:	2b00      	cmp	r3, #0
 800555e:	d008      	beq.n	8005572 <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005560:	4b19      	ldr	r3, [pc, #100]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005562:	689b      	ldr	r3, [r3, #8]
 8005564:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	68db      	ldr	r3, [r3, #12]
 800556c:	4916      	ldr	r1, [pc, #88]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 800556e:	4313      	orrs	r3, r2
 8005570:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	f003 0308 	and.w	r3, r3, #8
 800557a:	2b00      	cmp	r3, #0
 800557c:	d009      	beq.n	8005592 <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800557e:	4b12      	ldr	r3, [pc, #72]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 8005580:	689b      	ldr	r3, [r3, #8]
 8005582:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	691b      	ldr	r3, [r3, #16]
 800558a:	00db      	lsls	r3, r3, #3
 800558c:	490e      	ldr	r1, [pc, #56]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 800558e:	4313      	orrs	r3, r2
 8005590:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005592:	f000 f821 	bl	80055d8 <HAL_RCC_GetSysClockFreq>
 8005596:	4602      	mov	r2, r0
 8005598:	4b0b      	ldr	r3, [pc, #44]	; (80055c8 <HAL_RCC_ClockConfig+0x1c8>)
 800559a:	689b      	ldr	r3, [r3, #8]
 800559c:	091b      	lsrs	r3, r3, #4
 800559e:	f003 030f 	and.w	r3, r3, #15
 80055a2:	490a      	ldr	r1, [pc, #40]	; (80055cc <HAL_RCC_ClockConfig+0x1cc>)
 80055a4:	5ccb      	ldrb	r3, [r1, r3]
 80055a6:	fa22 f303 	lsr.w	r3, r2, r3
 80055aa:	4a09      	ldr	r2, [pc, #36]	; (80055d0 <HAL_RCC_ClockConfig+0x1d0>)
 80055ac:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 80055ae:	4b09      	ldr	r3, [pc, #36]	; (80055d4 <HAL_RCC_ClockConfig+0x1d4>)
 80055b0:	681b      	ldr	r3, [r3, #0]
 80055b2:	4618      	mov	r0, r3
 80055b4:	f7fc fc14 	bl	8001de0 <HAL_InitTick>

  return HAL_OK;
 80055b8:	2300      	movs	r3, #0
}
 80055ba:	4618      	mov	r0, r3
 80055bc:	3710      	adds	r7, #16
 80055be:	46bd      	mov	sp, r7
 80055c0:	bd80      	pop	{r7, pc}
 80055c2:	bf00      	nop
 80055c4:	40023c00 	.word	0x40023c00
 80055c8:	40023800 	.word	0x40023800
 80055cc:	0802ed34 	.word	0x0802ed34
 80055d0:	20000004 	.word	0x20000004
 80055d4:	20000008 	.word	0x20000008

080055d8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80055d8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80055dc:	b090      	sub	sp, #64	; 0x40
 80055de:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 80055e0:	2300      	movs	r3, #0
 80055e2:	637b      	str	r3, [r7, #52]	; 0x34
 80055e4:	2300      	movs	r3, #0
 80055e6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80055e8:	2300      	movs	r3, #0
 80055ea:	633b      	str	r3, [r7, #48]	; 0x30
  uint32_t sysclockfreq = 0;
 80055ec:	2300      	movs	r3, #0
 80055ee:	63bb      	str	r3, [r7, #56]	; 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80055f0:	4b59      	ldr	r3, [pc, #356]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 80055f2:	689b      	ldr	r3, [r3, #8]
 80055f4:	f003 030c 	and.w	r3, r3, #12
 80055f8:	2b08      	cmp	r3, #8
 80055fa:	d00d      	beq.n	8005618 <HAL_RCC_GetSysClockFreq+0x40>
 80055fc:	2b08      	cmp	r3, #8
 80055fe:	f200 80a1 	bhi.w	8005744 <HAL_RCC_GetSysClockFreq+0x16c>
 8005602:	2b00      	cmp	r3, #0
 8005604:	d002      	beq.n	800560c <HAL_RCC_GetSysClockFreq+0x34>
 8005606:	2b04      	cmp	r3, #4
 8005608:	d003      	beq.n	8005612 <HAL_RCC_GetSysClockFreq+0x3a>
 800560a:	e09b      	b.n	8005744 <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800560c:	4b53      	ldr	r3, [pc, #332]	; (800575c <HAL_RCC_GetSysClockFreq+0x184>)
 800560e:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005610:	e09b      	b.n	800574a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005612:	4b53      	ldr	r3, [pc, #332]	; (8005760 <HAL_RCC_GetSysClockFreq+0x188>)
 8005614:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005616:	e098      	b.n	800574a <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005618:	4b4f      	ldr	r3, [pc, #316]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 800561a:	685b      	ldr	r3, [r3, #4]
 800561c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005620:	637b      	str	r3, [r7, #52]	; 0x34
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 8005622:	4b4d      	ldr	r3, [pc, #308]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 8005624:	685b      	ldr	r3, [r3, #4]
 8005626:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800562a:	2b00      	cmp	r3, #0
 800562c:	d028      	beq.n	8005680 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800562e:	4b4a      	ldr	r3, [pc, #296]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 8005630:	685b      	ldr	r3, [r3, #4]
 8005632:	099b      	lsrs	r3, r3, #6
 8005634:	2200      	movs	r2, #0
 8005636:	623b      	str	r3, [r7, #32]
 8005638:	627a      	str	r2, [r7, #36]	; 0x24
 800563a:	6a3b      	ldr	r3, [r7, #32]
 800563c:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8005640:	2100      	movs	r1, #0
 8005642:	4b47      	ldr	r3, [pc, #284]	; (8005760 <HAL_RCC_GetSysClockFreq+0x188>)
 8005644:	fb03 f201 	mul.w	r2, r3, r1
 8005648:	2300      	movs	r3, #0
 800564a:	fb00 f303 	mul.w	r3, r0, r3
 800564e:	4413      	add	r3, r2
 8005650:	4a43      	ldr	r2, [pc, #268]	; (8005760 <HAL_RCC_GetSysClockFreq+0x188>)
 8005652:	fba0 1202 	umull	r1, r2, r0, r2
 8005656:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005658:	460a      	mov	r2, r1
 800565a:	62ba      	str	r2, [r7, #40]	; 0x28
 800565c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800565e:	4413      	add	r3, r2
 8005660:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005662:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005664:	2200      	movs	r2, #0
 8005666:	61bb      	str	r3, [r7, #24]
 8005668:	61fa      	str	r2, [r7, #28]
 800566a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800566e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8005672:	f7fa fe25 	bl	80002c0 <__aeabi_uldivmod>
 8005676:	4602      	mov	r2, r0
 8005678:	460b      	mov	r3, r1
 800567a:	4613      	mov	r3, r2
 800567c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800567e:	e053      	b.n	8005728 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005680:	4b35      	ldr	r3, [pc, #212]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 8005682:	685b      	ldr	r3, [r3, #4]
 8005684:	099b      	lsrs	r3, r3, #6
 8005686:	2200      	movs	r2, #0
 8005688:	613b      	str	r3, [r7, #16]
 800568a:	617a      	str	r2, [r7, #20]
 800568c:	693b      	ldr	r3, [r7, #16]
 800568e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8005692:	f04f 0b00 	mov.w	fp, #0
 8005696:	4652      	mov	r2, sl
 8005698:	465b      	mov	r3, fp
 800569a:	f04f 0000 	mov.w	r0, #0
 800569e:	f04f 0100 	mov.w	r1, #0
 80056a2:	0159      	lsls	r1, r3, #5
 80056a4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80056a8:	0150      	lsls	r0, r2, #5
 80056aa:	4602      	mov	r2, r0
 80056ac:	460b      	mov	r3, r1
 80056ae:	ebb2 080a 	subs.w	r8, r2, sl
 80056b2:	eb63 090b 	sbc.w	r9, r3, fp
 80056b6:	f04f 0200 	mov.w	r2, #0
 80056ba:	f04f 0300 	mov.w	r3, #0
 80056be:	ea4f 1389 	mov.w	r3, r9, lsl #6
 80056c2:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80056c6:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80056ca:	ebb2 0408 	subs.w	r4, r2, r8
 80056ce:	eb63 0509 	sbc.w	r5, r3, r9
 80056d2:	f04f 0200 	mov.w	r2, #0
 80056d6:	f04f 0300 	mov.w	r3, #0
 80056da:	00eb      	lsls	r3, r5, #3
 80056dc:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80056e0:	00e2      	lsls	r2, r4, #3
 80056e2:	4614      	mov	r4, r2
 80056e4:	461d      	mov	r5, r3
 80056e6:	eb14 030a 	adds.w	r3, r4, sl
 80056ea:	603b      	str	r3, [r7, #0]
 80056ec:	eb45 030b 	adc.w	r3, r5, fp
 80056f0:	607b      	str	r3, [r7, #4]
 80056f2:	f04f 0200 	mov.w	r2, #0
 80056f6:	f04f 0300 	mov.w	r3, #0
 80056fa:	e9d7 4500 	ldrd	r4, r5, [r7]
 80056fe:	4629      	mov	r1, r5
 8005700:	028b      	lsls	r3, r1, #10
 8005702:	4621      	mov	r1, r4
 8005704:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005708:	4621      	mov	r1, r4
 800570a:	028a      	lsls	r2, r1, #10
 800570c:	4610      	mov	r0, r2
 800570e:	4619      	mov	r1, r3
 8005710:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005712:	2200      	movs	r2, #0
 8005714:	60bb      	str	r3, [r7, #8]
 8005716:	60fa      	str	r2, [r7, #12]
 8005718:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800571c:	f7fa fdd0 	bl	80002c0 <__aeabi_uldivmod>
 8005720:	4602      	mov	r2, r0
 8005722:	460b      	mov	r3, r1
 8005724:	4613      	mov	r3, r2
 8005726:	63fb      	str	r3, [r7, #60]	; 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8005728:	4b0b      	ldr	r3, [pc, #44]	; (8005758 <HAL_RCC_GetSysClockFreq+0x180>)
 800572a:	685b      	ldr	r3, [r3, #4]
 800572c:	0c1b      	lsrs	r3, r3, #16
 800572e:	f003 0303 	and.w	r3, r3, #3
 8005732:	3301      	adds	r3, #1
 8005734:	005b      	lsls	r3, r3, #1
 8005736:	633b      	str	r3, [r7, #48]	; 0x30

      sysclockfreq = pllvco / pllp;
 8005738:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800573a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800573c:	fbb2 f3f3 	udiv	r3, r2, r3
 8005740:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005742:	e002      	b.n	800574a <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005744:	4b05      	ldr	r3, [pc, #20]	; (800575c <HAL_RCC_GetSysClockFreq+0x184>)
 8005746:	63bb      	str	r3, [r7, #56]	; 0x38
      break;
 8005748:	bf00      	nop
    }
  }
  return sysclockfreq;
 800574a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
}
 800574c:	4618      	mov	r0, r3
 800574e:	3740      	adds	r7, #64	; 0x40
 8005750:	46bd      	mov	sp, r7
 8005752:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005756:	bf00      	nop
 8005758:	40023800 	.word	0x40023800
 800575c:	00f42400 	.word	0x00f42400
 8005760:	017d7840 	.word	0x017d7840

08005764 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005764:	b480      	push	{r7}
 8005766:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005768:	4b03      	ldr	r3, [pc, #12]	; (8005778 <HAL_RCC_GetHCLKFreq+0x14>)
 800576a:	681b      	ldr	r3, [r3, #0]
}
 800576c:	4618      	mov	r0, r3
 800576e:	46bd      	mov	sp, r7
 8005770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005774:	4770      	bx	lr
 8005776:	bf00      	nop
 8005778:	20000004 	.word	0x20000004

0800577c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800577c:	b580      	push	{r7, lr}
 800577e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005780:	f7ff fff0 	bl	8005764 <HAL_RCC_GetHCLKFreq>
 8005784:	4602      	mov	r2, r0
 8005786:	4b05      	ldr	r3, [pc, #20]	; (800579c <HAL_RCC_GetPCLK1Freq+0x20>)
 8005788:	689b      	ldr	r3, [r3, #8]
 800578a:	0a9b      	lsrs	r3, r3, #10
 800578c:	f003 0307 	and.w	r3, r3, #7
 8005790:	4903      	ldr	r1, [pc, #12]	; (80057a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005792:	5ccb      	ldrb	r3, [r1, r3]
 8005794:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005798:	4618      	mov	r0, r3
 800579a:	bd80      	pop	{r7, pc}
 800579c:	40023800 	.word	0x40023800
 80057a0:	0802ed44 	.word	0x0802ed44

080057a4 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80057a4:	b580      	push	{r7, lr}
 80057a6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 80057a8:	f7ff ffdc 	bl	8005764 <HAL_RCC_GetHCLKFreq>
 80057ac:	4602      	mov	r2, r0
 80057ae:	4b05      	ldr	r3, [pc, #20]	; (80057c4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80057b0:	689b      	ldr	r3, [r3, #8]
 80057b2:	0b5b      	lsrs	r3, r3, #13
 80057b4:	f003 0307 	and.w	r3, r3, #7
 80057b8:	4903      	ldr	r1, [pc, #12]	; (80057c8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80057ba:	5ccb      	ldrb	r3, [r1, r3]
 80057bc:	fa22 f303 	lsr.w	r3, r2, r3
}
 80057c0:	4618      	mov	r0, r3
 80057c2:	bd80      	pop	{r7, pc}
 80057c4:	40023800 	.word	0x40023800
 80057c8:	0802ed44 	.word	0x0802ed44

080057cc <HAL_RCC_GetClockConfig>:
  * will be configured.
  * @param  pFLatency Pointer on the Flash Latency.
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
 80057cc:	b480      	push	{r7}
 80057ce:	b083      	sub	sp, #12
 80057d0:	af00      	add	r7, sp, #0
 80057d2:	6078      	str	r0, [r7, #4]
 80057d4:	6039      	str	r1, [r7, #0]
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80057d6:	687b      	ldr	r3, [r7, #4]
 80057d8:	220f      	movs	r2, #15
 80057da:	601a      	str	r2, [r3, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80057dc:	4b12      	ldr	r3, [pc, #72]	; (8005828 <HAL_RCC_GetClockConfig+0x5c>)
 80057de:	689b      	ldr	r3, [r3, #8]
 80057e0:	f003 0203 	and.w	r2, r3, #3
 80057e4:	687b      	ldr	r3, [r7, #4]
 80057e6:	605a      	str	r2, [r3, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80057e8:	4b0f      	ldr	r3, [pc, #60]	; (8005828 <HAL_RCC_GetClockConfig+0x5c>)
 80057ea:	689b      	ldr	r3, [r3, #8]
 80057ec:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80057f0:	687b      	ldr	r3, [r7, #4]
 80057f2:	609a      	str	r2, [r3, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80057f4:	4b0c      	ldr	r3, [pc, #48]	; (8005828 <HAL_RCC_GetClockConfig+0x5c>)
 80057f6:	689b      	ldr	r3, [r3, #8]
 80057f8:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	60da      	str	r2, [r3, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 8005800:	4b09      	ldr	r3, [pc, #36]	; (8005828 <HAL_RCC_GetClockConfig+0x5c>)
 8005802:	689b      	ldr	r3, [r3, #8]
 8005804:	08db      	lsrs	r3, r3, #3
 8005806:	f403 52e0 	and.w	r2, r3, #7168	; 0x1c00
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	611a      	str	r2, [r3, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800580e:	4b07      	ldr	r3, [pc, #28]	; (800582c <HAL_RCC_GetClockConfig+0x60>)
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	f003 020f 	and.w	r2, r3, #15
 8005816:	683b      	ldr	r3, [r7, #0]
 8005818:	601a      	str	r2, [r3, #0]
}
 800581a:	bf00      	nop
 800581c:	370c      	adds	r7, #12
 800581e:	46bd      	mov	sp, r7
 8005820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005824:	4770      	bx	lr
 8005826:	bf00      	nop
 8005828:	40023800 	.word	0x40023800
 800582c:	40023c00 	.word	0x40023c00

08005830 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005830:	b580      	push	{r7, lr}
 8005832:	b088      	sub	sp, #32
 8005834:	af00      	add	r7, sp, #0
 8005836:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 8005838:	2300      	movs	r3, #0
 800583a:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 800583c:	2300      	movs	r3, #0
 800583e:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 8005840:	2300      	movs	r3, #0
 8005842:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 8005844:	2300      	movs	r3, #0
 8005846:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 8005848:	2300      	movs	r3, #0
 800584a:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	f003 0301 	and.w	r3, r3, #1
 8005854:	2b00      	cmp	r3, #0
 8005856:	d012      	beq.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 8005858:	4b69      	ldr	r3, [pc, #420]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800585a:	689b      	ldr	r3, [r3, #8]
 800585c:	4a68      	ldr	r2, [pc, #416]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800585e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8005862:	6093      	str	r3, [r2, #8]
 8005864:	4b66      	ldr	r3, [pc, #408]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005866:	689a      	ldr	r2, [r3, #8]
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800586c:	4964      	ldr	r1, [pc, #400]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800586e:	4313      	orrs	r3, r2
 8005870:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005876:	2b00      	cmp	r3, #0
 8005878:	d101      	bne.n	800587e <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 800587a:	2301      	movs	r3, #1
 800587c:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005886:	2b00      	cmp	r3, #0
 8005888:	d017      	beq.n	80058ba <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800588a:	4b5d      	ldr	r3, [pc, #372]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800588c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005890:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005898:	4959      	ldr	r1, [pc, #356]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800589a:	4313      	orrs	r3, r2
 800589c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058a4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80058a8:	d101      	bne.n	80058ae <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 80058aa:	2301      	movs	r3, #1
 80058ac:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80058b2:	2b00      	cmp	r3, #0
 80058b4:	d101      	bne.n	80058ba <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 80058b6:	2301      	movs	r3, #1
 80058b8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	681b      	ldr	r3, [r3, #0]
 80058be:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80058c2:	2b00      	cmp	r3, #0
 80058c4:	d017      	beq.n	80058f6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80058c6:	4b4e      	ldr	r3, [pc, #312]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80058c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80058cc:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058d4:	494a      	ldr	r1, [pc, #296]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80058d6:	4313      	orrs	r3, r2
 80058d8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80058dc:	687b      	ldr	r3, [r7, #4]
 80058de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058e0:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80058e4:	d101      	bne.n	80058ea <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 80058e6:	2301      	movs	r3, #1
 80058e8:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80058ee:	2b00      	cmp	r3, #0
 80058f0:	d101      	bne.n	80058f6 <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 80058f2:	2301      	movs	r3, #1
 80058f4:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80058f6:	687b      	ldr	r3, [r7, #4]
 80058f8:	681b      	ldr	r3, [r3, #0]
 80058fa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d001      	beq.n	8005906 <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8005902:	2301      	movs	r3, #1
 8005904:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	f003 0320 	and.w	r3, r3, #32
 800590e:	2b00      	cmp	r3, #0
 8005910:	f000 808b 	beq.w	8005a2a <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8005914:	4b3a      	ldr	r3, [pc, #232]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005916:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005918:	4a39      	ldr	r2, [pc, #228]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800591a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800591e:	6413      	str	r3, [r2, #64]	; 0x40
 8005920:	4b37      	ldr	r3, [pc, #220]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005922:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005924:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005928:	60bb      	str	r3, [r7, #8]
 800592a:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 800592c:	4b35      	ldr	r3, [pc, #212]	; (8005a04 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	4a34      	ldr	r2, [pc, #208]	; (8005a04 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005932:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005936:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005938:	f7fc fc60 	bl	80021fc <HAL_GetTick>
 800593c:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 800593e:	e008      	b.n	8005952 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005940:	f7fc fc5c 	bl	80021fc <HAL_GetTick>
 8005944:	4602      	mov	r2, r0
 8005946:	697b      	ldr	r3, [r7, #20]
 8005948:	1ad3      	subs	r3, r2, r3
 800594a:	2b64      	cmp	r3, #100	; 0x64
 800594c:	d901      	bls.n	8005952 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 800594e:	2303      	movs	r3, #3
 8005950:	e357      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8005952:	4b2c      	ldr	r3, [pc, #176]	; (8005a04 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800595a:	2b00      	cmp	r3, #0
 800595c:	d0f0      	beq.n	8005940 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800595e:	4b28      	ldr	r3, [pc, #160]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005960:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005962:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005966:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005968:	693b      	ldr	r3, [r7, #16]
 800596a:	2b00      	cmp	r3, #0
 800596c:	d035      	beq.n	80059da <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005972:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8005976:	693a      	ldr	r2, [r7, #16]
 8005978:	429a      	cmp	r2, r3
 800597a:	d02e      	beq.n	80059da <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800597c:	4b20      	ldr	r3, [pc, #128]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800597e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005980:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8005984:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8005986:	4b1e      	ldr	r3, [pc, #120]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005988:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800598a:	4a1d      	ldr	r2, [pc, #116]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800598c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005990:	6713      	str	r3, [r2, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005992:	4b1b      	ldr	r3, [pc, #108]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005994:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005996:	4a1a      	ldr	r2, [pc, #104]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8005998:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800599c:	6713      	str	r3, [r2, #112]	; 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 800599e:	4a18      	ldr	r2, [pc, #96]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059a0:	693b      	ldr	r3, [r7, #16]
 80059a2:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80059a4:	4b16      	ldr	r3, [pc, #88]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059a6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059a8:	f003 0301 	and.w	r3, r3, #1
 80059ac:	2b01      	cmp	r3, #1
 80059ae:	d114      	bne.n	80059da <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80059b0:	f7fc fc24 	bl	80021fc <HAL_GetTick>
 80059b4:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80059b6:	e00a      	b.n	80059ce <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80059b8:	f7fc fc20 	bl	80021fc <HAL_GetTick>
 80059bc:	4602      	mov	r2, r0
 80059be:	697b      	ldr	r3, [r7, #20]
 80059c0:	1ad3      	subs	r3, r2, r3
 80059c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80059c6:	4293      	cmp	r3, r2
 80059c8:	d901      	bls.n	80059ce <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 80059ca:	2303      	movs	r3, #3
 80059cc:	e319      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80059ce:	4b0c      	ldr	r3, [pc, #48]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80059d2:	f003 0302 	and.w	r3, r3, #2
 80059d6:	2b00      	cmp	r3, #0
 80059d8:	d0ee      	beq.n	80059b8 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80059da:	687b      	ldr	r3, [r7, #4]
 80059dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80059de:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80059e2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80059e6:	d111      	bne.n	8005a0c <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 80059e8:	4b05      	ldr	r3, [pc, #20]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059ea:	689b      	ldr	r3, [r3, #8]
 80059ec:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80059f0:	687b      	ldr	r3, [r7, #4]
 80059f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80059f4:	4b04      	ldr	r3, [pc, #16]	; (8005a08 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 80059f6:	400b      	ands	r3, r1
 80059f8:	4901      	ldr	r1, [pc, #4]	; (8005a00 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80059fa:	4313      	orrs	r3, r2
 80059fc:	608b      	str	r3, [r1, #8]
 80059fe:	e00b      	b.n	8005a18 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8005a00:	40023800 	.word	0x40023800
 8005a04:	40007000 	.word	0x40007000
 8005a08:	0ffffcff 	.word	0x0ffffcff
 8005a0c:	4baa      	ldr	r3, [pc, #680]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a0e:	689b      	ldr	r3, [r3, #8]
 8005a10:	4aa9      	ldr	r2, [pc, #676]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a12:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8005a16:	6093      	str	r3, [r2, #8]
 8005a18:	4ba7      	ldr	r3, [pc, #668]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a1a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005a20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a24:	49a4      	ldr	r1, [pc, #656]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a26:	4313      	orrs	r3, r2
 8005a28:	670b      	str	r3, [r1, #112]	; 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	681b      	ldr	r3, [r3, #0]
 8005a2e:	f003 0310 	and.w	r3, r3, #16
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	d010      	beq.n	8005a58 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005a36:	4ba0      	ldr	r3, [pc, #640]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a38:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005a3c:	4a9e      	ldr	r2, [pc, #632]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a3e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8005a42:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
 8005a46:	4b9c      	ldr	r3, [pc, #624]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a48:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005a50:	4999      	ldr	r1, [pc, #612]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a52:	4313      	orrs	r3, r2
 8005a54:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005a60:	2b00      	cmp	r3, #0
 8005a62:	d00a      	beq.n	8005a7a <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8005a64:	4b94      	ldr	r3, [pc, #592]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a66:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005a6a:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005a72:	4991      	ldr	r1, [pc, #580]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a74:	4313      	orrs	r3, r2
 8005a76:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	d00a      	beq.n	8005a9c <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8005a86:	4b8c      	ldr	r3, [pc, #560]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a88:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005a8c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 8005a90:	687b      	ldr	r3, [r7, #4]
 8005a92:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8005a94:	4988      	ldr	r1, [pc, #544]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005a96:	4313      	orrs	r3, r2
 8005a98:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8005a9c:	687b      	ldr	r3, [r7, #4]
 8005a9e:	681b      	ldr	r3, [r3, #0]
 8005aa0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005aa4:	2b00      	cmp	r3, #0
 8005aa6:	d00a      	beq.n	8005abe <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8005aa8:	4b83      	ldr	r3, [pc, #524]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005aaa:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005aae:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8005ab2:	687b      	ldr	r3, [r7, #4]
 8005ab4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005ab6:	4980      	ldr	r1, [pc, #512]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ab8:	4313      	orrs	r3, r2
 8005aba:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005ac6:	2b00      	cmp	r3, #0
 8005ac8:	d00a      	beq.n	8005ae0 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8005aca:	4b7b      	ldr	r3, [pc, #492]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005acc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005ad0:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005ad8:	4977      	ldr	r1, [pc, #476]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ada:	4313      	orrs	r3, r2
 8005adc:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8005ae0:	687b      	ldr	r3, [r7, #4]
 8005ae2:	681b      	ldr	r3, [r3, #0]
 8005ae4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d00a      	beq.n	8005b02 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8005aec:	4b72      	ldr	r3, [pc, #456]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005aee:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005af2:	f023 0203 	bic.w	r2, r3, #3
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005afa:	496f      	ldr	r1, [pc, #444]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005afc:	4313      	orrs	r3, r2
 8005afe:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005b0a:	2b00      	cmp	r3, #0
 8005b0c:	d00a      	beq.n	8005b24 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8005b0e:	4b6a      	ldr	r3, [pc, #424]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b10:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b14:	f023 020c 	bic.w	r2, r3, #12
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005b1c:	4966      	ldr	r1, [pc, #408]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b1e:	4313      	orrs	r3, r2
 8005b20:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	d00a      	beq.n	8005b46 <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8005b30:	4b61      	ldr	r3, [pc, #388]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b32:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b36:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8005b3a:	687b      	ldr	r3, [r7, #4]
 8005b3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005b3e:	495e      	ldr	r1, [pc, #376]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b40:	4313      	orrs	r3, r2
 8005b42:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8005b46:	687b      	ldr	r3, [r7, #4]
 8005b48:	681b      	ldr	r3, [r3, #0]
 8005b4a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005b4e:	2b00      	cmp	r3, #0
 8005b50:	d00a      	beq.n	8005b68 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8005b52:	4b59      	ldr	r3, [pc, #356]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b54:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b58:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005b60:	4955      	ldr	r1, [pc, #340]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b62:	4313      	orrs	r3, r2
 8005b64:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8005b70:	2b00      	cmp	r3, #0
 8005b72:	d00a      	beq.n	8005b8a <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8005b74:	4b50      	ldr	r3, [pc, #320]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b76:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b7a:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005b82:	494d      	ldr	r1, [pc, #308]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b84:	4313      	orrs	r3, r2
 8005b86:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	681b      	ldr	r3, [r3, #0]
 8005b8e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d00a      	beq.n	8005bac <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8005b96:	4b48      	ldr	r3, [pc, #288]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005b98:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005b9c:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 8005ba0:	687b      	ldr	r3, [r7, #4]
 8005ba2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005ba4:	4944      	ldr	r1, [pc, #272]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005ba6:	4313      	orrs	r3, r2
 8005ba8:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8005bb4:	2b00      	cmp	r3, #0
 8005bb6:	d00a      	beq.n	8005bce <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8005bb8:	4b3f      	ldr	r3, [pc, #252]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bba:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005bbe:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005bc6:	493c      	ldr	r1, [pc, #240]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bc8:	4313      	orrs	r3, r2
 8005bca:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d00a      	beq.n	8005bf0 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8005bda:	4b37      	ldr	r3, [pc, #220]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bdc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005be0:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005be8:	4933      	ldr	r1, [pc, #204]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bea:	4313      	orrs	r3, r2
 8005bec:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	681b      	ldr	r3, [r3, #0]
 8005bf4:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005bf8:	2b00      	cmp	r3, #0
 8005bfa:	d00a      	beq.n	8005c12 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8005bfc:	4b2e      	ldr	r3, [pc, #184]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005bfe:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c02:	f023 6280 	bic.w	r2, r3, #67108864	; 0x4000000
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005c0a:	492b      	ldr	r1, [pc, #172]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c0c:	4313      	orrs	r3, r2
 8005c0e:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005c12:	687b      	ldr	r3, [r7, #4]
 8005c14:	681b      	ldr	r3, [r3, #0]
 8005c16:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	d011      	beq.n	8005c42 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005c1e:	4b26      	ldr	r3, [pc, #152]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c20:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c24:	f023 6200 	bic.w	r2, r3, #134217728	; 0x8000000
 8005c28:	687b      	ldr	r3, [r7, #4]
 8005c2a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005c2c:	4922      	ldr	r1, [pc, #136]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c2e:	4313      	orrs	r3, r2
 8005c30:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8005c34:	687b      	ldr	r3, [r7, #4]
 8005c36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005c38:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005c3c:	d101      	bne.n	8005c42 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8005c3e:	2301      	movs	r3, #1
 8005c40:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	f003 0308 	and.w	r3, r3, #8
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d001      	beq.n	8005c52 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8005c4e:	2301      	movs	r3, #1
 8005c50:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d00a      	beq.n	8005c74 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8005c5e:	4b16      	ldr	r3, [pc, #88]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c60:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c64:	f023 7240 	bic.w	r2, r3, #50331648	; 0x3000000
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005c6c:	4912      	ldr	r1, [pc, #72]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c6e:	4313      	orrs	r3, r2
 8005c70:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8005c7c:	2b00      	cmp	r3, #0
 8005c7e:	d00b      	beq.n	8005c98 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8005c80:	4b0d      	ldr	r3, [pc, #52]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c82:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8005c86:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8005c90:	4909      	ldr	r1, [pc, #36]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005c92:	4313      	orrs	r3, r2
 8005c94:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8005c98:	69fb      	ldr	r3, [r7, #28]
 8005c9a:	2b01      	cmp	r3, #1
 8005c9c:	d006      	beq.n	8005cac <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8005c9e:	687b      	ldr	r3, [r7, #4]
 8005ca0:	681b      	ldr	r3, [r3, #0]
 8005ca2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005ca6:	2b00      	cmp	r3, #0
 8005ca8:	f000 80d9 	beq.w	8005e5e <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8005cac:	4b02      	ldr	r3, [pc, #8]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cae:	681b      	ldr	r3, [r3, #0]
 8005cb0:	4a01      	ldr	r2, [pc, #4]	; (8005cb8 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8005cb2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8005cb6:	e001      	b.n	8005cbc <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8005cb8:	40023800 	.word	0x40023800
 8005cbc:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005cbe:	f7fc fa9d 	bl	80021fc <HAL_GetTick>
 8005cc2:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005cc4:	e008      	b.n	8005cd8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005cc6:	f7fc fa99 	bl	80021fc <HAL_GetTick>
 8005cca:	4602      	mov	r2, r0
 8005ccc:	697b      	ldr	r3, [r7, #20]
 8005cce:	1ad3      	subs	r3, r2, r3
 8005cd0:	2b64      	cmp	r3, #100	; 0x64
 8005cd2:	d901      	bls.n	8005cd8 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005cd4:	2303      	movs	r3, #3
 8005cd6:	e194      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005cd8:	4b6c      	ldr	r3, [pc, #432]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005ce0:	2b00      	cmp	r3, #0
 8005ce2:	d1f0      	bne.n	8005cc6 <HAL_RCCEx_PeriphCLKConfig+0x496>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	681b      	ldr	r3, [r3, #0]
 8005ce8:	f003 0301 	and.w	r3, r3, #1
 8005cec:	2b00      	cmp	r3, #0
 8005cee:	d021      	beq.n	8005d34 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	d11d      	bne.n	8005d34 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8005cf8:	4b64      	ldr	r3, [pc, #400]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005cfa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005cfe:	0c1b      	lsrs	r3, r3, #16
 8005d00:	f003 0303 	and.w	r3, r3, #3
 8005d04:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8005d06:	4b61      	ldr	r3, [pc, #388]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005d0c:	0e1b      	lsrs	r3, r3, #24
 8005d0e:	f003 030f 	and.w	r3, r3, #15
 8005d12:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	685b      	ldr	r3, [r3, #4]
 8005d18:	019a      	lsls	r2, r3, #6
 8005d1a:	693b      	ldr	r3, [r7, #16]
 8005d1c:	041b      	lsls	r3, r3, #16
 8005d1e:	431a      	orrs	r2, r3
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	061b      	lsls	r3, r3, #24
 8005d24:	431a      	orrs	r2, r3
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	689b      	ldr	r3, [r3, #8]
 8005d2a:	071b      	lsls	r3, r3, #28
 8005d2c:	4957      	ldr	r1, [pc, #348]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d2e:	4313      	orrs	r3, r2
 8005d30:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005d3c:	2b00      	cmp	r3, #0
 8005d3e:	d004      	beq.n	8005d4a <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005d44:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8005d48:	d00a      	beq.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	681b      	ldr	r3, [r3, #0]
 8005d4e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	d02e      	beq.n	8005db4 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d5a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8005d5e:	d129      	bne.n	8005db4 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8005d60:	4b4a      	ldr	r3, [pc, #296]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d62:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005d66:	0c1b      	lsrs	r3, r3, #16
 8005d68:	f003 0303 	and.w	r3, r3, #3
 8005d6c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005d6e:	4b47      	ldr	r3, [pc, #284]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d70:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005d74:	0f1b      	lsrs	r3, r3, #28
 8005d76:	f003 0307 	and.w	r3, r3, #7
 8005d7a:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8005d7c:	687b      	ldr	r3, [r7, #4]
 8005d7e:	685b      	ldr	r3, [r3, #4]
 8005d80:	019a      	lsls	r2, r3, #6
 8005d82:	693b      	ldr	r3, [r7, #16]
 8005d84:	041b      	lsls	r3, r3, #16
 8005d86:	431a      	orrs	r2, r3
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	68db      	ldr	r3, [r3, #12]
 8005d8c:	061b      	lsls	r3, r3, #24
 8005d8e:	431a      	orrs	r2, r3
 8005d90:	68fb      	ldr	r3, [r7, #12]
 8005d92:	071b      	lsls	r3, r3, #28
 8005d94:	493d      	ldr	r1, [pc, #244]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d96:	4313      	orrs	r3, r2
 8005d98:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005d9c:	4b3b      	ldr	r3, [pc, #236]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005d9e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005da2:	f023 021f 	bic.w	r2, r3, #31
 8005da6:	687b      	ldr	r3, [r7, #4]
 8005da8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005daa:	3b01      	subs	r3, #1
 8005dac:	4937      	ldr	r1, [pc, #220]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005dae:	4313      	orrs	r3, r2
 8005db0:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	681b      	ldr	r3, [r3, #0]
 8005db8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d01d      	beq.n	8005dfc <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8005dc0:	4b32      	ldr	r3, [pc, #200]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005dc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005dc6:	0e1b      	lsrs	r3, r3, #24
 8005dc8:	f003 030f 	and.w	r3, r3, #15
 8005dcc:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005dce:	4b2f      	ldr	r3, [pc, #188]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005dd0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005dd4:	0f1b      	lsrs	r3, r3, #28
 8005dd6:	f003 0307 	and.w	r3, r3, #7
 8005dda:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8005ddc:	687b      	ldr	r3, [r7, #4]
 8005dde:	685b      	ldr	r3, [r3, #4]
 8005de0:	019a      	lsls	r2, r3, #6
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	691b      	ldr	r3, [r3, #16]
 8005de6:	041b      	lsls	r3, r3, #16
 8005de8:	431a      	orrs	r2, r3
 8005dea:	693b      	ldr	r3, [r7, #16]
 8005dec:	061b      	lsls	r3, r3, #24
 8005dee:	431a      	orrs	r2, r3
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	071b      	lsls	r3, r3, #28
 8005df4:	4925      	ldr	r1, [pc, #148]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005df6:	4313      	orrs	r3, r2
 8005df8:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005dfc:	687b      	ldr	r3, [r7, #4]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005e04:	2b00      	cmp	r3, #0
 8005e06:	d011      	beq.n	8005e2c <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	685b      	ldr	r3, [r3, #4]
 8005e0c:	019a      	lsls	r2, r3, #6
 8005e0e:	687b      	ldr	r3, [r7, #4]
 8005e10:	691b      	ldr	r3, [r3, #16]
 8005e12:	041b      	lsls	r3, r3, #16
 8005e14:	431a      	orrs	r2, r3
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	68db      	ldr	r3, [r3, #12]
 8005e1a:	061b      	lsls	r3, r3, #24
 8005e1c:	431a      	orrs	r2, r3
 8005e1e:	687b      	ldr	r3, [r7, #4]
 8005e20:	689b      	ldr	r3, [r3, #8]
 8005e22:	071b      	lsls	r3, r3, #28
 8005e24:	4919      	ldr	r1, [pc, #100]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e26:	4313      	orrs	r3, r2
 8005e28:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8005e2c:	4b17      	ldr	r3, [pc, #92]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	4a16      	ldr	r2, [pc, #88]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e32:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8005e36:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005e38:	f7fc f9e0 	bl	80021fc <HAL_GetTick>
 8005e3c:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005e3e:	e008      	b.n	8005e52 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8005e40:	f7fc f9dc 	bl	80021fc <HAL_GetTick>
 8005e44:	4602      	mov	r2, r0
 8005e46:	697b      	ldr	r3, [r7, #20]
 8005e48:	1ad3      	subs	r3, r2, r3
 8005e4a:	2b64      	cmp	r3, #100	; 0x64
 8005e4c:	d901      	bls.n	8005e52 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005e4e:	2303      	movs	r3, #3
 8005e50:	e0d7      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005e52:	4b0e      	ldr	r3, [pc, #56]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	d0f0      	beq.n	8005e40 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8005e5e:	69bb      	ldr	r3, [r7, #24]
 8005e60:	2b01      	cmp	r3, #1
 8005e62:	f040 80cd 	bne.w	8006000 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005e66:	4b09      	ldr	r3, [pc, #36]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	4a08      	ldr	r2, [pc, #32]	; (8005e8c <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8005e6c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005e70:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005e72:	f7fc f9c3 	bl	80021fc <HAL_GetTick>
 8005e76:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005e78:	e00a      	b.n	8005e90 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005e7a:	f7fc f9bf 	bl	80021fc <HAL_GetTick>
 8005e7e:	4602      	mov	r2, r0
 8005e80:	697b      	ldr	r3, [r7, #20]
 8005e82:	1ad3      	subs	r3, r2, r3
 8005e84:	2b64      	cmp	r3, #100	; 0x64
 8005e86:	d903      	bls.n	8005e90 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005e88:	2303      	movs	r3, #3
 8005e8a:	e0ba      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8005e8c:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005e90:	4b5e      	ldr	r3, [pc, #376]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005e98:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005e9c:	d0ed      	beq.n	8005e7a <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8005e9e:	687b      	ldr	r3, [r7, #4]
 8005ea0:	681b      	ldr	r3, [r3, #0]
 8005ea2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d003      	beq.n	8005eb2 <HAL_RCCEx_PeriphCLKConfig+0x682>
 8005eaa:	687b      	ldr	r3, [r7, #4]
 8005eac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005eae:	2b00      	cmp	r3, #0
 8005eb0:	d009      	beq.n	8005ec6 <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	681b      	ldr	r3, [r3, #0]
 8005eb6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d02e      	beq.n	8005f1c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8005ebe:	687b      	ldr	r3, [r7, #4]
 8005ec0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005ec2:	2b00      	cmp	r3, #0
 8005ec4:	d12a      	bne.n	8005f1c <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8005ec6:	4b51      	ldr	r3, [pc, #324]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005ec8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005ecc:	0c1b      	lsrs	r3, r3, #16
 8005ece:	f003 0303 	and.w	r3, r3, #3
 8005ed2:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005ed4:	4b4d      	ldr	r3, [pc, #308]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005ed6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005eda:	0f1b      	lsrs	r3, r3, #28
 8005edc:	f003 0307 	and.w	r3, r3, #7
 8005ee0:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8005ee2:	687b      	ldr	r3, [r7, #4]
 8005ee4:	695b      	ldr	r3, [r3, #20]
 8005ee6:	019a      	lsls	r2, r3, #6
 8005ee8:	693b      	ldr	r3, [r7, #16]
 8005eea:	041b      	lsls	r3, r3, #16
 8005eec:	431a      	orrs	r2, r3
 8005eee:	687b      	ldr	r3, [r7, #4]
 8005ef0:	699b      	ldr	r3, [r3, #24]
 8005ef2:	061b      	lsls	r3, r3, #24
 8005ef4:	431a      	orrs	r2, r3
 8005ef6:	68fb      	ldr	r3, [r7, #12]
 8005ef8:	071b      	lsls	r3, r3, #28
 8005efa:	4944      	ldr	r1, [pc, #272]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005efc:	4313      	orrs	r3, r2
 8005efe:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005f02:	4b42      	ldr	r3, [pc, #264]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f04:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005f08:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8005f0c:	687b      	ldr	r3, [r7, #4]
 8005f0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005f10:	3b01      	subs	r3, #1
 8005f12:	021b      	lsls	r3, r3, #8
 8005f14:	493d      	ldr	r1, [pc, #244]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f16:	4313      	orrs	r3, r2
 8005f18:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	681b      	ldr	r3, [r3, #0]
 8005f20:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005f24:	2b00      	cmp	r3, #0
 8005f26:	d022      	beq.n	8005f6e <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8005f2c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005f30:	d11d      	bne.n	8005f6e <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005f32:	4b36      	ldr	r3, [pc, #216]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f34:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005f38:	0e1b      	lsrs	r3, r3, #24
 8005f3a:	f003 030f 	and.w	r3, r3, #15
 8005f3e:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005f40:	4b32      	ldr	r3, [pc, #200]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f42:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005f46:	0f1b      	lsrs	r3, r3, #28
 8005f48:	f003 0307 	and.w	r3, r3, #7
 8005f4c:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8005f4e:	687b      	ldr	r3, [r7, #4]
 8005f50:	695b      	ldr	r3, [r3, #20]
 8005f52:	019a      	lsls	r2, r3, #6
 8005f54:	687b      	ldr	r3, [r7, #4]
 8005f56:	6a1b      	ldr	r3, [r3, #32]
 8005f58:	041b      	lsls	r3, r3, #16
 8005f5a:	431a      	orrs	r2, r3
 8005f5c:	693b      	ldr	r3, [r7, #16]
 8005f5e:	061b      	lsls	r3, r3, #24
 8005f60:	431a      	orrs	r2, r3
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	071b      	lsls	r3, r3, #28
 8005f66:	4929      	ldr	r1, [pc, #164]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f68:	4313      	orrs	r3, r2
 8005f6a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	681b      	ldr	r3, [r3, #0]
 8005f72:	f003 0308 	and.w	r3, r3, #8
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d028      	beq.n	8005fcc <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005f7a:	4b24      	ldr	r3, [pc, #144]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f7c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005f80:	0e1b      	lsrs	r3, r3, #24
 8005f82:	f003 030f 	and.w	r3, r3, #15
 8005f86:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8005f88:	4b20      	ldr	r3, [pc, #128]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005f8a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8005f8e:	0c1b      	lsrs	r3, r3, #16
 8005f90:	f003 0303 	and.w	r3, r3, #3
 8005f94:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	695b      	ldr	r3, [r3, #20]
 8005f9a:	019a      	lsls	r2, r3, #6
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	041b      	lsls	r3, r3, #16
 8005fa0:	431a      	orrs	r2, r3
 8005fa2:	693b      	ldr	r3, [r7, #16]
 8005fa4:	061b      	lsls	r3, r3, #24
 8005fa6:	431a      	orrs	r2, r3
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	69db      	ldr	r3, [r3, #28]
 8005fac:	071b      	lsls	r3, r3, #28
 8005fae:	4917      	ldr	r1, [pc, #92]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005fb0:	4313      	orrs	r3, r2
 8005fb2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005fb6:	4b15      	ldr	r3, [pc, #84]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005fb8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8005fbc:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005fc4:	4911      	ldr	r1, [pc, #68]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005fc6:	4313      	orrs	r3, r2
 8005fc8:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005fcc:	4b0f      	ldr	r3, [pc, #60]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005fce:	681b      	ldr	r3, [r3, #0]
 8005fd0:	4a0e      	ldr	r2, [pc, #56]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005fd2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005fd6:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8005fd8:	f7fc f910 	bl	80021fc <HAL_GetTick>
 8005fdc:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005fde:	e008      	b.n	8005ff2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8005fe0:	f7fc f90c 	bl	80021fc <HAL_GetTick>
 8005fe4:	4602      	mov	r2, r0
 8005fe6:	697b      	ldr	r3, [r7, #20]
 8005fe8:	1ad3      	subs	r3, r2, r3
 8005fea:	2b64      	cmp	r3, #100	; 0x64
 8005fec:	d901      	bls.n	8005ff2 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8005fee:	2303      	movs	r3, #3
 8005ff0:	e007      	b.n	8006002 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005ff2:	4b06      	ldr	r3, [pc, #24]	; (800600c <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005ffa:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005ffe:	d1ef      	bne.n	8005fe0 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8006000:	2300      	movs	r3, #0
}
 8006002:	4618      	mov	r0, r3
 8006004:	3720      	adds	r7, #32
 8006006:	46bd      	mov	sp, r7
 8006008:	bd80      	pop	{r7, pc}
 800600a:	bf00      	nop
 800600c:	40023800 	.word	0x40023800

08006010 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006010:	b580      	push	{r7, lr}
 8006012:	b082      	sub	sp, #8
 8006014:	af00      	add	r7, sp, #0
 8006016:	6078      	str	r0, [r7, #4]
 8006018:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	2b00      	cmp	r3, #0
 800601e:	d101      	bne.n	8006024 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8006020:	2301      	movs	r3, #1
 8006022:	e025      	b.n	8006070 <HAL_SDRAM_Init+0x60>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800602a:	b2db      	uxtb	r3, r3
 800602c:	2b00      	cmp	r3, #0
 800602e:	d106      	bne.n	800603e <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006030:	687b      	ldr	r3, [r7, #4]
 8006032:	2200      	movs	r2, #0
 8006034:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006038:	6878      	ldr	r0, [r7, #4]
 800603a:	f7fb fec7 	bl	8001dcc <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800603e:	687b      	ldr	r3, [r7, #4]
 8006040:	2202      	movs	r2, #2
 8006042:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	681a      	ldr	r2, [r3, #0]
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	3304      	adds	r3, #4
 800604e:	4619      	mov	r1, r3
 8006050:	4610      	mov	r0, r2
 8006052:	f002 fca1 	bl	8008998 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	6818      	ldr	r0, [r3, #0]
 800605a:	687b      	ldr	r3, [r7, #4]
 800605c:	685b      	ldr	r3, [r3, #4]
 800605e:	461a      	mov	r2, r3
 8006060:	6839      	ldr	r1, [r7, #0]
 8006062:	f002 fcf5 	bl	8008a50 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	2201      	movs	r2, #1
 800606a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

  return HAL_OK;
 800606e:	2300      	movs	r3, #0
}
 8006070:	4618      	mov	r0, r3
 8006072:	3708      	adds	r7, #8
 8006074:	46bd      	mov	sp, r7
 8006076:	bd80      	pop	{r7, pc}

08006078 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006078:	b580      	push	{r7, lr}
 800607a:	b086      	sub	sp, #24
 800607c:	af00      	add	r7, sp, #0
 800607e:	60f8      	str	r0, [r7, #12]
 8006080:	60b9      	str	r1, [r7, #8]
 8006082:	607a      	str	r2, [r7, #4]
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800608a:	75fb      	strb	r3, [r7, #23]

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800608c:	7dfb      	ldrb	r3, [r7, #23]
 800608e:	2b02      	cmp	r3, #2
 8006090:	d101      	bne.n	8006096 <HAL_SDRAM_SendCommand+0x1e>
  {
    return HAL_BUSY;
 8006092:	2302      	movs	r3, #2
 8006094:	e021      	b.n	80060da <HAL_SDRAM_SendCommand+0x62>
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006096:	7dfb      	ldrb	r3, [r7, #23]
 8006098:	2b01      	cmp	r3, #1
 800609a:	d002      	beq.n	80060a2 <HAL_SDRAM_SendCommand+0x2a>
 800609c:	7dfb      	ldrb	r3, [r7, #23]
 800609e:	2b05      	cmp	r3, #5
 80060a0:	d118      	bne.n	80060d4 <HAL_SDRAM_SendCommand+0x5c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	2202      	movs	r2, #2
 80060a6:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	681b      	ldr	r3, [r3, #0]
 80060ae:	687a      	ldr	r2, [r7, #4]
 80060b0:	68b9      	ldr	r1, [r7, #8]
 80060b2:	4618      	mov	r0, r3
 80060b4:	f002 fd36 	bl	8008b24 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80060b8:	68bb      	ldr	r3, [r7, #8]
 80060ba:	681b      	ldr	r3, [r3, #0]
 80060bc:	2b02      	cmp	r3, #2
 80060be:	d104      	bne.n	80060ca <HAL_SDRAM_SendCommand+0x52>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80060c0:	68fb      	ldr	r3, [r7, #12]
 80060c2:	2205      	movs	r2, #5
 80060c4:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80060c8:	e006      	b.n	80060d8 <HAL_SDRAM_SendCommand+0x60>
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	2201      	movs	r2, #1
 80060ce:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80060d2:	e001      	b.n	80060d8 <HAL_SDRAM_SendCommand+0x60>
    }
  }
  else
  {
    return HAL_ERROR;
 80060d4:	2301      	movs	r3, #1
 80060d6:	e000      	b.n	80060da <HAL_SDRAM_SendCommand+0x62>
  }

  return HAL_OK;
 80060d8:	2300      	movs	r3, #0
}
 80060da:	4618      	mov	r0, r3
 80060dc:	3718      	adds	r7, #24
 80060de:	46bd      	mov	sp, r7
 80060e0:	bd80      	pop	{r7, pc}

080060e2 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80060e2:	b580      	push	{r7, lr}
 80060e4:	b082      	sub	sp, #8
 80060e6:	af00      	add	r7, sp, #0
 80060e8:	6078      	str	r0, [r7, #4]
 80060ea:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80060ec:	687b      	ldr	r3, [r7, #4]
 80060ee:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80060f2:	b2db      	uxtb	r3, r3
 80060f4:	2b02      	cmp	r3, #2
 80060f6:	d101      	bne.n	80060fc <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 80060f8:	2302      	movs	r3, #2
 80060fa:	e016      	b.n	800612a <HAL_SDRAM_ProgramRefreshRate+0x48>
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 8006102:	b2db      	uxtb	r3, r3
 8006104:	2b01      	cmp	r3, #1
 8006106:	d10f      	bne.n	8006128 <HAL_SDRAM_ProgramRefreshRate+0x46>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	2202      	movs	r2, #2
 800610c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	6839      	ldr	r1, [r7, #0]
 8006116:	4618      	mov	r0, r3
 8006118:	f002 fd28 	bl	8008b6c <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800611c:	687b      	ldr	r3, [r7, #4]
 800611e:	2201      	movs	r2, #1
 8006120:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006124:	2300      	movs	r3, #0
 8006126:	e000      	b.n	800612a <HAL_SDRAM_ProgramRefreshRate+0x48>
    return HAL_ERROR;
 8006128:	2301      	movs	r3, #1
}
 800612a:	4618      	mov	r0, r3
 800612c:	3708      	adds	r7, #8
 800612e:	46bd      	mov	sp, r7
 8006130:	bd80      	pop	{r7, pc}

08006132 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006132:	b580      	push	{r7, lr}
 8006134:	b084      	sub	sp, #16
 8006136:	af00      	add	r7, sp, #0
 8006138:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	2b00      	cmp	r3, #0
 800613e:	d101      	bne.n	8006144 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006140:	2301      	movs	r3, #1
 8006142:	e09d      	b.n	8006280 <HAL_SPI_Init+0x14e>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006144:	687b      	ldr	r3, [r7, #4]
 8006146:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006148:	2b00      	cmp	r3, #0
 800614a:	d108      	bne.n	800615e <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	685b      	ldr	r3, [r3, #4]
 8006150:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006154:	d009      	beq.n	800616a <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006156:	687b      	ldr	r3, [r7, #4]
 8006158:	2200      	movs	r2, #0
 800615a:	61da      	str	r2, [r3, #28]
 800615c:	e005      	b.n	800616a <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	2200      	movs	r2, #0
 8006162:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006164:	687b      	ldr	r3, [r7, #4]
 8006166:	2200      	movs	r2, #0
 8006168:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800616a:	687b      	ldr	r3, [r7, #4]
 800616c:	2200      	movs	r2, #0
 800616e:	629a      	str	r2, [r3, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006170:	687b      	ldr	r3, [r7, #4]
 8006172:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 8006176:	b2db      	uxtb	r3, r3
 8006178:	2b00      	cmp	r3, #0
 800617a:	d106      	bne.n	800618a <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	2200      	movs	r2, #0
 8006180:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006184:	6878      	ldr	r0, [r7, #4]
 8006186:	f7fb fc49 	bl	8001a1c <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800618a:	687b      	ldr	r3, [r7, #4]
 800618c:	2202      	movs	r2, #2
 800618e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006192:	687b      	ldr	r3, [r7, #4]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	681a      	ldr	r2, [r3, #0]
 8006198:	687b      	ldr	r3, [r7, #4]
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80061a0:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 80061a2:	687b      	ldr	r3, [r7, #4]
 80061a4:	68db      	ldr	r3, [r3, #12]
 80061a6:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80061aa:	d902      	bls.n	80061b2 <HAL_SPI_Init+0x80>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 80061ac:	2300      	movs	r3, #0
 80061ae:	60fb      	str	r3, [r7, #12]
 80061b0:	e002      	b.n	80061b8 <HAL_SPI_Init+0x86>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 80061b2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80061b6:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 80061b8:	687b      	ldr	r3, [r7, #4]
 80061ba:	68db      	ldr	r3, [r3, #12]
 80061bc:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 80061c0:	d007      	beq.n	80061d2 <HAL_SPI_Init+0xa0>
 80061c2:	687b      	ldr	r3, [r7, #4]
 80061c4:	68db      	ldr	r3, [r3, #12]
 80061c6:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 80061ca:	d002      	beq.n	80061d2 <HAL_SPI_Init+0xa0>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	2200      	movs	r2, #0
 80061d0:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	685b      	ldr	r3, [r3, #4]
 80061d6:	f403 7282 	and.w	r2, r3, #260	; 0x104
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	689b      	ldr	r3, [r3, #8]
 80061de:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 80061e2:	431a      	orrs	r2, r3
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	691b      	ldr	r3, [r3, #16]
 80061e8:	f003 0302 	and.w	r3, r3, #2
 80061ec:	431a      	orrs	r2, r3
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	695b      	ldr	r3, [r3, #20]
 80061f2:	f003 0301 	and.w	r3, r3, #1
 80061f6:	431a      	orrs	r2, r3
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	699b      	ldr	r3, [r3, #24]
 80061fc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006200:	431a      	orrs	r2, r3
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	69db      	ldr	r3, [r3, #28]
 8006206:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800620a:	431a      	orrs	r2, r3
 800620c:	687b      	ldr	r3, [r7, #4]
 800620e:	6a1b      	ldr	r3, [r3, #32]
 8006210:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006214:	ea42 0103 	orr.w	r1, r2, r3
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800621c:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8006220:	687b      	ldr	r3, [r7, #4]
 8006222:	681b      	ldr	r3, [r3, #0]
 8006224:	430a      	orrs	r2, r1
 8006226:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8006228:	687b      	ldr	r3, [r7, #4]
 800622a:	699b      	ldr	r3, [r3, #24]
 800622c:	0c1b      	lsrs	r3, r3, #16
 800622e:	f003 0204 	and.w	r2, r3, #4
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006236:	f003 0310 	and.w	r3, r3, #16
 800623a:	431a      	orrs	r2, r3
 800623c:	687b      	ldr	r3, [r7, #4]
 800623e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006240:	f003 0308 	and.w	r3, r3, #8
 8006244:	431a      	orrs	r2, r3
 8006246:	687b      	ldr	r3, [r7, #4]
 8006248:	68db      	ldr	r3, [r3, #12]
 800624a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800624e:	ea42 0103 	orr.w	r1, r2, r3
 8006252:	68fb      	ldr	r3, [r7, #12]
 8006254:	f403 5280 	and.w	r2, r3, #4096	; 0x1000
 8006258:	687b      	ldr	r3, [r7, #4]
 800625a:	681b      	ldr	r3, [r3, #0]
 800625c:	430a      	orrs	r2, r1
 800625e:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006260:	687b      	ldr	r3, [r7, #4]
 8006262:	681b      	ldr	r3, [r3, #0]
 8006264:	69da      	ldr	r2, [r3, #28]
 8006266:	687b      	ldr	r3, [r7, #4]
 8006268:	681b      	ldr	r3, [r3, #0]
 800626a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800626e:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006270:	687b      	ldr	r3, [r7, #4]
 8006272:	2200      	movs	r2, #0
 8006274:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	2201      	movs	r2, #1
 800627a:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

  return HAL_OK;
 800627e:	2300      	movs	r3, #0
}
 8006280:	4618      	mov	r0, r3
 8006282:	3710      	adds	r7, #16
 8006284:	46bd      	mov	sp, r7
 8006286:	bd80      	pop	{r7, pc}

08006288 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006288:	b580      	push	{r7, lr}
 800628a:	b088      	sub	sp, #32
 800628c:	af00      	add	r7, sp, #0
 800628e:	60f8      	str	r0, [r7, #12]
 8006290:	60b9      	str	r1, [r7, #8]
 8006292:	603b      	str	r3, [r7, #0]
 8006294:	4613      	mov	r3, r2
 8006296:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;
  HAL_StatusTypeDef errorcode = HAL_OK;
 8006298:	2300      	movs	r3, #0
 800629a:	77fb      	strb	r3, [r7, #31]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 800629c:	68fb      	ldr	r3, [r7, #12]
 800629e:	f893 305c 	ldrb.w	r3, [r3, #92]	; 0x5c
 80062a2:	2b01      	cmp	r3, #1
 80062a4:	d101      	bne.n	80062aa <HAL_SPI_Transmit+0x22>
 80062a6:	2302      	movs	r3, #2
 80062a8:	e158      	b.n	800655c <HAL_SPI_Transmit+0x2d4>
 80062aa:	68fb      	ldr	r3, [r7, #12]
 80062ac:	2201      	movs	r2, #1
 80062ae:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80062b2:	f7fb ffa3 	bl	80021fc <HAL_GetTick>
 80062b6:	61b8      	str	r0, [r7, #24]
  initial_TxXferCount = Size;
 80062b8:	88fb      	ldrh	r3, [r7, #6]
 80062ba:	82fb      	strh	r3, [r7, #22]

  if (hspi->State != HAL_SPI_STATE_READY)
 80062bc:	68fb      	ldr	r3, [r7, #12]
 80062be:	f893 305d 	ldrb.w	r3, [r3, #93]	; 0x5d
 80062c2:	b2db      	uxtb	r3, r3
 80062c4:	2b01      	cmp	r3, #1
 80062c6:	d002      	beq.n	80062ce <HAL_SPI_Transmit+0x46>
  {
    errorcode = HAL_BUSY;
 80062c8:	2302      	movs	r3, #2
 80062ca:	77fb      	strb	r3, [r7, #31]
    goto error;
 80062cc:	e13d      	b.n	800654a <HAL_SPI_Transmit+0x2c2>
  }

  if ((pData == NULL) || (Size == 0U))
 80062ce:	68bb      	ldr	r3, [r7, #8]
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d002      	beq.n	80062da <HAL_SPI_Transmit+0x52>
 80062d4:	88fb      	ldrh	r3, [r7, #6]
 80062d6:	2b00      	cmp	r3, #0
 80062d8:	d102      	bne.n	80062e0 <HAL_SPI_Transmit+0x58>
  {
    errorcode = HAL_ERROR;
 80062da:	2301      	movs	r3, #1
 80062dc:	77fb      	strb	r3, [r7, #31]
    goto error;
 80062de:	e134      	b.n	800654a <HAL_SPI_Transmit+0x2c2>
  }

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	2203      	movs	r2, #3
 80062e4:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	2200      	movs	r2, #0
 80062ec:	661a      	str	r2, [r3, #96]	; 0x60
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80062ee:	68fb      	ldr	r3, [r7, #12]
 80062f0:	68ba      	ldr	r2, [r7, #8]
 80062f2:	639a      	str	r2, [r3, #56]	; 0x38
  hspi->TxXferSize  = Size;
 80062f4:	68fb      	ldr	r3, [r7, #12]
 80062f6:	88fa      	ldrh	r2, [r7, #6]
 80062f8:	879a      	strh	r2, [r3, #60]	; 0x3c
  hspi->TxXferCount = Size;
 80062fa:	68fb      	ldr	r3, [r7, #12]
 80062fc:	88fa      	ldrh	r2, [r7, #6]
 80062fe:	87da      	strh	r2, [r3, #62]	; 0x3e

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006300:	68fb      	ldr	r3, [r7, #12]
 8006302:	2200      	movs	r2, #0
 8006304:	641a      	str	r2, [r3, #64]	; 0x40
  hspi->RxXferSize  = 0U;
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	2200      	movs	r2, #0
 800630a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
  hspi->RxXferCount = 0U;
 800630e:	68fb      	ldr	r3, [r7, #12]
 8006310:	2200      	movs	r2, #0
 8006312:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
  hspi->TxISR       = NULL;
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	2200      	movs	r2, #0
 800631a:	651a      	str	r2, [r3, #80]	; 0x50
  hspi->RxISR       = NULL;
 800631c:	68fb      	ldr	r3, [r7, #12]
 800631e:	2200      	movs	r2, #0
 8006320:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006322:	68fb      	ldr	r3, [r7, #12]
 8006324:	689b      	ldr	r3, [r3, #8]
 8006326:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800632a:	d10f      	bne.n	800634c <HAL_SPI_Transmit+0xc4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800632c:	68fb      	ldr	r3, [r7, #12]
 800632e:	681b      	ldr	r3, [r3, #0]
 8006330:	681a      	ldr	r2, [r3, #0]
 8006332:	68fb      	ldr	r3, [r7, #12]
 8006334:	681b      	ldr	r3, [r3, #0]
 8006336:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800633a:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800633c:	68fb      	ldr	r3, [r7, #12]
 800633e:	681b      	ldr	r3, [r3, #0]
 8006340:	681a      	ldr	r2, [r3, #0]
 8006342:	68fb      	ldr	r3, [r7, #12]
 8006344:	681b      	ldr	r3, [r3, #0]
 8006346:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800634a:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006356:	2b40      	cmp	r3, #64	; 0x40
 8006358:	d007      	beq.n	800636a <HAL_SPI_Transmit+0xe2>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800635a:	68fb      	ldr	r3, [r7, #12]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	681a      	ldr	r2, [r3, #0]
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	681b      	ldr	r3, [r3, #0]
 8006364:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006368:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	68db      	ldr	r3, [r3, #12]
 800636e:	f5b3 6fe0 	cmp.w	r3, #1792	; 0x700
 8006372:	d94b      	bls.n	800640c <HAL_SPI_Transmit+0x184>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	685b      	ldr	r3, [r3, #4]
 8006378:	2b00      	cmp	r3, #0
 800637a:	d002      	beq.n	8006382 <HAL_SPI_Transmit+0xfa>
 800637c:	8afb      	ldrh	r3, [r7, #22]
 800637e:	2b01      	cmp	r3, #1
 8006380:	d13e      	bne.n	8006400 <HAL_SPI_Transmit+0x178>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006386:	881a      	ldrh	r2, [r3, #0]
 8006388:	68fb      	ldr	r3, [r7, #12]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006392:	1c9a      	adds	r2, r3, #2
 8006394:	68fb      	ldr	r3, [r7, #12]
 8006396:	639a      	str	r2, [r3, #56]	; 0x38
      hspi->TxXferCount--;
 8006398:	68fb      	ldr	r3, [r7, #12]
 800639a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800639c:	b29b      	uxth	r3, r3
 800639e:	3b01      	subs	r3, #1
 80063a0:	b29a      	uxth	r2, r3
 80063a2:	68fb      	ldr	r3, [r7, #12]
 80063a4:	87da      	strh	r2, [r3, #62]	; 0x3e
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80063a6:	e02b      	b.n	8006400 <HAL_SPI_Transmit+0x178>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80063a8:	68fb      	ldr	r3, [r7, #12]
 80063aa:	681b      	ldr	r3, [r3, #0]
 80063ac:	689b      	ldr	r3, [r3, #8]
 80063ae:	f003 0302 	and.w	r3, r3, #2
 80063b2:	2b02      	cmp	r3, #2
 80063b4:	d112      	bne.n	80063dc <HAL_SPI_Transmit+0x154>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80063b6:	68fb      	ldr	r3, [r7, #12]
 80063b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063ba:	881a      	ldrh	r2, [r3, #0]
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	681b      	ldr	r3, [r3, #0]
 80063c0:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80063c6:	1c9a      	adds	r2, r3, #2
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80063d0:	b29b      	uxth	r3, r3
 80063d2:	3b01      	subs	r3, #1
 80063d4:	b29a      	uxth	r2, r3
 80063d6:	68fb      	ldr	r3, [r7, #12]
 80063d8:	87da      	strh	r2, [r3, #62]	; 0x3e
 80063da:	e011      	b.n	8006400 <HAL_SPI_Transmit+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80063dc:	f7fb ff0e 	bl	80021fc <HAL_GetTick>
 80063e0:	4602      	mov	r2, r0
 80063e2:	69bb      	ldr	r3, [r7, #24]
 80063e4:	1ad3      	subs	r3, r2, r3
 80063e6:	683a      	ldr	r2, [r7, #0]
 80063e8:	429a      	cmp	r2, r3
 80063ea:	d803      	bhi.n	80063f4 <HAL_SPI_Transmit+0x16c>
 80063ec:	683b      	ldr	r3, [r7, #0]
 80063ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063f2:	d102      	bne.n	80063fa <HAL_SPI_Transmit+0x172>
 80063f4:	683b      	ldr	r3, [r7, #0]
 80063f6:	2b00      	cmp	r3, #0
 80063f8:	d102      	bne.n	8006400 <HAL_SPI_Transmit+0x178>
        {
          errorcode = HAL_TIMEOUT;
 80063fa:	2303      	movs	r3, #3
 80063fc:	77fb      	strb	r3, [r7, #31]
          goto error;
 80063fe:	e0a4      	b.n	800654a <HAL_SPI_Transmit+0x2c2>
    while (hspi->TxXferCount > 0U)
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006404:	b29b      	uxth	r3, r3
 8006406:	2b00      	cmp	r3, #0
 8006408:	d1ce      	bne.n	80063a8 <HAL_SPI_Transmit+0x120>
 800640a:	e07c      	b.n	8006506 <HAL_SPI_Transmit+0x27e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	685b      	ldr	r3, [r3, #4]
 8006410:	2b00      	cmp	r3, #0
 8006412:	d002      	beq.n	800641a <HAL_SPI_Transmit+0x192>
 8006414:	8afb      	ldrh	r3, [r7, #22]
 8006416:	2b01      	cmp	r3, #1
 8006418:	d170      	bne.n	80064fc <HAL_SPI_Transmit+0x274>
    {
      if (hspi->TxXferCount > 1U)
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800641e:	b29b      	uxth	r3, r3
 8006420:	2b01      	cmp	r3, #1
 8006422:	d912      	bls.n	800644a <HAL_SPI_Transmit+0x1c2>
      {
        /* write on the data register in packing mode */
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006428:	881a      	ldrh	r2, [r3, #0]
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	681b      	ldr	r3, [r3, #0]
 800642e:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8006430:	68fb      	ldr	r3, [r7, #12]
 8006432:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006434:	1c9a      	adds	r2, r3, #2
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount -= 2U;
 800643a:	68fb      	ldr	r3, [r7, #12]
 800643c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800643e:	b29b      	uxth	r3, r3
 8006440:	3b02      	subs	r3, #2
 8006442:	b29a      	uxth	r2, r3
 8006444:	68fb      	ldr	r3, [r7, #12]
 8006446:	87da      	strh	r2, [r3, #62]	; 0x3e
 8006448:	e058      	b.n	80064fc <HAL_SPI_Transmit+0x274>
      }
      else
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800644a:	68fb      	ldr	r3, [r7, #12]
 800644c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800644e:	68fb      	ldr	r3, [r7, #12]
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	330c      	adds	r3, #12
 8006454:	7812      	ldrb	r2, [r2, #0]
 8006456:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr ++;
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800645c:	1c5a      	adds	r2, r3, #1
 800645e:	68fb      	ldr	r3, [r7, #12]
 8006460:	639a      	str	r2, [r3, #56]	; 0x38
        hspi->TxXferCount--;
 8006462:	68fb      	ldr	r3, [r7, #12]
 8006464:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006466:	b29b      	uxth	r3, r3
 8006468:	3b01      	subs	r3, #1
 800646a:	b29a      	uxth	r2, r3
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	87da      	strh	r2, [r3, #62]	; 0x3e
      }
    }
    while (hspi->TxXferCount > 0U)
 8006470:	e044      	b.n	80064fc <HAL_SPI_Transmit+0x274>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	689b      	ldr	r3, [r3, #8]
 8006478:	f003 0302 	and.w	r3, r3, #2
 800647c:	2b02      	cmp	r3, #2
 800647e:	d12b      	bne.n	80064d8 <HAL_SPI_Transmit+0x250>
      {
        if (hspi->TxXferCount > 1U)
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006484:	b29b      	uxth	r3, r3
 8006486:	2b01      	cmp	r3, #1
 8006488:	d912      	bls.n	80064b0 <HAL_SPI_Transmit+0x228>
        {
          /* write on the data register in packing mode */
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800648a:	68fb      	ldr	r3, [r7, #12]
 800648c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800648e:	881a      	ldrh	r2, [r3, #0]
 8006490:	68fb      	ldr	r3, [r7, #12]
 8006492:	681b      	ldr	r3, [r3, #0]
 8006494:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8006496:	68fb      	ldr	r3, [r7, #12]
 8006498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800649a:	1c9a      	adds	r2, r3, #2
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount -= 2U;
 80064a0:	68fb      	ldr	r3, [r7, #12]
 80064a2:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80064a4:	b29b      	uxth	r3, r3
 80064a6:	3b02      	subs	r3, #2
 80064a8:	b29a      	uxth	r2, r3
 80064aa:	68fb      	ldr	r3, [r7, #12]
 80064ac:	87da      	strh	r2, [r3, #62]	; 0x3e
 80064ae:	e025      	b.n	80064fc <HAL_SPI_Transmit+0x274>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80064b0:	68fb      	ldr	r3, [r7, #12]
 80064b2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80064b4:	68fb      	ldr	r3, [r7, #12]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	330c      	adds	r3, #12
 80064ba:	7812      	ldrb	r2, [r2, #0]
 80064bc:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 80064be:	68fb      	ldr	r3, [r7, #12]
 80064c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80064c2:	1c5a      	adds	r2, r3, #1
 80064c4:	68fb      	ldr	r3, [r7, #12]
 80064c6:	639a      	str	r2, [r3, #56]	; 0x38
          hspi->TxXferCount--;
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80064cc:	b29b      	uxth	r3, r3
 80064ce:	3b01      	subs	r3, #1
 80064d0:	b29a      	uxth	r2, r3
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	87da      	strh	r2, [r3, #62]	; 0x3e
 80064d6:	e011      	b.n	80064fc <HAL_SPI_Transmit+0x274>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80064d8:	f7fb fe90 	bl	80021fc <HAL_GetTick>
 80064dc:	4602      	mov	r2, r0
 80064de:	69bb      	ldr	r3, [r7, #24]
 80064e0:	1ad3      	subs	r3, r2, r3
 80064e2:	683a      	ldr	r2, [r7, #0]
 80064e4:	429a      	cmp	r2, r3
 80064e6:	d803      	bhi.n	80064f0 <HAL_SPI_Transmit+0x268>
 80064e8:	683b      	ldr	r3, [r7, #0]
 80064ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 80064ee:	d102      	bne.n	80064f6 <HAL_SPI_Transmit+0x26e>
 80064f0:	683b      	ldr	r3, [r7, #0]
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d102      	bne.n	80064fc <HAL_SPI_Transmit+0x274>
        {
          errorcode = HAL_TIMEOUT;
 80064f6:	2303      	movs	r3, #3
 80064f8:	77fb      	strb	r3, [r7, #31]
          goto error;
 80064fa:	e026      	b.n	800654a <HAL_SPI_Transmit+0x2c2>
    while (hspi->TxXferCount > 0U)
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006500:	b29b      	uxth	r3, r3
 8006502:	2b00      	cmp	r3, #0
 8006504:	d1b5      	bne.n	8006472 <HAL_SPI_Transmit+0x1ea>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006506:	69ba      	ldr	r2, [r7, #24]
 8006508:	6839      	ldr	r1, [r7, #0]
 800650a:	68f8      	ldr	r0, [r7, #12]
 800650c:	f000 f948 	bl	80067a0 <SPI_EndRxTxTransaction>
 8006510:	4603      	mov	r3, r0
 8006512:	2b00      	cmp	r3, #0
 8006514:	d002      	beq.n	800651c <HAL_SPI_Transmit+0x294>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	2220      	movs	r2, #32
 800651a:	661a      	str	r2, [r3, #96]	; 0x60
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	689b      	ldr	r3, [r3, #8]
 8006520:	2b00      	cmp	r3, #0
 8006522:	d10a      	bne.n	800653a <HAL_SPI_Transmit+0x2b2>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006524:	2300      	movs	r3, #0
 8006526:	613b      	str	r3, [r7, #16]
 8006528:	68fb      	ldr	r3, [r7, #12]
 800652a:	681b      	ldr	r3, [r3, #0]
 800652c:	68db      	ldr	r3, [r3, #12]
 800652e:	613b      	str	r3, [r7, #16]
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	681b      	ldr	r3, [r3, #0]
 8006534:	689b      	ldr	r3, [r3, #8]
 8006536:	613b      	str	r3, [r7, #16]
 8006538:	693b      	ldr	r3, [r7, #16]
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800653e:	2b00      	cmp	r3, #0
 8006540:	d002      	beq.n	8006548 <HAL_SPI_Transmit+0x2c0>
  {
    errorcode = HAL_ERROR;
 8006542:	2301      	movs	r3, #1
 8006544:	77fb      	strb	r3, [r7, #31]
 8006546:	e000      	b.n	800654a <HAL_SPI_Transmit+0x2c2>
  }

error:
 8006548:	bf00      	nop
  hspi->State = HAL_SPI_STATE_READY;
 800654a:	68fb      	ldr	r3, [r7, #12]
 800654c:	2201      	movs	r2, #1
 800654e:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	2200      	movs	r2, #0
 8006556:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c
  return errorcode;
 800655a:	7ffb      	ldrb	r3, [r7, #31]
}
 800655c:	4618      	mov	r0, r3
 800655e:	3720      	adds	r7, #32
 8006560:	46bd      	mov	sp, r7
 8006562:	bd80      	pop	{r7, pc}

08006564 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006564:	b580      	push	{r7, lr}
 8006566:	b088      	sub	sp, #32
 8006568:	af00      	add	r7, sp, #0
 800656a:	60f8      	str	r0, [r7, #12]
 800656c:	60b9      	str	r1, [r7, #8]
 800656e:	603b      	str	r3, [r7, #0]
 8006570:	4613      	mov	r3, r2
 8006572:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006574:	f7fb fe42 	bl	80021fc <HAL_GetTick>
 8006578:	4602      	mov	r2, r0
 800657a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800657c:	1a9b      	subs	r3, r3, r2
 800657e:	683a      	ldr	r2, [r7, #0]
 8006580:	4413      	add	r3, r2
 8006582:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006584:	f7fb fe3a 	bl	80021fc <HAL_GetTick>
 8006588:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800658a:	4b39      	ldr	r3, [pc, #228]	; (8006670 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800658c:	681b      	ldr	r3, [r3, #0]
 800658e:	015b      	lsls	r3, r3, #5
 8006590:	0d1b      	lsrs	r3, r3, #20
 8006592:	69fa      	ldr	r2, [r7, #28]
 8006594:	fb02 f303 	mul.w	r3, r2, r3
 8006598:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800659a:	e054      	b.n	8006646 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 800659c:	683b      	ldr	r3, [r7, #0]
 800659e:	f1b3 3fff 	cmp.w	r3, #4294967295
 80065a2:	d050      	beq.n	8006646 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80065a4:	f7fb fe2a 	bl	80021fc <HAL_GetTick>
 80065a8:	4602      	mov	r2, r0
 80065aa:	69bb      	ldr	r3, [r7, #24]
 80065ac:	1ad3      	subs	r3, r2, r3
 80065ae:	69fa      	ldr	r2, [r7, #28]
 80065b0:	429a      	cmp	r2, r3
 80065b2:	d902      	bls.n	80065ba <SPI_WaitFlagStateUntilTimeout+0x56>
 80065b4:	69fb      	ldr	r3, [r7, #28]
 80065b6:	2b00      	cmp	r3, #0
 80065b8:	d13d      	bne.n	8006636 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80065ba:	68fb      	ldr	r3, [r7, #12]
 80065bc:	681b      	ldr	r3, [r3, #0]
 80065be:	685a      	ldr	r2, [r3, #4]
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	681b      	ldr	r3, [r3, #0]
 80065c4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80065c8:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80065ca:	68fb      	ldr	r3, [r7, #12]
 80065cc:	685b      	ldr	r3, [r3, #4]
 80065ce:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80065d2:	d111      	bne.n	80065f8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80065d4:	68fb      	ldr	r3, [r7, #12]
 80065d6:	689b      	ldr	r3, [r3, #8]
 80065d8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80065dc:	d004      	beq.n	80065e8 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	689b      	ldr	r3, [r3, #8]
 80065e2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80065e6:	d107      	bne.n	80065f8 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80065e8:	68fb      	ldr	r3, [r7, #12]
 80065ea:	681b      	ldr	r3, [r3, #0]
 80065ec:	681a      	ldr	r2, [r3, #0]
 80065ee:	68fb      	ldr	r3, [r7, #12]
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80065f6:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80065f8:	68fb      	ldr	r3, [r7, #12]
 80065fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80065fc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006600:	d10f      	bne.n	8006622 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	681a      	ldr	r2, [r3, #0]
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006610:	601a      	str	r2, [r3, #0]
 8006612:	68fb      	ldr	r3, [r7, #12]
 8006614:	681b      	ldr	r3, [r3, #0]
 8006616:	681a      	ldr	r2, [r3, #0]
 8006618:	68fb      	ldr	r3, [r7, #12]
 800661a:	681b      	ldr	r3, [r3, #0]
 800661c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006620:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	2201      	movs	r2, #1
 8006626:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 800662a:	68fb      	ldr	r3, [r7, #12]
 800662c:	2200      	movs	r2, #0
 800662e:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 8006632:	2303      	movs	r3, #3
 8006634:	e017      	b.n	8006666 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006636:	697b      	ldr	r3, [r7, #20]
 8006638:	2b00      	cmp	r3, #0
 800663a:	d101      	bne.n	8006640 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 800663c:	2300      	movs	r3, #0
 800663e:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006640:	697b      	ldr	r3, [r7, #20]
 8006642:	3b01      	subs	r3, #1
 8006644:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006646:	68fb      	ldr	r3, [r7, #12]
 8006648:	681b      	ldr	r3, [r3, #0]
 800664a:	689a      	ldr	r2, [r3, #8]
 800664c:	68bb      	ldr	r3, [r7, #8]
 800664e:	4013      	ands	r3, r2
 8006650:	68ba      	ldr	r2, [r7, #8]
 8006652:	429a      	cmp	r2, r3
 8006654:	bf0c      	ite	eq
 8006656:	2301      	moveq	r3, #1
 8006658:	2300      	movne	r3, #0
 800665a:	b2db      	uxtb	r3, r3
 800665c:	461a      	mov	r2, r3
 800665e:	79fb      	ldrb	r3, [r7, #7]
 8006660:	429a      	cmp	r2, r3
 8006662:	d19b      	bne.n	800659c <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006664:	2300      	movs	r3, #0
}
 8006666:	4618      	mov	r0, r3
 8006668:	3720      	adds	r7, #32
 800666a:	46bd      	mov	sp, r7
 800666c:	bd80      	pop	{r7, pc}
 800666e:	bf00      	nop
 8006670:	20000004 	.word	0x20000004

08006674 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006674:	b580      	push	{r7, lr}
 8006676:	b08a      	sub	sp, #40	; 0x28
 8006678:	af00      	add	r7, sp, #0
 800667a:	60f8      	str	r0, [r7, #12]
 800667c:	60b9      	str	r1, [r7, #8]
 800667e:	607a      	str	r2, [r7, #4]
 8006680:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 8006682:	2300      	movs	r3, #0
 8006684:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 8006686:	f7fb fdb9 	bl	80021fc <HAL_GetTick>
 800668a:	4602      	mov	r2, r0
 800668c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800668e:	1a9b      	subs	r3, r3, r2
 8006690:	683a      	ldr	r2, [r7, #0]
 8006692:	4413      	add	r3, r2
 8006694:	627b      	str	r3, [r7, #36]	; 0x24
  tmp_tickstart = HAL_GetTick();
 8006696:	f7fb fdb1 	bl	80021fc <HAL_GetTick>
 800669a:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	330c      	adds	r3, #12
 80066a2:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 80066a4:	4b3d      	ldr	r3, [pc, #244]	; (800679c <SPI_WaitFifoStateUntilTimeout+0x128>)
 80066a6:	681a      	ldr	r2, [r3, #0]
 80066a8:	4613      	mov	r3, r2
 80066aa:	009b      	lsls	r3, r3, #2
 80066ac:	4413      	add	r3, r2
 80066ae:	00da      	lsls	r2, r3, #3
 80066b0:	1ad3      	subs	r3, r2, r3
 80066b2:	0d1b      	lsrs	r3, r3, #20
 80066b4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80066b6:	fb02 f303 	mul.w	r3, r2, r3
 80066ba:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 80066bc:	e060      	b.n	8006780 <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 80066be:	68bb      	ldr	r3, [r7, #8]
 80066c0:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80066c4:	d107      	bne.n	80066d6 <SPI_WaitFifoStateUntilTimeout+0x62>
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	2b00      	cmp	r3, #0
 80066ca:	d104      	bne.n	80066d6 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 80066cc:	69fb      	ldr	r3, [r7, #28]
 80066ce:	781b      	ldrb	r3, [r3, #0]
 80066d0:	b2db      	uxtb	r3, r3
 80066d2:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 80066d4:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 80066d6:	683b      	ldr	r3, [r7, #0]
 80066d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80066dc:	d050      	beq.n	8006780 <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 80066de:	f7fb fd8d 	bl	80021fc <HAL_GetTick>
 80066e2:	4602      	mov	r2, r0
 80066e4:	6a3b      	ldr	r3, [r7, #32]
 80066e6:	1ad3      	subs	r3, r2, r3
 80066e8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80066ea:	429a      	cmp	r2, r3
 80066ec:	d902      	bls.n	80066f4 <SPI_WaitFifoStateUntilTimeout+0x80>
 80066ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066f0:	2b00      	cmp	r3, #0
 80066f2:	d13d      	bne.n	8006770 <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	681b      	ldr	r3, [r3, #0]
 80066f8:	685a      	ldr	r2, [r3, #4]
 80066fa:	68fb      	ldr	r3, [r7, #12]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8006702:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	685b      	ldr	r3, [r3, #4]
 8006708:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800670c:	d111      	bne.n	8006732 <SPI_WaitFifoStateUntilTimeout+0xbe>
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	689b      	ldr	r3, [r3, #8]
 8006712:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8006716:	d004      	beq.n	8006722 <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006718:	68fb      	ldr	r3, [r7, #12]
 800671a:	689b      	ldr	r3, [r3, #8]
 800671c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006720:	d107      	bne.n	8006732 <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006722:	68fb      	ldr	r3, [r7, #12]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	681a      	ldr	r2, [r3, #0]
 8006728:	68fb      	ldr	r3, [r7, #12]
 800672a:	681b      	ldr	r3, [r3, #0]
 800672c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006730:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006732:	68fb      	ldr	r3, [r7, #12]
 8006734:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006736:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800673a:	d10f      	bne.n	800675c <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 800673c:	68fb      	ldr	r3, [r7, #12]
 800673e:	681b      	ldr	r3, [r3, #0]
 8006740:	681a      	ldr	r2, [r3, #0]
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	681b      	ldr	r3, [r3, #0]
 8006746:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800674a:	601a      	str	r2, [r3, #0]
 800674c:	68fb      	ldr	r3, [r7, #12]
 800674e:	681b      	ldr	r3, [r3, #0]
 8006750:	681a      	ldr	r2, [r3, #0]
 8006752:	68fb      	ldr	r3, [r7, #12]
 8006754:	681b      	ldr	r3, [r3, #0]
 8006756:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800675a:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	2201      	movs	r2, #1
 8006760:	f883 205d 	strb.w	r2, [r3, #93]	; 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006764:	68fb      	ldr	r3, [r7, #12]
 8006766:	2200      	movs	r2, #0
 8006768:	f883 205c 	strb.w	r2, [r3, #92]	; 0x5c

        return HAL_TIMEOUT;
 800676c:	2303      	movs	r3, #3
 800676e:	e010      	b.n	8006792 <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006770:	69bb      	ldr	r3, [r7, #24]
 8006772:	2b00      	cmp	r3, #0
 8006774:	d101      	bne.n	800677a <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 8006776:	2300      	movs	r3, #0
 8006778:	627b      	str	r3, [r7, #36]	; 0x24
      }
      count--;
 800677a:	69bb      	ldr	r3, [r7, #24]
 800677c:	3b01      	subs	r3, #1
 800677e:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 8006780:	68fb      	ldr	r3, [r7, #12]
 8006782:	681b      	ldr	r3, [r3, #0]
 8006784:	689a      	ldr	r2, [r3, #8]
 8006786:	68bb      	ldr	r3, [r7, #8]
 8006788:	4013      	ands	r3, r2
 800678a:	687a      	ldr	r2, [r7, #4]
 800678c:	429a      	cmp	r2, r3
 800678e:	d196      	bne.n	80066be <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 8006790:	2300      	movs	r3, #0
}
 8006792:	4618      	mov	r0, r3
 8006794:	3728      	adds	r7, #40	; 0x28
 8006796:	46bd      	mov	sp, r7
 8006798:	bd80      	pop	{r7, pc}
 800679a:	bf00      	nop
 800679c:	20000004 	.word	0x20000004

080067a0 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80067a0:	b580      	push	{r7, lr}
 80067a2:	b088      	sub	sp, #32
 80067a4:	af02      	add	r7, sp, #8
 80067a6:	60f8      	str	r0, [r7, #12]
 80067a8:	60b9      	str	r1, [r7, #8]
 80067aa:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	9300      	str	r3, [sp, #0]
 80067b0:	68bb      	ldr	r3, [r7, #8]
 80067b2:	2200      	movs	r2, #0
 80067b4:	f44f 51c0 	mov.w	r1, #6144	; 0x1800
 80067b8:	68f8      	ldr	r0, [r7, #12]
 80067ba:	f7ff ff5b 	bl	8006674 <SPI_WaitFifoStateUntilTimeout>
 80067be:	4603      	mov	r3, r0
 80067c0:	2b00      	cmp	r3, #0
 80067c2:	d007      	beq.n	80067d4 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80067c8:	f043 0220 	orr.w	r2, r3, #32
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 80067d0:	2303      	movs	r3, #3
 80067d2:	e046      	b.n	8006862 <SPI_EndRxTxTransaction+0xc2>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80067d4:	4b25      	ldr	r3, [pc, #148]	; (800686c <SPI_EndRxTxTransaction+0xcc>)
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	4a25      	ldr	r2, [pc, #148]	; (8006870 <SPI_EndRxTxTransaction+0xd0>)
 80067da:	fba2 2303 	umull	r2, r3, r2, r3
 80067de:	0d5b      	lsrs	r3, r3, #21
 80067e0:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80067e4:	fb02 f303 	mul.w	r3, r2, r3
 80067e8:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80067ea:	68fb      	ldr	r3, [r7, #12]
 80067ec:	685b      	ldr	r3, [r3, #4]
 80067ee:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80067f2:	d112      	bne.n	800681a <SPI_EndRxTxTransaction+0x7a>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	9300      	str	r3, [sp, #0]
 80067f8:	68bb      	ldr	r3, [r7, #8]
 80067fa:	2200      	movs	r2, #0
 80067fc:	2180      	movs	r1, #128	; 0x80
 80067fe:	68f8      	ldr	r0, [r7, #12]
 8006800:	f7ff feb0 	bl	8006564 <SPI_WaitFlagStateUntilTimeout>
 8006804:	4603      	mov	r3, r0
 8006806:	2b00      	cmp	r3, #0
 8006808:	d016      	beq.n	8006838 <SPI_EndRxTxTransaction+0x98>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800680e:	f043 0220 	orr.w	r2, r3, #32
 8006812:	68fb      	ldr	r3, [r7, #12]
 8006814:	661a      	str	r2, [r3, #96]	; 0x60
      return HAL_TIMEOUT;
 8006816:	2303      	movs	r3, #3
 8006818:	e023      	b.n	8006862 <SPI_EndRxTxTransaction+0xc2>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 800681a:	697b      	ldr	r3, [r7, #20]
 800681c:	2b00      	cmp	r3, #0
 800681e:	d00a      	beq.n	8006836 <SPI_EndRxTxTransaction+0x96>
      {
        break;
      }
      count--;
 8006820:	697b      	ldr	r3, [r7, #20]
 8006822:	3b01      	subs	r3, #1
 8006824:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	681b      	ldr	r3, [r3, #0]
 800682a:	689b      	ldr	r3, [r3, #8]
 800682c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006830:	2b80      	cmp	r3, #128	; 0x80
 8006832:	d0f2      	beq.n	800681a <SPI_EndRxTxTransaction+0x7a>
 8006834:	e000      	b.n	8006838 <SPI_EndRxTxTransaction+0x98>
        break;
 8006836:	bf00      	nop
  }


  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	9300      	str	r3, [sp, #0]
 800683c:	68bb      	ldr	r3, [r7, #8]
 800683e:	2200      	movs	r2, #0
 8006840:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8006844:	68f8      	ldr	r0, [r7, #12]
 8006846:	f7ff ff15 	bl	8006674 <SPI_WaitFifoStateUntilTimeout>
 800684a:	4603      	mov	r3, r0
 800684c:	2b00      	cmp	r3, #0
 800684e:	d007      	beq.n	8006860 <SPI_EndRxTxTransaction+0xc0>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006850:	68fb      	ldr	r3, [r7, #12]
 8006852:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8006854:	f043 0220 	orr.w	r2, r3, #32
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	661a      	str	r2, [r3, #96]	; 0x60
    return HAL_TIMEOUT;
 800685c:	2303      	movs	r3, #3
 800685e:	e000      	b.n	8006862 <SPI_EndRxTxTransaction+0xc2>
  }

  return HAL_OK;
 8006860:	2300      	movs	r3, #0
}
 8006862:	4618      	mov	r0, r3
 8006864:	3718      	adds	r7, #24
 8006866:	46bd      	mov	sp, r7
 8006868:	bd80      	pop	{r7, pc}
 800686a:	bf00      	nop
 800686c:	20000004 	.word	0x20000004
 8006870:	165e9f81 	.word	0x165e9f81

08006874 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006874:	b580      	push	{r7, lr}
 8006876:	b082      	sub	sp, #8
 8006878:	af00      	add	r7, sp, #0
 800687a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	2b00      	cmp	r3, #0
 8006880:	d101      	bne.n	8006886 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006882:	2301      	movs	r3, #1
 8006884:	e049      	b.n	800691a <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800688c:	b2db      	uxtb	r3, r3
 800688e:	2b00      	cmp	r3, #0
 8006890:	d106      	bne.n	80068a0 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	2200      	movs	r2, #0
 8006896:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800689a:	6878      	ldr	r0, [r7, #4]
 800689c:	f7fb f920 	bl	8001ae0 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	2202      	movs	r2, #2
 80068a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	681a      	ldr	r2, [r3, #0]
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	3304      	adds	r3, #4
 80068b0:	4619      	mov	r1, r3
 80068b2:	4610      	mov	r0, r2
 80068b4:	f000 fcda 	bl	800726c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	2201      	movs	r2, #1
 80068bc:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2201      	movs	r2, #1
 80068c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	2201      	movs	r2, #1
 80068cc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	2201      	movs	r2, #1
 80068d4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	2201      	movs	r2, #1
 80068dc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80068e0:	687b      	ldr	r3, [r7, #4]
 80068e2:	2201      	movs	r2, #1
 80068e4:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	2201      	movs	r2, #1
 80068ec:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	2201      	movs	r2, #1
 80068f4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	2201      	movs	r2, #1
 80068fc:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	2201      	movs	r2, #1
 8006904:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006908:	687b      	ldr	r3, [r7, #4]
 800690a:	2201      	movs	r2, #1
 800690c:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	2201      	movs	r2, #1
 8006914:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006918:	2300      	movs	r3, #0
}
 800691a:	4618      	mov	r0, r3
 800691c:	3708      	adds	r7, #8
 800691e:	46bd      	mov	sp, r7
 8006920:	bd80      	pop	{r7, pc}
	...

08006924 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8006924:	b480      	push	{r7}
 8006926:	b085      	sub	sp, #20
 8006928:	af00      	add	r7, sp, #0
 800692a:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006932:	b2db      	uxtb	r3, r3
 8006934:	2b01      	cmp	r3, #1
 8006936:	d001      	beq.n	800693c <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006938:	2301      	movs	r3, #1
 800693a:	e054      	b.n	80069e6 <HAL_TIM_Base_Start_IT+0xc2>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	2202      	movs	r2, #2
 8006940:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	68da      	ldr	r2, [r3, #12]
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	f042 0201 	orr.w	r2, r2, #1
 8006952:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	681b      	ldr	r3, [r3, #0]
 8006958:	4a26      	ldr	r2, [pc, #152]	; (80069f4 <HAL_TIM_Base_Start_IT+0xd0>)
 800695a:	4293      	cmp	r3, r2
 800695c:	d022      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006966:	d01d      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	4a22      	ldr	r2, [pc, #136]	; (80069f8 <HAL_TIM_Base_Start_IT+0xd4>)
 800696e:	4293      	cmp	r3, r2
 8006970:	d018      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	681b      	ldr	r3, [r3, #0]
 8006976:	4a21      	ldr	r2, [pc, #132]	; (80069fc <HAL_TIM_Base_Start_IT+0xd8>)
 8006978:	4293      	cmp	r3, r2
 800697a:	d013      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	681b      	ldr	r3, [r3, #0]
 8006980:	4a1f      	ldr	r2, [pc, #124]	; (8006a00 <HAL_TIM_Base_Start_IT+0xdc>)
 8006982:	4293      	cmp	r3, r2
 8006984:	d00e      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	4a1e      	ldr	r2, [pc, #120]	; (8006a04 <HAL_TIM_Base_Start_IT+0xe0>)
 800698c:	4293      	cmp	r3, r2
 800698e:	d009      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	681b      	ldr	r3, [r3, #0]
 8006994:	4a1c      	ldr	r2, [pc, #112]	; (8006a08 <HAL_TIM_Base_Start_IT+0xe4>)
 8006996:	4293      	cmp	r3, r2
 8006998:	d004      	beq.n	80069a4 <HAL_TIM_Base_Start_IT+0x80>
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	681b      	ldr	r3, [r3, #0]
 800699e:	4a1b      	ldr	r2, [pc, #108]	; (8006a0c <HAL_TIM_Base_Start_IT+0xe8>)
 80069a0:	4293      	cmp	r3, r2
 80069a2:	d115      	bne.n	80069d0 <HAL_TIM_Base_Start_IT+0xac>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	681b      	ldr	r3, [r3, #0]
 80069a8:	689a      	ldr	r2, [r3, #8]
 80069aa:	4b19      	ldr	r3, [pc, #100]	; (8006a10 <HAL_TIM_Base_Start_IT+0xec>)
 80069ac:	4013      	ands	r3, r2
 80069ae:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80069b0:	68fb      	ldr	r3, [r7, #12]
 80069b2:	2b06      	cmp	r3, #6
 80069b4:	d015      	beq.n	80069e2 <HAL_TIM_Base_Start_IT+0xbe>
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80069bc:	d011      	beq.n	80069e2 <HAL_TIM_Base_Start_IT+0xbe>
    {
      __HAL_TIM_ENABLE(htim);
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	681a      	ldr	r2, [r3, #0]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f042 0201 	orr.w	r2, r2, #1
 80069cc:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80069ce:	e008      	b.n	80069e2 <HAL_TIM_Base_Start_IT+0xbe>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	681a      	ldr	r2, [r3, #0]
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	f042 0201 	orr.w	r2, r2, #1
 80069de:	601a      	str	r2, [r3, #0]
 80069e0:	e000      	b.n	80069e4 <HAL_TIM_Base_Start_IT+0xc0>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80069e2:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 80069e4:	2300      	movs	r3, #0
}
 80069e6:	4618      	mov	r0, r3
 80069e8:	3714      	adds	r7, #20
 80069ea:	46bd      	mov	sp, r7
 80069ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069f0:	4770      	bx	lr
 80069f2:	bf00      	nop
 80069f4:	40010000 	.word	0x40010000
 80069f8:	40000400 	.word	0x40000400
 80069fc:	40000800 	.word	0x40000800
 8006a00:	40000c00 	.word	0x40000c00
 8006a04:	40010400 	.word	0x40010400
 8006a08:	40014000 	.word	0x40014000
 8006a0c:	40001800 	.word	0x40001800
 8006a10:	00010007 	.word	0x00010007

08006a14 <HAL_TIM_OC_Init>:
  *         Ex: call @ref HAL_TIM_OC_DeInit() before HAL_TIM_OC_Init()
  * @param  htim TIM Output Compare handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef *htim)
{
 8006a14:	b580      	push	{r7, lr}
 8006a16:	b082      	sub	sp, #8
 8006a18:	af00      	add	r7, sp, #0
 8006a1a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	2b00      	cmp	r3, #0
 8006a20:	d101      	bne.n	8006a26 <HAL_TIM_OC_Init+0x12>
  {
    return HAL_ERROR;
 8006a22:	2301      	movs	r3, #1
 8006a24:	e049      	b.n	8006aba <HAL_TIM_OC_Init+0xa6>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006a2c:	b2db      	uxtb	r3, r3
 8006a2e:	2b00      	cmp	r3, #0
 8006a30:	d106      	bne.n	8006a40 <HAL_TIM_OC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	2200      	movs	r2, #0
 8006a36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->OC_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_OC_MspInit(htim);
 8006a3a:	6878      	ldr	r0, [r7, #4]
 8006a3c:	f000 f841 	bl	8006ac2 <HAL_TIM_OC_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	2202      	movs	r2, #2
 8006a44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the Output Compare */
  TIM_Base_SetConfig(htim->Instance,  &htim->Init);
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681a      	ldr	r2, [r3, #0]
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	3304      	adds	r3, #4
 8006a50:	4619      	mov	r1, r3
 8006a52:	4610      	mov	r0, r2
 8006a54:	f000 fc0a 	bl	800726c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006a58:	687b      	ldr	r3, [r7, #4]
 8006a5a:	2201      	movs	r2, #1
 8006a5c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	2201      	movs	r2, #1
 8006a64:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	2201      	movs	r2, #1
 8006a6c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	2201      	movs	r2, #1
 8006a74:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	2201      	movs	r2, #1
 8006a7c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006a80:	687b      	ldr	r3, [r7, #4]
 8006a82:	2201      	movs	r2, #1
 8006a84:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	2201      	movs	r2, #1
 8006a8c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	2201      	movs	r2, #1
 8006a94:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	2201      	movs	r2, #1
 8006a9c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	2201      	movs	r2, #1
 8006aa4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	2201      	movs	r2, #1
 8006aac:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	2201      	movs	r2, #1
 8006ab4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8006ab8:	2300      	movs	r3, #0
}
 8006aba:	4618      	mov	r0, r3
 8006abc:	3708      	adds	r7, #8
 8006abe:	46bd      	mov	sp, r7
 8006ac0:	bd80      	pop	{r7, pc}

08006ac2 <HAL_TIM_OC_MspInit>:
  * @brief  Initializes the TIM Output Compare MSP.
  * @param  htim TIM Output Compare handle
  * @retval None
  */
__weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
{
 8006ac2:	b480      	push	{r7}
 8006ac4:	b083      	sub	sp, #12
 8006ac6:	af00      	add	r7, sp, #0
 8006ac8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_MspInit could be implemented in the user file
   */
}
 8006aca:	bf00      	nop
 8006acc:	370c      	adds	r7, #12
 8006ace:	46bd      	mov	sp, r7
 8006ad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ad4:	4770      	bx	lr
	...

08006ad8 <HAL_TIM_OC_Start_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8006ad8:	b580      	push	{r7, lr}
 8006ada:	b084      	sub	sp, #16
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	6078      	str	r0, [r7, #4]
 8006ae0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8006ae2:	2300      	movs	r3, #0
 8006ae4:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8006ae6:	683b      	ldr	r3, [r7, #0]
 8006ae8:	2b00      	cmp	r3, #0
 8006aea:	d109      	bne.n	8006b00 <HAL_TIM_OC_Start_IT+0x28>
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006af2:	b2db      	uxtb	r3, r3
 8006af4:	2b01      	cmp	r3, #1
 8006af6:	bf14      	ite	ne
 8006af8:	2301      	movne	r3, #1
 8006afa:	2300      	moveq	r3, #0
 8006afc:	b2db      	uxtb	r3, r3
 8006afe:	e03c      	b.n	8006b7a <HAL_TIM_OC_Start_IT+0xa2>
 8006b00:	683b      	ldr	r3, [r7, #0]
 8006b02:	2b04      	cmp	r3, #4
 8006b04:	d109      	bne.n	8006b1a <HAL_TIM_OC_Start_IT+0x42>
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8006b0c:	b2db      	uxtb	r3, r3
 8006b0e:	2b01      	cmp	r3, #1
 8006b10:	bf14      	ite	ne
 8006b12:	2301      	movne	r3, #1
 8006b14:	2300      	moveq	r3, #0
 8006b16:	b2db      	uxtb	r3, r3
 8006b18:	e02f      	b.n	8006b7a <HAL_TIM_OC_Start_IT+0xa2>
 8006b1a:	683b      	ldr	r3, [r7, #0]
 8006b1c:	2b08      	cmp	r3, #8
 8006b1e:	d109      	bne.n	8006b34 <HAL_TIM_OC_Start_IT+0x5c>
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006b26:	b2db      	uxtb	r3, r3
 8006b28:	2b01      	cmp	r3, #1
 8006b2a:	bf14      	ite	ne
 8006b2c:	2301      	movne	r3, #1
 8006b2e:	2300      	moveq	r3, #0
 8006b30:	b2db      	uxtb	r3, r3
 8006b32:	e022      	b.n	8006b7a <HAL_TIM_OC_Start_IT+0xa2>
 8006b34:	683b      	ldr	r3, [r7, #0]
 8006b36:	2b0c      	cmp	r3, #12
 8006b38:	d109      	bne.n	8006b4e <HAL_TIM_OC_Start_IT+0x76>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8006b40:	b2db      	uxtb	r3, r3
 8006b42:	2b01      	cmp	r3, #1
 8006b44:	bf14      	ite	ne
 8006b46:	2301      	movne	r3, #1
 8006b48:	2300      	moveq	r3, #0
 8006b4a:	b2db      	uxtb	r3, r3
 8006b4c:	e015      	b.n	8006b7a <HAL_TIM_OC_Start_IT+0xa2>
 8006b4e:	683b      	ldr	r3, [r7, #0]
 8006b50:	2b10      	cmp	r3, #16
 8006b52:	d109      	bne.n	8006b68 <HAL_TIM_OC_Start_IT+0x90>
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8006b5a:	b2db      	uxtb	r3, r3
 8006b5c:	2b01      	cmp	r3, #1
 8006b5e:	bf14      	ite	ne
 8006b60:	2301      	movne	r3, #1
 8006b62:	2300      	moveq	r3, #0
 8006b64:	b2db      	uxtb	r3, r3
 8006b66:	e008      	b.n	8006b7a <HAL_TIM_OC_Start_IT+0xa2>
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8006b6e:	b2db      	uxtb	r3, r3
 8006b70:	2b01      	cmp	r3, #1
 8006b72:	bf14      	ite	ne
 8006b74:	2301      	movne	r3, #1
 8006b76:	2300      	moveq	r3, #0
 8006b78:	b2db      	uxtb	r3, r3
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d001      	beq.n	8006b82 <HAL_TIM_OC_Start_IT+0xaa>
  {
    return HAL_ERROR;
 8006b7e:	2301      	movs	r3, #1
 8006b80:	e0dd      	b.n	8006d3e <HAL_TIM_OC_Start_IT+0x266>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8006b82:	683b      	ldr	r3, [r7, #0]
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	d104      	bne.n	8006b92 <HAL_TIM_OC_Start_IT+0xba>
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	2202      	movs	r2, #2
 8006b8c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b90:	e023      	b.n	8006bda <HAL_TIM_OC_Start_IT+0x102>
 8006b92:	683b      	ldr	r3, [r7, #0]
 8006b94:	2b04      	cmp	r3, #4
 8006b96:	d104      	bne.n	8006ba2 <HAL_TIM_OC_Start_IT+0xca>
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	2202      	movs	r2, #2
 8006b9c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006ba0:	e01b      	b.n	8006bda <HAL_TIM_OC_Start_IT+0x102>
 8006ba2:	683b      	ldr	r3, [r7, #0]
 8006ba4:	2b08      	cmp	r3, #8
 8006ba6:	d104      	bne.n	8006bb2 <HAL_TIM_OC_Start_IT+0xda>
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	2202      	movs	r2, #2
 8006bac:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006bb0:	e013      	b.n	8006bda <HAL_TIM_OC_Start_IT+0x102>
 8006bb2:	683b      	ldr	r3, [r7, #0]
 8006bb4:	2b0c      	cmp	r3, #12
 8006bb6:	d104      	bne.n	8006bc2 <HAL_TIM_OC_Start_IT+0xea>
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	2202      	movs	r2, #2
 8006bbc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006bc0:	e00b      	b.n	8006bda <HAL_TIM_OC_Start_IT+0x102>
 8006bc2:	683b      	ldr	r3, [r7, #0]
 8006bc4:	2b10      	cmp	r3, #16
 8006bc6:	d104      	bne.n	8006bd2 <HAL_TIM_OC_Start_IT+0xfa>
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	2202      	movs	r2, #2
 8006bcc:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006bd0:	e003      	b.n	8006bda <HAL_TIM_OC_Start_IT+0x102>
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	2202      	movs	r2, #2
 8006bd6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43

  switch (Channel)
 8006bda:	683b      	ldr	r3, [r7, #0]
 8006bdc:	2b0c      	cmp	r3, #12
 8006bde:	d841      	bhi.n	8006c64 <HAL_TIM_OC_Start_IT+0x18c>
 8006be0:	a201      	add	r2, pc, #4	; (adr r2, 8006be8 <HAL_TIM_OC_Start_IT+0x110>)
 8006be2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006be6:	bf00      	nop
 8006be8:	08006c1d 	.word	0x08006c1d
 8006bec:	08006c65 	.word	0x08006c65
 8006bf0:	08006c65 	.word	0x08006c65
 8006bf4:	08006c65 	.word	0x08006c65
 8006bf8:	08006c2f 	.word	0x08006c2f
 8006bfc:	08006c65 	.word	0x08006c65
 8006c00:	08006c65 	.word	0x08006c65
 8006c04:	08006c65 	.word	0x08006c65
 8006c08:	08006c41 	.word	0x08006c41
 8006c0c:	08006c65 	.word	0x08006c65
 8006c10:	08006c65 	.word	0x08006c65
 8006c14:	08006c65 	.word	0x08006c65
 8006c18:	08006c53 	.word	0x08006c53
  {
    case TIM_CHANNEL_1:
    {
      /* Enable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	681b      	ldr	r3, [r3, #0]
 8006c20:	68da      	ldr	r2, [r3, #12]
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	681b      	ldr	r3, [r3, #0]
 8006c26:	f042 0202 	orr.w	r2, r2, #2
 8006c2a:	60da      	str	r2, [r3, #12]
      break;
 8006c2c:	e01d      	b.n	8006c6a <HAL_TIM_OC_Start_IT+0x192>
    }

    case TIM_CHANNEL_2:
    {
      /* Enable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8006c2e:	687b      	ldr	r3, [r7, #4]
 8006c30:	681b      	ldr	r3, [r3, #0]
 8006c32:	68da      	ldr	r2, [r3, #12]
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	f042 0204 	orr.w	r2, r2, #4
 8006c3c:	60da      	str	r2, [r3, #12]
      break;
 8006c3e:	e014      	b.n	8006c6a <HAL_TIM_OC_Start_IT+0x192>
    }

    case TIM_CHANNEL_3:
    {
      /* Enable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	68da      	ldr	r2, [r3, #12]
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	f042 0208 	orr.w	r2, r2, #8
 8006c4e:	60da      	str	r2, [r3, #12]
      break;
 8006c50:	e00b      	b.n	8006c6a <HAL_TIM_OC_Start_IT+0x192>
    }

    case TIM_CHANNEL_4:
    {
      /* Enable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	681b      	ldr	r3, [r3, #0]
 8006c56:	68da      	ldr	r2, [r3, #12]
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	f042 0210 	orr.w	r2, r2, #16
 8006c60:	60da      	str	r2, [r3, #12]
      break;
 8006c62:	e002      	b.n	8006c6a <HAL_TIM_OC_Start_IT+0x192>
    }

    default:
      status = HAL_ERROR;
 8006c64:	2301      	movs	r3, #1
 8006c66:	73fb      	strb	r3, [r7, #15]
      break;
 8006c68:	bf00      	nop
  }

  if (status == HAL_OK)
 8006c6a:	7bfb      	ldrb	r3, [r7, #15]
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d165      	bne.n	8006d3c <HAL_TIM_OC_Start_IT+0x264>
  {
    /* Enable the Output compare channel */
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8006c70:	687b      	ldr	r3, [r7, #4]
 8006c72:	681b      	ldr	r3, [r3, #0]
 8006c74:	2201      	movs	r2, #1
 8006c76:	6839      	ldr	r1, [r7, #0]
 8006c78:	4618      	mov	r0, r3
 8006c7a:	f000 fe8f 	bl	800799c <TIM_CCxChannelCmd>

    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	4a31      	ldr	r2, [pc, #196]	; (8006d48 <HAL_TIM_OC_Start_IT+0x270>)
 8006c84:	4293      	cmp	r3, r2
 8006c86:	d004      	beq.n	8006c92 <HAL_TIM_OC_Start_IT+0x1ba>
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	4a2f      	ldr	r2, [pc, #188]	; (8006d4c <HAL_TIM_OC_Start_IT+0x274>)
 8006c8e:	4293      	cmp	r3, r2
 8006c90:	d101      	bne.n	8006c96 <HAL_TIM_OC_Start_IT+0x1be>
 8006c92:	2301      	movs	r3, #1
 8006c94:	e000      	b.n	8006c98 <HAL_TIM_OC_Start_IT+0x1c0>
 8006c96:	2300      	movs	r3, #0
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	d007      	beq.n	8006cac <HAL_TIM_OC_Start_IT+0x1d4>
    {
      /* Enable the main output */
      __HAL_TIM_MOE_ENABLE(htim);
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	681b      	ldr	r3, [r3, #0]
 8006ca0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	681b      	ldr	r3, [r3, #0]
 8006ca6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006caa:	645a      	str	r2, [r3, #68]	; 0x44
    }

    /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	681b      	ldr	r3, [r3, #0]
 8006cb0:	4a25      	ldr	r2, [pc, #148]	; (8006d48 <HAL_TIM_OC_Start_IT+0x270>)
 8006cb2:	4293      	cmp	r3, r2
 8006cb4:	d022      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	681b      	ldr	r3, [r3, #0]
 8006cba:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006cbe:	d01d      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	681b      	ldr	r3, [r3, #0]
 8006cc4:	4a22      	ldr	r2, [pc, #136]	; (8006d50 <HAL_TIM_OC_Start_IT+0x278>)
 8006cc6:	4293      	cmp	r3, r2
 8006cc8:	d018      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	681b      	ldr	r3, [r3, #0]
 8006cce:	4a21      	ldr	r2, [pc, #132]	; (8006d54 <HAL_TIM_OC_Start_IT+0x27c>)
 8006cd0:	4293      	cmp	r3, r2
 8006cd2:	d013      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	4a1f      	ldr	r2, [pc, #124]	; (8006d58 <HAL_TIM_OC_Start_IT+0x280>)
 8006cda:	4293      	cmp	r3, r2
 8006cdc:	d00e      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	4a1a      	ldr	r2, [pc, #104]	; (8006d4c <HAL_TIM_OC_Start_IT+0x274>)
 8006ce4:	4293      	cmp	r3, r2
 8006ce6:	d009      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	681b      	ldr	r3, [r3, #0]
 8006cec:	4a1b      	ldr	r2, [pc, #108]	; (8006d5c <HAL_TIM_OC_Start_IT+0x284>)
 8006cee:	4293      	cmp	r3, r2
 8006cf0:	d004      	beq.n	8006cfc <HAL_TIM_OC_Start_IT+0x224>
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	681b      	ldr	r3, [r3, #0]
 8006cf6:	4a1a      	ldr	r2, [pc, #104]	; (8006d60 <HAL_TIM_OC_Start_IT+0x288>)
 8006cf8:	4293      	cmp	r3, r2
 8006cfa:	d115      	bne.n	8006d28 <HAL_TIM_OC_Start_IT+0x250>
    {
      tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	689a      	ldr	r2, [r3, #8]
 8006d02:	4b18      	ldr	r3, [pc, #96]	; (8006d64 <HAL_TIM_OC_Start_IT+0x28c>)
 8006d04:	4013      	ands	r3, r2
 8006d06:	60bb      	str	r3, [r7, #8]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006d08:	68bb      	ldr	r3, [r7, #8]
 8006d0a:	2b06      	cmp	r3, #6
 8006d0c:	d015      	beq.n	8006d3a <HAL_TIM_OC_Start_IT+0x262>
 8006d0e:	68bb      	ldr	r3, [r7, #8]
 8006d10:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006d14:	d011      	beq.n	8006d3a <HAL_TIM_OC_Start_IT+0x262>
      {
        __HAL_TIM_ENABLE(htim);
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	681a      	ldr	r2, [r3, #0]
 8006d1c:	687b      	ldr	r3, [r7, #4]
 8006d1e:	681b      	ldr	r3, [r3, #0]
 8006d20:	f042 0201 	orr.w	r2, r2, #1
 8006d24:	601a      	str	r2, [r3, #0]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006d26:	e008      	b.n	8006d3a <HAL_TIM_OC_Start_IT+0x262>
      }
    }
    else
    {
      __HAL_TIM_ENABLE(htim);
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	681a      	ldr	r2, [r3, #0]
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	f042 0201 	orr.w	r2, r2, #1
 8006d36:	601a      	str	r2, [r3, #0]
 8006d38:	e000      	b.n	8006d3c <HAL_TIM_OC_Start_IT+0x264>
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006d3a:	bf00      	nop
    }
  }

  /* Return function status */
  return status;
 8006d3c:	7bfb      	ldrb	r3, [r7, #15]
}
 8006d3e:	4618      	mov	r0, r3
 8006d40:	3710      	adds	r7, #16
 8006d42:	46bd      	mov	sp, r7
 8006d44:	bd80      	pop	{r7, pc}
 8006d46:	bf00      	nop
 8006d48:	40010000 	.word	0x40010000
 8006d4c:	40010400 	.word	0x40010400
 8006d50:	40000400 	.word	0x40000400
 8006d54:	40000800 	.word	0x40000800
 8006d58:	40000c00 	.word	0x40000c00
 8006d5c:	40014000 	.word	0x40014000
 8006d60:	40001800 	.word	0x40001800
 8006d64:	00010007 	.word	0x00010007

08006d68 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8006d68:	b580      	push	{r7, lr}
 8006d6a:	b082      	sub	sp, #8
 8006d6c:	af00      	add	r7, sp, #0
 8006d6e:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	681b      	ldr	r3, [r3, #0]
 8006d74:	691b      	ldr	r3, [r3, #16]
 8006d76:	f003 0302 	and.w	r3, r3, #2
 8006d7a:	2b02      	cmp	r3, #2
 8006d7c:	d122      	bne.n	8006dc4 <HAL_TIM_IRQHandler+0x5c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	681b      	ldr	r3, [r3, #0]
 8006d82:	68db      	ldr	r3, [r3, #12]
 8006d84:	f003 0302 	and.w	r3, r3, #2
 8006d88:	2b02      	cmp	r3, #2
 8006d8a:	d11b      	bne.n	8006dc4 <HAL_TIM_IRQHandler+0x5c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	681b      	ldr	r3, [r3, #0]
 8006d90:	f06f 0202 	mvn.w	r2, #2
 8006d94:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	2201      	movs	r2, #1
 8006d9a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	681b      	ldr	r3, [r3, #0]
 8006da0:	699b      	ldr	r3, [r3, #24]
 8006da2:	f003 0303 	and.w	r3, r3, #3
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	d003      	beq.n	8006db2 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8006daa:	6878      	ldr	r0, [r7, #4]
 8006dac:	f000 fa40 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006db0:	e005      	b.n	8006dbe <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8006db2:	6878      	ldr	r0, [r7, #4]
 8006db4:	f7f9 fc2c 	bl	8000610 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006db8:	6878      	ldr	r0, [r7, #4]
 8006dba:	f000 fa43 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006dbe:	687b      	ldr	r3, [r7, #4]
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	681b      	ldr	r3, [r3, #0]
 8006dc8:	691b      	ldr	r3, [r3, #16]
 8006dca:	f003 0304 	and.w	r3, r3, #4
 8006dce:	2b04      	cmp	r3, #4
 8006dd0:	d122      	bne.n	8006e18 <HAL_TIM_IRQHandler+0xb0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	68db      	ldr	r3, [r3, #12]
 8006dd8:	f003 0304 	and.w	r3, r3, #4
 8006ddc:	2b04      	cmp	r3, #4
 8006dde:	d11b      	bne.n	8006e18 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8006de0:	687b      	ldr	r3, [r7, #4]
 8006de2:	681b      	ldr	r3, [r3, #0]
 8006de4:	f06f 0204 	mvn.w	r2, #4
 8006de8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	2202      	movs	r2, #2
 8006dee:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	681b      	ldr	r3, [r3, #0]
 8006df4:	699b      	ldr	r3, [r3, #24]
 8006df6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d003      	beq.n	8006e06 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006dfe:	6878      	ldr	r0, [r7, #4]
 8006e00:	f000 fa16 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006e04:	e005      	b.n	8006e12 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e06:	6878      	ldr	r0, [r7, #4]
 8006e08:	f7f9 fc02 	bl	8000610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e0c:	6878      	ldr	r0, [r7, #4]
 8006e0e:	f000 fa19 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	2200      	movs	r2, #0
 8006e16:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8006e18:	687b      	ldr	r3, [r7, #4]
 8006e1a:	681b      	ldr	r3, [r3, #0]
 8006e1c:	691b      	ldr	r3, [r3, #16]
 8006e1e:	f003 0308 	and.w	r3, r3, #8
 8006e22:	2b08      	cmp	r3, #8
 8006e24:	d122      	bne.n	8006e6c <HAL_TIM_IRQHandler+0x104>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	681b      	ldr	r3, [r3, #0]
 8006e2a:	68db      	ldr	r3, [r3, #12]
 8006e2c:	f003 0308 	and.w	r3, r3, #8
 8006e30:	2b08      	cmp	r3, #8
 8006e32:	d11b      	bne.n	8006e6c <HAL_TIM_IRQHandler+0x104>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8006e34:	687b      	ldr	r3, [r7, #4]
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	f06f 0208 	mvn.w	r2, #8
 8006e3c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8006e3e:	687b      	ldr	r3, [r7, #4]
 8006e40:	2204      	movs	r2, #4
 8006e42:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8006e44:	687b      	ldr	r3, [r7, #4]
 8006e46:	681b      	ldr	r3, [r3, #0]
 8006e48:	69db      	ldr	r3, [r3, #28]
 8006e4a:	f003 0303 	and.w	r3, r3, #3
 8006e4e:	2b00      	cmp	r3, #0
 8006e50:	d003      	beq.n	8006e5a <HAL_TIM_IRQHandler+0xf2>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006e52:	6878      	ldr	r0, [r7, #4]
 8006e54:	f000 f9ec 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006e58:	e005      	b.n	8006e66 <HAL_TIM_IRQHandler+0xfe>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006e5a:	6878      	ldr	r0, [r7, #4]
 8006e5c:	f7f9 fbd8 	bl	8000610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006e60:	6878      	ldr	r0, [r7, #4]
 8006e62:	f000 f9ef 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	2200      	movs	r2, #0
 8006e6a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	691b      	ldr	r3, [r3, #16]
 8006e72:	f003 0310 	and.w	r3, r3, #16
 8006e76:	2b10      	cmp	r3, #16
 8006e78:	d122      	bne.n	8006ec0 <HAL_TIM_IRQHandler+0x158>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	681b      	ldr	r3, [r3, #0]
 8006e7e:	68db      	ldr	r3, [r3, #12]
 8006e80:	f003 0310 	and.w	r3, r3, #16
 8006e84:	2b10      	cmp	r3, #16
 8006e86:	d11b      	bne.n	8006ec0 <HAL_TIM_IRQHandler+0x158>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f06f 0210 	mvn.w	r2, #16
 8006e90:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	2208      	movs	r2, #8
 8006e96:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	69db      	ldr	r3, [r3, #28]
 8006e9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	d003      	beq.n	8006eae <HAL_TIM_IRQHandler+0x146>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8006ea6:	6878      	ldr	r0, [r7, #4]
 8006ea8:	f000 f9c2 	bl	8007230 <HAL_TIM_IC_CaptureCallback>
 8006eac:	e005      	b.n	8006eba <HAL_TIM_IRQHandler+0x152>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8006eae:	6878      	ldr	r0, [r7, #4]
 8006eb0:	f7f9 fbae 	bl	8000610 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8006eb4:	6878      	ldr	r0, [r7, #4]
 8006eb6:	f000 f9c5 	bl	8007244 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	2200      	movs	r2, #0
 8006ebe:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	691b      	ldr	r3, [r3, #16]
 8006ec6:	f003 0301 	and.w	r3, r3, #1
 8006eca:	2b01      	cmp	r3, #1
 8006ecc:	d10e      	bne.n	8006eec <HAL_TIM_IRQHandler+0x184>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	68db      	ldr	r3, [r3, #12]
 8006ed4:	f003 0301 	and.w	r3, r3, #1
 8006ed8:	2b01      	cmp	r3, #1
 8006eda:	d107      	bne.n	8006eec <HAL_TIM_IRQHandler+0x184>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	681b      	ldr	r3, [r3, #0]
 8006ee0:	f06f 0201 	mvn.w	r2, #1
 8006ee4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8006ee6:	6878      	ldr	r0, [r7, #4]
 8006ee8:	f7fa fb18 	bl	800151c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	681b      	ldr	r3, [r3, #0]
 8006ef0:	691b      	ldr	r3, [r3, #16]
 8006ef2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006ef6:	2b80      	cmp	r3, #128	; 0x80
 8006ef8:	d10e      	bne.n	8006f18 <HAL_TIM_IRQHandler+0x1b0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	681b      	ldr	r3, [r3, #0]
 8006efe:	68db      	ldr	r3, [r3, #12]
 8006f00:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006f04:	2b80      	cmp	r3, #128	; 0x80
 8006f06:	d107      	bne.n	8006f18 <HAL_TIM_IRQHandler+0x1b0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8006f10:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8006f12:	6878      	ldr	r0, [r7, #4]
 8006f14:	f000 fe7e 	bl	8007c14 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	681b      	ldr	r3, [r3, #0]
 8006f1c:	691b      	ldr	r3, [r3, #16]
 8006f1e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006f22:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006f26:	d10e      	bne.n	8006f46 <HAL_TIM_IRQHandler+0x1de>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	681b      	ldr	r3, [r3, #0]
 8006f2c:	68db      	ldr	r3, [r3, #12]
 8006f2e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006f32:	2b80      	cmp	r3, #128	; 0x80
 8006f34:	d107      	bne.n	8006f46 <HAL_TIM_IRQHandler+0x1de>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8006f36:	687b      	ldr	r3, [r7, #4]
 8006f38:	681b      	ldr	r3, [r3, #0]
 8006f3a:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8006f3e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 8006f40:	6878      	ldr	r0, [r7, #4]
 8006f42:	f000 fe71 	bl	8007c28 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	691b      	ldr	r3, [r3, #16]
 8006f4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006f50:	2b40      	cmp	r3, #64	; 0x40
 8006f52:	d10e      	bne.n	8006f72 <HAL_TIM_IRQHandler+0x20a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	68db      	ldr	r3, [r3, #12]
 8006f5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006f5e:	2b40      	cmp	r3, #64	; 0x40
 8006f60:	d107      	bne.n	8006f72 <HAL_TIM_IRQHandler+0x20a>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8006f62:	687b      	ldr	r3, [r7, #4]
 8006f64:	681b      	ldr	r3, [r3, #0]
 8006f66:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8006f6a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8006f6c:	6878      	ldr	r0, [r7, #4]
 8006f6e:	f000 f973 	bl	8007258 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	691b      	ldr	r3, [r3, #16]
 8006f78:	f003 0320 	and.w	r3, r3, #32
 8006f7c:	2b20      	cmp	r3, #32
 8006f7e:	d10e      	bne.n	8006f9e <HAL_TIM_IRQHandler+0x236>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	681b      	ldr	r3, [r3, #0]
 8006f84:	68db      	ldr	r3, [r3, #12]
 8006f86:	f003 0320 	and.w	r3, r3, #32
 8006f8a:	2b20      	cmp	r3, #32
 8006f8c:	d107      	bne.n	8006f9e <HAL_TIM_IRQHandler+0x236>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	f06f 0220 	mvn.w	r2, #32
 8006f96:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8006f98:	6878      	ldr	r0, [r7, #4]
 8006f9a:	f000 fe31 	bl	8007c00 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8006f9e:	bf00      	nop
 8006fa0:	3708      	adds	r7, #8
 8006fa2:	46bd      	mov	sp, r7
 8006fa4:	bd80      	pop	{r7, pc}
	...

08006fa8 <HAL_TIM_OC_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim,
                                           TIM_OC_InitTypeDef *sConfig,
                                           uint32_t Channel)
{
 8006fa8:	b580      	push	{r7, lr}
 8006faa:	b086      	sub	sp, #24
 8006fac:	af00      	add	r7, sp, #0
 8006fae:	60f8      	str	r0, [r7, #12]
 8006fb0:	60b9      	str	r1, [r7, #8]
 8006fb2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8006fb4:	2300      	movs	r3, #0
 8006fb6:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_CHANNELS(Channel));
  assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));

  /* Process Locked */
  __HAL_LOCK(htim);
 8006fb8:	68fb      	ldr	r3, [r7, #12]
 8006fba:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006fbe:	2b01      	cmp	r3, #1
 8006fc0:	d101      	bne.n	8006fc6 <HAL_TIM_OC_ConfigChannel+0x1e>
 8006fc2:	2302      	movs	r3, #2
 8006fc4:	e066      	b.n	8007094 <HAL_TIM_OC_ConfigChannel+0xec>
 8006fc6:	68fb      	ldr	r3, [r7, #12]
 8006fc8:	2201      	movs	r2, #1
 8006fca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  switch (Channel)
 8006fce:	687b      	ldr	r3, [r7, #4]
 8006fd0:	2b14      	cmp	r3, #20
 8006fd2:	d857      	bhi.n	8007084 <HAL_TIM_OC_ConfigChannel+0xdc>
 8006fd4:	a201      	add	r2, pc, #4	; (adr r2, 8006fdc <HAL_TIM_OC_ConfigChannel+0x34>)
 8006fd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006fda:	bf00      	nop
 8006fdc:	08007031 	.word	0x08007031
 8006fe0:	08007085 	.word	0x08007085
 8006fe4:	08007085 	.word	0x08007085
 8006fe8:	08007085 	.word	0x08007085
 8006fec:	0800703f 	.word	0x0800703f
 8006ff0:	08007085 	.word	0x08007085
 8006ff4:	08007085 	.word	0x08007085
 8006ff8:	08007085 	.word	0x08007085
 8006ffc:	0800704d 	.word	0x0800704d
 8007000:	08007085 	.word	0x08007085
 8007004:	08007085 	.word	0x08007085
 8007008:	08007085 	.word	0x08007085
 800700c:	0800705b 	.word	0x0800705b
 8007010:	08007085 	.word	0x08007085
 8007014:	08007085 	.word	0x08007085
 8007018:	08007085 	.word	0x08007085
 800701c:	08007069 	.word	0x08007069
 8007020:	08007085 	.word	0x08007085
 8007024:	08007085 	.word	0x08007085
 8007028:	08007085 	.word	0x08007085
 800702c:	08007077 	.word	0x08007077
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 1 in Output Compare */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007030:	68fb      	ldr	r3, [r7, #12]
 8007032:	681b      	ldr	r3, [r3, #0]
 8007034:	68b9      	ldr	r1, [r7, #8]
 8007036:	4618      	mov	r0, r3
 8007038:	f000 f9b8 	bl	80073ac <TIM_OC1_SetConfig>
      break;
 800703c:	e025      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 2 in Output Compare */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800703e:	68fb      	ldr	r3, [r7, #12]
 8007040:	681b      	ldr	r3, [r3, #0]
 8007042:	68b9      	ldr	r1, [r7, #8]
 8007044:	4618      	mov	r0, r3
 8007046:	f000 fa23 	bl	8007490 <TIM_OC2_SetConfig>
      break;
 800704a:	e01e      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 3 in Output Compare */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800704c:	68fb      	ldr	r3, [r7, #12]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	68b9      	ldr	r1, [r7, #8]
 8007052:	4618      	mov	r0, r3
 8007054:	f000 fa94 	bl	8007580 <TIM_OC3_SetConfig>
      break;
 8007058:	e017      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 4 in Output Compare */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800705a:	68fb      	ldr	r3, [r7, #12]
 800705c:	681b      	ldr	r3, [r3, #0]
 800705e:	68b9      	ldr	r1, [r7, #8]
 8007060:	4618      	mov	r0, r3
 8007062:	f000 fb03 	bl	800766c <TIM_OC4_SetConfig>
      break;
 8007066:	e010      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 5 in Output Compare */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8007068:	68fb      	ldr	r3, [r7, #12]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	68b9      	ldr	r1, [r7, #8]
 800706e:	4618      	mov	r0, r3
 8007070:	f000 fb54 	bl	800771c <TIM_OC5_SetConfig>
      break;
 8007074:	e009      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the TIM Channel 6 in Output Compare */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8007076:	68fb      	ldr	r3, [r7, #12]
 8007078:	681b      	ldr	r3, [r3, #0]
 800707a:	68b9      	ldr	r1, [r7, #8]
 800707c:	4618      	mov	r0, r3
 800707e:	f000 fb9f 	bl	80077c0 <TIM_OC6_SetConfig>
      break;
 8007082:	e002      	b.n	800708a <HAL_TIM_OC_ConfigChannel+0xe2>
    }

    default:
      status = HAL_ERROR;
 8007084:	2301      	movs	r3, #1
 8007086:	75fb      	strb	r3, [r7, #23]
      break;
 8007088:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800708a:	68fb      	ldr	r3, [r7, #12]
 800708c:	2200      	movs	r2, #0
 800708e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8007092:	7dfb      	ldrb	r3, [r7, #23]
}
 8007094:	4618      	mov	r0, r3
 8007096:	3718      	adds	r7, #24
 8007098:	46bd      	mov	sp, r7
 800709a:	bd80      	pop	{r7, pc}

0800709c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800709c:	b580      	push	{r7, lr}
 800709e:	b084      	sub	sp, #16
 80070a0:	af00      	add	r7, sp, #0
 80070a2:	6078      	str	r0, [r7, #4]
 80070a4:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80070a6:	2300      	movs	r3, #0
 80070a8:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80070b0:	2b01      	cmp	r3, #1
 80070b2:	d101      	bne.n	80070b8 <HAL_TIM_ConfigClockSource+0x1c>
 80070b4:	2302      	movs	r3, #2
 80070b6:	e0b4      	b.n	8007222 <HAL_TIM_ConfigClockSource+0x186>
 80070b8:	687b      	ldr	r3, [r7, #4]
 80070ba:	2201      	movs	r2, #1
 80070bc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	2202      	movs	r2, #2
 80070c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	681b      	ldr	r3, [r3, #0]
 80070cc:	689b      	ldr	r3, [r3, #8]
 80070ce:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80070d0:	68ba      	ldr	r2, [r7, #8]
 80070d2:	4b56      	ldr	r3, [pc, #344]	; (800722c <HAL_TIM_ConfigClockSource+0x190>)
 80070d4:	4013      	ands	r3, r2
 80070d6:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80070d8:	68bb      	ldr	r3, [r7, #8]
 80070da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80070de:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80070e0:	687b      	ldr	r3, [r7, #4]
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	68ba      	ldr	r2, [r7, #8]
 80070e6:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80070e8:	683b      	ldr	r3, [r7, #0]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80070f0:	d03e      	beq.n	8007170 <HAL_TIM_ConfigClockSource+0xd4>
 80070f2:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80070f6:	f200 8087 	bhi.w	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 80070fa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80070fe:	f000 8086 	beq.w	800720e <HAL_TIM_ConfigClockSource+0x172>
 8007102:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007106:	d87f      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007108:	2b70      	cmp	r3, #112	; 0x70
 800710a:	d01a      	beq.n	8007142 <HAL_TIM_ConfigClockSource+0xa6>
 800710c:	2b70      	cmp	r3, #112	; 0x70
 800710e:	d87b      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007110:	2b60      	cmp	r3, #96	; 0x60
 8007112:	d050      	beq.n	80071b6 <HAL_TIM_ConfigClockSource+0x11a>
 8007114:	2b60      	cmp	r3, #96	; 0x60
 8007116:	d877      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007118:	2b50      	cmp	r3, #80	; 0x50
 800711a:	d03c      	beq.n	8007196 <HAL_TIM_ConfigClockSource+0xfa>
 800711c:	2b50      	cmp	r3, #80	; 0x50
 800711e:	d873      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007120:	2b40      	cmp	r3, #64	; 0x40
 8007122:	d058      	beq.n	80071d6 <HAL_TIM_ConfigClockSource+0x13a>
 8007124:	2b40      	cmp	r3, #64	; 0x40
 8007126:	d86f      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007128:	2b30      	cmp	r3, #48	; 0x30
 800712a:	d064      	beq.n	80071f6 <HAL_TIM_ConfigClockSource+0x15a>
 800712c:	2b30      	cmp	r3, #48	; 0x30
 800712e:	d86b      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007130:	2b20      	cmp	r3, #32
 8007132:	d060      	beq.n	80071f6 <HAL_TIM_ConfigClockSource+0x15a>
 8007134:	2b20      	cmp	r3, #32
 8007136:	d867      	bhi.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
 8007138:	2b00      	cmp	r3, #0
 800713a:	d05c      	beq.n	80071f6 <HAL_TIM_ConfigClockSource+0x15a>
 800713c:	2b10      	cmp	r3, #16
 800713e:	d05a      	beq.n	80071f6 <HAL_TIM_ConfigClockSource+0x15a>
 8007140:	e062      	b.n	8007208 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007142:	687b      	ldr	r3, [r7, #4]
 8007144:	6818      	ldr	r0, [r3, #0]
 8007146:	683b      	ldr	r3, [r7, #0]
 8007148:	6899      	ldr	r1, [r3, #8]
 800714a:	683b      	ldr	r3, [r7, #0]
 800714c:	685a      	ldr	r2, [r3, #4]
 800714e:	683b      	ldr	r3, [r7, #0]
 8007150:	68db      	ldr	r3, [r3, #12]
 8007152:	f000 fc03 	bl	800795c <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	689b      	ldr	r3, [r3, #8]
 800715c:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800715e:	68bb      	ldr	r3, [r7, #8]
 8007160:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8007164:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8007166:	687b      	ldr	r3, [r7, #4]
 8007168:	681b      	ldr	r3, [r3, #0]
 800716a:	68ba      	ldr	r2, [r7, #8]
 800716c:	609a      	str	r2, [r3, #8]
      break;
 800716e:	e04f      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007170:	687b      	ldr	r3, [r7, #4]
 8007172:	6818      	ldr	r0, [r3, #0]
 8007174:	683b      	ldr	r3, [r7, #0]
 8007176:	6899      	ldr	r1, [r3, #8]
 8007178:	683b      	ldr	r3, [r7, #0]
 800717a:	685a      	ldr	r2, [r3, #4]
 800717c:	683b      	ldr	r3, [r7, #0]
 800717e:	68db      	ldr	r3, [r3, #12]
 8007180:	f000 fbec 	bl	800795c <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	681b      	ldr	r3, [r3, #0]
 8007188:	689a      	ldr	r2, [r3, #8]
 800718a:	687b      	ldr	r3, [r7, #4]
 800718c:	681b      	ldr	r3, [r3, #0]
 800718e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8007192:	609a      	str	r2, [r3, #8]
      break;
 8007194:	e03c      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007196:	687b      	ldr	r3, [r7, #4]
 8007198:	6818      	ldr	r0, [r3, #0]
 800719a:	683b      	ldr	r3, [r7, #0]
 800719c:	6859      	ldr	r1, [r3, #4]
 800719e:	683b      	ldr	r3, [r7, #0]
 80071a0:	68db      	ldr	r3, [r3, #12]
 80071a2:	461a      	mov	r2, r3
 80071a4:	f000 fb60 	bl	8007868 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	681b      	ldr	r3, [r3, #0]
 80071ac:	2150      	movs	r1, #80	; 0x50
 80071ae:	4618      	mov	r0, r3
 80071b0:	f000 fbb9 	bl	8007926 <TIM_ITRx_SetConfig>
      break;
 80071b4:	e02c      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	6818      	ldr	r0, [r3, #0]
 80071ba:	683b      	ldr	r3, [r7, #0]
 80071bc:	6859      	ldr	r1, [r3, #4]
 80071be:	683b      	ldr	r3, [r7, #0]
 80071c0:	68db      	ldr	r3, [r3, #12]
 80071c2:	461a      	mov	r2, r3
 80071c4:	f000 fb7f 	bl	80078c6 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	681b      	ldr	r3, [r3, #0]
 80071cc:	2160      	movs	r1, #96	; 0x60
 80071ce:	4618      	mov	r0, r3
 80071d0:	f000 fba9 	bl	8007926 <TIM_ITRx_SetConfig>
      break;
 80071d4:	e01c      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	6818      	ldr	r0, [r3, #0]
 80071da:	683b      	ldr	r3, [r7, #0]
 80071dc:	6859      	ldr	r1, [r3, #4]
 80071de:	683b      	ldr	r3, [r7, #0]
 80071e0:	68db      	ldr	r3, [r3, #12]
 80071e2:	461a      	mov	r2, r3
 80071e4:	f000 fb40 	bl	8007868 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	681b      	ldr	r3, [r3, #0]
 80071ec:	2140      	movs	r1, #64	; 0x40
 80071ee:	4618      	mov	r0, r3
 80071f0:	f000 fb99 	bl	8007926 <TIM_ITRx_SetConfig>
      break;
 80071f4:	e00c      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80071f6:	687b      	ldr	r3, [r7, #4]
 80071f8:	681a      	ldr	r2, [r3, #0]
 80071fa:	683b      	ldr	r3, [r7, #0]
 80071fc:	681b      	ldr	r3, [r3, #0]
 80071fe:	4619      	mov	r1, r3
 8007200:	4610      	mov	r0, r2
 8007202:	f000 fb90 	bl	8007926 <TIM_ITRx_SetConfig>
      break;
 8007206:	e003      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8007208:	2301      	movs	r3, #1
 800720a:	73fb      	strb	r3, [r7, #15]
      break;
 800720c:	e000      	b.n	8007210 <HAL_TIM_ConfigClockSource+0x174>
      break;
 800720e:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	2201      	movs	r2, #1
 8007214:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	2200      	movs	r2, #0
 800721c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8007220:	7bfb      	ldrb	r3, [r7, #15]
}
 8007222:	4618      	mov	r0, r3
 8007224:	3710      	adds	r7, #16
 8007226:	46bd      	mov	sp, r7
 8007228:	bd80      	pop	{r7, pc}
 800722a:	bf00      	nop
 800722c:	fffeff88 	.word	0xfffeff88

08007230 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007230:	b480      	push	{r7}
 8007232:	b083      	sub	sp, #12
 8007234:	af00      	add	r7, sp, #0
 8007236:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8007238:	bf00      	nop
 800723a:	370c      	adds	r7, #12
 800723c:	46bd      	mov	sp, r7
 800723e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007242:	4770      	bx	lr

08007244 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8007244:	b480      	push	{r7}
 8007246:	b083      	sub	sp, #12
 8007248:	af00      	add	r7, sp, #0
 800724a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800724c:	bf00      	nop
 800724e:	370c      	adds	r7, #12
 8007250:	46bd      	mov	sp, r7
 8007252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007256:	4770      	bx	lr

08007258 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 8007258:	b480      	push	{r7}
 800725a:	b083      	sub	sp, #12
 800725c:	af00      	add	r7, sp, #0
 800725e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007260:	bf00      	nop
 8007262:	370c      	adds	r7, #12
 8007264:	46bd      	mov	sp, r7
 8007266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800726a:	4770      	bx	lr

0800726c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 800726c:	b480      	push	{r7}
 800726e:	b085      	sub	sp, #20
 8007270:	af00      	add	r7, sp, #0
 8007272:	6078      	str	r0, [r7, #4]
 8007274:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	681b      	ldr	r3, [r3, #0]
 800727a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	4a40      	ldr	r2, [pc, #256]	; (8007380 <TIM_Base_SetConfig+0x114>)
 8007280:	4293      	cmp	r3, r2
 8007282:	d013      	beq.n	80072ac <TIM_Base_SetConfig+0x40>
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800728a:	d00f      	beq.n	80072ac <TIM_Base_SetConfig+0x40>
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	4a3d      	ldr	r2, [pc, #244]	; (8007384 <TIM_Base_SetConfig+0x118>)
 8007290:	4293      	cmp	r3, r2
 8007292:	d00b      	beq.n	80072ac <TIM_Base_SetConfig+0x40>
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	4a3c      	ldr	r2, [pc, #240]	; (8007388 <TIM_Base_SetConfig+0x11c>)
 8007298:	4293      	cmp	r3, r2
 800729a:	d007      	beq.n	80072ac <TIM_Base_SetConfig+0x40>
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	4a3b      	ldr	r2, [pc, #236]	; (800738c <TIM_Base_SetConfig+0x120>)
 80072a0:	4293      	cmp	r3, r2
 80072a2:	d003      	beq.n	80072ac <TIM_Base_SetConfig+0x40>
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	4a3a      	ldr	r2, [pc, #232]	; (8007390 <TIM_Base_SetConfig+0x124>)
 80072a8:	4293      	cmp	r3, r2
 80072aa:	d108      	bne.n	80072be <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80072ac:	68fb      	ldr	r3, [r7, #12]
 80072ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80072b2:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80072b4:	683b      	ldr	r3, [r7, #0]
 80072b6:	685b      	ldr	r3, [r3, #4]
 80072b8:	68fa      	ldr	r2, [r7, #12]
 80072ba:	4313      	orrs	r3, r2
 80072bc:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	4a2f      	ldr	r2, [pc, #188]	; (8007380 <TIM_Base_SetConfig+0x114>)
 80072c2:	4293      	cmp	r3, r2
 80072c4:	d02b      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80072cc:	d027      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	4a2c      	ldr	r2, [pc, #176]	; (8007384 <TIM_Base_SetConfig+0x118>)
 80072d2:	4293      	cmp	r3, r2
 80072d4:	d023      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	4a2b      	ldr	r2, [pc, #172]	; (8007388 <TIM_Base_SetConfig+0x11c>)
 80072da:	4293      	cmp	r3, r2
 80072dc:	d01f      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	4a2a      	ldr	r2, [pc, #168]	; (800738c <TIM_Base_SetConfig+0x120>)
 80072e2:	4293      	cmp	r3, r2
 80072e4:	d01b      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	4a29      	ldr	r2, [pc, #164]	; (8007390 <TIM_Base_SetConfig+0x124>)
 80072ea:	4293      	cmp	r3, r2
 80072ec:	d017      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	4a28      	ldr	r2, [pc, #160]	; (8007394 <TIM_Base_SetConfig+0x128>)
 80072f2:	4293      	cmp	r3, r2
 80072f4:	d013      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	4a27      	ldr	r2, [pc, #156]	; (8007398 <TIM_Base_SetConfig+0x12c>)
 80072fa:	4293      	cmp	r3, r2
 80072fc:	d00f      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	4a26      	ldr	r2, [pc, #152]	; (800739c <TIM_Base_SetConfig+0x130>)
 8007302:	4293      	cmp	r3, r2
 8007304:	d00b      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	4a25      	ldr	r2, [pc, #148]	; (80073a0 <TIM_Base_SetConfig+0x134>)
 800730a:	4293      	cmp	r3, r2
 800730c:	d007      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	4a24      	ldr	r2, [pc, #144]	; (80073a4 <TIM_Base_SetConfig+0x138>)
 8007312:	4293      	cmp	r3, r2
 8007314:	d003      	beq.n	800731e <TIM_Base_SetConfig+0xb2>
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	4a23      	ldr	r2, [pc, #140]	; (80073a8 <TIM_Base_SetConfig+0x13c>)
 800731a:	4293      	cmp	r3, r2
 800731c:	d108      	bne.n	8007330 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800731e:	68fb      	ldr	r3, [r7, #12]
 8007320:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007324:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8007326:	683b      	ldr	r3, [r7, #0]
 8007328:	68db      	ldr	r3, [r3, #12]
 800732a:	68fa      	ldr	r2, [r7, #12]
 800732c:	4313      	orrs	r3, r2
 800732e:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007330:	68fb      	ldr	r3, [r7, #12]
 8007332:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8007336:	683b      	ldr	r3, [r7, #0]
 8007338:	695b      	ldr	r3, [r3, #20]
 800733a:	4313      	orrs	r3, r2
 800733c:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	68fa      	ldr	r2, [r7, #12]
 8007342:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8007344:	683b      	ldr	r3, [r7, #0]
 8007346:	689a      	ldr	r2, [r3, #8]
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800734c:	683b      	ldr	r3, [r7, #0]
 800734e:	681a      	ldr	r2, [r3, #0]
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	4a0a      	ldr	r2, [pc, #40]	; (8007380 <TIM_Base_SetConfig+0x114>)
 8007358:	4293      	cmp	r3, r2
 800735a:	d003      	beq.n	8007364 <TIM_Base_SetConfig+0xf8>
 800735c:	687b      	ldr	r3, [r7, #4]
 800735e:	4a0c      	ldr	r2, [pc, #48]	; (8007390 <TIM_Base_SetConfig+0x124>)
 8007360:	4293      	cmp	r3, r2
 8007362:	d103      	bne.n	800736c <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007364:	683b      	ldr	r3, [r7, #0]
 8007366:	691a      	ldr	r2, [r3, #16]
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	2201      	movs	r2, #1
 8007370:	615a      	str	r2, [r3, #20]
}
 8007372:	bf00      	nop
 8007374:	3714      	adds	r7, #20
 8007376:	46bd      	mov	sp, r7
 8007378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800737c:	4770      	bx	lr
 800737e:	bf00      	nop
 8007380:	40010000 	.word	0x40010000
 8007384:	40000400 	.word	0x40000400
 8007388:	40000800 	.word	0x40000800
 800738c:	40000c00 	.word	0x40000c00
 8007390:	40010400 	.word	0x40010400
 8007394:	40014000 	.word	0x40014000
 8007398:	40014400 	.word	0x40014400
 800739c:	40014800 	.word	0x40014800
 80073a0:	40001800 	.word	0x40001800
 80073a4:	40001c00 	.word	0x40001c00
 80073a8:	40002000 	.word	0x40002000

080073ac <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 80073ac:	b480      	push	{r7}
 80073ae:	b087      	sub	sp, #28
 80073b0:	af00      	add	r7, sp, #0
 80073b2:	6078      	str	r0, [r7, #4]
 80073b4:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	6a1b      	ldr	r3, [r3, #32]
 80073ba:	f023 0201 	bic.w	r2, r3, #1
 80073be:	687b      	ldr	r3, [r7, #4]
 80073c0:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80073c2:	687b      	ldr	r3, [r7, #4]
 80073c4:	6a1b      	ldr	r3, [r3, #32]
 80073c6:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	685b      	ldr	r3, [r3, #4]
 80073cc:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	699b      	ldr	r3, [r3, #24]
 80073d2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 80073d4:	68fa      	ldr	r2, [r7, #12]
 80073d6:	4b2b      	ldr	r3, [pc, #172]	; (8007484 <TIM_OC1_SetConfig+0xd8>)
 80073d8:	4013      	ands	r3, r2
 80073da:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80073dc:	68fb      	ldr	r3, [r7, #12]
 80073de:	f023 0303 	bic.w	r3, r3, #3
 80073e2:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80073e4:	683b      	ldr	r3, [r7, #0]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	68fa      	ldr	r2, [r7, #12]
 80073ea:	4313      	orrs	r3, r2
 80073ec:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 80073ee:	697b      	ldr	r3, [r7, #20]
 80073f0:	f023 0302 	bic.w	r3, r3, #2
 80073f4:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80073f6:	683b      	ldr	r3, [r7, #0]
 80073f8:	689b      	ldr	r3, [r3, #8]
 80073fa:	697a      	ldr	r2, [r7, #20]
 80073fc:	4313      	orrs	r3, r2
 80073fe:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	4a21      	ldr	r2, [pc, #132]	; (8007488 <TIM_OC1_SetConfig+0xdc>)
 8007404:	4293      	cmp	r3, r2
 8007406:	d003      	beq.n	8007410 <TIM_OC1_SetConfig+0x64>
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	4a20      	ldr	r2, [pc, #128]	; (800748c <TIM_OC1_SetConfig+0xe0>)
 800740c:	4293      	cmp	r3, r2
 800740e:	d10c      	bne.n	800742a <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007410:	697b      	ldr	r3, [r7, #20]
 8007412:	f023 0308 	bic.w	r3, r3, #8
 8007416:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007418:	683b      	ldr	r3, [r7, #0]
 800741a:	68db      	ldr	r3, [r3, #12]
 800741c:	697a      	ldr	r2, [r7, #20]
 800741e:	4313      	orrs	r3, r2
 8007420:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007422:	697b      	ldr	r3, [r7, #20]
 8007424:	f023 0304 	bic.w	r3, r3, #4
 8007428:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	4a16      	ldr	r2, [pc, #88]	; (8007488 <TIM_OC1_SetConfig+0xdc>)
 800742e:	4293      	cmp	r3, r2
 8007430:	d003      	beq.n	800743a <TIM_OC1_SetConfig+0x8e>
 8007432:	687b      	ldr	r3, [r7, #4]
 8007434:	4a15      	ldr	r2, [pc, #84]	; (800748c <TIM_OC1_SetConfig+0xe0>)
 8007436:	4293      	cmp	r3, r2
 8007438:	d111      	bne.n	800745e <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800743a:	693b      	ldr	r3, [r7, #16]
 800743c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007440:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007442:	693b      	ldr	r3, [r7, #16]
 8007444:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8007448:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800744a:	683b      	ldr	r3, [r7, #0]
 800744c:	695b      	ldr	r3, [r3, #20]
 800744e:	693a      	ldr	r2, [r7, #16]
 8007450:	4313      	orrs	r3, r2
 8007452:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007454:	683b      	ldr	r3, [r7, #0]
 8007456:	699b      	ldr	r3, [r3, #24]
 8007458:	693a      	ldr	r2, [r7, #16]
 800745a:	4313      	orrs	r3, r2
 800745c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	693a      	ldr	r2, [r7, #16]
 8007462:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	68fa      	ldr	r2, [r7, #12]
 8007468:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800746a:	683b      	ldr	r3, [r7, #0]
 800746c:	685a      	ldr	r2, [r3, #4]
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	697a      	ldr	r2, [r7, #20]
 8007476:	621a      	str	r2, [r3, #32]
}
 8007478:	bf00      	nop
 800747a:	371c      	adds	r7, #28
 800747c:	46bd      	mov	sp, r7
 800747e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007482:	4770      	bx	lr
 8007484:	fffeff8f 	.word	0xfffeff8f
 8007488:	40010000 	.word	0x40010000
 800748c:	40010400 	.word	0x40010400

08007490 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8007490:	b480      	push	{r7}
 8007492:	b087      	sub	sp, #28
 8007494:	af00      	add	r7, sp, #0
 8007496:	6078      	str	r0, [r7, #4]
 8007498:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800749a:	687b      	ldr	r3, [r7, #4]
 800749c:	6a1b      	ldr	r3, [r3, #32]
 800749e:	f023 0210 	bic.w	r2, r3, #16
 80074a2:	687b      	ldr	r3, [r7, #4]
 80074a4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	6a1b      	ldr	r3, [r3, #32]
 80074aa:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	685b      	ldr	r3, [r3, #4]
 80074b0:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	699b      	ldr	r3, [r3, #24]
 80074b6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 80074b8:	68fa      	ldr	r2, [r7, #12]
 80074ba:	4b2e      	ldr	r3, [pc, #184]	; (8007574 <TIM_OC2_SetConfig+0xe4>)
 80074bc:	4013      	ands	r3, r2
 80074be:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 80074c0:	68fb      	ldr	r3, [r7, #12]
 80074c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80074c6:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80074c8:	683b      	ldr	r3, [r7, #0]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	021b      	lsls	r3, r3, #8
 80074ce:	68fa      	ldr	r2, [r7, #12]
 80074d0:	4313      	orrs	r3, r2
 80074d2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 80074d4:	697b      	ldr	r3, [r7, #20]
 80074d6:	f023 0320 	bic.w	r3, r3, #32
 80074da:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80074dc:	683b      	ldr	r3, [r7, #0]
 80074de:	689b      	ldr	r3, [r3, #8]
 80074e0:	011b      	lsls	r3, r3, #4
 80074e2:	697a      	ldr	r2, [r7, #20]
 80074e4:	4313      	orrs	r3, r2
 80074e6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	4a23      	ldr	r2, [pc, #140]	; (8007578 <TIM_OC2_SetConfig+0xe8>)
 80074ec:	4293      	cmp	r3, r2
 80074ee:	d003      	beq.n	80074f8 <TIM_OC2_SetConfig+0x68>
 80074f0:	687b      	ldr	r3, [r7, #4]
 80074f2:	4a22      	ldr	r2, [pc, #136]	; (800757c <TIM_OC2_SetConfig+0xec>)
 80074f4:	4293      	cmp	r3, r2
 80074f6:	d10d      	bne.n	8007514 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 80074f8:	697b      	ldr	r3, [r7, #20]
 80074fa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80074fe:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007500:	683b      	ldr	r3, [r7, #0]
 8007502:	68db      	ldr	r3, [r3, #12]
 8007504:	011b      	lsls	r3, r3, #4
 8007506:	697a      	ldr	r2, [r7, #20]
 8007508:	4313      	orrs	r3, r2
 800750a:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800750c:	697b      	ldr	r3, [r7, #20]
 800750e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007512:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	4a18      	ldr	r2, [pc, #96]	; (8007578 <TIM_OC2_SetConfig+0xe8>)
 8007518:	4293      	cmp	r3, r2
 800751a:	d003      	beq.n	8007524 <TIM_OC2_SetConfig+0x94>
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	4a17      	ldr	r2, [pc, #92]	; (800757c <TIM_OC2_SetConfig+0xec>)
 8007520:	4293      	cmp	r3, r2
 8007522:	d113      	bne.n	800754c <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007524:	693b      	ldr	r3, [r7, #16]
 8007526:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800752a:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800752c:	693b      	ldr	r3, [r7, #16]
 800752e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007532:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007534:	683b      	ldr	r3, [r7, #0]
 8007536:	695b      	ldr	r3, [r3, #20]
 8007538:	009b      	lsls	r3, r3, #2
 800753a:	693a      	ldr	r2, [r7, #16]
 800753c:	4313      	orrs	r3, r2
 800753e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007540:	683b      	ldr	r3, [r7, #0]
 8007542:	699b      	ldr	r3, [r3, #24]
 8007544:	009b      	lsls	r3, r3, #2
 8007546:	693a      	ldr	r2, [r7, #16]
 8007548:	4313      	orrs	r3, r2
 800754a:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	693a      	ldr	r2, [r7, #16]
 8007550:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	68fa      	ldr	r2, [r7, #12]
 8007556:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007558:	683b      	ldr	r3, [r7, #0]
 800755a:	685a      	ldr	r2, [r3, #4]
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	697a      	ldr	r2, [r7, #20]
 8007564:	621a      	str	r2, [r3, #32]
}
 8007566:	bf00      	nop
 8007568:	371c      	adds	r7, #28
 800756a:	46bd      	mov	sp, r7
 800756c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007570:	4770      	bx	lr
 8007572:	bf00      	nop
 8007574:	feff8fff 	.word	0xfeff8fff
 8007578:	40010000 	.word	0x40010000
 800757c:	40010400 	.word	0x40010400

08007580 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 8007580:	b480      	push	{r7}
 8007582:	b087      	sub	sp, #28
 8007584:	af00      	add	r7, sp, #0
 8007586:	6078      	str	r0, [r7, #4]
 8007588:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	6a1b      	ldr	r3, [r3, #32]
 800758e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007592:	687b      	ldr	r3, [r7, #4]
 8007594:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	6a1b      	ldr	r3, [r3, #32]
 800759a:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800759c:	687b      	ldr	r3, [r7, #4]
 800759e:	685b      	ldr	r3, [r3, #4]
 80075a0:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	69db      	ldr	r3, [r3, #28]
 80075a6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80075a8:	68fa      	ldr	r2, [r7, #12]
 80075aa:	4b2d      	ldr	r3, [pc, #180]	; (8007660 <TIM_OC3_SetConfig+0xe0>)
 80075ac:	4013      	ands	r3, r2
 80075ae:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 80075b0:	68fb      	ldr	r3, [r7, #12]
 80075b2:	f023 0303 	bic.w	r3, r3, #3
 80075b6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80075b8:	683b      	ldr	r3, [r7, #0]
 80075ba:	681b      	ldr	r3, [r3, #0]
 80075bc:	68fa      	ldr	r2, [r7, #12]
 80075be:	4313      	orrs	r3, r2
 80075c0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 80075c2:	697b      	ldr	r3, [r7, #20]
 80075c4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80075c8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 80075ca:	683b      	ldr	r3, [r7, #0]
 80075cc:	689b      	ldr	r3, [r3, #8]
 80075ce:	021b      	lsls	r3, r3, #8
 80075d0:	697a      	ldr	r2, [r7, #20]
 80075d2:	4313      	orrs	r3, r2
 80075d4:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	4a22      	ldr	r2, [pc, #136]	; (8007664 <TIM_OC3_SetConfig+0xe4>)
 80075da:	4293      	cmp	r3, r2
 80075dc:	d003      	beq.n	80075e6 <TIM_OC3_SetConfig+0x66>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	4a21      	ldr	r2, [pc, #132]	; (8007668 <TIM_OC3_SetConfig+0xe8>)
 80075e2:	4293      	cmp	r3, r2
 80075e4:	d10d      	bne.n	8007602 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 80075e6:	697b      	ldr	r3, [r7, #20]
 80075e8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80075ec:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80075ee:	683b      	ldr	r3, [r7, #0]
 80075f0:	68db      	ldr	r3, [r3, #12]
 80075f2:	021b      	lsls	r3, r3, #8
 80075f4:	697a      	ldr	r2, [r7, #20]
 80075f6:	4313      	orrs	r3, r2
 80075f8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 80075fa:	697b      	ldr	r3, [r7, #20]
 80075fc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8007600:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	4a17      	ldr	r2, [pc, #92]	; (8007664 <TIM_OC3_SetConfig+0xe4>)
 8007606:	4293      	cmp	r3, r2
 8007608:	d003      	beq.n	8007612 <TIM_OC3_SetConfig+0x92>
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	4a16      	ldr	r2, [pc, #88]	; (8007668 <TIM_OC3_SetConfig+0xe8>)
 800760e:	4293      	cmp	r3, r2
 8007610:	d113      	bne.n	800763a <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007612:	693b      	ldr	r3, [r7, #16]
 8007614:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8007618:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800761a:	693b      	ldr	r3, [r7, #16]
 800761c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007620:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007622:	683b      	ldr	r3, [r7, #0]
 8007624:	695b      	ldr	r3, [r3, #20]
 8007626:	011b      	lsls	r3, r3, #4
 8007628:	693a      	ldr	r2, [r7, #16]
 800762a:	4313      	orrs	r3, r2
 800762c:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800762e:	683b      	ldr	r3, [r7, #0]
 8007630:	699b      	ldr	r3, [r3, #24]
 8007632:	011b      	lsls	r3, r3, #4
 8007634:	693a      	ldr	r2, [r7, #16]
 8007636:	4313      	orrs	r3, r2
 8007638:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	693a      	ldr	r2, [r7, #16]
 800763e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	68fa      	ldr	r2, [r7, #12]
 8007644:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007646:	683b      	ldr	r3, [r7, #0]
 8007648:	685a      	ldr	r2, [r3, #4]
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	697a      	ldr	r2, [r7, #20]
 8007652:	621a      	str	r2, [r3, #32]
}
 8007654:	bf00      	nop
 8007656:	371c      	adds	r7, #28
 8007658:	46bd      	mov	sp, r7
 800765a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800765e:	4770      	bx	lr
 8007660:	fffeff8f 	.word	0xfffeff8f
 8007664:	40010000 	.word	0x40010000
 8007668:	40010400 	.word	0x40010400

0800766c <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 800766c:	b480      	push	{r7}
 800766e:	b087      	sub	sp, #28
 8007670:	af00      	add	r7, sp, #0
 8007672:	6078      	str	r0, [r7, #4]
 8007674:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	6a1b      	ldr	r3, [r3, #32]
 800767a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	6a1b      	ldr	r3, [r3, #32]
 8007686:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	685b      	ldr	r3, [r3, #4]
 800768c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	69db      	ldr	r3, [r3, #28]
 8007692:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007694:	68fa      	ldr	r2, [r7, #12]
 8007696:	4b1e      	ldr	r3, [pc, #120]	; (8007710 <TIM_OC4_SetConfig+0xa4>)
 8007698:	4013      	ands	r3, r2
 800769a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800769c:	68fb      	ldr	r3, [r7, #12]
 800769e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80076a2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80076a4:	683b      	ldr	r3, [r7, #0]
 80076a6:	681b      	ldr	r3, [r3, #0]
 80076a8:	021b      	lsls	r3, r3, #8
 80076aa:	68fa      	ldr	r2, [r7, #12]
 80076ac:	4313      	orrs	r3, r2
 80076ae:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 80076b0:	693b      	ldr	r3, [r7, #16]
 80076b2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80076b6:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 80076b8:	683b      	ldr	r3, [r7, #0]
 80076ba:	689b      	ldr	r3, [r3, #8]
 80076bc:	031b      	lsls	r3, r3, #12
 80076be:	693a      	ldr	r2, [r7, #16]
 80076c0:	4313      	orrs	r3, r2
 80076c2:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	4a13      	ldr	r2, [pc, #76]	; (8007714 <TIM_OC4_SetConfig+0xa8>)
 80076c8:	4293      	cmp	r3, r2
 80076ca:	d003      	beq.n	80076d4 <TIM_OC4_SetConfig+0x68>
 80076cc:	687b      	ldr	r3, [r7, #4]
 80076ce:	4a12      	ldr	r2, [pc, #72]	; (8007718 <TIM_OC4_SetConfig+0xac>)
 80076d0:	4293      	cmp	r3, r2
 80076d2:	d109      	bne.n	80076e8 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 80076d4:	697b      	ldr	r3, [r7, #20]
 80076d6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80076da:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 80076dc:	683b      	ldr	r3, [r7, #0]
 80076de:	695b      	ldr	r3, [r3, #20]
 80076e0:	019b      	lsls	r3, r3, #6
 80076e2:	697a      	ldr	r2, [r7, #20]
 80076e4:	4313      	orrs	r3, r2
 80076e6:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	697a      	ldr	r2, [r7, #20]
 80076ec:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	68fa      	ldr	r2, [r7, #12]
 80076f2:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 80076f4:	683b      	ldr	r3, [r7, #0]
 80076f6:	685a      	ldr	r2, [r3, #4]
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	693a      	ldr	r2, [r7, #16]
 8007700:	621a      	str	r2, [r3, #32]
}
 8007702:	bf00      	nop
 8007704:	371c      	adds	r7, #28
 8007706:	46bd      	mov	sp, r7
 8007708:	f85d 7b04 	ldr.w	r7, [sp], #4
 800770c:	4770      	bx	lr
 800770e:	bf00      	nop
 8007710:	feff8fff 	.word	0xfeff8fff
 8007714:	40010000 	.word	0x40010000
 8007718:	40010400 	.word	0x40010400

0800771c <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              TIM_OC_InitTypeDef *OC_Config)
{
 800771c:	b480      	push	{r7}
 800771e:	b087      	sub	sp, #28
 8007720:	af00      	add	r7, sp, #0
 8007722:	6078      	str	r0, [r7, #4]
 8007724:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	6a1b      	ldr	r3, [r3, #32]
 800772a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007732:	687b      	ldr	r3, [r7, #4]
 8007734:	6a1b      	ldr	r3, [r3, #32]
 8007736:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	685b      	ldr	r3, [r3, #4]
 800773c:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8007742:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8007744:	68fa      	ldr	r2, [r7, #12]
 8007746:	4b1b      	ldr	r3, [pc, #108]	; (80077b4 <TIM_OC5_SetConfig+0x98>)
 8007748:	4013      	ands	r3, r2
 800774a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800774c:	683b      	ldr	r3, [r7, #0]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	68fa      	ldr	r2, [r7, #12]
 8007752:	4313      	orrs	r3, r2
 8007754:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 8007756:	693b      	ldr	r3, [r7, #16]
 8007758:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800775c:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800775e:	683b      	ldr	r3, [r7, #0]
 8007760:	689b      	ldr	r3, [r3, #8]
 8007762:	041b      	lsls	r3, r3, #16
 8007764:	693a      	ldr	r2, [r7, #16]
 8007766:	4313      	orrs	r3, r2
 8007768:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	4a12      	ldr	r2, [pc, #72]	; (80077b8 <TIM_OC5_SetConfig+0x9c>)
 800776e:	4293      	cmp	r3, r2
 8007770:	d003      	beq.n	800777a <TIM_OC5_SetConfig+0x5e>
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	4a11      	ldr	r2, [pc, #68]	; (80077bc <TIM_OC5_SetConfig+0xa0>)
 8007776:	4293      	cmp	r3, r2
 8007778:	d109      	bne.n	800778e <TIM_OC5_SetConfig+0x72>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 800777a:	697b      	ldr	r3, [r7, #20]
 800777c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007780:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8007782:	683b      	ldr	r3, [r7, #0]
 8007784:	695b      	ldr	r3, [r3, #20]
 8007786:	021b      	lsls	r3, r3, #8
 8007788:	697a      	ldr	r2, [r7, #20]
 800778a:	4313      	orrs	r3, r2
 800778c:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800778e:	687b      	ldr	r3, [r7, #4]
 8007790:	697a      	ldr	r2, [r7, #20]
 8007792:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	68fa      	ldr	r2, [r7, #12]
 8007798:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 800779a:	683b      	ldr	r3, [r7, #0]
 800779c:	685a      	ldr	r2, [r3, #4]
 800779e:	687b      	ldr	r3, [r7, #4]
 80077a0:	659a      	str	r2, [r3, #88]	; 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	693a      	ldr	r2, [r7, #16]
 80077a6:	621a      	str	r2, [r3, #32]
}
 80077a8:	bf00      	nop
 80077aa:	371c      	adds	r7, #28
 80077ac:	46bd      	mov	sp, r7
 80077ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077b2:	4770      	bx	lr
 80077b4:	fffeff8f 	.word	0xfffeff8f
 80077b8:	40010000 	.word	0x40010000
 80077bc:	40010400 	.word	0x40010400

080077c0 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              TIM_OC_InitTypeDef *OC_Config)
{
 80077c0:	b480      	push	{r7}
 80077c2:	b087      	sub	sp, #28
 80077c4:	af00      	add	r7, sp, #0
 80077c6:	6078      	str	r0, [r7, #4]
 80077c8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 80077ca:	687b      	ldr	r3, [r7, #4]
 80077cc:	6a1b      	ldr	r3, [r3, #32]
 80077ce:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	6a1b      	ldr	r3, [r3, #32]
 80077da:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	685b      	ldr	r3, [r3, #4]
 80077e0:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80077e6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 80077e8:	68fa      	ldr	r2, [r7, #12]
 80077ea:	4b1c      	ldr	r3, [pc, #112]	; (800785c <TIM_OC6_SetConfig+0x9c>)
 80077ec:	4013      	ands	r3, r2
 80077ee:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80077f0:	683b      	ldr	r3, [r7, #0]
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	021b      	lsls	r3, r3, #8
 80077f6:	68fa      	ldr	r2, [r7, #12]
 80077f8:	4313      	orrs	r3, r2
 80077fa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 80077fc:	693b      	ldr	r3, [r7, #16]
 80077fe:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8007802:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8007804:	683b      	ldr	r3, [r7, #0]
 8007806:	689b      	ldr	r3, [r3, #8]
 8007808:	051b      	lsls	r3, r3, #20
 800780a:	693a      	ldr	r2, [r7, #16]
 800780c:	4313      	orrs	r3, r2
 800780e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	4a13      	ldr	r2, [pc, #76]	; (8007860 <TIM_OC6_SetConfig+0xa0>)
 8007814:	4293      	cmp	r3, r2
 8007816:	d003      	beq.n	8007820 <TIM_OC6_SetConfig+0x60>
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	4a12      	ldr	r2, [pc, #72]	; (8007864 <TIM_OC6_SetConfig+0xa4>)
 800781c:	4293      	cmp	r3, r2
 800781e:	d109      	bne.n	8007834 <TIM_OC6_SetConfig+0x74>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8007820:	697b      	ldr	r3, [r7, #20]
 8007822:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007826:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8007828:	683b      	ldr	r3, [r7, #0]
 800782a:	695b      	ldr	r3, [r3, #20]
 800782c:	029b      	lsls	r3, r3, #10
 800782e:	697a      	ldr	r2, [r7, #20]
 8007830:	4313      	orrs	r3, r2
 8007832:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	697a      	ldr	r2, [r7, #20]
 8007838:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	68fa      	ldr	r2, [r7, #12]
 800783e:	655a      	str	r2, [r3, #84]	; 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8007840:	683b      	ldr	r3, [r7, #0]
 8007842:	685a      	ldr	r2, [r3, #4]
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	65da      	str	r2, [r3, #92]	; 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007848:	687b      	ldr	r3, [r7, #4]
 800784a:	693a      	ldr	r2, [r7, #16]
 800784c:	621a      	str	r2, [r3, #32]
}
 800784e:	bf00      	nop
 8007850:	371c      	adds	r7, #28
 8007852:	46bd      	mov	sp, r7
 8007854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007858:	4770      	bx	lr
 800785a:	bf00      	nop
 800785c:	feff8fff 	.word	0xfeff8fff
 8007860:	40010000 	.word	0x40010000
 8007864:	40010400 	.word	0x40010400

08007868 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007868:	b480      	push	{r7}
 800786a:	b087      	sub	sp, #28
 800786c:	af00      	add	r7, sp, #0
 800786e:	60f8      	str	r0, [r7, #12]
 8007870:	60b9      	str	r1, [r7, #8]
 8007872:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007874:	68fb      	ldr	r3, [r7, #12]
 8007876:	6a1b      	ldr	r3, [r3, #32]
 8007878:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800787a:	68fb      	ldr	r3, [r7, #12]
 800787c:	6a1b      	ldr	r3, [r3, #32]
 800787e:	f023 0201 	bic.w	r2, r3, #1
 8007882:	68fb      	ldr	r3, [r7, #12]
 8007884:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007886:	68fb      	ldr	r3, [r7, #12]
 8007888:	699b      	ldr	r3, [r3, #24]
 800788a:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800788c:	693b      	ldr	r3, [r7, #16]
 800788e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007892:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	011b      	lsls	r3, r3, #4
 8007898:	693a      	ldr	r2, [r7, #16]
 800789a:	4313      	orrs	r3, r2
 800789c:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800789e:	697b      	ldr	r3, [r7, #20]
 80078a0:	f023 030a 	bic.w	r3, r3, #10
 80078a4:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 80078a6:	697a      	ldr	r2, [r7, #20]
 80078a8:	68bb      	ldr	r3, [r7, #8]
 80078aa:	4313      	orrs	r3, r2
 80078ac:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 80078ae:	68fb      	ldr	r3, [r7, #12]
 80078b0:	693a      	ldr	r2, [r7, #16]
 80078b2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 80078b4:	68fb      	ldr	r3, [r7, #12]
 80078b6:	697a      	ldr	r2, [r7, #20]
 80078b8:	621a      	str	r2, [r3, #32]
}
 80078ba:	bf00      	nop
 80078bc:	371c      	adds	r7, #28
 80078be:	46bd      	mov	sp, r7
 80078c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078c4:	4770      	bx	lr

080078c6 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 80078c6:	b480      	push	{r7}
 80078c8:	b087      	sub	sp, #28
 80078ca:	af00      	add	r7, sp, #0
 80078cc:	60f8      	str	r0, [r7, #12]
 80078ce:	60b9      	str	r1, [r7, #8]
 80078d0:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80078d2:	68fb      	ldr	r3, [r7, #12]
 80078d4:	6a1b      	ldr	r3, [r3, #32]
 80078d6:	f023 0210 	bic.w	r2, r3, #16
 80078da:	68fb      	ldr	r3, [r7, #12]
 80078dc:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 80078de:	68fb      	ldr	r3, [r7, #12]
 80078e0:	699b      	ldr	r3, [r3, #24]
 80078e2:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	6a1b      	ldr	r3, [r3, #32]
 80078e8:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80078ea:	697b      	ldr	r3, [r7, #20]
 80078ec:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80078f0:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	031b      	lsls	r3, r3, #12
 80078f6:	697a      	ldr	r2, [r7, #20]
 80078f8:	4313      	orrs	r3, r2
 80078fa:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80078fc:	693b      	ldr	r3, [r7, #16]
 80078fe:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8007902:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007904:	68bb      	ldr	r3, [r7, #8]
 8007906:	011b      	lsls	r3, r3, #4
 8007908:	693a      	ldr	r2, [r7, #16]
 800790a:	4313      	orrs	r3, r2
 800790c:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800790e:	68fb      	ldr	r3, [r7, #12]
 8007910:	697a      	ldr	r2, [r7, #20]
 8007912:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007914:	68fb      	ldr	r3, [r7, #12]
 8007916:	693a      	ldr	r2, [r7, #16]
 8007918:	621a      	str	r2, [r3, #32]
}
 800791a:	bf00      	nop
 800791c:	371c      	adds	r7, #28
 800791e:	46bd      	mov	sp, r7
 8007920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007924:	4770      	bx	lr

08007926 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007926:	b480      	push	{r7}
 8007928:	b085      	sub	sp, #20
 800792a:	af00      	add	r7, sp, #0
 800792c:	6078      	str	r0, [r7, #4]
 800792e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	689b      	ldr	r3, [r3, #8]
 8007934:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007936:	68fb      	ldr	r3, [r7, #12]
 8007938:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800793c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800793e:	683a      	ldr	r2, [r7, #0]
 8007940:	68fb      	ldr	r3, [r7, #12]
 8007942:	4313      	orrs	r3, r2
 8007944:	f043 0307 	orr.w	r3, r3, #7
 8007948:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	68fa      	ldr	r2, [r7, #12]
 800794e:	609a      	str	r2, [r3, #8]
}
 8007950:	bf00      	nop
 8007952:	3714      	adds	r7, #20
 8007954:	46bd      	mov	sp, r7
 8007956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795a:	4770      	bx	lr

0800795c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800795c:	b480      	push	{r7}
 800795e:	b087      	sub	sp, #28
 8007960:	af00      	add	r7, sp, #0
 8007962:	60f8      	str	r0, [r7, #12]
 8007964:	60b9      	str	r1, [r7, #8]
 8007966:	607a      	str	r2, [r7, #4]
 8007968:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800796a:	68fb      	ldr	r3, [r7, #12]
 800796c:	689b      	ldr	r3, [r3, #8]
 800796e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007970:	697b      	ldr	r3, [r7, #20]
 8007972:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007976:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007978:	683b      	ldr	r3, [r7, #0]
 800797a:	021a      	lsls	r2, r3, #8
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	431a      	orrs	r2, r3
 8007980:	68bb      	ldr	r3, [r7, #8]
 8007982:	4313      	orrs	r3, r2
 8007984:	697a      	ldr	r2, [r7, #20]
 8007986:	4313      	orrs	r3, r2
 8007988:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800798a:	68fb      	ldr	r3, [r7, #12]
 800798c:	697a      	ldr	r2, [r7, #20]
 800798e:	609a      	str	r2, [r3, #8]
}
 8007990:	bf00      	nop
 8007992:	371c      	adds	r7, #28
 8007994:	46bd      	mov	sp, r7
 8007996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800799a:	4770      	bx	lr

0800799c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800799c:	b480      	push	{r7}
 800799e:	b087      	sub	sp, #28
 80079a0:	af00      	add	r7, sp, #0
 80079a2:	60f8      	str	r0, [r7, #12]
 80079a4:	60b9      	str	r1, [r7, #8]
 80079a6:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 80079a8:	68bb      	ldr	r3, [r7, #8]
 80079aa:	f003 031f 	and.w	r3, r3, #31
 80079ae:	2201      	movs	r2, #1
 80079b0:	fa02 f303 	lsl.w	r3, r2, r3
 80079b4:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 80079b6:	68fb      	ldr	r3, [r7, #12]
 80079b8:	6a1a      	ldr	r2, [r3, #32]
 80079ba:	697b      	ldr	r3, [r7, #20]
 80079bc:	43db      	mvns	r3, r3
 80079be:	401a      	ands	r2, r3
 80079c0:	68fb      	ldr	r3, [r7, #12]
 80079c2:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 80079c4:	68fb      	ldr	r3, [r7, #12]
 80079c6:	6a1a      	ldr	r2, [r3, #32]
 80079c8:	68bb      	ldr	r3, [r7, #8]
 80079ca:	f003 031f 	and.w	r3, r3, #31
 80079ce:	6879      	ldr	r1, [r7, #4]
 80079d0:	fa01 f303 	lsl.w	r3, r1, r3
 80079d4:	431a      	orrs	r2, r3
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	621a      	str	r2, [r3, #32]
}
 80079da:	bf00      	nop
 80079dc:	371c      	adds	r7, #28
 80079de:	46bd      	mov	sp, r7
 80079e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079e4:	4770      	bx	lr
	...

080079e8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80079e8:	b480      	push	{r7}
 80079ea:	b085      	sub	sp, #20
 80079ec:	af00      	add	r7, sp, #0
 80079ee:	6078      	str	r0, [r7, #4]
 80079f0:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80079f8:	2b01      	cmp	r3, #1
 80079fa:	d101      	bne.n	8007a00 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80079fc:	2302      	movs	r3, #2
 80079fe:	e06d      	b.n	8007adc <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8007a00:	687b      	ldr	r3, [r7, #4]
 8007a02:	2201      	movs	r2, #1
 8007a04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007a08:	687b      	ldr	r3, [r7, #4]
 8007a0a:	2202      	movs	r2, #2
 8007a0c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	681b      	ldr	r3, [r3, #0]
 8007a14:	685b      	ldr	r3, [r3, #4]
 8007a16:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	689b      	ldr	r3, [r3, #8]
 8007a1e:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	681b      	ldr	r3, [r3, #0]
 8007a24:	4a30      	ldr	r2, [pc, #192]	; (8007ae8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007a26:	4293      	cmp	r3, r2
 8007a28:	d004      	beq.n	8007a34 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	681b      	ldr	r3, [r3, #0]
 8007a2e:	4a2f      	ldr	r2, [pc, #188]	; (8007aec <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007a30:	4293      	cmp	r3, r2
 8007a32:	d108      	bne.n	8007a46 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8007a34:	68fb      	ldr	r3, [r7, #12]
 8007a36:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8007a3a:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8007a3c:	683b      	ldr	r3, [r7, #0]
 8007a3e:	685b      	ldr	r3, [r3, #4]
 8007a40:	68fa      	ldr	r2, [r7, #12]
 8007a42:	4313      	orrs	r3, r2
 8007a44:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007a46:	68fb      	ldr	r3, [r7, #12]
 8007a48:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007a4c:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007a4e:	683b      	ldr	r3, [r7, #0]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	68fa      	ldr	r2, [r7, #12]
 8007a54:	4313      	orrs	r3, r2
 8007a56:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007a58:	687b      	ldr	r3, [r7, #4]
 8007a5a:	681b      	ldr	r3, [r3, #0]
 8007a5c:	68fa      	ldr	r2, [r7, #12]
 8007a5e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007a60:	687b      	ldr	r3, [r7, #4]
 8007a62:	681b      	ldr	r3, [r3, #0]
 8007a64:	4a20      	ldr	r2, [pc, #128]	; (8007ae8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8007a66:	4293      	cmp	r3, r2
 8007a68:	d022      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007a72:	d01d      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	681b      	ldr	r3, [r3, #0]
 8007a78:	4a1d      	ldr	r2, [pc, #116]	; (8007af0 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8007a7a:	4293      	cmp	r3, r2
 8007a7c:	d018      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	681b      	ldr	r3, [r3, #0]
 8007a82:	4a1c      	ldr	r2, [pc, #112]	; (8007af4 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8007a84:	4293      	cmp	r3, r2
 8007a86:	d013      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	681b      	ldr	r3, [r3, #0]
 8007a8c:	4a1a      	ldr	r2, [pc, #104]	; (8007af8 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8007a8e:	4293      	cmp	r3, r2
 8007a90:	d00e      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	681b      	ldr	r3, [r3, #0]
 8007a96:	4a15      	ldr	r2, [pc, #84]	; (8007aec <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8007a98:	4293      	cmp	r3, r2
 8007a9a:	d009      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007a9c:	687b      	ldr	r3, [r7, #4]
 8007a9e:	681b      	ldr	r3, [r3, #0]
 8007aa0:	4a16      	ldr	r2, [pc, #88]	; (8007afc <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8007aa2:	4293      	cmp	r3, r2
 8007aa4:	d004      	beq.n	8007ab0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8007aa6:	687b      	ldr	r3, [r7, #4]
 8007aa8:	681b      	ldr	r3, [r3, #0]
 8007aaa:	4a15      	ldr	r2, [pc, #84]	; (8007b00 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8007aac:	4293      	cmp	r3, r2
 8007aae:	d10c      	bne.n	8007aca <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007ab0:	68bb      	ldr	r3, [r7, #8]
 8007ab2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007ab6:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007ab8:	683b      	ldr	r3, [r7, #0]
 8007aba:	689b      	ldr	r3, [r3, #8]
 8007abc:	68ba      	ldr	r2, [r7, #8]
 8007abe:	4313      	orrs	r3, r2
 8007ac0:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	68ba      	ldr	r2, [r7, #8]
 8007ac8:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	2201      	movs	r2, #1
 8007ace:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8007ad2:	687b      	ldr	r3, [r7, #4]
 8007ad4:	2200      	movs	r2, #0
 8007ad6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007ada:	2300      	movs	r3, #0
}
 8007adc:	4618      	mov	r0, r3
 8007ade:	3714      	adds	r7, #20
 8007ae0:	46bd      	mov	sp, r7
 8007ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ae6:	4770      	bx	lr
 8007ae8:	40010000 	.word	0x40010000
 8007aec:	40010400 	.word	0x40010400
 8007af0:	40000400 	.word	0x40000400
 8007af4:	40000800 	.word	0x40000800
 8007af8:	40000c00 	.word	0x40000c00
 8007afc:	40014000 	.word	0x40014000
 8007b00:	40001800 	.word	0x40001800

08007b04 <HAL_TIMEx_ConfigBreakDeadTime>:
  *         interrupt can be enabled by calling the @ref __HAL_TIM_ENABLE_IT macro.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_ConfigBreakDeadTime(TIM_HandleTypeDef *htim,
                                                TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)
{
 8007b04:	b480      	push	{r7}
 8007b06:	b085      	sub	sp, #20
 8007b08:	af00      	add	r7, sp, #0
 8007b0a:	6078      	str	r0, [r7, #4]
 8007b0c:	6039      	str	r1, [r7, #0]
  /* Keep this variable initialized to 0 as it is used to configure BDTR register */
  uint32_t tmpbdtr = 0U;
 8007b0e:	2300      	movs	r3, #0
 8007b10:	60fb      	str	r3, [r7, #12]
  assert_param(IS_TIM_BREAK_POLARITY(sBreakDeadTimeConfig->BreakPolarity));
  assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->BreakFilter));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(sBreakDeadTimeConfig->AutomaticOutput));

  /* Check input state */
  __HAL_LOCK(htim);
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007b18:	2b01      	cmp	r3, #1
 8007b1a:	d101      	bne.n	8007b20 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8007b1c:	2302      	movs	r3, #2
 8007b1e:	e065      	b.n	8007bec <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	2201      	movs	r2, #1
 8007b24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */

  /* Set the BDTR bits */
  MODIFY_REG(tmpbdtr, TIM_BDTR_DTG, sBreakDeadTimeConfig->DeadTime);
 8007b28:	68fb      	ldr	r3, [r7, #12]
 8007b2a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8007b2e:	683b      	ldr	r3, [r7, #0]
 8007b30:	68db      	ldr	r3, [r3, #12]
 8007b32:	4313      	orrs	r3, r2
 8007b34:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_LOCK, sBreakDeadTimeConfig->LockLevel);
 8007b36:	68fb      	ldr	r3, [r7, #12]
 8007b38:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8007b3c:	683b      	ldr	r3, [r7, #0]
 8007b3e:	689b      	ldr	r3, [r3, #8]
 8007b40:	4313      	orrs	r3, r2
 8007b42:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSI, sBreakDeadTimeConfig->OffStateIDLEMode);
 8007b44:	68fb      	ldr	r3, [r7, #12]
 8007b46:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007b4a:	683b      	ldr	r3, [r7, #0]
 8007b4c:	685b      	ldr	r3, [r3, #4]
 8007b4e:	4313      	orrs	r3, r2
 8007b50:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_OSSR, sBreakDeadTimeConfig->OffStateRunMode);
 8007b52:	68fb      	ldr	r3, [r7, #12]
 8007b54:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8007b58:	683b      	ldr	r3, [r7, #0]
 8007b5a:	681b      	ldr	r3, [r3, #0]
 8007b5c:	4313      	orrs	r3, r2
 8007b5e:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKE, sBreakDeadTimeConfig->BreakState);
 8007b60:	68fb      	ldr	r3, [r7, #12]
 8007b62:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8007b66:	683b      	ldr	r3, [r7, #0]
 8007b68:	691b      	ldr	r3, [r3, #16]
 8007b6a:	4313      	orrs	r3, r2
 8007b6c:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKP, sBreakDeadTimeConfig->BreakPolarity);
 8007b6e:	68fb      	ldr	r3, [r7, #12]
 8007b70:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8007b74:	683b      	ldr	r3, [r7, #0]
 8007b76:	695b      	ldr	r3, [r3, #20]
 8007b78:	4313      	orrs	r3, r2
 8007b7a:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_AOE, sBreakDeadTimeConfig->AutomaticOutput);
 8007b7c:	68fb      	ldr	r3, [r7, #12]
 8007b7e:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8007b82:	683b      	ldr	r3, [r7, #0]
 8007b84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007b86:	4313      	orrs	r3, r2
 8007b88:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(tmpbdtr, TIM_BDTR_BKF, (sBreakDeadTimeConfig->BreakFilter << TIM_BDTR_BKF_Pos));
 8007b8a:	68fb      	ldr	r3, [r7, #12]
 8007b8c:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 8007b90:	683b      	ldr	r3, [r7, #0]
 8007b92:	699b      	ldr	r3, [r3, #24]
 8007b94:	041b      	lsls	r3, r3, #16
 8007b96:	4313      	orrs	r3, r2
 8007b98:	60fb      	str	r3, [r7, #12]

  if (IS_TIM_BKIN2_INSTANCE(htim->Instance))
 8007b9a:	687b      	ldr	r3, [r7, #4]
 8007b9c:	681b      	ldr	r3, [r3, #0]
 8007b9e:	4a16      	ldr	r2, [pc, #88]	; (8007bf8 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 8007ba0:	4293      	cmp	r3, r2
 8007ba2:	d004      	beq.n	8007bae <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 8007ba4:	687b      	ldr	r3, [r7, #4]
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	4a14      	ldr	r2, [pc, #80]	; (8007bfc <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 8007baa:	4293      	cmp	r3, r2
 8007bac:	d115      	bne.n	8007bda <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
    assert_param(IS_TIM_BREAK2_STATE(sBreakDeadTimeConfig->Break2State));
    assert_param(IS_TIM_BREAK2_POLARITY(sBreakDeadTimeConfig->Break2Polarity));
    assert_param(IS_TIM_BREAK_FILTER(sBreakDeadTimeConfig->Break2Filter));

    /* Set the BREAK2 input related BDTR bits */
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2F, (sBreakDeadTimeConfig->Break2Filter << TIM_BDTR_BK2F_Pos));
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 8007bb4:	683b      	ldr	r3, [r7, #0]
 8007bb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007bb8:	051b      	lsls	r3, r3, #20
 8007bba:	4313      	orrs	r3, r2
 8007bbc:	60fb      	str	r3, [r7, #12]
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2E, sBreakDeadTimeConfig->Break2State);
 8007bbe:	68fb      	ldr	r3, [r7, #12]
 8007bc0:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 8007bc4:	683b      	ldr	r3, [r7, #0]
 8007bc6:	69db      	ldr	r3, [r3, #28]
 8007bc8:	4313      	orrs	r3, r2
 8007bca:	60fb      	str	r3, [r7, #12]
    MODIFY_REG(tmpbdtr, TIM_BDTR_BK2P, sBreakDeadTimeConfig->Break2Polarity);
 8007bcc:	68fb      	ldr	r3, [r7, #12]
 8007bce:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 8007bd2:	683b      	ldr	r3, [r7, #0]
 8007bd4:	6a1b      	ldr	r3, [r3, #32]
 8007bd6:	4313      	orrs	r3, r2
 8007bd8:	60fb      	str	r3, [r7, #12]
  }

  /* Set TIMx_BDTR */
  htim->Instance->BDTR = tmpbdtr;
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	681b      	ldr	r3, [r3, #0]
 8007bde:	68fa      	ldr	r2, [r7, #12]
 8007be0:	645a      	str	r2, [r3, #68]	; 0x44

  __HAL_UNLOCK(htim);
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	2200      	movs	r2, #0
 8007be6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8007bea:	2300      	movs	r3, #0
}
 8007bec:	4618      	mov	r0, r3
 8007bee:	3714      	adds	r7, #20
 8007bf0:	46bd      	mov	sp, r7
 8007bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bf6:	4770      	bx	lr
 8007bf8:	40010000 	.word	0x40010000
 8007bfc:	40010400 	.word	0x40010400

08007c00 <HAL_TIMEx_CommutCallback>:
  * @brief  Hall commutation changed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007c00:	b480      	push	{r7}
 8007c02:	b083      	sub	sp, #12
 8007c04:	af00      	add	r7, sp, #0
 8007c06:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007c08:	bf00      	nop
 8007c0a:	370c      	adds	r7, #12
 8007c0c:	46bd      	mov	sp, r7
 8007c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c12:	4770      	bx	lr

08007c14 <HAL_TIMEx_BreakCallback>:
  * @brief  Hall Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007c14:	b480      	push	{r7}
 8007c16:	b083      	sub	sp, #12
 8007c18:	af00      	add	r7, sp, #0
 8007c1a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007c1c:	bf00      	nop
 8007c1e:	370c      	adds	r7, #12
 8007c20:	46bd      	mov	sp, r7
 8007c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c26:	4770      	bx	lr

08007c28 <HAL_TIMEx_Break2Callback>:
  * @brief  Hall Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 8007c28:	b480      	push	{r7}
 8007c2a:	b083      	sub	sp, #12
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 8007c30:	bf00      	nop
 8007c32:	370c      	adds	r7, #12
 8007c34:	46bd      	mov	sp, r7
 8007c36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c3a:	4770      	bx	lr

08007c3c <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8007c3c:	b580      	push	{r7, lr}
 8007c3e:	b082      	sub	sp, #8
 8007c40:	af00      	add	r7, sp, #0
 8007c42:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	2b00      	cmp	r3, #0
 8007c48:	d101      	bne.n	8007c4e <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8007c4a:	2301      	movs	r3, #1
 8007c4c:	e040      	b.n	8007cd0 <HAL_UART_Init+0x94>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007c52:	2b00      	cmp	r3, #0
 8007c54:	d106      	bne.n	8007c64 <HAL_UART_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	2200      	movs	r2, #0
 8007c5a:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8007c5e:	6878      	ldr	r0, [r7, #4]
 8007c60:	f7f9 ffa2 	bl	8001ba8 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8007c64:	687b      	ldr	r3, [r7, #4]
 8007c66:	2224      	movs	r2, #36	; 0x24
 8007c68:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8007c6a:	687b      	ldr	r3, [r7, #4]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	681a      	ldr	r2, [r3, #0]
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	f022 0201 	bic.w	r2, r2, #1
 8007c78:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8007c7a:	6878      	ldr	r0, [r7, #4]
 8007c7c:	f000 f96e 	bl	8007f5c <UART_SetConfig>
 8007c80:	4603      	mov	r3, r0
 8007c82:	2b01      	cmp	r3, #1
 8007c84:	d101      	bne.n	8007c8a <HAL_UART_Init+0x4e>
  {
    return HAL_ERROR;
 8007c86:	2301      	movs	r3, #1
 8007c88:	e022      	b.n	8007cd0 <HAL_UART_Init+0x94>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d002      	beq.n	8007c98 <HAL_UART_Init+0x5c>
  {
    UART_AdvFeatureConfig(huart);
 8007c92:	6878      	ldr	r0, [r7, #4]
 8007c94:	f000 fbc6 	bl	8008424 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	685a      	ldr	r2, [r3, #4]
 8007c9e:	687b      	ldr	r3, [r7, #4]
 8007ca0:	681b      	ldr	r3, [r3, #0]
 8007ca2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8007ca6:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	689a      	ldr	r2, [r3, #8]
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8007cb6:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	681a      	ldr	r2, [r3, #0]
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	f042 0201 	orr.w	r2, r2, #1
 8007cc6:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8007cc8:	6878      	ldr	r0, [r7, #4]
 8007cca:	f000 fc4d 	bl	8008568 <UART_CheckIdleState>
 8007cce:	4603      	mov	r3, r0
}
 8007cd0:	4618      	mov	r0, r3
 8007cd2:	3708      	adds	r7, #8
 8007cd4:	46bd      	mov	sp, r7
 8007cd6:	bd80      	pop	{r7, pc}

08007cd8 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8007cd8:	b580      	push	{r7, lr}
 8007cda:	b08a      	sub	sp, #40	; 0x28
 8007cdc:	af02      	add	r7, sp, #8
 8007cde:	60f8      	str	r0, [r7, #12]
 8007ce0:	60b9      	str	r1, [r7, #8]
 8007ce2:	603b      	str	r3, [r7, #0]
 8007ce4:	4613      	mov	r3, r2
 8007ce6:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8007ce8:	68fb      	ldr	r3, [r7, #12]
 8007cea:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007cec:	2b20      	cmp	r3, #32
 8007cee:	f040 8081 	bne.w	8007df4 <HAL_UART_Transmit+0x11c>
  {
    if ((pData == NULL) || (Size == 0U))
 8007cf2:	68bb      	ldr	r3, [r7, #8]
 8007cf4:	2b00      	cmp	r3, #0
 8007cf6:	d002      	beq.n	8007cfe <HAL_UART_Transmit+0x26>
 8007cf8:	88fb      	ldrh	r3, [r7, #6]
 8007cfa:	2b00      	cmp	r3, #0
 8007cfc:	d101      	bne.n	8007d02 <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 8007cfe:	2301      	movs	r3, #1
 8007d00:	e079      	b.n	8007df6 <HAL_UART_Transmit+0x11e>
    }

    __HAL_LOCK(huart);
 8007d02:	68fb      	ldr	r3, [r7, #12]
 8007d04:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007d08:	2b01      	cmp	r3, #1
 8007d0a:	d101      	bne.n	8007d10 <HAL_UART_Transmit+0x38>
 8007d0c:	2302      	movs	r3, #2
 8007d0e:	e072      	b.n	8007df6 <HAL_UART_Transmit+0x11e>
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	2201      	movs	r2, #1
 8007d14:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	2200      	movs	r2, #0
 8007d1c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	2221      	movs	r2, #33	; 0x21
 8007d24:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8007d26:	f7fa fa69 	bl	80021fc <HAL_GetTick>
 8007d2a:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 8007d2c:	68fb      	ldr	r3, [r7, #12]
 8007d2e:	88fa      	ldrh	r2, [r7, #6]
 8007d30:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8007d34:	68fb      	ldr	r3, [r7, #12]
 8007d36:	88fa      	ldrh	r2, [r7, #6]
 8007d38:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8007d3c:	68fb      	ldr	r3, [r7, #12]
 8007d3e:	689b      	ldr	r3, [r3, #8]
 8007d40:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007d44:	d108      	bne.n	8007d58 <HAL_UART_Transmit+0x80>
 8007d46:	68fb      	ldr	r3, [r7, #12]
 8007d48:	691b      	ldr	r3, [r3, #16]
 8007d4a:	2b00      	cmp	r3, #0
 8007d4c:	d104      	bne.n	8007d58 <HAL_UART_Transmit+0x80>
    {
      pdata8bits  = NULL;
 8007d4e:	2300      	movs	r3, #0
 8007d50:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 8007d52:	68bb      	ldr	r3, [r7, #8]
 8007d54:	61bb      	str	r3, [r7, #24]
 8007d56:	e003      	b.n	8007d60 <HAL_UART_Transmit+0x88>
    }
    else
    {
      pdata8bits  = pData;
 8007d58:	68bb      	ldr	r3, [r7, #8]
 8007d5a:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8007d5c:	2300      	movs	r3, #0
 8007d5e:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8007d60:	68fb      	ldr	r3, [r7, #12]
 8007d62:	2200      	movs	r2, #0
 8007d64:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    while (huart->TxXferCount > 0U)
 8007d68:	e02c      	b.n	8007dc4 <HAL_UART_Transmit+0xec>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8007d6a:	683b      	ldr	r3, [r7, #0]
 8007d6c:	9300      	str	r3, [sp, #0]
 8007d6e:	697b      	ldr	r3, [r7, #20]
 8007d70:	2200      	movs	r2, #0
 8007d72:	2180      	movs	r1, #128	; 0x80
 8007d74:	68f8      	ldr	r0, [r7, #12]
 8007d76:	f000 fc2a 	bl	80085ce <UART_WaitOnFlagUntilTimeout>
 8007d7a:	4603      	mov	r3, r0
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	d001      	beq.n	8007d84 <HAL_UART_Transmit+0xac>
      {
        return HAL_TIMEOUT;
 8007d80:	2303      	movs	r3, #3
 8007d82:	e038      	b.n	8007df6 <HAL_UART_Transmit+0x11e>
      }
      if (pdata8bits == NULL)
 8007d84:	69fb      	ldr	r3, [r7, #28]
 8007d86:	2b00      	cmp	r3, #0
 8007d88:	d10b      	bne.n	8007da2 <HAL_UART_Transmit+0xca>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8007d8a:	69bb      	ldr	r3, [r7, #24]
 8007d8c:	881b      	ldrh	r3, [r3, #0]
 8007d8e:	461a      	mov	r2, r3
 8007d90:	68fb      	ldr	r3, [r7, #12]
 8007d92:	681b      	ldr	r3, [r3, #0]
 8007d94:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007d98:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8007d9a:	69bb      	ldr	r3, [r7, #24]
 8007d9c:	3302      	adds	r3, #2
 8007d9e:	61bb      	str	r3, [r7, #24]
 8007da0:	e007      	b.n	8007db2 <HAL_UART_Transmit+0xda>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8007da2:	69fb      	ldr	r3, [r7, #28]
 8007da4:	781a      	ldrb	r2, [r3, #0]
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8007dac:	69fb      	ldr	r3, [r7, #28]
 8007dae:	3301      	adds	r3, #1
 8007db0:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007db8:	b29b      	uxth	r3, r3
 8007dba:	3b01      	subs	r3, #1
 8007dbc:	b29a      	uxth	r2, r3
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    while (huart->TxXferCount > 0U)
 8007dc4:	68fb      	ldr	r3, [r7, #12]
 8007dc6:	f8b3 3052 	ldrh.w	r3, [r3, #82]	; 0x52
 8007dca:	b29b      	uxth	r3, r3
 8007dcc:	2b00      	cmp	r3, #0
 8007dce:	d1cc      	bne.n	8007d6a <HAL_UART_Transmit+0x92>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8007dd0:	683b      	ldr	r3, [r7, #0]
 8007dd2:	9300      	str	r3, [sp, #0]
 8007dd4:	697b      	ldr	r3, [r7, #20]
 8007dd6:	2200      	movs	r2, #0
 8007dd8:	2140      	movs	r1, #64	; 0x40
 8007dda:	68f8      	ldr	r0, [r7, #12]
 8007ddc:	f000 fbf7 	bl	80085ce <UART_WaitOnFlagUntilTimeout>
 8007de0:	4603      	mov	r3, r0
 8007de2:	2b00      	cmp	r3, #0
 8007de4:	d001      	beq.n	8007dea <HAL_UART_Transmit+0x112>
    {
      return HAL_TIMEOUT;
 8007de6:	2303      	movs	r3, #3
 8007de8:	e005      	b.n	8007df6 <HAL_UART_Transmit+0x11e>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	2220      	movs	r2, #32
 8007dee:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8007df0:	2300      	movs	r3, #0
 8007df2:	e000      	b.n	8007df6 <HAL_UART_Transmit+0x11e>
  }
  else
  {
    return HAL_BUSY;
 8007df4:	2302      	movs	r3, #2
  }
}
 8007df6:	4618      	mov	r0, r3
 8007df8:	3720      	adds	r7, #32
 8007dfa:	46bd      	mov	sp, r7
 8007dfc:	bd80      	pop	{r7, pc}
	...

08007e00 <HAL_UART_Transmit_DMA>:
  * @param pData Pointer to data buffer (u8 or u16 data elements).
  * @param Size  Amount of data elements (u8 or u16) to be sent.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size)
{
 8007e00:	b580      	push	{r7, lr}
 8007e02:	b08a      	sub	sp, #40	; 0x28
 8007e04:	af00      	add	r7, sp, #0
 8007e06:	60f8      	str	r0, [r7, #12]
 8007e08:	60b9      	str	r1, [r7, #8]
 8007e0a:	4613      	mov	r3, r2
 8007e0c:	80fb      	strh	r3, [r7, #6]
  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8007e0e:	68fb      	ldr	r3, [r7, #12]
 8007e10:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8007e12:	2b20      	cmp	r3, #32
 8007e14:	d178      	bne.n	8007f08 <HAL_UART_Transmit_DMA+0x108>
  {
    if ((pData == NULL) || (Size == 0U))
 8007e16:	68bb      	ldr	r3, [r7, #8]
 8007e18:	2b00      	cmp	r3, #0
 8007e1a:	d002      	beq.n	8007e22 <HAL_UART_Transmit_DMA+0x22>
 8007e1c:	88fb      	ldrh	r3, [r7, #6]
 8007e1e:	2b00      	cmp	r3, #0
 8007e20:	d101      	bne.n	8007e26 <HAL_UART_Transmit_DMA+0x26>
    {
      return HAL_ERROR;
 8007e22:	2301      	movs	r3, #1
 8007e24:	e071      	b.n	8007f0a <HAL_UART_Transmit_DMA+0x10a>
    }

    __HAL_LOCK(huart);
 8007e26:	68fb      	ldr	r3, [r7, #12]
 8007e28:	f893 3074 	ldrb.w	r3, [r3, #116]	; 0x74
 8007e2c:	2b01      	cmp	r3, #1
 8007e2e:	d101      	bne.n	8007e34 <HAL_UART_Transmit_DMA+0x34>
 8007e30:	2302      	movs	r3, #2
 8007e32:	e06a      	b.n	8007f0a <HAL_UART_Transmit_DMA+0x10a>
 8007e34:	68fb      	ldr	r3, [r7, #12]
 8007e36:	2201      	movs	r2, #1
 8007e38:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    huart->pTxBuffPtr  = pData;
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	68ba      	ldr	r2, [r7, #8]
 8007e40:	64da      	str	r2, [r3, #76]	; 0x4c
    huart->TxXferSize  = Size;
 8007e42:	68fb      	ldr	r3, [r7, #12]
 8007e44:	88fa      	ldrh	r2, [r7, #6]
 8007e46:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
    huart->TxXferCount = Size;
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	88fa      	ldrh	r2, [r7, #6]
 8007e4e:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	2200      	movs	r2, #0
 8007e56:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	2221      	movs	r2, #33	; 0x21
 8007e5e:	679a      	str	r2, [r3, #120]	; 0x78

    if (huart->hdmatx != NULL)
 8007e60:	68fb      	ldr	r3, [r7, #12]
 8007e62:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e64:	2b00      	cmp	r3, #0
 8007e66:	d02b      	beq.n	8007ec0 <HAL_UART_Transmit_DMA+0xc0>
    {
      /* Set the UART DMA transfer complete callback */
      huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 8007e68:	68fb      	ldr	r3, [r7, #12]
 8007e6a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e6c:	4a29      	ldr	r2, [pc, #164]	; (8007f14 <HAL_UART_Transmit_DMA+0x114>)
 8007e6e:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Set the UART DMA Half transfer complete callback */
      huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 8007e70:	68fb      	ldr	r3, [r7, #12]
 8007e72:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e74:	4a28      	ldr	r2, [pc, #160]	; (8007f18 <HAL_UART_Transmit_DMA+0x118>)
 8007e76:	641a      	str	r2, [r3, #64]	; 0x40

      /* Set the DMA error callback */
      huart->hdmatx->XferErrorCallback = UART_DMAError;
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e7c:	4a27      	ldr	r2, [pc, #156]	; (8007f1c <HAL_UART_Transmit_DMA+0x11c>)
 8007e7e:	64da      	str	r2, [r3, #76]	; 0x4c

      /* Set the DMA abort callback */
      huart->hdmatx->XferAbortCallback = NULL;
 8007e80:	68fb      	ldr	r3, [r7, #12]
 8007e82:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8007e84:	2200      	movs	r2, #0
 8007e86:	651a      	str	r2, [r3, #80]	; 0x50

      /* Enable the UART transmit DMA channel */
      if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->TDR, Size) != HAL_OK)
 8007e88:	68fb      	ldr	r3, [r7, #12]
 8007e8a:	6ed8      	ldr	r0, [r3, #108]	; 0x6c
 8007e8c:	68fb      	ldr	r3, [r7, #12]
 8007e8e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007e90:	4619      	mov	r1, r3
 8007e92:	68fb      	ldr	r3, [r7, #12]
 8007e94:	681b      	ldr	r3, [r3, #0]
 8007e96:	3328      	adds	r3, #40	; 0x28
 8007e98:	461a      	mov	r2, r3
 8007e9a:	88fb      	ldrh	r3, [r7, #6]
 8007e9c:	f7fb f852 	bl	8002f44 <HAL_DMA_Start_IT>
 8007ea0:	4603      	mov	r3, r0
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	d00c      	beq.n	8007ec0 <HAL_UART_Transmit_DMA+0xc0>
      {
        /* Set error code to DMA */
        huart->ErrorCode = HAL_UART_ERROR_DMA;
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	2210      	movs	r2, #16
 8007eaa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

        __HAL_UNLOCK(huart);
 8007eae:	68fb      	ldr	r3, [r7, #12]
 8007eb0:	2200      	movs	r2, #0
 8007eb2:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        /* Restore huart->gState to ready */
        huart->gState = HAL_UART_STATE_READY;
 8007eb6:	68fb      	ldr	r3, [r7, #12]
 8007eb8:	2220      	movs	r2, #32
 8007eba:	679a      	str	r2, [r3, #120]	; 0x78

        return HAL_ERROR;
 8007ebc:	2301      	movs	r3, #1
 8007ebe:	e024      	b.n	8007f0a <HAL_UART_Transmit_DMA+0x10a>
      }
    }
    /* Clear the TC flag in the ICR register */
    __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 8007ec0:	68fb      	ldr	r3, [r7, #12]
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	2240      	movs	r2, #64	; 0x40
 8007ec6:	621a      	str	r2, [r3, #32]

    __HAL_UNLOCK(huart);
 8007ec8:	68fb      	ldr	r3, [r7, #12]
 8007eca:	2200      	movs	r2, #0
 8007ecc:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

    /* Enable the DMA transfer for transmit request by setting the DMAT bit
    in the UART CR3 register */
    ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8007ed0:	68fb      	ldr	r3, [r7, #12]
 8007ed2:	681b      	ldr	r3, [r3, #0]
 8007ed4:	3308      	adds	r3, #8
 8007ed6:	617b      	str	r3, [r7, #20]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8007ed8:	697b      	ldr	r3, [r7, #20]
 8007eda:	e853 3f00 	ldrex	r3, [r3]
 8007ede:	613b      	str	r3, [r7, #16]
   return(result);
 8007ee0:	693b      	ldr	r3, [r7, #16]
 8007ee2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007ee6:	627b      	str	r3, [r7, #36]	; 0x24
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	3308      	adds	r3, #8
 8007eee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007ef0:	623a      	str	r2, [r7, #32]
 8007ef2:	61fb      	str	r3, [r7, #28]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8007ef4:	69f9      	ldr	r1, [r7, #28]
 8007ef6:	6a3a      	ldr	r2, [r7, #32]
 8007ef8:	e841 2300 	strex	r3, r2, [r1]
 8007efc:	61bb      	str	r3, [r7, #24]
   return(result);
 8007efe:	69bb      	ldr	r3, [r7, #24]
 8007f00:	2b00      	cmp	r3, #0
 8007f02:	d1e5      	bne.n	8007ed0 <HAL_UART_Transmit_DMA+0xd0>

    return HAL_OK;
 8007f04:	2300      	movs	r3, #0
 8007f06:	e000      	b.n	8007f0a <HAL_UART_Transmit_DMA+0x10a>
  }
  else
  {
    return HAL_BUSY;
 8007f08:	2302      	movs	r3, #2
  }
}
 8007f0a:	4618      	mov	r0, r3
 8007f0c:	3728      	adds	r7, #40	; 0x28
 8007f0e:	46bd      	mov	sp, r7
 8007f10:	bd80      	pop	{r7, pc}
 8007f12:	bf00      	nop
 8007f14:	08008869 	.word	0x08008869
 8007f18:	080088ff 	.word	0x080088ff
 8007f1c:	0800891b 	.word	0x0800891b

08007f20 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8007f20:	b480      	push	{r7}
 8007f22:	b083      	sub	sp, #12
 8007f24:	af00      	add	r7, sp, #0
 8007f26:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 8007f28:	bf00      	nop
 8007f2a:	370c      	adds	r7, #12
 8007f2c:	46bd      	mov	sp, r7
 8007f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f32:	4770      	bx	lr

08007f34 <HAL_UART_TxHalfCpltCallback>:
  * @brief  Tx Half Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 8007f34:	b480      	push	{r7}
 8007f36:	b083      	sub	sp, #12
 8007f38:	af00      	add	r7, sp, #0
 8007f3a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
   */
}
 8007f3c:	bf00      	nop
 8007f3e:	370c      	adds	r7, #12
 8007f40:	46bd      	mov	sp, r7
 8007f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f46:	4770      	bx	lr

08007f48 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8007f48:	b480      	push	{r7}
 8007f4a:	b083      	sub	sp, #12
 8007f4c:	af00      	add	r7, sp, #0
 8007f4e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8007f50:	bf00      	nop
 8007f52:	370c      	adds	r7, #12
 8007f54:	46bd      	mov	sp, r7
 8007f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f5a:	4770      	bx	lr

08007f5c <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8007f5c:	b580      	push	{r7, lr}
 8007f5e:	b088      	sub	sp, #32
 8007f60:	af00      	add	r7, sp, #0
 8007f62:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8007f64:	2300      	movs	r3, #0
 8007f66:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	689a      	ldr	r2, [r3, #8]
 8007f6c:	687b      	ldr	r3, [r7, #4]
 8007f6e:	691b      	ldr	r3, [r3, #16]
 8007f70:	431a      	orrs	r2, r3
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	695b      	ldr	r3, [r3, #20]
 8007f76:	431a      	orrs	r2, r3
 8007f78:	687b      	ldr	r3, [r7, #4]
 8007f7a:	69db      	ldr	r3, [r3, #28]
 8007f7c:	4313      	orrs	r3, r2
 8007f7e:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	681a      	ldr	r2, [r3, #0]
 8007f86:	4ba6      	ldr	r3, [pc, #664]	; (8008220 <UART_SetConfig+0x2c4>)
 8007f88:	4013      	ands	r3, r2
 8007f8a:	687a      	ldr	r2, [r7, #4]
 8007f8c:	6812      	ldr	r2, [r2, #0]
 8007f8e:	6979      	ldr	r1, [r7, #20]
 8007f90:	430b      	orrs	r3, r1
 8007f92:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	685b      	ldr	r3, [r3, #4]
 8007f9a:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	68da      	ldr	r2, [r3, #12]
 8007fa2:	687b      	ldr	r3, [r7, #4]
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	430a      	orrs	r2, r1
 8007fa8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	699b      	ldr	r3, [r3, #24]
 8007fae:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	6a1b      	ldr	r3, [r3, #32]
 8007fb4:	697a      	ldr	r2, [r7, #20]
 8007fb6:	4313      	orrs	r3, r2
 8007fb8:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	689b      	ldr	r3, [r3, #8]
 8007fc0:	f423 6130 	bic.w	r1, r3, #2816	; 0xb00
 8007fc4:	687b      	ldr	r3, [r7, #4]
 8007fc6:	681b      	ldr	r3, [r3, #0]
 8007fc8:	697a      	ldr	r2, [r7, #20]
 8007fca:	430a      	orrs	r2, r1
 8007fcc:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8007fce:	687b      	ldr	r3, [r7, #4]
 8007fd0:	681b      	ldr	r3, [r3, #0]
 8007fd2:	4a94      	ldr	r2, [pc, #592]	; (8008224 <UART_SetConfig+0x2c8>)
 8007fd4:	4293      	cmp	r3, r2
 8007fd6:	d120      	bne.n	800801a <UART_SetConfig+0xbe>
 8007fd8:	4b93      	ldr	r3, [pc, #588]	; (8008228 <UART_SetConfig+0x2cc>)
 8007fda:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007fde:	f003 0303 	and.w	r3, r3, #3
 8007fe2:	2b03      	cmp	r3, #3
 8007fe4:	d816      	bhi.n	8008014 <UART_SetConfig+0xb8>
 8007fe6:	a201      	add	r2, pc, #4	; (adr r2, 8007fec <UART_SetConfig+0x90>)
 8007fe8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007fec:	08007ffd 	.word	0x08007ffd
 8007ff0:	08008009 	.word	0x08008009
 8007ff4:	08008003 	.word	0x08008003
 8007ff8:	0800800f 	.word	0x0800800f
 8007ffc:	2301      	movs	r3, #1
 8007ffe:	77fb      	strb	r3, [r7, #31]
 8008000:	e150      	b.n	80082a4 <UART_SetConfig+0x348>
 8008002:	2302      	movs	r3, #2
 8008004:	77fb      	strb	r3, [r7, #31]
 8008006:	e14d      	b.n	80082a4 <UART_SetConfig+0x348>
 8008008:	2304      	movs	r3, #4
 800800a:	77fb      	strb	r3, [r7, #31]
 800800c:	e14a      	b.n	80082a4 <UART_SetConfig+0x348>
 800800e:	2308      	movs	r3, #8
 8008010:	77fb      	strb	r3, [r7, #31]
 8008012:	e147      	b.n	80082a4 <UART_SetConfig+0x348>
 8008014:	2310      	movs	r3, #16
 8008016:	77fb      	strb	r3, [r7, #31]
 8008018:	e144      	b.n	80082a4 <UART_SetConfig+0x348>
 800801a:	687b      	ldr	r3, [r7, #4]
 800801c:	681b      	ldr	r3, [r3, #0]
 800801e:	4a83      	ldr	r2, [pc, #524]	; (800822c <UART_SetConfig+0x2d0>)
 8008020:	4293      	cmp	r3, r2
 8008022:	d132      	bne.n	800808a <UART_SetConfig+0x12e>
 8008024:	4b80      	ldr	r3, [pc, #512]	; (8008228 <UART_SetConfig+0x2cc>)
 8008026:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800802a:	f003 030c 	and.w	r3, r3, #12
 800802e:	2b0c      	cmp	r3, #12
 8008030:	d828      	bhi.n	8008084 <UART_SetConfig+0x128>
 8008032:	a201      	add	r2, pc, #4	; (adr r2, 8008038 <UART_SetConfig+0xdc>)
 8008034:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008038:	0800806d 	.word	0x0800806d
 800803c:	08008085 	.word	0x08008085
 8008040:	08008085 	.word	0x08008085
 8008044:	08008085 	.word	0x08008085
 8008048:	08008079 	.word	0x08008079
 800804c:	08008085 	.word	0x08008085
 8008050:	08008085 	.word	0x08008085
 8008054:	08008085 	.word	0x08008085
 8008058:	08008073 	.word	0x08008073
 800805c:	08008085 	.word	0x08008085
 8008060:	08008085 	.word	0x08008085
 8008064:	08008085 	.word	0x08008085
 8008068:	0800807f 	.word	0x0800807f
 800806c:	2300      	movs	r3, #0
 800806e:	77fb      	strb	r3, [r7, #31]
 8008070:	e118      	b.n	80082a4 <UART_SetConfig+0x348>
 8008072:	2302      	movs	r3, #2
 8008074:	77fb      	strb	r3, [r7, #31]
 8008076:	e115      	b.n	80082a4 <UART_SetConfig+0x348>
 8008078:	2304      	movs	r3, #4
 800807a:	77fb      	strb	r3, [r7, #31]
 800807c:	e112      	b.n	80082a4 <UART_SetConfig+0x348>
 800807e:	2308      	movs	r3, #8
 8008080:	77fb      	strb	r3, [r7, #31]
 8008082:	e10f      	b.n	80082a4 <UART_SetConfig+0x348>
 8008084:	2310      	movs	r3, #16
 8008086:	77fb      	strb	r3, [r7, #31]
 8008088:	e10c      	b.n	80082a4 <UART_SetConfig+0x348>
 800808a:	687b      	ldr	r3, [r7, #4]
 800808c:	681b      	ldr	r3, [r3, #0]
 800808e:	4a68      	ldr	r2, [pc, #416]	; (8008230 <UART_SetConfig+0x2d4>)
 8008090:	4293      	cmp	r3, r2
 8008092:	d120      	bne.n	80080d6 <UART_SetConfig+0x17a>
 8008094:	4b64      	ldr	r3, [pc, #400]	; (8008228 <UART_SetConfig+0x2cc>)
 8008096:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800809a:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800809e:	2b30      	cmp	r3, #48	; 0x30
 80080a0:	d013      	beq.n	80080ca <UART_SetConfig+0x16e>
 80080a2:	2b30      	cmp	r3, #48	; 0x30
 80080a4:	d814      	bhi.n	80080d0 <UART_SetConfig+0x174>
 80080a6:	2b20      	cmp	r3, #32
 80080a8:	d009      	beq.n	80080be <UART_SetConfig+0x162>
 80080aa:	2b20      	cmp	r3, #32
 80080ac:	d810      	bhi.n	80080d0 <UART_SetConfig+0x174>
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d002      	beq.n	80080b8 <UART_SetConfig+0x15c>
 80080b2:	2b10      	cmp	r3, #16
 80080b4:	d006      	beq.n	80080c4 <UART_SetConfig+0x168>
 80080b6:	e00b      	b.n	80080d0 <UART_SetConfig+0x174>
 80080b8:	2300      	movs	r3, #0
 80080ba:	77fb      	strb	r3, [r7, #31]
 80080bc:	e0f2      	b.n	80082a4 <UART_SetConfig+0x348>
 80080be:	2302      	movs	r3, #2
 80080c0:	77fb      	strb	r3, [r7, #31]
 80080c2:	e0ef      	b.n	80082a4 <UART_SetConfig+0x348>
 80080c4:	2304      	movs	r3, #4
 80080c6:	77fb      	strb	r3, [r7, #31]
 80080c8:	e0ec      	b.n	80082a4 <UART_SetConfig+0x348>
 80080ca:	2308      	movs	r3, #8
 80080cc:	77fb      	strb	r3, [r7, #31]
 80080ce:	e0e9      	b.n	80082a4 <UART_SetConfig+0x348>
 80080d0:	2310      	movs	r3, #16
 80080d2:	77fb      	strb	r3, [r7, #31]
 80080d4:	e0e6      	b.n	80082a4 <UART_SetConfig+0x348>
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	681b      	ldr	r3, [r3, #0]
 80080da:	4a56      	ldr	r2, [pc, #344]	; (8008234 <UART_SetConfig+0x2d8>)
 80080dc:	4293      	cmp	r3, r2
 80080de:	d120      	bne.n	8008122 <UART_SetConfig+0x1c6>
 80080e0:	4b51      	ldr	r3, [pc, #324]	; (8008228 <UART_SetConfig+0x2cc>)
 80080e2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80080e6:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 80080ea:	2bc0      	cmp	r3, #192	; 0xc0
 80080ec:	d013      	beq.n	8008116 <UART_SetConfig+0x1ba>
 80080ee:	2bc0      	cmp	r3, #192	; 0xc0
 80080f0:	d814      	bhi.n	800811c <UART_SetConfig+0x1c0>
 80080f2:	2b80      	cmp	r3, #128	; 0x80
 80080f4:	d009      	beq.n	800810a <UART_SetConfig+0x1ae>
 80080f6:	2b80      	cmp	r3, #128	; 0x80
 80080f8:	d810      	bhi.n	800811c <UART_SetConfig+0x1c0>
 80080fa:	2b00      	cmp	r3, #0
 80080fc:	d002      	beq.n	8008104 <UART_SetConfig+0x1a8>
 80080fe:	2b40      	cmp	r3, #64	; 0x40
 8008100:	d006      	beq.n	8008110 <UART_SetConfig+0x1b4>
 8008102:	e00b      	b.n	800811c <UART_SetConfig+0x1c0>
 8008104:	2300      	movs	r3, #0
 8008106:	77fb      	strb	r3, [r7, #31]
 8008108:	e0cc      	b.n	80082a4 <UART_SetConfig+0x348>
 800810a:	2302      	movs	r3, #2
 800810c:	77fb      	strb	r3, [r7, #31]
 800810e:	e0c9      	b.n	80082a4 <UART_SetConfig+0x348>
 8008110:	2304      	movs	r3, #4
 8008112:	77fb      	strb	r3, [r7, #31]
 8008114:	e0c6      	b.n	80082a4 <UART_SetConfig+0x348>
 8008116:	2308      	movs	r3, #8
 8008118:	77fb      	strb	r3, [r7, #31]
 800811a:	e0c3      	b.n	80082a4 <UART_SetConfig+0x348>
 800811c:	2310      	movs	r3, #16
 800811e:	77fb      	strb	r3, [r7, #31]
 8008120:	e0c0      	b.n	80082a4 <UART_SetConfig+0x348>
 8008122:	687b      	ldr	r3, [r7, #4]
 8008124:	681b      	ldr	r3, [r3, #0]
 8008126:	4a44      	ldr	r2, [pc, #272]	; (8008238 <UART_SetConfig+0x2dc>)
 8008128:	4293      	cmp	r3, r2
 800812a:	d125      	bne.n	8008178 <UART_SetConfig+0x21c>
 800812c:	4b3e      	ldr	r3, [pc, #248]	; (8008228 <UART_SetConfig+0x2cc>)
 800812e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008132:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008136:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800813a:	d017      	beq.n	800816c <UART_SetConfig+0x210>
 800813c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8008140:	d817      	bhi.n	8008172 <UART_SetConfig+0x216>
 8008142:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008146:	d00b      	beq.n	8008160 <UART_SetConfig+0x204>
 8008148:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800814c:	d811      	bhi.n	8008172 <UART_SetConfig+0x216>
 800814e:	2b00      	cmp	r3, #0
 8008150:	d003      	beq.n	800815a <UART_SetConfig+0x1fe>
 8008152:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008156:	d006      	beq.n	8008166 <UART_SetConfig+0x20a>
 8008158:	e00b      	b.n	8008172 <UART_SetConfig+0x216>
 800815a:	2300      	movs	r3, #0
 800815c:	77fb      	strb	r3, [r7, #31]
 800815e:	e0a1      	b.n	80082a4 <UART_SetConfig+0x348>
 8008160:	2302      	movs	r3, #2
 8008162:	77fb      	strb	r3, [r7, #31]
 8008164:	e09e      	b.n	80082a4 <UART_SetConfig+0x348>
 8008166:	2304      	movs	r3, #4
 8008168:	77fb      	strb	r3, [r7, #31]
 800816a:	e09b      	b.n	80082a4 <UART_SetConfig+0x348>
 800816c:	2308      	movs	r3, #8
 800816e:	77fb      	strb	r3, [r7, #31]
 8008170:	e098      	b.n	80082a4 <UART_SetConfig+0x348>
 8008172:	2310      	movs	r3, #16
 8008174:	77fb      	strb	r3, [r7, #31]
 8008176:	e095      	b.n	80082a4 <UART_SetConfig+0x348>
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	4a2f      	ldr	r2, [pc, #188]	; (800823c <UART_SetConfig+0x2e0>)
 800817e:	4293      	cmp	r3, r2
 8008180:	d125      	bne.n	80081ce <UART_SetConfig+0x272>
 8008182:	4b29      	ldr	r3, [pc, #164]	; (8008228 <UART_SetConfig+0x2cc>)
 8008184:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008188:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800818c:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008190:	d017      	beq.n	80081c2 <UART_SetConfig+0x266>
 8008192:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8008196:	d817      	bhi.n	80081c8 <UART_SetConfig+0x26c>
 8008198:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800819c:	d00b      	beq.n	80081b6 <UART_SetConfig+0x25a>
 800819e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80081a2:	d811      	bhi.n	80081c8 <UART_SetConfig+0x26c>
 80081a4:	2b00      	cmp	r3, #0
 80081a6:	d003      	beq.n	80081b0 <UART_SetConfig+0x254>
 80081a8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80081ac:	d006      	beq.n	80081bc <UART_SetConfig+0x260>
 80081ae:	e00b      	b.n	80081c8 <UART_SetConfig+0x26c>
 80081b0:	2301      	movs	r3, #1
 80081b2:	77fb      	strb	r3, [r7, #31]
 80081b4:	e076      	b.n	80082a4 <UART_SetConfig+0x348>
 80081b6:	2302      	movs	r3, #2
 80081b8:	77fb      	strb	r3, [r7, #31]
 80081ba:	e073      	b.n	80082a4 <UART_SetConfig+0x348>
 80081bc:	2304      	movs	r3, #4
 80081be:	77fb      	strb	r3, [r7, #31]
 80081c0:	e070      	b.n	80082a4 <UART_SetConfig+0x348>
 80081c2:	2308      	movs	r3, #8
 80081c4:	77fb      	strb	r3, [r7, #31]
 80081c6:	e06d      	b.n	80082a4 <UART_SetConfig+0x348>
 80081c8:	2310      	movs	r3, #16
 80081ca:	77fb      	strb	r3, [r7, #31]
 80081cc:	e06a      	b.n	80082a4 <UART_SetConfig+0x348>
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	681b      	ldr	r3, [r3, #0]
 80081d2:	4a1b      	ldr	r2, [pc, #108]	; (8008240 <UART_SetConfig+0x2e4>)
 80081d4:	4293      	cmp	r3, r2
 80081d6:	d138      	bne.n	800824a <UART_SetConfig+0x2ee>
 80081d8:	4b13      	ldr	r3, [pc, #76]	; (8008228 <UART_SetConfig+0x2cc>)
 80081da:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80081de:	f403 5340 	and.w	r3, r3, #12288	; 0x3000
 80081e2:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80081e6:	d017      	beq.n	8008218 <UART_SetConfig+0x2bc>
 80081e8:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80081ec:	d82a      	bhi.n	8008244 <UART_SetConfig+0x2e8>
 80081ee:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80081f2:	d00b      	beq.n	800820c <UART_SetConfig+0x2b0>
 80081f4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80081f8:	d824      	bhi.n	8008244 <UART_SetConfig+0x2e8>
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d003      	beq.n	8008206 <UART_SetConfig+0x2aa>
 80081fe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008202:	d006      	beq.n	8008212 <UART_SetConfig+0x2b6>
 8008204:	e01e      	b.n	8008244 <UART_SetConfig+0x2e8>
 8008206:	2300      	movs	r3, #0
 8008208:	77fb      	strb	r3, [r7, #31]
 800820a:	e04b      	b.n	80082a4 <UART_SetConfig+0x348>
 800820c:	2302      	movs	r3, #2
 800820e:	77fb      	strb	r3, [r7, #31]
 8008210:	e048      	b.n	80082a4 <UART_SetConfig+0x348>
 8008212:	2304      	movs	r3, #4
 8008214:	77fb      	strb	r3, [r7, #31]
 8008216:	e045      	b.n	80082a4 <UART_SetConfig+0x348>
 8008218:	2308      	movs	r3, #8
 800821a:	77fb      	strb	r3, [r7, #31]
 800821c:	e042      	b.n	80082a4 <UART_SetConfig+0x348>
 800821e:	bf00      	nop
 8008220:	efff69f3 	.word	0xefff69f3
 8008224:	40011000 	.word	0x40011000
 8008228:	40023800 	.word	0x40023800
 800822c:	40004400 	.word	0x40004400
 8008230:	40004800 	.word	0x40004800
 8008234:	40004c00 	.word	0x40004c00
 8008238:	40005000 	.word	0x40005000
 800823c:	40011400 	.word	0x40011400
 8008240:	40007800 	.word	0x40007800
 8008244:	2310      	movs	r3, #16
 8008246:	77fb      	strb	r3, [r7, #31]
 8008248:	e02c      	b.n	80082a4 <UART_SetConfig+0x348>
 800824a:	687b      	ldr	r3, [r7, #4]
 800824c:	681b      	ldr	r3, [r3, #0]
 800824e:	4a72      	ldr	r2, [pc, #456]	; (8008418 <UART_SetConfig+0x4bc>)
 8008250:	4293      	cmp	r3, r2
 8008252:	d125      	bne.n	80082a0 <UART_SetConfig+0x344>
 8008254:	4b71      	ldr	r3, [pc, #452]	; (800841c <UART_SetConfig+0x4c0>)
 8008256:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800825a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800825e:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8008262:	d017      	beq.n	8008294 <UART_SetConfig+0x338>
 8008264:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8008268:	d817      	bhi.n	800829a <UART_SetConfig+0x33e>
 800826a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800826e:	d00b      	beq.n	8008288 <UART_SetConfig+0x32c>
 8008270:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008274:	d811      	bhi.n	800829a <UART_SetConfig+0x33e>
 8008276:	2b00      	cmp	r3, #0
 8008278:	d003      	beq.n	8008282 <UART_SetConfig+0x326>
 800827a:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800827e:	d006      	beq.n	800828e <UART_SetConfig+0x332>
 8008280:	e00b      	b.n	800829a <UART_SetConfig+0x33e>
 8008282:	2300      	movs	r3, #0
 8008284:	77fb      	strb	r3, [r7, #31]
 8008286:	e00d      	b.n	80082a4 <UART_SetConfig+0x348>
 8008288:	2302      	movs	r3, #2
 800828a:	77fb      	strb	r3, [r7, #31]
 800828c:	e00a      	b.n	80082a4 <UART_SetConfig+0x348>
 800828e:	2304      	movs	r3, #4
 8008290:	77fb      	strb	r3, [r7, #31]
 8008292:	e007      	b.n	80082a4 <UART_SetConfig+0x348>
 8008294:	2308      	movs	r3, #8
 8008296:	77fb      	strb	r3, [r7, #31]
 8008298:	e004      	b.n	80082a4 <UART_SetConfig+0x348>
 800829a:	2310      	movs	r3, #16
 800829c:	77fb      	strb	r3, [r7, #31]
 800829e:	e001      	b.n	80082a4 <UART_SetConfig+0x348>
 80082a0:	2310      	movs	r3, #16
 80082a2:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80082a4:	687b      	ldr	r3, [r7, #4]
 80082a6:	69db      	ldr	r3, [r3, #28]
 80082a8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80082ac:	d15b      	bne.n	8008366 <UART_SetConfig+0x40a>
  {
    switch (clocksource)
 80082ae:	7ffb      	ldrb	r3, [r7, #31]
 80082b0:	2b08      	cmp	r3, #8
 80082b2:	d828      	bhi.n	8008306 <UART_SetConfig+0x3aa>
 80082b4:	a201      	add	r2, pc, #4	; (adr r2, 80082bc <UART_SetConfig+0x360>)
 80082b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80082ba:	bf00      	nop
 80082bc:	080082e1 	.word	0x080082e1
 80082c0:	080082e9 	.word	0x080082e9
 80082c4:	080082f1 	.word	0x080082f1
 80082c8:	08008307 	.word	0x08008307
 80082cc:	080082f7 	.word	0x080082f7
 80082d0:	08008307 	.word	0x08008307
 80082d4:	08008307 	.word	0x08008307
 80082d8:	08008307 	.word	0x08008307
 80082dc:	080082ff 	.word	0x080082ff
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80082e0:	f7fd fa4c 	bl	800577c <HAL_RCC_GetPCLK1Freq>
 80082e4:	61b8      	str	r0, [r7, #24]
        break;
 80082e6:	e013      	b.n	8008310 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80082e8:	f7fd fa5c 	bl	80057a4 <HAL_RCC_GetPCLK2Freq>
 80082ec:	61b8      	str	r0, [r7, #24]
        break;
 80082ee:	e00f      	b.n	8008310 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80082f0:	4b4b      	ldr	r3, [pc, #300]	; (8008420 <UART_SetConfig+0x4c4>)
 80082f2:	61bb      	str	r3, [r7, #24]
        break;
 80082f4:	e00c      	b.n	8008310 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80082f6:	f7fd f96f 	bl	80055d8 <HAL_RCC_GetSysClockFreq>
 80082fa:	61b8      	str	r0, [r7, #24]
        break;
 80082fc:	e008      	b.n	8008310 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80082fe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8008302:	61bb      	str	r3, [r7, #24]
        break;
 8008304:	e004      	b.n	8008310 <UART_SetConfig+0x3b4>
      default:
        pclk = 0U;
 8008306:	2300      	movs	r3, #0
 8008308:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 800830a:	2301      	movs	r3, #1
 800830c:	77bb      	strb	r3, [r7, #30]
        break;
 800830e:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 8008310:	69bb      	ldr	r3, [r7, #24]
 8008312:	2b00      	cmp	r3, #0
 8008314:	d074      	beq.n	8008400 <UART_SetConfig+0x4a4>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8008316:	69bb      	ldr	r3, [r7, #24]
 8008318:	005a      	lsls	r2, r3, #1
 800831a:	687b      	ldr	r3, [r7, #4]
 800831c:	685b      	ldr	r3, [r3, #4]
 800831e:	085b      	lsrs	r3, r3, #1
 8008320:	441a      	add	r2, r3
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	685b      	ldr	r3, [r3, #4]
 8008326:	fbb2 f3f3 	udiv	r3, r2, r3
 800832a:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800832c:	693b      	ldr	r3, [r7, #16]
 800832e:	2b0f      	cmp	r3, #15
 8008330:	d916      	bls.n	8008360 <UART_SetConfig+0x404>
 8008332:	693b      	ldr	r3, [r7, #16]
 8008334:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008338:	d212      	bcs.n	8008360 <UART_SetConfig+0x404>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800833a:	693b      	ldr	r3, [r7, #16]
 800833c:	b29b      	uxth	r3, r3
 800833e:	f023 030f 	bic.w	r3, r3, #15
 8008342:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8008344:	693b      	ldr	r3, [r7, #16]
 8008346:	085b      	lsrs	r3, r3, #1
 8008348:	b29b      	uxth	r3, r3
 800834a:	f003 0307 	and.w	r3, r3, #7
 800834e:	b29a      	uxth	r2, r3
 8008350:	89fb      	ldrh	r3, [r7, #14]
 8008352:	4313      	orrs	r3, r2
 8008354:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8008356:	687b      	ldr	r3, [r7, #4]
 8008358:	681b      	ldr	r3, [r3, #0]
 800835a:	89fa      	ldrh	r2, [r7, #14]
 800835c:	60da      	str	r2, [r3, #12]
 800835e:	e04f      	b.n	8008400 <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 8008360:	2301      	movs	r3, #1
 8008362:	77bb      	strb	r3, [r7, #30]
 8008364:	e04c      	b.n	8008400 <UART_SetConfig+0x4a4>
      }
    }
  }
  else
  {
    switch (clocksource)
 8008366:	7ffb      	ldrb	r3, [r7, #31]
 8008368:	2b08      	cmp	r3, #8
 800836a:	d828      	bhi.n	80083be <UART_SetConfig+0x462>
 800836c:	a201      	add	r2, pc, #4	; (adr r2, 8008374 <UART_SetConfig+0x418>)
 800836e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008372:	bf00      	nop
 8008374:	08008399 	.word	0x08008399
 8008378:	080083a1 	.word	0x080083a1
 800837c:	080083a9 	.word	0x080083a9
 8008380:	080083bf 	.word	0x080083bf
 8008384:	080083af 	.word	0x080083af
 8008388:	080083bf 	.word	0x080083bf
 800838c:	080083bf 	.word	0x080083bf
 8008390:	080083bf 	.word	0x080083bf
 8008394:	080083b7 	.word	0x080083b7
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8008398:	f7fd f9f0 	bl	800577c <HAL_RCC_GetPCLK1Freq>
 800839c:	61b8      	str	r0, [r7, #24]
        break;
 800839e:	e013      	b.n	80083c8 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80083a0:	f7fd fa00 	bl	80057a4 <HAL_RCC_GetPCLK2Freq>
 80083a4:	61b8      	str	r0, [r7, #24]
        break;
 80083a6:	e00f      	b.n	80083c8 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80083a8:	4b1d      	ldr	r3, [pc, #116]	; (8008420 <UART_SetConfig+0x4c4>)
 80083aa:	61bb      	str	r3, [r7, #24]
        break;
 80083ac:	e00c      	b.n	80083c8 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80083ae:	f7fd f913 	bl	80055d8 <HAL_RCC_GetSysClockFreq>
 80083b2:	61b8      	str	r0, [r7, #24]
        break;
 80083b4:	e008      	b.n	80083c8 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80083b6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80083ba:	61bb      	str	r3, [r7, #24]
        break;
 80083bc:	e004      	b.n	80083c8 <UART_SetConfig+0x46c>
      default:
        pclk = 0U;
 80083be:	2300      	movs	r3, #0
 80083c0:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80083c2:	2301      	movs	r3, #1
 80083c4:	77bb      	strb	r3, [r7, #30]
        break;
 80083c6:	bf00      	nop
    }

    if (pclk != 0U)
 80083c8:	69bb      	ldr	r3, [r7, #24]
 80083ca:	2b00      	cmp	r3, #0
 80083cc:	d018      	beq.n	8008400 <UART_SetConfig+0x4a4>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	685b      	ldr	r3, [r3, #4]
 80083d2:	085a      	lsrs	r2, r3, #1
 80083d4:	69bb      	ldr	r3, [r7, #24]
 80083d6:	441a      	add	r2, r3
 80083d8:	687b      	ldr	r3, [r7, #4]
 80083da:	685b      	ldr	r3, [r3, #4]
 80083dc:	fbb2 f3f3 	udiv	r3, r2, r3
 80083e0:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80083e2:	693b      	ldr	r3, [r7, #16]
 80083e4:	2b0f      	cmp	r3, #15
 80083e6:	d909      	bls.n	80083fc <UART_SetConfig+0x4a0>
 80083e8:	693b      	ldr	r3, [r7, #16]
 80083ea:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80083ee:	d205      	bcs.n	80083fc <UART_SetConfig+0x4a0>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 80083f0:	693b      	ldr	r3, [r7, #16]
 80083f2:	b29a      	uxth	r2, r3
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	681b      	ldr	r3, [r3, #0]
 80083f8:	60da      	str	r2, [r3, #12]
 80083fa:	e001      	b.n	8008400 <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 80083fc:	2301      	movs	r3, #1
 80083fe:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	2200      	movs	r2, #0
 8008404:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8008406:	687b      	ldr	r3, [r7, #4]
 8008408:	2200      	movs	r2, #0
 800840a:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 800840c:	7fbb      	ldrb	r3, [r7, #30]
}
 800840e:	4618      	mov	r0, r3
 8008410:	3720      	adds	r7, #32
 8008412:	46bd      	mov	sp, r7
 8008414:	bd80      	pop	{r7, pc}
 8008416:	bf00      	nop
 8008418:	40007c00 	.word	0x40007c00
 800841c:	40023800 	.word	0x40023800
 8008420:	00f42400 	.word	0x00f42400

08008424 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8008424:	b480      	push	{r7}
 8008426:	b083      	sub	sp, #12
 8008428:	af00      	add	r7, sp, #0
 800842a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800842c:	687b      	ldr	r3, [r7, #4]
 800842e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008430:	f003 0301 	and.w	r3, r3, #1
 8008434:	2b00      	cmp	r3, #0
 8008436:	d00a      	beq.n	800844e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	681b      	ldr	r3, [r3, #0]
 800843c:	685b      	ldr	r3, [r3, #4]
 800843e:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8008442:	687b      	ldr	r3, [r7, #4]
 8008444:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	430a      	orrs	r2, r1
 800844c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800844e:	687b      	ldr	r3, [r7, #4]
 8008450:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008452:	f003 0302 	and.w	r3, r3, #2
 8008456:	2b00      	cmp	r3, #0
 8008458:	d00a      	beq.n	8008470 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800845a:	687b      	ldr	r3, [r7, #4]
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	685b      	ldr	r3, [r3, #4]
 8008460:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008468:	687b      	ldr	r3, [r7, #4]
 800846a:	681b      	ldr	r3, [r3, #0]
 800846c:	430a      	orrs	r2, r1
 800846e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8008470:	687b      	ldr	r3, [r7, #4]
 8008472:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008474:	f003 0304 	and.w	r3, r3, #4
 8008478:	2b00      	cmp	r3, #0
 800847a:	d00a      	beq.n	8008492 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800847c:	687b      	ldr	r3, [r7, #4]
 800847e:	681b      	ldr	r3, [r3, #0]
 8008480:	685b      	ldr	r3, [r3, #4]
 8008482:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8008486:	687b      	ldr	r3, [r7, #4]
 8008488:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800848a:	687b      	ldr	r3, [r7, #4]
 800848c:	681b      	ldr	r3, [r3, #0]
 800848e:	430a      	orrs	r2, r1
 8008490:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008496:	f003 0308 	and.w	r3, r3, #8
 800849a:	2b00      	cmp	r3, #0
 800849c:	d00a      	beq.n	80084b4 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800849e:	687b      	ldr	r3, [r7, #4]
 80084a0:	681b      	ldr	r3, [r3, #0]
 80084a2:	685b      	ldr	r3, [r3, #4]
 80084a4:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80084a8:	687b      	ldr	r3, [r7, #4]
 80084aa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80084ac:	687b      	ldr	r3, [r7, #4]
 80084ae:	681b      	ldr	r3, [r3, #0]
 80084b0:	430a      	orrs	r2, r1
 80084b2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80084b4:	687b      	ldr	r3, [r7, #4]
 80084b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084b8:	f003 0310 	and.w	r3, r3, #16
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d00a      	beq.n	80084d6 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	689b      	ldr	r3, [r3, #8]
 80084c6:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80084ce:	687b      	ldr	r3, [r7, #4]
 80084d0:	681b      	ldr	r3, [r3, #0]
 80084d2:	430a      	orrs	r2, r1
 80084d4:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084da:	f003 0320 	and.w	r3, r3, #32
 80084de:	2b00      	cmp	r3, #0
 80084e0:	d00a      	beq.n	80084f8 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80084e2:	687b      	ldr	r3, [r7, #4]
 80084e4:	681b      	ldr	r3, [r3, #0]
 80084e6:	689b      	ldr	r3, [r3, #8]
 80084e8:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 80084ec:	687b      	ldr	r3, [r7, #4]
 80084ee:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	681b      	ldr	r3, [r3, #0]
 80084f4:	430a      	orrs	r2, r1
 80084f6:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80084f8:	687b      	ldr	r3, [r7, #4]
 80084fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008500:	2b00      	cmp	r3, #0
 8008502:	d01a      	beq.n	800853a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8008504:	687b      	ldr	r3, [r7, #4]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	685b      	ldr	r3, [r3, #4]
 800850a:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800850e:	687b      	ldr	r3, [r7, #4]
 8008510:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	681b      	ldr	r3, [r3, #0]
 8008516:	430a      	orrs	r2, r1
 8008518:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800851a:	687b      	ldr	r3, [r7, #4]
 800851c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800851e:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008522:	d10a      	bne.n	800853a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	685b      	ldr	r3, [r3, #4]
 800852a:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800852e:	687b      	ldr	r3, [r7, #4]
 8008530:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	681b      	ldr	r3, [r3, #0]
 8008536:	430a      	orrs	r2, r1
 8008538:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800853e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008542:	2b00      	cmp	r3, #0
 8008544:	d00a      	beq.n	800855c <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8008546:	687b      	ldr	r3, [r7, #4]
 8008548:	681b      	ldr	r3, [r3, #0]
 800854a:	685b      	ldr	r3, [r3, #4]
 800854c:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8008550:	687b      	ldr	r3, [r7, #4]
 8008552:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8008554:	687b      	ldr	r3, [r7, #4]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	430a      	orrs	r2, r1
 800855a:	605a      	str	r2, [r3, #4]
  }
}
 800855c:	bf00      	nop
 800855e:	370c      	adds	r7, #12
 8008560:	46bd      	mov	sp, r7
 8008562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008566:	4770      	bx	lr

08008568 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8008568:	b580      	push	{r7, lr}
 800856a:	b086      	sub	sp, #24
 800856c:	af02      	add	r7, sp, #8
 800856e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008570:	687b      	ldr	r3, [r7, #4]
 8008572:	2200      	movs	r2, #0
 8008574:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8008578:	f7f9 fe40 	bl	80021fc <HAL_GetTick>
 800857c:	60f8      	str	r0, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800857e:	687b      	ldr	r3, [r7, #4]
 8008580:	681b      	ldr	r3, [r3, #0]
 8008582:	681b      	ldr	r3, [r3, #0]
 8008584:	f003 0308 	and.w	r3, r3, #8
 8008588:	2b08      	cmp	r3, #8
 800858a:	d10e      	bne.n	80085aa <UART_CheckIdleState+0x42>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800858c:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8008590:	9300      	str	r3, [sp, #0]
 8008592:	68fb      	ldr	r3, [r7, #12]
 8008594:	2200      	movs	r2, #0
 8008596:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800859a:	6878      	ldr	r0, [r7, #4]
 800859c:	f000 f817 	bl	80085ce <UART_WaitOnFlagUntilTimeout>
 80085a0:	4603      	mov	r3, r0
 80085a2:	2b00      	cmp	r3, #0
 80085a4:	d001      	beq.n	80085aa <UART_CheckIdleState+0x42>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80085a6:	2303      	movs	r3, #3
 80085a8:	e00d      	b.n	80085c6 <UART_CheckIdleState+0x5e>
    }
  }
#endif

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80085aa:	687b      	ldr	r3, [r7, #4]
 80085ac:	2220      	movs	r2, #32
 80085ae:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80085b0:	687b      	ldr	r3, [r7, #4]
 80085b2:	2220      	movs	r2, #32
 80085b4:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	2200      	movs	r2, #0
 80085ba:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	2200      	movs	r2, #0
 80085c0:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

  return HAL_OK;
 80085c4:	2300      	movs	r3, #0
}
 80085c6:	4618      	mov	r0, r3
 80085c8:	3710      	adds	r7, #16
 80085ca:	46bd      	mov	sp, r7
 80085cc:	bd80      	pop	{r7, pc}

080085ce <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80085ce:	b580      	push	{r7, lr}
 80085d0:	b09c      	sub	sp, #112	; 0x70
 80085d2:	af00      	add	r7, sp, #0
 80085d4:	60f8      	str	r0, [r7, #12]
 80085d6:	60b9      	str	r1, [r7, #8]
 80085d8:	603b      	str	r3, [r7, #0]
 80085da:	4613      	mov	r3, r2
 80085dc:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80085de:	e0a5      	b.n	800872c <UART_WaitOnFlagUntilTimeout+0x15e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80085e0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80085e2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80085e6:	f000 80a1 	beq.w	800872c <UART_WaitOnFlagUntilTimeout+0x15e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80085ea:	f7f9 fe07 	bl	80021fc <HAL_GetTick>
 80085ee:	4602      	mov	r2, r0
 80085f0:	683b      	ldr	r3, [r7, #0]
 80085f2:	1ad3      	subs	r3, r2, r3
 80085f4:	6fba      	ldr	r2, [r7, #120]	; 0x78
 80085f6:	429a      	cmp	r2, r3
 80085f8:	d302      	bcc.n	8008600 <UART_WaitOnFlagUntilTimeout+0x32>
 80085fa:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80085fc:	2b00      	cmp	r3, #0
 80085fe:	d13e      	bne.n	800867e <UART_WaitOnFlagUntilTimeout+0xb0>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008600:	68fb      	ldr	r3, [r7, #12]
 8008602:	681b      	ldr	r3, [r3, #0]
 8008604:	653b      	str	r3, [r7, #80]	; 0x50
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008606:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8008608:	e853 3f00 	ldrex	r3, [r3]
 800860c:	64fb      	str	r3, [r7, #76]	; 0x4c
   return(result);
 800860e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8008610:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8008614:	667b      	str	r3, [r7, #100]	; 0x64
 8008616:	68fb      	ldr	r3, [r7, #12]
 8008618:	681b      	ldr	r3, [r3, #0]
 800861a:	461a      	mov	r2, r3
 800861c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800861e:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008620:	65ba      	str	r2, [r7, #88]	; 0x58
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008622:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8008624:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 8008626:	e841 2300 	strex	r3, r2, [r1]
 800862a:	657b      	str	r3, [r7, #84]	; 0x54
   return(result);
 800862c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800862e:	2b00      	cmp	r3, #0
 8008630:	d1e6      	bne.n	8008600 <UART_WaitOnFlagUntilTimeout+0x32>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008632:	68fb      	ldr	r3, [r7, #12]
 8008634:	681b      	ldr	r3, [r3, #0]
 8008636:	3308      	adds	r3, #8
 8008638:	63fb      	str	r3, [r7, #60]	; 0x3c
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800863a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800863c:	e853 3f00 	ldrex	r3, [r3]
 8008640:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 8008642:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008644:	f023 0301 	bic.w	r3, r3, #1
 8008648:	663b      	str	r3, [r7, #96]	; 0x60
 800864a:	68fb      	ldr	r3, [r7, #12]
 800864c:	681b      	ldr	r3, [r3, #0]
 800864e:	3308      	adds	r3, #8
 8008650:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8008652:	64ba      	str	r2, [r7, #72]	; 0x48
 8008654:	647b      	str	r3, [r7, #68]	; 0x44
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008656:	6c79      	ldr	r1, [r7, #68]	; 0x44
 8008658:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800865a:	e841 2300 	strex	r3, r2, [r1]
 800865e:	643b      	str	r3, [r7, #64]	; 0x40
   return(result);
 8008660:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008662:	2b00      	cmp	r3, #0
 8008664:	d1e5      	bne.n	8008632 <UART_WaitOnFlagUntilTimeout+0x64>

        huart->gState = HAL_UART_STATE_READY;
 8008666:	68fb      	ldr	r3, [r7, #12]
 8008668:	2220      	movs	r2, #32
 800866a:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 800866c:	68fb      	ldr	r3, [r7, #12]
 800866e:	2220      	movs	r2, #32
 8008670:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8008672:	68fb      	ldr	r3, [r7, #12]
 8008674:	2200      	movs	r2, #0
 8008676:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

        return HAL_TIMEOUT;
 800867a:	2303      	movs	r3, #3
 800867c:	e067      	b.n	800874e <UART_WaitOnFlagUntilTimeout+0x180>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 800867e:	68fb      	ldr	r3, [r7, #12]
 8008680:	681b      	ldr	r3, [r3, #0]
 8008682:	681b      	ldr	r3, [r3, #0]
 8008684:	f003 0304 	and.w	r3, r3, #4
 8008688:	2b00      	cmp	r3, #0
 800868a:	d04f      	beq.n	800872c <UART_WaitOnFlagUntilTimeout+0x15e>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800868c:	68fb      	ldr	r3, [r7, #12]
 800868e:	681b      	ldr	r3, [r3, #0]
 8008690:	69db      	ldr	r3, [r3, #28]
 8008692:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008696:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800869a:	d147      	bne.n	800872c <UART_WaitOnFlagUntilTimeout+0x15e>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800869c:	68fb      	ldr	r3, [r7, #12]
 800869e:	681b      	ldr	r3, [r3, #0]
 80086a0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80086a4:	621a      	str	r2, [r3, #32]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80086a6:	68fb      	ldr	r3, [r7, #12]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80086ac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80086ae:	e853 3f00 	ldrex	r3, [r3]
 80086b2:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 80086b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086b6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80086ba:	66fb      	str	r3, [r7, #108]	; 0x6c
 80086bc:	68fb      	ldr	r3, [r7, #12]
 80086be:	681b      	ldr	r3, [r3, #0]
 80086c0:	461a      	mov	r2, r3
 80086c2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80086c4:	637b      	str	r3, [r7, #52]	; 0x34
 80086c6:	633a      	str	r2, [r7, #48]	; 0x30
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80086c8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80086ca:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80086cc:	e841 2300 	strex	r3, r2, [r1]
 80086d0:	62fb      	str	r3, [r7, #44]	; 0x2c
   return(result);
 80086d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	d1e6      	bne.n	80086a6 <UART_WaitOnFlagUntilTimeout+0xd8>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80086d8:	68fb      	ldr	r3, [r7, #12]
 80086da:	681b      	ldr	r3, [r3, #0]
 80086dc:	3308      	adds	r3, #8
 80086de:	617b      	str	r3, [r7, #20]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80086e0:	697b      	ldr	r3, [r7, #20]
 80086e2:	e853 3f00 	ldrex	r3, [r3]
 80086e6:	613b      	str	r3, [r7, #16]
   return(result);
 80086e8:	693b      	ldr	r3, [r7, #16]
 80086ea:	f023 0301 	bic.w	r3, r3, #1
 80086ee:	66bb      	str	r3, [r7, #104]	; 0x68
 80086f0:	68fb      	ldr	r3, [r7, #12]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	3308      	adds	r3, #8
 80086f6:	6eba      	ldr	r2, [r7, #104]	; 0x68
 80086f8:	623a      	str	r2, [r7, #32]
 80086fa:	61fb      	str	r3, [r7, #28]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80086fc:	69f9      	ldr	r1, [r7, #28]
 80086fe:	6a3a      	ldr	r2, [r7, #32]
 8008700:	e841 2300 	strex	r3, r2, [r1]
 8008704:	61bb      	str	r3, [r7, #24]
   return(result);
 8008706:	69bb      	ldr	r3, [r7, #24]
 8008708:	2b00      	cmp	r3, #0
 800870a:	d1e5      	bne.n	80086d8 <UART_WaitOnFlagUntilTimeout+0x10a>

          huart->gState = HAL_UART_STATE_READY;
 800870c:	68fb      	ldr	r3, [r7, #12]
 800870e:	2220      	movs	r2, #32
 8008710:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8008712:	68fb      	ldr	r3, [r7, #12]
 8008714:	2220      	movs	r2, #32
 8008716:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8008718:	68fb      	ldr	r3, [r7, #12]
 800871a:	2220      	movs	r2, #32
 800871c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	2200      	movs	r2, #0
 8008724:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74

          return HAL_TIMEOUT;
 8008728:	2303      	movs	r3, #3
 800872a:	e010      	b.n	800874e <UART_WaitOnFlagUntilTimeout+0x180>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800872c:	68fb      	ldr	r3, [r7, #12]
 800872e:	681b      	ldr	r3, [r3, #0]
 8008730:	69da      	ldr	r2, [r3, #28]
 8008732:	68bb      	ldr	r3, [r7, #8]
 8008734:	4013      	ands	r3, r2
 8008736:	68ba      	ldr	r2, [r7, #8]
 8008738:	429a      	cmp	r2, r3
 800873a:	bf0c      	ite	eq
 800873c:	2301      	moveq	r3, #1
 800873e:	2300      	movne	r3, #0
 8008740:	b2db      	uxtb	r3, r3
 8008742:	461a      	mov	r2, r3
 8008744:	79fb      	ldrb	r3, [r7, #7]
 8008746:	429a      	cmp	r2, r3
 8008748:	f43f af4a 	beq.w	80085e0 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800874c:	2300      	movs	r3, #0
}
 800874e:	4618      	mov	r0, r3
 8008750:	3770      	adds	r7, #112	; 0x70
 8008752:	46bd      	mov	sp, r7
 8008754:	bd80      	pop	{r7, pc}

08008756 <UART_EndTxTransfer>:
  * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
{
 8008756:	b480      	push	{r7}
 8008758:	b089      	sub	sp, #36	; 0x24
 800875a:	af00      	add	r7, sp, #0
 800875c:	6078      	str	r0, [r7, #4]
  /* Disable TXEIE and TCIE interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008764:	68fb      	ldr	r3, [r7, #12]
 8008766:	e853 3f00 	ldrex	r3, [r3]
 800876a:	60bb      	str	r3, [r7, #8]
   return(result);
 800876c:	68bb      	ldr	r3, [r7, #8]
 800876e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8008772:	61fb      	str	r3, [r7, #28]
 8008774:	687b      	ldr	r3, [r7, #4]
 8008776:	681b      	ldr	r3, [r3, #0]
 8008778:	461a      	mov	r2, r3
 800877a:	69fb      	ldr	r3, [r7, #28]
 800877c:	61bb      	str	r3, [r7, #24]
 800877e:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008780:	6979      	ldr	r1, [r7, #20]
 8008782:	69ba      	ldr	r2, [r7, #24]
 8008784:	e841 2300 	strex	r3, r2, [r1]
 8008788:	613b      	str	r3, [r7, #16]
   return(result);
 800878a:	693b      	ldr	r3, [r7, #16]
 800878c:	2b00      	cmp	r3, #0
 800878e:	d1e6      	bne.n	800875e <UART_EndTxTransfer+0x8>

  /* At end of Tx process, restore huart->gState to Ready */
  huart->gState = HAL_UART_STATE_READY;
 8008790:	687b      	ldr	r3, [r7, #4]
 8008792:	2220      	movs	r2, #32
 8008794:	679a      	str	r2, [r3, #120]	; 0x78
}
 8008796:	bf00      	nop
 8008798:	3724      	adds	r7, #36	; 0x24
 800879a:	46bd      	mov	sp, r7
 800879c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087a0:	4770      	bx	lr

080087a2 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 80087a2:	b480      	push	{r7}
 80087a4:	b095      	sub	sp, #84	; 0x54
 80087a6:	af00      	add	r7, sp, #0
 80087a8:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80087aa:	687b      	ldr	r3, [r7, #4]
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	637b      	str	r3, [r7, #52]	; 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80087b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80087b2:	e853 3f00 	ldrex	r3, [r3]
 80087b6:	633b      	str	r3, [r7, #48]	; 0x30
   return(result);
 80087b8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80087ba:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80087be:	64fb      	str	r3, [r7, #76]	; 0x4c
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	461a      	mov	r2, r3
 80087c6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80087c8:	643b      	str	r3, [r7, #64]	; 0x40
 80087ca:	63fa      	str	r2, [r7, #60]	; 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80087cc:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80087ce:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80087d0:	e841 2300 	strex	r3, r2, [r1]
 80087d4:	63bb      	str	r3, [r7, #56]	; 0x38
   return(result);
 80087d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80087d8:	2b00      	cmp	r3, #0
 80087da:	d1e6      	bne.n	80087aa <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	681b      	ldr	r3, [r3, #0]
 80087e0:	3308      	adds	r3, #8
 80087e2:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80087e4:	6a3b      	ldr	r3, [r7, #32]
 80087e6:	e853 3f00 	ldrex	r3, [r3]
 80087ea:	61fb      	str	r3, [r7, #28]
   return(result);
 80087ec:	69fb      	ldr	r3, [r7, #28]
 80087ee:	f023 0301 	bic.w	r3, r3, #1
 80087f2:	64bb      	str	r3, [r7, #72]	; 0x48
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	681b      	ldr	r3, [r3, #0]
 80087f8:	3308      	adds	r3, #8
 80087fa:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80087fc:	62fa      	str	r2, [r7, #44]	; 0x2c
 80087fe:	62bb      	str	r3, [r7, #40]	; 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008800:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8008802:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8008804:	e841 2300 	strex	r3, r2, [r1]
 8008808:	627b      	str	r3, [r7, #36]	; 0x24
   return(result);
 800880a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800880c:	2b00      	cmp	r3, #0
 800880e:	d1e5      	bne.n	80087dc <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8008810:	687b      	ldr	r3, [r7, #4]
 8008812:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008814:	2b01      	cmp	r3, #1
 8008816:	d118      	bne.n	800884a <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8008818:	687b      	ldr	r3, [r7, #4]
 800881a:	681b      	ldr	r3, [r3, #0]
 800881c:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800881e:	68fb      	ldr	r3, [r7, #12]
 8008820:	e853 3f00 	ldrex	r3, [r3]
 8008824:	60bb      	str	r3, [r7, #8]
   return(result);
 8008826:	68bb      	ldr	r3, [r7, #8]
 8008828:	f023 0310 	bic.w	r3, r3, #16
 800882c:	647b      	str	r3, [r7, #68]	; 0x44
 800882e:	687b      	ldr	r3, [r7, #4]
 8008830:	681b      	ldr	r3, [r3, #0]
 8008832:	461a      	mov	r2, r3
 8008834:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008836:	61bb      	str	r3, [r7, #24]
 8008838:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800883a:	6979      	ldr	r1, [r7, #20]
 800883c:	69ba      	ldr	r2, [r7, #24]
 800883e:	e841 2300 	strex	r3, r2, [r1]
 8008842:	613b      	str	r3, [r7, #16]
   return(result);
 8008844:	693b      	ldr	r3, [r7, #16]
 8008846:	2b00      	cmp	r3, #0
 8008848:	d1e6      	bne.n	8008818 <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	2220      	movs	r2, #32
 800884e:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8008850:	687b      	ldr	r3, [r7, #4]
 8008852:	2200      	movs	r2, #0
 8008854:	661a      	str	r2, [r3, #96]	; 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	2200      	movs	r2, #0
 800885a:	665a      	str	r2, [r3, #100]	; 0x64
}
 800885c:	bf00      	nop
 800885e:	3754      	adds	r7, #84	; 0x54
 8008860:	46bd      	mov	sp, r7
 8008862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008866:	4770      	bx	lr

08008868 <UART_DMATransmitCplt>:
  * @brief DMA UART transmit process complete callback.
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8008868:	b580      	push	{r7, lr}
 800886a:	b090      	sub	sp, #64	; 0x40
 800886c:	af00      	add	r7, sp, #0
 800886e:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008874:	63fb      	str	r3, [r7, #60]	; 0x3c

  /* DMA Normal mode */
  if (hdma->Init.Mode != DMA_CIRCULAR)
 8008876:	687b      	ldr	r3, [r7, #4]
 8008878:	69db      	ldr	r3, [r3, #28]
 800887a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800887e:	d037      	beq.n	80088f0 <UART_DMATransmitCplt+0x88>
  {
    huart->TxXferCount = 0U;
 8008880:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008882:	2200      	movs	r2, #0
 8008884:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52

    /* Disable the DMA transfer for transmit request by resetting the DMAT bit
       in the UART CR3 register */
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 8008888:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800888a:	681b      	ldr	r3, [r3, #0]
 800888c:	3308      	adds	r3, #8
 800888e:	627b      	str	r3, [r7, #36]	; 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008890:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008892:	e853 3f00 	ldrex	r3, [r3]
 8008896:	623b      	str	r3, [r7, #32]
   return(result);
 8008898:	6a3b      	ldr	r3, [r7, #32]
 800889a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800889e:	63bb      	str	r3, [r7, #56]	; 0x38
 80088a0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	3308      	adds	r3, #8
 80088a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80088a8:	633a      	str	r2, [r7, #48]	; 0x30
 80088aa:	62fb      	str	r3, [r7, #44]	; 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80088ac:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80088ae:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80088b0:	e841 2300 	strex	r3, r2, [r1]
 80088b4:	62bb      	str	r3, [r7, #40]	; 0x28
   return(result);
 80088b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80088b8:	2b00      	cmp	r3, #0
 80088ba:	d1e5      	bne.n	8008888 <UART_DMATransmitCplt+0x20>

    /* Enable the UART Transmit Complete Interrupt */
    ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 80088bc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80088be:	681b      	ldr	r3, [r3, #0]
 80088c0:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80088c2:	693b      	ldr	r3, [r7, #16]
 80088c4:	e853 3f00 	ldrex	r3, [r3]
 80088c8:	60fb      	str	r3, [r7, #12]
   return(result);
 80088ca:	68fb      	ldr	r3, [r7, #12]
 80088cc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80088d0:	637b      	str	r3, [r7, #52]	; 0x34
 80088d2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80088d4:	681b      	ldr	r3, [r3, #0]
 80088d6:	461a      	mov	r2, r3
 80088d8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80088da:	61fb      	str	r3, [r7, #28]
 80088dc:	61ba      	str	r2, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80088de:	69b9      	ldr	r1, [r7, #24]
 80088e0:	69fa      	ldr	r2, [r7, #28]
 80088e2:	e841 2300 	strex	r3, r2, [r1]
 80088e6:	617b      	str	r3, [r7, #20]
   return(result);
 80088e8:	697b      	ldr	r3, [r7, #20]
 80088ea:	2b00      	cmp	r3, #0
 80088ec:	d1e6      	bne.n	80088bc <UART_DMATransmitCplt+0x54>
#else
    /*Call legacy weak Tx complete callback*/
    HAL_UART_TxCpltCallback(huart);
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
  }
}
 80088ee:	e002      	b.n	80088f6 <UART_DMATransmitCplt+0x8e>
    HAL_UART_TxCpltCallback(huart);
 80088f0:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80088f2:	f7ff fb15 	bl	8007f20 <HAL_UART_TxCpltCallback>
}
 80088f6:	bf00      	nop
 80088f8:	3740      	adds	r7, #64	; 0x40
 80088fa:	46bd      	mov	sp, r7
 80088fc:	bd80      	pop	{r7, pc}

080088fe <UART_DMATxHalfCplt>:
  * @brief DMA UART transmit process half complete callback.
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
{
 80088fe:	b580      	push	{r7, lr}
 8008900:	b084      	sub	sp, #16
 8008902:	af00      	add	r7, sp, #0
 8008904:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8008906:	687b      	ldr	r3, [r7, #4]
 8008908:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800890a:	60fb      	str	r3, [r7, #12]
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered Tx Half complete callback*/
  huart->TxHalfCpltCallback(huart);
#else
  /*Call legacy weak Tx Half complete callback*/
  HAL_UART_TxHalfCpltCallback(huart);
 800890c:	68f8      	ldr	r0, [r7, #12]
 800890e:	f7ff fb11 	bl	8007f34 <HAL_UART_TxHalfCpltCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 8008912:	bf00      	nop
 8008914:	3710      	adds	r7, #16
 8008916:	46bd      	mov	sp, r7
 8008918:	bd80      	pop	{r7, pc}

0800891a <UART_DMAError>:
  * @brief DMA UART communication error callback.
  * @param hdma DMA handle.
  * @retval None
  */
static void UART_DMAError(DMA_HandleTypeDef *hdma)
{
 800891a:	b580      	push	{r7, lr}
 800891c:	b086      	sub	sp, #24
 800891e:	af00      	add	r7, sp, #0
 8008920:	6078      	str	r0, [r7, #4]
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008926:	617b      	str	r3, [r7, #20]

  const HAL_UART_StateTypeDef gstate = huart->gState;
 8008928:	697b      	ldr	r3, [r7, #20]
 800892a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800892c:	613b      	str	r3, [r7, #16]
  const HAL_UART_StateTypeDef rxstate = huart->RxState;
 800892e:	697b      	ldr	r3, [r7, #20]
 8008930:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008932:	60fb      	str	r3, [r7, #12]

  /* Stop UART DMA Tx request if ongoing */
  if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 8008934:	697b      	ldr	r3, [r7, #20]
 8008936:	681b      	ldr	r3, [r3, #0]
 8008938:	689b      	ldr	r3, [r3, #8]
 800893a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800893e:	2b80      	cmp	r3, #128	; 0x80
 8008940:	d109      	bne.n	8008956 <UART_DMAError+0x3c>
 8008942:	693b      	ldr	r3, [r7, #16]
 8008944:	2b21      	cmp	r3, #33	; 0x21
 8008946:	d106      	bne.n	8008956 <UART_DMAError+0x3c>
      (gstate == HAL_UART_STATE_BUSY_TX))
  {
    huart->TxXferCount = 0U;
 8008948:	697b      	ldr	r3, [r7, #20]
 800894a:	2200      	movs	r2, #0
 800894c:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
    UART_EndTxTransfer(huart);
 8008950:	6978      	ldr	r0, [r7, #20]
 8008952:	f7ff ff00 	bl	8008756 <UART_EndTxTransfer>
  }

  /* Stop UART DMA Rx request if ongoing */
  if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 8008956:	697b      	ldr	r3, [r7, #20]
 8008958:	681b      	ldr	r3, [r3, #0]
 800895a:	689b      	ldr	r3, [r3, #8]
 800895c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008960:	2b40      	cmp	r3, #64	; 0x40
 8008962:	d109      	bne.n	8008978 <UART_DMAError+0x5e>
 8008964:	68fb      	ldr	r3, [r7, #12]
 8008966:	2b22      	cmp	r3, #34	; 0x22
 8008968:	d106      	bne.n	8008978 <UART_DMAError+0x5e>
      (rxstate == HAL_UART_STATE_BUSY_RX))
  {
    huart->RxXferCount = 0U;
 800896a:	697b      	ldr	r3, [r7, #20]
 800896c:	2200      	movs	r2, #0
 800896e:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
    UART_EndRxTransfer(huart);
 8008972:	6978      	ldr	r0, [r7, #20]
 8008974:	f7ff ff15 	bl	80087a2 <UART_EndRxTransfer>
  }

  huart->ErrorCode |= HAL_UART_ERROR_DMA;
 8008978:	697b      	ldr	r3, [r7, #20]
 800897a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800897e:	f043 0210 	orr.w	r2, r3, #16
 8008982:	697b      	ldr	r3, [r7, #20]
 8008984:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
  /*Call registered error callback*/
  huart->ErrorCallback(huart);
#else
  /*Call legacy weak error callback*/
  HAL_UART_ErrorCallback(huart);
 8008988:	6978      	ldr	r0, [r7, #20]
 800898a:	f7ff fadd 	bl	8007f48 <HAL_UART_ErrorCallback>
#endif /* USE_HAL_UART_REGISTER_CALLBACKS */
}
 800898e:	bf00      	nop
 8008990:	3718      	adds	r7, #24
 8008992:	46bd      	mov	sp, r7
 8008994:	bd80      	pop	{r7, pc}
	...

08008998 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008998:	b480      	push	{r7}
 800899a:	b083      	sub	sp, #12
 800899c:	af00      	add	r7, sp, #0
 800899e:	6078      	str	r0, [r7, #4]
 80089a0:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80089a2:	683b      	ldr	r3, [r7, #0]
 80089a4:	681b      	ldr	r3, [r3, #0]
 80089a6:	2b00      	cmp	r3, #0
 80089a8:	d121      	bne.n	80089ee <FMC_SDRAM_Init+0x56>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80089aa:	687b      	ldr	r3, [r7, #4]
 80089ac:	681a      	ldr	r2, [r3, #0]
 80089ae:	4b27      	ldr	r3, [pc, #156]	; (8008a4c <FMC_SDRAM_Init+0xb4>)
 80089b0:	4013      	ands	r3, r2
 80089b2:	683a      	ldr	r2, [r7, #0]
 80089b4:	6851      	ldr	r1, [r2, #4]
 80089b6:	683a      	ldr	r2, [r7, #0]
 80089b8:	6892      	ldr	r2, [r2, #8]
 80089ba:	4311      	orrs	r1, r2
 80089bc:	683a      	ldr	r2, [r7, #0]
 80089be:	68d2      	ldr	r2, [r2, #12]
 80089c0:	4311      	orrs	r1, r2
 80089c2:	683a      	ldr	r2, [r7, #0]
 80089c4:	6912      	ldr	r2, [r2, #16]
 80089c6:	4311      	orrs	r1, r2
 80089c8:	683a      	ldr	r2, [r7, #0]
 80089ca:	6952      	ldr	r2, [r2, #20]
 80089cc:	4311      	orrs	r1, r2
 80089ce:	683a      	ldr	r2, [r7, #0]
 80089d0:	6992      	ldr	r2, [r2, #24]
 80089d2:	4311      	orrs	r1, r2
 80089d4:	683a      	ldr	r2, [r7, #0]
 80089d6:	69d2      	ldr	r2, [r2, #28]
 80089d8:	4311      	orrs	r1, r2
 80089da:	683a      	ldr	r2, [r7, #0]
 80089dc:	6a12      	ldr	r2, [r2, #32]
 80089de:	4311      	orrs	r1, r2
 80089e0:	683a      	ldr	r2, [r7, #0]
 80089e2:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80089e4:	430a      	orrs	r2, r1
 80089e6:	431a      	orrs	r2, r3
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	601a      	str	r2, [r3, #0]
 80089ec:	e026      	b.n	8008a3c <FMC_SDRAM_Init+0xa4>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	681b      	ldr	r3, [r3, #0]
 80089f2:	f423 42f8 	bic.w	r2, r3, #31744	; 0x7c00
 80089f6:	683b      	ldr	r3, [r7, #0]
 80089f8:	69d9      	ldr	r1, [r3, #28]
 80089fa:	683b      	ldr	r3, [r7, #0]
 80089fc:	6a1b      	ldr	r3, [r3, #32]
 80089fe:	4319      	orrs	r1, r3
 8008a00:	683b      	ldr	r3, [r7, #0]
 8008a02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008a04:	430b      	orrs	r3, r1
 8008a06:	431a      	orrs	r2, r3
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	601a      	str	r2, [r3, #0]
               FMC_SDCR1_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8008a0c:	687b      	ldr	r3, [r7, #4]
 8008a0e:	685a      	ldr	r2, [r3, #4]
 8008a10:	4b0e      	ldr	r3, [pc, #56]	; (8008a4c <FMC_SDRAM_Init+0xb4>)
 8008a12:	4013      	ands	r3, r2
 8008a14:	683a      	ldr	r2, [r7, #0]
 8008a16:	6851      	ldr	r1, [r2, #4]
 8008a18:	683a      	ldr	r2, [r7, #0]
 8008a1a:	6892      	ldr	r2, [r2, #8]
 8008a1c:	4311      	orrs	r1, r2
 8008a1e:	683a      	ldr	r2, [r7, #0]
 8008a20:	68d2      	ldr	r2, [r2, #12]
 8008a22:	4311      	orrs	r1, r2
 8008a24:	683a      	ldr	r2, [r7, #0]
 8008a26:	6912      	ldr	r2, [r2, #16]
 8008a28:	4311      	orrs	r1, r2
 8008a2a:	683a      	ldr	r2, [r7, #0]
 8008a2c:	6952      	ldr	r2, [r2, #20]
 8008a2e:	4311      	orrs	r1, r2
 8008a30:	683a      	ldr	r2, [r7, #0]
 8008a32:	6992      	ldr	r2, [r2, #24]
 8008a34:	430a      	orrs	r2, r1
 8008a36:	431a      	orrs	r2, r3
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 8008a3c:	2300      	movs	r3, #0
}
 8008a3e:	4618      	mov	r0, r3
 8008a40:	370c      	adds	r7, #12
 8008a42:	46bd      	mov	sp, r7
 8008a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a48:	4770      	bx	lr
 8008a4a:	bf00      	nop
 8008a4c:	ffff8000 	.word	0xffff8000

08008a50 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 8008a50:	b480      	push	{r7}
 8008a52:	b085      	sub	sp, #20
 8008a54:	af00      	add	r7, sp, #0
 8008a56:	60f8      	str	r0, [r7, #12]
 8008a58:	60b9      	str	r1, [r7, #8]
 8008a5a:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	2b00      	cmp	r3, #0
 8008a60:	d128      	bne.n	8008ab4 <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008a62:	68fb      	ldr	r3, [r7, #12]
 8008a64:	689b      	ldr	r3, [r3, #8]
 8008a66:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 8008a6a:	68bb      	ldr	r3, [r7, #8]
 8008a6c:	681b      	ldr	r3, [r3, #0]
 8008a6e:	1e59      	subs	r1, r3, #1
 8008a70:	68bb      	ldr	r3, [r7, #8]
 8008a72:	685b      	ldr	r3, [r3, #4]
 8008a74:	3b01      	subs	r3, #1
 8008a76:	011b      	lsls	r3, r3, #4
 8008a78:	4319      	orrs	r1, r3
 8008a7a:	68bb      	ldr	r3, [r7, #8]
 8008a7c:	689b      	ldr	r3, [r3, #8]
 8008a7e:	3b01      	subs	r3, #1
 8008a80:	021b      	lsls	r3, r3, #8
 8008a82:	4319      	orrs	r1, r3
 8008a84:	68bb      	ldr	r3, [r7, #8]
 8008a86:	68db      	ldr	r3, [r3, #12]
 8008a88:	3b01      	subs	r3, #1
 8008a8a:	031b      	lsls	r3, r3, #12
 8008a8c:	4319      	orrs	r1, r3
 8008a8e:	68bb      	ldr	r3, [r7, #8]
 8008a90:	691b      	ldr	r3, [r3, #16]
 8008a92:	3b01      	subs	r3, #1
 8008a94:	041b      	lsls	r3, r3, #16
 8008a96:	4319      	orrs	r1, r3
 8008a98:	68bb      	ldr	r3, [r7, #8]
 8008a9a:	695b      	ldr	r3, [r3, #20]
 8008a9c:	3b01      	subs	r3, #1
 8008a9e:	051b      	lsls	r3, r3, #20
 8008aa0:	4319      	orrs	r1, r3
 8008aa2:	68bb      	ldr	r3, [r7, #8]
 8008aa4:	699b      	ldr	r3, [r3, #24]
 8008aa6:	3b01      	subs	r3, #1
 8008aa8:	061b      	lsls	r3, r3, #24
 8008aaa:	430b      	orrs	r3, r1
 8008aac:	431a      	orrs	r2, r3
 8008aae:	68fb      	ldr	r3, [r7, #12]
 8008ab0:	609a      	str	r2, [r3, #8]
 8008ab2:	e02d      	b.n	8008b10 <FMC_SDRAM_Timing_Init+0xc0>
                (((Timing->RPDelay) - 1U)              << FMC_SDTR1_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008ab4:	68fb      	ldr	r3, [r7, #12]
 8008ab6:	689a      	ldr	r2, [r3, #8]
 8008ab8:	4b19      	ldr	r3, [pc, #100]	; (8008b20 <FMC_SDRAM_Timing_Init+0xd0>)
 8008aba:	4013      	ands	r3, r2
 8008abc:	68ba      	ldr	r2, [r7, #8]
 8008abe:	68d2      	ldr	r2, [r2, #12]
 8008ac0:	3a01      	subs	r2, #1
 8008ac2:	0311      	lsls	r1, r2, #12
 8008ac4:	68ba      	ldr	r2, [r7, #8]
 8008ac6:	6952      	ldr	r2, [r2, #20]
 8008ac8:	3a01      	subs	r2, #1
 8008aca:	0512      	lsls	r2, r2, #20
 8008acc:	430a      	orrs	r2, r1
 8008ace:	431a      	orrs	r2, r3
 8008ad0:	68fb      	ldr	r3, [r7, #12]
 8008ad2:	609a      	str	r2, [r3, #8]
               FMC_SDTR1_TRC |
               FMC_SDTR1_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTR1_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTR1_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008ad4:	68fb      	ldr	r3, [r7, #12]
 8008ad6:	68db      	ldr	r3, [r3, #12]
 8008ad8:	f003 4270 	and.w	r2, r3, #4026531840	; 0xf0000000
 8008adc:	68bb      	ldr	r3, [r7, #8]
 8008ade:	681b      	ldr	r3, [r3, #0]
 8008ae0:	1e59      	subs	r1, r3, #1
 8008ae2:	68bb      	ldr	r3, [r7, #8]
 8008ae4:	685b      	ldr	r3, [r3, #4]
 8008ae6:	3b01      	subs	r3, #1
 8008ae8:	011b      	lsls	r3, r3, #4
 8008aea:	4319      	orrs	r1, r3
 8008aec:	68bb      	ldr	r3, [r7, #8]
 8008aee:	689b      	ldr	r3, [r3, #8]
 8008af0:	3b01      	subs	r3, #1
 8008af2:	021b      	lsls	r3, r3, #8
 8008af4:	4319      	orrs	r1, r3
 8008af6:	68bb      	ldr	r3, [r7, #8]
 8008af8:	691b      	ldr	r3, [r3, #16]
 8008afa:	3b01      	subs	r3, #1
 8008afc:	041b      	lsls	r3, r3, #16
 8008afe:	4319      	orrs	r1, r3
 8008b00:	68bb      	ldr	r3, [r7, #8]
 8008b02:	699b      	ldr	r3, [r3, #24]
 8008b04:	3b01      	subs	r3, #1
 8008b06:	061b      	lsls	r3, r3, #24
 8008b08:	430b      	orrs	r3, r1
 8008b0a:	431a      	orrs	r2, r3
 8008b0c:	68fb      	ldr	r3, [r7, #12]
 8008b0e:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTR1_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
 8008b10:	2300      	movs	r3, #0
}
 8008b12:	4618      	mov	r0, r3
 8008b14:	3714      	adds	r7, #20
 8008b16:	46bd      	mov	sp, r7
 8008b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b1c:	4770      	bx	lr
 8008b1e:	bf00      	nop
 8008b20:	ff0f0fff 	.word	0xff0f0fff

08008b24 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008b24:	b480      	push	{r7}
 8008b26:	b085      	sub	sp, #20
 8008b28:	af00      	add	r7, sp, #0
 8008b2a:	60f8      	str	r0, [r7, #12]
 8008b2c:	60b9      	str	r1, [r7, #8]
 8008b2e:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008b30:	68fb      	ldr	r3, [r7, #12]
 8008b32:	691a      	ldr	r2, [r3, #16]
 8008b34:	4b0c      	ldr	r3, [pc, #48]	; (8008b68 <FMC_SDRAM_SendCommand+0x44>)
 8008b36:	4013      	ands	r3, r2
 8008b38:	68ba      	ldr	r2, [r7, #8]
 8008b3a:	6811      	ldr	r1, [r2, #0]
 8008b3c:	68ba      	ldr	r2, [r7, #8]
 8008b3e:	6852      	ldr	r2, [r2, #4]
 8008b40:	4311      	orrs	r1, r2
 8008b42:	68ba      	ldr	r2, [r7, #8]
 8008b44:	6892      	ldr	r2, [r2, #8]
 8008b46:	3a01      	subs	r2, #1
 8008b48:	0152      	lsls	r2, r2, #5
 8008b4a:	4311      	orrs	r1, r2
 8008b4c:	68ba      	ldr	r2, [r7, #8]
 8008b4e:	68d2      	ldr	r2, [r2, #12]
 8008b50:	0252      	lsls	r2, r2, #9
 8008b52:	430a      	orrs	r2, r1
 8008b54:	431a      	orrs	r2, r3
 8008b56:	68fb      	ldr	r3, [r7, #12]
 8008b58:	611a      	str	r2, [r3, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
 8008b5a:	2300      	movs	r3, #0
}
 8008b5c:	4618      	mov	r0, r3
 8008b5e:	3714      	adds	r7, #20
 8008b60:	46bd      	mov	sp, r7
 8008b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b66:	4770      	bx	lr
 8008b68:	ffc00000 	.word	0xffc00000

08008b6c <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 8008b6c:	b480      	push	{r7}
 8008b6e:	b083      	sub	sp, #12
 8008b70:	af00      	add	r7, sp, #0
 8008b72:	6078      	str	r0, [r7, #4]
 8008b74:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008b76:	687b      	ldr	r3, [r7, #4]
 8008b78:	695a      	ldr	r2, [r3, #20]
 8008b7a:	4b07      	ldr	r3, [pc, #28]	; (8008b98 <FMC_SDRAM_ProgramRefreshRate+0x2c>)
 8008b7c:	4013      	ands	r3, r2
 8008b7e:	683a      	ldr	r2, [r7, #0]
 8008b80:	0052      	lsls	r2, r2, #1
 8008b82:	431a      	orrs	r2, r3
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	615a      	str	r2, [r3, #20]

  return HAL_OK;
 8008b88:	2300      	movs	r3, #0
}
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	370c      	adds	r7, #12
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b94:	4770      	bx	lr
 8008b96:	bf00      	nop
 8008b98:	ffffc001 	.word	0xffffc001

08008b9c <ft5336_Init>:
  *         from MCU to FT5336 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Init(uint16_t DeviceAddr)
{
 8008b9c:	b580      	push	{r7, lr}
 8008b9e:	b082      	sub	sp, #8
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	4603      	mov	r3, r0
 8008ba4:	80fb      	strh	r3, [r7, #6]
  /* Wait at least 200ms after power up before accessing registers
   * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
  //TS_IO_Delay(200);

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8008ba6:	f000 f9b5 	bl	8008f14 <ft5336_I2C_InitializeIfRequired>
}
 8008baa:	bf00      	nop
 8008bac:	3708      	adds	r7, #8
 8008bae:	46bd      	mov	sp, r7
 8008bb0:	bd80      	pop	{r7, pc}

08008bb2 <ft5336_Reset>:
  *         @note : Not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
 8008bb2:	b480      	push	{r7}
 8008bb4:	b083      	sub	sp, #12
 8008bb6:	af00      	add	r7, sp, #0
 8008bb8:	4603      	mov	r3, r0
 8008bba:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8008bbc:	bf00      	nop
 8008bbe:	370c      	adds	r7, #12
 8008bc0:	46bd      	mov	sp, r7
 8008bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bc6:	4770      	bx	lr

08008bc8 <ft5336_ReadID>:
  *         able to read the FT5336 device ID, and verify this is a FT5336.
  * @param  DeviceAddr: I2C FT5336 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft5336_ReadID(uint16_t DeviceAddr)
{
 8008bc8:	b580      	push	{r7, lr}
 8008bca:	b084      	sub	sp, #16
 8008bcc:	af00      	add	r7, sp, #0
 8008bce:	4603      	mov	r3, r0
 8008bd0:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadId = 0;
 8008bd2:	2300      	movs	r3, #0
 8008bd4:	737b      	strb	r3, [r7, #13]
  uint8_t nbReadAttempts = 0;
 8008bd6:	2300      	movs	r3, #0
 8008bd8:	73fb      	strb	r3, [r7, #15]
  uint8_t bFoundDevice = 0; /* Device not found by default */
 8008bda:	2300      	movs	r3, #0
 8008bdc:	73bb      	strb	r3, [r7, #14]

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8008bde:	f000 f999 	bl	8008f14 <ft5336_I2C_InitializeIfRequired>

  /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8008be2:	2300      	movs	r3, #0
 8008be4:	73fb      	strb	r3, [r7, #15]
 8008be6:	e010      	b.n	8008c0a <ft5336_ReadID+0x42>
  {
    /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8008be8:	88fb      	ldrh	r3, [r7, #6]
 8008bea:	b2db      	uxtb	r3, r3
 8008bec:	21a8      	movs	r1, #168	; 0xa8
 8008bee:	4618      	mov	r0, r3
 8008bf0:	f006 fbaa 	bl	800f348 <TS_IO_Read>
 8008bf4:	4603      	mov	r3, r0
 8008bf6:	737b      	strb	r3, [r7, #13]

    /* Found the searched device ID ? */
    if(ucReadId == FT5336_ID_VALUE)
 8008bf8:	7b7b      	ldrb	r3, [r7, #13]
 8008bfa:	b2db      	uxtb	r3, r3
 8008bfc:	2b51      	cmp	r3, #81	; 0x51
 8008bfe:	d101      	bne.n	8008c04 <ft5336_ReadID+0x3c>
    {
      /* Set device as found */
      bFoundDevice = 1;
 8008c00:	2301      	movs	r3, #1
 8008c02:	73bb      	strb	r3, [r7, #14]
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8008c04:	7bfb      	ldrb	r3, [r7, #15]
 8008c06:	3301      	adds	r3, #1
 8008c08:	73fb      	strb	r3, [r7, #15]
 8008c0a:	7bfb      	ldrb	r3, [r7, #15]
 8008c0c:	2b02      	cmp	r3, #2
 8008c0e:	d802      	bhi.n	8008c16 <ft5336_ReadID+0x4e>
 8008c10:	7bbb      	ldrb	r3, [r7, #14]
 8008c12:	2b00      	cmp	r3, #0
 8008c14:	d0e8      	beq.n	8008be8 <ft5336_ReadID+0x20>
    }
  }

  /* Return the device ID value */
  return (ucReadId);
 8008c16:	7b7b      	ldrb	r3, [r7, #13]
 8008c18:	b2db      	uxtb	r3, r3
 8008c1a:	b29b      	uxth	r3, r3
}
 8008c1c:	4618      	mov	r0, r3
 8008c1e:	3710      	adds	r7, #16
 8008c20:	46bd      	mov	sp, r7
 8008c22:	bd80      	pop	{r7, pc}

08008c24 <ft5336_TS_Start>:
  * @brief  Configures the touch Screen IC device to start detecting touches
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft5336_TS_Start(uint16_t DeviceAddr)
{
 8008c24:	b580      	push	{r7, lr}
 8008c26:	b082      	sub	sp, #8
 8008c28:	af00      	add	r7, sp, #0
 8008c2a:	4603      	mov	r3, r0
 8008c2c:	80fb      	strh	r3, [r7, #6]
  /* Minimum static configuration of FT5336 */
  FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
 8008c2e:	88fb      	ldrh	r3, [r7, #6]
 8008c30:	4618      	mov	r0, r3
 8008c32:	f000 f97d 	bl	8008f30 <ft5336_TS_Configure>

  /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft5336_TS_DisableIT(DeviceAddr);
 8008c36:	88fb      	ldrh	r3, [r7, #6]
 8008c38:	4618      	mov	r0, r3
 8008c3a:	f000 f933 	bl	8008ea4 <ft5336_TS_DisableIT>
}
 8008c3e:	bf00      	nop
 8008c40:	3708      	adds	r7, #8
 8008c42:	46bd      	mov	sp, r7
 8008c44:	bd80      	pop	{r7, pc}
	...

08008c48 <ft5336_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008c48:	b580      	push	{r7, lr}
 8008c4a:	b084      	sub	sp, #16
 8008c4c:	af00      	add	r7, sp, #0
 8008c4e:	4603      	mov	r3, r0
 8008c50:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 8008c52:	2300      	movs	r3, #0
 8008c54:	73fb      	strb	r3, [r7, #15]

  /* Read register FT5336_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8008c56:	88fb      	ldrh	r3, [r7, #6]
 8008c58:	b2db      	uxtb	r3, r3
 8008c5a:	2102      	movs	r1, #2
 8008c5c:	4618      	mov	r0, r3
 8008c5e:	f006 fb73 	bl	800f348 <TS_IO_Read>
 8008c62:	4603      	mov	r3, r0
 8008c64:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT5336_TD_STAT_MASK;
 8008c66:	7bfb      	ldrb	r3, [r7, #15]
 8008c68:	b2db      	uxtb	r3, r3
 8008c6a:	f003 030f 	and.w	r3, r3, #15
 8008c6e:	b2db      	uxtb	r3, r3
 8008c70:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8008c72:	7bfb      	ldrb	r3, [r7, #15]
 8008c74:	b2db      	uxtb	r3, r3
 8008c76:	2b05      	cmp	r3, #5
 8008c78:	d901      	bls.n	8008c7e <ft5336_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 8008c7a:	2300      	movs	r3, #0
 8008c7c:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft5336 driver internal global : current number of active touches */
  ft5336_handle.currActiveTouchNb = nbTouch;
 8008c7e:	7bfb      	ldrb	r3, [r7, #15]
 8008c80:	b2da      	uxtb	r2, r3
 8008c82:	4b05      	ldr	r3, [pc, #20]	; (8008c98 <ft5336_TS_DetectTouch+0x50>)
 8008c84:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft5336_handle.currActiveTouchIdx = 0;
 8008c86:	4b04      	ldr	r3, [pc, #16]	; (8008c98 <ft5336_TS_DetectTouch+0x50>)
 8008c88:	2200      	movs	r2, #0
 8008c8a:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 8008c8c:	7bfb      	ldrb	r3, [r7, #15]
 8008c8e:	b2db      	uxtb	r3, r3
}
 8008c90:	4618      	mov	r0, r3
 8008c92:	3710      	adds	r7, #16
 8008c94:	46bd      	mov	sp, r7
 8008c96:	bd80      	pop	{r7, pc}
 8008c98:	200004b0 	.word	0x200004b0

08008c9c <ft5336_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8008c9c:	b580      	push	{r7, lr}
 8008c9e:	b086      	sub	sp, #24
 8008ca0:	af00      	add	r7, sp, #0
 8008ca2:	4603      	mov	r3, r0
 8008ca4:	60b9      	str	r1, [r7, #8]
 8008ca6:	607a      	str	r2, [r7, #4]
 8008ca8:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 8008caa:	2300      	movs	r3, #0
 8008cac:	74fb      	strb	r3, [r7, #19]
  static uint16_t coord;
  uint8_t regAddressXLow = 0;
 8008cae:	2300      	movs	r3, #0
 8008cb0:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressXHigh = 0;
 8008cb2:	2300      	movs	r3, #0
 8008cb4:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressYLow = 0;
 8008cb6:	2300      	movs	r3, #0
 8008cb8:	757b      	strb	r3, [r7, #21]
  uint8_t regAddressYHigh = 0;
 8008cba:	2300      	movs	r3, #0
 8008cbc:	753b      	strb	r3, [r7, #20]

  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8008cbe:	4b6d      	ldr	r3, [pc, #436]	; (8008e74 <ft5336_TS_GetXY+0x1d8>)
 8008cc0:	789a      	ldrb	r2, [r3, #2]
 8008cc2:	4b6c      	ldr	r3, [pc, #432]	; (8008e74 <ft5336_TS_GetXY+0x1d8>)
 8008cc4:	785b      	ldrb	r3, [r3, #1]
 8008cc6:	429a      	cmp	r2, r3
 8008cc8:	f080 80cf 	bcs.w	8008e6a <ft5336_TS_GetXY+0x1ce>
  {
    switch(ft5336_handle.currActiveTouchIdx)
 8008ccc:	4b69      	ldr	r3, [pc, #420]	; (8008e74 <ft5336_TS_GetXY+0x1d8>)
 8008cce:	789b      	ldrb	r3, [r3, #2]
 8008cd0:	2b09      	cmp	r3, #9
 8008cd2:	d871      	bhi.n	8008db8 <ft5336_TS_GetXY+0x11c>
 8008cd4:	a201      	add	r2, pc, #4	; (adr r2, 8008cdc <ft5336_TS_GetXY+0x40>)
 8008cd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008cda:	bf00      	nop
 8008cdc:	08008d05 	.word	0x08008d05
 8008ce0:	08008d17 	.word	0x08008d17
 8008ce4:	08008d29 	.word	0x08008d29
 8008ce8:	08008d3b 	.word	0x08008d3b
 8008cec:	08008d4d 	.word	0x08008d4d
 8008cf0:	08008d5f 	.word	0x08008d5f
 8008cf4:	08008d71 	.word	0x08008d71
 8008cf8:	08008d83 	.word	0x08008d83
 8008cfc:	08008d95 	.word	0x08008d95
 8008d00:	08008da7 	.word	0x08008da7
    {
    case 0 :
      regAddressXLow  = FT5336_P1_XL_REG;
 8008d04:	2304      	movs	r3, #4
 8008d06:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P1_XH_REG;
 8008d08:	2303      	movs	r3, #3
 8008d0a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P1_YL_REG;
 8008d0c:	2306      	movs	r3, #6
 8008d0e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P1_YH_REG;
 8008d10:	2305      	movs	r3, #5
 8008d12:	753b      	strb	r3, [r7, #20]
      break;
 8008d14:	e051      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 1 :
      regAddressXLow  = FT5336_P2_XL_REG;
 8008d16:	230a      	movs	r3, #10
 8008d18:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P2_XH_REG;
 8008d1a:	2309      	movs	r3, #9
 8008d1c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P2_YL_REG;
 8008d1e:	230c      	movs	r3, #12
 8008d20:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P2_YH_REG;
 8008d22:	230b      	movs	r3, #11
 8008d24:	753b      	strb	r3, [r7, #20]
      break;
 8008d26:	e048      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 2 :
      regAddressXLow  = FT5336_P3_XL_REG;
 8008d28:	2310      	movs	r3, #16
 8008d2a:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P3_XH_REG;
 8008d2c:	230f      	movs	r3, #15
 8008d2e:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P3_YL_REG;
 8008d30:	2312      	movs	r3, #18
 8008d32:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P3_YH_REG;
 8008d34:	2311      	movs	r3, #17
 8008d36:	753b      	strb	r3, [r7, #20]
      break;
 8008d38:	e03f      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 3 :
      regAddressXLow  = FT5336_P4_XL_REG;
 8008d3a:	2316      	movs	r3, #22
 8008d3c:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P4_XH_REG;
 8008d3e:	2315      	movs	r3, #21
 8008d40:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P4_YL_REG;
 8008d42:	2318      	movs	r3, #24
 8008d44:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P4_YH_REG;
 8008d46:	2317      	movs	r3, #23
 8008d48:	753b      	strb	r3, [r7, #20]
      break;
 8008d4a:	e036      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 4 :
      regAddressXLow  = FT5336_P5_XL_REG;
 8008d4c:	231c      	movs	r3, #28
 8008d4e:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P5_XH_REG;
 8008d50:	231b      	movs	r3, #27
 8008d52:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P5_YL_REG;
 8008d54:	231e      	movs	r3, #30
 8008d56:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P5_YH_REG;
 8008d58:	231d      	movs	r3, #29
 8008d5a:	753b      	strb	r3, [r7, #20]
      break;
 8008d5c:	e02d      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 5 :
      regAddressXLow  = FT5336_P6_XL_REG;
 8008d5e:	2322      	movs	r3, #34	; 0x22
 8008d60:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P6_XH_REG;
 8008d62:	2321      	movs	r3, #33	; 0x21
 8008d64:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P6_YL_REG;
 8008d66:	2324      	movs	r3, #36	; 0x24
 8008d68:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P6_YH_REG;
 8008d6a:	2323      	movs	r3, #35	; 0x23
 8008d6c:	753b      	strb	r3, [r7, #20]
      break;
 8008d6e:	e024      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 6 :
      regAddressXLow  = FT5336_P7_XL_REG;
 8008d70:	2328      	movs	r3, #40	; 0x28
 8008d72:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P7_XH_REG;
 8008d74:	2327      	movs	r3, #39	; 0x27
 8008d76:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P7_YL_REG;
 8008d78:	232a      	movs	r3, #42	; 0x2a
 8008d7a:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P7_YH_REG;
 8008d7c:	2329      	movs	r3, #41	; 0x29
 8008d7e:	753b      	strb	r3, [r7, #20]
      break;
 8008d80:	e01b      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 7 :
      regAddressXLow  = FT5336_P8_XL_REG;
 8008d82:	232e      	movs	r3, #46	; 0x2e
 8008d84:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P8_XH_REG;
 8008d86:	232d      	movs	r3, #45	; 0x2d
 8008d88:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P8_YL_REG;
 8008d8a:	2330      	movs	r3, #48	; 0x30
 8008d8c:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P8_YH_REG;
 8008d8e:	232f      	movs	r3, #47	; 0x2f
 8008d90:	753b      	strb	r3, [r7, #20]
      break;
 8008d92:	e012      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 8 :
      regAddressXLow  = FT5336_P9_XL_REG;
 8008d94:	2334      	movs	r3, #52	; 0x34
 8008d96:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P9_XH_REG;
 8008d98:	2333      	movs	r3, #51	; 0x33
 8008d9a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P9_YL_REG;
 8008d9c:	2336      	movs	r3, #54	; 0x36
 8008d9e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P9_YH_REG;
 8008da0:	2335      	movs	r3, #53	; 0x35
 8008da2:	753b      	strb	r3, [r7, #20]
      break;
 8008da4:	e009      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    case 9 :
      regAddressXLow  = FT5336_P10_XL_REG;
 8008da6:	233a      	movs	r3, #58	; 0x3a
 8008da8:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P10_XH_REG;
 8008daa:	2339      	movs	r3, #57	; 0x39
 8008dac:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P10_YL_REG;
 8008dae:	233c      	movs	r3, #60	; 0x3c
 8008db0:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P10_YH_REG;
 8008db2:	233b      	movs	r3, #59	; 0x3b
 8008db4:	753b      	strb	r3, [r7, #20]
      break;
 8008db6:	e000      	b.n	8008dba <ft5336_TS_GetXY+0x11e>

    default :
      break;
 8008db8:	bf00      	nop

    } /* end switch(ft5336_handle.currActiveTouchIdx) */

    /* Read low part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8008dba:	89fb      	ldrh	r3, [r7, #14]
 8008dbc:	b2db      	uxtb	r3, r3
 8008dbe:	7dfa      	ldrb	r2, [r7, #23]
 8008dc0:	4611      	mov	r1, r2
 8008dc2:	4618      	mov	r0, r3
 8008dc4:	f006 fac0 	bl	800f348 <TS_IO_Read>
 8008dc8:	4603      	mov	r3, r0
 8008dca:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8008dcc:	7cfb      	ldrb	r3, [r7, #19]
 8008dce:	b2db      	uxtb	r3, r3
 8008dd0:	b29a      	uxth	r2, r3
 8008dd2:	4b29      	ldr	r3, [pc, #164]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008dd4:	801a      	strh	r2, [r3, #0]

    /* Read high part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8008dd6:	89fb      	ldrh	r3, [r7, #14]
 8008dd8:	b2db      	uxtb	r3, r3
 8008dda:	7dba      	ldrb	r2, [r7, #22]
 8008ddc:	4611      	mov	r1, r2
 8008dde:	4618      	mov	r0, r3
 8008de0:	f006 fab2 	bl	800f348 <TS_IO_Read>
 8008de4:	4603      	mov	r3, r0
 8008de6:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8008de8:	7cfb      	ldrb	r3, [r7, #19]
 8008dea:	b2db      	uxtb	r3, r3
 8008dec:	021b      	lsls	r3, r3, #8
 8008dee:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008df2:	b21a      	sxth	r2, r3
 8008df4:	4b20      	ldr	r3, [pc, #128]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008df6:	881b      	ldrh	r3, [r3, #0]
 8008df8:	b21b      	sxth	r3, r3
 8008dfa:	4313      	orrs	r3, r2
 8008dfc:	b21b      	sxth	r3, r3
 8008dfe:	b29a      	uxth	r2, r3
 8008e00:	4b1d      	ldr	r3, [pc, #116]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e02:	801a      	strh	r2, [r3, #0]

    /* Send back ready X position to caller */
    *X = coord;
 8008e04:	4b1c      	ldr	r3, [pc, #112]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e06:	881a      	ldrh	r2, [r3, #0]
 8008e08:	68bb      	ldr	r3, [r7, #8]
 8008e0a:	801a      	strh	r2, [r3, #0]

    /* Read low part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8008e0c:	89fb      	ldrh	r3, [r7, #14]
 8008e0e:	b2db      	uxtb	r3, r3
 8008e10:	7d7a      	ldrb	r2, [r7, #21]
 8008e12:	4611      	mov	r1, r2
 8008e14:	4618      	mov	r0, r3
 8008e16:	f006 fa97 	bl	800f348 <TS_IO_Read>
 8008e1a:	4603      	mov	r3, r0
 8008e1c:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8008e1e:	7cfb      	ldrb	r3, [r7, #19]
 8008e20:	b2db      	uxtb	r3, r3
 8008e22:	b29a      	uxth	r2, r3
 8008e24:	4b14      	ldr	r3, [pc, #80]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e26:	801a      	strh	r2, [r3, #0]

    /* Read high part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8008e28:	89fb      	ldrh	r3, [r7, #14]
 8008e2a:	b2db      	uxtb	r3, r3
 8008e2c:	7d3a      	ldrb	r2, [r7, #20]
 8008e2e:	4611      	mov	r1, r2
 8008e30:	4618      	mov	r0, r3
 8008e32:	f006 fa89 	bl	800f348 <TS_IO_Read>
 8008e36:	4603      	mov	r3, r0
 8008e38:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8008e3a:	7cfb      	ldrb	r3, [r7, #19]
 8008e3c:	b2db      	uxtb	r3, r3
 8008e3e:	021b      	lsls	r3, r3, #8
 8008e40:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008e44:	b21a      	sxth	r2, r3
 8008e46:	4b0c      	ldr	r3, [pc, #48]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e48:	881b      	ldrh	r3, [r3, #0]
 8008e4a:	b21b      	sxth	r3, r3
 8008e4c:	4313      	orrs	r3, r2
 8008e4e:	b21b      	sxth	r3, r3
 8008e50:	b29a      	uxth	r2, r3
 8008e52:	4b09      	ldr	r3, [pc, #36]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e54:	801a      	strh	r2, [r3, #0]

    /* Send back ready Y position to caller */
    *Y = coord;
 8008e56:	4b08      	ldr	r3, [pc, #32]	; (8008e78 <ft5336_TS_GetXY+0x1dc>)
 8008e58:	881a      	ldrh	r2, [r3, #0]
 8008e5a:	687b      	ldr	r3, [r7, #4]
 8008e5c:	801a      	strh	r2, [r3, #0]

    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8008e5e:	4b05      	ldr	r3, [pc, #20]	; (8008e74 <ft5336_TS_GetXY+0x1d8>)
 8008e60:	789b      	ldrb	r3, [r3, #2]
 8008e62:	3301      	adds	r3, #1
 8008e64:	b2da      	uxtb	r2, r3
 8008e66:	4b03      	ldr	r3, [pc, #12]	; (8008e74 <ft5336_TS_GetXY+0x1d8>)
 8008e68:	709a      	strb	r2, [r3, #2]

  } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
}
 8008e6a:	bf00      	nop
 8008e6c:	3718      	adds	r7, #24
 8008e6e:	46bd      	mov	sp, r7
 8008e70:	bd80      	pop	{r7, pc}
 8008e72:	bf00      	nop
 8008e74:	200004b0 	.word	0x200004b0
 8008e78:	200004b4 	.word	0x200004b4

08008e7c <ft5336_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_EnableIT(uint16_t DeviceAddr)
{
 8008e7c:	b580      	push	{r7, lr}
 8008e7e:	b084      	sub	sp, #16
 8008e80:	af00      	add	r7, sp, #0
 8008e82:	4603      	mov	r3, r0
 8008e84:	80fb      	strh	r3, [r7, #6]
   uint8_t regValue = 0;
 8008e86:	2300      	movs	r3, #0
 8008e88:	73fb      	strb	r3, [r7, #15]
   regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8008e8a:	2301      	movs	r3, #1
 8008e8c:	73fb      	strb	r3, [r7, #15]

   /* Set interrupt trigger mode in FT5336_GMODE_REG */
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8008e8e:	88fb      	ldrh	r3, [r7, #6]
 8008e90:	b2db      	uxtb	r3, r3
 8008e92:	7bfa      	ldrb	r2, [r7, #15]
 8008e94:	21a4      	movs	r1, #164	; 0xa4
 8008e96:	4618      	mov	r0, r3
 8008e98:	f006 fa3c 	bl	800f314 <TS_IO_Write>
}
 8008e9c:	bf00      	nop
 8008e9e:	3710      	adds	r7, #16
 8008ea0:	46bd      	mov	sp, r7
 8008ea2:	bd80      	pop	{r7, pc}

08008ea4 <ft5336_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_DisableIT(uint16_t DeviceAddr)
{
 8008ea4:	b580      	push	{r7, lr}
 8008ea6:	b084      	sub	sp, #16
 8008ea8:	af00      	add	r7, sp, #0
 8008eaa:	4603      	mov	r3, r0
 8008eac:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 8008eae:	2300      	movs	r3, #0
 8008eb0:	73fb      	strb	r3, [r7, #15]
  regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8008eb2:	2300      	movs	r3, #0
 8008eb4:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT5336_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8008eb6:	88fb      	ldrh	r3, [r7, #6]
 8008eb8:	b2db      	uxtb	r3, r3
 8008eba:	7bfa      	ldrb	r2, [r7, #15]
 8008ebc:	21a4      	movs	r1, #164	; 0xa4
 8008ebe:	4618      	mov	r0, r3
 8008ec0:	f006 fa28 	bl	800f314 <TS_IO_Write>
}
 8008ec4:	bf00      	nop
 8008ec6:	3710      	adds	r7, #16
 8008ec8:	46bd      	mov	sp, r7
 8008eca:	bd80      	pop	{r7, pc}

08008ecc <ft5336_TS_ITStatus>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
 8008ecc:	b480      	push	{r7}
 8008ece:	b083      	sub	sp, #12
 8008ed0:	af00      	add	r7, sp, #0
 8008ed2:	4603      	mov	r3, r0
 8008ed4:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
 8008ed6:	2300      	movs	r3, #0
}
 8008ed8:	4618      	mov	r0, r3
 8008eda:	370c      	adds	r7, #12
 8008edc:	46bd      	mov	sp, r7
 8008ede:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ee2:	4770      	bx	lr

08008ee4 <ft5336_TS_ClearIT>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
{
 8008ee4:	b480      	push	{r7}
 8008ee6:	b083      	sub	sp, #12
 8008ee8:	af00      	add	r7, sp, #0
 8008eea:	4603      	mov	r3, r0
 8008eec:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT5336 */
}
 8008eee:	bf00      	nop
 8008ef0:	370c      	adds	r7, #12
 8008ef2:	46bd      	mov	sp, r7
 8008ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ef8:	4770      	bx	lr
	...

08008efc <ft5336_Get_I2C_InitializedStatus>:
  * @brief  Return the status of I2C was initialized or not.
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
 8008efc:	b480      	push	{r7}
 8008efe:	af00      	add	r7, sp, #0
  return(ft5336_handle.i2cInitialized);
 8008f00:	4b03      	ldr	r3, [pc, #12]	; (8008f10 <ft5336_Get_I2C_InitializedStatus+0x14>)
 8008f02:	781b      	ldrb	r3, [r3, #0]
}
 8008f04:	4618      	mov	r0, r3
 8008f06:	46bd      	mov	sp, r7
 8008f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f0c:	4770      	bx	lr
 8008f0e:	bf00      	nop
 8008f10:	200004b0 	.word	0x200004b0

08008f14 <ft5336_I2C_InitializeIfRequired>:
  * @brief  I2C initialize if needed.
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
 8008f14:	b580      	push	{r7, lr}
 8008f16:	af00      	add	r7, sp, #0
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8008f18:	f7ff fff0 	bl	8008efc <ft5336_Get_I2C_InitializedStatus>
 8008f1c:	4603      	mov	r3, r0
 8008f1e:	2b00      	cmp	r3, #0
 8008f20:	d102      	bne.n	8008f28 <ft5336_I2C_InitializeIfRequired+0x14>
  {
    /* Initialize TS IO BUS layer (I2C) */
    //TS_IO_Init();

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8008f22:	4b02      	ldr	r3, [pc, #8]	; (8008f2c <ft5336_I2C_InitializeIfRequired+0x18>)
 8008f24:	2201      	movs	r2, #1
 8008f26:	701a      	strb	r2, [r3, #0]
  }
}
 8008f28:	bf00      	nop
 8008f2a:	bd80      	pop	{r7, pc}
 8008f2c:	200004b0 	.word	0x200004b0

08008f30 <ft5336_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
  * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
  */
static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
{
 8008f30:	b480      	push	{r7}
 8008f32:	b085      	sub	sp, #20
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	4603      	mov	r3, r0
 8008f38:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT5336_STATUS_OK;
 8008f3a:	2300      	movs	r3, #0
 8008f3c:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT5336 */

  return(status);
 8008f3e:	68fb      	ldr	r3, [r7, #12]
}
 8008f40:	4618      	mov	r0, r3
 8008f42:	3714      	adds	r7, #20
 8008f44:	46bd      	mov	sp, r7
 8008f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f4a:	4770      	bx	lr

08008f4c <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8008f4c:	b480      	push	{r7}
 8008f4e:	b083      	sub	sp, #12
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	6078      	str	r0, [r7, #4]
    {
 8008f54:	4a04      	ldr	r2, [pc, #16]	; (8008f68 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	601a      	str	r2, [r3, #0]
    }
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	4618      	mov	r0, r3
 8008f5e:	370c      	adds	r7, #12
 8008f60:	46bd      	mov	sp, r7
 8008f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f66:	4770      	bx	lr
 8008f68:	0802ed68 	.word	0x0802ed68

08008f6c <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008f6c:	b580      	push	{r7, lr}
 8008f6e:	b082      	sub	sp, #8
 8008f70:	af00      	add	r7, sp, #0
 8008f72:	6078      	str	r0, [r7, #4]
    }
 8008f74:	6878      	ldr	r0, [r7, #4]
 8008f76:	f7ff ffe9 	bl	8008f4c <_ZN8touchgfx12FontProviderD1Ev>
 8008f7a:	2104      	movs	r1, #4
 8008f7c:	6878      	ldr	r0, [r7, #4]
 8008f7e:	f022 fd72 	bl	802ba66 <_ZdlPvj>
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	4618      	mov	r0, r3
 8008f86:	3708      	adds	r7, #8
 8008f88:	46bd      	mov	sp, r7
 8008f8a:	bd80      	pop	{r7, pc}

08008f8c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008f8c:	b580      	push	{r7, lr}
 8008f8e:	b082      	sub	sp, #8
 8008f90:	af00      	add	r7, sp, #0
 8008f92:	6078      	str	r0, [r7, #4]
 8008f94:	460b      	mov	r3, r1
 8008f96:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008f98:	887b      	ldrh	r3, [r7, #2]
 8008f9a:	2b02      	cmp	r3, #2
 8008f9c:	d010      	beq.n	8008fc0 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8008f9e:	2b02      	cmp	r3, #2
 8008fa0:	dc13      	bgt.n	8008fca <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8008fa2:	2b00      	cmp	r3, #0
 8008fa4:	d002      	beq.n	8008fac <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8008fa6:	2b01      	cmp	r3, #1
 8008fa8:	d005      	beq.n	8008fb6 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8008faa:	e00e      	b.n	8008fca <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8008fac:	f005 fb82 	bl	800e6b4 <_ZN17TypedTextDatabase8getFontsEv>
 8008fb0:	4603      	mov	r3, r0
 8008fb2:	681b      	ldr	r3, [r3, #0]
 8008fb4:	e00a      	b.n	8008fcc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8008fb6:	f005 fb7d 	bl	800e6b4 <_ZN17TypedTextDatabase8getFontsEv>
 8008fba:	4603      	mov	r3, r0
 8008fbc:	685b      	ldr	r3, [r3, #4]
 8008fbe:	e005      	b.n	8008fcc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8008fc0:	f005 fb78 	bl	800e6b4 <_ZN17TypedTextDatabase8getFontsEv>
 8008fc4:	4603      	mov	r3, r0
 8008fc6:	689b      	ldr	r3, [r3, #8]
 8008fc8:	e000      	b.n	8008fcc <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8008fca:	2300      	movs	r3, #0
    }
}
 8008fcc:	4618      	mov	r0, r3
 8008fce:	3708      	adds	r7, #8
 8008fd0:	46bd      	mov	sp, r7
 8008fd2:	bd80      	pop	{r7, pc}

08008fd4 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8008fd4:	b580      	push	{r7, lr}
 8008fd6:	b082      	sub	sp, #8
 8008fd8:	af00      	add	r7, sp, #0
 8008fda:	6078      	str	r0, [r7, #4]
 8008fdc:	4a05      	ldr	r2, [pc, #20]	; (8008ff4 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	601a      	str	r2, [r3, #0]
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	f7ff ffb1 	bl	8008f4c <_ZN8touchgfx12FontProviderD1Ev>
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	4618      	mov	r0, r3
 8008fee:	3708      	adds	r7, #8
 8008ff0:	46bd      	mov	sp, r7
 8008ff2:	bd80      	pop	{r7, pc}
 8008ff4:	0802ed54 	.word	0x0802ed54

08008ff8 <_ZN23ApplicationFontProviderD0Ev>:
 8008ff8:	b580      	push	{r7, lr}
 8008ffa:	b082      	sub	sp, #8
 8008ffc:	af00      	add	r7, sp, #0
 8008ffe:	6078      	str	r0, [r7, #4]
 8009000:	6878      	ldr	r0, [r7, #4]
 8009002:	f7ff ffe7 	bl	8008fd4 <_ZN23ApplicationFontProviderD1Ev>
 8009006:	2104      	movs	r1, #4
 8009008:	6878      	ldr	r0, [r7, #4]
 800900a:	f022 fd2c 	bl	802ba66 <_ZdlPvj>
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	4618      	mov	r0, r3
 8009012:	3708      	adds	r7, #8
 8009014:	46bd      	mov	sp, r7
 8009016:	bd80      	pop	{r7, pc}

08009018 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8009018:	b480      	push	{r7}
 800901a:	b083      	sub	sp, #12
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
    {
 8009020:	4a04      	ldr	r2, [pc, #16]	; (8009034 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	601a      	str	r2, [r3, #0]
    }
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	4618      	mov	r0, r3
 800902a:	370c      	adds	r7, #12
 800902c:	46bd      	mov	sp, r7
 800902e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009032:	4770      	bx	lr
 8009034:	0802f22c 	.word	0x0802f22c

08009038 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8009038:	b580      	push	{r7, lr}
 800903a:	b082      	sub	sp, #8
 800903c:	af00      	add	r7, sp, #0
 800903e:	6078      	str	r0, [r7, #4]
    }
 8009040:	6878      	ldr	r0, [r7, #4]
 8009042:	f7ff ffe9 	bl	8009018 <_ZN8touchgfx4FontD1Ev>
 8009046:	2110      	movs	r1, #16
 8009048:	6878      	ldr	r0, [r7, #4]
 800904a:	f022 fd0c 	bl	802ba66 <_ZdlPvj>
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	4618      	mov	r0, r3
 8009052:	3708      	adds	r7, #8
 8009054:	46bd      	mov	sp, r7
 8009056:	bd80      	pop	{r7, pc}

08009058 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8009058:	b590      	push	{r4, r7, lr}
 800905a:	b087      	sub	sp, #28
 800905c:	af00      	add	r7, sp, #0
 800905e:	6078      	str	r0, [r7, #4]
 8009060:	460b      	mov	r3, r1
 8009062:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8009064:	887b      	ldrh	r3, [r7, #2]
 8009066:	2b00      	cmp	r3, #0
 8009068:	d101      	bne.n	800906e <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800906a:	2300      	movs	r3, #0
 800906c:	e010      	b.n	8009090 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800906e:	2300      	movs	r3, #0
 8009070:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8009072:	2300      	movs	r3, #0
 8009074:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8009076:	687b      	ldr	r3, [r7, #4]
 8009078:	681b      	ldr	r3, [r3, #0]
 800907a:	3308      	adds	r3, #8
 800907c:	681c      	ldr	r4, [r3, #0]
 800907e:	f107 030f 	add.w	r3, r7, #15
 8009082:	f107 0210 	add.w	r2, r7, #16
 8009086:	8879      	ldrh	r1, [r7, #2]
 8009088:	6878      	ldr	r0, [r7, #4]
 800908a:	47a0      	blx	r4
 800908c:	6178      	str	r0, [r7, #20]
        return glyph;
 800908e:	697b      	ldr	r3, [r7, #20]
    }
 8009090:	4618      	mov	r0, r3
 8009092:	371c      	adds	r7, #28
 8009094:	46bd      	mov	sp, r7
 8009096:	bd90      	pop	{r4, r7, pc}

08009098 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8009098:	b480      	push	{r7}
 800909a:	b083      	sub	sp, #12
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 80090a0:	687b      	ldr	r3, [r7, #4]
 80090a2:	895b      	ldrh	r3, [r3, #10]
    }
 80090a4:	4618      	mov	r0, r3
 80090a6:	370c      	adds	r7, #12
 80090a8:	46bd      	mov	sp, r7
 80090aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090ae:	4770      	bx	lr

080090b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 80090b0:	b480      	push	{r7}
 80090b2:	b083      	sub	sp, #12
 80090b4:	af00      	add	r7, sp, #0
 80090b6:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	899b      	ldrh	r3, [r3, #12]
    }
 80090bc:	4618      	mov	r0, r3
 80090be:	370c      	adds	r7, #12
 80090c0:	46bd      	mov	sp, r7
 80090c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090c6:	4770      	bx	lr

080090c8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @return The height in pixels of this font.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
 80090c8:	b480      	push	{r7}
 80090ca:	b083      	sub	sp, #12
 80090cc:	af00      	add	r7, sp, #0
 80090ce:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	889b      	ldrh	r3, [r3, #4]
    }
 80090d4:	4618      	mov	r0, r3
 80090d6:	370c      	adds	r7, #12
 80090d8:	46bd      	mov	sp, r7
 80090da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090de:	4770      	bx	lr

080090e0 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     * account that certain characters (eg 'g') have pixels below the baseline, thus making
     * the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
 80090e0:	b480      	push	{r7}
 80090e2:	b083      	sub	sp, #12
 80090e4:	af00      	add	r7, sp, #0
 80090e6:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	889a      	ldrh	r2, [r3, #4]
 80090ec:	687b      	ldr	r3, [r7, #4]
 80090ee:	799b      	ldrb	r3, [r3, #6]
 80090f0:	b29b      	uxth	r3, r3
 80090f2:	4413      	add	r3, r2
 80090f4:	b29b      	uxth	r3, r3
    }
 80090f6:	4618      	mov	r0, r3
 80090f8:	370c      	adds	r7, #12
 80090fa:	46bd      	mov	sp, r7
 80090fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009100:	4770      	bx	lr

08009102 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8009102:	b480      	push	{r7}
 8009104:	b083      	sub	sp, #12
 8009106:	af00      	add	r7, sp, #0
 8009108:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	79db      	ldrb	r3, [r3, #7]
 800910e:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8009112:	b2db      	uxtb	r3, r3
    }
 8009114:	4618      	mov	r0, r3
 8009116:	370c      	adds	r7, #12
 8009118:	46bd      	mov	sp, r7
 800911a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800911e:	4770      	bx	lr

08009120 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8009120:	b480      	push	{r7}
 8009122:	b083      	sub	sp, #12
 8009124:	af00      	add	r7, sp, #0
 8009126:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8009128:	687b      	ldr	r3, [r7, #4]
 800912a:	79db      	ldrb	r3, [r3, #7]
 800912c:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8009130:	b2db      	uxtb	r3, r3
    }
 8009132:	4618      	mov	r0, r3
 8009134:	370c      	adds	r7, #12
 8009136:	46bd      	mov	sp, r7
 8009138:	f85d 7b04 	ldr.w	r7, [sp], #4
 800913c:	4770      	bx	lr
	...

08009140 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8009140:	b580      	push	{r7, lr}
 8009142:	b082      	sub	sp, #8
 8009144:	af00      	add	r7, sp, #0
 8009146:	6078      	str	r0, [r7, #4]
 8009148:	4a05      	ldr	r2, [pc, #20]	; (8009160 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	601a      	str	r2, [r3, #0]
 800914e:	687b      	ldr	r3, [r7, #4]
 8009150:	4618      	mov	r0, r3
 8009152:	f7ff ff61 	bl	8009018 <_ZN8touchgfx4FontD1Ev>
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	4618      	mov	r0, r3
 800915a:	3708      	adds	r7, #8
 800915c:	46bd      	mov	sp, r7
 800915e:	bd80      	pop	{r7, pc}
 8009160:	08031590 	.word	0x08031590

08009164 <_ZN8touchgfx9ConstFontD0Ev>:
 8009164:	b580      	push	{r7, lr}
 8009166:	b082      	sub	sp, #8
 8009168:	af00      	add	r7, sp, #0
 800916a:	6078      	str	r0, [r7, #4]
 800916c:	6878      	ldr	r0, [r7, #4]
 800916e:	f7ff ffe7 	bl	8009140 <_ZN8touchgfx9ConstFontD1Ev>
 8009172:	2118      	movs	r1, #24
 8009174:	6878      	ldr	r0, [r7, #4]
 8009176:	f022 fc76 	bl	802ba66 <_ZdlPvj>
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	4618      	mov	r0, r3
 800917e:	3708      	adds	r7, #8
 8009180:	46bd      	mov	sp, r7
 8009182:	bd80      	pop	{r7, pc}

08009184 <_ZN8touchgfx13GeneratedFontD1Ev>:
 * An GeneratedFont has both glyph table and glyph data placed in a flash which
 * supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 8009184:	b580      	push	{r7, lr}
 8009186:	b082      	sub	sp, #8
 8009188:	af00      	add	r7, sp, #0
 800918a:	6078      	str	r0, [r7, #4]
 800918c:	4a05      	ldr	r2, [pc, #20]	; (80091a4 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	601a      	str	r2, [r3, #0]
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	4618      	mov	r0, r3
 8009196:	f7ff ffd3 	bl	8009140 <_ZN8touchgfx9ConstFontD1Ev>
 800919a:	687b      	ldr	r3, [r7, #4]
 800919c:	4618      	mov	r0, r3
 800919e:	3708      	adds	r7, #8
 80091a0:	46bd      	mov	sp, r7
 80091a2:	bd80      	pop	{r7, pc}
 80091a4:	0802ed8c 	.word	0x0802ed8c

080091a8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80091a8:	b580      	push	{r7, lr}
 80091aa:	b082      	sub	sp, #8
 80091ac:	af00      	add	r7, sp, #0
 80091ae:	6078      	str	r0, [r7, #4]
 80091b0:	6878      	ldr	r0, [r7, #4]
 80091b2:	f7ff ffe7 	bl	8009184 <_ZN8touchgfx13GeneratedFontD1Ev>
 80091b6:	2124      	movs	r1, #36	; 0x24
 80091b8:	6878      	ldr	r0, [r7, #4]
 80091ba:	f022 fc54 	bl	802ba66 <_ZdlPvj>
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	4618      	mov	r0, r3
 80091c2:	3708      	adds	r7, #8
 80091c4:	46bd      	mov	sp, r7
 80091c6:	bd80      	pop	{r7, pc}

080091c8 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 80091c8:	b480      	push	{r7}
 80091ca:	b083      	sub	sp, #12
 80091cc:	af00      	add	r7, sp, #0
 80091ce:	6078      	str	r0, [r7, #4]
    {
 80091d0:	4a04      	ldr	r2, [pc, #16]	; (80091e4 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	601a      	str	r2, [r3, #0]
    }
 80091d6:	687b      	ldr	r3, [r7, #4]
 80091d8:	4618      	mov	r0, r3
 80091da:	370c      	adds	r7, #12
 80091dc:	46bd      	mov	sp, r7
 80091de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e2:	4770      	bx	lr
 80091e4:	0802ed7c 	.word	0x0802ed7c

080091e8 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80091e8:	b580      	push	{r7, lr}
 80091ea:	b082      	sub	sp, #8
 80091ec:	af00      	add	r7, sp, #0
 80091ee:	6078      	str	r0, [r7, #4]
    }
 80091f0:	6878      	ldr	r0, [r7, #4]
 80091f2:	f7ff ffe9 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>
 80091f6:	2108      	movs	r1, #8
 80091f8:	6878      	ldr	r0, [r7, #4]
 80091fa:	f022 fc34 	bl	802ba66 <_ZdlPvj>
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	4618      	mov	r0, r3
 8009202:	3708      	adds	r7, #8
 8009204:	46bd      	mov	sp, r7
 8009206:	bd80      	pop	{r7, pc}

08009208 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    /**
     * Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 8009208:	b480      	push	{r7}
 800920a:	b083      	sub	sp, #12
 800920c:	af00      	add	r7, sp, #0
 800920e:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8009210:	687b      	ldr	r3, [r7, #4]
 8009212:	6a1b      	ldr	r3, [r3, #32]
    }
 8009214:	4618      	mov	r0, r3
 8009216:	370c      	adds	r7, #12
 8009218:	46bd      	mov	sp, r7
 800921a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800921e:	4770      	bx	lr

08009220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8009220:	b580      	push	{r7, lr}
 8009222:	b08c      	sub	sp, #48	; 0x30
 8009224:	af08      	add	r7, sp, #32
 8009226:	60f8      	str	r0, [r7, #12]
 8009228:	60b9      	str	r1, [r7, #8]
 800922a:	4611      	mov	r1, r2
 800922c:	461a      	mov	r2, r3
 800922e:	460b      	mov	r3, r1
 8009230:	80fb      	strh	r3, [r7, #6]
 8009232:	4613      	mov	r3, r2
 8009234:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 8009236:	68f8      	ldr	r0, [r7, #12]
 8009238:	88b9      	ldrh	r1, [r7, #4]
 800923a:	88fa      	ldrh	r2, [r7, #6]
 800923c:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800923e:	9306      	str	r3, [sp, #24]
 8009240:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8009242:	9305      	str	r3, [sp, #20]
 8009244:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8009248:	9304      	str	r3, [sp, #16]
 800924a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800924e:	9303      	str	r3, [sp, #12]
 8009250:	f897 3020 	ldrb.w	r3, [r7, #32]
 8009254:	9302      	str	r3, [sp, #8]
 8009256:	7f3b      	ldrb	r3, [r7, #28]
 8009258:	9301      	str	r3, [sp, #4]
 800925a:	7e3b      	ldrb	r3, [r7, #24]
 800925c:	9300      	str	r3, [sp, #0]
 800925e:	460b      	mov	r3, r1
 8009260:	68b9      	ldr	r1, [r7, #8]
 8009262:	f013 f93d 	bl	801c4e0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8009266:	4a08      	ldr	r2, [pc, #32]	; (8009288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 8009268:	68fb      	ldr	r3, [r7, #12]
 800926a:	601a      	str	r2, [r3, #0]
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009270:	619a      	str	r2, [r3, #24]
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009276:	61da      	str	r2, [r3, #28]
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800927c:	621a      	str	r2, [r3, #32]
{
}
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	4618      	mov	r0, r3
 8009282:	3710      	adds	r7, #16
 8009284:	46bd      	mov	sp, r7
 8009286:	bd80      	pop	{r7, pc}
 8009288:	0802ed8c 	.word	0x0802ed8c

0800928c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800928c:	b480      	push	{r7}
 800928e:	b085      	sub	sp, #20
 8009290:	af00      	add	r7, sp, #0
 8009292:	6078      	str	r0, [r7, #4]
 8009294:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	699b      	ldr	r3, [r3, #24]
 800929a:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800929c:	683b      	ldr	r3, [r7, #0]
 800929e:	889b      	ldrh	r3, [r3, #4]
 80092a0:	0adb      	lsrs	r3, r3, #11
 80092a2:	b29b      	uxth	r3, r3
 80092a4:	009b      	lsls	r3, r3, #2
 80092a6:	68fa      	ldr	r2, [r7, #12]
 80092a8:	4413      	add	r3, r2
 80092aa:	681a      	ldr	r2, [r3, #0]
 80092ac:	683b      	ldr	r3, [r7, #0]
 80092ae:	681b      	ldr	r3, [r3, #0]
 80092b0:	4413      	add	r3, r2
}
 80092b2:	4618      	mov	r0, r3
 80092b4:	3714      	adds	r7, #20
 80092b6:	46bd      	mov	sp, r7
 80092b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092bc:	4770      	bx	lr

080092be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80092be:	b480      	push	{r7}
 80092c0:	b089      	sub	sp, #36	; 0x24
 80092c2:	af00      	add	r7, sp, #0
 80092c4:	60f8      	str	r0, [r7, #12]
 80092c6:	460b      	mov	r3, r1
 80092c8:	607a      	str	r2, [r7, #4]
 80092ca:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	2b00      	cmp	r3, #0
 80092d0:	d003      	beq.n	80092da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	7b1b      	ldrb	r3, [r3, #12]
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	d101      	bne.n	80092de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 80092da:	2300      	movs	r3, #0
 80092dc:	e030      	b.n	8009340 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80092de:	68fb      	ldr	r3, [r7, #12]
 80092e0:	69da      	ldr	r2, [r3, #28]
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80092e6:	697b      	ldr	r3, [r7, #20]
 80092e8:	7b5b      	ldrb	r3, [r3, #13]
 80092ea:	021b      	lsls	r3, r3, #8
 80092ec:	b21b      	sxth	r3, r3
 80092ee:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80092f2:	b219      	sxth	r1, r3
 80092f4:	697b      	ldr	r3, [r7, #20]
 80092f6:	7adb      	ldrb	r3, [r3, #11]
 80092f8:	b21b      	sxth	r3, r3
 80092fa:	430b      	orrs	r3, r1
 80092fc:	b21b      	sxth	r3, r3
 80092fe:	b29b      	uxth	r3, r3
 8009300:	009b      	lsls	r3, r3, #2
 8009302:	4413      	add	r3, r2
 8009304:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009306:	687b      	ldr	r3, [r7, #4]
 8009308:	7b1b      	ldrb	r3, [r3, #12]
 800930a:	837b      	strh	r3, [r7, #26]
 800930c:	8b7b      	ldrh	r3, [r7, #26]
 800930e:	2b00      	cmp	r3, #0
 8009310:	d015      	beq.n	800933e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8009312:	69fb      	ldr	r3, [r7, #28]
 8009314:	881b      	ldrh	r3, [r3, #0]
 8009316:	897a      	ldrh	r2, [r7, #10]
 8009318:	429a      	cmp	r2, r3
 800931a:	d103      	bne.n	8009324 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
        {
            return kerndata->distance;
 800931c:	69fb      	ldr	r3, [r7, #28]
 800931e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8009322:	e00d      	b.n	8009340 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009324:	69fb      	ldr	r3, [r7, #28]
 8009326:	881b      	ldrh	r3, [r3, #0]
 8009328:	897a      	ldrh	r2, [r7, #10]
 800932a:	429a      	cmp	r2, r3
 800932c:	d306      	bcc.n	800933c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x7e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800932e:	8b7b      	ldrh	r3, [r7, #26]
 8009330:	3b01      	subs	r3, #1
 8009332:	837b      	strh	r3, [r7, #26]
 8009334:	69fb      	ldr	r3, [r7, #28]
 8009336:	3304      	adds	r3, #4
 8009338:	61fb      	str	r3, [r7, #28]
 800933a:	e7e7      	b.n	800930c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x4e>
        {
            break;
 800933c:	bf00      	nop
        }
    }
    return 0;
 800933e:	2300      	movs	r3, #0
}
 8009340:	4618      	mov	r0, r3
 8009342:	3724      	adds	r7, #36	; 0x24
 8009344:	46bd      	mov	sp, r7
 8009346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800934a:	4770      	bx	lr

0800934c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 68, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800934c:	b580      	push	{r7, lr}
 800934e:	af00      	add	r7, sp, #0
 8009350:	4801      	ldr	r0, [pc, #4]	; (8009358 <__tcf_0+0xc>)
 8009352:	f7ff ff17 	bl	8009184 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009356:	bd80      	pop	{r7, pc}
 8009358:	200004b8 	.word	0x200004b8

0800935c <_Z23getFont_verdana_10_4bppv>:
{
 800935c:	b580      	push	{r7, lr}
 800935e:	b08a      	sub	sp, #40	; 0x28
 8009360:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 68, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8009362:	4b1e      	ldr	r3, [pc, #120]	; (80093dc <_Z23getFont_verdana_10_4bppv+0x80>)
 8009364:	781b      	ldrb	r3, [r3, #0]
 8009366:	f3bf 8f5b 	dmb	ish
 800936a:	b2db      	uxtb	r3, r3
 800936c:	f003 0301 	and.w	r3, r3, #1
 8009370:	2b00      	cmp	r3, #0
 8009372:	bf0c      	ite	eq
 8009374:	2301      	moveq	r3, #1
 8009376:	2300      	movne	r3, #0
 8009378:	b2db      	uxtb	r3, r3
 800937a:	2b00      	cmp	r3, #0
 800937c:	d02a      	beq.n	80093d4 <_Z23getFont_verdana_10_4bppv+0x78>
 800937e:	4817      	ldr	r0, [pc, #92]	; (80093dc <_Z23getFont_verdana_10_4bppv+0x80>)
 8009380:	f022 fb73 	bl	802ba6a <__cxa_guard_acquire>
 8009384:	4603      	mov	r3, r0
 8009386:	2b00      	cmp	r3, #0
 8009388:	bf14      	ite	ne
 800938a:	2301      	movne	r3, #1
 800938c:	2300      	moveq	r3, #0
 800938e:	b2db      	uxtb	r3, r3
 8009390:	2b00      	cmp	r3, #0
 8009392:	d01f      	beq.n	80093d4 <_Z23getFont_verdana_10_4bppv+0x78>
 8009394:	2300      	movs	r3, #0
 8009396:	9309      	str	r3, [sp, #36]	; 0x24
 8009398:	2300      	movs	r3, #0
 800939a:	9308      	str	r3, [sp, #32]
 800939c:	233f      	movs	r3, #63	; 0x3f
 800939e:	9307      	str	r3, [sp, #28]
 80093a0:	4b0f      	ldr	r3, [pc, #60]	; (80093e0 <_Z23getFont_verdana_10_4bppv+0x84>)
 80093a2:	9306      	str	r3, [sp, #24]
 80093a4:	4b0f      	ldr	r3, [pc, #60]	; (80093e4 <_Z23getFont_verdana_10_4bppv+0x88>)
 80093a6:	9305      	str	r3, [sp, #20]
 80093a8:	2301      	movs	r3, #1
 80093aa:	9304      	str	r3, [sp, #16]
 80093ac:	2301      	movs	r3, #1
 80093ae:	9303      	str	r3, [sp, #12]
 80093b0:	2301      	movs	r3, #1
 80093b2:	9302      	str	r3, [sp, #8]
 80093b4:	2304      	movs	r3, #4
 80093b6:	9301      	str	r3, [sp, #4]
 80093b8:	2302      	movs	r3, #2
 80093ba:	9300      	str	r3, [sp, #0]
 80093bc:	230a      	movs	r3, #10
 80093be:	2244      	movs	r2, #68	; 0x44
 80093c0:	4909      	ldr	r1, [pc, #36]	; (80093e8 <_Z23getFont_verdana_10_4bppv+0x8c>)
 80093c2:	480a      	ldr	r0, [pc, #40]	; (80093ec <_Z23getFont_verdana_10_4bppv+0x90>)
 80093c4:	f7ff ff2c 	bl	8009220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80093c8:	4809      	ldr	r0, [pc, #36]	; (80093f0 <_Z23getFont_verdana_10_4bppv+0x94>)
 80093ca:	f022 fdab 	bl	802bf24 <atexit>
 80093ce:	4803      	ldr	r0, [pc, #12]	; (80093dc <_Z23getFont_verdana_10_4bppv+0x80>)
 80093d0:	f022 fb57 	bl	802ba82 <__cxa_guard_release>
    return verdana_10_4bpp;
 80093d4:	4b05      	ldr	r3, [pc, #20]	; (80093ec <_Z23getFont_verdana_10_4bppv+0x90>)
}
 80093d6:	4618      	mov	r0, r3
 80093d8:	46bd      	mov	sp, r7
 80093da:	bd80      	pop	{r7, pc}
 80093dc:	200004dc 	.word	0x200004dc
 80093e0:	0803390c 	.word	0x0803390c
 80093e4:	0802edd8 	.word	0x0802edd8
 80093e8:	08033518 	.word	0x08033518
 80093ec:	200004b8 	.word	0x200004b8
 80093f0:	0800934d 	.word	0x0800934d

080093f4 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80093f4:	b580      	push	{r7, lr}
 80093f6:	af00      	add	r7, sp, #0
 80093f8:	4801      	ldr	r0, [pc, #4]	; (8009400 <__tcf_0+0xc>)
 80093fa:	f7ff fec3 	bl	8009184 <_ZN8touchgfx13GeneratedFontD1Ev>
 80093fe:	bd80      	pop	{r7, pc}
 8009400:	200004e0 	.word	0x200004e0

08009404 <_Z23getFont_verdana_20_4bppv>:
{
 8009404:	b580      	push	{r7, lr}
 8009406:	b08a      	sub	sp, #40	; 0x28
 8009408:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 800940a:	4b1e      	ldr	r3, [pc, #120]	; (8009484 <_Z23getFont_verdana_20_4bppv+0x80>)
 800940c:	781b      	ldrb	r3, [r3, #0]
 800940e:	f3bf 8f5b 	dmb	ish
 8009412:	b2db      	uxtb	r3, r3
 8009414:	f003 0301 	and.w	r3, r3, #1
 8009418:	2b00      	cmp	r3, #0
 800941a:	bf0c      	ite	eq
 800941c:	2301      	moveq	r3, #1
 800941e:	2300      	movne	r3, #0
 8009420:	b2db      	uxtb	r3, r3
 8009422:	2b00      	cmp	r3, #0
 8009424:	d02a      	beq.n	800947c <_Z23getFont_verdana_20_4bppv+0x78>
 8009426:	4817      	ldr	r0, [pc, #92]	; (8009484 <_Z23getFont_verdana_20_4bppv+0x80>)
 8009428:	f022 fb1f 	bl	802ba6a <__cxa_guard_acquire>
 800942c:	4603      	mov	r3, r0
 800942e:	2b00      	cmp	r3, #0
 8009430:	bf14      	ite	ne
 8009432:	2301      	movne	r3, #1
 8009434:	2300      	moveq	r3, #0
 8009436:	b2db      	uxtb	r3, r3
 8009438:	2b00      	cmp	r3, #0
 800943a:	d01f      	beq.n	800947c <_Z23getFont_verdana_20_4bppv+0x78>
 800943c:	2300      	movs	r3, #0
 800943e:	9309      	str	r3, [sp, #36]	; 0x24
 8009440:	2300      	movs	r3, #0
 8009442:	9308      	str	r3, [sp, #32]
 8009444:	233f      	movs	r3, #63	; 0x3f
 8009446:	9307      	str	r3, [sp, #28]
 8009448:	4b0f      	ldr	r3, [pc, #60]	; (8009488 <_Z23getFont_verdana_20_4bppv+0x84>)
 800944a:	9306      	str	r3, [sp, #24]
 800944c:	4b0f      	ldr	r3, [pc, #60]	; (800948c <_Z23getFont_verdana_20_4bppv+0x88>)
 800944e:	9305      	str	r3, [sp, #20]
 8009450:	2300      	movs	r3, #0
 8009452:	9304      	str	r3, [sp, #16]
 8009454:	2300      	movs	r3, #0
 8009456:	9303      	str	r3, [sp, #12]
 8009458:	2301      	movs	r3, #1
 800945a:	9302      	str	r3, [sp, #8]
 800945c:	2304      	movs	r3, #4
 800945e:	9301      	str	r3, [sp, #4]
 8009460:	2300      	movs	r3, #0
 8009462:	9300      	str	r3, [sp, #0]
 8009464:	2314      	movs	r3, #20
 8009466:	2201      	movs	r2, #1
 8009468:	4909      	ldr	r1, [pc, #36]	; (8009490 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800946a:	480a      	ldr	r0, [pc, #40]	; (8009494 <_Z23getFont_verdana_20_4bppv+0x90>)
 800946c:	f7ff fed8 	bl	8009220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8009470:	4809      	ldr	r0, [pc, #36]	; (8009498 <_Z23getFont_verdana_20_4bppv+0x94>)
 8009472:	f022 fd57 	bl	802bf24 <atexit>
 8009476:	4803      	ldr	r0, [pc, #12]	; (8009484 <_Z23getFont_verdana_20_4bppv+0x80>)
 8009478:	f022 fb03 	bl	802ba82 <__cxa_guard_release>
    return verdana_20_4bpp;
 800947c:	4b05      	ldr	r3, [pc, #20]	; (8009494 <_Z23getFont_verdana_20_4bppv+0x90>)
}
 800947e:	4618      	mov	r0, r3
 8009480:	46bd      	mov	sp, r7
 8009482:	bd80      	pop	{r7, pc}
 8009484:	20000504 	.word	0x20000504
 8009488:	08033924 	.word	0x08033924
 800948c:	0802eddc 	.word	0x0802eddc
 8009490:	080338d0 	.word	0x080338d0
 8009494:	200004e0 	.word	0x200004e0
 8009498:	080093f5 	.word	0x080093f5

0800949c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 3, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 800949c:	b580      	push	{r7, lr}
 800949e:	af00      	add	r7, sp, #0
 80094a0:	4801      	ldr	r0, [pc, #4]	; (80094a8 <__tcf_0+0xc>)
 80094a2:	f7ff fe6f 	bl	8009184 <_ZN8touchgfx13GeneratedFontD1Ev>
 80094a6:	bd80      	pop	{r7, pc}
 80094a8:	20000508 	.word	0x20000508

080094ac <_Z23getFont_verdana_40_4bppv>:
{
 80094ac:	b580      	push	{r7, lr}
 80094ae:	b08a      	sub	sp, #40	; 0x28
 80094b0:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 3, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 80094b2:	4b1e      	ldr	r3, [pc, #120]	; (800952c <_Z23getFont_verdana_40_4bppv+0x80>)
 80094b4:	781b      	ldrb	r3, [r3, #0]
 80094b6:	f3bf 8f5b 	dmb	ish
 80094ba:	b2db      	uxtb	r3, r3
 80094bc:	f003 0301 	and.w	r3, r3, #1
 80094c0:	2b00      	cmp	r3, #0
 80094c2:	bf0c      	ite	eq
 80094c4:	2301      	moveq	r3, #1
 80094c6:	2300      	movne	r3, #0
 80094c8:	b2db      	uxtb	r3, r3
 80094ca:	2b00      	cmp	r3, #0
 80094cc:	d02a      	beq.n	8009524 <_Z23getFont_verdana_40_4bppv+0x78>
 80094ce:	4817      	ldr	r0, [pc, #92]	; (800952c <_Z23getFont_verdana_40_4bppv+0x80>)
 80094d0:	f022 facb 	bl	802ba6a <__cxa_guard_acquire>
 80094d4:	4603      	mov	r3, r0
 80094d6:	2b00      	cmp	r3, #0
 80094d8:	bf14      	ite	ne
 80094da:	2301      	movne	r3, #1
 80094dc:	2300      	moveq	r3, #0
 80094de:	b2db      	uxtb	r3, r3
 80094e0:	2b00      	cmp	r3, #0
 80094e2:	d01f      	beq.n	8009524 <_Z23getFont_verdana_40_4bppv+0x78>
 80094e4:	2300      	movs	r3, #0
 80094e6:	9309      	str	r3, [sp, #36]	; 0x24
 80094e8:	2300      	movs	r3, #0
 80094ea:	9308      	str	r3, [sp, #32]
 80094ec:	233f      	movs	r3, #63	; 0x3f
 80094ee:	9307      	str	r3, [sp, #28]
 80094f0:	4b0f      	ldr	r3, [pc, #60]	; (8009530 <_Z23getFont_verdana_40_4bppv+0x84>)
 80094f2:	9306      	str	r3, [sp, #24]
 80094f4:	4b0f      	ldr	r3, [pc, #60]	; (8009534 <_Z23getFont_verdana_40_4bppv+0x88>)
 80094f6:	9305      	str	r3, [sp, #20]
 80094f8:	2300      	movs	r3, #0
 80094fa:	9304      	str	r3, [sp, #16]
 80094fc:	2300      	movs	r3, #0
 80094fe:	9303      	str	r3, [sp, #12]
 8009500:	2301      	movs	r3, #1
 8009502:	9302      	str	r3, [sp, #8]
 8009504:	2304      	movs	r3, #4
 8009506:	9301      	str	r3, [sp, #4]
 8009508:	2300      	movs	r3, #0
 800950a:	9300      	str	r3, [sp, #0]
 800950c:	2328      	movs	r3, #40	; 0x28
 800950e:	2203      	movs	r2, #3
 8009510:	4909      	ldr	r1, [pc, #36]	; (8009538 <_Z23getFont_verdana_40_4bppv+0x8c>)
 8009512:	480a      	ldr	r0, [pc, #40]	; (800953c <_Z23getFont_verdana_40_4bppv+0x90>)
 8009514:	f7ff fe84 	bl	8009220 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8009518:	4809      	ldr	r0, [pc, #36]	; (8009540 <_Z23getFont_verdana_40_4bppv+0x94>)
 800951a:	f022 fd03 	bl	802bf24 <atexit>
 800951e:	4803      	ldr	r0, [pc, #12]	; (800952c <_Z23getFont_verdana_40_4bppv+0x80>)
 8009520:	f022 faaf 	bl	802ba82 <__cxa_guard_release>
    return verdana_40_4bpp;
 8009524:	4b05      	ldr	r3, [pc, #20]	; (800953c <_Z23getFont_verdana_40_4bppv+0x90>)
}
 8009526:	4618      	mov	r0, r3
 8009528:	46bd      	mov	sp, r7
 800952a:	bd80      	pop	{r7, pc}
 800952c:	2000052c 	.word	0x2000052c
 8009530:	08033928 	.word	0x08033928
 8009534:	0802ede0 	.word	0x0802ede0
 8009538:	080338e0 	.word	0x080338e0
 800953c:	20000508 	.word	0x20000508
 8009540:	0800949d 	.word	0x0800949d

08009544 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8009544:	b480      	push	{r7}
 8009546:	b083      	sub	sp, #12
 8009548:	af00      	add	r7, sp, #0
 800954a:	6078      	str	r0, [r7, #4]
 800954c:	6039      	str	r1, [r7, #0]
 800954e:	683b      	ldr	r3, [r7, #0]
 8009550:	4618      	mov	r0, r3
 8009552:	370c      	adds	r7, #12
 8009554:	46bd      	mov	sp, r7
 8009556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800955a:	4770      	bx	lr

0800955c <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800955c:	b480      	push	{r7}
 800955e:	b083      	sub	sp, #12
 8009560:	af00      	add	r7, sp, #0
 8009562:	6078      	str	r0, [r7, #4]
 8009564:	6039      	str	r1, [r7, #0]
    {
    }
 8009566:	bf00      	nop
 8009568:	370c      	adds	r7, #12
 800956a:	46bd      	mov	sp, r7
 800956c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009570:	4770      	bx	lr

08009572 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009572:	b480      	push	{r7}
 8009574:	b083      	sub	sp, #12
 8009576:	af00      	add	r7, sp, #0
 8009578:	6078      	str	r0, [r7, #4]
 800957a:	6039      	str	r1, [r7, #0]
    {
    }
 800957c:	bf00      	nop
 800957e:	370c      	adds	r7, #12
 8009580:	46bd      	mov	sp, r7
 8009582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009586:	4770      	bx	lr

08009588 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009588:	b480      	push	{r7}
 800958a:	b083      	sub	sp, #12
 800958c:	af00      	add	r7, sp, #0
 800958e:	6078      	str	r0, [r7, #4]
 8009590:	6039      	str	r1, [r7, #0]
    {
    }
 8009592:	bf00      	nop
 8009594:	370c      	adds	r7, #12
 8009596:	46bd      	mov	sp, r7
 8009598:	f85d 7b04 	ldr.w	r7, [sp], #4
 800959c:	4770      	bx	lr

0800959e <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800959e:	b480      	push	{r7}
 80095a0:	b083      	sub	sp, #12
 80095a2:	af00      	add	r7, sp, #0
 80095a4:	6078      	str	r0, [r7, #4]
 80095a6:	460b      	mov	r3, r1
 80095a8:	70fb      	strb	r3, [r7, #3]
    {
    }
 80095aa:	bf00      	nop
 80095ac:	370c      	adds	r7, #12
 80095ae:	46bd      	mov	sp, r7
 80095b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095b4:	4770      	bx	lr

080095b6 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80095b6:	b480      	push	{r7}
 80095b8:	b083      	sub	sp, #12
 80095ba:	af00      	add	r7, sp, #0
 80095bc:	6078      	str	r0, [r7, #4]
    {
    }
 80095be:	bf00      	nop
 80095c0:	370c      	adds	r7, #12
 80095c2:	46bd      	mov	sp, r7
 80095c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095c8:	4770      	bx	lr

080095ca <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 80095ca:	b480      	push	{r7}
 80095cc:	b083      	sub	sp, #12
 80095ce:	af00      	add	r7, sp, #0
 80095d0:	6078      	str	r0, [r7, #4]
    {
    }
 80095d2:	bf00      	nop
 80095d4:	370c      	adds	r7, #12
 80095d6:	46bd      	mov	sp, r7
 80095d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095dc:	4770      	bx	lr
	...

080095e0 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 80095e0:	b480      	push	{r7}
 80095e2:	b083      	sub	sp, #12
 80095e4:	af00      	add	r7, sp, #0
 80095e6:	6078      	str	r0, [r7, #4]
    {
 80095e8:	4a04      	ldr	r2, [pc, #16]	; (80095fc <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	601a      	str	r2, [r3, #0]
    }
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	4618      	mov	r0, r3
 80095f2:	370c      	adds	r7, #12
 80095f4:	46bd      	mov	sp, r7
 80095f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095fa:	4770      	bx	lr
 80095fc:	0802eeec 	.word	0x0802eeec

08009600 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8009600:	b580      	push	{r7, lr}
 8009602:	b082      	sub	sp, #8
 8009604:	af00      	add	r7, sp, #0
 8009606:	6078      	str	r0, [r7, #4]
    }
 8009608:	6878      	ldr	r0, [r7, #4]
 800960a:	f7ff ffe9 	bl	80095e0 <_ZN8touchgfx15UIEventListenerD1Ev>
 800960e:	2104      	movs	r1, #4
 8009610:	6878      	ldr	r0, [r7, #4]
 8009612:	f022 fa28 	bl	802ba66 <_ZdlPvj>
 8009616:	687b      	ldr	r3, [r7, #4]
 8009618:	4618      	mov	r0, r3
 800961a:	3708      	adds	r7, #8
 800961c:	46bd      	mov	sp, r7
 800961e:	bd80      	pop	{r7, pc}

08009620 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8009620:	b480      	push	{r7}
 8009622:	b083      	sub	sp, #12
 8009624:	af00      	add	r7, sp, #0
 8009626:	6078      	str	r0, [r7, #4]
 8009628:	460b      	mov	r3, r1
 800962a:	70fb      	strb	r3, [r7, #3]
    {
    }
 800962c:	bf00      	nop
 800962e:	370c      	adds	r7, #12
 8009630:	46bd      	mov	sp, r7
 8009632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009636:	4770      	bx	lr

08009638 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8009638:	b480      	push	{r7}
 800963a:	b083      	sub	sp, #12
 800963c:	af00      	add	r7, sp, #0
 800963e:	6078      	str	r0, [r7, #4]
 8009640:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	683a      	ldr	r2, [r7, #0]
 8009646:	f503 7396 	add.w	r3, r3, #300	; 0x12c
 800964a:	6810      	ldr	r0, [r2, #0]
 800964c:	6851      	ldr	r1, [r2, #4]
 800964e:	c303      	stmia	r3!, {r0, r1}
    };
 8009650:	bf00      	nop
 8009652:	370c      	adds	r7, #12
 8009654:	46bd      	mov	sp, r7
 8009656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800965a:	4770      	bx	lr

0800965c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800965c:	b480      	push	{r7}
 800965e:	b083      	sub	sp, #12
 8009660:	af00      	add	r7, sp, #0
 8009662:	6078      	str	r0, [r7, #4]
    {
 8009664:	4a04      	ldr	r2, [pc, #16]	; (8009678 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	601a      	str	r2, [r3, #0]
    }
 800966a:	687b      	ldr	r3, [r7, #4]
 800966c:	4618      	mov	r0, r3
 800966e:	370c      	adds	r7, #12
 8009670:	46bd      	mov	sp, r7
 8009672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009676:	4770      	bx	lr
 8009678:	0802eed4 	.word	0x0802eed4

0800967c <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800967c:	b580      	push	{r7, lr}
 800967e:	b082      	sub	sp, #8
 8009680:	af00      	add	r7, sp, #0
 8009682:	6078      	str	r0, [r7, #4]
    }
 8009684:	6878      	ldr	r0, [r7, #4]
 8009686:	f7ff ffe9 	bl	800965c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800968a:	2104      	movs	r1, #4
 800968c:	6878      	ldr	r0, [r7, #4]
 800968e:	f022 f9ea 	bl	802ba66 <_ZdlPvj>
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	4618      	mov	r0, r3
 8009696:	3708      	adds	r7, #8
 8009698:	46bd      	mov	sp, r7
 800969a:	bd80      	pop	{r7, pc}

0800969c <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800969c:	b480      	push	{r7}
 800969e:	af00      	add	r7, sp, #0
    {
        return instance;
 80096a0:	4b03      	ldr	r3, [pc, #12]	; (80096b0 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80096a2:	681b      	ldr	r3, [r3, #0]
    }
 80096a4:	4618      	mov	r0, r3
 80096a6:	46bd      	mov	sp, r7
 80096a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096ac:	4770      	bx	lr
 80096ae:	bf00      	nop
 80096b0:	20004168 	.word	0x20004168

080096b4 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80096b4:	b480      	push	{r7}
 80096b6:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80096b8:	4b0b      	ldr	r3, [pc, #44]	; (80096e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 80096c0:	2b00      	cmp	r3, #0
 80096c2:	d008      	beq.n	80096d6 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80096c4:	4b08      	ldr	r3, [pc, #32]	; (80096e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80096c6:	681b      	ldr	r3, [r3, #0]
 80096c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d003      	beq.n	80096d6 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80096ce:	4b06      	ldr	r3, [pc, #24]	; (80096e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80096d4:	e002      	b.n	80096dc <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 80096d6:	4b04      	ldr	r3, [pc, #16]	; (80096e8 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80096d8:	681b      	ldr	r3, [r3, #0]
 80096da:	689b      	ldr	r3, [r3, #8]
        }
    }
 80096dc:	4618      	mov	r0, r3
 80096de:	46bd      	mov	sp, r7
 80096e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096e4:	4770      	bx	lr
 80096e6:	bf00      	nop
 80096e8:	20004168 	.word	0x20004168

080096ec <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80096ec:	b480      	push	{r7}
 80096ee:	b083      	sub	sp, #12
 80096f0:	af00      	add	r7, sp, #0
 80096f2:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80096f4:	4a07      	ldr	r2, [pc, #28]	; (8009714 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	601a      	str	r2, [r3, #0]
 80096fa:	687b      	ldr	r3, [r7, #4]
 80096fc:	2200      	movs	r2, #0
 80096fe:	605a      	str	r2, [r3, #4]
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	2200      	movs	r2, #0
 8009704:	721a      	strb	r2, [r3, #8]
    {
    }
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	4618      	mov	r0, r3
 800970a:	370c      	adds	r7, #12
 800970c:	46bd      	mov	sp, r7
 800970e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009712:	4770      	bx	lr
 8009714:	0802eeb0 	.word	0x0802eeb0

08009718 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8009718:	b480      	push	{r7}
 800971a:	b083      	sub	sp, #12
 800971c:	af00      	add	r7, sp, #0
 800971e:	6078      	str	r0, [r7, #4]
    {
 8009720:	4a04      	ldr	r2, [pc, #16]	; (8009734 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	601a      	str	r2, [r3, #0]
    }
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	4618      	mov	r0, r3
 800972a:	370c      	adds	r7, #12
 800972c:	46bd      	mov	sp, r7
 800972e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009732:	4770      	bx	lr
 8009734:	0802eeb0 	.word	0x0802eeb0

08009738 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8009738:	b580      	push	{r7, lr}
 800973a:	b082      	sub	sp, #8
 800973c:	af00      	add	r7, sp, #0
 800973e:	6078      	str	r0, [r7, #4]
    }
 8009740:	6878      	ldr	r0, [r7, #4]
 8009742:	f7ff ffe9 	bl	8009718 <_ZN8touchgfx10TransitionD1Ev>
 8009746:	210c      	movs	r1, #12
 8009748:	6878      	ldr	r0, [r7, #4]
 800974a:	f022 f98c 	bl	802ba66 <_ZdlPvj>
 800974e:	687b      	ldr	r3, [r7, #4]
 8009750:	4618      	mov	r0, r3
 8009752:	3708      	adds	r7, #8
 8009754:	46bd      	mov	sp, r7
 8009756:	bd80      	pop	{r7, pc}

08009758 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8009758:	b480      	push	{r7}
 800975a:	b083      	sub	sp, #12
 800975c:	af00      	add	r7, sp, #0
 800975e:	6078      	str	r0, [r7, #4]
    {
    }
 8009760:	bf00      	nop
 8009762:	370c      	adds	r7, #12
 8009764:	46bd      	mov	sp, r7
 8009766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800976a:	4770      	bx	lr

0800976c <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800976c:	b480      	push	{r7}
 800976e:	b083      	sub	sp, #12
 8009770:	af00      	add	r7, sp, #0
 8009772:	6078      	str	r0, [r7, #4]
    {
    }
 8009774:	bf00      	nop
 8009776:	370c      	adds	r7, #12
 8009778:	46bd      	mov	sp, r7
 800977a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800977e:	4770      	bx	lr

08009780 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8009780:	b480      	push	{r7}
 8009782:	b083      	sub	sp, #12
 8009784:	af00      	add	r7, sp, #0
 8009786:	6078      	str	r0, [r7, #4]
    {
    }
 8009788:	bf00      	nop
 800978a:	370c      	adds	r7, #12
 800978c:	46bd      	mov	sp, r7
 800978e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009792:	4770      	bx	lr

08009794 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8009794:	b580      	push	{r7, lr}
 8009796:	b082      	sub	sp, #8
 8009798:	af00      	add	r7, sp, #0
 800979a:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->draw();
 800979c:	f011 fe82 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 80097a0:	4603      	mov	r3, r0
 80097a2:	681a      	ldr	r2, [r3, #0]
 80097a4:	3230      	adds	r2, #48	; 0x30
 80097a6:	6812      	ldr	r2, [r2, #0]
 80097a8:	4618      	mov	r0, r3
 80097aa:	4790      	blx	r2
    }
 80097ac:	bf00      	nop
 80097ae:	3708      	adds	r7, #8
 80097b0:	46bd      	mov	sp, r7
 80097b2:	bd80      	pop	{r7, pc}

080097b4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80097b4:	b480      	push	{r7}
 80097b6:	b083      	sub	sp, #12
 80097b8:	af00      	add	r7, sp, #0
 80097ba:	6078      	str	r0, [r7, #4]
 80097bc:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	683a      	ldr	r2, [r7, #0]
 80097c2:	605a      	str	r2, [r3, #4]
    }
 80097c4:	bf00      	nop
 80097c6:	370c      	adds	r7, #12
 80097c8:	46bd      	mov	sp, r7
 80097ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ce:	4770      	bx	lr

080097d0 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80097d0:	b580      	push	{r7, lr}
 80097d2:	b082      	sub	sp, #8
 80097d4:	af00      	add	r7, sp, #0
 80097d6:	6078      	str	r0, [r7, #4]
 80097d8:	4a05      	ldr	r2, [pc, #20]	; (80097f0 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80097da:	687b      	ldr	r3, [r7, #4]
 80097dc:	601a      	str	r2, [r3, #0]
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	4618      	mov	r0, r3
 80097e2:	f7ff fefd 	bl	80095e0 <_ZN8touchgfx15UIEventListenerD1Ev>
 80097e6:	687b      	ldr	r3, [r7, #4]
 80097e8:	4618      	mov	r0, r3
 80097ea:	3708      	adds	r7, #8
 80097ec:	46bd      	mov	sp, r7
 80097ee:	bd80      	pop	{r7, pc}
 80097f0:	0803143c 	.word	0x0803143c

080097f4 <_ZN8touchgfx11ApplicationD0Ev>:
 80097f4:	b580      	push	{r7, lr}
 80097f6:	b082      	sub	sp, #8
 80097f8:	af00      	add	r7, sp, #0
 80097fa:	6078      	str	r0, [r7, #4]
 80097fc:	6878      	ldr	r0, [r7, #4]
 80097fe:	f7ff ffe7 	bl	80097d0 <_ZN8touchgfx11ApplicationD1Ev>
 8009802:	f44f 719c 	mov.w	r1, #312	; 0x138
 8009806:	6878      	ldr	r0, [r7, #4]
 8009808:	f022 f92d 	bl	802ba66 <_ZdlPvj>
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	4618      	mov	r0, r3
 8009810:	3708      	adds	r7, #8
 8009812:	46bd      	mov	sp, r7
 8009814:	bd80      	pop	{r7, pc}
	...

08009818 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8009818:	b580      	push	{r7, lr}
 800981a:	b082      	sub	sp, #8
 800981c:	af00      	add	r7, sp, #0
 800981e:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	4618      	mov	r0, r3
 8009824:	f011 fe60 	bl	801b4e8 <_ZN8touchgfx11ApplicationC1Ev>
 8009828:	4a09      	ldr	r2, [pc, #36]	; (8009850 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800982a:	687b      	ldr	r3, [r7, #4]
 800982c:	601a      	str	r2, [r3, #0]
 800982e:	687b      	ldr	r3, [r7, #4]
 8009830:	2200      	movs	r2, #0
 8009832:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
 8009836:	687b      	ldr	r3, [r7, #4]
 8009838:	2200      	movs	r2, #0
 800983a:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
    {
        instance = this;
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	4a04      	ldr	r2, [pc, #16]	; (8009854 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8009842:	6013      	str	r3, [r2, #0]
    }
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	4618      	mov	r0, r3
 8009848:	3708      	adds	r7, #8
 800984a:	46bd      	mov	sp, r7
 800984c:	bd80      	pop	{r7, pc}
 800984e:	bf00      	nop
 8009850:	0802ee6c 	.word	0x0802ee6c
 8009854:	200041d4 	.word	0x200041d4

08009858 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8009858:	b580      	push	{r7, lr}
 800985a:	b082      	sub	sp, #8
 800985c:	af00      	add	r7, sp, #0
 800985e:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8009860:	6878      	ldr	r0, [r7, #4]
 8009862:	f000 f804 	bl	800986e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8009866:	bf00      	nop
 8009868:	3708      	adds	r7, #8
 800986a:	46bd      	mov	sp, r7
 800986c:	bd80      	pop	{r7, pc}

0800986e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800986e:	b580      	push	{r7, lr}
 8009870:	b082      	sub	sp, #8
 8009872:	af00      	add	r7, sp, #0
 8009874:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800987c:	2b00      	cmp	r3, #0
 800987e:	d00f      	beq.n	80098a0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8009880:	687b      	ldr	r3, [r7, #4]
 8009882:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	330c      	adds	r3, #12
 8009890:	681b      	ldr	r3, [r3, #0]
 8009892:	4610      	mov	r0, r2
 8009894:	4798      	blx	r3
 8009896:	4603      	mov	r3, r0
 8009898:	2b00      	cmp	r3, #0
 800989a:	d001      	beq.n	80098a0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800989c:	2301      	movs	r3, #1
 800989e:	e000      	b.n	80098a2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80098a0:	2300      	movs	r3, #0
 80098a2:	2b00      	cmp	r3, #0
 80098a4:	d00e      	beq.n	80098c4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	f8d3 213c 	ldr.w	r2, [r3, #316]	; 0x13c
 80098ac:	687b      	ldr	r3, [r7, #4]
 80098ae:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	3308      	adds	r3, #8
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	4610      	mov	r0, r2
 80098ba:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80098bc:	687b      	ldr	r3, [r7, #4]
 80098be:	2200      	movs	r2, #0
 80098c0:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
        }
    }
 80098c4:	bf00      	nop
 80098c6:	3708      	adds	r7, #8
 80098c8:	46bd      	mov	sp, r7
 80098ca:	bd80      	pop	{r7, pc}

080098cc <_ZN5Model4bindEP13ModelListener>:
public:
    Model();

    static Model* getInstance();

    void bind(ModelListener* listener)
 80098cc:	b480      	push	{r7}
 80098ce:	b083      	sub	sp, #12
 80098d0:	af00      	add	r7, sp, #0
 80098d2:	6078      	str	r0, [r7, #4]
 80098d4:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	683a      	ldr	r2, [r7, #0]
 80098da:	601a      	str	r2, [r3, #0]
    }
 80098dc:	bf00      	nop
 80098de:	370c      	adds	r7, #12
 80098e0:	46bd      	mov	sp, r7
 80098e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098e6:	4770      	bx	lr

080098e8 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 80098e8:	b580      	push	{r7, lr}
 80098ea:	b082      	sub	sp, #8
 80098ec:	af00      	add	r7, sp, #0
 80098ee:	6078      	str	r0, [r7, #4]
 80098f0:	4a05      	ldr	r2, [pc, #20]	; (8009908 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80098f2:	687b      	ldr	r3, [r7, #4]
 80098f4:	601a      	str	r2, [r3, #0]
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	4618      	mov	r0, r3
 80098fa:	f7ff ff69 	bl	80097d0 <_ZN8touchgfx11ApplicationD1Ev>
 80098fe:	687b      	ldr	r3, [r7, #4]
 8009900:	4618      	mov	r0, r3
 8009902:	3708      	adds	r7, #8
 8009904:	46bd      	mov	sp, r7
 8009906:	bd80      	pop	{r7, pc}
 8009908:	0802ee6c 	.word	0x0802ee6c

0800990c <_ZN8touchgfx14MVPApplicationD0Ev>:
 800990c:	b580      	push	{r7, lr}
 800990e:	b082      	sub	sp, #8
 8009910:	af00      	add	r7, sp, #0
 8009912:	6078      	str	r0, [r7, #4]
 8009914:	6878      	ldr	r0, [r7, #4]
 8009916:	f7ff ffe7 	bl	80098e8 <_ZN8touchgfx14MVPApplicationD1Ev>
 800991a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800991e:	6878      	ldr	r0, [r7, #4]
 8009920:	f022 f8a1 	bl	802ba66 <_ZdlPvj>
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	4618      	mov	r0, r3
 8009928:	3708      	adds	r7, #8
 800992a:	46bd      	mov	sp, r7
 800992c:	bd80      	pop	{r7, pc}
	...

08009930 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8009930:	b580      	push	{r7, lr}
 8009932:	b082      	sub	sp, #8
 8009934:	af00      	add	r7, sp, #0
 8009936:	6078      	str	r0, [r7, #4]
 8009938:	4a08      	ldr	r2, [pc, #32]	; (800995c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	601a      	str	r2, [r3, #0]
 800993e:	687b      	ldr	r3, [r7, #4]
 8009940:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 8009944:	4618      	mov	r0, r3
 8009946:	f000 fabf 	bl	8009ec8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	4618      	mov	r0, r3
 800994e:	f7ff ffcb 	bl	80098e8 <_ZN8touchgfx14MVPApplicationD1Ev>
 8009952:	687b      	ldr	r3, [r7, #4]
 8009954:	4618      	mov	r0, r3
 8009956:	3708      	adds	r7, #8
 8009958:	46bd      	mov	sp, r7
 800995a:	bd80      	pop	{r7, pc}
 800995c:	0802ee10 	.word	0x0802ee10

08009960 <_ZN23FrontendApplicationBaseD0Ev>:
 8009960:	b580      	push	{r7, lr}
 8009962:	b082      	sub	sp, #8
 8009964:	af00      	add	r7, sp, #0
 8009966:	6078      	str	r0, [r7, #4]
 8009968:	6878      	ldr	r0, [r7, #4]
 800996a:	f7ff ffe1 	bl	8009930 <_ZN23FrontendApplicationBaseD1Ev>
 800996e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8009972:	6878      	ldr	r0, [r7, #4]
 8009974:	f022 f877 	bl	802ba66 <_ZdlPvj>
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	4618      	mov	r0, r3
 800997c:	3708      	adds	r7, #8
 800997e:	46bd      	mov	sp, r7
 8009980:	bd80      	pop	{r7, pc}

08009982 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8009982:	b480      	push	{r7}
 8009984:	b083      	sub	sp, #12
 8009986:	af00      	add	r7, sp, #0
 8009988:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800998a:	687b      	ldr	r3, [r7, #4]
 800998c:	2201      	movs	r2, #1
 800998e:	721a      	strb	r2, [r3, #8]
    }
 8009990:	bf00      	nop
 8009992:	370c      	adds	r7, #12
 8009994:	46bd      	mov	sp, r7
 8009996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800999a:	4770      	bx	lr

0800999c <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800999c:	b480      	push	{r7}
 800999e:	b083      	sub	sp, #12
 80099a0:	af00      	add	r7, sp, #0
 80099a2:	6078      	str	r0, [r7, #4]
 80099a4:	6039      	str	r1, [r7, #0]
    {
        model = m;
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	683a      	ldr	r2, [r7, #0]
 80099aa:	605a      	str	r2, [r3, #4]
    }
 80099ac:	bf00      	nop
 80099ae:	370c      	adds	r7, #12
 80099b0:	46bd      	mov	sp, r7
 80099b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099b6:	4770      	bx	lr

080099b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/mainview_screen/MainViewView.hpp>
#include <gui/mainview_screen/MainViewPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80099b8:	b580      	push	{r7, lr}
 80099ba:	b084      	sub	sp, #16
 80099bc:	af00      	add	r7, sp, #0
 80099be:	60f8      	str	r0, [r7, #12]
 80099c0:	60b9      	str	r1, [r7, #8]
 80099c2:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80099c4:	68fb      	ldr	r3, [r7, #12]
 80099c6:	4618      	mov	r0, r3
 80099c8:	f7ff ff26 	bl	8009818 <_ZN8touchgfx14MVPApplicationC1Ev>
 80099cc:	4a13      	ldr	r2, [pc, #76]	; (8009a1c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x64>)
 80099ce:	68fb      	ldr	r3, [r7, #12]
 80099d0:	601a      	str	r2, [r3, #0]
 80099d2:	68fb      	ldr	r3, [r7, #12]
 80099d4:	f503 73a0 	add.w	r3, r3, #320	; 0x140
 80099d8:	4618      	mov	r0, r3
 80099da:	f000 f89f 	bl	8009b1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 80099de:	68fb      	ldr	r3, [r7, #12]
 80099e0:	687a      	ldr	r2, [r7, #4]
 80099e2:	f8c3 2150 	str.w	r2, [r3, #336]	; 0x150
 80099e6:	68fb      	ldr	r3, [r7, #12]
 80099e8:	68ba      	ldr	r2, [r7, #8]
 80099ea:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80099ee:	f7ff fe55 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 80099f2:	4603      	mov	r3, r0
 80099f4:	681a      	ldr	r2, [r3, #0]
 80099f6:	3208      	adds	r2, #8
 80099f8:	6812      	ldr	r2, [r2, #0]
 80099fa:	2100      	movs	r1, #0
 80099fc:	4618      	mov	r0, r3
 80099fe:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8009a00:	2000      	movs	r0, #0
 8009a02:	f004 fddf 	bl	800e5c4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8009a06:	f7ff fe55 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8009a0a:	4603      	mov	r3, r0
 8009a0c:	4618      	mov	r0, r3
 8009a0e:	f019 fb0e 	bl	802302e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8009a12:	68fb      	ldr	r3, [r7, #12]
 8009a14:	4618      	mov	r0, r3
 8009a16:	3710      	adds	r7, #16
 8009a18:	46bd      	mov	sp, r7
 8009a1a:	bd80      	pop	{r7, pc}
 8009a1c:	0802ee10 	.word	0x0802ee10

08009a20 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8009a20:	b480      	push	{r7}
 8009a22:	b083      	sub	sp, #12
 8009a24:	af00      	add	r7, sp, #0
 8009a26:	6078      	str	r0, [r7, #4]
 8009a28:	6039      	str	r1, [r7, #0]
 8009a2a:	687b      	ldr	r3, [r7, #4]
 8009a2c:	4618      	mov	r0, r3
 8009a2e:	370c      	adds	r7, #12
 8009a30:	46bd      	mov	sp, r7
 8009a32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a36:	4770      	bx	lr

08009a38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009a38:	b580      	push	{r7, lr}
 8009a3a:	b082      	sub	sp, #8
 8009a3c:	af00      	add	r7, sp, #0
 8009a3e:	6078      	str	r0, [r7, #4]
 8009a40:	6039      	str	r1, [r7, #0]
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	683a      	ldr	r2, [r7, #0]
 8009a46:	4611      	mov	r1, r2
 8009a48:	4618      	mov	r0, r3
 8009a4a:	f7ff ffe9 	bl	8009a20 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8009a4e:	683b      	ldr	r3, [r7, #0]
 8009a50:	685a      	ldr	r2, [r3, #4]
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	605a      	str	r2, [r3, #4]
 8009a56:	687b      	ldr	r3, [r7, #4]
 8009a58:	683a      	ldr	r2, [r7, #0]
 8009a5a:	3308      	adds	r3, #8
 8009a5c:	3208      	adds	r2, #8
 8009a5e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009a62:	e883 0003 	stmia.w	r3, {r0, r1}
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	4618      	mov	r0, r3
 8009a6a:	3708      	adds	r7, #8
 8009a6c:	46bd      	mov	sp, r7
 8009a6e:	bd80      	pop	{r7, pc}

08009a70 <_ZN23FrontendApplicationBase30gotoMainViewScreenNoTransitionEv>:
 */

// MainView

void FrontendApplicationBase::gotoMainViewScreenNoTransition()
{
 8009a70:	b590      	push	{r4, r7, lr}
 8009a72:	b089      	sub	sp, #36	; 0x24
 8009a74:	af00      	add	r7, sp, #0
 8009a76:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMainViewScreenNoTransitionImpl);
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	f503 74a0 	add.w	r4, r3, #320	; 0x140
 8009a7e:	4b10      	ldr	r3, [pc, #64]	; (8009ac0 <_ZN23FrontendApplicationBase30gotoMainViewScreenNoTransitionEv+0x50>)
 8009a80:	61bb      	str	r3, [r7, #24]
 8009a82:	2300      	movs	r3, #0
 8009a84:	61fb      	str	r3, [r7, #28]
 8009a86:	f107 0008 	add.w	r0, r7, #8
 8009a8a:	f107 0318 	add.w	r3, r7, #24
 8009a8e:	cb0c      	ldmia	r3, {r2, r3}
 8009a90:	6879      	ldr	r1, [r7, #4]
 8009a92:	f000 f85f 	bl	8009b54 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8009a96:	f107 0308 	add.w	r3, r7, #8
 8009a9a:	4619      	mov	r1, r3
 8009a9c:	4620      	mov	r0, r4
 8009a9e:	f7ff ffcb 	bl	8009a38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8009aa2:	f107 0308 	add.w	r3, r7, #8
 8009aa6:	4618      	mov	r0, r3
 8009aa8:	f000 fa0e 	bl	8009ec8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8009aac:	687b      	ldr	r3, [r7, #4]
 8009aae:	f503 72a0 	add.w	r2, r3, #320	; 0x140
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	f8c3 213c 	str.w	r2, [r3, #316]	; 0x13c
}
 8009ab8:	bf00      	nop
 8009aba:	3724      	adds	r7, #36	; 0x24
 8009abc:	46bd      	mov	sp, r7
 8009abe:	bd90      	pop	{r4, r7, pc}
 8009ac0:	08009ac5 	.word	0x08009ac5

08009ac4 <_ZN23FrontendApplicationBase34gotoMainViewScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainViewScreenNoTransitionImpl()
{
 8009ac4:	b580      	push	{r7, lr}
 8009ac6:	b084      	sub	sp, #16
 8009ac8:	af02      	add	r7, sp, #8
 8009aca:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainViewView, MainViewPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	f503 719c 	add.w	r1, r3, #312	; 0x138
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8009ad8:	461a      	mov	r2, r3
 8009ada:	687b      	ldr	r3, [r7, #4]
 8009adc:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 8009ae0:	9300      	str	r3, [sp, #0]
 8009ae2:	4b04      	ldr	r3, [pc, #16]	; (8009af4 <_ZN23FrontendApplicationBase34gotoMainViewScreenNoTransitionImplEv+0x30>)
 8009ae4:	4804      	ldr	r0, [pc, #16]	; (8009af8 <_ZN23FrontendApplicationBase34gotoMainViewScreenNoTransitionImplEv+0x34>)
 8009ae6:	f000 f867 	bl	8009bb8 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8009aea:	bf00      	nop
 8009aec:	3708      	adds	r7, #8
 8009aee:	46bd      	mov	sp, r7
 8009af0:	bd80      	pop	{r7, pc}
 8009af2:	bf00      	nop
 8009af4:	200041c8 	.word	0x200041c8
 8009af8:	200041c4 	.word	0x200041c4

08009afc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8009afc:	b480      	push	{r7}
 8009afe:	b083      	sub	sp, #12
 8009b00:	af00      	add	r7, sp, #0
 8009b02:	6078      	str	r0, [r7, #4]
 8009b04:	4a04      	ldr	r2, [pc, #16]	; (8009b18 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	601a      	str	r2, [r3, #0]
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	4618      	mov	r0, r3
 8009b0e:	370c      	adds	r7, #12
 8009b10:	46bd      	mov	sp, r7
 8009b12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b16:	4770      	bx	lr
 8009b18:	0802eed4 	.word	0x0802eed4

08009b1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8009b1c:	b580      	push	{r7, lr}
 8009b1e:	b082      	sub	sp, #8
 8009b20:	af00      	add	r7, sp, #0
 8009b22:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun_0(0)
 8009b24:	687b      	ldr	r3, [r7, #4]
 8009b26:	4618      	mov	r0, r3
 8009b28:	f7ff ffe8 	bl	8009afc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8009b2c:	4a08      	ldr	r2, [pc, #32]	; (8009b50 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8009b2e:	687b      	ldr	r3, [r7, #4]
 8009b30:	601a      	str	r2, [r3, #0]
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	2200      	movs	r2, #0
 8009b36:	605a      	str	r2, [r3, #4]
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	2200      	movs	r2, #0
 8009b3c:	609a      	str	r2, [r3, #8]
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	2200      	movs	r2, #0
 8009b42:	60da      	str	r2, [r3, #12]
    {
    }
 8009b44:	687b      	ldr	r3, [r7, #4]
 8009b46:	4618      	mov	r0, r3
 8009b48:	3708      	adds	r7, #8
 8009b4a:	46bd      	mov	sp, r7
 8009b4c:	bd80      	pop	{r7, pc}
 8009b4e:	bf00      	nop
 8009b50:	0802ee54 	.word	0x0802ee54

08009b54 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes
     *                       zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8009b54:	b580      	push	{r7, lr}
 8009b56:	b084      	sub	sp, #16
 8009b58:	af00      	add	r7, sp, #0
 8009b5a:	60f8      	str	r0, [r7, #12]
 8009b5c:	60b9      	str	r1, [r7, #8]
 8009b5e:	4639      	mov	r1, r7
 8009b60:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8009b64:	68fb      	ldr	r3, [r7, #12]
 8009b66:	4618      	mov	r0, r3
 8009b68:	f7ff ffc8 	bl	8009afc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8009b6c:	4a08      	ldr	r2, [pc, #32]	; (8009b90 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8009b6e:	68fb      	ldr	r3, [r7, #12]
 8009b70:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8009b72:	68fb      	ldr	r3, [r7, #12]
 8009b74:	68ba      	ldr	r2, [r7, #8]
 8009b76:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8009b78:	68fb      	ldr	r3, [r7, #12]
 8009b7a:	3308      	adds	r3, #8
 8009b7c:	463a      	mov	r2, r7
 8009b7e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009b82:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8009b86:	68fb      	ldr	r3, [r7, #12]
 8009b88:	4618      	mov	r0, r3
 8009b8a:	3710      	adds	r7, #16
 8009b8c:	46bd      	mov	sp, r7
 8009b8e:	bd80      	pop	{r7, pc}
 8009b90:	0802ee54 	.word	0x0802ee54

08009b94 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8009b94:	b580      	push	{r7, lr}
 8009b96:	b082      	sub	sp, #8
 8009b98:	af00      	add	r7, sp, #0
 8009b9a:	6078      	str	r0, [r7, #4]
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	4618      	mov	r0, r3
 8009ba0:	f7ff fda4 	bl	80096ec <_ZN8touchgfx10TransitionC1Ev>
 8009ba4:	4a03      	ldr	r2, [pc, #12]	; (8009bb4 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	601a      	str	r2, [r3, #0]
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	4618      	mov	r0, r3
 8009bae:	3708      	adds	r7, #8
 8009bb0:	46bd      	mov	sp, r7
 8009bb2:	bd80      	pop	{r7, pc}
 8009bb4:	0802edec 	.word	0x0802edec

08009bb8 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009bb8:	b590      	push	{r4, r7, lr}
 8009bba:	b08f      	sub	sp, #60	; 0x3c
 8009bbc:	af00      	add	r7, sp, #0
 8009bbe:	60f8      	str	r0, [r7, #12]
 8009bc0:	60b9      	str	r1, [r7, #8]
 8009bc2:	607a      	str	r2, [r7, #4]
 8009bc4:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	689a      	ldr	r2, [r3, #8]
 8009bca:	687b      	ldr	r3, [r7, #4]
 8009bcc:	689b      	ldr	r3, [r3, #8]
 8009bce:	681b      	ldr	r3, [r3, #0]
 8009bd0:	3320      	adds	r3, #32
 8009bd2:	681b      	ldr	r3, [r3, #0]
 8009bd4:	4610      	mov	r0, r2
 8009bd6:	4798      	blx	r3
 8009bd8:	4603      	mov	r3, r0
 8009bda:	f642 120f 	movw	r2, #10511	; 0x290f
 8009bde:	4293      	cmp	r3, r2
 8009be0:	d805      	bhi.n	8009bee <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 8009be2:	4b7f      	ldr	r3, [pc, #508]	; (8009de0 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009be4:	4a7f      	ldr	r2, [pc, #508]	; (8009de4 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009be6:	21a7      	movs	r1, #167	; 0xa7
 8009be8:	487f      	ldr	r0, [pc, #508]	; (8009de8 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009bea:	f022 f97d 	bl	802bee8 <__assert_func>
 8009bee:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009bf0:	687b      	ldr	r3, [r7, #4]
 8009bf2:	685a      	ldr	r2, [r3, #4]
 8009bf4:	687b      	ldr	r3, [r7, #4]
 8009bf6:	685b      	ldr	r3, [r3, #4]
 8009bf8:	681b      	ldr	r3, [r3, #0]
 8009bfa:	3320      	adds	r3, #32
 8009bfc:	681b      	ldr	r3, [r3, #0]
 8009bfe:	4610      	mov	r0, r2
 8009c00:	4798      	blx	r3
 8009c02:	4603      	mov	r3, r0
 8009c04:	2b0f      	cmp	r3, #15
 8009c06:	d805      	bhi.n	8009c14 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5c>
 8009c08:	4b78      	ldr	r3, [pc, #480]	; (8009dec <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x234>)
 8009c0a:	4a76      	ldr	r2, [pc, #472]	; (8009de4 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009c0c:	21a8      	movs	r1, #168	; 0xa8
 8009c0e:	4876      	ldr	r0, [pc, #472]	; (8009de8 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009c10:	f022 f96a 	bl	802bee8 <__assert_func>
 8009c14:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	68da      	ldr	r2, [r3, #12]
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	68db      	ldr	r3, [r3, #12]
 8009c1e:	681b      	ldr	r3, [r3, #0]
 8009c20:	3320      	adds	r3, #32
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	4610      	mov	r0, r2
 8009c26:	4798      	blx	r3
 8009c28:	4603      	mov	r3, r0
 8009c2a:	2b0b      	cmp	r3, #11
 8009c2c:	d805      	bhi.n	8009c3a <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x82>
 8009c2e:	4b70      	ldr	r3, [pc, #448]	; (8009df0 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x238>)
 8009c30:	4a6c      	ldr	r2, [pc, #432]	; (8009de4 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009c32:	21a9      	movs	r1, #169	; 0xa9
 8009c34:	486c      	ldr	r0, [pc, #432]	; (8009de8 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009c36:	f022 f957 	bl	802bee8 <__assert_func>
 8009c3a:	bf00      	nop
 8009c3c:	68fb      	ldr	r3, [r7, #12]
 8009c3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8009c40:	68bb      	ldr	r3, [r7, #8]
 8009c42:	627b      	str	r3, [r7, #36]	; 0x24
 8009c44:	683b      	ldr	r3, [r7, #0]
 8009c46:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009c48:	f011 fc2c 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 8009c4c:	4603      	mov	r3, r0
 8009c4e:	4618      	mov	r0, r3
 8009c50:	f011 fc2e 	bl	801b4b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009c54:	6a3b      	ldr	r3, [r7, #32]
 8009c56:	681b      	ldr	r3, [r3, #0]
 8009c58:	2b00      	cmp	r3, #0
 8009c5a:	d008      	beq.n	8009c6e <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb6>
        (*currentTrans)->tearDown();
 8009c5c:	6a3b      	ldr	r3, [r7, #32]
 8009c5e:	681a      	ldr	r2, [r3, #0]
 8009c60:	6a3b      	ldr	r3, [r7, #32]
 8009c62:	681b      	ldr	r3, [r3, #0]
 8009c64:	681b      	ldr	r3, [r3, #0]
 8009c66:	330c      	adds	r3, #12
 8009c68:	681b      	ldr	r3, [r3, #0]
 8009c6a:	4610      	mov	r0, r2
 8009c6c:	4798      	blx	r3
    if (*currentTrans)
 8009c6e:	6a3b      	ldr	r3, [r7, #32]
 8009c70:	681b      	ldr	r3, [r3, #0]
 8009c72:	2b00      	cmp	r3, #0
 8009c74:	d007      	beq.n	8009c86 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xce>
        (*currentTrans)->~Transition();
 8009c76:	6a3b      	ldr	r3, [r7, #32]
 8009c78:	681a      	ldr	r2, [r3, #0]
 8009c7a:	6a3b      	ldr	r3, [r7, #32]
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	681b      	ldr	r3, [r3, #0]
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	4610      	mov	r0, r2
 8009c84:	4798      	blx	r3
    if (*currentScreen)
 8009c86:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c88:	681b      	ldr	r3, [r3, #0]
 8009c8a:	2b00      	cmp	r3, #0
 8009c8c:	d008      	beq.n	8009ca0 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
        (*currentScreen)->tearDownScreen();
 8009c8e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c90:	681a      	ldr	r2, [r3, #0]
 8009c92:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009c94:	681b      	ldr	r3, [r3, #0]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	3314      	adds	r3, #20
 8009c9a:	681b      	ldr	r3, [r3, #0]
 8009c9c:	4610      	mov	r0, r2
 8009c9e:	4798      	blx	r3
    if (*currentPresenter)
 8009ca0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ca2:	681b      	ldr	r3, [r3, #0]
 8009ca4:	2b00      	cmp	r3, #0
 8009ca6:	d008      	beq.n	8009cba <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x102>
        (*currentPresenter)->deactivate();
 8009ca8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009caa:	681a      	ldr	r2, [r3, #0]
 8009cac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009cae:	681b      	ldr	r3, [r3, #0]
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	3304      	adds	r3, #4
 8009cb4:	681b      	ldr	r3, [r3, #0]
 8009cb6:	4610      	mov	r0, r2
 8009cb8:	4798      	blx	r3
    if (*currentScreen)
 8009cba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009cbc:	681b      	ldr	r3, [r3, #0]
 8009cbe:	2b00      	cmp	r3, #0
 8009cc0:	d007      	beq.n	8009cd2 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x11a>
        (*currentScreen)->~Screen();
 8009cc2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009cc4:	681a      	ldr	r2, [r3, #0]
 8009cc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009cc8:	681b      	ldr	r3, [r3, #0]
 8009cca:	681b      	ldr	r3, [r3, #0]
 8009ccc:	681b      	ldr	r3, [r3, #0]
 8009cce:	4610      	mov	r0, r2
 8009cd0:	4798      	blx	r3
    if (*currentPresenter)
 8009cd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009cd4:	681b      	ldr	r3, [r3, #0]
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d008      	beq.n	8009cec <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>
        (*currentPresenter)->~Presenter();
 8009cda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009cdc:	681a      	ldr	r2, [r3, #0]
 8009cde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	681b      	ldr	r3, [r3, #0]
 8009ce4:	3308      	adds	r3, #8
 8009ce6:	681b      	ldr	r3, [r3, #0]
 8009ce8:	4610      	mov	r0, r2
 8009cea:	4798      	blx	r3
}
 8009cec:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	68db      	ldr	r3, [r3, #12]
 8009cf2:	2100      	movs	r1, #0
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	f000 f87d 	bl	8009df4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8009cfa:	4603      	mov	r3, r0
 8009cfc:	4619      	mov	r1, r3
 8009cfe:	200c      	movs	r0, #12
 8009d00:	f7ff fc20 	bl	8009544 <_ZnwjPv>
 8009d04:	4604      	mov	r4, r0
 8009d06:	4620      	mov	r0, r4
 8009d08:	f7ff ff44 	bl	8009b94 <_ZN8touchgfx12NoTransitionC1Ev>
 8009d0c:	637c      	str	r4, [r7, #52]	; 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	689b      	ldr	r3, [r3, #8]
 8009d12:	2100      	movs	r1, #0
 8009d14:	4618      	mov	r0, r3
 8009d16:	f000 f880 	bl	8009e1a <_ZN8touchgfx17AbstractPartition2atI12MainViewViewEERT_t>
 8009d1a:	4603      	mov	r3, r0
 8009d1c:	4619      	mov	r1, r3
 8009d1e:	f642 1010 	movw	r0, #10512	; 0x2910
 8009d22:	f7ff fc0f 	bl	8009544 <_ZnwjPv>
 8009d26:	4604      	mov	r4, r0
 8009d28:	4620      	mov	r0, r4
 8009d2a:	f004 fef1 	bl	800eb10 <_ZN12MainViewViewC1Ev>
 8009d2e:	633c      	str	r4, [r7, #48]	; 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009d30:	687b      	ldr	r3, [r7, #4]
 8009d32:	685b      	ldr	r3, [r3, #4]
 8009d34:	2100      	movs	r1, #0
 8009d36:	4618      	mov	r0, r3
 8009d38:	f000 f882 	bl	8009e40 <_ZN8touchgfx17AbstractPartition2atI17MainViewPresenterEERT_t>
 8009d3c:	4603      	mov	r3, r0
 8009d3e:	4619      	mov	r1, r3
 8009d40:	2010      	movs	r0, #16
 8009d42:	f7ff fbff 	bl	8009544 <_ZnwjPv>
 8009d46:	4604      	mov	r4, r0
 8009d48:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	f004 fe0e 	bl	800e96c <_ZN17MainViewPresenterC1ER12MainViewView>
 8009d50:	62fc      	str	r4, [r7, #44]	; 0x2c
    *currentTrans = newTransition;
 8009d52:	683b      	ldr	r3, [r7, #0]
 8009d54:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8009d56:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009d58:	68bb      	ldr	r3, [r7, #8]
 8009d5a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009d5c:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009d5e:	68fb      	ldr	r3, [r7, #12]
 8009d60:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009d62:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009d64:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d66:	2b00      	cmp	r3, #0
 8009d68:	d002      	beq.n	8009d70 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b8>
 8009d6a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d6c:	3304      	adds	r3, #4
 8009d6e:	e000      	b.n	8009d72 <_ZN8touchgfx14makeTransitionI12MainViewView17MainViewPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ba>
 8009d70:	2300      	movs	r3, #0
 8009d72:	4619      	mov	r1, r3
 8009d74:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8009d76:	f7ff fda9 	bl	80098cc <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009d7a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d7c:	3304      	adds	r3, #4
 8009d7e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8009d80:	4618      	mov	r0, r3
 8009d82:	f7ff fe0b 	bl	800999c <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009d86:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d88:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009d8a:	4618      	mov	r0, r3
 8009d8c:	f000 f86b 	bl	8009e66 <_ZN8touchgfx4ViewI17MainViewPresenterE4bindERS1_>
 8009d90:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009d92:	61fb      	str	r3, [r7, #28]
 8009d94:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d96:	61bb      	str	r3, [r7, #24]
 8009d98:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009d9a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009d9c:	69fb      	ldr	r3, [r7, #28]
 8009d9e:	681b      	ldr	r3, [r3, #0]
 8009da0:	330c      	adds	r3, #12
 8009da2:	681b      	ldr	r3, [r3, #0]
 8009da4:	69f8      	ldr	r0, [r7, #28]
 8009da6:	4798      	blx	r3
    newPresenter->activate();
 8009da8:	69bb      	ldr	r3, [r7, #24]
 8009daa:	681b      	ldr	r3, [r3, #0]
 8009dac:	681b      	ldr	r3, [r3, #0]
 8009dae:	69b8      	ldr	r0, [r7, #24]
 8009db0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009db2:	6979      	ldr	r1, [r7, #20]
 8009db4:	69f8      	ldr	r0, [r7, #28]
 8009db6:	f013 f838 	bl	801ce2a <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009dba:	697b      	ldr	r3, [r7, #20]
 8009dbc:	681b      	ldr	r3, [r3, #0]
 8009dbe:	3310      	adds	r3, #16
 8009dc0:	681b      	ldr	r3, [r3, #0]
 8009dc2:	6978      	ldr	r0, [r7, #20]
 8009dc4:	4798      	blx	r3
    newTransition->invalidate();
 8009dc6:	697b      	ldr	r3, [r7, #20]
 8009dc8:	681b      	ldr	r3, [r3, #0]
 8009dca:	3314      	adds	r3, #20
 8009dcc:	681b      	ldr	r3, [r3, #0]
 8009dce:	6978      	ldr	r0, [r7, #20]
 8009dd0:	4798      	blx	r3
}
 8009dd2:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8009dd4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
}
 8009dd6:	4618      	mov	r0, r3
 8009dd8:	373c      	adds	r7, #60	; 0x3c
 8009dda:	46bd      	mov	sp, r7
 8009ddc:	bd90      	pop	{r4, r7, pc}
 8009dde:	bf00      	nop
 8009de0:	0802d4b8 	.word	0x0802d4b8
 8009de4:	0802d548 	.word	0x0802d548
 8009de8:	0802d650 	.word	0x0802d650
 8009dec:	0802d6e8 	.word	0x0802d6e8
 8009df0:	0802d78c 	.word	0x0802d78c

08009df4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8009df4:	b580      	push	{r7, lr}
 8009df6:	b082      	sub	sp, #8
 8009df8:	af00      	add	r7, sp, #0
 8009dfa:	6078      	str	r0, [r7, #4]
 8009dfc:	460b      	mov	r3, r1
 8009dfe:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009e00:	687b      	ldr	r3, [r7, #4]
 8009e02:	681b      	ldr	r3, [r3, #0]
 8009e04:	3324      	adds	r3, #36	; 0x24
 8009e06:	681b      	ldr	r3, [r3, #0]
 8009e08:	887a      	ldrh	r2, [r7, #2]
 8009e0a:	4611      	mov	r1, r2
 8009e0c:	6878      	ldr	r0, [r7, #4]
 8009e0e:	4798      	blx	r3
 8009e10:	4603      	mov	r3, r0
    }
 8009e12:	4618      	mov	r0, r3
 8009e14:	3708      	adds	r7, #8
 8009e16:	46bd      	mov	sp, r7
 8009e18:	bd80      	pop	{r7, pc}

08009e1a <_ZN8touchgfx17AbstractPartition2atI12MainViewViewEERT_t>:
    T& at(const uint16_t index)
 8009e1a:	b580      	push	{r7, lr}
 8009e1c:	b082      	sub	sp, #8
 8009e1e:	af00      	add	r7, sp, #0
 8009e20:	6078      	str	r0, [r7, #4]
 8009e22:	460b      	mov	r3, r1
 8009e24:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	3324      	adds	r3, #36	; 0x24
 8009e2c:	681b      	ldr	r3, [r3, #0]
 8009e2e:	887a      	ldrh	r2, [r7, #2]
 8009e30:	4611      	mov	r1, r2
 8009e32:	6878      	ldr	r0, [r7, #4]
 8009e34:	4798      	blx	r3
 8009e36:	4603      	mov	r3, r0
    }
 8009e38:	4618      	mov	r0, r3
 8009e3a:	3708      	adds	r7, #8
 8009e3c:	46bd      	mov	sp, r7
 8009e3e:	bd80      	pop	{r7, pc}

08009e40 <_ZN8touchgfx17AbstractPartition2atI17MainViewPresenterEERT_t>:
    T& at(const uint16_t index)
 8009e40:	b580      	push	{r7, lr}
 8009e42:	b082      	sub	sp, #8
 8009e44:	af00      	add	r7, sp, #0
 8009e46:	6078      	str	r0, [r7, #4]
 8009e48:	460b      	mov	r3, r1
 8009e4a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	681b      	ldr	r3, [r3, #0]
 8009e50:	3324      	adds	r3, #36	; 0x24
 8009e52:	681b      	ldr	r3, [r3, #0]
 8009e54:	887a      	ldrh	r2, [r7, #2]
 8009e56:	4611      	mov	r1, r2
 8009e58:	6878      	ldr	r0, [r7, #4]
 8009e5a:	4798      	blx	r3
 8009e5c:	4603      	mov	r3, r0
    }
 8009e5e:	4618      	mov	r0, r3
 8009e60:	3708      	adds	r7, #8
 8009e62:	46bd      	mov	sp, r7
 8009e64:	bd80      	pop	{r7, pc}

08009e66 <_ZN8touchgfx4ViewI17MainViewPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This
     * function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8009e66:	b480      	push	{r7}
 8009e68:	b083      	sub	sp, #12
 8009e6a:	af00      	add	r7, sp, #0
 8009e6c:	6078      	str	r0, [r7, #4]
 8009e6e:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 8009e70:	687b      	ldr	r3, [r7, #4]
 8009e72:	683a      	ldr	r2, [r7, #0]
 8009e74:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8009e76:	bf00      	nop
 8009e78:	370c      	adds	r7, #12
 8009e7a:	46bd      	mov	sp, r7
 8009e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e80:	4770      	bx	lr
	...

08009e84 <_ZN8touchgfx12NoTransitionD1Ev>:
 8009e84:	b580      	push	{r7, lr}
 8009e86:	b082      	sub	sp, #8
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
 8009e8c:	4a05      	ldr	r2, [pc, #20]	; (8009ea4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	601a      	str	r2, [r3, #0]
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	4618      	mov	r0, r3
 8009e96:	f7ff fc3f 	bl	8009718 <_ZN8touchgfx10TransitionD1Ev>
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	3708      	adds	r7, #8
 8009ea0:	46bd      	mov	sp, r7
 8009ea2:	bd80      	pop	{r7, pc}
 8009ea4:	0802edec 	.word	0x0802edec

08009ea8 <_ZN8touchgfx12NoTransitionD0Ev>:
 8009ea8:	b580      	push	{r7, lr}
 8009eaa:	b082      	sub	sp, #8
 8009eac:	af00      	add	r7, sp, #0
 8009eae:	6078      	str	r0, [r7, #4]
 8009eb0:	6878      	ldr	r0, [r7, #4]
 8009eb2:	f7ff ffe7 	bl	8009e84 <_ZN8touchgfx12NoTransitionD1Ev>
 8009eb6:	210c      	movs	r1, #12
 8009eb8:	6878      	ldr	r0, [r7, #4]
 8009eba:	f021 fdd4 	bl	802ba66 <_ZdlPvj>
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	4618      	mov	r0, r3
 8009ec2:	3708      	adds	r7, #8
 8009ec4:	46bd      	mov	sp, r7
 8009ec6:	bd80      	pop	{r7, pc}

08009ec8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009ec8:	b580      	push	{r7, lr}
 8009eca:	b082      	sub	sp, #8
 8009ecc:	af00      	add	r7, sp, #0
 8009ece:	6078      	str	r0, [r7, #4]
 8009ed0:	4a05      	ldr	r2, [pc, #20]	; (8009ee8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	601a      	str	r2, [r3, #0]
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	4618      	mov	r0, r3
 8009eda:	f7ff fbbf 	bl	800965c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009ede:	687b      	ldr	r3, [r7, #4]
 8009ee0:	4618      	mov	r0, r3
 8009ee2:	3708      	adds	r7, #8
 8009ee4:	46bd      	mov	sp, r7
 8009ee6:	bd80      	pop	{r7, pc}
 8009ee8:	0802ee54 	.word	0x0802ee54

08009eec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009eec:	b580      	push	{r7, lr}
 8009eee:	b082      	sub	sp, #8
 8009ef0:	af00      	add	r7, sp, #0
 8009ef2:	6078      	str	r0, [r7, #4]
 8009ef4:	6878      	ldr	r0, [r7, #4]
 8009ef6:	f7ff ffe7 	bl	8009ec8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009efa:	2110      	movs	r1, #16
 8009efc:	6878      	ldr	r0, [r7, #4]
 8009efe:	f021 fdb2 	bl	802ba66 <_ZdlPvj>
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	4618      	mov	r0, r3
 8009f06:	3708      	adds	r7, #8
 8009f08:	46bd      	mov	sp, r7
 8009f0a:	bd80      	pop	{r7, pc}

08009f0c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009f0c:	b580      	push	{r7, lr}
 8009f0e:	b082      	sub	sp, #8
 8009f10:	af00      	add	r7, sp, #0
 8009f12:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	685b      	ldr	r3, [r3, #4]
 8009f18:	687a      	ldr	r2, [r7, #4]
 8009f1a:	68d2      	ldr	r2, [r2, #12]
 8009f1c:	1052      	asrs	r2, r2, #1
 8009f1e:	1899      	adds	r1, r3, r2
 8009f20:	687b      	ldr	r3, [r7, #4]
 8009f22:	68db      	ldr	r3, [r3, #12]
 8009f24:	f003 0301 	and.w	r3, r3, #1
 8009f28:	2b00      	cmp	r3, #0
 8009f2a:	d102      	bne.n	8009f32 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009f2c:	687b      	ldr	r3, [r7, #4]
 8009f2e:	689b      	ldr	r3, [r3, #8]
 8009f30:	e00a      	b.n	8009f48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	685b      	ldr	r3, [r3, #4]
 8009f36:	687a      	ldr	r2, [r7, #4]
 8009f38:	68d2      	ldr	r2, [r2, #12]
 8009f3a:	1052      	asrs	r2, r2, #1
 8009f3c:	4413      	add	r3, r2
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	687a      	ldr	r2, [r7, #4]
 8009f42:	6892      	ldr	r2, [r2, #8]
 8009f44:	4413      	add	r3, r2
 8009f46:	681b      	ldr	r3, [r3, #0]
 8009f48:	4608      	mov	r0, r1
 8009f4a:	4798      	blx	r3
    }
 8009f4c:	bf00      	nop
 8009f4e:	3708      	adds	r7, #8
 8009f50:	46bd      	mov	sp, r7
 8009f52:	bd80      	pop	{r7, pc}

08009f54 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009f54:	b480      	push	{r7}
 8009f56:	b083      	sub	sp, #12
 8009f58:	af00      	add	r7, sp, #0
 8009f5a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	685b      	ldr	r3, [r3, #4]
 8009f60:	2b00      	cmp	r3, #0
 8009f62:	d010      	beq.n	8009f86 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	689b      	ldr	r3, [r3, #8]
 8009f68:	2b00      	cmp	r3, #0
 8009f6a:	d107      	bne.n	8009f7c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009f6c:	687b      	ldr	r3, [r7, #4]
 8009f6e:	68db      	ldr	r3, [r3, #12]
 8009f70:	f003 0301 	and.w	r3, r3, #1
 8009f74:	2b00      	cmp	r3, #0
 8009f76:	d101      	bne.n	8009f7c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009f78:	2301      	movs	r3, #1
 8009f7a:	e000      	b.n	8009f7e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009f7c:	2300      	movs	r3, #0
 8009f7e:	2b01      	cmp	r3, #1
 8009f80:	d001      	beq.n	8009f86 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009f82:	2301      	movs	r3, #1
 8009f84:	e000      	b.n	8009f88 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009f86:	2300      	movs	r3, #0
    }
 8009f88:	4618      	mov	r0, r3
 8009f8a:	370c      	adds	r7, #12
 8009f8c:	46bd      	mov	sp, r7
 8009f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f92:	4770      	bx	lr

08009f94 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFrom24BitRGB
     */
    colortype(uint32_t col)
 8009f94:	b480      	push	{r7}
 8009f96:	b083      	sub	sp, #12
 8009f98:	af00      	add	r7, sp, #0
 8009f9a:	6078      	str	r0, [r7, #4]
 8009f9c:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8009f9e:	687b      	ldr	r3, [r7, #4]
 8009fa0:	683a      	ldr	r2, [r7, #0]
 8009fa2:	601a      	str	r2, [r3, #0]
    }
 8009fa4:	687b      	ldr	r3, [r7, #4]
 8009fa6:	4618      	mov	r0, r3
 8009fa8:	370c      	adds	r7, #12
 8009faa:	46bd      	mov	sp, r7
 8009fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fb0:	4770      	bx	lr

08009fb2 <_ZNK8touchgfx9colortypecvmEv>:
    /**
     * Cast that converts the given colortype to an uint32_t.
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
 8009fb2:	b480      	push	{r7}
 8009fb4:	b083      	sub	sp, #12
 8009fb6:	af00      	add	r7, sp, #0
 8009fb8:	6078      	str	r0, [r7, #4]
    {
        return color;
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	681b      	ldr	r3, [r3, #0]
    }
 8009fbe:	4618      	mov	r0, r3
 8009fc0:	370c      	adds	r7, #12
 8009fc2:	46bd      	mov	sp, r7
 8009fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fc8:	4770      	bx	lr

08009fca <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009fca:	b480      	push	{r7}
 8009fcc:	b083      	sub	sp, #12
 8009fce:	af00      	add	r7, sp, #0
 8009fd0:	6078      	str	r0, [r7, #4]
    {
        x = 0;
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	2200      	movs	r2, #0
 8009fd6:	801a      	strh	r2, [r3, #0]
        y = 0;
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	2200      	movs	r2, #0
 8009fdc:	805a      	strh	r2, [r3, #2]
        width = 0;
 8009fde:	687b      	ldr	r3, [r7, #4]
 8009fe0:	2200      	movs	r2, #0
 8009fe2:	809a      	strh	r2, [r3, #4]
        height = 0;
 8009fe4:	687b      	ldr	r3, [r7, #4]
 8009fe6:	2200      	movs	r2, #0
 8009fe8:	80da      	strh	r2, [r3, #6]
    }
 8009fea:	687b      	ldr	r3, [r7, #4]
 8009fec:	4618      	mov	r0, r3
 8009fee:	370c      	adds	r7, #12
 8009ff0:	46bd      	mov	sp, r7
 8009ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ff6:	4770      	bx	lr

08009ff8 <_ZN8touchgfx4RectC1Essss>:
     * @param  x      The x coordinate.
     * @param  y      The y coordinate.
     * @param  width  The width.
     * @param  height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8009ff8:	b480      	push	{r7}
 8009ffa:	b085      	sub	sp, #20
 8009ffc:	af00      	add	r7, sp, #0
 8009ffe:	60f8      	str	r0, [r7, #12]
 800a000:	4608      	mov	r0, r1
 800a002:	4611      	mov	r1, r2
 800a004:	461a      	mov	r2, r3
 800a006:	4603      	mov	r3, r0
 800a008:	817b      	strh	r3, [r7, #10]
 800a00a:	460b      	mov	r3, r1
 800a00c:	813b      	strh	r3, [r7, #8]
 800a00e:	4613      	mov	r3, r2
 800a010:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 800a012:	68fb      	ldr	r3, [r7, #12]
 800a014:	897a      	ldrh	r2, [r7, #10]
 800a016:	801a      	strh	r2, [r3, #0]
        this->y = y;
 800a018:	68fb      	ldr	r3, [r7, #12]
 800a01a:	893a      	ldrh	r2, [r7, #8]
 800a01c:	805a      	strh	r2, [r3, #2]
        this->width = width;
 800a01e:	68fb      	ldr	r3, [r7, #12]
 800a020:	88fa      	ldrh	r2, [r7, #6]
 800a022:	809a      	strh	r2, [r3, #4]
        this->height = height;
 800a024:	68fb      	ldr	r3, [r7, #12]
 800a026:	8b3a      	ldrh	r2, [r7, #24]
 800a028:	80da      	strh	r2, [r3, #6]
    }
 800a02a:	68fb      	ldr	r3, [r7, #12]
 800a02c:	4618      	mov	r0, r3
 800a02e:	3714      	adds	r7, #20
 800a030:	46bd      	mov	sp, r7
 800a032:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a036:	4770      	bx	lr

0800a038 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800a038:	b480      	push	{r7}
 800a03a:	b083      	sub	sp, #12
 800a03c:	af00      	add	r7, sp, #0
 800a03e:	6078      	str	r0, [r7, #4]
 800a040:	460b      	mov	r3, r1
 800a042:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	887a      	ldrh	r2, [r7, #2]
 800a048:	801a      	strh	r2, [r3, #0]
    {
    }
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	4618      	mov	r0, r3
 800a04e:	370c      	adds	r7, #12
 800a050:	46bd      	mov	sp, r7
 800a052:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a056:	4770      	bx	lr

0800a058 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800a058:	b580      	push	{r7, lr}
 800a05a:	b084      	sub	sp, #16
 800a05c:	af02      	add	r7, sp, #8
 800a05e:	6078      	str	r0, [r7, #4]
        : rect(0, 0, 0, 0),
          parent(0),
          nextSibling(0),
          nextDrawChainElement(0),
          touchable(false),
          visible(true)
 800a060:	4a13      	ldr	r2, [pc, #76]	; (800a0b0 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	601a      	str	r2, [r3, #0]
 800a066:	687b      	ldr	r3, [r7, #4]
 800a068:	1d18      	adds	r0, r3, #4
 800a06a:	2300      	movs	r3, #0
 800a06c:	9300      	str	r3, [sp, #0]
 800a06e:	2300      	movs	r3, #0
 800a070:	2200      	movs	r2, #0
 800a072:	2100      	movs	r1, #0
 800a074:	f7ff ffc0 	bl	8009ff8 <_ZN8touchgfx4RectC1Essss>
 800a078:	687b      	ldr	r3, [r7, #4]
 800a07a:	330c      	adds	r3, #12
 800a07c:	4618      	mov	r0, r3
 800a07e:	f7ff ffa4 	bl	8009fca <_ZN8touchgfx4RectC1Ev>
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	2200      	movs	r2, #0
 800a086:	615a      	str	r2, [r3, #20]
 800a088:	687b      	ldr	r3, [r7, #4]
 800a08a:	2200      	movs	r2, #0
 800a08c:	619a      	str	r2, [r3, #24]
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	2200      	movs	r2, #0
 800a092:	61da      	str	r2, [r3, #28]
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	2200      	movs	r2, #0
 800a098:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800a09c:	687b      	ldr	r3, [r7, #4]
 800a09e:	2201      	movs	r2, #1
 800a0a0:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	4618      	mov	r0, r3
 800a0a8:	3708      	adds	r7, #8
 800a0aa:	46bd      	mov	sp, r7
 800a0ac:	bd80      	pop	{r7, pc}
 800a0ae:	bf00      	nop
 800a0b0:	0803152c 	.word	0x0803152c

0800a0b4 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800a0b4:	b480      	push	{r7}
 800a0b6:	b083      	sub	sp, #12
 800a0b8:	af00      	add	r7, sp, #0
 800a0ba:	6078      	str	r0, [r7, #4]
    {
 800a0bc:	4a04      	ldr	r2, [pc, #16]	; (800a0d0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800a0be:	687b      	ldr	r3, [r7, #4]
 800a0c0:	601a      	str	r2, [r3, #0]
    }
 800a0c2:	687b      	ldr	r3, [r7, #4]
 800a0c4:	4618      	mov	r0, r3
 800a0c6:	370c      	adds	r7, #12
 800a0c8:	46bd      	mov	sp, r7
 800a0ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ce:	4770      	bx	lr
 800a0d0:	0803152c 	.word	0x0803152c

0800a0d4 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800a0d4:	b580      	push	{r7, lr}
 800a0d6:	b082      	sub	sp, #8
 800a0d8:	af00      	add	r7, sp, #0
 800a0da:	6078      	str	r0, [r7, #4]
    }
 800a0dc:	6878      	ldr	r0, [r7, #4]
 800a0de:	f7ff ffe9 	bl	800a0b4 <_ZN8touchgfx8DrawableD1Ev>
 800a0e2:	2128      	movs	r1, #40	; 0x28
 800a0e4:	6878      	ldr	r0, [r7, #4]
 800a0e6:	f021 fcbe 	bl	802ba66 <_ZdlPvj>
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	4618      	mov	r0, r3
 800a0ee:	3708      	adds	r7, #8
 800a0f0:	46bd      	mov	sp, r7
 800a0f2:	bd80      	pop	{r7, pc}

0800a0f4 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800a0f4:	b480      	push	{r7}
 800a0f6:	b083      	sub	sp, #12
 800a0f8:	af00      	add	r7, sp, #0
 800a0fa:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a0fc:	2300      	movs	r3, #0
    }
 800a0fe:	4618      	mov	r0, r3
 800a100:	370c      	adds	r7, #12
 800a102:	46bd      	mov	sp, r7
 800a104:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a108:	4770      	bx	lr

0800a10a <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param  width  The width of this Drawable.
     * @param  height The height of this Drawable.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800a10a:	b580      	push	{r7, lr}
 800a10c:	b084      	sub	sp, #16
 800a10e:	af00      	add	r7, sp, #0
 800a110:	60f8      	str	r0, [r7, #12]
 800a112:	4608      	mov	r0, r1
 800a114:	4611      	mov	r1, r2
 800a116:	461a      	mov	r2, r3
 800a118:	4603      	mov	r3, r0
 800a11a:	817b      	strh	r3, [r7, #10]
 800a11c:	460b      	mov	r3, r1
 800a11e:	813b      	strh	r3, [r7, #8]
 800a120:	4613      	mov	r3, r2
 800a122:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800a124:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800a128:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800a12c:	4619      	mov	r1, r3
 800a12e:	68f8      	ldr	r0, [r7, #12]
 800a130:	f000 f82a 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800a134:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800a138:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800a13c:	4619      	mov	r1, r3
 800a13e:	68f8      	ldr	r0, [r7, #12]
 800a140:	f000 f87e 	bl	800a240 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800a144:	bf00      	nop
 800a146:	3710      	adds	r7, #16
 800a148:	46bd      	mov	sp, r7
 800a14a:	bd80      	pop	{r7, pc}

0800a14c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800a14c:	b480      	push	{r7}
 800a14e:	b083      	sub	sp, #12
 800a150:	af00      	add	r7, sp, #0
 800a152:	6078      	str	r0, [r7, #4]
 800a154:	460b      	mov	r3, r1
 800a156:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800a158:	687b      	ldr	r3, [r7, #4]
 800a15a:	887a      	ldrh	r2, [r7, #2]
 800a15c:	809a      	strh	r2, [r3, #4]
    }
 800a15e:	bf00      	nop
 800a160:	370c      	adds	r7, #12
 800a162:	46bd      	mov	sp, r7
 800a164:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a168:	4770      	bx	lr

0800a16a <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800a16a:	b480      	push	{r7}
 800a16c:	b083      	sub	sp, #12
 800a16e:	af00      	add	r7, sp, #0
 800a170:	6078      	str	r0, [r7, #4]
 800a172:	460b      	mov	r3, r1
 800a174:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	887a      	ldrh	r2, [r7, #2]
 800a17a:	80da      	strh	r2, [r3, #6]
    }
 800a17c:	bf00      	nop
 800a17e:	370c      	adds	r7, #12
 800a180:	46bd      	mov	sp, r7
 800a182:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a186:	4770      	bx	lr

0800a188 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800a188:	b580      	push	{r7, lr}
 800a18a:	b082      	sub	sp, #8
 800a18c:	af00      	add	r7, sp, #0
 800a18e:	6078      	str	r0, [r7, #4]
 800a190:	460b      	mov	r3, r1
 800a192:	807b      	strh	r3, [r7, #2]
 800a194:	4613      	mov	r3, r2
 800a196:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	681b      	ldr	r3, [r3, #0]
 800a19c:	332c      	adds	r3, #44	; 0x2c
 800a19e:	681b      	ldr	r3, [r3, #0]
 800a1a0:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800a1a4:	4611      	mov	r1, r2
 800a1a6:	6878      	ldr	r0, [r7, #4]
 800a1a8:	4798      	blx	r3
        setY(y);
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	681b      	ldr	r3, [r3, #0]
 800a1ae:	3330      	adds	r3, #48	; 0x30
 800a1b0:	681b      	ldr	r3, [r3, #0]
 800a1b2:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a1b6:	4611      	mov	r1, r2
 800a1b8:	6878      	ldr	r0, [r7, #4]
 800a1ba:	4798      	blx	r3
    }
 800a1bc:	bf00      	nop
 800a1be:	3708      	adds	r7, #8
 800a1c0:	46bd      	mov	sp, r7
 800a1c2:	bd80      	pop	{r7, pc}

0800a1c4 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800a1c4:	b480      	push	{r7}
 800a1c6:	b083      	sub	sp, #12
 800a1c8:	af00      	add	r7, sp, #0
 800a1ca:	6078      	str	r0, [r7, #4]
 800a1cc:	460b      	mov	r3, r1
 800a1ce:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	887a      	ldrh	r2, [r7, #2]
 800a1d4:	811a      	strh	r2, [r3, #8]
    }
 800a1d6:	bf00      	nop
 800a1d8:	370c      	adds	r7, #12
 800a1da:	46bd      	mov	sp, r7
 800a1dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1e0:	4770      	bx	lr

0800a1e2 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800a1e2:	b480      	push	{r7}
 800a1e4:	b083      	sub	sp, #12
 800a1e6:	af00      	add	r7, sp, #0
 800a1e8:	6078      	str	r0, [r7, #4]
 800a1ea:	460b      	mov	r3, r1
 800a1ec:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800a1ee:	687b      	ldr	r3, [r7, #4]
 800a1f0:	887a      	ldrh	r2, [r7, #2]
 800a1f2:	815a      	strh	r2, [r3, #10]
    }
 800a1f4:	bf00      	nop
 800a1f6:	370c      	adds	r7, #12
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1fe:	4770      	bx	lr

0800a200 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800a200:	b480      	push	{r7}
 800a202:	b083      	sub	sp, #12
 800a204:	af00      	add	r7, sp, #0
 800a206:	6078      	str	r0, [r7, #4]
    {
    }
 800a208:	bf00      	nop
 800a20a:	370c      	adds	r7, #12
 800a20c:	46bd      	mov	sp, r7
 800a20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a212:	4770      	bx	lr

0800a214 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt)
 800a214:	b480      	push	{r7}
 800a216:	b083      	sub	sp, #12
 800a218:	af00      	add	r7, sp, #0
 800a21a:	6078      	str	r0, [r7, #4]
 800a21c:	6039      	str	r1, [r7, #0]
    {
    }
 800a21e:	bf00      	nop
 800a220:	370c      	adds	r7, #12
 800a222:	46bd      	mov	sp, r7
 800a224:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a228:	4770      	bx	lr

0800a22a <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt)
 800a22a:	b480      	push	{r7}
 800a22c:	b083      	sub	sp, #12
 800a22e:	af00      	add	r7, sp, #0
 800a230:	6078      	str	r0, [r7, #4]
 800a232:	6039      	str	r1, [r7, #0]
    {
    }
 800a234:	bf00      	nop
 800a236:	370c      	adds	r7, #12
 800a238:	46bd      	mov	sp, r7
 800a23a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a23e:	4770      	bx	lr

0800a240 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800a240:	b580      	push	{r7, lr}
 800a242:	b082      	sub	sp, #8
 800a244:	af00      	add	r7, sp, #0
 800a246:	6078      	str	r0, [r7, #4]
 800a248:	460b      	mov	r3, r1
 800a24a:	807b      	strh	r3, [r7, #2]
 800a24c:	4613      	mov	r3, r2
 800a24e:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800a250:	687b      	ldr	r3, [r7, #4]
 800a252:	681b      	ldr	r3, [r3, #0]
 800a254:	3334      	adds	r3, #52	; 0x34
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800a25c:	4611      	mov	r1, r2
 800a25e:	6878      	ldr	r0, [r7, #4]
 800a260:	4798      	blx	r3
        setHeight(height);
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	3338      	adds	r3, #56	; 0x38
 800a268:	681b      	ldr	r3, [r3, #0]
 800a26a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a26e:	4611      	mov	r1, r2
 800a270:	6878      	ldr	r0, [r7, #4]
 800a272:	4798      	blx	r3
    }
 800a274:	bf00      	nop
 800a276:	3708      	adds	r7, #8
 800a278:	46bd      	mov	sp, r7
 800a27a:	bd80      	pop	{r7, pc}

0800a27c <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt)
 800a27c:	b480      	push	{r7}
 800a27e:	b083      	sub	sp, #12
 800a280:	af00      	add	r7, sp, #0
 800a282:	6078      	str	r0, [r7, #4]
 800a284:	6039      	str	r1, [r7, #0]
    {
    }
 800a286:	bf00      	nop
 800a288:	370c      	adds	r7, #12
 800a28a:	46bd      	mov	sp, r7
 800a28c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a290:	4770      	bx	lr

0800a292 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800a292:	b480      	push	{r7}
 800a294:	b083      	sub	sp, #12
 800a296:	af00      	add	r7, sp, #0
 800a298:	6078      	str	r0, [r7, #4]
    {
    }
 800a29a:	bf00      	nop
 800a29c:	370c      	adds	r7, #12
 800a29e:	46bd      	mov	sp, r7
 800a2a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a4:	4770      	bx	lr

0800a2a6 <_ZN8touchgfx8Drawable10setVisibleEb>:
     * @param  vis true if this Drawable should be visible. By default, drawables are visible
     *             unless this function has been called with false as argument.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setVisible(bool vis)
 800a2a6:	b480      	push	{r7}
 800a2a8:	b083      	sub	sp, #12
 800a2aa:	af00      	add	r7, sp, #0
 800a2ac:	6078      	str	r0, [r7, #4]
 800a2ae:	460b      	mov	r3, r1
 800a2b0:	70fb      	strb	r3, [r7, #3]
    {
        visible = vis;
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	78fa      	ldrb	r2, [r7, #3]
 800a2b6:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    }
 800a2ba:	bf00      	nop
 800a2bc:	370c      	adds	r7, #12
 800a2be:	46bd      	mov	sp, r7
 800a2c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2c4:	4770      	bx	lr

0800a2c6 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800a2c6:	b480      	push	{r7}
 800a2c8:	b083      	sub	sp, #12
 800a2ca:	af00      	add	r7, sp, #0
 800a2cc:	6078      	str	r0, [r7, #4]
 800a2ce:	460b      	mov	r3, r1
 800a2d0:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800a2d2:	687b      	ldr	r3, [r7, #4]
 800a2d4:	78fa      	ldrb	r2, [r7, #3]
 800a2d6:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
    }
 800a2da:	bf00      	nop
 800a2dc:	370c      	adds	r7, #12
 800a2de:	46bd      	mov	sp, r7
 800a2e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2e4:	4770      	bx	lr

0800a2e6 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800a2e6:	b480      	push	{r7}
 800a2e8:	b083      	sub	sp, #12
 800a2ea:	af00      	add	r7, sp, #0
 800a2ec:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 800a2f4:	4618      	mov	r0, r3
 800a2f6:	370c      	adds	r7, #12
 800a2f8:	46bd      	mov	sp, r7
 800a2fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2fe:	4770      	bx	lr

0800a300 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800a300:	b480      	push	{r7}
 800a302:	b083      	sub	sp, #12
 800a304:	af00      	add	r7, sp, #0
 800a306:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800a308:	687b      	ldr	r3, [r7, #4]
 800a30a:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 800a30e:	4618      	mov	r0, r3
 800a310:	370c      	adds	r7, #12
 800a312:	46bd      	mov	sp, r7
 800a314:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a318:	4770      	bx	lr

0800a31a <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800a31a:	b580      	push	{r7, lr}
 800a31c:	b082      	sub	sp, #8
 800a31e:	af00      	add	r7, sp, #0
 800a320:	6078      	str	r0, [r7, #4]
 800a322:	460b      	mov	r3, r1
 800a324:	807b      	strh	r3, [r7, #2]
 800a326:	4613      	mov	r3, r2
 800a328:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800a32a:	687b      	ldr	r3, [r7, #4]
 800a32c:	681b      	ldr	r3, [r3, #0]
 800a32e:	3350      	adds	r3, #80	; 0x50
 800a330:	681b      	ldr	r3, [r3, #0]
 800a332:	8879      	ldrh	r1, [r7, #2]
 800a334:	687a      	ldr	r2, [r7, #4]
 800a336:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800a33a:	b292      	uxth	r2, r2
 800a33c:	1a8a      	subs	r2, r1, r2
 800a33e:	b292      	uxth	r2, r2
 800a340:	b210      	sxth	r0, r2
 800a342:	8839      	ldrh	r1, [r7, #0]
 800a344:	687a      	ldr	r2, [r7, #4]
 800a346:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800a34a:	b292      	uxth	r2, r2
 800a34c:	1a8a      	subs	r2, r1, r2
 800a34e:	b292      	uxth	r2, r2
 800a350:	b212      	sxth	r2, r2
 800a352:	4601      	mov	r1, r0
 800a354:	6878      	ldr	r0, [r7, #4]
 800a356:	4798      	blx	r3
    }
 800a358:	bf00      	nop
 800a35a:	3708      	adds	r7, #8
 800a35c:	46bd      	mov	sp, r7
 800a35e:	bd80      	pop	{r7, pc}

0800a360 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800a360:	b480      	push	{r7}
 800a362:	b083      	sub	sp, #12
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800a368:	687b      	ldr	r3, [r7, #4]
 800a36a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a36e:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800a370:	687b      	ldr	r3, [r7, #4]
 800a372:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a376:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800a37e:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 800a380:	bf00      	nop
 800a382:	370c      	adds	r7, #12
 800a384:	46bd      	mov	sp, r7
 800a386:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a38a:	4770      	bx	lr

0800a38c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800a38c:	b580      	push	{r7, lr}
 800a38e:	b084      	sub	sp, #16
 800a390:	af00      	add	r7, sp, #0
 800a392:	60f8      	str	r0, [r7, #12]
 800a394:	60b9      	str	r1, [r7, #8]
 800a396:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 800a398:	68f8      	ldr	r0, [r7, #12]
 800a39a:	f7ff ffe1 	bl	800a360 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800a39e:	687b      	ldr	r3, [r7, #4]
 800a3a0:	681a      	ldr	r2, [r3, #0]
 800a3a2:	68fb      	ldr	r3, [r7, #12]
 800a3a4:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800a3a6:	687b      	ldr	r3, [r7, #4]
 800a3a8:	68fa      	ldr	r2, [r7, #12]
 800a3aa:	601a      	str	r2, [r3, #0]
    }
 800a3ac:	bf00      	nop
 800a3ae:	3710      	adds	r7, #16
 800a3b0:	46bd      	mov	sp, r7
 800a3b2:	bd80      	pop	{r7, pc}

0800a3b4 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800a3b4:	b480      	push	{r7}
 800a3b6:	b083      	sub	sp, #12
 800a3b8:	af00      	add	r7, sp, #0
 800a3ba:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    }
 800a3c0:	4618      	mov	r0, r3
 800a3c2:	370c      	adds	r7, #12
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ca:	4770      	bx	lr

0800a3cc <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800a3cc:	b580      	push	{r7, lr}
 800a3ce:	b082      	sub	sp, #8
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	6078      	str	r0, [r7, #4]
    {
 800a3d4:	4a06      	ldr	r2, [pc, #24]	; (800a3f0 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	601a      	str	r2, [r3, #0]
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	3304      	adds	r3, #4
 800a3de:	4618      	mov	r0, r3
 800a3e0:	f003 fd00 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
    }
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	4618      	mov	r0, r3
 800a3e8:	3708      	adds	r7, #8
 800a3ea:	46bd      	mov	sp, r7
 800a3ec:	bd80      	pop	{r7, pc}
 800a3ee:	bf00      	nop
 800a3f0:	08031620 	.word	0x08031620

0800a3f4 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800a3f4:	b580      	push	{r7, lr}
 800a3f6:	b082      	sub	sp, #8
 800a3f8:	af00      	add	r7, sp, #0
 800a3fa:	6078      	str	r0, [r7, #4]
    }
 800a3fc:	6878      	ldr	r0, [r7, #4]
 800a3fe:	f7ff ffe5 	bl	800a3cc <_ZN8touchgfx6ScreenD1Ev>
 800a402:	213c      	movs	r1, #60	; 0x3c
 800a404:	6878      	ldr	r0, [r7, #4]
 800a406:	f021 fb2e 	bl	802ba66 <_ZdlPvj>
 800a40a:	687b      	ldr	r3, [r7, #4]
 800a40c:	4618      	mov	r0, r3
 800a40e:	3708      	adds	r7, #8
 800a410:	46bd      	mov	sp, r7
 800a412:	bd80      	pop	{r7, pc}

0800a414 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800a414:	b480      	push	{r7}
 800a416:	b083      	sub	sp, #12
 800a418:	af00      	add	r7, sp, #0
 800a41a:	6078      	str	r0, [r7, #4]
    {
    }
 800a41c:	bf00      	nop
 800a41e:	370c      	adds	r7, #12
 800a420:	46bd      	mov	sp, r7
 800a422:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a426:	4770      	bx	lr

0800a428 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800a428:	b480      	push	{r7}
 800a42a:	b083      	sub	sp, #12
 800a42c:	af00      	add	r7, sp, #0
 800a42e:	6078      	str	r0, [r7, #4]
    {
    }
 800a430:	bf00      	nop
 800a432:	370c      	adds	r7, #12
 800a434:	46bd      	mov	sp, r7
 800a436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a43a:	4770      	bx	lr

0800a43c <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800a43c:	b480      	push	{r7}
 800a43e:	b083      	sub	sp, #12
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
    {
    }
 800a444:	bf00      	nop
 800a446:	370c      	adds	r7, #12
 800a448:	46bd      	mov	sp, r7
 800a44a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a44e:	4770      	bx	lr

0800a450 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800a450:	b480      	push	{r7}
 800a452:	b083      	sub	sp, #12
 800a454:	af00      	add	r7, sp, #0
 800a456:	6078      	str	r0, [r7, #4]
    {
    }
 800a458:	bf00      	nop
 800a45a:	370c      	adds	r7, #12
 800a45c:	46bd      	mov	sp, r7
 800a45e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a462:	4770      	bx	lr

0800a464 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800a464:	b480      	push	{r7}
 800a466:	b083      	sub	sp, #12
 800a468:	af00      	add	r7, sp, #0
 800a46a:	6078      	str	r0, [r7, #4]
 800a46c:	460b      	mov	r3, r1
 800a46e:	70fb      	strb	r3, [r7, #3]
    {
    }
 800a470:	bf00      	nop
 800a472:	370c      	adds	r7, #12
 800a474:	46bd      	mov	sp, r7
 800a476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a47a:	4770      	bx	lr

0800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800a47c:	b580      	push	{r7, lr}
 800a47e:	b082      	sub	sp, #8
 800a480:	af00      	add	r7, sp, #0
 800a482:	6078      	str	r0, [r7, #4]
 800a484:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800a486:	687b      	ldr	r3, [r7, #4]
 800a488:	3304      	adds	r3, #4
 800a48a:	6839      	ldr	r1, [r7, #0]
 800a48c:	4618      	mov	r0, r3
 800a48e:	f00c fa41 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800a492:	bf00      	nop
 800a494:	3708      	adds	r7, #8
 800a496:	46bd      	mov	sp, r7
 800a498:	bd80      	pop	{r7, pc}

0800a49a <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>:
    /**
     * Get the auxiliary LCD class attached to the HAL instance if any.
     *
     * @return A pointer on the axiliary LCD class attached to the HAL instance.
     */
    LCD* getAuxiliaryLCD()
 800a49a:	b480      	push	{r7}
 800a49c:	b083      	sub	sp, #12
 800a49e:	af00      	add	r7, sp, #0
 800a4a0:	6078      	str	r0, [r7, #4]
    {
        return auxiliaryLCD;
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
    }
 800a4a6:	4618      	mov	r0, r3
 800a4a8:	370c      	adds	r7, #12
 800a4aa:	46bd      	mov	sp, r7
 800a4ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4b0:	4770      	bx	lr

0800a4b2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param       x    Not used since this Widget is the only "child".
     * @param       y    Not used since this Widget is the only "child".
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 800a4b2:	b580      	push	{r7, lr}
 800a4b4:	b084      	sub	sp, #16
 800a4b6:	af00      	add	r7, sp, #0
 800a4b8:	60f8      	str	r0, [r7, #12]
 800a4ba:	607b      	str	r3, [r7, #4]
 800a4bc:	460b      	mov	r3, r1
 800a4be:	817b      	strh	r3, [r7, #10]
 800a4c0:	4613      	mov	r3, r2
 800a4c2:	813b      	strh	r3, [r7, #8]
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 800a4c4:	68fb      	ldr	r3, [r7, #12]
 800a4c6:	4618      	mov	r0, r3
 800a4c8:	f7ff ff0d 	bl	800a2e6 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800a4cc:	4603      	mov	r3, r0
 800a4ce:	2b00      	cmp	r3, #0
 800a4d0:	d008      	beq.n	800a4e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a4d2:	68fb      	ldr	r3, [r7, #12]
 800a4d4:	4618      	mov	r0, r3
 800a4d6:	f7ff ff13 	bl	800a300 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800a4da:	4603      	mov	r3, r0
 800a4dc:	2b00      	cmp	r3, #0
 800a4de:	d001      	beq.n	800a4e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800a4e0:	2301      	movs	r3, #1
 800a4e2:	e000      	b.n	800a4e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800a4e4:	2300      	movs	r3, #0
 800a4e6:	2b00      	cmp	r3, #0
 800a4e8:	d002      	beq.n	800a4f0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800a4ea:	68fa      	ldr	r2, [r7, #12]
 800a4ec:	687b      	ldr	r3, [r7, #4]
 800a4ee:	601a      	str	r2, [r3, #0]
        }
    }
 800a4f0:	bf00      	nop
 800a4f2:	3710      	adds	r7, #16
 800a4f4:	46bd      	mov	sp, r7
 800a4f6:	bd80      	pop	{r7, pc}

0800a4f8 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800a4f8:	b580      	push	{r7, lr}
 800a4fa:	b082      	sub	sp, #8
 800a4fc:	af00      	add	r7, sp, #0
 800a4fe:	6078      	str	r0, [r7, #4]
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	4618      	mov	r0, r3
 800a504:	f7ff fda8 	bl	800a058 <_ZN8touchgfx8DrawableC1Ev>
 800a508:	4a03      	ldr	r2, [pc, #12]	; (800a518 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800a50a:	687b      	ldr	r3, [r7, #4]
 800a50c:	601a      	str	r2, [r3, #0]
 800a50e:	687b      	ldr	r3, [r7, #4]
 800a510:	4618      	mov	r0, r3
 800a512:	3708      	adds	r7, #8
 800a514:	46bd      	mov	sp, r7
 800a516:	bd80      	pop	{r7, pc}
 800a518:	0802f178 	.word	0x0802f178

0800a51c <_ZN8touchgfx6WidgetD1Ev>:
 800a51c:	b580      	push	{r7, lr}
 800a51e:	b082      	sub	sp, #8
 800a520:	af00      	add	r7, sp, #0
 800a522:	6078      	str	r0, [r7, #4]
 800a524:	4a05      	ldr	r2, [pc, #20]	; (800a53c <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800a526:	687b      	ldr	r3, [r7, #4]
 800a528:	601a      	str	r2, [r3, #0]
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	4618      	mov	r0, r3
 800a52e:	f7ff fdc1 	bl	800a0b4 <_ZN8touchgfx8DrawableD1Ev>
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	4618      	mov	r0, r3
 800a536:	3708      	adds	r7, #8
 800a538:	46bd      	mov	sp, r7
 800a53a:	bd80      	pop	{r7, pc}
 800a53c:	0802f178 	.word	0x0802f178

0800a540 <_ZN8touchgfx6WidgetD0Ev>:
 800a540:	b580      	push	{r7, lr}
 800a542:	b082      	sub	sp, #8
 800a544:	af00      	add	r7, sp, #0
 800a546:	6078      	str	r0, [r7, #4]
 800a548:	6878      	ldr	r0, [r7, #4]
 800a54a:	f7ff ffe7 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800a54e:	2128      	movs	r1, #40	; 0x28
 800a550:	6878      	ldr	r0, [r7, #4]
 800a552:	f021 fa88 	bl	802ba66 <_ZdlPvj>
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	4618      	mov	r0, r3
 800a55a:	3708      	adds	r7, #8
 800a55c:	46bd      	mov	sp, r7
 800a55e:	bd80      	pop	{r7, pc}

0800a560 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800a560:	b580      	push	{r7, lr}
 800a562:	b082      	sub	sp, #8
 800a564:	af00      	add	r7, sp, #0
 800a566:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800a568:	687b      	ldr	r3, [r7, #4]
 800a56a:	4618      	mov	r0, r3
 800a56c:	2326      	movs	r3, #38	; 0x26
 800a56e:	461a      	mov	r2, r3
 800a570:	2100      	movs	r1, #0
 800a572:	f021 fd5f 	bl	802c034 <memset>
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	4618      	mov	r0, r3
 800a57a:	f7ff ffbd 	bl	800a4f8 <_ZN8touchgfx6WidgetC1Ev>
 800a57e:	4a0a      	ldr	r2, [pc, #40]	; (800a5a8 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800a580:	687b      	ldr	r3, [r7, #4]
 800a582:	601a      	str	r2, [r3, #0]
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	2200      	movs	r2, #0
 800a588:	629a      	str	r2, [r3, #40]	; 0x28
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	2200      	movs	r2, #0
 800a58e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
        setTouchable(true);
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	2101      	movs	r1, #1
 800a596:	4618      	mov	r0, r3
 800a598:	f7ff fe95 	bl	800a2c6 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	4618      	mov	r0, r3
 800a5a0:	3708      	adds	r7, #8
 800a5a2:	46bd      	mov	sp, r7
 800a5a4:	bd80      	pop	{r7, pc}
 800a5a6:	bf00      	nop
 800a5a8:	08030d80 	.word	0x08030d80

0800a5ac <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a5ac:	b480      	push	{r7}
 800a5ae:	b083      	sub	sp, #12
 800a5b0:	af00      	add	r7, sp, #0
 800a5b2:	6078      	str	r0, [r7, #4]
 800a5b4:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	683a      	ldr	r2, [r7, #0]
 800a5ba:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a5bc:	bf00      	nop
 800a5be:	370c      	adds	r7, #12
 800a5c0:	46bd      	mov	sp, r7
 800a5c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5c6:	4770      	bx	lr

0800a5c8 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a5c8:	b580      	push	{r7, lr}
 800a5ca:	b082      	sub	sp, #8
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
 800a5d0:	4a05      	ldr	r2, [pc, #20]	; (800a5e8 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	601a      	str	r2, [r3, #0]
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	4618      	mov	r0, r3
 800a5da:	f7ff ff9f 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800a5de:	687b      	ldr	r3, [r7, #4]
 800a5e0:	4618      	mov	r0, r3
 800a5e2:	3708      	adds	r7, #8
 800a5e4:	46bd      	mov	sp, r7
 800a5e6:	bd80      	pop	{r7, pc}
 800a5e8:	08030d80 	.word	0x08030d80

0800a5ec <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a5ec:	b580      	push	{r7, lr}
 800a5ee:	b082      	sub	sp, #8
 800a5f0:	af00      	add	r7, sp, #0
 800a5f2:	6078      	str	r0, [r7, #4]
 800a5f4:	6878      	ldr	r0, [r7, #4]
 800a5f6:	f7ff ffe7 	bl	800a5c8 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a5fa:	2130      	movs	r1, #48	; 0x30
 800a5fc:	6878      	ldr	r0, [r7, #4]
 800a5fe:	f021 fa32 	bl	802ba66 <_ZdlPvj>
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	4618      	mov	r0, r3
 800a606:	3708      	adds	r7, #8
 800a608:	46bd      	mov	sp, r7
 800a60a:	bd80      	pop	{r7, pc}

0800a60c <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800a60c:	b580      	push	{r7, lr}
 800a60e:	b082      	sub	sp, #8
 800a610:	af00      	add	r7, sp, #0
 800a612:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800a614:	687b      	ldr	r3, [r7, #4]
 800a616:	4618      	mov	r0, r3
 800a618:	f7ff ffa2 	bl	800a560 <_ZN8touchgfx14AbstractButtonC1Ev>
 800a61c:	4a0c      	ldr	r2, [pc, #48]	; (800a650 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	601a      	str	r2, [r3, #0]
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	332e      	adds	r3, #46	; 0x2e
 800a626:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a62a:	4618      	mov	r0, r3
 800a62c:	f7ff fd04 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	3330      	adds	r3, #48	; 0x30
 800a634:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a638:	4618      	mov	r0, r3
 800a63a:	f7ff fcfd 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800a63e:	687b      	ldr	r3, [r7, #4]
 800a640:	22ff      	movs	r2, #255	; 0xff
 800a642:	f883 2032 	strb.w	r2, [r3, #50]	; 0x32
    {
    }
 800a646:	687b      	ldr	r3, [r7, #4]
 800a648:	4618      	mov	r0, r3
 800a64a:	3708      	adds	r7, #8
 800a64c:	46bd      	mov	sp, r7
 800a64e:	bd80      	pop	{r7, pc}
 800a650:	0803101c 	.word	0x0803101c

0800a654 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800a654:	b580      	push	{r7, lr}
 800a656:	b082      	sub	sp, #8
 800a658:	af00      	add	r7, sp, #0
 800a65a:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	4618      	mov	r0, r3
 800a660:	2326      	movs	r3, #38	; 0x26
 800a662:	461a      	mov	r2, r3
 800a664:	2100      	movs	r1, #0
 800a666:	f021 fce5 	bl	802c034 <memset>
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	4618      	mov	r0, r3
 800a66e:	f7ff ff43 	bl	800a4f8 <_ZN8touchgfx6WidgetC1Ev>
 800a672:	4a09      	ldr	r2, [pc, #36]	; (800a698 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	601a      	str	r2, [r3, #0]
 800a678:	687b      	ldr	r3, [r7, #4]
 800a67a:	22ff      	movs	r2, #255	; 0xff
 800a67c:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800a680:	687b      	ldr	r3, [r7, #4]
 800a682:	3328      	adds	r3, #40	; 0x28
 800a684:	2100      	movs	r1, #0
 800a686:	4618      	mov	r0, r3
 800a688:	f7ff fc84 	bl	8009f94 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	4618      	mov	r0, r3
 800a690:	3708      	adds	r7, #8
 800a692:	46bd      	mov	sp, r7
 800a694:	bd80      	pop	{r7, pc}
 800a696:	bf00      	nop
 800a698:	08030f54 	.word	0x08030f54

0800a69c <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  color The color of the box.
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
 800a69c:	b480      	push	{r7}
 800a69e:	b083      	sub	sp, #12
 800a6a0:	af00      	add	r7, sp, #0
 800a6a2:	6078      	str	r0, [r7, #4]
 800a6a4:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 800a6a6:	687b      	ldr	r3, [r7, #4]
 800a6a8:	683a      	ldr	r2, [r7, #0]
 800a6aa:	629a      	str	r2, [r3, #40]	; 0x28
    }
 800a6ac:	bf00      	nop
 800a6ae:	370c      	adds	r7, #12
 800a6b0:	46bd      	mov	sp, r7
 800a6b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6b6:	4770      	bx	lr

0800a6b8 <_ZN8touchgfx9TypedTextC1Et>:
    explicit TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a6b8:	b480      	push	{r7}
 800a6ba:	b083      	sub	sp, #12
 800a6bc:	af00      	add	r7, sp, #0
 800a6be:	6078      	str	r0, [r7, #4]
 800a6c0:	460b      	mov	r3, r1
 800a6c2:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a6c4:	4a06      	ldr	r2, [pc, #24]	; (800a6e0 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	601a      	str	r2, [r3, #0]
 800a6ca:	687b      	ldr	r3, [r7, #4]
 800a6cc:	887a      	ldrh	r2, [r7, #2]
 800a6ce:	809a      	strh	r2, [r3, #4]
    }
 800a6d0:	687b      	ldr	r3, [r7, #4]
 800a6d2:	4618      	mov	r0, r3
 800a6d4:	370c      	adds	r7, #12
 800a6d6:	46bd      	mov	sp, r7
 800a6d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6dc:	4770      	bx	lr
 800a6de:	bf00      	nop
 800a6e0:	0802ed7c 	.word	0x0802ed7c

0800a6e4 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a6e4:	b580      	push	{r7, lr}
 800a6e6:	b082      	sub	sp, #8
 800a6e8:	af00      	add	r7, sp, #0
 800a6ea:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE)
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	4618      	mov	r0, r3
 800a6f0:	2326      	movs	r3, #38	; 0x26
 800a6f2:	461a      	mov	r2, r3
 800a6f4:	2100      	movs	r1, #0
 800a6f6:	f021 fc9d 	bl	802c034 <memset>
 800a6fa:	687b      	ldr	r3, [r7, #4]
 800a6fc:	4618      	mov	r0, r3
 800a6fe:	f7ff fefb 	bl	800a4f8 <_ZN8touchgfx6WidgetC1Ev>
 800a702:	4a14      	ldr	r2, [pc, #80]	; (800a754 <_ZN8touchgfx8TextAreaC1Ev+0x70>)
 800a704:	687b      	ldr	r3, [r7, #4]
 800a706:	601a      	str	r2, [r3, #0]
 800a708:	687b      	ldr	r3, [r7, #4]
 800a70a:	3328      	adds	r3, #40	; 0x28
 800a70c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800a710:	4618      	mov	r0, r3
 800a712:	f7ff ffd1 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800a716:	687b      	ldr	r3, [r7, #4]
 800a718:	3330      	adds	r3, #48	; 0x30
 800a71a:	2100      	movs	r1, #0
 800a71c:	4618      	mov	r0, r3
 800a71e:	f7ff fc39 	bl	8009f94 <_ZN8touchgfx9colortypeC1Em>
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	2200      	movs	r2, #0
 800a726:	869a      	strh	r2, [r3, #52]	; 0x34
 800a728:	687b      	ldr	r3, [r7, #4]
 800a72a:	22ff      	movs	r2, #255	; 0xff
 800a72c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	2200      	movs	r2, #0
 800a734:	f883 2037 	strb.w	r2, [r3, #55]	; 0x37
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	2200      	movs	r2, #0
 800a73c:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	2200      	movs	r2, #0
 800a744:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
    {
    }
 800a748:	687b      	ldr	r3, [r7, #4]
 800a74a:	4618      	mov	r0, r3
 800a74c:	3708      	adds	r7, #8
 800a74e:	46bd      	mov	sp, r7
 800a750:	bd80      	pop	{r7, pc}
 800a752:	bf00      	nop
 800a754:	08030eac 	.word	0x08030eac

0800a758 <_ZN8touchgfx8TextArea11setRotationENS_12TextRotationE>:
     * from the top of the display and down. Similarly TEXT_ROTATE_180 and TEXT_ROTATE_270
     * will each rotate the text further 90 degrees clockwise.
     *
     * @param  rotation The rotation of the text.
     */
    void setRotation(const TextRotation rotation)
 800a758:	b480      	push	{r7}
 800a75a:	b083      	sub	sp, #12
 800a75c:	af00      	add	r7, sp, #0
 800a75e:	6078      	str	r0, [r7, #4]
 800a760:	460b      	mov	r3, r1
 800a762:	70fb      	strb	r3, [r7, #3]
    {
        this->rotation = rotation;
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	78fa      	ldrb	r2, [r7, #3]
 800a768:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    }
 800a76c:	bf00      	nop
 800a76e:	370c      	adds	r7, #12
 800a770:	46bd      	mov	sp, r7
 800a772:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a776:	4770      	bx	lr

0800a778 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a778:	b580      	push	{r7, lr}
 800a77a:	b082      	sub	sp, #8
 800a77c:	af00      	add	r7, sp, #0
 800a77e:	6078      	str	r0, [r7, #4]
 800a780:	4a08      	ldr	r2, [pc, #32]	; (800a7a4 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	601a      	str	r2, [r3, #0]
 800a786:	687b      	ldr	r3, [r7, #4]
 800a788:	3328      	adds	r3, #40	; 0x28
 800a78a:	4618      	mov	r0, r3
 800a78c:	f7fe fd1c 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	4618      	mov	r0, r3
 800a794:	f7ff fec2 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800a798:	687b      	ldr	r3, [r7, #4]
 800a79a:	4618      	mov	r0, r3
 800a79c:	3708      	adds	r7, #8
 800a79e:	46bd      	mov	sp, r7
 800a7a0:	bd80      	pop	{r7, pc}
 800a7a2:	bf00      	nop
 800a7a4:	08030eac 	.word	0x08030eac

0800a7a8 <_ZN8touchgfx8TextAreaD0Ev>:
 800a7a8:	b580      	push	{r7, lr}
 800a7aa:	b082      	sub	sp, #8
 800a7ac:	af00      	add	r7, sp, #0
 800a7ae:	6078      	str	r0, [r7, #4]
 800a7b0:	6878      	ldr	r0, [r7, #4]
 800a7b2:	f7ff ffe1 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800a7b6:	213c      	movs	r1, #60	; 0x3c
 800a7b8:	6878      	ldr	r0, [r7, #4]
 800a7ba:	f021 f954 	bl	802ba66 <_ZdlPvj>
 800a7be:	687b      	ldr	r3, [r7, #4]
 800a7c0:	4618      	mov	r0, r3
 800a7c2:	3708      	adds	r7, #8
 800a7c4:	46bd      	mov	sp, r7
 800a7c6:	bd80      	pop	{r7, pc}

0800a7c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextArea
{
public:
    TextAreaWithOneWildcard()
 800a7c8:	b580      	push	{r7, lr}
 800a7ca:	b082      	sub	sp, #8
 800a7cc:	af00      	add	r7, sp, #0
 800a7ce:	6078      	str	r0, [r7, #4]
        : TextArea(), wildcard(0)
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	4618      	mov	r0, r3
 800a7d4:	f7ff ff86 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800a7d8:	4a05      	ldr	r2, [pc, #20]	; (800a7f0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a7da:	687b      	ldr	r3, [r7, #4]
 800a7dc:	601a      	str	r2, [r3, #0]
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	2200      	movs	r2, #0
 800a7e2:	63da      	str	r2, [r3, #60]	; 0x3c
    {
    }
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	4618      	mov	r0, r3
 800a7e8:	3708      	adds	r7, #8
 800a7ea:	46bd      	mov	sp, r7
 800a7ec:	bd80      	pop	{r7, pc}
 800a7ee:	bf00      	nop
 800a7f0:	080310c0 	.word	0x080310c0

0800a7f4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a7f4:	b480      	push	{r7}
 800a7f6:	b083      	sub	sp, #12
 800a7f8:	af00      	add	r7, sp, #0
 800a7fa:	6078      	str	r0, [r7, #4]
 800a7fc:	6039      	str	r1, [r7, #0]
    {
        wildcard = value;
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	683a      	ldr	r2, [r7, #0]
 800a802:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800a804:	bf00      	nop
 800a806:	370c      	adds	r7, #12
 800a808:	46bd      	mov	sp, r7
 800a80a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a80e:	4770      	bx	lr

0800a810 <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>:
 *       being replaced by a wildcard text.
 */
class TextAreaWithTwoWildcards : public TextArea
{
public:
    TextAreaWithTwoWildcards()
 800a810:	b580      	push	{r7, lr}
 800a812:	b082      	sub	sp, #8
 800a814:	af00      	add	r7, sp, #0
 800a816:	6078      	str	r0, [r7, #4]
        : TextArea(), wc1(0), wc2(0)
 800a818:	687b      	ldr	r3, [r7, #4]
 800a81a:	4618      	mov	r0, r3
 800a81c:	f7ff ff62 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800a820:	4a06      	ldr	r2, [pc, #24]	; (800a83c <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev+0x2c>)
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	601a      	str	r2, [r3, #0]
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	2200      	movs	r2, #0
 800a82a:	63da      	str	r2, [r3, #60]	; 0x3c
 800a82c:	687b      	ldr	r3, [r7, #4]
 800a82e:	2200      	movs	r2, #0
 800a830:	641a      	str	r2, [r3, #64]	; 0x40
    {
    }
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	4618      	mov	r0, r3
 800a836:	3708      	adds	r7, #8
 800a838:	46bd      	mov	sp, r7
 800a83a:	bd80      	pop	{r7, pc}
 800a83c:	08031138 	.word	0x08031138

0800a840 <_ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a840:	b480      	push	{r7}
 800a842:	b083      	sub	sp, #12
 800a844:	af00      	add	r7, sp, #0
 800a846:	6078      	str	r0, [r7, #4]
 800a848:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a84a:	687b      	ldr	r3, [r7, #4]
 800a84c:	683a      	ldr	r2, [r7, #0]
 800a84e:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800a850:	bf00      	nop
 800a852:	370c      	adds	r7, #12
 800a854:	46bd      	mov	sp, r7
 800a856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a85a:	4770      	bx	lr

0800a85c <_ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard2EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithTwoWildcard
     *       may need it.
     */
    void setWildcard2(const Unicode::UnicodeChar* value)
 800a85c:	b480      	push	{r7}
 800a85e:	b083      	sub	sp, #12
 800a860:	af00      	add	r7, sp, #0
 800a862:	6078      	str	r0, [r7, #4]
 800a864:	6039      	str	r1, [r7, #0]
    {
        wc2 = value;
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	683a      	ldr	r2, [r7, #0]
 800a86a:	641a      	str	r2, [r3, #64]	; 0x40
    }
 800a86c:	bf00      	nop
 800a86e:	370c      	adds	r7, #12
 800a870:	46bd      	mov	sp, r7
 800a872:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a876:	4770      	bx	lr

0800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     *
     * @note This function is not available to call before the LCD has been setup, because the
     *       color depth is required. Consider using the function getColorFromRGB for a
     *       specific class, e.g. LCD16::getColorFromRGB().
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 800a878:	b590      	push	{r4, r7, lr}
 800a87a:	b083      	sub	sp, #12
 800a87c:	af00      	add	r7, sp, #0
 800a87e:	4603      	mov	r3, r0
 800a880:	71fb      	strb	r3, [r7, #7]
 800a882:	460b      	mov	r3, r1
 800a884:	71bb      	strb	r3, [r7, #6]
 800a886:	4613      	mov	r3, r2
 800a888:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 800a88a:	f7fe ff07 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 800a88e:	4603      	mov	r3, r0
 800a890:	2b00      	cmp	r3, #0
 800a892:	d105      	bne.n	800a8a0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 800a894:	4b0a      	ldr	r3, [pc, #40]	; (800a8c0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 800a896:	4a0b      	ldr	r2, [pc, #44]	; (800a8c4 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 800a898:	2135      	movs	r1, #53	; 0x35
 800a89a:	480b      	ldr	r0, [pc, #44]	; (800a8c8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 800a89c:	f021 fb24 	bl	802bee8 <__assert_func>
 800a8a0:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 800a8a2:	f7fe ff07 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 800a8a6:	6803      	ldr	r3, [r0, #0]
 800a8a8:	3328      	adds	r3, #40	; 0x28
 800a8aa:	681c      	ldr	r4, [r3, #0]
 800a8ac:	797b      	ldrb	r3, [r7, #5]
 800a8ae:	79ba      	ldrb	r2, [r7, #6]
 800a8b0:	79f9      	ldrb	r1, [r7, #7]
 800a8b2:	47a0      	blx	r4
 800a8b4:	4603      	mov	r3, r0
    }
 800a8b6:	4618      	mov	r0, r3
 800a8b8:	370c      	adds	r7, #12
 800a8ba:	46bd      	mov	sp, r7
 800a8bc:	bd90      	pop	{r4, r7, pc}
 800a8be:	bf00      	nop
 800a8c0:	0802d830 	.word	0x0802d830
 800a8c4:	0802d874 	.word	0x0802d874
 800a8c8:	0802d8d0 	.word	0x0802d8d0

0800a8cc <_ZN8touchgfx15AbstractPainterC1Ev>:
 */
class AbstractPainter
{
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
 800a8cc:	b480      	push	{r7}
 800a8ce:	b083      	sub	sp, #12
 800a8d0:	af00      	add	r7, sp, #0
 800a8d2:	6078      	str	r0, [r7, #4]
        : areaOffsetX(0),
          areaOffsetY(0),
          widgetAlpha(255),
          painterAlpha(255)
 800a8d4:	4a0a      	ldr	r2, [pc, #40]	; (800a900 <_ZN8touchgfx15AbstractPainterC1Ev+0x34>)
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	601a      	str	r2, [r3, #0]
 800a8da:	687b      	ldr	r3, [r7, #4]
 800a8dc:	2200      	movs	r2, #0
 800a8de:	809a      	strh	r2, [r3, #4]
 800a8e0:	687b      	ldr	r3, [r7, #4]
 800a8e2:	2200      	movs	r2, #0
 800a8e4:	80da      	strh	r2, [r3, #6]
 800a8e6:	687b      	ldr	r3, [r7, #4]
 800a8e8:	22ff      	movs	r2, #255	; 0xff
 800a8ea:	721a      	strb	r2, [r3, #8]
 800a8ec:	687b      	ldr	r3, [r7, #4]
 800a8ee:	22ff      	movs	r2, #255	; 0xff
 800a8f0:	725a      	strb	r2, [r3, #9]
    {
    }
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	4618      	mov	r0, r3
 800a8f6:	370c      	adds	r7, #12
 800a8f8:	46bd      	mov	sp, r7
 800a8fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8fe:	4770      	bx	lr
 800a900:	0802f144 	.word	0x0802f144

0800a904 <_ZN8touchgfx15AbstractPainterD1Ev>:

    /** Finalizes an instance of the AbstractPainter class. */
    virtual ~AbstractPainter()
 800a904:	b480      	push	{r7}
 800a906:	b083      	sub	sp, #12
 800a908:	af00      	add	r7, sp, #0
 800a90a:	6078      	str	r0, [r7, #4]
    {
 800a90c:	4a04      	ldr	r2, [pc, #16]	; (800a920 <_ZN8touchgfx15AbstractPainterD1Ev+0x1c>)
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	601a      	str	r2, [r3, #0]
    }
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	4618      	mov	r0, r3
 800a916:	370c      	adds	r7, #12
 800a918:	46bd      	mov	sp, r7
 800a91a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a91e:	4770      	bx	lr
 800a920:	0802f144 	.word	0x0802f144

0800a924 <_ZN8touchgfx15AbstractPainterD0Ev>:
    virtual ~AbstractPainter()
 800a924:	b580      	push	{r7, lr}
 800a926:	b082      	sub	sp, #8
 800a928:	af00      	add	r7, sp, #0
 800a92a:	6078      	str	r0, [r7, #4]
    }
 800a92c:	6878      	ldr	r0, [r7, #4]
 800a92e:	f7ff ffe9 	bl	800a904 <_ZN8touchgfx15AbstractPainterD1Ev>
 800a932:	210c      	movs	r1, #12
 800a934:	6878      	ldr	r0, [r7, #4]
 800a936:	f021 f896 	bl	802ba66 <_ZdlPvj>
 800a93a:	687b      	ldr	r3, [r7, #4]
 800a93c:	4618      	mov	r0, r3
 800a93e:	3708      	adds	r7, #8
 800a940:	46bd      	mov	sp, r7
 800a942:	bd80      	pop	{r7, pc}

0800a944 <_ZN8touchgfx15AbstractPainter8setAlphaEh>:
     *       AbstractPainter for better performance.
     */
    virtual void render(uint8_t* ptr, int x, int xAdjust, int y, unsigned count, const uint8_t* covers) = 0;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
 800a944:	b480      	push	{r7}
 800a946:	b083      	sub	sp, #12
 800a948:	af00      	add	r7, sp, #0
 800a94a:	6078      	str	r0, [r7, #4]
 800a94c:	460b      	mov	r3, r1
 800a94e:	70fb      	strb	r3, [r7, #3]
    {
        painterAlpha = newAlpha;
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	78fa      	ldrb	r2, [r7, #3]
 800a954:	725a      	strb	r2, [r3, #9]
    }
 800a956:	bf00      	nop
 800a958:	370c      	adds	r7, #12
 800a95a:	46bd      	mov	sp, r7
 800a95c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a960:	4770      	bx	lr

0800a962 <_ZNK8touchgfx15AbstractPainter8getAlphaEv>:

    /** @copydoc Image::getAlpha */
    virtual uint8_t getAlpha() const
 800a962:	b480      	push	{r7}
 800a964:	b083      	sub	sp, #12
 800a966:	af00      	add	r7, sp, #0
 800a968:	6078      	str	r0, [r7, #4]
    {
        return painterAlpha;
 800a96a:	687b      	ldr	r3, [r7, #4]
 800a96c:	7a5b      	ldrb	r3, [r3, #9]
    }
 800a96e:	4618      	mov	r0, r3
 800a970:	370c      	adds	r7, #12
 800a972:	46bd      	mov	sp, r7
 800a974:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a978:	4770      	bx	lr

0800a97a <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
     * @see setPainter
     */
    virtual AbstractPainter& getPainter() const;

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
 800a97a:	b480      	push	{r7}
 800a97c:	b083      	sub	sp, #12
 800a97e:	af00      	add	r7, sp, #0
 800a980:	6078      	str	r0, [r7, #4]
 800a982:	460b      	mov	r3, r1
 800a984:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	78fa      	ldrb	r2, [r7, #3]
 800a98a:	f883 202e 	strb.w	r2, [r3, #46]	; 0x2e
    }
 800a98e:	bf00      	nop
 800a990:	370c      	adds	r7, #12
 800a992:	46bd      	mov	sp, r7
 800a994:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a998:	4770      	bx	lr

0800a99a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
 800a99a:	b480      	push	{r7}
 800a99c:	b083      	sub	sp, #12
 800a99e:	af00      	add	r7, sp, #0
 800a9a0:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	f893 302e 	ldrb.w	r3, [r3, #46]	; 0x2e
    }
 800a9a8:	4618      	mov	r0, r3
 800a9aa:	370c      	adds	r7, #12
 800a9ac:	46bd      	mov	sp, r7
 800a9ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9b2:	4770      	bx	lr

0800a9b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800a9b4:	b580      	push	{r7, lr}
 800a9b6:	b084      	sub	sp, #16
 800a9b8:	af00      	add	r7, sp, #0
 800a9ba:	6078      	str	r0, [r7, #4]
        : AbstractPainter(), currentX(0), currentY(0)
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	4618      	mov	r0, r3
 800a9c0:	f7ff ff84 	bl	800a8cc <_ZN8touchgfx15AbstractPainterC1Ev>
 800a9c4:	4a29      	ldr	r2, [pc, #164]	; (800aa6c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb8>)
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	601a      	str	r2, [r3, #0]
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	2200      	movs	r2, #0
 800a9ce:	60da      	str	r2, [r3, #12]
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	2200      	movs	r2, #0
 800a9d4:	611a      	str	r2, [r3, #16]
 800a9d6:	2300      	movs	r3, #0
 800a9d8:	73fb      	strb	r3, [r7, #15]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800a9da:	f7fe fe6b 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 800a9de:	4603      	mov	r3, r0
 800a9e0:	681a      	ldr	r2, [r3, #0]
 800a9e2:	3220      	adds	r2, #32
 800a9e4:	6812      	ldr	r2, [r2, #0]
 800a9e6:	4618      	mov	r0, r3
 800a9e8:	4790      	blx	r2
 800a9ea:	4603      	mov	r3, r0
 800a9ec:	461a      	mov	r2, r3
 800a9ee:	7bfb      	ldrb	r3, [r7, #15]
 800a9f0:	4293      	cmp	r3, r2
 800a9f2:	bf0c      	ite	eq
 800a9f4:	2301      	moveq	r3, #1
 800a9f6:	2300      	movne	r3, #0
 800a9f8:	73bb      	strb	r3, [r7, #14]
        if (HAL::getInstance()->getAuxiliaryLCD())
 800a9fa:	f7fe fe4f 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 800a9fe:	4603      	mov	r3, r0
 800aa00:	4618      	mov	r0, r3
 800aa02:	f7ff fd4a 	bl	800a49a <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800aa06:	4603      	mov	r3, r0
 800aa08:	2b00      	cmp	r3, #0
 800aa0a:	bf14      	ite	ne
 800aa0c:	2301      	movne	r3, #1
 800aa0e:	2300      	moveq	r3, #0
 800aa10:	b2db      	uxtb	r3, r3
 800aa12:	2b00      	cmp	r3, #0
 800aa14:	d01b      	beq.n	800aa4e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x9a>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800aa16:	f7fe fe41 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 800aa1a:	4603      	mov	r3, r0
 800aa1c:	4618      	mov	r0, r3
 800aa1e:	f7ff fd3c 	bl	800a49a <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800aa22:	4603      	mov	r3, r0
 800aa24:	681a      	ldr	r2, [r3, #0]
 800aa26:	3220      	adds	r2, #32
 800aa28:	6812      	ldr	r2, [r2, #0]
 800aa2a:	4618      	mov	r0, r3
 800aa2c:	4790      	blx	r2
 800aa2e:	4603      	mov	r3, r0
 800aa30:	461a      	mov	r2, r3
 800aa32:	7bfb      	ldrb	r3, [r7, #15]
 800aa34:	4293      	cmp	r3, r2
 800aa36:	bf0c      	ite	eq
 800aa38:	2301      	moveq	r3, #1
 800aa3a:	2300      	movne	r3, #0
 800aa3c:	b2da      	uxtb	r2, r3
 800aa3e:	7bbb      	ldrb	r3, [r7, #14]
 800aa40:	4313      	orrs	r3, r2
 800aa42:	b2db      	uxtb	r3, r3
 800aa44:	2b00      	cmp	r3, #0
 800aa46:	bf14      	ite	ne
 800aa48:	2301      	movne	r3, #1
 800aa4a:	2300      	moveq	r3, #0
 800aa4c:	73bb      	strb	r3, [r7, #14]
        }
        return compat;
 800aa4e:	7bbb      	ldrb	r3, [r7, #14]
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800aa50:	2b00      	cmp	r3, #0
 800aa52:	d105      	bne.n	800aa60 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xac>
 800aa54:	4b06      	ldr	r3, [pc, #24]	; (800aa70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xbc>)
 800aa56:	4a07      	ldr	r2, [pc, #28]	; (800aa74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xc0>)
 800aa58:	212f      	movs	r1, #47	; 0x2f
 800aa5a:	4807      	ldr	r0, [pc, #28]	; (800aa78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xc4>)
 800aa5c:	f021 fa44 	bl	802bee8 <__assert_func>
 800aa60:	bf00      	nop
    }
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	4618      	mov	r0, r3
 800aa66:	3710      	adds	r7, #16
 800aa68:	46bd      	mov	sp, r7
 800aa6a:	bd80      	pop	{r7, pc}
 800aa6c:	080305a4 	.word	0x080305a4
 800aa70:	0802d964 	.word	0x0802d964
 800aa74:	0802d9c4 	.word	0x0802d9c4
 800aa78:	0802da00 	.word	0x0802da00

0800aa7c <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
class AbstractPainterRGB565 : public AbstractPainter
 800aa7c:	b580      	push	{r7, lr}
 800aa7e:	b082      	sub	sp, #8
 800aa80:	af00      	add	r7, sp, #0
 800aa82:	6078      	str	r0, [r7, #4]
 800aa84:	4a05      	ldr	r2, [pc, #20]	; (800aa9c <_ZN8touchgfx21AbstractPainterRGB565D1Ev+0x20>)
 800aa86:	687b      	ldr	r3, [r7, #4]
 800aa88:	601a      	str	r2, [r3, #0]
 800aa8a:	687b      	ldr	r3, [r7, #4]
 800aa8c:	4618      	mov	r0, r3
 800aa8e:	f7ff ff39 	bl	800a904 <_ZN8touchgfx15AbstractPainterD1Ev>
 800aa92:	687b      	ldr	r3, [r7, #4]
 800aa94:	4618      	mov	r0, r3
 800aa96:	3708      	adds	r7, #8
 800aa98:	46bd      	mov	sp, r7
 800aa9a:	bd80      	pop	{r7, pc}
 800aa9c:	080305a4 	.word	0x080305a4

0800aaa0 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 800aaa0:	b580      	push	{r7, lr}
 800aaa2:	b082      	sub	sp, #8
 800aaa4:	af00      	add	r7, sp, #0
 800aaa6:	6078      	str	r0, [r7, #4]
 800aaa8:	6878      	ldr	r0, [r7, #4]
 800aaaa:	f7ff ffe7 	bl	800aa7c <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800aaae:	2114      	movs	r1, #20
 800aab0:	6878      	ldr	r0, [r7, #4]
 800aab2:	f020 ffd8 	bl	802ba66 <_ZdlPvj>
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	4618      	mov	r0, r3
 800aaba:	3708      	adds	r7, #8
 800aabc:	46bd      	mov	sp, r7
 800aabe:	bd80      	pop	{r7, pc}

0800aac0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>:
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     * @param  alpha (Optional) the alpha, default is 255 i.e. solid.
     */
    PainterRGB565(colortype color = 0, uint8_t alpha = 255)
 800aac0:	b580      	push	{r7, lr}
 800aac2:	b084      	sub	sp, #16
 800aac4:	af00      	add	r7, sp, #0
 800aac6:	60f8      	str	r0, [r7, #12]
 800aac8:	60b9      	str	r1, [r7, #8]
 800aaca:	4613      	mov	r3, r2
 800aacc:	71fb      	strb	r3, [r7, #7]
        : AbstractPainterRGB565()
 800aace:	68fb      	ldr	r3, [r7, #12]
 800aad0:	4618      	mov	r0, r3
 800aad2:	f7ff ff6f 	bl	800a9b4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800aad6:	4a09      	ldr	r2, [pc, #36]	; (800aafc <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh+0x3c>)
 800aad8:	68fb      	ldr	r3, [r7, #12]
 800aada:	601a      	str	r2, [r3, #0]
    {
        setColor(color);
 800aadc:	68b9      	ldr	r1, [r7, #8]
 800aade:	68f8      	ldr	r0, [r7, #12]
 800aae0:	f000 f80e 	bl	800ab00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        setAlpha(alpha);
 800aae4:	68fb      	ldr	r3, [r7, #12]
 800aae6:	79fa      	ldrb	r2, [r7, #7]
 800aae8:	4611      	mov	r1, r2
 800aaea:	4618      	mov	r0, r3
 800aaec:	f7ff ff2a 	bl	800a944 <_ZN8touchgfx15AbstractPainter8setAlphaEh>
    }
 800aaf0:	68fb      	ldr	r3, [r7, #12]
 800aaf2:	4618      	mov	r0, r3
 800aaf4:	3710      	adds	r7, #16
 800aaf6:	46bd      	mov	sp, r7
 800aaf8:	bd80      	pop	{r7, pc}
 800aafa:	bf00      	nop
 800aafc:	0803057c 	.word	0x0803057c

0800ab00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    /**
     * Sets color and alpha to use when drawing the CanvasWidget.
     *
     * @param  color The color.
     */
    void setColor(colortype color)
 800ab00:	b580      	push	{r7, lr}
 800ab02:	b082      	sub	sp, #8
 800ab04:	af00      	add	r7, sp, #0
 800ab06:	6078      	str	r0, [r7, #4]
 800ab08:	6039      	str	r1, [r7, #0]
    {
        painterColor = color;
 800ab0a:	463b      	mov	r3, r7
 800ab0c:	4618      	mov	r0, r3
 800ab0e:	f7ff fa50 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 800ab12:	4603      	mov	r3, r0
 800ab14:	b29a      	uxth	r2, r3
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	829a      	strh	r2, [r3, #20]
        painterRed = painterColor & RMASK;
 800ab1a:	687b      	ldr	r3, [r7, #4]
 800ab1c:	8a9a      	ldrh	r2, [r3, #20]
 800ab1e:	4b0b      	ldr	r3, [pc, #44]	; (800ab4c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x4c>)
 800ab20:	4013      	ands	r3, r2
 800ab22:	b29a      	uxth	r2, r3
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	82da      	strh	r2, [r3, #22]
        painterGreen = painterColor & GMASK;
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	8a9b      	ldrh	r3, [r3, #20]
 800ab2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 800ab30:	b29a      	uxth	r2, r3
 800ab32:	687b      	ldr	r3, [r7, #4]
 800ab34:	831a      	strh	r2, [r3, #24]
        painterBlue = painterColor & BMASK;
 800ab36:	687b      	ldr	r3, [r7, #4]
 800ab38:	8a9b      	ldrh	r3, [r3, #20]
 800ab3a:	f003 031f 	and.w	r3, r3, #31
 800ab3e:	b29a      	uxth	r2, r3
 800ab40:	687b      	ldr	r3, [r7, #4]
 800ab42:	835a      	strh	r2, [r3, #26]
    }
 800ab44:	bf00      	nop
 800ab46:	3708      	adds	r7, #8
 800ab48:	46bd      	mov	sp, r7
 800ab4a:	bd80      	pop	{r7, pc}
 800ab4c:	fffff800 	.word	0xfffff800

0800ab50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param  bitmap (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bitmap = Bitmap())
 800ab50:	b580      	push	{r7, lr}
 800ab52:	b082      	sub	sp, #8
 800ab54:	af00      	add	r7, sp, #0
 800ab56:	6078      	str	r0, [r7, #4]
 800ab58:	6039      	str	r1, [r7, #0]
        : Widget(), alpha(255)
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	4618      	mov	r0, r3
 800ab5e:	2326      	movs	r3, #38	; 0x26
 800ab60:	461a      	mov	r2, r3
 800ab62:	2100      	movs	r1, #0
 800ab64:	f021 fa66 	bl	802c034 <memset>
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	4618      	mov	r0, r3
 800ab6c:	f7ff fcc4 	bl	800a4f8 <_ZN8touchgfx6WidgetC1Ev>
 800ab70:	4a0b      	ldr	r2, [pc, #44]	; (800aba0 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x50>)
 800ab72:	687b      	ldr	r3, [r7, #4]
 800ab74:	601a      	str	r2, [r3, #0]
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	3326      	adds	r3, #38	; 0x26
 800ab7a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800ab7e:	4618      	mov	r0, r3
 800ab80:	f7ff fa5a 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800ab84:	687b      	ldr	r3, [r7, #4]
 800ab86:	22ff      	movs	r2, #255	; 0xff
 800ab88:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
    {
        setBitmap(bitmap);
 800ab8c:	6839      	ldr	r1, [r7, #0]
 800ab8e:	6878      	ldr	r0, [r7, #4]
 800ab90:	f00e ff3e 	bl	8019a10 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	4618      	mov	r0, r3
 800ab98:	3708      	adds	r7, #8
 800ab9a:	46bd      	mov	sp, r7
 800ab9c:	bd80      	pop	{r7, pc}
 800ab9e:	bf00      	nop
 800aba0:	080311e0 	.word	0x080311e0

0800aba4 <_ZN8touchgfx4ViewI17MainViewPresenterED1Ev>:
class View : public Screen
 800aba4:	b580      	push	{r7, lr}
 800aba6:	b082      	sub	sp, #8
 800aba8:	af00      	add	r7, sp, #0
 800abaa:	6078      	str	r0, [r7, #4]
 800abac:	4a05      	ldr	r2, [pc, #20]	; (800abc4 <_ZN8touchgfx4ViewI17MainViewPresenterED1Ev+0x20>)
 800abae:	687b      	ldr	r3, [r7, #4]
 800abb0:	601a      	str	r2, [r3, #0]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	4618      	mov	r0, r3
 800abb6:	f7ff fc09 	bl	800a3cc <_ZN8touchgfx6ScreenD1Ev>
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	4618      	mov	r0, r3
 800abbe:	3708      	adds	r7, #8
 800abc0:	46bd      	mov	sp, r7
 800abc2:	bd80      	pop	{r7, pc}
 800abc4:	0802f090 	.word	0x0802f090

0800abc8 <_ZN8touchgfx4ViewI17MainViewPresenterED0Ev>:
 800abc8:	b580      	push	{r7, lr}
 800abca:	b082      	sub	sp, #8
 800abcc:	af00      	add	r7, sp, #0
 800abce:	6078      	str	r0, [r7, #4]
 800abd0:	6878      	ldr	r0, [r7, #4]
 800abd2:	f7ff ffe7 	bl	800aba4 <_ZN8touchgfx4ViewI17MainViewPresenterED1Ev>
 800abd6:	2140      	movs	r1, #64	; 0x40
 800abd8:	6878      	ldr	r0, [r7, #4]
 800abda:	f020 ff44 	bl	802ba66 <_ZdlPvj>
 800abde:	687b      	ldr	r3, [r7, #4]
 800abe0:	4618      	mov	r0, r3
 800abe2:	3708      	adds	r7, #8
 800abe4:	46bd      	mov	sp, r7
 800abe6:	bd80      	pop	{r7, pc}

0800abe8 <_ZN16MainViewViewBaseD1Ev>:

class MainViewViewBase : public touchgfx::View<MainViewPresenter>
{
public:
    MainViewViewBase();
    virtual ~MainViewViewBase() {}
 800abe8:	b580      	push	{r7, lr}
 800abea:	b082      	sub	sp, #8
 800abec:	af00      	add	r7, sp, #0
 800abee:	6078      	str	r0, [r7, #4]
 800abf0:	4a3f      	ldr	r2, [pc, #252]	; (800acf0 <_ZN16MainViewViewBaseD1Ev+0x108>)
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	601a      	str	r2, [r3, #0]
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	f503 634e 	add.w	r3, r3, #3296	; 0xce0
 800abfc:	4618      	mov	r0, r3
 800abfe:	f003 fa01 	bl	800e004 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800ac08:	4618      	mov	r0, r3
 800ac0a:	f003 fb2f 	bl	800e26c <_ZN8touchgfx5ImageD1Ev>
 800ac0e:	687b      	ldr	r3, [r7, #4]
 800ac10:	f503 6341 	add.w	r3, r3, #3088	; 0xc10
 800ac14:	4618      	mov	r0, r3
 800ac16:	f003 fb29 	bl	800e26c <_ZN8touchgfx5ImageD1Ev>
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	f603 33d4 	addw	r3, r3, #3028	; 0xbd4
 800ac20:	4618      	mov	r0, r3
 800ac22:	f7ff fda9 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800ac26:	687b      	ldr	r3, [r7, #4]
 800ac28:	f603 3398 	addw	r3, r3, #2968	; 0xb98
 800ac2c:	4618      	mov	r0, r3
 800ac2e:	f7ff fda3 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800ac32:	687b      	ldr	r3, [r7, #4]
 800ac34:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800ac38:	4618      	mov	r0, r3
 800ac3a:	f7ff fd9d 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800ac3e:	687b      	ldr	r3, [r7, #4]
 800ac40:	f603 3328 	addw	r3, r3, #2856	; 0xb28
 800ac44:	4618      	mov	r0, r3
 800ac46:	f003 faef 	bl	800e228 <_ZN8touchgfx6ButtonD1Ev>
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	f603 23f4 	addw	r3, r3, #2804	; 0xaf4
 800ac50:	4618      	mov	r0, r3
 800ac52:	f003 fae9 	bl	800e228 <_ZN8touchgfx6ButtonD1Ev>
 800ac56:	687b      	ldr	r3, [r7, #4]
 800ac58:	f503 632c 	add.w	r3, r3, #2752	; 0xac0
 800ac5c:	4618      	mov	r0, r3
 800ac5e:	f003 fae3 	bl	800e228 <_ZN8touchgfx6ButtonD1Ev>
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800ac68:	4618      	mov	r0, r3
 800ac6a:	f003 fabb 	bl	800e1e4 <_ZN8touchgfx17GraphElementGridXD1Ev>
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	f503 6326 	add.w	r3, r3, #2656	; 0xa60
 800ac74:	4618      	mov	r0, r3
 800ac76:	f003 fa93 	bl	800e1a0 <_ZN8touchgfx13PainterRGB565D1Ev>
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	f603 2328 	addw	r3, r3, #2600	; 0xa28
 800ac80:	4618      	mov	r0, r3
 800ac82:	f003 fa6b 	bl	800e15c <_ZN8touchgfx20GraphElementDiamondsD1Ev>
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ac8c:	4618      	mov	r0, r3
 800ac8e:	f003 f9db 	bl	800e048 <_ZN8touchgfx17GraphWrapAndClearILs460EED1Ev>
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	f503 73c2 	add.w	r3, r3, #388	; 0x184
 800ac98:	4618      	mov	r0, r3
 800ac9a:	f003 f9f9 	bl	800e090 <_ZN8touchgfx3BoxD1Ev>
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800aca4:	4618      	mov	r0, r3
 800aca6:	f003 fa37 	bl	800e118 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800acb0:	4618      	mov	r0, r3
 800acb2:	f003 fa0f 	bl	800e0d4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	33d4      	adds	r3, #212	; 0xd4
 800acba:	4618      	mov	r0, r3
 800acbc:	f003 f9e8 	bl	800e090 <_ZN8touchgfx3BoxD1Ev>
 800acc0:	687b      	ldr	r3, [r7, #4]
 800acc2:	3398      	adds	r3, #152	; 0x98
 800acc4:	4618      	mov	r0, r3
 800acc6:	f7ff fd57 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	336c      	adds	r3, #108	; 0x6c
 800acce:	4618      	mov	r0, r3
 800acd0:	f003 f9de 	bl	800e090 <_ZN8touchgfx3BoxD1Ev>
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	3340      	adds	r3, #64	; 0x40
 800acd8:	4618      	mov	r0, r3
 800acda:	f003 f9d9 	bl	800e090 <_ZN8touchgfx3BoxD1Ev>
 800acde:	687b      	ldr	r3, [r7, #4]
 800ace0:	4618      	mov	r0, r3
 800ace2:	f7ff ff5f 	bl	800aba4 <_ZN8touchgfx4ViewI17MainViewPresenterED1Ev>
 800ace6:	687b      	ldr	r3, [r7, #4]
 800ace8:	4618      	mov	r0, r3
 800acea:	3708      	adds	r7, #8
 800acec:	46bd      	mov	sp, r7
 800acee:	bd80      	pop	{r7, pc}
 800acf0:	0802ef14 	.word	0x0802ef14

0800acf4 <_ZN16MainViewViewBaseD0Ev>:
 800acf4:	b580      	push	{r7, lr}
 800acf6:	b082      	sub	sp, #8
 800acf8:	af00      	add	r7, sp, #0
 800acfa:	6078      	str	r0, [r7, #4]
 800acfc:	6878      	ldr	r0, [r7, #4]
 800acfe:	f7ff ff73 	bl	800abe8 <_ZN16MainViewViewBaseD1Ev>
 800ad02:	f642 1110 	movw	r1, #10512	; 0x2910
 800ad06:	6878      	ldr	r0, [r7, #4]
 800ad08:	f020 fead 	bl	802ba66 <_ZdlPvj>
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	4618      	mov	r0, r3
 800ad10:	3708      	adds	r7, #8
 800ad12:	46bd      	mov	sp, r7
 800ad14:	bd80      	pop	{r7, pc}

0800ad16 <_ZN16MainViewViewBase17onBtnMinusPressedEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void onBtnMinusPressed()
 800ad16:	b480      	push	{r7}
 800ad18:	b083      	sub	sp, #12
 800ad1a:	af00      	add	r7, sp, #0
 800ad1c:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in MainView
    }
 800ad1e:	bf00      	nop
 800ad20:	370c      	adds	r7, #12
 800ad22:	46bd      	mov	sp, r7
 800ad24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad28:	4770      	bx	lr

0800ad2a <_ZN16MainViewViewBase16onBtnPlusPressedEv>:

    virtual void onBtnPlusPressed()
 800ad2a:	b480      	push	{r7}
 800ad2c:	b083      	sub	sp, #12
 800ad2e:	af00      	add	r7, sp, #0
 800ad30:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in MainView
    }
 800ad32:	bf00      	nop
 800ad34:	370c      	adds	r7, #12
 800ad36:	46bd      	mov	sp, r7
 800ad38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad3c:	4770      	bx	lr

0800ad3e <_ZN16MainViewViewBase24onCheckBoxTriggerPressedEv>:

    virtual void onCheckBoxTriggerPressed()
 800ad3e:	b480      	push	{r7}
 800ad40:	b083      	sub	sp, #12
 800ad42:	af00      	add	r7, sp, #0
 800ad44:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in MainView
    }
 800ad46:	bf00      	nop
 800ad48:	370c      	adds	r7, #12
 800ad4a:	46bd      	mov	sp, r7
 800ad4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad50:	4770      	bx	lr
	...

0800ad54 <_ZN8touchgfx12CanvasWidgetD1Ev>:
class CanvasWidget : public Widget
 800ad54:	b580      	push	{r7, lr}
 800ad56:	b082      	sub	sp, #8
 800ad58:	af00      	add	r7, sp, #0
 800ad5a:	6078      	str	r0, [r7, #4]
 800ad5c:	4a05      	ldr	r2, [pc, #20]	; (800ad74 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	601a      	str	r2, [r3, #0]
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	4618      	mov	r0, r3
 800ad66:	f7ff fbd9 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	4618      	mov	r0, r3
 800ad6e:	3708      	adds	r7, #8
 800ad70:	46bd      	mov	sp, r7
 800ad72:	bd80      	pop	{r7, pc}
 800ad74:	08030630 	.word	0x08030630

0800ad78 <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800ad78:	b580      	push	{r7, lr}
 800ad7a:	b082      	sub	sp, #8
 800ad7c:	af00      	add	r7, sp, #0
 800ad7e:	6078      	str	r0, [r7, #4]
 800ad80:	6878      	ldr	r0, [r7, #4]
 800ad82:	f7ff ffe7 	bl	800ad54 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800ad86:	2130      	movs	r1, #48	; 0x30
 800ad88:	6878      	ldr	r0, [r7, #4]
 800ad8a:	f020 fe6c 	bl	802ba66 <_ZdlPvj>
 800ad8e:	687b      	ldr	r3, [r7, #4]
 800ad90:	4618      	mov	r0, r3
 800ad92:	3708      	adds	r7, #8
 800ad94:	46bd      	mov	sp, r7
 800ad96:	bd80      	pop	{r7, pc}

0800ad98 <_ZN8touchgfx20AbstractGraphElementD1Ev>:
#include <touchgfx/widgets/graph/AbstractDataGraph.hpp>

namespace touchgfx
{
/** An abstract graph element. Declares a couple of useful functions to help subclasses which use CWR (Canvas Widget Renderer). */
class AbstractGraphElement : public CanvasWidget
 800ad98:	b580      	push	{r7, lr}
 800ad9a:	b082      	sub	sp, #8
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	4a05      	ldr	r2, [pc, #20]	; (800adb8 <_ZN8touchgfx20AbstractGraphElementD1Ev+0x20>)
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	601a      	str	r2, [r3, #0]
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	4618      	mov	r0, r3
 800adaa:	f7ff ffd3 	bl	800ad54 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800adae:	687b      	ldr	r3, [r7, #4]
 800adb0:	4618      	mov	r0, r3
 800adb2:	3708      	adds	r7, #8
 800adb4:	46bd      	mov	sp, r7
 800adb6:	bd80      	pop	{r7, pc}
 800adb8:	0802f0c4 	.word	0x0802f0c4

0800adbc <_ZN8touchgfx20AbstractGraphElementD0Ev>:
 800adbc:	b580      	push	{r7, lr}
 800adbe:	b082      	sub	sp, #8
 800adc0:	af00      	add	r7, sp, #0
 800adc2:	6078      	str	r0, [r7, #4]
 800adc4:	6878      	ldr	r0, [r7, #4]
 800adc6:	f7ff ffe7 	bl	800ad98 <_ZN8touchgfx20AbstractGraphElementD1Ev>
 800adca:	2134      	movs	r1, #52	; 0x34
 800adcc:	6878      	ldr	r0, [r7, #4]
 800adce:	f020 fe4a 	bl	802ba66 <_ZdlPvj>
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	4618      	mov	r0, r3
 800add6:	3708      	adds	r7, #8
 800add8:	46bd      	mov	sp, r7
 800adda:	bd80      	pop	{r7, pc}

0800addc <_ZN8touchgfx25AbstractGraphElementNoCWRD1Ev>:
     */
    bool isCenterInvisible(const AbstractDataGraph* graph, int16_t index) const;
};

/** An abstract graph element. Declares a couple of useful functions to help subclasses which do not use CWR (Canvas Widget Renderer). */
class AbstractGraphElementNoCWR : public AbstractGraphElement
 800addc:	b580      	push	{r7, lr}
 800adde:	b082      	sub	sp, #8
 800ade0:	af00      	add	r7, sp, #0
 800ade2:	6078      	str	r0, [r7, #4]
 800ade4:	4a05      	ldr	r2, [pc, #20]	; (800adfc <_ZN8touchgfx25AbstractGraphElementNoCWRD1Ev+0x20>)
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	601a      	str	r2, [r3, #0]
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	4618      	mov	r0, r3
 800adee:	f7ff ffd3 	bl	800ad98 <_ZN8touchgfx20AbstractGraphElementD1Ev>
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	4618      	mov	r0, r3
 800adf6:	3708      	adds	r7, #8
 800adf8:	46bd      	mov	sp, r7
 800adfa:	bd80      	pop	{r7, pc}
 800adfc:	08030bd4 	.word	0x08030bd4

0800ae00 <_ZN8touchgfx25AbstractGraphElementNoCWRD0Ev>:
 800ae00:	b580      	push	{r7, lr}
 800ae02:	b082      	sub	sp, #8
 800ae04:	af00      	add	r7, sp, #0
 800ae06:	6078      	str	r0, [r7, #4]
 800ae08:	6878      	ldr	r0, [r7, #4]
 800ae0a:	f7ff ffe7 	bl	800addc <_ZN8touchgfx25AbstractGraphElementNoCWRD1Ev>
 800ae0e:	2138      	movs	r1, #56	; 0x38
 800ae10:	6878      	ldr	r0, [r7, #4]
 800ae12:	f020 fe28 	bl	802ba66 <_ZdlPvj>
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	4618      	mov	r0, r3
 800ae1a:	3708      	adds	r7, #8
 800ae1c:	46bd      	mov	sp, r7
 800ae1e:	bd80      	pop	{r7, pc}

0800ae20 <_ZN8touchgfx20GraphElementGridBaseD1Ev>:
};

/**
 * GraphElementGridBase is a helper class used to implement classed to draw grid lines in the graph.
 */
class GraphElementGridBase : public AbstractGraphElementNoCWR
 800ae20:	b580      	push	{r7, lr}
 800ae22:	b082      	sub	sp, #8
 800ae24:	af00      	add	r7, sp, #0
 800ae26:	6078      	str	r0, [r7, #4]
 800ae28:	4a05      	ldr	r2, [pc, #20]	; (800ae40 <_ZN8touchgfx20GraphElementGridBaseD1Ev+0x20>)
 800ae2a:	687b      	ldr	r3, [r7, #4]
 800ae2c:	601a      	str	r2, [r3, #0]
 800ae2e:	687b      	ldr	r3, [r7, #4]
 800ae30:	4618      	mov	r0, r3
 800ae32:	f7ff ffd3 	bl	800addc <_ZN8touchgfx25AbstractGraphElementNoCWRD1Ev>
 800ae36:	687b      	ldr	r3, [r7, #4]
 800ae38:	4618      	mov	r0, r3
 800ae3a:	3708      	adds	r7, #8
 800ae3c:	46bd      	mov	sp, r7
 800ae3e:	bd80      	pop	{r7, pc}
 800ae40:	08030b4c 	.word	0x08030b4c

0800ae44 <_ZN8touchgfx20GraphElementGridBaseD0Ev>:
 800ae44:	b580      	push	{r7, lr}
 800ae46:	b082      	sub	sp, #8
 800ae48:	af00      	add	r7, sp, #0
 800ae4a:	6078      	str	r0, [r7, #4]
 800ae4c:	6878      	ldr	r0, [r7, #4]
 800ae4e:	f7ff ffe7 	bl	800ae20 <_ZN8touchgfx20GraphElementGridBaseD1Ev>
 800ae52:	2144      	movs	r1, #68	; 0x44
 800ae54:	6878      	ldr	r0, [r7, #4]
 800ae56:	f020 fe06 	bl	802ba66 <_ZdlPvj>
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	4618      	mov	r0, r3
 800ae5e:	3708      	adds	r7, #8
 800ae60:	46bd      	mov	sp, r7
 800ae62:	bd80      	pop	{r7, pc}

0800ae64 <_ZN8touchgfx17GraphElementGridXC1Ev>:
 * GraphElementGridX draws vertical lines at selected intervals along the x axis. By combining two
 * GraphElementGridX instances, it is possible to have minor and major grid lines.
 *
 * @note The grid lines are drawn using LCD::fillRect for higher performance.
 */
class GraphElementGridX : public GraphElementGridBase
 800ae64:	b580      	push	{r7, lr}
 800ae66:	b082      	sub	sp, #8
 800ae68:	af00      	add	r7, sp, #0
 800ae6a:	6078      	str	r0, [r7, #4]
 800ae6c:	687b      	ldr	r3, [r7, #4]
 800ae6e:	4618      	mov	r0, r3
 800ae70:	f00d fe18 	bl	8018aa4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800ae74:	4a03      	ldr	r2, [pc, #12]	; (800ae84 <_ZN8touchgfx17GraphElementGridXC1Ev+0x20>)
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	601a      	str	r2, [r3, #0]
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	4618      	mov	r0, r3
 800ae7e:	3708      	adds	r7, #8
 800ae80:	46bd      	mov	sp, r7
 800ae82:	bd80      	pop	{r7, pc}
 800ae84:	08030a44 	.word	0x08030a44

0800ae88 <_ZN16MainViewViewBaseC1Ev>:
#include <gui_generated/mainview_screen/MainViewViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

MainViewViewBase::MainViewViewBase() :
 800ae88:	b590      	push	{r4, r7, lr}
 800ae8a:	b0bf      	sub	sp, #252	; 0xfc
 800ae8c:	af02      	add	r7, sp, #8
 800ae8e:	6078      	str	r0, [r7, #4]
    buttonCallback(this, &MainViewViewBase::buttonCallbackHandler)
 800ae90:	687b      	ldr	r3, [r7, #4]
 800ae92:	4618      	mov	r0, r3
 800ae94:	f002 ff90 	bl	800ddb8 <_ZN8touchgfx4ViewI17MainViewPresenterEC1Ev>
 800ae98:	4abf      	ldr	r2, [pc, #764]	; (800b198 <_ZN16MainViewViewBaseC1Ev+0x310>)
 800ae9a:	687b      	ldr	r3, [r7, #4]
 800ae9c:	601a      	str	r2, [r3, #0]
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	3340      	adds	r3, #64	; 0x40
 800aea2:	4618      	mov	r0, r3
 800aea4:	f7ff fbd6 	bl	800a654 <_ZN8touchgfx3BoxC1Ev>
 800aea8:	687b      	ldr	r3, [r7, #4]
 800aeaa:	336c      	adds	r3, #108	; 0x6c
 800aeac:	4618      	mov	r0, r3
 800aeae:	f7ff fbd1 	bl	800a654 <_ZN8touchgfx3BoxC1Ev>
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	3398      	adds	r3, #152	; 0x98
 800aeb6:	4618      	mov	r0, r3
 800aeb8:	f7ff fc14 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800aebc:	687b      	ldr	r3, [r7, #4]
 800aebe:	33d4      	adds	r3, #212	; 0xd4
 800aec0:	4618      	mov	r0, r3
 800aec2:	f7ff fbc7 	bl	800a654 <_ZN8touchgfx3BoxC1Ev>
 800aec6:	687b      	ldr	r3, [r7, #4]
 800aec8:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800aecc:	4618      	mov	r0, r3
 800aece:	f7ff fc9f 	bl	800a810 <_ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev>
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800aed8:	4618      	mov	r0, r3
 800aeda:	f7ff fc75 	bl	800a7c8 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	f503 73c2 	add.w	r3, r3, #388	; 0x184
 800aee4:	4618      	mov	r0, r3
 800aee6:	f7ff fbb5 	bl	800a654 <_ZN8touchgfx3BoxC1Ev>
 800aeea:	687b      	ldr	r3, [r7, #4]
 800aeec:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800aef0:	4618      	mov	r0, r3
 800aef2:	f003 f81f 	bl	800df34 <_ZN8touchgfx17GraphWrapAndClearILs460EEC1Ev>
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	f603 2328 	addw	r3, r3, #2600	; 0xa28
 800aefc:	4618      	mov	r0, r3
 800aefe:	f00d ffb5 	bl	8018e6c <_ZN8touchgfx20GraphElementDiamondsC1Ev>
 800af02:	687b      	ldr	r3, [r7, #4]
 800af04:	f503 6426 	add.w	r4, r3, #2656	; 0xa60
 800af08:	f107 0320 	add.w	r3, r7, #32
 800af0c:	2100      	movs	r1, #0
 800af0e:	4618      	mov	r0, r3
 800af10:	f7ff f840 	bl	8009f94 <_ZN8touchgfx9colortypeC1Em>
 800af14:	22ff      	movs	r2, #255	; 0xff
 800af16:	6a39      	ldr	r1, [r7, #32]
 800af18:	4620      	mov	r0, r4
 800af1a:	f7ff fdd1 	bl	800aac0 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeEh>
 800af1e:	687b      	ldr	r3, [r7, #4]
 800af20:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800af24:	4618      	mov	r0, r3
 800af26:	f7ff ff9d 	bl	800ae64 <_ZN8touchgfx17GraphElementGridXC1Ev>
 800af2a:	687b      	ldr	r3, [r7, #4]
 800af2c:	f503 632c 	add.w	r3, r3, #2752	; 0xac0
 800af30:	4618      	mov	r0, r3
 800af32:	f7ff fb6b 	bl	800a60c <_ZN8touchgfx6ButtonC1Ev>
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	f603 23f4 	addw	r3, r3, #2804	; 0xaf4
 800af3c:	4618      	mov	r0, r3
 800af3e:	f7ff fb65 	bl	800a60c <_ZN8touchgfx6ButtonC1Ev>
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	f603 3328 	addw	r3, r3, #2856	; 0xb28
 800af48:	4618      	mov	r0, r3
 800af4a:	f7ff fb5f 	bl	800a60c <_ZN8touchgfx6ButtonC1Ev>
 800af4e:	687b      	ldr	r3, [r7, #4]
 800af50:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800af54:	4618      	mov	r0, r3
 800af56:	f7ff fbc5 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	f603 3398 	addw	r3, r3, #2968	; 0xb98
 800af60:	4618      	mov	r0, r3
 800af62:	f7ff fbbf 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800af66:	687b      	ldr	r3, [r7, #4]
 800af68:	f603 33d4 	addw	r3, r3, #3028	; 0xbd4
 800af6c:	4618      	mov	r0, r3
 800af6e:	f7ff fbb9 	bl	800a6e4 <_ZN8touchgfx8TextAreaC1Ev>
 800af72:	687b      	ldr	r3, [r7, #4]
 800af74:	f503 6441 	add.w	r4, r3, #3088	; 0xc10
 800af78:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800af7c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800af80:	4618      	mov	r0, r3
 800af82:	f7ff f859 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800af86:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800af8a:	4619      	mov	r1, r3
 800af8c:	4620      	mov	r0, r4
 800af8e:	f7ff fddf 	bl	800ab50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	f603 443c 	addw	r4, r3, #3132	; 0xc3c
 800af98:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800af9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800afa0:	4618      	mov	r0, r3
 800afa2:	f7ff f849 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800afa6:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800afaa:	4619      	mov	r1, r3
 800afac:	4620      	mov	r0, r4
 800afae:	f7ff fdcf 	bl	800ab50 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800afb2:	687b      	ldr	r3, [r7, #4]
 800afb4:	f503 604e 	add.w	r0, r3, #3296	; 0xce0
 800afb8:	4b78      	ldr	r3, [pc, #480]	; (800b19c <_ZN16MainViewViewBaseC1Ev+0x314>)
 800afba:	62fb      	str	r3, [r7, #44]	; 0x2c
 800afbc:	2300      	movs	r3, #0
 800afbe:	633b      	str	r3, [r7, #48]	; 0x30
 800afc0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800afc4:	cb0c      	ldmia	r3, {r2, r3}
 800afc6:	6879      	ldr	r1, [r7, #4]
 800afc8:	f002 ffdc 	bl	800df84 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800afcc:	687b      	ldr	r3, [r7, #4]
 800afce:	f503 634f 	add.w	r3, r3, #3312	; 0xcf0
 800afd2:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
 800afd6:	4618      	mov	r0, r3
 800afd8:	f00e fd86 	bl	8019ae8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>

    __background.setPosition(0, 0, 480, 272);
 800afdc:	687b      	ldr	r3, [r7, #4]
 800afde:	f103 0040 	add.w	r0, r3, #64	; 0x40
 800afe2:	f44f 7388 	mov.w	r3, #272	; 0x110
 800afe6:	9300      	str	r3, [sp, #0]
 800afe8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800afec:	2200      	movs	r2, #0
 800afee:	2100      	movs	r1, #0
 800aff0:	f7ff f88b 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800affa:	2200      	movs	r2, #0
 800affc:	2100      	movs	r1, #0
 800affe:	2000      	movs	r0, #0
 800b000:	f7ff fc3a 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b004:	4603      	mov	r3, r0
 800b006:	4619      	mov	r1, r3
 800b008:	4620      	mov	r0, r4
 800b00a:	f7ff fb47 	bl	800a69c <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    bgView.setPosition(0, 0, 480, 270);
 800b00e:	687b      	ldr	r3, [r7, #4]
 800b010:	f103 006c 	add.w	r0, r3, #108	; 0x6c
 800b014:	f44f 7387 	mov.w	r3, #270	; 0x10e
 800b018:	9300      	str	r3, [sp, #0]
 800b01a:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 800b01e:	2200      	movs	r2, #0
 800b020:	2100      	movs	r1, #0
 800b022:	f7ff f872 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    bgView.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	f103 046c 	add.w	r4, r3, #108	; 0x6c
 800b02c:	22ff      	movs	r2, #255	; 0xff
 800b02e:	21ff      	movs	r1, #255	; 0xff
 800b030:	20ff      	movs	r0, #255	; 0xff
 800b032:	f7ff fc21 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b036:	4603      	mov	r3, r0
 800b038:	4619      	mov	r1, r3
 800b03a:	4620      	mov	r0, r4
 800b03c:	f7ff fb2e 	bl	800a69c <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    labelTitle.setXY(337, 254);
 800b040:	687b      	ldr	r3, [r7, #4]
 800b042:	3398      	adds	r3, #152	; 0x98
 800b044:	22fe      	movs	r2, #254	; 0xfe
 800b046:	f240 1151 	movw	r1, #337	; 0x151
 800b04a:	4618      	mov	r0, r3
 800b04c:	f7ff f89c 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    labelTitle.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800b050:	687b      	ldr	r3, [r7, #4]
 800b052:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800b056:	2200      	movs	r2, #0
 800b058:	2100      	movs	r1, #0
 800b05a:	2000      	movs	r0, #0
 800b05c:	f7ff fc0c 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b060:	4603      	mov	r3, r0
 800b062:	f8c7 409c 	str.w	r4, [r7, #156]	; 0x9c
 800b066:	61fb      	str	r3, [r7, #28]
        this->color = color;
 800b068:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800b06c:	69fa      	ldr	r2, [r7, #28]
 800b06e:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800b070:	bf00      	nop
    labelTitle.setLinespacing(0);
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	3398      	adds	r3, #152	; 0x98
 800b076:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800b07a:	2300      	movs	r3, #0
 800b07c:	f8a7 30a2 	strh.w	r3, [r7, #162]	; 0xa2
        linespace = space;
 800b080:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800b084:	f8b7 20a2 	ldrh.w	r2, [r7, #162]	; 0xa2
 800b088:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800b08a:	bf00      	nop
    labelTitle.setRotation(touchgfx::TEXT_ROTATE_180);
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	3398      	adds	r3, #152	; 0x98
 800b090:	2102      	movs	r1, #2
 800b092:	4618      	mov	r0, r3
 800b094:	f7ff fb60 	bl	800a758 <_ZN8touchgfx8TextArea11setRotationENS_12TextRotationE>
    labelTitle.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));
 800b098:	687b      	ldr	r3, [r7, #4]
 800b09a:	f103 0498 	add.w	r4, r3, #152	; 0x98
 800b09e:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b0a2:	2100      	movs	r1, #0
 800b0a4:	4618      	mov	r0, r3
 800b0a6:	f7ff fb07 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b0aa:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b0ae:	4619      	mov	r1, r3
 800b0b0:	4620      	mov	r0, r4
 800b0b2:	f00e f9ca 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800b0b6:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800b0ba:	4618      	mov	r0, r3
 800b0bc:	f7fe f884 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    bgSignal.setPosition(225, 18, 150, 23);
 800b0c0:	687b      	ldr	r3, [r7, #4]
 800b0c2:	f103 00d4 	add.w	r0, r3, #212	; 0xd4
 800b0c6:	2317      	movs	r3, #23
 800b0c8:	9300      	str	r3, [sp, #0]
 800b0ca:	2396      	movs	r3, #150	; 0x96
 800b0cc:	2212      	movs	r2, #18
 800b0ce:	21e1      	movs	r1, #225	; 0xe1
 800b0d0:	f7ff f81b 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    bgSignal.setColor(touchgfx::Color::getColorFrom24BitRGB(20, 151, 197));
 800b0d4:	687b      	ldr	r3, [r7, #4]
 800b0d6:	f103 04d4 	add.w	r4, r3, #212	; 0xd4
 800b0da:	22c5      	movs	r2, #197	; 0xc5
 800b0dc:	2197      	movs	r1, #151	; 0x97
 800b0de:	2014      	movs	r0, #20
 800b0e0:	f7ff fbca 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b0e4:	4603      	mov	r3, r0
 800b0e6:	4619      	mov	r1, r3
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	f7ff fad7 	bl	800a69c <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    labelSignal.setPosition(232, 24, 137, 13);
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 800b0f4:	230d      	movs	r3, #13
 800b0f6:	9300      	str	r3, [sp, #0]
 800b0f8:	2389      	movs	r3, #137	; 0x89
 800b0fa:	2218      	movs	r2, #24
 800b0fc:	21e8      	movs	r1, #232	; 0xe8
 800b0fe:	f7ff f804 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    labelSignal.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800b102:	687b      	ldr	r3, [r7, #4]
 800b104:	f503 7480 	add.w	r4, r3, #256	; 0x100
 800b108:	2200      	movs	r2, #0
 800b10a:	2100      	movs	r1, #0
 800b10c:	2000      	movs	r0, #0
 800b10e:	f7ff fbb3 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b112:	4603      	mov	r3, r0
 800b114:	f8c7 40a8 	str.w	r4, [r7, #168]	; 0xa8
 800b118:	61bb      	str	r3, [r7, #24]
        this->color = color;
 800b11a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 800b11e:	69ba      	ldr	r2, [r7, #24]
 800b120:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800b122:	bf00      	nop
    labelSignal.setLinespacing(0);
 800b124:	687b      	ldr	r3, [r7, #4]
 800b126:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800b12a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b12e:	2300      	movs	r3, #0
 800b130:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
        linespace = space;
 800b134:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 800b138:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 800b13c:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800b13e:	bf00      	nop
    labelSignal.setRotation(touchgfx::TEXT_ROTATE_180);
 800b140:	687b      	ldr	r3, [r7, #4]
 800b142:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800b146:	2102      	movs	r1, #2
 800b148:	4618      	mov	r0, r3
 800b14a:	f7ff fb05 	bl	800a758 <_ZN8touchgfx8TextArea11setRotationENS_12TextRotationE>
    touchgfx::Unicode::snprintf(labelSignalBuffer1, LABELSIGNALBUFFER1_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID3).getText());
 800b14e:	687b      	ldr	r3, [r7, #4]
 800b150:	f603 4468 	addw	r4, r3, #3176	; 0xc68
 800b154:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b158:	2102      	movs	r1, #2
 800b15a:	4618      	mov	r0, r3
 800b15c:	f7ff faac 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b160:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b164:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
    }

private:
    FORCE_INLINE_FUNCTION void assertValid() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b168:	4b0d      	ldr	r3, [pc, #52]	; (800b1a0 <_ZN16MainViewViewBaseC1Ev+0x318>)
 800b16a:	681b      	ldr	r3, [r3, #0]
 800b16c:	2b00      	cmp	r3, #0
 800b16e:	d105      	bne.n	800b17c <_ZN16MainViewViewBaseC1Ev+0x2f4>
 800b170:	4b0c      	ldr	r3, [pc, #48]	; (800b1a4 <_ZN16MainViewViewBaseC1Ev+0x31c>)
 800b172:	4a0d      	ldr	r2, [pc, #52]	; (800b1a8 <_ZN16MainViewViewBaseC1Ev+0x320>)
 800b174:	21b1      	movs	r1, #177	; 0xb1
 800b176:	480d      	ldr	r0, [pc, #52]	; (800b1ac <_ZN16MainViewViewBaseC1Ev+0x324>)
 800b178:	f020 feb6 	bl	802bee8 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b17c:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 800b180:	889a      	ldrh	r2, [r3, #4]
 800b182:	4b0b      	ldr	r3, [pc, #44]	; (800b1b0 <_ZN16MainViewViewBaseC1Ev+0x328>)
 800b184:	881b      	ldrh	r3, [r3, #0]
 800b186:	429a      	cmp	r2, r3
 800b188:	d316      	bcc.n	800b1b8 <_ZN16MainViewViewBaseC1Ev+0x330>
 800b18a:	4b0a      	ldr	r3, [pc, #40]	; (800b1b4 <_ZN16MainViewViewBaseC1Ev+0x32c>)
 800b18c:	4a06      	ldr	r2, [pc, #24]	; (800b1a8 <_ZN16MainViewViewBaseC1Ev+0x320>)
 800b18e:	21b2      	movs	r1, #178	; 0xb2
 800b190:	4806      	ldr	r0, [pc, #24]	; (800b1ac <_ZN16MainViewViewBaseC1Ev+0x324>)
 800b192:	f020 fea9 	bl	802bee8 <__assert_func>
 800b196:	bf00      	nop
 800b198:	0802ef14 	.word	0x0802ef14
 800b19c:	0800dd11 	.word	0x0800dd11
 800b1a0:	200041d8 	.word	0x200041d8
 800b1a4:	0802dab0 	.word	0x0802dab0
 800b1a8:	0802daf4 	.word	0x0802daf4
 800b1ac:	0802db24 	.word	0x0802db24
 800b1b0:	200041dc 	.word	0x200041dc
 800b1b4:	0802dbbc 	.word	0x0802dbbc
    }
 800b1b8:	bf00      	nop
        return texts->getText(typedTextId);
 800b1ba:	4b64      	ldr	r3, [pc, #400]	; (800b34c <_ZN16MainViewViewBaseC1Ev+0x4c4>)
 800b1bc:	681b      	ldr	r3, [r3, #0]
 800b1be:	f8b7 2040 	ldrh.w	r2, [r7, #64]	; 0x40
 800b1c2:	4611      	mov	r1, r2
 800b1c4:	4618      	mov	r0, r3
 800b1c6:	f003 fa53 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 800b1ca:	4603      	mov	r3, r0
 800b1cc:	bf00      	nop
 800b1ce:	4a60      	ldr	r2, [pc, #384]	; (800b350 <_ZN16MainViewViewBaseC1Ev+0x4c8>)
 800b1d0:	2114      	movs	r1, #20
 800b1d2:	4620      	mov	r0, r4
 800b1d4:	f013 f93a 	bl	801e44c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b1d8:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800b1dc:	4618      	mov	r0, r3
 800b1de:	f7fd fff3 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>
    labelSignal.setWildcard1(labelSignalBuffer1);
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	f503 7280 	add.w	r2, r3, #256	; 0x100
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	f603 4368 	addw	r3, r3, #3176	; 0xc68
 800b1ee:	4619      	mov	r1, r3
 800b1f0:	4610      	mov	r0, r2
 800b1f2:	f7ff fb25 	bl	800a840 <_ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard1EPKt>
    touchgfx::Unicode::snprintf(labelSignalBuffer2, LABELSIGNALBUFFER2_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID4).getText());
 800b1f6:	687b      	ldr	r3, [r7, #4]
 800b1f8:	f503 6449 	add.w	r4, r3, #3216	; 0xc90
 800b1fc:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800b200:	2103      	movs	r1, #3
 800b202:	4618      	mov	r0, r3
 800b204:	f7ff fa58 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b208:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800b20c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b210:	4b50      	ldr	r3, [pc, #320]	; (800b354 <_ZN16MainViewViewBaseC1Ev+0x4cc>)
 800b212:	681b      	ldr	r3, [r3, #0]
 800b214:	2b00      	cmp	r3, #0
 800b216:	d105      	bne.n	800b224 <_ZN16MainViewViewBaseC1Ev+0x39c>
 800b218:	4b4f      	ldr	r3, [pc, #316]	; (800b358 <_ZN16MainViewViewBaseC1Ev+0x4d0>)
 800b21a:	4a50      	ldr	r2, [pc, #320]	; (800b35c <_ZN16MainViewViewBaseC1Ev+0x4d4>)
 800b21c:	21b1      	movs	r1, #177	; 0xb1
 800b21e:	4850      	ldr	r0, [pc, #320]	; (800b360 <_ZN16MainViewViewBaseC1Ev+0x4d8>)
 800b220:	f020 fe62 	bl	802bee8 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b224:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800b228:	889a      	ldrh	r2, [r3, #4]
 800b22a:	4b4e      	ldr	r3, [pc, #312]	; (800b364 <_ZN16MainViewViewBaseC1Ev+0x4dc>)
 800b22c:	881b      	ldrh	r3, [r3, #0]
 800b22e:	429a      	cmp	r2, r3
 800b230:	d305      	bcc.n	800b23e <_ZN16MainViewViewBaseC1Ev+0x3b6>
 800b232:	4b4d      	ldr	r3, [pc, #308]	; (800b368 <_ZN16MainViewViewBaseC1Ev+0x4e0>)
 800b234:	4a49      	ldr	r2, [pc, #292]	; (800b35c <_ZN16MainViewViewBaseC1Ev+0x4d4>)
 800b236:	21b2      	movs	r1, #178	; 0xb2
 800b238:	4849      	ldr	r0, [pc, #292]	; (800b360 <_ZN16MainViewViewBaseC1Ev+0x4d8>)
 800b23a:	f020 fe55 	bl	802bee8 <__assert_func>
    }
 800b23e:	bf00      	nop
        return texts->getText(typedTextId);
 800b240:	4b42      	ldr	r3, [pc, #264]	; (800b34c <_ZN16MainViewViewBaseC1Ev+0x4c4>)
 800b242:	681b      	ldr	r3, [r3, #0]
 800b244:	f8b7 2048 	ldrh.w	r2, [r7, #72]	; 0x48
 800b248:	4611      	mov	r1, r2
 800b24a:	4618      	mov	r0, r3
 800b24c:	f003 fa10 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 800b250:	4603      	mov	r3, r0
 800b252:	bf00      	nop
 800b254:	4a3e      	ldr	r2, [pc, #248]	; (800b350 <_ZN16MainViewViewBaseC1Ev+0x4c8>)
 800b256:	2114      	movs	r1, #20
 800b258:	4620      	mov	r0, r4
 800b25a:	f013 f8f7 	bl	801e44c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b25e:	f107 0344 	add.w	r3, r7, #68	; 0x44
 800b262:	4618      	mov	r0, r3
 800b264:	f7fd ffb0 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>
    labelSignal.setWildcard2(labelSignalBuffer2);
 800b268:	687b      	ldr	r3, [r7, #4]
 800b26a:	f503 7280 	add.w	r2, r3, #256	; 0x100
 800b26e:	687b      	ldr	r3, [r7, #4]
 800b270:	f503 6349 	add.w	r3, r3, #3216	; 0xc90
 800b274:	4619      	mov	r1, r3
 800b276:	4610      	mov	r0, r2
 800b278:	f7ff faf0 	bl	800a85c <_ZN8touchgfx24TextAreaWithTwoWildcards12setWildcard2EPKt>
    labelSignal.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));
 800b27c:	687b      	ldr	r3, [r7, #4]
 800b27e:	f503 7480 	add.w	r4, r3, #256	; 0x100
 800b282:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800b286:	2101      	movs	r1, #1
 800b288:	4618      	mov	r0, r3
 800b28a:	f7ff fa15 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b28e:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800b292:	4619      	mov	r1, r3
 800b294:	4620      	mov	r0, r4
 800b296:	f00e f8d8 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800b29a:	f107 034c 	add.w	r3, r7, #76	; 0x4c
 800b29e:	4618      	mov	r0, r3
 800b2a0:	f7fd ff92 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    labelDivTime.setPosition(125, 24, 70, 13);
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	f503 70a2 	add.w	r0, r3, #324	; 0x144
 800b2aa:	230d      	movs	r3, #13
 800b2ac:	9300      	str	r3, [sp, #0]
 800b2ae:	2346      	movs	r3, #70	; 0x46
 800b2b0:	2218      	movs	r2, #24
 800b2b2:	217d      	movs	r1, #125	; 0x7d
 800b2b4:	f7fe ff29 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    labelDivTime.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800b2b8:	687b      	ldr	r3, [r7, #4]
 800b2ba:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b2be:	2200      	movs	r2, #0
 800b2c0:	2100      	movs	r1, #0
 800b2c2:	2000      	movs	r0, #0
 800b2c4:	f7ff fad8 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b2c8:	4603      	mov	r3, r0
 800b2ca:	f8c7 40bc 	str.w	r4, [r7, #188]	; 0xbc
 800b2ce:	617b      	str	r3, [r7, #20]
        this->color = color;
 800b2d0:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 800b2d4:	697a      	ldr	r2, [r7, #20]
 800b2d6:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800b2d8:	bf00      	nop
    labelDivTime.setLinespacing(0);
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b2e0:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800b2e4:	2300      	movs	r3, #0
 800b2e6:	f8a7 30c2 	strh.w	r3, [r7, #194]	; 0xc2
        linespace = space;
 800b2ea:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800b2ee:	f8b7 20c2 	ldrh.w	r2, [r7, #194]	; 0xc2
 800b2f2:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800b2f4:	bf00      	nop
    labelDivTime.setRotation(touchgfx::TEXT_ROTATE_180);
 800b2f6:	687b      	ldr	r3, [r7, #4]
 800b2f8:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800b2fc:	2102      	movs	r1, #2
 800b2fe:	4618      	mov	r0, r3
 800b300:	f7ff fa2a 	bl	800a758 <_ZN8touchgfx8TextArea11setRotationENS_12TextRotationE>
    Unicode::snprintf(labelDivTimeBuffer, LABELDIVTIME_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID6).getText());
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	f603 44b8 	addw	r4, r3, #3256	; 0xcb8
 800b30a:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800b30e:	2105      	movs	r1, #5
 800b310:	4618      	mov	r0, r3
 800b312:	f7ff f9d1 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b316:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800b31a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800b31e:	4b0d      	ldr	r3, [pc, #52]	; (800b354 <_ZN16MainViewViewBaseC1Ev+0x4cc>)
 800b320:	681b      	ldr	r3, [r3, #0]
 800b322:	2b00      	cmp	r3, #0
 800b324:	d105      	bne.n	800b332 <_ZN16MainViewViewBaseC1Ev+0x4aa>
 800b326:	4b0c      	ldr	r3, [pc, #48]	; (800b358 <_ZN16MainViewViewBaseC1Ev+0x4d0>)
 800b328:	4a0c      	ldr	r2, [pc, #48]	; (800b35c <_ZN16MainViewViewBaseC1Ev+0x4d4>)
 800b32a:	21b1      	movs	r1, #177	; 0xb1
 800b32c:	480c      	ldr	r0, [pc, #48]	; (800b360 <_ZN16MainViewViewBaseC1Ev+0x4d8>)
 800b32e:	f020 fddb 	bl	802bee8 <__assert_func>
        assert(typedTextId < numberOfTypedTexts && "typedTextId larger than numberOfTypedTexts.");
 800b332:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800b336:	889a      	ldrh	r2, [r3, #4]
 800b338:	4b0a      	ldr	r3, [pc, #40]	; (800b364 <_ZN16MainViewViewBaseC1Ev+0x4dc>)
 800b33a:	881b      	ldrh	r3, [r3, #0]
 800b33c:	429a      	cmp	r2, r3
 800b33e:	d315      	bcc.n	800b36c <_ZN16MainViewViewBaseC1Ev+0x4e4>
 800b340:	4b09      	ldr	r3, [pc, #36]	; (800b368 <_ZN16MainViewViewBaseC1Ev+0x4e0>)
 800b342:	4a06      	ldr	r2, [pc, #24]	; (800b35c <_ZN16MainViewViewBaseC1Ev+0x4d4>)
 800b344:	21b2      	movs	r1, #178	; 0xb2
 800b346:	4806      	ldr	r0, [pc, #24]	; (800b360 <_ZN16MainViewViewBaseC1Ev+0x4d8>)
 800b348:	f020 fdce 	bl	802bee8 <__assert_func>
 800b34c:	200041e4 	.word	0x200041e4
 800b350:	0802dc10 	.word	0x0802dc10
 800b354:	200041d8 	.word	0x200041d8
 800b358:	0802dab0 	.word	0x0802dab0
 800b35c:	0802daf4 	.word	0x0802daf4
 800b360:	0802db24 	.word	0x0802db24
 800b364:	200041dc 	.word	0x200041dc
 800b368:	0802dbbc 	.word	0x0802dbbc
    }
 800b36c:	bf00      	nop
        return texts->getText(typedTextId);
 800b36e:	4be0      	ldr	r3, [pc, #896]	; (800b6f0 <_ZN16MainViewViewBaseC1Ev+0x868>)
 800b370:	681b      	ldr	r3, [r3, #0]
 800b372:	f8b7 2058 	ldrh.w	r2, [r7, #88]	; 0x58
 800b376:	4611      	mov	r1, r2
 800b378:	4618      	mov	r0, r3
 800b37a:	f003 f979 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 800b37e:	4603      	mov	r3, r0
 800b380:	bf00      	nop
 800b382:	4adc      	ldr	r2, [pc, #880]	; (800b6f4 <_ZN16MainViewViewBaseC1Ev+0x86c>)
 800b384:	2114      	movs	r1, #20
 800b386:	4620      	mov	r0, r4
 800b388:	f013 f860 	bl	801e44c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800b38c:	f107 0354 	add.w	r3, r7, #84	; 0x54
 800b390:	4618      	mov	r0, r3
 800b392:	f7fd ff19 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>
    labelDivTime.setWildcard(labelDivTimeBuffer);
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	f503 72a2 	add.w	r2, r3, #324	; 0x144
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	f603 43b8 	addw	r3, r3, #3256	; 0xcb8
 800b3a2:	4619      	mov	r1, r3
 800b3a4:	4610      	mov	r0, r2
 800b3a6:	f7ff fa25 	bl	800a7f4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    labelDivTime.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	f503 74a2 	add.w	r4, r3, #324	; 0x144
 800b3b0:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800b3b4:	2104      	movs	r1, #4
 800b3b6:	4618      	mov	r0, r3
 800b3b8:	f7ff f97e 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800b3bc:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800b3c0:	4619      	mov	r1, r3
 800b3c2:	4620      	mov	r0, r4
 800b3c4:	f00e f841 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800b3c8:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 800b3cc:	4618      	mov	r0, r3
 800b3ce:	f7fd fefb 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    chartBG.setPosition(10, 62, 460, 190);
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	f503 70c2 	add.w	r0, r3, #388	; 0x184
 800b3d8:	23be      	movs	r3, #190	; 0xbe
 800b3da:	9300      	str	r3, [sp, #0]
 800b3dc:	f44f 73e6 	mov.w	r3, #460	; 0x1cc
 800b3e0:	223e      	movs	r2, #62	; 0x3e
 800b3e2:	210a      	movs	r1, #10
 800b3e4:	f7fe fe91 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    chartBG.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	f503 74c2 	add.w	r4, r3, #388	; 0x184
 800b3ee:	2200      	movs	r2, #0
 800b3f0:	2100      	movs	r1, #0
 800b3f2:	2000      	movs	r0, #0
 800b3f4:	f7ff fa40 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b3f8:	4603      	mov	r3, r0
 800b3fa:	4619      	mov	r1, r3
 800b3fc:	4620      	mov	r0, r4
 800b3fe:	f7ff f94d 	bl	800a69c <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    chart.setScale(1);
 800b402:	687b      	ldr	r3, [r7, #4]
 800b404:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b408:	2101      	movs	r1, #1
 800b40a:	4618      	mov	r0, r3
 800b40c:	f00d f9a4 	bl	8018758 <_ZN8touchgfx22AbstractDataGraphWithY8setScaleEi>
    chart.setPosition(10, 62, 460, 190);
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	f503 70d8 	add.w	r0, r3, #432	; 0x1b0
 800b416:	23be      	movs	r3, #190	; 0xbe
 800b418:	9300      	str	r3, [sp, #0]
 800b41a:	f44f 73e6 	mov.w	r3, #460	; 0x1cc
 800b41e:	223e      	movs	r2, #62	; 0x3e
 800b420:	210a      	movs	r1, #10
 800b422:	f7fe fe72 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
    chart.setGraphAreaMargin(0, 0, 0, 0);
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	f503 70d8 	add.w	r0, r3, #432	; 0x1b0
 800b42c:	2300      	movs	r3, #0
 800b42e:	9300      	str	r3, [sp, #0]
 800b430:	2300      	movs	r3, #0
 800b432:	2200      	movs	r2, #0
 800b434:	2100      	movs	r1, #0
 800b436:	f00d f8df 	bl	80185f8 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    chart.setGraphAreaPadding(0, 0, 0, 0);
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	f503 70d8 	add.w	r0, r3, #432	; 0x1b0
 800b440:	2300      	movs	r3, #0
 800b442:	9300      	str	r3, [sp, #0]
 800b444:	2300      	movs	r3, #0
 800b446:	2200      	movs	r2, #0
 800b448:	2100      	movs	r1, #0
 800b44a:	f00c fec6 	bl	80181da <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    chart.setGraphRangeY(0, 4000);
 800b44e:	687b      	ldr	r3, [r7, #4]
 800b450:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b454:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 800b458:	2100      	movs	r1, #0
 800b45a:	4618      	mov	r0, r3
 800b45c:	f00c fcc4 	bl	8017de8 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii>

    chartMajorXAxisGrid.setScale(1);
 800b460:	687b      	ldr	r3, [r7, #4]
 800b462:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800b466:	2101      	movs	r1, #1
 800b468:	4618      	mov	r0, r3
 800b46a:	f00d fa53 	bl	8018914 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    chartMajorXAxisGrid.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	f603 247c 	addw	r4, r3, #2684	; 0xa7c
 800b474:	22ff      	movs	r2, #255	; 0xff
 800b476:	21ff      	movs	r1, #255	; 0xff
 800b478:	20ff      	movs	r0, #255	; 0xff
 800b47a:	f7ff f9fd 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b47e:	4603      	mov	r3, r0
 800b480:	4619      	mov	r1, r3
 800b482:	4620      	mov	r0, r4
 800b484:	f00d f9d2 	bl	801882c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>
    chartMajorXAxisGrid.setInterval(1000);
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800b48e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800b492:	4618      	mov	r0, r3
 800b494:	f00d fb1d 	bl	8018ad2 <_ZN8touchgfx20GraphElementGridBase11setIntervalEi>
    chartMajorXAxisGrid.setLineWidth(1);
 800b498:	687b      	ldr	r3, [r7, #4]
 800b49a:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800b49e:	2101      	movs	r1, #1
 800b4a0:	4618      	mov	r0, r3
 800b4a2:	f00d fb23 	bl	8018aec <_ZN8touchgfx20GraphElementGridBase12setLineWidthEh>
    chartMajorXAxisGrid.setAlpha(100);
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800b4ac:	2164      	movs	r1, #100	; 0x64
 800b4ae:	4618      	mov	r0, r3
 800b4b0:	f7ff fa63 	bl	800a97a <_ZN8touchgfx12CanvasWidget8setAlphaEh>
    chart.addGraphElement(chartMajorXAxisGrid);
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	f503 72d8 	add.w	r2, r3, #432	; 0x1b0
 800b4ba:	687b      	ldr	r3, [r7, #4]
 800b4bc:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800b4c0:	4619      	mov	r1, r3
 800b4c2:	4610      	mov	r0, r2
 800b4c4:	f00c ff40 	bl	8018348 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>

    chartDiamonds1.setScale(1);
 800b4c8:	687b      	ldr	r3, [r7, #4]
 800b4ca:	f603 2328 	addw	r3, r3, #2600	; 0xa28
 800b4ce:	2101      	movs	r1, #1
 800b4d0:	4618      	mov	r0, r3
 800b4d2:	f00d fa1f 	bl	8018914 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>
    chartDiamonds1Painter.setColor(touchgfx::Color::getColorFrom24BitRGB(20, 151, 197));
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	f503 6426 	add.w	r4, r3, #2656	; 0xa60
 800b4dc:	22c5      	movs	r2, #197	; 0xc5
 800b4de:	2197      	movs	r1, #151	; 0x97
 800b4e0:	2014      	movs	r0, #20
 800b4e2:	f7ff f9c9 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800b4e6:	4603      	mov	r3, r0
 800b4e8:	4619      	mov	r1, r3
 800b4ea:	4620      	mov	r0, r4
 800b4ec:	f7ff fb08 	bl	800ab00 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    chartDiamonds1.setPainter(chartDiamonds1Painter);
 800b4f0:	687b      	ldr	r3, [r7, #4]
 800b4f2:	f603 2228 	addw	r2, r3, #2600	; 0xa28
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	f503 6326 	add.w	r3, r3, #2656	; 0xa60
 800b4fc:	4619      	mov	r1, r3
 800b4fe:	4610      	mov	r0, r2
 800b500:	f00c fb62 	bl	8017bc8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>
    chartDiamonds1.setDiamondWidth(2);
 800b504:	687b      	ldr	r3, [r7, #4]
 800b506:	f603 2328 	addw	r3, r3, #2600	; 0xa28
 800b50a:	2102      	movs	r1, #2
 800b50c:	4618      	mov	r0, r3
 800b50e:	f00d fcbb 	bl	8018e88 <_ZN8touchgfx20GraphElementDiamonds15setDiamondWidthEh>
    chart.addGraphElement(chartDiamonds1);
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	f503 72d8 	add.w	r2, r3, #432	; 0x1b0
 800b518:	687b      	ldr	r3, [r7, #4]
 800b51a:	f603 2328 	addw	r3, r3, #2600	; 0xa28
 800b51e:	4619      	mov	r1, r3
 800b520:	4610      	mov	r0, r2
 800b522:	f00c ff11 	bl	8018348 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>

    chart.addDataPoint(2498.16152996877f);
 800b526:	687b      	ldr	r3, [r7, #4]
 800b528:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b52c:	ed9f 0a72 	vldr	s0, [pc, #456]	; 800b6f8 <_ZN16MainViewViewBaseC1Ev+0x870>
 800b530:	4618      	mov	r0, r3
 800b532:	f00d f96f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2353.95011743646f);
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b53c:	ed9f 0a6f 	vldr	s0, [pc, #444]	; 800b6fc <_ZN16MainViewViewBaseC1Ev+0x874>
 800b540:	4618      	mov	r0, r3
 800b542:	f00d f967 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2210.80821332167f);
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b54c:	ed9f 0a6c 	vldr	s0, [pc, #432]	; 800b700 <_ZN16MainViewViewBaseC1Ev+0x878>
 800b550:	4618      	mov	r0, r3
 800b552:	f00d f95f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2070.05481729737f);
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b55c:	ed9f 0a69 	vldr	s0, [pc, #420]	; 800b704 <_ZN16MainViewViewBaseC1Ev+0x87c>
 800b560:	4618      	mov	r0, r3
 800b562:	f00d f957 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1932.97153961643f);
 800b566:	687b      	ldr	r3, [r7, #4]
 800b568:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b56c:	ed9f 0a66 	vldr	s0, [pc, #408]	; 800b708 <_ZN16MainViewViewBaseC1Ev+0x880>
 800b570:	4618      	mov	r0, r3
 800b572:	f00d f94f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1800.78814567344f);
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b57c:	ed9f 0a63 	vldr	s0, [pc, #396]	; 800b70c <_ZN16MainViewViewBaseC1Ev+0x884>
 800b580:	4618      	mov	r0, r3
 800b582:	f00d f947 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1674.66882819202f);
 800b586:	687b      	ldr	r3, [r7, #4]
 800b588:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b58c:	ed9f 0a60 	vldr	s0, [pc, #384]	; 800b710 <_ZN16MainViewViewBaseC1Ev+0x888>
 800b590:	4618      	mov	r0, r3
 800b592:	f00d f93f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1555.69916716249f);
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b59c:	ed9f 0a5d 	vldr	s0, [pc, #372]	; 800b714 <_ZN16MainViewViewBaseC1Ev+0x88c>
 800b5a0:	4618      	mov	r0, r3
 800b5a2:	f00d f937 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1444.87411595045f);
 800b5a6:	687b      	ldr	r3, [r7, #4]
 800b5a8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5ac:	ed9f 0a5a 	vldr	s0, [pc, #360]	; 800b718 <_ZN16MainViewViewBaseC1Ev+0x890>
 800b5b0:	4618      	mov	r0, r3
 800b5b2:	f00d f92f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1343.08698011751f);
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5bc:	ed9f 0a57 	vldr	s0, [pc, #348]	; 800b71c <_ZN16MainViewViewBaseC1Ev+0x894>
 800b5c0:	4618      	mov	r0, r3
 800b5c2:	f00d f927 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1251.11972804461f);
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5cc:	ed9f 0a54 	vldr	s0, [pc, #336]	; 800b720 <_ZN16MainViewViewBaseC1Ev+0x898>
 800b5d0:	4618      	mov	r0, r3
 800b5d2:	f00d f91f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1169.63449708926f);
 800b5d6:	687b      	ldr	r3, [r7, #4]
 800b5d8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5dc:	ed9f 0a51 	vldr	s0, [pc, #324]	; 800b724 <_ZN16MainViewViewBaseC1Ev+0x89c>
 800b5e0:	4618      	mov	r0, r3
 800b5e2:	f00d f917 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1099.16662094741f);
 800b5e6:	687b      	ldr	r3, [r7, #4]
 800b5e8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5ec:	ed9f 0a4e 	vldr	s0, [pc, #312]	; 800b728 <_ZN16MainViewViewBaseC1Ev+0x8a0>
 800b5f0:	4618      	mov	r0, r3
 800b5f2:	f00d f90f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1040.11906555873f);
 800b5f6:	687b      	ldr	r3, [r7, #4]
 800b5f8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b5fc:	ed9f 0a4b 	vldr	s0, [pc, #300]	; 800b72c <_ZN16MainViewViewBaseC1Ev+0x8a4>
 800b600:	4618      	mov	r0, r3
 800b602:	f00d f907 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(992.758542289057f);
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b60c:	ed9f 0a48 	vldr	s0, [pc, #288]	; 800b730 <_ZN16MainViewViewBaseC1Ev+0x8a8>
 800b610:	4618      	mov	r0, r3
 800b612:	f00d f8ff 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(957.213121282826f);
 800b616:	687b      	ldr	r3, [r7, #4]
 800b618:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b61c:	ed9f 0a45 	vldr	s0, [pc, #276]	; 800b734 <_ZN16MainViewViewBaseC1Ev+0x8ac>
 800b620:	4618      	mov	r0, r3
 800b622:	f00d f8f7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(933.471549578937f);
 800b626:	687b      	ldr	r3, [r7, #4]
 800b628:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b62c:	ed9f 0a42 	vldr	s0, [pc, #264]	; 800b738 <_ZN16MainViewViewBaseC1Ev+0x8b0>
 800b630:	4618      	mov	r0, r3
 800b632:	f00d f8ef 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(921.38424501381f);
 800b636:	687b      	ldr	r3, [r7, #4]
 800b638:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b63c:	ed9f 0a3f 	vldr	s0, [pc, #252]	; 800b73c <_ZN16MainViewViewBaseC1Ev+0x8b4>
 800b640:	4618      	mov	r0, r3
 800b642:	f00d f8e7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(920.665790167825f);
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b64c:	ed9f 0a3c 	vldr	s0, [pc, #240]	; 800b740 <_ZN16MainViewViewBaseC1Ev+0x8b8>
 800b650:	4618      	mov	r0, r3
 800b652:	f00d f8df 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(930.899187522654f);
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b65c:	ed9f 0a39 	vldr	s0, [pc, #228]	; 800b744 <_ZN16MainViewViewBaseC1Ev+0x8bc>
 800b660:	4618      	mov	r0, r3
 800b662:	f00d f8d7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(951.541530336835f);
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b66c:	ed9f 0a36 	vldr	s0, [pc, #216]	; 800b748 <_ZN16MainViewViewBaseC1Ev+0x8c0>
 800b670:	4618      	mov	r0, r3
 800b672:	f00d f8cf 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(981.93123076167f);
 800b676:	687b      	ldr	r3, [r7, #4]
 800b678:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b67c:	ed9f 0a33 	vldr	s0, [pc, #204]	; 800b74c <_ZN16MainViewViewBaseC1Ev+0x8c4>
 800b680:	4618      	mov	r0, r3
 800b682:	f00d f8c7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1021.29663957473f);
 800b686:	687b      	ldr	r3, [r7, #4]
 800b688:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b68c:	ed9f 0a30 	vldr	s0, [pc, #192]	; 800b750 <_ZN16MainViewViewBaseC1Ev+0x8c8>
 800b690:	4618      	mov	r0, r3
 800b692:	f00d f8bf 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1068.76586000854f);
 800b696:	687b      	ldr	r3, [r7, #4]
 800b698:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b69c:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 800b754 <_ZN16MainViewViewBaseC1Ev+0x8cc>
 800b6a0:	4618      	mov	r0, r3
 800b6a2:	f00d f8b7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1123.37796281667f);
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b6ac:	ed9f 0a2a 	vldr	s0, [pc, #168]	; 800b758 <_ZN16MainViewViewBaseC1Ev+0x8d0>
 800b6b0:	4618      	mov	r0, r3
 800b6b2:	f00d f8af 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1184.09489254652f);
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b6bc:	ed9f 0a27 	vldr	s0, [pc, #156]	; 800b75c <_ZN16MainViewViewBaseC1Ev+0x8d4>
 800b6c0:	4618      	mov	r0, r3
 800b6c2:	f00d f8a7 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1249.8145791573f);
 800b6c6:	687b      	ldr	r3, [r7, #4]
 800b6c8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b6cc:	ed9f 0a24 	vldr	s0, [pc, #144]	; 800b760 <_ZN16MainViewViewBaseC1Ev+0x8d8>
 800b6d0:	4618      	mov	r0, r3
 800b6d2:	f00d f89f 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1319.38467005141f);
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b6dc:	ed9f 0a21 	vldr	s0, [pc, #132]	; 800b764 <_ZN16MainViewViewBaseC1Ev+0x8dc>
 800b6e0:	4618      	mov	r0, r3
 800b6e2:	f00d f897 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1391.61679834098f);
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b6ec:	e0ac      	b.n	800b848 <_ZN16MainViewViewBaseC1Ev+0x9c0>
 800b6ee:	bf00      	nop
 800b6f0:	200041e4 	.word	0x200041e4
 800b6f4:	0802dc10 	.word	0x0802dc10
 800b6f8:	451c2296 	.word	0x451c2296
 800b6fc:	45131f34 	.word	0x45131f34
 800b700:	450a2cee 	.word	0x450a2cee
 800b704:	450160e1 	.word	0x450160e1
 800b708:	44f19f17 	.word	0x44f19f17
 800b70c:	44e11938 	.word	0x44e11938
 800b710:	44d15567 	.word	0x44d15567
 800b714:	44c27660 	.word	0x44c27660
 800b718:	44b49bf9 	.word	0x44b49bf9
 800b71c:	44a7e2c9 	.word	0x44a7e2c9
 800b720:	449c63d5 	.word	0x449c63d5
 800b724:	4492344e 	.word	0x4492344e
 800b728:	44896555 	.word	0x44896555
 800b72c:	448203cf 	.word	0x448203cf
 800b730:	4478308c 	.word	0x4478308c
 800b734:	446f4da4 	.word	0x446f4da4
 800b738:	44695e2e 	.word	0x44695e2e
 800b73c:	44665897 	.word	0x44665897
 800b740:	44662a9c 	.word	0x44662a9c
 800b744:	4468b98c 	.word	0x4468b98c
 800b748:	446de2a8 	.word	0x446de2a8
 800b74c:	44757b99 	.word	0x44757b99
 800b750:	447f52fc 	.word	0x447f52fc
 800b754:	44859882 	.word	0x44859882
 800b758:	448c6c18 	.word	0x448c6c18
 800b75c:	44940309 	.word	0x44940309
 800b760:	449c3a11 	.word	0x449c3a11
 800b764:	44a4ec4f 	.word	0x44a4ec4f
 800b768:	44adf3bd 	.word	0x44adf3bd
 800b76c:	44b729a5 	.word	0x44b729a5
 800b770:	44c0671e 	.word	0x44c0671e
 800b774:	44c98586 	.word	0x44c98586
 800b778:	44d25efe 	.word	0x44d25efe
 800b77c:	44dacedc 	.word	0x44dacedc
 800b780:	44e2b225 	.word	0x44e2b225
 800b784:	44e9e7f6 	.word	0x44e9e7f6
 800b788:	44f051f2 	.word	0x44f051f2
 800b78c:	44f5d49a 	.word	0x44f5d49a
 800b790:	44fa57a9 	.word	0x44fa57a9
 800b794:	44fdc662 	.word	0x44fdc662
 800b798:	450007e8 	.word	0x450007e8
 800b79c:	4500937c 	.word	0x4500937c
 800b7a0:	45008187 	.word	0x45008187
 800b7a4:	44ff9f89 	.word	0x44ff9f89
 800b7a8:	44fcfc37 	.word	0x44fcfc37
 800b7ac:	44f91d3c 	.word	0x44f91d3c
 800b7b0:	44f40b0f 	.word	0x44f40b0f
 800b7b4:	44edd258 	.word	0x44edd258
 800b7b8:	44e683d5 	.word	0x44e683d5
 800b7bc:	44de3421 	.word	0x44de3421
 800b7c0:	44d4fb78 	.word	0x44d4fb78
 800b7c4:	44caf572 	.word	0x44caf572
 800b7c8:	44c040ab 	.word	0x44c040ab
 800b7cc:	44b4fe6a 	.word	0x44b4fe6a
 800b7d0:	44a95239 	.word	0x44a95239
 800b7d4:	449d617a 	.word	0x449d617a
 800b7d8:	449152f7 	.word	0x449152f7
 800b7dc:	44854e68 	.word	0x44854e68
 800b7e0:	4472f7f8 	.word	0x4472f7f8
 800b7e4:	445c07ba 	.word	0x445c07ba
 800b7e8:	44461b67 	.word	0x44461b67
 800b7ec:	4431805d 	.word	0x4431805d
 800b7f0:	441e8113 	.word	0x441e8113
 800b7f4:	440d6433 	.word	0x440d6433
 800b7f8:	43fcd783 	.word	0x43fcd783
 800b7fc:	43e3a899 	.word	0x43e3a899
 800b800:	43cfa858 	.word	0x43cfa858
 800b804:	43c135b2 	.word	0x43c135b2
 800b808:	43b8a0a5 	.word	0x43b8a0a5
 800b80c:	43b6293e 	.word	0x43b6293e
 800b810:	43b9febe 	.word	0x43b9febe
 800b814:	43c43efe 	.word	0x43c43efe
 800b818:	43d4f600 	.word	0x43d4f600
 800b81c:	43ec1db0 	.word	0x43ec1db0
 800b820:	4404cef5 	.word	0x4404cef5
 800b824:	4416a653 	.word	0x4416a653
 800b828:	442b7730 	.word	0x442b7730
 800b82c:	44431b5d 	.word	0x44431b5d
 800b830:	445d64a4 	.word	0x445d64a4
 800b834:	447a1d46 	.word	0x447a1d46
 800b838:	448c844a 	.word	0x448c844a
 800b83c:	449cf1ca 	.word	0x449cf1ca
 800b840:	44ae32e3 	.word	0x44ae32e3
 800b844:	44c020f7 	.word	0x44c020f7
 800b848:	ed1f 0a39 	vldr	s0, [pc, #-228]	; 800b768 <_ZN16MainViewViewBaseC1Ev+0x8e0>
 800b84c:	4618      	mov	r0, r3
 800b84e:	f00c ffe1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1465.30135390912f);
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b858:	ed1f 0a3c 	vldr	s0, [pc, #-240]	; 800b76c <_ZN16MainViewViewBaseC1Ev+0x8e4>
 800b85c:	4618      	mov	r0, r3
 800b85e:	f00c ffd9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1539.22239194769f);
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b868:	ed1f 0a3f 	vldr	s0, [pc, #-252]	; 800b770 <_ZN16MainViewViewBaseC1Ev+0x8e8>
 800b86c:	4618      	mov	r0, r3
 800b86e:	f00c ffd1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1612.17263012064f);
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b878:	ed1f 0a42 	vldr	s0, [pc, #-264]	; 800b774 <_ZN16MainViewViewBaseC1Ev+0x8ec>
 800b87c:	4618      	mov	r0, r3
 800b87e:	f00c ffc9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1682.96846154533f);
 800b882:	687b      	ldr	r3, [r7, #4]
 800b884:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b888:	ed1f 0a45 	vldr	s0, [pc, #-276]	; 800b778 <_ZN16MainViewViewBaseC1Ev+0x8f0>
 800b88c:	4618      	mov	r0, r3
 800b88e:	f00c ffc1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1750.46432811646f);
 800b892:	687b      	ldr	r3, [r7, #4]
 800b894:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b898:	ed1f 0a48 	vldr	s0, [pc, #-288]	; 800b77c <_ZN16MainViewViewBaseC1Ev+0x8f4>
 800b89c:	4618      	mov	r0, r3
 800b89e:	f00c ffb9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1813.56696147545f);
 800b8a2:	687b      	ldr	r3, [r7, #4]
 800b8a4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8a8:	ed1f 0a4b 	vldr	s0, [pc, #-300]	; 800b780 <_ZN16MainViewViewBaseC1Ev+0x8f8>
 800b8ac:	4618      	mov	r0, r3
 800b8ae:	f00c ffb1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1871.24883186929f);
 800b8b2:	687b      	ldr	r3, [r7, #4]
 800b8b4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8b8:	ed1f 0a4e 	vldr	s0, [pc, #-312]	; 800b784 <_ZN16MainViewViewBaseC1Ev+0x8fc>
 800b8bc:	4618      	mov	r0, r3
 800b8be:	f00c ffa9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1922.56077711325f);
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8c8:	ed1f 0a51 	vldr	s0, [pc, #-324]	; 800b788 <_ZN16MainViewViewBaseC1Ev+0x900>
 800b8cc:	4618      	mov	r0, r3
 800b8ce:	f00c ffa1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1966.64374977601f);
 800b8d2:	687b      	ldr	r3, [r7, #4]
 800b8d4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8d8:	ed1f 0a54 	vldr	s0, [pc, #-336]	; 800b78c <_ZN16MainViewViewBaseC1Ev+0x904>
 800b8dc:	4618      	mov	r0, r3
 800b8de:	f00c ff99 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2002.73940438593f);
 800b8e2:	687b      	ldr	r3, [r7, #4]
 800b8e4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8e8:	ed1f 0a57 	vldr	s0, [pc, #-348]	; 800b790 <_ZN16MainViewViewBaseC1Ev+0x908>
 800b8ec:	4618      	mov	r0, r3
 800b8ee:	f00c ff91 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2030.19950071225f);
 800b8f2:	687b      	ldr	r3, [r7, #4]
 800b8f4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b8f8:	ed1f 0a5a 	vldr	s0, [pc, #-360]	; 800b794 <_ZN16MainViewViewBaseC1Ev+0x90c>
 800b8fc:	4618      	mov	r0, r3
 800b8fe:	f00c ff89 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2048.49403431417f);
 800b902:	687b      	ldr	r3, [r7, #4]
 800b904:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b908:	ed1f 0a5d 	vldr	s0, [pc, #-372]	; 800b798 <_ZN16MainViewViewBaseC1Ev+0x910>
 800b90c:	4618      	mov	r0, r3
 800b90e:	f00c ff81 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2057.21777807045f);
 800b912:	687b      	ldr	r3, [r7, #4]
 800b914:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b918:	ed1f 0a60 	vldr	s0, [pc, #-384]	; 800b79c <_ZN16MainViewViewBaseC1Ev+0x914>
 800b91c:	4618      	mov	r0, r3
 800b91e:	f00c ff79 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2056.09550467788f);
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b928:	ed1f 0a63 	vldr	s0, [pc, #-396]	; 800b7a0 <_ZN16MainViewViewBaseC1Ev+0x918>
 800b92c:	4618      	mov	r0, r3
 800b92e:	f00c ff71 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2044.98552461555f);
 800b932:	687b      	ldr	r3, [r7, #4]
 800b934:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b938:	ed1f 0a66 	vldr	s0, [pc, #-408]	; 800b7a4 <_ZN16MainViewViewBaseC1Ev+0x91c>
 800b93c:	4618      	mov	r0, r3
 800b93e:	f00c ff69 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2023.88166162241f);
 800b942:	687b      	ldr	r3, [r7, #4]
 800b944:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b948:	ed1f 0a69 	vldr	s0, [pc, #-420]	; 800b7a8 <_ZN16MainViewViewBaseC1Ev+0x920>
 800b94c:	4618      	mov	r0, r3
 800b94e:	f00c ff61 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1992.91358991483f);
 800b952:	687b      	ldr	r3, [r7, #4]
 800b954:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b958:	ed1f 0a6c 	vldr	s0, [pc, #-432]	; 800b7ac <_ZN16MainViewViewBaseC1Ev+0x924>
 800b95c:	4618      	mov	r0, r3
 800b95e:	f00c ff59 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1952.34552608547f);
 800b962:	687b      	ldr	r3, [r7, #4]
 800b964:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b968:	ed1f 0a6f 	vldr	s0, [pc, #-444]	; 800b7b0 <_ZN16MainViewViewBaseC1Ev+0x928>
 800b96c:	4618      	mov	r0, r3
 800b96e:	f00c ff51 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1902.57327759355f);
 800b972:	687b      	ldr	r3, [r7, #4]
 800b974:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b978:	ed1f 0a72 	vldr	s0, [pc, #-456]	; 800b7b4 <_ZN16MainViewViewBaseC1Ev+0x92c>
 800b97c:	4618      	mov	r0, r3
 800b97e:	f00c ff49 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1844.11977000313f);
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b988:	ed1f 0a75 	vldr	s0, [pc, #-468]	; 800b7b8 <_ZN16MainViewViewBaseC1Ev+0x930>
 800b98c:	4618      	mov	r0, r3
 800b98e:	f00c ff41 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1777.62897037958f);
 800b992:	687b      	ldr	r3, [r7, #4]
 800b994:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b998:	ed1f 0a78 	vldr	s0, [pc, #-480]	; 800b7bc <_ZN16MainViewViewBaseC1Ev+0x934>
 800b99c:	4618      	mov	r0, r3
 800b99e:	f00c ff39 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1703.85838058905f);
 800b9a2:	687b      	ldr	r3, [r7, #4]
 800b9a4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9a8:	ed1f 0a7b 	vldr	s0, [pc, #-492]	; 800b7c0 <_ZN16MainViewViewBaseC1Ev+0x938>
 800b9ac:	4618      	mov	r0, r3
 800b9ae:	f00c ff31 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1623.67014552512f);
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9b8:	ed1f 0a7e 	vldr	s0, [pc, #-504]	; 800b7c4 <_ZN16MainViewViewBaseC1Ev+0x93c>
 800b9bc:	4618      	mov	r0, r3
 800b9be:	f00c ff29 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1538.02089450502f);
 800b9c2:	687b      	ldr	r3, [r7, #4]
 800b9c4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9c8:	ed1f 0a81 	vldr	s0, [pc, #-516]	; 800b7c8 <_ZN16MainViewViewBaseC1Ev+0x940>
 800b9cc:	4618      	mov	r0, r3
 800b9ce:	f00c ff21 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1447.9504312774f);
 800b9d2:	687b      	ldr	r3, [r7, #4]
 800b9d4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9d8:	ed1f 0a84 	vldr	s0, [pc, #-528]	; 800b7cc <_ZN16MainViewViewBaseC1Ev+0x944>
 800b9dc:	4618      	mov	r0, r3
 800b9de:	f00c ff19 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1354.56943547979f);
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9e8:	ed1f 0a87 	vldr	s0, [pc, #-540]	; 800b7d0 <_ZN16MainViewViewBaseC1Ev+0x948>
 800b9ec:	4618      	mov	r0, r3
 800b9ee:	f00c ff11 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1259.0461475607f);
 800b9f2:	687b      	ldr	r3, [r7, #4]
 800b9f4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800b9f8:	ed1f 0a8a 	vldr	s0, [pc, #-552]	; 800b7d4 <_ZN16MainViewViewBaseC1Ev+0x94c>
 800b9fc:	4618      	mov	r0, r3
 800b9fe:	f00c ff09 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1162.59262620909f);
 800ba02:	687b      	ldr	r3, [r7, #4]
 800ba04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba08:	ed1f 0a8d 	vldr	s0, [pc, #-564]	; 800b7d8 <_ZN16MainViewViewBaseC1Ev+0x950>
 800ba0c:	4618      	mov	r0, r3
 800ba0e:	f00c ff01 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1066.45017210997f);
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba18:	ed1f 0a90 	vldr	s0, [pc, #-576]	; 800b7dc <_ZN16MainViewViewBaseC1Ev+0x954>
 800ba1c:	4618      	mov	r0, r3
 800ba1e:	f00c fef9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(971.874501447191f);
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba28:	ed1f 0a93 	vldr	s0, [pc, #-588]	; 800b7e0 <_ZN16MainViewViewBaseC1Ev+0x958>
 800ba2c:	4618      	mov	r0, r3
 800ba2e:	f00c fef1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(880.120711308616f);
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba38:	ed1f 0a96 	vldr	s0, [pc, #-600]	; 800b7e4 <_ZN16MainViewViewBaseC1Ev+0x95c>
 800ba3c:	4618      	mov	r0, r3
 800ba3e:	f00c fee9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(792.428184160252f);
 800ba42:	687b      	ldr	r3, [r7, #4]
 800ba44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba48:	ed1f 0a99 	vldr	s0, [pc, #-612]	; 800b7e8 <_ZN16MainViewViewBaseC1Ev+0x960>
 800ba4c:	4618      	mov	r0, r3
 800ba4e:	f00c fee1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(710.005681751191f);
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba58:	ed1f 0a9c 	vldr	s0, [pc, #-624]	; 800b7ec <_ZN16MainViewViewBaseC1Ev+0x964>
 800ba5c:	4618      	mov	r0, r3
 800ba5e:	f00c fed9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(634.016768675663f);
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba68:	ed1f 0a9f 	vldr	s0, [pc, #-636]	; 800b7f0 <_ZN16MainViewViewBaseC1Ev+0x968>
 800ba6c:	4618      	mov	r0, r3
 800ba6e:	f00c fed1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(565.565601529158f);
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba78:	ed1f 0aa2 	vldr	s0, [pc, #-648]	; 800b7f4 <_ZN16MainViewViewBaseC1Ev+0x96c>
 800ba7c:	4618      	mov	r0, r3
 800ba7e:	f00c fec9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(505.68368954229f);
 800ba82:	687b      	ldr	r3, [r7, #4]
 800ba84:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba88:	ed1f 0aa5 	vldr	s0, [pc, #-660]	; 800b7f8 <_ZN16MainViewViewBaseC1Ev+0x970>
 800ba8c:	4618      	mov	r0, r3
 800ba8e:	f00c fec1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(455.317158634531f);
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ba98:	ed1f 0aa8 	vldr	s0, [pc, #-672]	; 800b7fc <_ZN16MainViewViewBaseC1Ev+0x974>
 800ba9c:	4618      	mov	r0, r3
 800ba9e:	f00c feb9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(415.315187263601f);
 800baa2:	687b      	ldr	r3, [r7, #4]
 800baa4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800baa8:	ed1f 0aab 	vldr	s0, [pc, #-684]	; 800b800 <_ZN16MainViewViewBaseC1Ev+0x978>
 800baac:	4618      	mov	r0, r3
 800baae:	f00c feb1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(386.419490879107f);
 800bab2:	687b      	ldr	r3, [r7, #4]
 800bab4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bab8:	ed1f 0aae 	vldr	s0, [pc, #-696]	; 800b804 <_ZN16MainViewViewBaseC1Ev+0x97c>
 800babc:	4618      	mov	r0, r3
 800babe:	f00c fea9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(369.255042057208f);
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bac8:	ed1f 0ab1 	vldr	s0, [pc, #-708]	; 800b808 <_ZN16MainViewViewBaseC1Ev+0x980>
 800bacc:	4618      	mov	r0, r3
 800bace:	f00c fea1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(364.322200496632f);
 800bad2:	687b      	ldr	r3, [r7, #4]
 800bad4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bad8:	ed1f 0ab4 	vldr	s0, [pc, #-720]	; 800b80c <_ZN16MainViewViewBaseC1Ev+0x984>
 800badc:	4618      	mov	r0, r3
 800bade:	f00c fe99 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(371.990166717139f);
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bae8:	ed1f 0ab7 	vldr	s0, [pc, #-732]	; 800b810 <_ZN16MainViewViewBaseC1Ev+0x988>
 800baec:	4618      	mov	r0, r3
 800baee:	f00c fe91 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(392.492133117652f);
 800baf2:	687b      	ldr	r3, [r7, #4]
 800baf4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800baf8:	ed1f 0aba 	vldr	s0, [pc, #-744]	; 800b814 <_ZN16MainViewViewBaseC1Ev+0x98c>
 800bafc:	4618      	mov	r0, r3
 800bafe:	f00c fe89 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(425.921861841366f);
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb08:	ed1f 0abd 	vldr	s0, [pc, #-756]	; 800b818 <_ZN16MainViewViewBaseC1Ev+0x990>
 800bb0c:	4618      	mov	r0, r3
 800bb0e:	f00c fe81 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(472.231936115555f);
 800bb12:	687b      	ldr	r3, [r7, #4]
 800bb14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb18:	ed1f 0ac0 	vldr	s0, [pc, #-768]	; 800b81c <_ZN16MainViewViewBaseC1Ev+0x994>
 800bb1c:	4618      	mov	r0, r3
 800bb1e:	f00c fe79 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(531.233706073466f);
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb28:	ed1f 0ac3 	vldr	s0, [pc, #-780]	; 800b820 <_ZN16MainViewViewBaseC1Ev+0x998>
 800bb2c:	4618      	mov	r0, r3
 800bb2e:	f00c fe71 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(602.598789580077f);
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb38:	ed1f 0ac6 	vldr	s0, [pc, #-792]	; 800b824 <_ZN16MainViewViewBaseC1Ev+0x99c>
 800bb3c:	4618      	mov	r0, r3
 800bb3e:	f00c fe69 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(685.862296500597f);
 800bb42:	687b      	ldr	r3, [r7, #4]
 800bb44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb48:	ed1f 0ac9 	vldr	s0, [pc, #-804]	; 800b828 <_ZN16MainViewViewBaseC1Ev+0x9a0>
 800bb4c:	4618      	mov	r0, r3
 800bb4e:	f00c fe61 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(780.427567731731f);
 800bb52:	687b      	ldr	r3, [r7, #4]
 800bb54:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb58:	ed1f 0acc 	vldr	s0, [pc, #-816]	; 800b82c <_ZN16MainViewViewBaseC1Ev+0x9a4>
 800bb5c:	4618      	mov	r0, r3
 800bb5e:	f00c fe59 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(885.572529669522f);
 800bb62:	687b      	ldr	r3, [r7, #4]
 800bb64:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb68:	ed1f 0acf 	vldr	s0, [pc, #-828]	; 800b830 <_ZN16MainViewViewBaseC1Ev+0x9a8>
 800bb6c:	4618      	mov	r0, r3
 800bb6e:	f00c fe51 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1000.45742275318f);
 800bb72:	687b      	ldr	r3, [r7, #4]
 800bb74:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb78:	ed1f 0ad2 	vldr	s0, [pc, #-840]	; 800b834 <_ZN16MainViewViewBaseC1Ev+0x9ac>
 800bb7c:	4618      	mov	r0, r3
 800bb7e:	f00c fe49 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1124.13399219547f);
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb88:	ed1f 0ad5 	vldr	s0, [pc, #-852]	; 800b838 <_ZN16MainViewViewBaseC1Ev+0x9b0>
 800bb8c:	4618      	mov	r0, r3
 800bb8e:	f00c fe41 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1255.55587422353f);
 800bb92:	687b      	ldr	r3, [r7, #4]
 800bb94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bb98:	ed1f 0ad8 	vldr	s0, [pc, #-864]	; 800b83c <_ZN16MainViewViewBaseC1Ev+0x9b4>
 800bb9c:	4618      	mov	r0, r3
 800bb9e:	f00c fe39 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1393.59021511007f);
 800bba2:	687b      	ldr	r3, [r7, #4]
 800bba4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bba8:	ed1f 0adb 	vldr	s0, [pc, #-876]	; 800b840 <_ZN16MainViewViewBaseC1Ev+0x9b8>
 800bbac:	4618      	mov	r0, r3
 800bbae:	f00c fe31 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1537.03019411295f);
 800bbb2:	687b      	ldr	r3, [r7, #4]
 800bbb4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bbb8:	ed1f 0ade 	vldr	s0, [pc, #-888]	; 800b844 <_ZN16MainViewViewBaseC1Ev+0x9bc>
 800bbbc:	4618      	mov	r0, r3
 800bbbe:	f00c fe29 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1684.60852006747f);
 800bbc2:	687b      	ldr	r3, [r7, #4]
 800bbc4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bbc8:	ed9f 0ae1 	vldr	s0, [pc, #900]	; 800bf50 <_ZN16MainViewViewBaseC1Ev+0x10c8>
 800bbcc:	4618      	mov	r0, r3
 800bbce:	f00c fe21 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1835.01153347648f);
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bbd8:	ed9f 0ade 	vldr	s0, [pc, #888]	; 800bf54 <_ZN16MainViewViewBaseC1Ev+0x10cc>
 800bbdc:	4618      	mov	r0, r3
 800bbde:	f00c fe19 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1986.89399779531f);
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bbe8:	ed9f 0adb 	vldr	s0, [pc, #876]	; 800bf58 <_ZN16MainViewViewBaseC1Ev+0x10d0>
 800bbec:	4618      	mov	r0, r3
 800bbee:	f00c fe11 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2138.89404077774f);
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bbf8:	ed9f 0ad8 	vldr	s0, [pc, #864]	; 800bf5c <_ZN16MainViewViewBaseC1Ev+0x10d4>
 800bbfc:	4618      	mov	r0, r3
 800bbfe:	f00c fe09 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2289.64847189597f);
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc08:	ed9f 0ad5 	vldr	s0, [pc, #852]	; 800bf60 <_ZN16MainViewViewBaseC1Ev+0x10d8>
 800bc0c:	4618      	mov	r0, r3
 800bc0e:	f00c fe01 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2437.80808073271f);
 800bc12:	687b      	ldr	r3, [r7, #4]
 800bc14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc18:	ed9f 0ad2 	vldr	s0, [pc, #840]	; 800bf64 <_ZN16MainViewViewBaseC1Ev+0x10dc>
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	f00c fdf9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2582.05272647299f);
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc28:	ed9f 0acf 	vldr	s0, [pc, #828]	; 800bf68 <_ZN16MainViewViewBaseC1Ev+0x10e0>
 800bc2c:	4618      	mov	r0, r3
 800bc2e:	f00c fdf1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2721.10608771059f);
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc38:	ed9f 0acc 	vldr	s0, [pc, #816]	; 800bf6c <_ZN16MainViewViewBaseC1Ev+0x10e4>
 800bc3c:	4618      	mov	r0, r3
 800bc3e:	f00c fde9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2853.74994882636f);
 800bc42:	687b      	ldr	r3, [r7, #4]
 800bc44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc48:	ed9f 0ac9 	vldr	s0, [pc, #804]	; 800bf70 <_ZN16MainViewViewBaseC1Ev+0x10e8>
 800bc4c:	4618      	mov	r0, r3
 800bc4e:	f00c fde1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2978.83781807243f);
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc58:	ed9f 0ac6 	vldr	s0, [pc, #792]	; 800bf74 <_ZN16MainViewViewBaseC1Ev+0x10ec>
 800bc5c:	4618      	mov	r0, r3
 800bc5e:	f00c fdd9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3095.30756984534f);
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc68:	ed9f 0ac3 	vldr	s0, [pc, #780]	; 800bf78 <_ZN16MainViewViewBaseC1Ev+0x10f0>
 800bc6c:	4618      	mov	r0, r3
 800bc6e:	f00c fdd1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3202.19327671974f);
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc78:	ed9f 0ac0 	vldr	s0, [pc, #768]	; 800bf7c <_ZN16MainViewViewBaseC1Ev+0x10f4>
 800bc7c:	4618      	mov	r0, r3
 800bc7e:	f00c fdc9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3298.63579179001f);
 800bc82:	687b      	ldr	r3, [r7, #4]
 800bc84:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc88:	ed9f 0abd 	vldr	s0, [pc, #756]	; 800bf80 <_ZN16MainViewViewBaseC1Ev+0x10f8>
 800bc8c:	4618      	mov	r0, r3
 800bc8e:	f00c fdc1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3383.89217684947f);
 800bc92:	687b      	ldr	r3, [r7, #4]
 800bc94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bc98:	ed9f 0aba 	vldr	s0, [pc, #744]	; 800bf84 <_ZN16MainViewViewBaseC1Ev+0x10fc>
 800bc9c:	4618      	mov	r0, r3
 800bc9e:	f00c fdb9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3457.34366964745f);
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bca8:	ed9f 0ab7 	vldr	s0, [pc, #732]	; 800bf88 <_ZN16MainViewViewBaseC1Ev+0x1100>
 800bcac:	4618      	mov	r0, r3
 800bcae:	f00c fdb1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3518.50230180494f);
 800bcb2:	687b      	ldr	r3, [r7, #4]
 800bcb4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bcb8:	ed9f 0ab4 	vldr	s0, [pc, #720]	; 800bf8c <_ZN16MainViewViewBaseC1Ev+0x1104>
 800bcbc:	4618      	mov	r0, r3
 800bcbe:	f00c fda9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3567.01591958549f);
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bcc8:	ed9f 0ab1 	vldr	s0, [pc, #708]	; 800bf90 <_ZN16MainViewViewBaseC1Ev+0x1108>
 800bccc:	4618      	mov	r0, r3
 800bcce:	f00c fda1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3602.67163395874f);
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bcd8:	ed9f 0aae 	vldr	s0, [pc, #696]	; 800bf94 <_ZN16MainViewViewBaseC1Ev+0x110c>
 800bcdc:	4618      	mov	r0, r3
 800bcde:	f00c fd99 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3625.39767053562f);
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bce8:	ed9f 0aab 	vldr	s0, [pc, #684]	; 800bf98 <_ZN16MainViewViewBaseC1Ev+0x1110>
 800bcec:	4618      	mov	r0, r3
 800bcee:	f00c fd91 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3635.26355411185f);
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bcf8:	ed9f 0aa8 	vldr	s0, [pc, #672]	; 800bf9c <_ZN16MainViewViewBaseC1Ev+0x1114>
 800bcfc:	4618      	mov	r0, r3
 800bcfe:	f00c fd89 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3632.47862876818f);
 800bd02:	687b      	ldr	r3, [r7, #4]
 800bd04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd08:	ed9f 0aa5 	vldr	s0, [pc, #660]	; 800bfa0 <_ZN16MainViewViewBaseC1Ev+0x1118>
 800bd0c:	4618      	mov	r0, r3
 800bd0e:	f00c fd81 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3617.38900991434f);
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd18:	ed9f 0aa2 	vldr	s0, [pc, #648]	; 800bfa4 <_ZN16MainViewViewBaseC1Ev+0x111c>
 800bd1c:	4618      	mov	r0, r3
 800bd1e:	f00c fd79 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3590.47286387441f);
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd28:	ed9f 0a9f 	vldr	s0, [pc, #636]	; 800bfa8 <_ZN16MainViewViewBaseC1Ev+0x1120>
 800bd2c:	4618      	mov	r0, r3
 800bd2e:	f00c fd71 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3552.33423363138f);
 800bd32:	687b      	ldr	r3, [r7, #4]
 800bd34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd38:	ed9f 0a9c 	vldr	s0, [pc, #624]	; 800bfac <_ZN16MainViewViewBaseC1Ev+0x1124>
 800bd3c:	4618      	mov	r0, r3
 800bd3e:	f00c fd69 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3503.69537303091f);
 800bd42:	687b      	ldr	r3, [r7, #4]
 800bd44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd48:	ed9f 0a99 	vldr	s0, [pc, #612]	; 800bfb0 <_ZN16MainViewViewBaseC1Ev+0x1128>
 800bd4c:	4618      	mov	r0, r3
 800bd4e:	f00c fd61 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3445.38761143459f);
 800bd52:	687b      	ldr	r3, [r7, #4]
 800bd54:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd58:	ed9f 0a96 	vldr	s0, [pc, #600]	; 800bfb4 <_ZN16MainViewViewBaseC1Ev+0x112c>
 800bd5c:	4618      	mov	r0, r3
 800bd5e:	f00c fd59 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3378.3412081086f);
 800bd62:	687b      	ldr	r3, [r7, #4]
 800bd64:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd68:	ed9f 0a93 	vldr	s0, [pc, #588]	; 800bfb8 <_ZN16MainViewViewBaseC1Ev+0x1130>
 800bd6c:	4618      	mov	r0, r3
 800bd6e:	f00c fd51 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3303.57380212666f);
 800bd72:	687b      	ldr	r3, [r7, #4]
 800bd74:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd78:	ed9f 0a90 	vldr	s0, [pc, #576]	; 800bfbc <_ZN16MainViewViewBaseC1Ev+0x1134>
 800bd7c:	4618      	mov	r0, r3
 800bd7e:	f00c fd49 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3222.17802057502f);
 800bd82:	687b      	ldr	r3, [r7, #4]
 800bd84:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd88:	ed9f 0a8d 	vldr	s0, [pc, #564]	; 800bfc0 <_ZN16MainViewViewBaseC1Ev+0x1138>
 800bd8c:	4618      	mov	r0, r3
 800bd8e:	f00c fd41 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3135.30817200449f);
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bd98:	ed9f 0a8a 	vldr	s0, [pc, #552]	; 800bfc4 <_ZN16MainViewViewBaseC1Ev+0x113c>
 800bd9c:	4618      	mov	r0, r3
 800bd9e:	f00c fd39 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3044.166248269f);
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bda8:	ed9f 0a87 	vldr	s0, [pc, #540]	; 800bfc8 <_ZN16MainViewViewBaseC1Ev+0x1140>
 800bdac:	4618      	mov	r0, r3
 800bdae:	f00c fd31 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2949.98745373155f);
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bdb8:	ed9f 0a84 	vldr	s0, [pc, #528]	; 800bfcc <_ZN16MainViewViewBaseC1Ev+0x1144>
 800bdbc:	4618      	mov	r0, r3
 800bdbe:	f00c fd29 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2854.02518371323f);
 800bdc2:	687b      	ldr	r3, [r7, #4]
 800bdc4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bdc8:	ed9f 0a81 	vldr	s0, [pc, #516]	; 800bfd0 <_ZN16MainViewViewBaseC1Ev+0x1148>
 800bdcc:	4618      	mov	r0, r3
 800bdce:	f00c fd21 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2757.53615856496f);
 800bdd2:	687b      	ldr	r3, [r7, #4]
 800bdd4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bdd8:	ed9f 0a7e 	vldr	s0, [pc, #504]	; 800bfd4 <_ZN16MainViewViewBaseC1Ev+0x114c>
 800bddc:	4618      	mov	r0, r3
 800bdde:	f00c fd19 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2661.76522859386f);
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bde8:	ed9f 0a7b 	vldr	s0, [pc, #492]	; 800bfd8 <_ZN16MainViewViewBaseC1Ev+0x1150>
 800bdec:	4618      	mov	r0, r3
 800bdee:	f00c fd11 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2567.93050714519f);
 800bdf2:	687b      	ldr	r3, [r7, #4]
 800bdf4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bdf8:	ed9f 0a78 	vldr	s0, [pc, #480]	; 800bfdc <_ZN16MainViewViewBaseC1Ev+0x1154>
 800bdfc:	4618      	mov	r0, r3
 800bdfe:	f00c fd09 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2477.20883705247f);
 800be02:	687b      	ldr	r3, [r7, #4]
 800be04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be08:	ed9f 0a75 	vldr	s0, [pc, #468]	; 800bfe0 <_ZN16MainViewViewBaseC1Ev+0x1158>
 800be0c:	4618      	mov	r0, r3
 800be0e:	f00c fd01 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2390.72175970029f);
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be18:	ed9f 0a72 	vldr	s0, [pc, #456]	; 800bfe4 <_ZN16MainViewViewBaseC1Ev+0x115c>
 800be1c:	4618      	mov	r0, r3
 800be1e:	f00c fcf9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2309.52218834859f);
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be28:	ed9f 0a6f 	vldr	s0, [pc, #444]	; 800bfe8 <_ZN16MainViewViewBaseC1Ev+0x1160>
 800be2c:	4618      	mov	r0, r3
 800be2e:	f00c fcf1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2234.58193493706f);
 800be32:	687b      	ldr	r3, [r7, #4]
 800be34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be38:	ed9f 0a6c 	vldr	s0, [pc, #432]	; 800bfec <_ZN16MainViewViewBaseC1Ev+0x1164>
 800be3c:	4618      	mov	r0, r3
 800be3e:	f00c fce9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2166.78013694806f);
 800be42:	687b      	ldr	r3, [r7, #4]
 800be44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be48:	ed9f 0a69 	vldr	s0, [pc, #420]	; 800bff0 <_ZN16MainViewViewBaseC1Ev+0x1168>
 800be4c:	4618      	mov	r0, r3
 800be4e:	f00c fce1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2106.89301267804f);
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be58:	ed9f 0a66 	vldr	s0, [pc, #408]	; 800bff4 <_ZN16MainViewViewBaseC1Ev+0x116c>
 800be5c:	4618      	mov	r0, r3
 800be5e:	f00c fcd9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2055.58465989646f);
 800be62:	687b      	ldr	r3, [r7, #4]
 800be64:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be68:	ed9f 0a63 	vldr	s0, [pc, #396]	; 800bff8 <_ZN16MainViewViewBaseC1Ev+0x1170>
 800be6c:	4618      	mov	r0, r3
 800be6e:	f00c fcd1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2013.39932441127f);
 800be72:	687b      	ldr	r3, [r7, #4]
 800be74:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be78:	ed9f 0a60 	vldr	s0, [pc, #384]	; 800bffc <_ZN16MainViewViewBaseC1Ev+0x1174>
 800be7c:	4618      	mov	r0, r3
 800be7e:	f00c fcc9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1980.75508403971f);
 800be82:	687b      	ldr	r3, [r7, #4]
 800be84:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be88:	ed9f 0a5d 	vldr	s0, [pc, #372]	; 800c000 <_ZN16MainViewViewBaseC1Ev+0x1178>
 800be8c:	4618      	mov	r0, r3
 800be8e:	f00c fcc1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1957.93907588148f);
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800be98:	ed9f 0a5a 	vldr	s0, [pc, #360]	; 800c004 <_ZN16MainViewViewBaseC1Ev+0x117c>
 800be9c:	4618      	mov	r0, r3
 800be9e:	f00c fcb9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1945.1042817061f);
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bea8:	ed9f 0a57 	vldr	s0, [pc, #348]	; 800c008 <_ZN16MainViewViewBaseC1Ev+0x1180>
 800beac:	4618      	mov	r0, r3
 800beae:	f00c fcb1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1942.26794078699f);
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800beb8:	ed9f 0a54 	vldr	s0, [pc, #336]	; 800c00c <_ZN16MainViewViewBaseC1Ev+0x1184>
 800bebc:	4618      	mov	r0, r3
 800bebe:	f00c fca9 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1949.31162629146f);
 800bec2:	687b      	ldr	r3, [r7, #4]
 800bec4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bec8:	ed9f 0a51 	vldr	s0, [pc, #324]	; 800c010 <_ZN16MainViewViewBaseC1Ev+0x1188>
 800becc:	4618      	mov	r0, r3
 800bece:	f00c fca1 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1965.98289062426f);
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bed8:	ed9f 0a4e 	vldr	s0, [pc, #312]	; 800c014 <_ZN16MainViewViewBaseC1Ev+0x118c>
 800bedc:	4618      	mov	r0, r3
 800bede:	f00c fc99 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1991.89859887366f);
 800bee2:	687b      	ldr	r3, [r7, #4]
 800bee4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bee8:	ed9f 0a4b 	vldr	s0, [pc, #300]	; 800c018 <_ZN16MainViewViewBaseC1Ev+0x1190>
 800beec:	4618      	mov	r0, r3
 800beee:	f00c fc91 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2026.54977969581f);
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bef8:	ed9f 0a48 	vldr	s0, [pc, #288]	; 800c01c <_ZN16MainViewViewBaseC1Ev+0x1194>
 800befc:	4618      	mov	r0, r3
 800befe:	f00c fc89 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2069.3080249602f);
 800bf02:	687b      	ldr	r3, [r7, #4]
 800bf04:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bf08:	ed9f 0a45 	vldr	s0, [pc, #276]	; 800c020 <_ZN16MainViewViewBaseC1Ev+0x1198>
 800bf0c:	4618      	mov	r0, r3
 800bf0e:	f00c fc81 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2119.433335051f);
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bf18:	ed9f 0a42 	vldr	s0, [pc, #264]	; 800c024 <_ZN16MainViewViewBaseC1Ev+0x119c>
 800bf1c:	4618      	mov	r0, r3
 800bf1e:	f00c fc79 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2176.08324500966f);
 800bf22:	687b      	ldr	r3, [r7, #4]
 800bf24:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bf28:	ed9f 0a3f 	vldr	s0, [pc, #252]	; 800c028 <_ZN16MainViewViewBaseC1Ev+0x11a0>
 800bf2c:	4618      	mov	r0, r3
 800bf2e:	f00c fc71 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2238.32337033183f);
 800bf32:	687b      	ldr	r3, [r7, #4]
 800bf34:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bf38:	ed9f 0a3c 	vldr	s0, [pc, #240]	; 800c02c <_ZN16MainViewViewBaseC1Ev+0x11a4>
 800bf3c:	4618      	mov	r0, r3
 800bf3e:	f00c fc69 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2305.13876941222f);
 800bf42:	687b      	ldr	r3, [r7, #4]
 800bf44:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800bf48:	ed9f 0a39 	vldr	s0, [pc, #228]	; 800c030 <_ZN16MainViewViewBaseC1Ev+0x11a8>
 800bf4c:	4618      	mov	r0, r3
 800bf4e:	e0e1      	b.n	800c114 <_ZN16MainViewViewBaseC1Ev+0x128c>
 800bf50:	44d29379 	.word	0x44d29379
 800bf54:	44e5605e 	.word	0x44e5605e
 800bf58:	44f85c9c 	.word	0x44f85c9c
 800bf5c:	4505ae4e 	.word	0x4505ae4e
 800bf60:	450f1a60 	.word	0x450f1a60
 800bf64:	45185cee 	.word	0x45185cee
 800bf68:	452160d8 	.word	0x452160d8
 800bf6c:	452a11b3 	.word	0x452a11b3
 800bf70:	45325c00 	.word	0x45325c00
 800bf74:	453a2d68 	.word	0x453a2d68
 800bf78:	454174ec 	.word	0x454174ec
 800bf7c:	45482318 	.word	0x45482318
 800bf80:	454e2a2c 	.word	0x454e2a2c
 800bf84:	45537e46 	.word	0x45537e46
 800bf88:	45581580 	.word	0x45581580
 800bf8c:	455be809 	.word	0x455be809
 800bf90:	455ef041 	.word	0x455ef041
 800bf94:	45612abf 	.word	0x45612abf
 800bf98:	4562965d 	.word	0x4562965d
 800bf9c:	45633438 	.word	0x45633438
 800bfa0:	456307a8 	.word	0x456307a8
 800bfa4:	45621639 	.word	0x45621639
 800bfa8:	45606791 	.word	0x45606791
 800bfac:	455e0559 	.word	0x455e0559
 800bfb0:	455afb20 	.word	0x455afb20
 800bfb4:	45575634 	.word	0x45575634
 800bfb8:	45532576 	.word	0x45532576
 800bfbc:	454e792e 	.word	0x454e792e
 800bfc0:	454962d9 	.word	0x454962d9
 800bfc4:	4543f4ee 	.word	0x4543f4ee
 800bfc8:	453e42a9 	.word	0x453e42a9
 800bfcc:	45385fcd 	.word	0x45385fcd
 800bfd0:	45326067 	.word	0x45326067
 800bfd4:	452c5894 	.word	0x452c5894
 800bfd8:	45265c3e 	.word	0x45265c3e
 800bfdc:	45207ee3 	.word	0x45207ee3
 800bfe0:	451ad357 	.word	0x451ad357
 800bfe4:	45156b8c 	.word	0x45156b8c
 800bfe8:	4510585b 	.word	0x4510585b
 800bfec:	450ba950 	.word	0x450ba950
 800bff0:	45076c7b 	.word	0x45076c7b
 800bff4:	4503ae4a 	.word	0x4503ae4a
 800bff8:	4500795b 	.word	0x4500795b
 800bffc:	44fbacc7 	.word	0x44fbacc7
 800c000:	44f7982a 	.word	0x44f7982a
 800c004:	44f4be0d 	.word	0x44f4be0d
 800c008:	44f32356 	.word	0x44f32356
 800c00c:	44f2c893 	.word	0x44f2c893
 800c010:	44f3a9f9 	.word	0x44f3a9f9
 800c014:	44f5bf74 	.word	0x44f5bf74
 800c018:	44f8fcc1 	.word	0x44f8fcc1
 800c01c:	44fd5198 	.word	0x44fd5198
 800c020:	450154ee 	.word	0x450154ee
 800c024:	450476ef 	.word	0x450476ef
 800c028:	45080155 	.word	0x45080155
 800c02c:	450be52d 	.word	0x450be52d
 800c030:	45101238 	.word	0x45101238
 800c034:	45147725 	.word	0x45147725
 800c038:	451901bf 	.word	0x451901bf
 800c03c:	451d9f2e 	.word	0x451d9f2e
 800c040:	45223c2b 	.word	0x45223c2b
 800c044:	4526c546 	.word	0x4526c546
 800c048:	452b2719 	.word	0x452b2719
 800c04c:	452f4e8f 	.word	0x452f4e8f
 800c050:	45332919 	.word	0x45332919
 800c054:	4536a4ef 	.word	0x4536a4ef
 800c058:	4539b142 	.word	0x4539b142
 800c05c:	453c3e7a 	.word	0x453c3e7a
 800c060:	453e3e60 	.word	0x453e3e60
 800c064:	453fa453 	.word	0x453fa453
 800c068:	4540656b 	.word	0x4540656b
 800c06c:	454078a4 	.word	0x454078a4
 800c070:	453fd6f6 	.word	0x453fd6f6
 800c074:	453e7b73 	.word	0x453e7b73
 800c078:	453c6354 	.word	0x453c6354
 800c07c:	45398e0a 	.word	0x45398e0a
 800c080:	4535fd3f 	.word	0x4535fd3f
 800c084:	4531b4d5 	.word	0x4531b4d5
 800c088:	452cbae2 	.word	0x452cbae2
 800c08c:	45271798 	.word	0x45271798
 800c090:	4520d539 	.word	0x4520d539
 800c094:	4519fff6 	.word	0x4519fff6
 800c098:	4512a5cd 	.word	0x4512a5cd
 800c09c:	450ad665 	.word	0x450ad665
 800c0a0:	4502a2e1 	.word	0x4502a2e1
 800c0a4:	44f43b5a 	.word	0x44f43b5a
 800c0a8:	44e2b497 	.word	0x44e2b497
 800c0ac:	44d0da3b 	.word	0x44d0da3b
 800c0b0:	44bed651 	.word	0x44bed651
 800c0b4:	44acd3ae 	.word	0x44acd3ae
 800c0b8:	449afd7c 	.word	0x449afd7c
 800c0bc:	44897eb8 	.word	0x44897eb8
 800c0c0:	44710373 	.word	0x44710373
 800c0c4:	44505f69 	.word	0x44505f69
 800c0c8:	44316084 	.word	0x44316084
 800c0cc:	441451e0 	.word	0x441451e0
 800c0d0:	43f2f343 	.word	0x43f2f343
 800c0d4:	43c23061 	.word	0x43c23061
 800c0d8:	4396cef3 	.word	0x4396cef3
 800c0dc:	43626922 	.word	0x43626922
 800c0e0:	43236ed6 	.word	0x43236ed6
 800c0e4:	42e27549 	.word	0x42e27549
 800c0e8:	42986bd0 	.word	0x42986bd0
 800c0ec:	42529a21 	.word	0x42529a21
 800c0f0:	422ab8f0 	.word	0x422ab8f0
 800c0f4:	423928d4 	.word	0x423928d4
 800c0f8:	427d4ce5 	.word	0x427d4ce5
 800c0fc:	42bafc4d 	.word	0x42bafc4d
 800c100:	43085ce0 	.word	0x43085ce0
 800c104:	433f5fa7 	.word	0x433f5fa7
 800c108:	4380eb69 	.word	0x4380eb69
 800c10c:	43a77a72 	.word	0x43a77a72
 800c110:	43d2e87d 	.word	0x43d2e87d
 800c114:	f00c fb7e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2375.44655479914f);
 800c118:	687b      	ldr	r3, [r7, #4]
 800c11a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c11e:	ed1f 0a3b 	vldr	s0, [pc, #-236]	; 800c034 <_ZN16MainViewViewBaseC1Ev+0x11ac>
 800c122:	4618      	mov	r0, r3
 800c124:	f00c fb76 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2448.10922594882f);
 800c128:	687b      	ldr	r3, [r7, #4]
 800c12a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c12e:	ed1f 0a3e 	vldr	s0, [pc, #-248]	; 800c038 <_ZN16MainViewViewBaseC1Ev+0x11b0>
 800c132:	4618      	mov	r0, r3
 800c134:	f00c fb6e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2521.94863912144f);
 800c138:	687b      	ldr	r3, [r7, #4]
 800c13a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c13e:	ed1f 0a41 	vldr	s0, [pc, #-260]	; 800c03c <_ZN16MainViewViewBaseC1Ev+0x11b4>
 800c142:	4618      	mov	r0, r3
 800c144:	f00c fb66 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2595.76056303148f);
 800c148:	687b      	ldr	r3, [r7, #4]
 800c14a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c14e:	ed1f 0a44 	vldr	s0, [pc, #-272]	; 800c040 <_ZN16MainViewViewBaseC1Ev+0x11b8>
 800c152:	4618      	mov	r0, r3
 800c154:	f00c fb5e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2668.32948177598f);
 800c158:	687b      	ldr	r3, [r7, #4]
 800c15a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c15e:	ed1f 0a47 	vldr	s0, [pc, #-284]	; 800c044 <_ZN16MainViewViewBaseC1Ev+0x11bc>
 800c162:	4618      	mov	r0, r3
 800c164:	f00c fb56 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2738.4435797728f);
 800c168:	687b      	ldr	r3, [r7, #4]
 800c16a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c16e:	ed1f 0a4a 	vldr	s0, [pc, #-296]	; 800c048 <_ZN16MainViewViewBaseC1Ev+0x11c0>
 800c172:	4618      	mov	r0, r3
 800c174:	f00c fb4e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2804.90985277496f);
 800c178:	687b      	ldr	r3, [r7, #4]
 800c17a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c17e:	ed1f 0a4d 	vldr	s0, [pc, #-308]	; 800c04c <_ZN16MainViewViewBaseC1Ev+0x11c4>
 800c182:	4618      	mov	r0, r3
 800c184:	f00c fb46 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2866.56866627047f);
 800c188:	687b      	ldr	r3, [r7, #4]
 800c18a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c18e:	ed1f 0a50 	vldr	s0, [pc, #-320]	; 800c050 <_ZN16MainViewViewBaseC1Ev+0x11c8>
 800c192:	4618      	mov	r0, r3
 800c194:	f00c fb3e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2922.30828770099f);
 800c198:	687b      	ldr	r3, [r7, #4]
 800c19a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c19e:	ed1f 0a53 	vldr	s0, [pc, #-332]	; 800c054 <_ZN16MainViewViewBaseC1Ev+0x11cc>
 800c1a2:	4618      	mov	r0, r3
 800c1a4:	f00c fb36 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2971.07872543616f);
 800c1a8:	687b      	ldr	r3, [r7, #4]
 800c1aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1ae:	ed1f 0a56 	vldr	s0, [pc, #-344]	; 800c058 <_ZN16MainViewViewBaseC1Ev+0x11d0>
 800c1b2:	4618      	mov	r0, r3
 800c1b4:	f00c fb2e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3011.90481544661f);
 800c1b8:	687b      	ldr	r3, [r7, #4]
 800c1ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1be:	ed1f 0a59 	vldr	s0, [pc, #-356]	; 800c05c <_ZN16MainViewViewBaseC1Ev+0x11d4>
 800c1c2:	4618      	mov	r0, r3
 800c1c4:	f00c fb26 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3043.89854139799f);
 800c1c8:	687b      	ldr	r3, [r7, #4]
 800c1ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1ce:	ed1f 0a5c 	vldr	s0, [pc, #-368]	; 800c060 <_ZN16MainViewViewBaseC1Ev+0x11d8>
 800c1d2:	4618      	mov	r0, r3
 800c1d4:	f00c fb1e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3066.27023498035f);
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1de:	ed1f 0a5f 	vldr	s0, [pc, #-380]	; 800c064 <_ZN16MainViewViewBaseC1Ev+0x11dc>
 800c1e2:	4618      	mov	r0, r3
 800c1e4:	f00c fb16 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3078.33868226174f);
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1ee:	ed1f 0a62 	vldr	s0, [pc, #-392]	; 800c068 <_ZN16MainViewViewBaseC1Ev+0x11e0>
 800c1f2:	4618      	mov	r0, r3
 800c1f4:	f00c fb0e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3079.54003172265f);
 800c1f8:	687b      	ldr	r3, [r7, #4]
 800c1fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c1fe:	ed1f 0a65 	vldr	s0, [pc, #-404]	; 800c06c <_ZN16MainViewViewBaseC1Ev+0x11e4>
 800c202:	4618      	mov	r0, r3
 800c204:	f00c fb06 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3069.43510535031f);
 800c208:	687b      	ldr	r3, [r7, #4]
 800c20a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c20e:	ed1f 0a68 	vldr	s0, [pc, #-416]	; 800c070 <_ZN16MainViewViewBaseC1Ev+0x11e8>
 800c212:	4618      	mov	r0, r3
 800c214:	f00c fafe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3047.71550665825f);
 800c218:	687b      	ldr	r3, [r7, #4]
 800c21a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c21e:	ed1f 0a6b 	vldr	s0, [pc, #-428]	; 800c074 <_ZN16MainViewViewBaseC1Ev+0x11ec>
 800c222:	4618      	mov	r0, r3
 800c224:	f00c faf6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3014.20800126284f);
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c22e:	ed1f 0a6e 	vldr	s0, [pc, #-440]	; 800c078 <_ZN16MainViewViewBaseC1Ev+0x11f0>
 800c232:	4618      	mov	r0, r3
 800c234:	f00c faee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2968.87739554036f);
 800c238:	687b      	ldr	r3, [r7, #4]
 800c23a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c23e:	ed1f 0a71 	vldr	s0, [pc, #-452]	; 800c07c <_ZN16MainViewViewBaseC1Ev+0x11f4>
 800c242:	4618      	mov	r0, r3
 800c244:	f00c fae6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2911.82778837808f);
 800c248:	687b      	ldr	r3, [r7, #4]
 800c24a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c24e:	ed1f 0a74 	vldr	s0, [pc, #-464]	; 800c080 <_ZN16MainViewViewBaseC1Ev+0x11f8>
 800c252:	4618      	mov	r0, r3
 800c254:	f00c fade 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2843.30211356424f);
 800c258:	687b      	ldr	r3, [r7, #4]
 800c25a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c25e:	ed1f 0a77 	vldr	s0, [pc, #-476]	; 800c084 <_ZN16MainViewViewBaseC1Ev+0x11fc>
 800c262:	4618      	mov	r0, r3
 800c264:	f00c fad6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2763.68011441604f);
 800c268:	687b      	ldr	r3, [r7, #4]
 800c26a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c26e:	ed1f 0a7a 	vldr	s0, [pc, #-488]	; 800c088 <_ZN16MainViewViewBaseC1Ev+0x1200>
 800c272:	4618      	mov	r0, r3
 800c274:	f00c face 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2673.4746622863f);
 800c278:	687b      	ldr	r3, [r7, #4]
 800c27a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c27e:	ed1f 0a7d 	vldr	s0, [pc, #-500]	; 800c08c <_ZN16MainViewViewBaseC1Ev+0x1204>
 800c282:	4618      	mov	r0, r3
 800c284:	f00c fac6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2573.32650786433f);
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c28e:	ed1f 0a80 	vldr	s0, [pc, #-512]	; 800c090 <_ZN16MainViewViewBaseC1Ev+0x1208>
 800c292:	4618      	mov	r0, r3
 800c294:	f00c fabe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2463.99754642104f);
 800c298:	687b      	ldr	r3, [r7, #4]
 800c29a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c29e:	ed1f 0a83 	vldr	s0, [pc, #-524]	; 800c094 <_ZN16MainViewViewBaseC1Ev+0x120c>
 800c2a2:	4618      	mov	r0, r3
 800c2a4:	f00c fab6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2346.362568763f);
 800c2a8:	687b      	ldr	r3, [r7, #4]
 800c2aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2ae:	ed1f 0a86 	vldr	s0, [pc, #-536]	; 800c098 <_ZN16MainViewViewBaseC1Ev+0x1210>
 800c2b2:	4618      	mov	r0, r3
 800c2b4:	f00c faae 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2221.39977876022f);
 800c2b8:	687b      	ldr	r3, [r7, #4]
 800c2ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2be:	ed1f 0a89 	vldr	s0, [pc, #-548]	; 800c09c <_ZN16MainViewViewBaseC1Ev+0x1214>
 800c2c2:	4618      	mov	r0, r3
 800c2c4:	f00c faa6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2090.17997322145f);
 800c2c8:	687b      	ldr	r3, [r7, #4]
 800c2ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2ce:	ed1f 0a8c 	vldr	s0, [pc, #-560]	; 800c0a0 <_ZN16MainViewViewBaseC1Ev+0x1218>
 800c2d2:	4618      	mov	r0, r3
 800c2d4:	f00c fa9e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1953.85471604644f);
 800c2d8:	687b      	ldr	r3, [r7, #4]
 800c2da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2de:	ed1f 0a8f 	vldr	s0, [pc, #-572]	; 800c0a4 <_ZN16MainViewViewBaseC1Ev+0x121c>
 800c2e2:	4618      	mov	r0, r3
 800c2e4:	f00c fa96 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1813.64340885993f);
 800c2e8:	687b      	ldr	r3, [r7, #4]
 800c2ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2ee:	ed1f 0a92 	vldr	s0, [pc, #-584]	; 800c0a8 <_ZN16MainViewViewBaseC1Ev+0x1220>
 800c2f2:	4618      	mov	r0, r3
 800c2f4:	f00c fa8e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1670.81975385948f);
 800c2f8:	687b      	ldr	r3, [r7, #4]
 800c2fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c2fe:	ed1f 0a95 	vldr	s0, [pc, #-596]	; 800c0ac <_ZN16MainViewViewBaseC1Ev+0x1224>
 800c302:	4618      	mov	r0, r3
 800c304:	f00c fa86 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1526.69735672767f);
 800c308:	687b      	ldr	r3, [r7, #4]
 800c30a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c30e:	ed1f 0a98 	vldr	s0, [pc, #-608]	; 800c0b0 <_ZN16MainViewViewBaseC1Ev+0x1228>
 800c312:	4618      	mov	r0, r3
 800c314:	f00c fa7e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1382.61496923895f);
 800c318:	687b      	ldr	r3, [r7, #4]
 800c31a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c31e:	ed1f 0a9b 	vldr	s0, [pc, #-620]	; 800c0b4 <_ZN16MainViewViewBaseC1Ev+0x122c>
 800c322:	4618      	mov	r0, r3
 800c324:	f00c fa76 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1239.92132944347f);
 800c328:	687b      	ldr	r3, [r7, #4]
 800c32a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c32e:	ed1f 0a9e 	vldr	s0, [pc, #-632]	; 800c0b8 <_ZN16MainViewViewBaseC1Ev+0x1230>
 800c332:	4618      	mov	r0, r3
 800c334:	f00c fa6e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1099.95995587542f);
 800c338:	687b      	ldr	r3, [r7, #4]
 800c33a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c33e:	ed1f 0aa1 	vldr	s0, [pc, #-644]	; 800c0bc <_ZN16MainViewViewBaseC1Ev+0x1234>
 800c342:	4618      	mov	r0, r3
 800c344:	f00c fa66 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(964.053892264863f);
 800c348:	687b      	ldr	r3, [r7, #4]
 800c34a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c34e:	ed1f 0aa4 	vldr	s0, [pc, #-656]	; 800c0c0 <_ZN16MainViewViewBaseC1Ev+0x1238>
 800c352:	4618      	mov	r0, r3
 800c354:	f00c fa5e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(833.490758502282f);
 800c358:	687b      	ldr	r3, [r7, #4]
 800c35a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c35e:	ed1f 0aa7 	vldr	s0, [pc, #-668]	; 800c0c4 <_ZN16MainViewViewBaseC1Ev+0x123c>
 800c362:	4618      	mov	r0, r3
 800c364:	f00c fa56 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(709.508057423063f);
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c36e:	ed1f 0aaa 	vldr	s0, [pc, #-680]	; 800c0c8 <_ZN16MainViewViewBaseC1Ev+0x1240>
 800c372:	4618      	mov	r0, r3
 800c374:	f00c fa4e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(593.279270304739f);
 800c378:	687b      	ldr	r3, [r7, #4]
 800c37a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c37e:	ed1f 0aad 	vldr	s0, [pc, #-692]	; 800c0cc <_ZN16MainViewViewBaseC1Ev+0x1244>
 800c382:	4618      	mov	r0, r3
 800c384:	f00c fa46 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(485.900483250455f);
 800c388:	687b      	ldr	r3, [r7, #4]
 800c38a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c38e:	ed1f 0ab0 	vldr	s0, [pc, #-704]	; 800c0d0 <_ZN16MainViewViewBaseC1Ev+0x1248>
 800c392:	4618      	mov	r0, r3
 800c394:	f00c fa3e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(388.377965351926f);
 800c398:	687b      	ldr	r3, [r7, #4]
 800c39a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c39e:	ed1f 0ab3 	vldr	s0, [pc, #-716]	; 800c0d4 <_ZN16MainViewViewBaseC1Ev+0x124c>
 800c3a2:	4618      	mov	r0, r3
 800c3a4:	f00c fa36 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(301.616800551568f);
 800c3a8:	687b      	ldr	r3, [r7, #4]
 800c3aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3ae:	ed1f 0ab6 	vldr	s0, [pc, #-728]	; 800c0d8 <_ZN16MainViewViewBaseC1Ev+0x1250>
 800c3b2:	4618      	mov	r0, r3
 800c3b4:	f00c fa2e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(226.410680474746f);
 800c3b8:	687b      	ldr	r3, [r7, #4]
 800c3ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3be:	ed1f 0ab9 	vldr	s0, [pc, #-740]	; 800c0dc <_ZN16MainViewViewBaseC1Ev+0x1254>
 800c3c2:	4618      	mov	r0, r3
 800c3c4:	f00c fa26 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(163.43295501403f);
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3ce:	ed1f 0abc 	vldr	s0, [pc, #-752]	; 800c0e0 <_ZN16MainViewViewBaseC1Ev+0x1258>
 800c3d2:	4618      	mov	r0, r3
 800c3d4:	f00c fa1e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(113.229075138452f);
 800c3d8:	687b      	ldr	r3, [r7, #4]
 800c3da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3de:	ed1f 0abf 	vldr	s0, [pc, #-764]	; 800c0e4 <_ZN16MainViewViewBaseC1Ev+0x125c>
 800c3e2:	4618      	mov	r0, r3
 800c3e4:	f00c fa16 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(76.2105749778991f);
 800c3e8:	687b      	ldr	r3, [r7, #4]
 800c3ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3ee:	ed1f 0ac2 	vldr	s0, [pc, #-776]	; 800c0e8 <_ZN16MainViewViewBaseC1Ev+0x1260>
 800c3f2:	4618      	mov	r0, r3
 800c3f4:	f00c fa0e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(52.6505180589065f);
 800c3f8:	687b      	ldr	r3, [r7, #4]
 800c3fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c3fe:	ed1f 0ac5 	vldr	s0, [pc, #-788]	; 800c0ec <_ZN16MainViewViewBaseC1Ev+0x1264>
 800c402:	4618      	mov	r0, r3
 800c404:	f00c fa06 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(42.6806035220837f);
 800c408:	687b      	ldr	r3, [r7, #4]
 800c40a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c40e:	ed1f 0ac8 	vldr	s0, [pc, #-800]	; 800c0f0 <_ZN16MainViewViewBaseC1Ev+0x1268>
 800c412:	4618      	mov	r0, r3
 800c414:	f00c f9fe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(46.2898714575933f);
 800c418:	687b      	ldr	r3, [r7, #4]
 800c41a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c41e:	ed1f 0acb 	vldr	s0, [pc, #-812]	; 800c0f4 <_ZN16MainViewViewBaseC1Ev+0x126c>
 800c422:	4618      	mov	r0, r3
 800c424:	f00c f9f6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(63.3250931045901f);
 800c428:	687b      	ldr	r3, [r7, #4]
 800c42a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c42e:	ed1f 0ace 	vldr	s0, [pc, #-824]	; 800c0f8 <_ZN16MainViewViewBaseC1Ev+0x1270>
 800c432:	4618      	mov	r0, r3
 800c434:	f00c f9ee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(93.4927744120464f);
 800c438:	687b      	ldr	r3, [r7, #4]
 800c43a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c43e:	ed1f 0ad1 	vldr	s0, [pc, #-836]	; 800c0fc <_ZN16MainViewViewBaseC1Ev+0x1274>
 800c442:	4618      	mov	r0, r3
 800c444:	f00c f9e6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(136.362787286027f);
 800c448:	687b      	ldr	r3, [r7, #4]
 800c44a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c44e:	ed1f 0ad4 	vldr	s0, [pc, #-848]	; 800c100 <_ZN16MainViewViewBaseC1Ev+0x1278>
 800c452:	4618      	mov	r0, r3
 800c454:	f00c f9de 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(191.373643826556f);
 800c458:	687b      	ldr	r3, [r7, #4]
 800c45a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c45e:	ed1f 0ad7 	vldr	s0, [pc, #-860]	; 800c104 <_ZN16MainViewViewBaseC1Ev+0x127c>
 800c462:	4618      	mov	r0, r3
 800c464:	f00c f9d6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(257.839143167425f);
 800c468:	687b      	ldr	r3, [r7, #4]
 800c46a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c46e:	ed1f 0ada 	vldr	s0, [pc, #-872]	; 800c108 <_ZN16MainViewViewBaseC1Ev+0x1280>
 800c472:	4618      	mov	r0, r3
 800c474:	f00c f9ce 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(334.956595035294f);
 800c478:	687b      	ldr	r3, [r7, #4]
 800c47a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c47e:	ed1f 0add 	vldr	s0, [pc, #-884]	; 800c10c <_ZN16MainViewViewBaseC1Ev+0x1284>
 800c482:	4618      	mov	r0, r3
 800c484:	f00c f9c6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(421.816315070845f);
 800c488:	687b      	ldr	r3, [r7, #4]
 800c48a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c48e:	ed1f 0ae0 	vldr	s0, [pc, #-896]	; 800c110 <_ZN16MainViewViewBaseC1Ev+0x1288>
 800c492:	4618      	mov	r0, r3
 800c494:	f00c f9be 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(517.412361789622f);
 800c498:	687b      	ldr	r3, [r7, #4]
 800c49a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c49e:	ed9f 0ae2 	vldr	s0, [pc, #904]	; 800c828 <_ZN16MainViewViewBaseC1Ev+0x19a0>
 800c4a2:	4618      	mov	r0, r3
 800c4a4:	f00c f9b6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(620.654370745523f);
 800c4a8:	687b      	ldr	r3, [r7, #4]
 800c4aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4ae:	ed9f 0adf 	vldr	s0, [pc, #892]	; 800c82c <_ZN16MainViewViewBaseC1Ev+0x19a4>
 800c4b2:	4618      	mov	r0, r3
 800c4b4:	f00c f9ae 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(730.380356240368f);
 800c4b8:	687b      	ldr	r3, [r7, #4]
 800c4ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4be:	ed9f 0adc 	vldr	s0, [pc, #880]	; 800c830 <_ZN16MainViewViewBaseC1Ev+0x19a8>
 800c4c2:	4618      	mov	r0, r3
 800c4c4:	f00c f9a6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(845.37028959636f);
 800c4c8:	687b      	ldr	r3, [r7, #4]
 800c4ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4ce:	ed9f 0ad9 	vldr	s0, [pc, #868]	; 800c834 <_ZN16MainViewViewBaseC1Ev+0x19ac>
 800c4d2:	4618      	mov	r0, r3
 800c4d4:	f00c f99e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(964.360467495699f);
 800c4d8:	687b      	ldr	r3, [r7, #4]
 800c4da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4de:	ed9f 0ad6 	vldr	s0, [pc, #856]	; 800c838 <_ZN16MainViewViewBaseC1Ev+0x19b0>
 800c4e2:	4618      	mov	r0, r3
 800c4e4:	f00c f996 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1086.05808950723f);
 800c4e8:	687b      	ldr	r3, [r7, #4]
 800c4ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4ee:	ed9f 0ad3 	vldr	s0, [pc, #844]	; 800c83c <_ZN16MainViewViewBaseC1Ev+0x19b4>
 800c4f2:	4618      	mov	r0, r3
 800c4f4:	f00c f98e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1209.15640558989f);
 800c4f8:	687b      	ldr	r3, [r7, #4]
 800c4fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c4fe:	ed9f 0ad0 	vldr	s0, [pc, #832]	; 800c840 <_ZN16MainViewViewBaseC1Ev+0x19b8>
 800c502:	4618      	mov	r0, r3
 800c504:	f00c f986 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1332.34988107002f);
 800c508:	687b      	ldr	r3, [r7, #4]
 800c50a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c50e:	ed9f 0acd 	vldr	s0, [pc, #820]	; 800c844 <_ZN16MainViewViewBaseC1Ev+0x19bc>
 800c512:	4618      	mov	r0, r3
 800c514:	f00c f97e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1454.34932207031f);
 800c518:	687b      	ldr	r3, [r7, #4]
 800c51a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c51e:	ed9f 0aca 	vldr	s0, [pc, #808]	; 800c848 <_ZN16MainViewViewBaseC1Ev+0x19c0>
 800c522:	4618      	mov	r0, r3
 800c524:	f00c f976 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1573.89676964443f);
 800c528:	687b      	ldr	r3, [r7, #4]
 800c52a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c52e:	ed9f 0ac7 	vldr	s0, [pc, #796]	; 800c84c <_ZN16MainViewViewBaseC1Ev+0x19c4>
 800c532:	4618      	mov	r0, r3
 800c534:	f00c f96e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1689.78000127185f);
 800c538:	687b      	ldr	r3, [r7, #4]
 800c53a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c53e:	ed9f 0ac4 	vldr	s0, [pc, #784]	; 800c850 <_ZN16MainViewViewBaseC1Ev+0x19c8>
 800c542:	4618      	mov	r0, r3
 800c544:	f00c f966 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1800.84653724104f);
 800c548:	687b      	ldr	r3, [r7, #4]
 800c54a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c54e:	ed9f 0ac1 	vldr	s0, [pc, #772]	; 800c854 <_ZN16MainViewViewBaseC1Ev+0x19cc>
 800c552:	4618      	mov	r0, r3
 800c554:	f00c f95e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1906.01670713524f);
 800c558:	687b      	ldr	r3, [r7, #4]
 800c55a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c55e:	ed9f 0abe 	vldr	s0, [pc, #760]	; 800c858 <_ZN16MainViewViewBaseC1Ev+0x19d0>
 800c562:	4618      	mov	r0, r3
 800c564:	f00c f956 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2004.29605104954f);
 800c568:	687b      	ldr	r3, [r7, #4]
 800c56a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c56e:	ed9f 0abb 	vldr	s0, [pc, #748]	; 800c85c <_ZN16MainViewViewBaseC1Ev+0x19d4>
 800c572:	4618      	mov	r0, r3
 800c574:	f00c f94e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2094.78654937146f);
 800c578:	687b      	ldr	r3, [r7, #4]
 800c57a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c57e:	ed9f 0ab8 	vldr	s0, [pc, #736]	; 800c860 <_ZN16MainViewViewBaseC1Ev+0x19d8>
 800c582:	4618      	mov	r0, r3
 800c584:	f00c f946 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2176.69675925518f);
 800c588:	687b      	ldr	r3, [r7, #4]
 800c58a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c58e:	ed9f 0ab5 	vldr	s0, [pc, #724]	; 800c864 <_ZN16MainViewViewBaseC1Ev+0x19dc>
 800c592:	4618      	mov	r0, r3
 800c594:	f00c f93e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2249.35059519109f);
 800c598:	687b      	ldr	r3, [r7, #4]
 800c59a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c59e:	ed9f 0ab2 	vldr	s0, [pc, #712]	; 800c868 <_ZN16MainViewViewBaseC1Ev+0x19e0>
 800c5a2:	4618      	mov	r0, r3
 800c5a4:	f00c f936 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2312.19479389216f);
 800c5a8:	687b      	ldr	r3, [r7, #4]
 800c5aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5ae:	ed9f 0aaf 	vldr	s0, [pc, #700]	; 800c86c <_ZN16MainViewViewBaseC1Ev+0x19e4>
 800c5b2:	4618      	mov	r0, r3
 800c5b4:	f00c f92e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2364.80485171087f);
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5be:	ed9f 0aac 	vldr	s0, [pc, #688]	; 800c870 <_ZN16MainViewViewBaseC1Ev+0x19e8>
 800c5c2:	4618      	mov	r0, r3
 800c5c4:	f00c f926 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2406.88943546893f);
 800c5c8:	687b      	ldr	r3, [r7, #4]
 800c5ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5ce:	ed9f 0aa9 	vldr	s0, [pc, #676]	; 800c874 <_ZN16MainViewViewBaseC1Ev+0x19ec>
 800c5d2:	4618      	mov	r0, r3
 800c5d4:	f00c f91e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2438.29320033238f);
 800c5d8:	687b      	ldr	r3, [r7, #4]
 800c5da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5de:	ed9f 0aa6 	vldr	s0, [pc, #664]	; 800c878 <_ZN16MainViewViewBaseC1Ev+0x19f0>
 800c5e2:	4618      	mov	r0, r3
 800c5e4:	f00c f916 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2458.99798635566f);
 800c5e8:	687b      	ldr	r3, [r7, #4]
 800c5ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5ee:	ed9f 0aa3 	vldr	s0, [pc, #652]	; 800c87c <_ZN16MainViewViewBaseC1Ev+0x19f4>
 800c5f2:	4618      	mov	r0, r3
 800c5f4:	f00c f90e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2469.12234008041f);
 800c5f8:	687b      	ldr	r3, [r7, #4]
 800c5fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c5fe:	ed9f 0aa0 	vldr	s0, [pc, #640]	; 800c880 <_ZN16MainViewViewBaseC1Ev+0x19f8>
 800c602:	4618      	mov	r0, r3
 800c604:	f00c f906 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2468.91947352481f);
 800c608:	687b      	ldr	r3, [r7, #4]
 800c60a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c60e:	ed9f 0a9d 	vldr	s0, [pc, #628]	; 800c884 <_ZN16MainViewViewBaseC1Ev+0x19fc>
 800c612:	4618      	mov	r0, r3
 800c614:	f00c f8fe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2458.77351973709f);
 800c618:	687b      	ldr	r3, [r7, #4]
 800c61a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c61e:	ed9f 0a9a 	vldr	s0, [pc, #616]	; 800c888 <_ZN16MainViewViewBaseC1Ev+0x1a00>
 800c622:	4618      	mov	r0, r3
 800c624:	f00c f8f6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2439.19432293755f);
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c62e:	ed9f 0a97 	vldr	s0, [pc, #604]	; 800c88c <_ZN16MainViewViewBaseC1Ev+0x1a04>
 800c632:	4618      	mov	r0, r3
 800c634:	f00c f8ee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2410.81068455502f);
 800c638:	687b      	ldr	r3, [r7, #4]
 800c63a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c63e:	ed9f 0a94 	vldr	s0, [pc, #592]	; 800c890 <_ZN16MainViewViewBaseC1Ev+0x1a08>
 800c642:	4618      	mov	r0, r3
 800c644:	f00c f8e6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2374.36208998218f);
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c64e:	ed9f 0a91 	vldr	s0, [pc, #580]	; 800c894 <_ZN16MainViewViewBaseC1Ev+0x1a0c>
 800c652:	4618      	mov	r0, r3
 800c654:	f00c f8de 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2330.68937852645f);
 800c658:	687b      	ldr	r3, [r7, #4]
 800c65a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c65e:	ed9f 0a8e 	vldr	s0, [pc, #568]	; 800c898 <_ZN16MainViewViewBaseC1Ev+0x1a10>
 800c662:	4618      	mov	r0, r3
 800c664:	f00c f8d6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2280.72391295925f);
 800c668:	687b      	ldr	r3, [r7, #4]
 800c66a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c66e:	ed9f 0a8b 	vldr	s0, [pc, #556]	; 800c89c <_ZN16MainViewViewBaseC1Ev+0x1a14>
 800c672:	4618      	mov	r0, r3
 800c674:	f00c f8ce 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2225.47586807717f);
 800c678:	687b      	ldr	r3, [r7, #4]
 800c67a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c67e:	ed9f 0a88 	vldr	s0, [pc, #544]	; 800c8a0 <_ZN16MainViewViewBaseC1Ev+0x1a18>
 800c682:	4618      	mov	r0, r3
 800c684:	f00c f8c6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2166.02149167661f);
 800c688:	687b      	ldr	r3, [r7, #4]
 800c68a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c68e:	ed9f 0a85 	vldr	s0, [pc, #532]	; 800c8a4 <_ZN16MainViewViewBaseC1Ev+0x1a1c>
 800c692:	4618      	mov	r0, r3
 800c694:	f00c f8be 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2103.48957747199f);
 800c698:	687b      	ldr	r3, [r7, #4]
 800c69a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c69e:	ed9f 0a82 	vldr	s0, [pc, #520]	; 800c8a8 <_ZN16MainViewViewBaseC1Ev+0x1a20>
 800c6a2:	4618      	mov	r0, r3
 800c6a4:	f00c f8b6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2039.04741596675f);
 800c6a8:	687b      	ldr	r3, [r7, #4]
 800c6aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6ae:	ed9f 0a7f 	vldr	s0, [pc, #508]	; 800c8ac <_ZN16MainViewViewBaseC1Ev+0x1a24>
 800c6b2:	4618      	mov	r0, r3
 800c6b4:	f00c f8ae 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1973.88602793813f);
 800c6b8:	687b      	ldr	r3, [r7, #4]
 800c6ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6be:	ed9f 0a7c 	vldr	s0, [pc, #496]	; 800c8b0 <_ZN16MainViewViewBaseC1Ev+0x1a28>
 800c6c2:	4618      	mov	r0, r3
 800c6c4:	f00c f8a6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1909.20552218248f);
 800c6c8:	687b      	ldr	r3, [r7, #4]
 800c6ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6ce:	ed9f 0a79 	vldr	s0, [pc, #484]	; 800c8b4 <_ZN16MainViewViewBaseC1Ev+0x1a2c>
 800c6d2:	4618      	mov	r0, r3
 800c6d4:	f00c f89e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1846.19997587994f);
 800c6d8:	687b      	ldr	r3, [r7, #4]
 800c6da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6de:	ed9f 0a76 	vldr	s0, [pc, #472]	; 800c8b8 <_ZN16MainViewViewBaseC1Ev+0x1a30>
 800c6e2:	4618      	mov	r0, r3
 800c6e4:	f00c f896 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1786.04253402068f);
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6ee:	ed9f 0a73 	vldr	s0, [pc, #460]	; 800c8bc <_ZN16MainViewViewBaseC1Ev+0x1a34>
 800c6f2:	4618      	mov	r0, r3
 800c6f4:	f00c f88e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1729.87080256671f);
 800c6f8:	687b      	ldr	r3, [r7, #4]
 800c6fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c6fe:	ed9f 0a70 	vldr	s0, [pc, #448]	; 800c8c0 <_ZN16MainViewViewBaseC1Ev+0x1a38>
 800c702:	4618      	mov	r0, r3
 800c704:	f00c f886 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1678.77255417956f);
 800c708:	687b      	ldr	r3, [r7, #4]
 800c70a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c70e:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 800c8c4 <_ZN16MainViewViewBaseC1Ev+0x1a3c>
 800c712:	4618      	mov	r0, r3
 800c714:	f00c f87e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1633.77213758327f);
 800c718:	687b      	ldr	r3, [r7, #4]
 800c71a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c71e:	ed9f 0a6a 	vldr	s0, [pc, #424]	; 800c8c8 <_ZN16MainViewViewBaseC1Ev+0x1a40>
 800c722:	4618      	mov	r0, r3
 800c724:	f00c f876 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1595.81758930656f);
 800c728:	687b      	ldr	r3, [r7, #4]
 800c72a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c72e:	ed9f 0a67 	vldr	s0, [pc, #412]	; 800c8cc <_ZN16MainViewViewBaseC1Ev+0x1a44>
 800c732:	4618      	mov	r0, r3
 800c734:	f00c f86e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1565.76855018638f);
 800c738:	687b      	ldr	r3, [r7, #4]
 800c73a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c73e:	ed9f 0a64 	vldr	s0, [pc, #400]	; 800c8d0 <_ZN16MainViewViewBaseC1Ev+0x1a48>
 800c742:	4618      	mov	r0, r3
 800c744:	f00c f866 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1544.38551394646f);
 800c748:	687b      	ldr	r3, [r7, #4]
 800c74a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c74e:	ed9f 0a61 	vldr	s0, [pc, #388]	; 800c8d4 <_ZN16MainViewViewBaseC1Ev+0x1a4c>
 800c752:	4618      	mov	r0, r3
 800c754:	f00c f85e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1532.31997294539f);
 800c758:	687b      	ldr	r3, [r7, #4]
 800c75a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c75e:	ed9f 0a5e 	vldr	s0, [pc, #376]	; 800c8d8 <_ZN16MainViewViewBaseC1Ev+0x1a50>
 800c762:	4618      	mov	r0, r3
 800c764:	f00c f856 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1530.10597737818f);
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c76e:	ed9f 0a5b 	vldr	s0, [pc, #364]	; 800c8dc <_ZN16MainViewViewBaseC1Ev+0x1a54>
 800c772:	4618      	mov	r0, r3
 800c774:	f00c f84e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1538.15313844642f);
 800c778:	687b      	ldr	r3, [r7, #4]
 800c77a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c77e:	ed9f 0a58 	vldr	s0, [pc, #352]	; 800c8e0 <_ZN16MainViewViewBaseC1Ev+0x1a58>
 800c782:	4618      	mov	r0, r3
 800c784:	f00c f846 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1556.74101607895f);
 800c788:	687b      	ldr	r3, [r7, #4]
 800c78a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c78e:	ed9f 0a55 	vldr	s0, [pc, #340]	; 800c8e4 <_ZN16MainViewViewBaseC1Ev+0x1a5c>
 800c792:	4618      	mov	r0, r3
 800c794:	f00c f83e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1586.01515687331f);
 800c798:	687b      	ldr	r3, [r7, #4]
 800c79a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c79e:	ed9f 0a52 	vldr	s0, [pc, #328]	; 800c8e8 <_ZN16MainViewViewBaseC1Ev+0x1a60>
 800c7a2:	4618      	mov	r0, r3
 800c7a4:	f00c f836 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1625.9846632246f);
 800c7a8:	687b      	ldr	r3, [r7, #4]
 800c7aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7ae:	ed9f 0a4f 	vldr	s0, [pc, #316]	; 800c8ec <_ZN16MainViewViewBaseC1Ev+0x1a64>
 800c7b2:	4618      	mov	r0, r3
 800c7b4:	f00c f82e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1676.52140771814f);
 800c7b8:	687b      	ldr	r3, [r7, #4]
 800c7ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7be:	ed9f 0a4c 	vldr	s0, [pc, #304]	; 800c8f0 <_ZN16MainViewViewBaseC1Ev+0x1a68>
 800c7c2:	4618      	mov	r0, r3
 800c7c4:	f00c f826 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1737.36092814148f);
 800c7c8:	687b      	ldr	r3, [r7, #4]
 800c7ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7ce:	ed9f 0a49 	vldr	s0, [pc, #292]	; 800c8f4 <_ZN16MainViewViewBaseC1Ev+0x1a6c>
 800c7d2:	4618      	mov	r0, r3
 800c7d4:	f00c f81e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1808.10487827696f);
 800c7d8:	687b      	ldr	r3, [r7, #4]
 800c7da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7de:	ed9f 0a46 	vldr	s0, [pc, #280]	; 800c8f8 <_ZN16MainViewViewBaseC1Ev+0x1a70>
 800c7e2:	4618      	mov	r0, r3
 800c7e4:	f00c f816 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1888.22516451379f);
 800c7e8:	687b      	ldr	r3, [r7, #4]
 800c7ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7ee:	ed9f 0a43 	vldr	s0, [pc, #268]	; 800c8fc <_ZN16MainViewViewBaseC1Ev+0x1a74>
 800c7f2:	4618      	mov	r0, r3
 800c7f4:	f00c f80e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1977.06958137832f);
 800c7f8:	687b      	ldr	r3, [r7, #4]
 800c7fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c7fe:	ed9f 0a40 	vldr	s0, [pc, #256]	; 800c900 <_ZN16MainViewViewBaseC1Ev+0x1a78>
 800c802:	4618      	mov	r0, r3
 800c804:	f00c f806 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2073.86894154431f);
 800c808:	687b      	ldr	r3, [r7, #4]
 800c80a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c80e:	ed9f 0a3d 	vldr	s0, [pc, #244]	; 800c904 <_ZN16MainViewViewBaseC1Ev+0x1a7c>
 800c812:	4618      	mov	r0, r3
 800c814:	f00b fffe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2177.74563684763f);
 800c818:	687b      	ldr	r3, [r7, #4]
 800c81a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c81e:	ed9f 0a3a 	vldr	s0, [pc, #232]	; 800c908 <_ZN16MainViewViewBaseC1Ev+0x1a80>
 800c822:	4618      	mov	r0, r3
 800c824:	e0e2      	b.n	800c9ec <_ZN16MainViewViewBaseC1Ev+0x1b64>
 800c826:	bf00      	nop
 800c828:	44015a64 	.word	0x44015a64
 800c82c:	441b29e1 	.word	0x441b29e1
 800c830:	44369858 	.word	0x44369858
 800c834:	445357b3 	.word	0x445357b3
 800c838:	44711712 	.word	0x44711712
 800c83c:	4487c1dc 	.word	0x4487c1dc
 800c840:	44972501 	.word	0x44972501
 800c844:	44a68b32 	.word	0x44a68b32
 800c848:	44b5cb2e 	.word	0x44b5cb2e
 800c84c:	44c4bcb2 	.word	0x44c4bcb2
 800c850:	44d338f6 	.word	0x44d338f6
 800c854:	44e11b17 	.word	0x44e11b17
 800c858:	44ee4089 	.word	0x44ee4089
 800c85c:	44fa8979 	.word	0x44fa8979
 800c860:	4502ec96 	.word	0x4502ec96
 800c864:	45080b26 	.word	0x45080b26
 800c868:	450c959c 	.word	0x450c959c
 800c86c:	4510831e 	.word	0x4510831e
 800c870:	4513cce1 	.word	0x4513cce1
 800c874:	45166e3b 	.word	0x45166e3b
 800c878:	451864b1 	.word	0x451864b1
 800c87c:	4519aff8 	.word	0x4519aff8
 800c880:	451a51f5 	.word	0x451a51f5
 800c884:	451a4eb6 	.word	0x451a4eb6
 800c888:	4519ac60 	.word	0x4519ac60
 800c88c:	4518731c 	.word	0x4518731c
 800c890:	4516acf9 	.word	0x4516acf9
 800c894:	451465cb 	.word	0x451465cb
 800c898:	4511ab08 	.word	0x4511ab08
 800c89c:	450e8b95 	.word	0x450e8b95
 800c8a0:	450b179d 	.word	0x450b179d
 800c8a4:	45076058 	.word	0x45076058
 800c8a8:	450377d5 	.word	0x450377d5
 800c8ac:	44fee184 	.word	0x44fee184
 800c8b0:	44f6bc5a 	.word	0x44f6bc5a
 800c8b4:	44eea694 	.word	0x44eea694
 800c8b8:	44e6c666 	.word	0x44e6c666
 800c8bc:	44df415c 	.word	0x44df415c
 800c8c0:	44d83bde 	.word	0x44d83bde
 800c8c4:	44d1d8b9 	.word	0x44d1d8b9
 800c8c8:	44cc38b5 	.word	0x44cc38b5
 800c8cc:	44c77a2a 	.word	0x44c77a2a
 800c8d0:	44c3b898 	.word	0x44c3b898
 800c8d4:	44c10c56 	.word	0x44c10c56
 800c8d8:	44bf8a3d 	.word	0x44bf8a3d
 800c8dc:	44bf4364 	.word	0x44bf4364
 800c8e0:	44c044e7 	.word	0x44c044e7
 800c8e4:	44c297b6 	.word	0x44c297b6
 800c8e8:	44c6407c 	.word	0x44c6407c
 800c8ec:	44cb3f82 	.word	0x44cb3f82
 800c8f0:	44d190af 	.word	0x44d190af
 800c8f4:	44d92b8d 	.word	0x44d92b8d
 800c8f8:	44e2035b 	.word	0x44e2035b
 800c8fc:	44ec0735 	.word	0x44ec0735
 800c900:	44f7223a 	.word	0x44f7223a
 800c904:	45019de7 	.word	0x45019de7
 800c908:	45081bee 	.word	0x45081bee
 800c90c:	450efb94 	.word	0x450efb94
 800c910:	45162bd3 	.word	0x45162bd3
 800c914:	451d9a72 	.word	0x451d9a72
 800c918:	45253439 	.word	0x45253439
 800c91c:	452ce526 	.word	0x452ce526
 800c920:	453498af 	.word	0x453498af
 800c924:	453c39f8 	.word	0x453c39f8
 800c928:	4543b414 	.word	0x4543b414
 800c92c:	454af245 	.word	0x454af245
 800c930:	4551e035 	.word	0x4551e035
 800c934:	45586a37 	.word	0x45586a37
 800c938:	455e7d7f 	.word	0x455e7d7f
 800c93c:	4564085e 	.word	0x4564085e
 800c940:	4568fa71 	.word	0x4568fa71
 800c944:	456d44d8 	.word	0x456d44d8
 800c948:	4570da63 	.word	0x4570da63
 800c94c:	4573afb3 	.word	0x4573afb3
 800c950:	4575bb66 	.word	0x4575bb66
 800c954:	4576f62c 	.word	0x4576f62c
 800c958:	45775ae3 	.word	0x45775ae3
 800c95c:	4576e6a5 	.word	0x4576e6a5
 800c960:	457598cf 	.word	0x457598cf
 800c964:	4573730a 	.word	0x4573730a
 800c968:	45707942 	.word	0x45707942
 800c96c:	456cb19d 	.word	0x456cb19d
 800c970:	45682469 	.word	0x45682469
 800c974:	4562dc08 	.word	0x4562dc08
 800c978:	455ce4cc 	.word	0x455ce4cc
 800c97c:	45564cda 	.word	0x45564cda
 800c980:	454f23fc 	.word	0x454f23fc
 800c984:	45477b77 	.word	0x45477b77
 800c988:	453f65d5 	.word	0x453f65d5
 800c98c:	4536f6b6 	.word	0x4536f6b6
 800c990:	452e428e 	.word	0x452e428e
 800c994:	45255e71 	.word	0x45255e71
 800c998:	451c5fd2 	.word	0x451c5fd2
 800c99c:	45135c47 	.word	0x45135c47
 800c9a0:	450a6947 	.word	0x450a6947
 800c9a4:	45019bf1 	.word	0x45019bf1
 800c9a8:	44f21196 	.word	0x44f21196
 800c9ac:	44e18712 	.word	0x44e18712
 800c9b0:	44d1bda5 	.word	0x44d1bda5
 800c9b4:	44c2d81f 	.word	0x44c2d81f
 800c9b8:	44b4f66c 	.word	0x44b4f66c
 800c9bc:	44a83539 	.word	0x44a83539
 800c9c0:	449cada5 	.word	0x449cada5
 800c9c4:	449274fb 	.word	0x449274fb
 800c9c8:	44899c79 	.word	0x44899c79
 800c9cc:	44823121 	.word	0x44823121
 800c9d0:	44787733 	.word	0x44787733
 800c9d4:	446f8034 	.word	0x446f8034
 800c9d8:	44697cca 	.word	0x44697cca
 800c9dc:	4466639e 	.word	0x4466639e
 800c9e0:	446622a5 	.word	0x446622a5
 800c9e4:	44689f68 	.word	0x44689f68
 800c9e8:	446db75c 	.word	0x446db75c
 800c9ec:	f00b ff12 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2287.72354797896f);
 800c9f0:	687b      	ldr	r3, [r7, #4]
 800c9f2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800c9f6:	ed1f 0a3b 	vldr	s0, [pc, #-236]	; 800c90c <_ZN16MainViewViewBaseC1Ev+0x1a84>
 800c9fa:	4618      	mov	r0, r3
 800c9fc:	f00b ff0a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2402.73899488014f);
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca06:	ed1f 0a3e 	vldr	s0, [pc, #-248]	; 800c910 <_ZN16MainViewViewBaseC1Ev+0x1a88>
 800ca0a:	4618      	mov	r0, r3
 800ca0c:	f00b ff02 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2521.65291823011f);
 800ca10:	687b      	ldr	r3, [r7, #4]
 800ca12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca16:	ed1f 0a41 	vldr	s0, [pc, #-260]	; 800c914 <_ZN16MainViewViewBaseC1Ev+0x1a8c>
 800ca1a:	4618      	mov	r0, r3
 800ca1c:	f00b fefa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2643.26388132495f);
 800ca20:	687b      	ldr	r3, [r7, #4]
 800ca22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca26:	ed1f 0a44 	vldr	s0, [pc, #-272]	; 800c918 <_ZN16MainViewViewBaseC1Ev+0x1a90>
 800ca2a:	4618      	mov	r0, r3
 800ca2c:	f00b fef2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2766.32189239938f);
 800ca30:	687b      	ldr	r3, [r7, #4]
 800ca32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca36:	ed1f 0a47 	vldr	s0, [pc, #-284]	; 800c91c <_ZN16MainViewViewBaseC1Ev+0x1a94>
 800ca3a:	4618      	mov	r0, r3
 800ca3c:	f00b feea 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2889.54278249335f);
 800ca40:	687b      	ldr	r3, [r7, #4]
 800ca42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca46:	ed1f 0a4a 	vldr	s0, [pc, #-296]	; 800c920 <_ZN16MainViewViewBaseC1Ev+0x1a98>
 800ca4a:	4618      	mov	r0, r3
 800ca4c:	f00b fee2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3011.62306557547f);
 800ca50:	687b      	ldr	r3, [r7, #4]
 800ca52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca56:	ed1f 0a4d 	vldr	s0, [pc, #-308]	; 800c924 <_ZN16MainViewViewBaseC1Ev+0x1a9c>
 800ca5a:	4618      	mov	r0, r3
 800ca5c:	f00b feda 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3131.25499905342f);
 800ca60:	687b      	ldr	r3, [r7, #4]
 800ca62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca66:	ed1f 0a50 	vldr	s0, [pc, #-320]	; 800c928 <_ZN16MainViewViewBaseC1Ev+0x1aa0>
 800ca6a:	4618      	mov	r0, r3
 800ca6c:	f00b fed2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3247.14188083541f);
 800ca70:	687b      	ldr	r3, [r7, #4]
 800ca72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca76:	ed1f 0a53 	vldr	s0, [pc, #-332]	; 800c92c <_ZN16MainViewViewBaseC1Ev+0x1aa4>
 800ca7a:	4618      	mov	r0, r3
 800ca7c:	f00b feca 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3358.0129709998f);
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca86:	ed1f 0a56 	vldr	s0, [pc, #-344]	; 800c930 <_ZN16MainViewViewBaseC1Ev+0x1aa8>
 800ca8a:	4618      	mov	r0, r3
 800ca8c:	f00b fec2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3462.63841824187f);
 800ca90:	687b      	ldr	r3, [r7, #4]
 800ca92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ca96:	ed1f 0a59 	vldr	s0, [pc, #-356]	; 800c934 <_ZN16MainViewViewBaseC1Ev+0x1aac>
 800ca9a:	4618      	mov	r0, r3
 800ca9c:	f00b feba 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3559.84359562074f);
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800caa6:	ed1f 0a5c 	vldr	s0, [pc, #-368]	; 800c938 <_ZN16MainViewViewBaseC1Ev+0x1ab0>
 800caaa:	4618      	mov	r0, r3
 800caac:	f00b feb2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3648.52285735013f);
 800cab0:	687b      	ldr	r3, [r7, #4]
 800cab2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cab6:	ed1f 0a5f 	vldr	s0, [pc, #-380]	; 800c93c <_ZN16MainViewViewBaseC1Ev+0x1ab4>
 800caba:	4618      	mov	r0, r3
 800cabc:	f00b feaa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3727.65250435361f);
 800cac0:	687b      	ldr	r3, [r7, #4]
 800cac2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cac6:	ed1f 0a62 	vldr	s0, [pc, #-392]	; 800c940 <_ZN16MainViewViewBaseC1Ev+0x1ab8>
 800caca:	4618      	mov	r0, r3
 800cacc:	f00b fea2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3796.30282722524f);
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cad6:	ed1f 0a65 	vldr	s0, [pc, #-404]	; 800c944 <_ZN16MainViewViewBaseC1Ev+0x1abc>
 800cada:	4618      	mov	r0, r3
 800cadc:	f00b fe9a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3853.64905371093f);
 800cae0:	687b      	ldr	r3, [r7, #4]
 800cae2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cae6:	ed1f 0a68 	vldr	s0, [pc, #-416]	; 800c948 <_ZN16MainViewViewBaseC1Ev+0x1ac0>
 800caea:	4618      	mov	r0, r3
 800caec:	f00b fe92 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3898.98117791971f);
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800caf6:	ed1f 0a6b 	vldr	s0, [pc, #-428]	; 800c94c <_ZN16MainViewViewBaseC1Ev+0x1ac4>
 800cafa:	4618      	mov	r0, r3
 800cafc:	f00b fe8a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3931.71229875958f);
 800cb00:	687b      	ldr	r3, [r7, #4]
 800cb02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb06:	ed1f 0a6e 	vldr	s0, [pc, #-440]	; 800c950 <_ZN16MainViewViewBaseC1Ev+0x1ac8>
 800cb0a:	4618      	mov	r0, r3
 800cb0c:	f00b fe82 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3951.38572146587f);
 800cb10:	687b      	ldr	r3, [r7, #4]
 800cb12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb16:	ed1f 0a71 	vldr	s0, [pc, #-452]	; 800c954 <_ZN16MainViewViewBaseC1Ev+0x1acc>
 800cb1a:	4618      	mov	r0, r3
 800cb1c:	f00b fe7a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3957.68045537062f);
 800cb20:	687b      	ldr	r3, [r7, #4]
 800cb22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb26:	ed1f 0a74 	vldr	s0, [pc, #-464]	; 800c958 <_ZN16MainViewViewBaseC1Ev+0x1ad0>
 800cb2a:	4618      	mov	r0, r3
 800cb2c:	f00b fe72 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3950.41517261464f);
 800cb30:	687b      	ldr	r3, [r7, #4]
 800cb32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb36:	ed1f 0a77 	vldr	s0, [pc, #-476]	; 800c95c <_ZN16MainViewViewBaseC1Ev+0x1ad4>
 800cb3a:	4618      	mov	r0, r3
 800cb3c:	f00b fe6a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3929.55055854869f);
 800cb40:	687b      	ldr	r3, [r7, #4]
 800cb42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb46:	ed1f 0a7a 	vldr	s0, [pc, #-488]	; 800c960 <_ZN16MainViewViewBaseC1Ev+0x1ad8>
 800cb4a:	4618      	mov	r0, r3
 800cb4c:	f00b fe62 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3895.19000288732f);
 800cb50:	687b      	ldr	r3, [r7, #4]
 800cb52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb56:	ed1f 0a7d 	vldr	s0, [pc, #-500]	; 800c964 <_ZN16MainViewViewBaseC1Ev+0x1adc>
 800cb5a:	4618      	mov	r0, r3
 800cb5c:	f00b fe5a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3847.57864600903f);
 800cb60:	687b      	ldr	r3, [r7, #4]
 800cb62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb66:	ed1f 0a80 	vldr	s0, [pc, #-512]	; 800c968 <_ZN16MainViewViewBaseC1Ev+0x1ae0>
 800cb6a:	4618      	mov	r0, r3
 800cb6c:	f00b fe52 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3787.10080002096f);
 800cb70:	687b      	ldr	r3, [r7, #4]
 800cb72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb76:	ed1f 0a83 	vldr	s0, [pc, #-524]	; 800c96c <_ZN16MainViewViewBaseC1Ev+0x1ae4>
 800cb7a:	4618      	mov	r0, r3
 800cb7c:	f00b fe4a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3714.27573869891f);
 800cb80:	687b      	ldr	r3, [r7, #4]
 800cb82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb86:	ed1f 0a86 	vldr	s0, [pc, #-536]	; 800c970 <_ZN16MainViewViewBaseC1Ev+0x1ae8>
 800cb8a:	4618      	mov	r0, r3
 800cb8c:	f00b fe42 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3629.75195174718f);
 800cb90:	687b      	ldr	r3, [r7, #4]
 800cb92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cb96:	ed1f 0a89 	vldr	s0, [pc, #-548]	; 800c974 <_ZN16MainViewViewBaseC1Ev+0x1aec>
 800cb9a:	4618      	mov	r0, r3
 800cb9c:	f00b fe3a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3534.29986340332f);
 800cba0:	687b      	ldr	r3, [r7, #4]
 800cba2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cba6:	ed1f 0a8c 	vldr	s0, [pc, #-560]	; 800c978 <_ZN16MainViewViewBaseC1Ev+0x1af0>
 800cbaa:	4618      	mov	r0, r3
 800cbac:	f00b fe32 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3428.80319976948f);
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cbb6:	ed1f 0a8f 	vldr	s0, [pc, #-572]	; 800c97c <_ZN16MainViewViewBaseC1Ev+0x1af4>
 800cbba:	4618      	mov	r0, r3
 800cbbc:	f00b fe2a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3314.24898859747f);
 800cbc0:	687b      	ldr	r3, [r7, #4]
 800cbc2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cbc6:	ed1f 0a92 	vldr	s0, [pc, #-584]	; 800c980 <_ZN16MainViewViewBaseC1Ev+0x1af8>
 800cbca:	4618      	mov	r0, r3
 800cbcc:	f00b fe22 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3191.71643507156f);
 800cbd0:	687b      	ldr	r3, [r7, #4]
 800cbd2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cbd6:	ed1f 0a95 	vldr	s0, [pc, #-596]	; 800c984 <_ZN16MainViewViewBaseC1Ev+0x1afc>
 800cbda:	4618      	mov	r0, r3
 800cbdc:	f00b fe1a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3062.36461146352f);
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cbe6:	ed1f 0a98 	vldr	s0, [pc, #-608]	; 800c988 <_ZN16MainViewViewBaseC1Ev+0x1b00>
 800cbea:	4618      	mov	r0, r3
 800cbec:	f00b fe12 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2927.41944329348f);
 800cbf0:	687b      	ldr	r3, [r7, #4]
 800cbf2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cbf6:	ed1f 0a9b 	vldr	s0, [pc, #-620]	; 800c98c <_ZN16MainViewViewBaseC1Ev+0x1b04>
 800cbfa:	4618      	mov	r0, r3
 800cbfc:	f00b fe0a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2788.15972115477f);
 800cc00:	687b      	ldr	r3, [r7, #4]
 800cc02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc06:	ed1f 0a9e 	vldr	s0, [pc, #-632]	; 800c990 <_ZN16MainViewViewBaseC1Ev+0x1b08>
 800cc0a:	4618      	mov	r0, r3
 800cc0c:	f00b fe02 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2645.90264312584f);
 800cc10:	687b      	ldr	r3, [r7, #4]
 800cc12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc16:	ed1f 0aa1 	vldr	s0, [pc, #-644]	; 800c994 <_ZN16MainViewViewBaseC1Ev+0x1b0c>
 800cc1a:	4618      	mov	r0, r3
 800cc1c:	f00b fdfa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2501.98884496645f);
 800cc20:	687b      	ldr	r3, [r7, #4]
 800cc22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc26:	ed1f 0aa4 	vldr	s0, [pc, #-656]	; 800c998 <_ZN16MainViewViewBaseC1Ev+0x1b10>
 800cc2a:	4618      	mov	r0, r3
 800cc2c:	f00b fdf2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2357.76726270145f);
 800cc30:	687b      	ldr	r3, [r7, #4]
 800cc32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc36:	ed1f 0aa7 	vldr	s0, [pc, #-668]	; 800c99c <_ZN16MainViewViewBaseC1Ev+0x1b14>
 800cc3a:	4618      	mov	r0, r3
 800cc3c:	f00b fdea 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2214.57983025488f);
 800cc40:	687b      	ldr	r3, [r7, #4]
 800cc42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc46:	ed1f 0aaa 	vldr	s0, [pc, #-680]	; 800c9a0 <_ZN16MainViewViewBaseC1Ev+0x1b18>
 800cc4a:	4618      	mov	r0, r3
 800cc4c:	f00b fde2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2073.74636632937f);
 800cc50:	687b      	ldr	r3, [r7, #4]
 800cc52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc56:	ed1f 0aad 	vldr	s0, [pc, #-692]	; 800c9a4 <_ZN16MainViewViewBaseC1Ev+0x1b1c>
 800cc5a:	4618      	mov	r0, r3
 800cc5c:	f00b fdda 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1936.54960532935f);
 800cc60:	687b      	ldr	r3, [r7, #4]
 800cc62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc66:	ed1f 0ab0 	vldr	s0, [pc, #-704]	; 800c9a8 <_ZN16MainViewViewBaseC1Ev+0x1b20>
 800cc6a:	4618      	mov	r0, r3
 800cc6c:	f00b fdd2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1804.22089677646f);
 800cc70:	687b      	ldr	r3, [r7, #4]
 800cc72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc76:	ed1f 0ab3 	vldr	s0, [pc, #-716]	; 800c9ac <_ZN16MainViewViewBaseC1Ev+0x1b24>
 800cc7a:	4618      	mov	r0, r3
 800cc7c:	f00b fdca 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1677.92634493268f);
 800cc80:	687b      	ldr	r3, [r7, #4]
 800cc82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc86:	ed1f 0ab6 	vldr	s0, [pc, #-728]	; 800c9b0 <_ZN16MainViewViewBaseC1Ev+0x1b28>
 800cc8a:	4618      	mov	r0, r3
 800cc8c:	f00b fdc2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1558.75377445362f);
 800cc90:	687b      	ldr	r3, [r7, #4]
 800cc92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cc96:	ed1f 0ab9 	vldr	s0, [pc, #-740]	; 800c9b4 <_ZN16MainViewViewBaseC1Ev+0x1b2c>
 800cc9a:	4618      	mov	r0, r3
 800cc9c:	f00b fdba 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1447.70067201258f);
 800cca0:	687b      	ldr	r3, [r7, #4]
 800cca2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cca6:	ed1f 0abc 	vldr	s0, [pc, #-752]	; 800c9b8 <_ZN16MainViewViewBaseC1Ev+0x1b30>
 800ccaa:	4618      	mov	r0, r3
 800ccac:	f00b fdb2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1345.6632080031f);
 800ccb0:	687b      	ldr	r3, [r7, #4]
 800ccb2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ccb6:	ed1f 0abf 	vldr	s0, [pc, #-764]	; 800c9bc <_ZN16MainViewViewBaseC1Ev+0x1b34>
 800ccba:	4618      	mov	r0, r3
 800ccbc:	f00b fdaa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1253.4264045126f);
 800ccc0:	687b      	ldr	r3, [r7, #4]
 800ccc2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ccc6:	ed1f 0ac2 	vldr	s0, [pc, #-776]	; 800c9c0 <_ZN16MainViewViewBaseC1Ev+0x1b38>
 800ccca:	4618      	mov	r0, r3
 800cccc:	f00b fda2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1171.65566854496f);
 800ccd0:	687b      	ldr	r3, [r7, #4]
 800ccd2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ccd6:	ed1f 0ac5 	vldr	s0, [pc, #-788]	; 800c9c4 <_ZN16MainViewViewBaseC1Ev+0x1b3c>
 800ccda:	4618      	mov	r0, r3
 800ccdc:	f00b fd9a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1100.88976868054f);
 800cce0:	687b      	ldr	r3, [r7, #4]
 800cce2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cce6:	ed1f 0ac8 	vldr	s0, [pc, #-800]	; 800c9c8 <_ZN16MainViewViewBaseC1Ev+0x1b40>
 800ccea:	4618      	mov	r0, r3
 800ccec:	f00b fd92 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1041.53524635275f);
 800ccf0:	687b      	ldr	r3, [r7, #4]
 800ccf2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ccf6:	ed1f 0acb 	vldr	s0, [pc, #-812]	; 800c9cc <_ZN16MainViewViewBaseC1Ev+0x1b44>
 800ccfa:	4618      	mov	r0, r3
 800ccfc:	f00b fd8a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(993.862465092334f);
 800cd00:	687b      	ldr	r3, [r7, #4]
 800cd02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd06:	ed1f 0ace 	vldr	s0, [pc, #-824]	; 800c9d0 <_ZN16MainViewViewBaseC1Ev+0x1b48>
 800cd0a:	4618      	mov	r0, r3
 800cd0c:	f00b fd82 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(958.003180627205f);
 800cd10:	687b      	ldr	r3, [r7, #4]
 800cd12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd16:	ed1f 0ad1 	vldr	s0, [pc, #-836]	; 800c9d4 <_ZN16MainViewViewBaseC1Ev+0x1b4c>
 800cd1a:	4618      	mov	r0, r3
 800cd1c:	f00b fd7a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(933.949859564873f);
 800cd20:	687b      	ldr	r3, [r7, #4]
 800cd22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd26:	ed1f 0ad4 	vldr	s0, [pc, #-848]	; 800c9d8 <_ZN16MainViewViewBaseC1Ev+0x1b50>
 800cd2a:	4618      	mov	r0, r3
 800cd2c:	f00b fd72 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(921.556530593503f);
 800cd30:	687b      	ldr	r3, [r7, #4]
 800cd32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd36:	ed1f 0ad7 	vldr	s0, [pc, #-860]	; 800c9dc <_ZN16MainViewViewBaseC1Ev+0x1b54>
 800cd3a:	4618      	mov	r0, r3
 800cd3c:	f00b fd6a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(920.541329289649f);
 800cd40:	687b      	ldr	r3, [r7, #4]
 800cd42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd46:	ed1f 0ada 	vldr	s0, [pc, #-872]	; 800c9e0 <_ZN16MainViewViewBaseC1Ev+0x1b58>
 800cd4a:	4618      	mov	r0, r3
 800cd4c:	f00b fd62 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(930.490704937062f);
 800cd50:	687b      	ldr	r3, [r7, #4]
 800cd52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd56:	ed1f 0add 	vldr	s0, [pc, #-884]	; 800c9e4 <_ZN16MainViewViewBaseC1Ev+0x1b5c>
 800cd5a:	4618      	mov	r0, r3
 800cd5c:	f00b fd5a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(950.864993196064f);
 800cd60:	687b      	ldr	r3, [r7, #4]
 800cd62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd66:	ed1f 0ae0 	vldr	s0, [pc, #-896]	; 800c9e8 <_ZN16MainViewViewBaseC1Ev+0x1b60>
 800cd6a:	4618      	mov	r0, r3
 800cd6c:	f00b fd52 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(981.005649077371f);
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd76:	ed9f 0ae2 	vldr	s0, [pc, #904]	; 800d100 <_ZN16MainViewViewBaseC1Ev+0x2278>
 800cd7a:	4618      	mov	r0, r3
 800cd7c:	f00b fd4a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1020.14382101058f);
 800cd80:	687b      	ldr	r3, [r7, #4]
 800cd82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd86:	ed9f 0adf 	vldr	s0, [pc, #892]	; 800d104 <_ZN16MainViewViewBaseC1Ev+0x227c>
 800cd8a:	4618      	mov	r0, r3
 800cd8c:	f00b fd42 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1067.41015692803f);
 800cd90:	687b      	ldr	r3, [r7, #4]
 800cd92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cd96:	ed9f 0adc 	vldr	s0, [pc, #880]	; 800d108 <_ZN16MainViewViewBaseC1Ev+0x2280>
 800cd9a:	4618      	mov	r0, r3
 800cd9c:	f00b fd3a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1121.84589142383f);
 800cda0:	687b      	ldr	r3, [r7, #4]
 800cda2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cda6:	ed9f 0ad9 	vldr	s0, [pc, #868]	; 800d10c <_ZN16MainViewViewBaseC1Ev+0x2284>
 800cdaa:	4618      	mov	r0, r3
 800cdac:	f00b fd32 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1182.41487125746f);
 800cdb0:	687b      	ldr	r3, [r7, #4]
 800cdb2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cdb6:	ed9f 0ad6 	vldr	s0, [pc, #856]	; 800d110 <_ZN16MainViewViewBaseC1Ev+0x2288>
 800cdba:	4618      	mov	r0, r3
 800cdbc:	f00b fd2a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1248.01652164594f);
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cdc6:	ed9f 0ad3 	vldr	s0, [pc, #844]	; 800d114 <_ZN16MainViewViewBaseC1Ev+0x228c>
 800cdca:	4618      	mov	r0, r3
 800cdcc:	f00b fd22 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1317.49969871034f);
 800cdd0:	687b      	ldr	r3, [r7, #4]
 800cdd2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cdd6:	ed9f 0ad0 	vldr	s0, [pc, #832]	; 800d118 <_ZN16MainViewViewBaseC1Ev+0x2290>
 800cdda:	4618      	mov	r0, r3
 800cddc:	f00b fd1a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1389.67677360021f);
 800cde0:	687b      	ldr	r3, [r7, #4]
 800cde2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cde6:	ed9f 0acd 	vldr	s0, [pc, #820]	; 800d11c <_ZN16MainViewViewBaseC1Ev+0x2294>
 800cdea:	4618      	mov	r0, r3
 800cdec:	f00b fd12 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1463.33850793239f);
 800cdf0:	687b      	ldr	r3, [r7, #4]
 800cdf2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cdf6:	ed9f 0aca 	vldr	s0, [pc, #808]	; 800d120 <_ZN16MainViewViewBaseC1Ev+0x2298>
 800cdfa:	4618      	mov	r0, r3
 800cdfc:	f00b fd0a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1537.26893053666f);
 800ce00:	687b      	ldr	r3, [r7, #4]
 800ce02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce06:	ed9f 0ac7 	vldr	s0, [pc, #796]	; 800d124 <_ZN16MainViewViewBaseC1Ev+0x229c>
 800ce0a:	4618      	mov	r0, r3
 800ce0c:	f00b fd02 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1610.26036401239f);
 800ce10:	687b      	ldr	r3, [r7, #4]
 800ce12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce16:	ed9f 0ac4 	vldr	s0, [pc, #784]	; 800d128 <_ZN16MainViewViewBaseC1Ev+0x22a0>
 800ce1a:	4618      	mov	r0, r3
 800ce1c:	f00b fcfa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1681.12832816866f);
 800ce20:	687b      	ldr	r3, [r7, #4]
 800ce22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce26:	ed9f 0ac1 	vldr	s0, [pc, #772]	; 800d12c <_ZN16MainViewViewBaseC1Ev+0x22a4>
 800ce2a:	4618      	mov	r0, r3
 800ce2c:	f00b fcf2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1748.72606660092f);
 800ce30:	687b      	ldr	r3, [r7, #4]
 800ce32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce36:	ed9f 0abe 	vldr	s0, [pc, #760]	; 800d130 <_ZN16MainViewViewBaseC1Ev+0x22a8>
 800ce3a:	4618      	mov	r0, r3
 800ce3c:	f00b fcea 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1811.95881658905f);
 800ce40:	687b      	ldr	r3, [r7, #4]
 800ce42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce46:	ed9f 0abb 	vldr	s0, [pc, #748]	; 800d134 <_ZN16MainViewViewBaseC1Ev+0x22ac>
 800ce4a:	4618      	mov	r0, r3
 800ce4c:	f00b fce2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1869.79709527656f);
 800ce50:	687b      	ldr	r3, [r7, #4]
 800ce52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce56:	ed9f 0ab8 	vldr	s0, [pc, #736]	; 800d138 <_ZN16MainViewViewBaseC1Ev+0x22b0>
 800ce5a:	4618      	mov	r0, r3
 800ce5c:	f00b fcda 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1921.28951063418f);
 800ce60:	687b      	ldr	r3, [r7, #4]
 800ce62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce66:	ed9f 0ab5 	vldr	s0, [pc, #724]	; 800d13c <_ZN16MainViewViewBaseC1Ev+0x22b4>
 800ce6a:	4618      	mov	r0, r3
 800ce6c:	f00b fcd2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1965.57448330145f);
 800ce70:	687b      	ldr	r3, [r7, #4]
 800ce72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce76:	ed9f 0ab2 	vldr	s0, [pc, #712]	; 800d140 <_ZN16MainViewViewBaseC1Ev+0x22b8>
 800ce7a:	4618      	mov	r0, r3
 800ce7c:	f00b fcca 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2001.89086569557f);
 800ce80:	687b      	ldr	r3, [r7, #4]
 800ce82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce86:	ed9f 0aaf 	vldr	s0, [pc, #700]	; 800d144 <_ZN16MainViewViewBaseC1Ev+0x22bc>
 800ce8a:	4618      	mov	r0, r3
 800ce8c:	f00b fcc2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2029.58740943056f);
 800ce90:	687b      	ldr	r3, [r7, #4]
 800ce92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ce96:	ed9f 0aac 	vldr	s0, [pc, #688]	; 800d148 <_ZN16MainViewViewBaseC1Ev+0x22c0>
 800ce9a:	4618      	mov	r0, r3
 800ce9c:	f00b fcba 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2048.13084529744f);
 800cea0:	687b      	ldr	r3, [r7, #4]
 800cea2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cea6:	ed9f 0aa9 	vldr	s0, [pc, #676]	; 800d14c <_ZN16MainViewViewBaseC1Ev+0x22c4>
 800ceaa:	4618      	mov	r0, r3
 800ceac:	f00b fcb2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2057.11257466468f);
 800ceb0:	687b      	ldr	r3, [r7, #4]
 800ceb2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ceb6:	ed9f 0aa6 	vldr	s0, [pc, #664]	; 800d150 <_ZN16MainViewViewBaseC1Ev+0x22c8>
 800ceba:	4618      	mov	r0, r3
 800cebc:	f00b fcaa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2056.25388421828f);
 800cec0:	687b      	ldr	r3, [r7, #4]
 800cec2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cec6:	ed9f 0aa3 	vldr	s0, [pc, #652]	; 800d154 <_ZN16MainViewViewBaseC1Ev+0x22cc>
 800ceca:	4618      	mov	r0, r3
 800cecc:	f00b fca2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2045.40950085282f);
 800ced0:	687b      	ldr	r3, [r7, #4]
 800ced2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ced6:	ed9f 0aa0 	vldr	s0, [pc, #640]	; 800d158 <_ZN16MainViewViewBaseC1Ev+0x22d0>
 800ceda:	4618      	mov	r0, r3
 800cedc:	f00b fc9a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2024.56964241742f);
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cee6:	ed9f 0a9d 	vldr	s0, [pc, #628]	; 800d15c <_ZN16MainViewViewBaseC1Ev+0x22d4>
 800ceea:	4618      	mov	r0, r3
 800ceec:	f00b fc92 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1993.86038960647f);
 800cef0:	687b      	ldr	r3, [r7, #4]
 800cef2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cef6:	ed9f 0a9a 	vldr	s0, [pc, #616]	; 800d160 <_ZN16MainViewViewBaseC1Ev+0x22d8>
 800cefa:	4618      	mov	r0, r3
 800cefc:	f00b fc8a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1953.54241075325f);
 800cf00:	687b      	ldr	r3, [r7, #4]
 800cf02:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf06:	ed9f 0a97 	vldr	s0, [pc, #604]	; 800d164 <_ZN16MainViewViewBaseC1Ev+0x22dc>
 800cf0a:	4618      	mov	r0, r3
 800cf0c:	f00b fc82 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1904.00809154626f);
 800cf10:	687b      	ldr	r3, [r7, #4]
 800cf12:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf16:	ed9f 0a94 	vldr	s0, [pc, #592]	; 800d168 <_ZN16MainViewViewBaseC1Ev+0x22e0>
 800cf1a:	4618      	mov	r0, r3
 800cf1c:	f00b fc7a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1845.77705060754f);
 800cf20:	687b      	ldr	r3, [r7, #4]
 800cf22:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf26:	ed9f 0a91 	vldr	s0, [pc, #580]	; 800d16c <_ZN16MainViewViewBaseC1Ev+0x22e4>
 800cf2a:	4618      	mov	r0, r3
 800cf2c:	f00b fc72 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1779.49015375888f);
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf36:	ed9f 0a8e 	vldr	s0, [pc, #568]	; 800d170 <_ZN16MainViewViewBaseC1Ev+0x22e8>
 800cf3a:	4618      	mov	r0, r3
 800cf3c:	f00b fc6a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1705.90196543066f);
 800cf40:	687b      	ldr	r3, [r7, #4]
 800cf42:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf46:	ed9f 0a8b 	vldr	s0, [pc, #556]	; 800d174 <_ZN16MainViewViewBaseC1Ev+0x22ec>
 800cf4a:	4618      	mov	r0, r3
 800cf4c:	f00b fc62 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1625.87199676958f);
 800cf50:	687b      	ldr	r3, [r7, #4]
 800cf52:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf56:	ed9f 0a88 	vldr	s0, [pc, #544]	; 800d178 <_ZN16MainViewViewBaseC1Ev+0x22f0>
 800cf5a:	4618      	mov	r0, r3
 800cf5c:	f00b fc5a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1540.35451220129f);
 800cf60:	687b      	ldr	r3, [r7, #4]
 800cf62:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf66:	ed9f 0a85 	vldr	s0, [pc, #532]	; 800d17c <_ZN16MainViewViewBaseC1Ev+0x22f4>
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	f00b fc52 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1450.38726430556f);
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf76:	ed9f 0a82 	vldr	s0, [pc, #520]	; 800d180 <_ZN16MainViewViewBaseC1Ev+0x22f8>
 800cf7a:	4618      	mov	r0, r3
 800cf7c:	f00b fc4a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1357.07919241112f);
 800cf80:	687b      	ldr	r3, [r7, #4]
 800cf82:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf86:	ed9f 0a7f 	vldr	s0, [pc, #508]	; 800d184 <_ZN16MainViewViewBaseC1Ev+0x22fc>
 800cf8a:	4618      	mov	r0, r3
 800cf8c:	f00b fc42 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1261.59723989917f);
 800cf90:	687b      	ldr	r3, [r7, #4]
 800cf92:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cf96:	ed9f 0a7c 	vldr	s0, [pc, #496]	; 800d188 <_ZN16MainViewViewBaseC1Ev+0x2300>
 800cf9a:	4618      	mov	r0, r3
 800cf9c:	f00b fc3a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1165.15249486225f);
 800cfa0:	687b      	ldr	r3, [r7, #4]
 800cfa2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cfa6:	ed9f 0a79 	vldr	s0, [pc, #484]	; 800d18c <_ZN16MainViewViewBaseC1Ev+0x2304>
 800cfaa:	4618      	mov	r0, r3
 800cfac:	f00b fc32 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1068.98560742878f);
 800cfb0:	687b      	ldr	r3, [r7, #4]
 800cfb2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cfb6:	ed9f 0a76 	vldr	s0, [pc, #472]	; 800d190 <_ZN16MainViewViewBaseC1Ev+0x2308>
 800cfba:	4618      	mov	r0, r3
 800cfbc:	f00b fc2a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(974.352139779205f);
 800cfc0:	687b      	ldr	r3, [r7, #4]
 800cfc2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cfc6:	ed9f 0a73 	vldr	s0, [pc, #460]	; 800d194 <_ZN16MainViewViewBaseC1Ev+0x230c>
 800cfca:	4618      	mov	r0, r3
 800cfcc:	f00b fc22 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(882.507398631334f);
 800cfd0:	687b      	ldr	r3, [r7, #4]
 800cfd2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cfd6:	ed9f 0a70 	vldr	s0, [pc, #448]	; 800d198 <_ZN16MainViewViewBaseC1Ev+0x2310>
 800cfda:	4618      	mov	r0, r3
 800cfdc:	f00b fc1a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(794.691376751108f);
 800cfe0:	687b      	ldr	r3, [r7, #4]
 800cfe2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cfe6:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 800d19c <_ZN16MainViewViewBaseC1Ev+0x2314>
 800cfea:	4618      	mov	r0, r3
 800cfec:	f00b fc12 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(712.113841980428f);
 800cff0:	687b      	ldr	r3, [r7, #4]
 800cff2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800cff6:	ed9f 0a6a 	vldr	s0, [pc, #424]	; 800d1a0 <_ZN16MainViewViewBaseC1Ev+0x2318>
 800cffa:	4618      	mov	r0, r3
 800cffc:	f00b fc0a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(635.939706871071f);
 800d000:	687b      	ldr	r3, [r7, #4]
 800d002:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d006:	ed9f 0a67 	vldr	s0, [pc, #412]	; 800d1a4 <_ZN16MainViewViewBaseC1Ev+0x231c>
 800d00a:	4618      	mov	r0, r3
 800d00c:	f00b fc02 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(567.274941714921f);
 800d010:	687b      	ldr	r3, [r7, #4]
 800d012:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d016:	ed9f 0a64 	vldr	s0, [pc, #400]	; 800d1a8 <_ZN16MainViewViewBaseC1Ev+0x2320>
 800d01a:	4618      	mov	r0, r3
 800d01c:	f00b fbfa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(507.15314312083f);
 800d020:	687b      	ldr	r3, [r7, #4]
 800d022:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d026:	ed9f 0a61 	vldr	s0, [pc, #388]	; 800d1ac <_ZN16MainViewViewBaseC1Ev+0x2324>
 800d02a:	4618      	mov	r0, r3
 800d02c:	f00b fbf2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(456.522808819327f);
 800d030:	687b      	ldr	r3, [r7, #4]
 800d032:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d036:	ed9f 0a5e 	vldr	s0, [pc, #376]	; 800d1b0 <_ZN16MainViewViewBaseC1Ev+0x2328>
 800d03a:	4618      	mov	r0, r3
 800d03c:	f00b fbea 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(416.235853959984f);
 800d040:	687b      	ldr	r3, [r7, #4]
 800d042:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d046:	ed9f 0a5b 	vldr	s0, [pc, #364]	; 800d1b4 <_ZN16MainViewViewBaseC1Ev+0x232c>
 800d04a:	4618      	mov	r0, r3
 800d04c:	f00b fbe2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(387.036969719073f);
 800d050:	687b      	ldr	r3, [r7, #4]
 800d052:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d056:	ed9f 0a58 	vldr	s0, [pc, #352]	; 800d1b8 <_ZN16MainViewViewBaseC1Ev+0x2330>
 800d05a:	4618      	mov	r0, r3
 800d05c:	f00b fbda 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(369.55433315549f);
 800d060:	687b      	ldr	r3, [r7, #4]
 800d062:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d066:	ed9f 0a55 	vldr	s0, [pc, #340]	; 800d1bc <_ZN16MainViewViewBaseC1Ev+0x2334>
 800d06a:	4618      	mov	r0, r3
 800d06c:	f00b fbd2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(364.29169162753f);
 800d070:	687b      	ldr	r3, [r7, #4]
 800d072:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d076:	ed9f 0a52 	vldr	s0, [pc, #328]	; 800d1c0 <_ZN16MainViewViewBaseC1Ev+0x2338>
 800d07a:	4618      	mov	r0, r3
 800d07c:	f00b fbca 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(371.621813962782f);
 800d080:	687b      	ldr	r3, [r7, #4]
 800d082:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d086:	ed9f 0a4f 	vldr	s0, [pc, #316]	; 800d1c4 <_ZN16MainViewViewBaseC1Ev+0x233c>
 800d08a:	4618      	mov	r0, r3
 800d08c:	f00b fbc2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(391.781540339122f);
 800d090:	687b      	ldr	r3, [r7, #4]
 800d092:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d096:	ed9f 0a4c 	vldr	s0, [pc, #304]	; 800d1c8 <_ZN16MainViewViewBaseC1Ev+0x2340>
 800d09a:	4618      	mov	r0, r3
 800d09c:	f00b fbba 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(424.868359468104f);
 800d0a0:	687b      	ldr	r3, [r7, #4]
 800d0a2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0a6:	ed9f 0a49 	vldr	s0, [pc, #292]	; 800d1cc <_ZN16MainViewViewBaseC1Ev+0x2344>
 800d0aa:	4618      	mov	r0, r3
 800d0ac:	f00b fbb2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(470.83860623253f);
 800d0b0:	687b      	ldr	r3, [r7, #4]
 800d0b2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0b6:	ed9f 0a46 	vldr	s0, [pc, #280]	; 800d1d0 <_ZN16MainViewViewBaseC1Ev+0x2348>
 800d0ba:	4618      	mov	r0, r3
 800d0bc:	f00b fbaa 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(529.507366880094f);
 800d0c0:	687b      	ldr	r3, [r7, #4]
 800d0c2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0c6:	ed9f 0a43 	vldr	s0, [pc, #268]	; 800d1d4 <_ZN16MainViewViewBaseC1Ev+0x234c>
 800d0ca:	4618      	mov	r0, r3
 800d0cc:	f00b fba2 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(600.54993098868f);
 800d0d0:	687b      	ldr	r3, [r7, #4]
 800d0d2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0d6:	ed9f 0a40 	vldr	s0, [pc, #256]	; 800d1d8 <_ZN16MainViewViewBaseC1Ev+0x2350>
 800d0da:	4618      	mov	r0, r3
 800d0dc:	f00b fb9a 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(683.504974994862f);
 800d0e0:	687b      	ldr	r3, [r7, #4]
 800d0e2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0e6:	ed9f 0a3d 	vldr	s0, [pc, #244]	; 800d1dc <_ZN16MainViewViewBaseC1Ev+0x2354>
 800d0ea:	4618      	mov	r0, r3
 800d0ec:	f00b fb92 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(777.779276008702f);
 800d0f0:	687b      	ldr	r3, [r7, #4]
 800d0f2:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d0f6:	ed9f 0a3a 	vldr	s0, [pc, #232]	; 800d1e0 <_ZN16MainViewViewBaseC1Ev+0x2358>
 800d0fa:	4618      	mov	r0, r3
 800d0fc:	e0e2      	b.n	800d2c4 <_ZN16MainViewViewBaseC1Ev+0x243c>
 800d0fe:	bf00      	nop
 800d100:	4475405d 	.word	0x4475405d
 800d104:	447f0934 	.word	0x447f0934
 800d108:	44856d20 	.word	0x44856d20
 800d10c:	448c3b12 	.word	0x448c3b12
 800d110:	4493cd47 	.word	0x4493cd47
 800d114:	449c0087 	.word	0x449c0087
 800d118:	44a4affe 	.word	0x44a4affe
 800d11c:	44adb5a8 	.word	0x44adb5a8
 800d120:	44b6ead5 	.word	0x44b6ead5
 800d124:	44c0289b 	.word	0x44c0289b
 800d128:	44c94855 	.word	0x44c94855
 800d12c:	44d2241b 	.word	0x44d2241b
 800d130:	44da973c 	.word	0x44da973c
 800d134:	44e27eaf 	.word	0x44e27eaf
 800d138:	44e9b982 	.word	0x44e9b982
 800d13c:	44f02944 	.word	0x44f02944
 800d140:	44f5b262 	.word	0x44f5b262
 800d144:	44fa3c82 	.word	0x44fa3c82
 800d148:	44fdb2cc 	.word	0x44fdb2cc
 800d14c:	45000218 	.word	0x45000218
 800d150:	450091cd 	.word	0x450091cd
 800d154:	45008410 	.word	0x45008410
 800d158:	44ffad1b 	.word	0x44ffad1b
 800d15c:	44fd123b 	.word	0x44fd123b
 800d160:	44f93b88 	.word	0x44f93b88
 800d164:	44f4315b 	.word	0x44f4315b
 800d168:	44ee0042 	.word	0x44ee0042
 800d16c:	44e6b8de 	.word	0x44e6b8de
 800d170:	44de6faf 	.word	0x44de6faf
 800d174:	44d53cdd 	.word	0x44d53cdd
 800d178:	44cb3be7 	.word	0x44cb3be7
 800d17c:	44c08b58 	.word	0x44c08b58
 800d180:	44b54c64 	.word	0x44b54c64
 800d184:	44a9a289 	.word	0x44a9a289
 800d188:	449db31d 	.word	0x449db31d
 800d18c:	4491a4e1 	.word	0x4491a4e1
 800d190:	44859f8a 	.word	0x44859f8a
 800d194:	44739689 	.word	0x44739689
 800d198:	445ca079 	.word	0x445ca079
 800d19c:	4446ac40 	.word	0x4446ac40
 800d1a0:	44320749 	.word	0x44320749
 800d1a4:	441efc24 	.word	0x441efc24
 800d1a8:	440dd199 	.word	0x440dd199
 800d1ac:	43fd939a 	.word	0x43fd939a
 800d1b0:	43e442eb 	.word	0x43e442eb
 800d1b4:	43d01e30 	.word	0x43d01e30
 800d1b8:	43c184bb 	.word	0x43c184bb
 800d1bc:	43b8c6f4 	.word	0x43b8c6f4
 800d1c0:	43b62556 	.word	0x43b62556
 800d1c4:	43b9cf98 	.word	0x43b9cf98
 800d1c8:	43c3e40a 	.word	0x43c3e40a
 800d1cc:	43d46f26 	.word	0x43d46f26
 800d1d0:	43eb6b57 	.word	0x43eb6b57
 800d1d4:	44046079 	.word	0x44046079
 800d1d8:	44162332 	.word	0x44162332
 800d1dc:	442ae052 	.word	0x442ae052
 800d1e0:	444271e0 	.word	0x444271e0
 800d1e4:	445ca9db 	.word	0x445ca9db
 800d1e8:	447952b5 	.word	0x447952b5
 800d1ec:	448c17f6 	.word	0x448c17f6
 800d1f0:	449c7f58 	.word	0x449c7f58
 800d1f4:	44adbb52 	.word	0x44adbb52
 800d1f8:	44bfa553 	.word	0x44bfa553
 800d1fc:	44d214db 	.word	0x44d214db
 800d200:	44e4dfe9 	.word	0x44e4dfe9
 800d204:	44f7db74 	.word	0x44f7db74
 800d208:	45056df6 	.word	0x45056df6
 800d20c:	450edad7 	.word	0x450edad7
 800d210:	45181ec5 	.word	0x45181ec5
 800d214:	4521249d 	.word	0x4521249d
 800d218:	4529d7ed 	.word	0x4529d7ed
 800d21c:	45322531 	.word	0x45322531
 800d220:	4539fa07 	.word	0x4539fa07
 800d224:	45414569 	.word	0x45414569
 800d228:	4547f7d5 	.word	0x4547f7d5
 800d22c:	454e0382 	.word	0x454e0382
 800d230:	45535c7e 	.word	0x45535c7e
 800d234:	4557f8d6 	.word	0x4557f8d6
 800d238:	455bd0ad 	.word	0x455bd0ad
 800d23c:	455ede50 	.word	0x455ede50
 800d240:	45611e49 	.word	0x45611e49
 800d244:	45628f62 	.word	0x45628f62
 800d248:	456332aa 	.word	0x456332aa
 800d24c:	45630b69 	.word	0x45630b69
 800d250:	45621f1c 	.word	0x45621f1c
 800d254:	4560755b 	.word	0x4560755b
 800d258:	455e17c2 	.word	0x455e17c2
 800d25c:	455b11d4 	.word	0x455b11d4
 800d260:	455770d2 	.word	0x455770d2
 800d264:	45534395 	.word	0x45534395
 800d268:	454e9a5c 	.word	0x454e9a5c
 800d26c:	4549869b 	.word	0x4549869b
 800d270:	45441ac4 	.word	0x45441ac4
 800d274:	453e6a0e 	.word	0x453e6a0e
 800d278:	45388839 	.word	0x45388839
 800d27c:	45328953 	.word	0x45328953
 800d280:	452c8177 	.word	0x452c8177
 800d284:	45268493 	.word	0x45268493
 800d288:	4520a626 	.word	0x4520a626
 800d28c:	451af90b 	.word	0x451af90b
 800d290:	45158f3b 	.word	0x45158f3b
 800d294:	45107996 	.word	0x45107996
 800d298:	450bc7b3 	.word	0x450bc7b3
 800d29c:	450787ac 	.word	0x450787ac
 800d2a0:	4503c5f9 	.word	0x4503c5f9
 800d2a4:	45008d47 	.word	0x45008d47
 800d2a8:	44fbccb1 	.word	0x44fbccb1
 800d2ac:	44f7afd7 	.word	0x44f7afd7
 800d2b0:	44f4cd4e 	.word	0x44f4cd4e
 800d2b4:	44f32a18 	.word	0x44f32a18
 800d2b8:	44f2c6e0 	.word	0x44f2c6e0
 800d2bc:	44f39ff9 	.word	0x44f39ff9
 800d2c0:	44f5ad6c 	.word	0x44f5ad6c
 800d2c4:	f00b faa6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(882.653963300039f);
 800d2c8:	687b      	ldr	r3, [r7, #4]
 800d2ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d2ce:	ed1f 0a3b 	vldr	s0, [pc, #-236]	; 800d1e4 <_ZN16MainViewViewBaseC1Ev+0x235c>
 800d2d2:	4618      	mov	r0, r3
 800d2d4:	f00b fa9e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(997.292285246845f);
 800d2d8:	687b      	ldr	r3, [r7, #4]
 800d2da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d2de:	ed1f 0a3e 	vldr	s0, [pc, #-248]	; 800d1e8 <_ZN16MainViewViewBaseC1Ev+0x2360>
 800d2e2:	4618      	mov	r0, r3
 800d2e4:	f00b fa96 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1120.74875519554f);
 800d2e8:	687b      	ldr	r3, [r7, #4]
 800d2ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d2ee:	ed1f 0a41 	vldr	s0, [pc, #-260]	; 800d1ec <_ZN16MainViewViewBaseC1Ev+0x2364>
 800d2f2:	4618      	mov	r0, r3
 800d2f4:	f00b fa8e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1251.97946884273f);
 800d2f8:	687b      	ldr	r3, [r7, #4]
 800d2fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d2fe:	ed1f 0a44 	vldr	s0, [pc, #-272]	; 800d1f0 <_ZN16MainViewViewBaseC1Ev+0x2368>
 800d302:	4618      	mov	r0, r3
 800d304:	f00b fa86 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1389.85370193824f);
 800d308:	687b      	ldr	r3, [r7, #4]
 800d30a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d30e:	ed1f 0a47 	vldr	s0, [pc, #-284]	; 800d1f4 <_ZN16MainViewViewBaseC1Ev+0x236c>
 800d312:	4618      	mov	r0, r3
 800d314:	f00b fa7e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1533.16642478815f);
 800d318:	687b      	ldr	r3, [r7, #4]
 800d31a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d31e:	ed1f 0a4a 	vldr	s0, [pc, #-296]	; 800d1f8 <_ZN16MainViewViewBaseC1Ev+0x2370>
 800d322:	4618      	mov	r0, r3
 800d324:	f00b fa76 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1680.65177820295f);
 800d328:	687b      	ldr	r3, [r7, #4]
 800d32a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d32e:	ed1f 0a4d 	vldr	s0, [pc, #-308]	; 800d1fc <_ZN16MainViewViewBaseC1Ev+0x2374>
 800d332:	4618      	mov	r0, r3
 800d334:	f00b fa6e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1830.99715142559f);
 800d338:	687b      	ldr	r3, [r7, #4]
 800d33a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d33e:	ed1f 0a50 	vldr	s0, [pc, #-320]	; 800d200 <_ZN16MainViewViewBaseC1Ev+0x2378>
 800d342:	4618      	mov	r0, r3
 800d344:	f00b fa66 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1982.85791724914f);
 800d348:	687b      	ldr	r3, [r7, #4]
 800d34a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d34e:	ed1f 0a53 	vldr	s0, [pc, #-332]	; 800d204 <_ZN16MainViewViewBaseC1Ev+0x237c>
 800d352:	4618      	mov	r0, r3
 800d354:	f00b fa5e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2134.87243854262f);
 800d358:	687b      	ldr	r3, [r7, #4]
 800d35a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d35e:	ed1f 0a56 	vldr	s0, [pc, #-344]	; 800d208 <_ZN16MainViewViewBaseC1Ev+0x2380>
 800d362:	4618      	mov	r0, r3
 800d364:	f00b fa56 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2285.67742200897f);
 800d368:	687b      	ldr	r3, [r7, #4]
 800d36a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d36e:	ed1f 0a59 	vldr	s0, [pc, #-356]	; 800d20c <_ZN16MainViewViewBaseC1Ev+0x2384>
 800d372:	4618      	mov	r0, r3
 800d374:	f00b fa4e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2433.9230610023f);
 800d378:	687b      	ldr	r3, [r7, #4]
 800d37a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d37e:	ed1f 0a5c 	vldr	s0, [pc, #-368]	; 800d210 <_ZN16MainViewViewBaseC1Ev+0x2388>
 800d382:	4618      	mov	r0, r3
 800d384:	f00b fa46 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2578.2882510653f);
 800d388:	687b      	ldr	r3, [r7, #4]
 800d38a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d38e:	ed1f 0a5f 	vldr	s0, [pc, #-380]	; 800d214 <_ZN16MainViewViewBaseC1Ev+0x238c>
 800d392:	4618      	mov	r0, r3
 800d394:	f00b fa3e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2717.49532120618f);
 800d398:	687b      	ldr	r3, [r7, #4]
 800d39a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d39e:	ed1f 0a62 	vldr	s0, [pc, #-392]	; 800d218 <_ZN16MainViewViewBaseC1Ev+0x2390>
 800d3a2:	4618      	mov	r0, r3
 800d3a4:	f00b fa36 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2850.32435993187f);
 800d3a8:	687b      	ldr	r3, [r7, #4]
 800d3aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3ae:	ed1f 0a65 	vldr	s0, [pc, #-404]	; 800d21c <_ZN16MainViewViewBaseC1Ev+0x2394>
 800d3b2:	4618      	mov	r0, r3
 800d3b4:	f00b fa2e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2975.62675594322f);
 800d3b8:	687b      	ldr	r3, [r7, #4]
 800d3ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3be:	ed1f 0a68 	vldr	s0, [pc, #-416]	; 800d220 <_ZN16MainViewViewBaseC1Ev+0x2398>
 800d3c2:	4618      	mov	r0, r3
 800d3c4:	f00b fa26 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3092.33801373674f);
 800d3c8:	687b      	ldr	r3, [r7, #4]
 800d3ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3ce:	ed1f 0a6b 	vldr	s0, [pc, #-428]	; 800d224 <_ZN16MainViewViewBaseC1Ev+0x239c>
 800d3d2:	4618      	mov	r0, r3
 800d3d4:	f00b fa1e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3199.48949559456f);
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3de:	ed1f 0a6e 	vldr	s0, [pc, #-440]	; 800d228 <_ZN16MainViewViewBaseC1Ev+0x23a0>
 800d3e2:	4618      	mov	r0, r3
 800d3e4:	f00b fa16 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3296.21913159931f);
 800d3e8:	687b      	ldr	r3, [r7, #4]
 800d3ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3ee:	ed1f 0a71 	vldr	s0, [pc, #-452]	; 800d22c <_ZN16MainViewViewBaseC1Ev+0x23a4>
 800d3f2:	4618      	mov	r0, r3
 800d3f4:	f00b fa0e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3381.78077265175f);
 800d3f8:	687b      	ldr	r3, [r7, #4]
 800d3fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d3fe:	ed1f 0a74 	vldr	s0, [pc, #-464]	; 800d230 <_ZN16MainViewViewBaseC1Ev+0x23a8>
 800d402:	4618      	mov	r0, r3
 800d404:	f00b fa06 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3455.55227068475f);
 800d408:	687b      	ldr	r3, [r7, #4]
 800d40a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d40e:	ed1f 0a77 	vldr	s0, [pc, #-476]	; 800d234 <_ZN16MainViewViewBaseC1Ev+0x23ac>
 800d412:	4618      	mov	r0, r3
 800d414:	f00b f9fe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3517.04211665236f);
 800d418:	687b      	ldr	r3, [r7, #4]
 800d41a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d41e:	ed1f 0a7a 	vldr	s0, [pc, #-488]	; 800d238 <_ZN16MainViewViewBaseC1Ev+0x23b0>
 800d422:	4618      	mov	r0, r3
 800d424:	f00b f9f6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3565.89450437512f);
 800d428:	687b      	ldr	r3, [r7, #4]
 800d42a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d42e:	ed1f 0a7d 	vldr	s0, [pc, #-500]	; 800d23c <_ZN16MainViewViewBaseC1Ev+0x23b4>
 800d432:	4618      	mov	r0, r3
 800d434:	f00b f9ee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3601.8928130386f);
 800d438:	687b      	ldr	r3, [r7, #4]
 800d43a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d43e:	ed1f 0a80 	vldr	s0, [pc, #-512]	; 800d240 <_ZN16MainViewViewBaseC1Ev+0x23b8>
 800d442:	4618      	mov	r0, r3
 800d444:	f00b f9e6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3624.96153115415f);
 800d448:	687b      	ldr	r3, [r7, #4]
 800d44a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d44e:	ed1f 0a83 	vldr	s0, [pc, #-524]	; 800d244 <_ZN16MainViewViewBaseC1Ev+0x23bc>
 800d452:	4618      	mov	r0, r3
 800d454:	f00b f9de 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3635.16642408051f);
 800d458:	687b      	ldr	r3, [r7, #4]
 800d45a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d45e:	ed1f 0a86 	vldr	s0, [pc, #-536]	; 800d248 <_ZN16MainViewViewBaseC1Ev+0x23c0>
 800d462:	4618      	mov	r0, r3
 800d464:	f00b f9d6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3632.71317821097f);
 800d468:	687b      	ldr	r3, [r7, #4]
 800d46a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d46e:	ed1f 0a89 	vldr	s0, [pc, #-548]	; 800d24c <_ZN16MainViewViewBaseC1Ev+0x23c4>
 800d472:	4618      	mov	r0, r3
 800d474:	f00b f9ce 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3617.94432952306f);
 800d478:	687b      	ldr	r3, [r7, #4]
 800d47a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d47e:	ed1f 0a8c 	vldr	s0, [pc, #-560]	; 800d250 <_ZN16MainViewViewBaseC1Ev+0x23c8>
 800d482:	4618      	mov	r0, r3
 800d484:	f00b f9c6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3591.33461477786f);
 800d488:	687b      	ldr	r3, [r7, #4]
 800d48a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d48e:	ed1f 0a8f 	vldr	s0, [pc, #-572]	; 800d254 <_ZN16MainViewViewBaseC1Ev+0x23cc>
 800d492:	4618      	mov	r0, r3
 800d494:	f00b f9be 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3553.48483595369f);
 800d498:	687b      	ldr	r3, [r7, #4]
 800d49a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d49e:	ed1f 0a92 	vldr	s0, [pc, #-584]	; 800d258 <_ZN16MainViewViewBaseC1Ev+0x23d0>
 800d4a2:	4618      	mov	r0, r3
 800d4a4:	f00b f9b6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3505.11418751151f);
 800d4a8:	687b      	ldr	r3, [r7, #4]
 800d4aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4ae:	ed1f 0a95 	vldr	s0, [pc, #-596]	; 800d25c <_ZN16MainViewViewBaseC1Ev+0x23d4>
 800d4b2:	4618      	mov	r0, r3
 800d4b4:	f00b f9ae 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3447.05128616496f);
 800d4b8:	687b      	ldr	r3, [r7, #4]
 800d4ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4be:	ed1f 0a98 	vldr	s0, [pc, #-608]	; 800d260 <_ZN16MainViewViewBaseC1Ev+0x23d8>
 800d4c2:	4618      	mov	r0, r3
 800d4c4:	f00b f9a6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3380.22391379834f);
 800d4c8:	687b      	ldr	r3, [r7, #4]
 800d4ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4ce:	ed1f 0a9b 	vldr	s0, [pc, #-620]	; 800d264 <_ZN16MainViewViewBaseC1Ev+0x23dc>
 800d4d2:	4618      	mov	r0, r3
 800d4d4:	f00b f99e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3305.64749791147f);
 800d4d8:	687b      	ldr	r3, [r7, #4]
 800d4da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4de:	ed1f 0a9e 	vldr	s0, [pc, #-632]	; 800d268 <_ZN16MainViewViewBaseC1Ev+0x23e0>
 800d4e2:	4618      	mov	r0, r3
 800d4e4:	f00b f996 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3224.41286875589f);
 800d4e8:	687b      	ldr	r3, [r7, #4]
 800d4ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4ee:	ed1f 0aa1 	vldr	s0, [pc, #-644]	; 800d26c <_ZN16MainViewViewBaseC1Ev+0x23e4>
 800d4f2:	4618      	mov	r0, r3
 800d4f4:	f00b f98e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3137.67287670428f);
 800d4f8:	687b      	ldr	r3, [r7, #4]
 800d4fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d4fe:	ed1f 0aa4 	vldr	s0, [pc, #-656]	; 800d270 <_ZN16MainViewViewBaseC1Ev+0x23e8>
 800d502:	4618      	mov	r0, r3
 800d504:	f00b f986 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3046.62843409265f);
 800d508:	687b      	ldr	r3, [r7, #4]
 800d50a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d50e:	ed1f 0aa7 	vldr	s0, [pc, #-668]	; 800d274 <_ZN16MainViewViewBaseC1Ev+0x23ec>
 800d512:	4618      	mov	r0, r3
 800d514:	f00b f97e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2952.51402656411f);
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d51e:	ed1f 0aaa 	vldr	s0, [pc, #-680]	; 800d278 <_ZN16MainViewViewBaseC1Ev+0x23f0>
 800d522:	4618      	mov	r0, r3
 800d524:	f00b f976 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2856.58281810206f);
 800d528:	687b      	ldr	r3, [r7, #4]
 800d52a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d52e:	ed1f 0aad 	vldr	s0, [pc, #-692]	; 800d27c <_ZN16MainViewViewBaseC1Ev+0x23f4>
 800d532:	4618      	mov	r0, r3
 800d534:	f00b f96e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2760.091608704f);
 800d538:	687b      	ldr	r3, [r7, #4]
 800d53a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d53e:	ed1f 0ab0 	vldr	s0, [pc, #-704]	; 800d280 <_ZN16MainViewViewBaseC1Ev+0x23f8>
 800d542:	4618      	mov	r0, r3
 800d544:	f00b f966 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2664.28578438551f);
 800d548:	687b      	ldr	r3, [r7, #4]
 800d54a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d54e:	ed1f 0ab3 	vldr	s0, [pc, #-716]	; 800d284 <_ZN16MainViewViewBaseC1Ev+0x23fc>
 800d552:	4618      	mov	r0, r3
 800d554:	f00b f95e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2570.38429951837f);
 800d558:	687b      	ldr	r3, [r7, #4]
 800d55a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d55e:	ed1f 0ab6 	vldr	s0, [pc, #-728]	; 800d288 <_ZN16MainViewViewBaseC1Ev+0x2400>
 800d562:	4618      	mov	r0, r3
 800d564:	f00b f956 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2479.56530457072f);
 800d568:	687b      	ldr	r3, [r7, #4]
 800d56a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d56e:	ed1f 0ab9 	vldr	s0, [pc, #-740]	; 800d28c <_ZN16MainViewViewBaseC1Ev+0x2404>
 800d572:	4618      	mov	r0, r3
 800d574:	f00b f94e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2392.95198315891f);
 800d578:	687b      	ldr	r3, [r7, #4]
 800d57a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d57e:	ed1f 0abc 	vldr	s0, [pc, #-752]	; 800d290 <_ZN16MainViewViewBaseC1Ev+0x2408>
 800d582:	4618      	mov	r0, r3
 800d584:	f00b f946 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2311.59923422638f);
 800d588:	687b      	ldr	r3, [r7, #4]
 800d58a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d58e:	ed1f 0abf 	vldr	s0, [pc, #-764]	; 800d294 <_ZN16MainViewViewBaseC1Ev+0x240c>
 800d592:	4618      	mov	r0, r3
 800d594:	f00b f93e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2236.48115524935f);
 800d598:	687b      	ldr	r3, [r7, #4]
 800d59a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d59e:	ed1f 0ac2 	vldr	s0, [pc, #-776]	; 800d298 <_ZN16MainViewViewBaseC1Ev+0x2410>
 800d5a2:	4618      	mov	r0, r3
 800d5a4:	f00b f936 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2168.47952031568f);
 800d5a8:	687b      	ldr	r3, [r7, #4]
 800d5aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5ae:	ed1f 0ac5 	vldr	s0, [pc, #-788]	; 800d29c <_ZN16MainViewViewBaseC1Ev+0x2414>
 800d5b2:	4618      	mov	r0, r3
 800d5b4:	f00b f92e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2108.37339412916f);
 800d5b8:	687b      	ldr	r3, [r7, #4]
 800d5ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5be:	ed1f 0ac8 	vldr	s0, [pc, #-800]	; 800d2a0 <_ZN16MainViewViewBaseC1Ev+0x2418>
 800d5c2:	4618      	mov	r0, r3
 800d5c4:	f00b f926 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2056.82992602497f);
 800d5c8:	687b      	ldr	r3, [r7, #4]
 800d5ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5ce:	ed1f 0acb 	vldr	s0, [pc, #-812]	; 800d2a4 <_ZN16MainViewViewBaseC1Ev+0x241c>
 800d5d2:	4618      	mov	r0, r3
 800d5d4:	f00b f91e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2014.39664288975f);
 800d5d8:	687b      	ldr	r3, [r7, #4]
 800d5da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5de:	ed1f 0ace 	vldr	s0, [pc, #-824]	; 800d2a8 <_ZN16MainViewViewBaseC1Ev+0x2420>
 800d5e2:	4618      	mov	r0, r3
 800d5e4:	f00b f916 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1981.495038458f);
 800d5e8:	687b      	ldr	r3, [r7, #4]
 800d5ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5ee:	ed1f 0ad1 	vldr	s0, [pc, #-836]	; 800d2ac <_ZN16MainViewViewBaseC1Ev+0x2424>
 800d5f2:	4618      	mov	r0, r3
 800d5f4:	f00b f90e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1958.41577151333f);
 800d5f8:	687b      	ldr	r3, [r7, #4]
 800d5fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d5fe:	ed1f 0ad4 	vldr	s0, [pc, #-848]	; 800d2b0 <_ZN16MainViewViewBaseC1Ev+0x2428>
 800d602:	4618      	mov	r0, r3
 800d604:	f00b f906 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1945.31540727837f);
 800d608:	687b      	ldr	r3, [r7, #4]
 800d60a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d60e:	ed1f 0ad7 	vldr	s0, [pc, #-860]	; 800d2b4 <_ZN16MainViewViewBaseC1Ev+0x242c>
 800d612:	4618      	mov	r0, r3
 800d614:	f00b f8fe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1942.21480435281f);
 800d618:	687b      	ldr	r3, [r7, #4]
 800d61a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d61e:	ed1f 0ada 	vldr	s0, [pc, #-872]	; 800d2b8 <_ZN16MainViewViewBaseC1Ev+0x2430>
 800d622:	4618      	mov	r0, r3
 800d624:	f00b f8f6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1948.99910599523f);
 800d628:	687b      	ldr	r3, [r7, #4]
 800d62a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d62e:	ed1f 0add 	vldr	s0, [pc, #-884]	; 800d2bc <_ZN16MainViewViewBaseC1Ev+0x2434>
 800d632:	4618      	mov	r0, r3
 800d634:	f00b f8ee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1965.41937643595f);
 800d638:	687b      	ldr	r3, [r7, #4]
 800d63a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d63e:	ed1f 0ae0 	vldr	s0, [pc, #-896]	; 800d2c0 <_ZN16MainViewViewBaseC1Ev+0x2438>
 800d642:	4618      	mov	r0, r3
 800d644:	f00b f8e6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1991.09591078094f);
 800d648:	687b      	ldr	r3, [r7, #4]
 800d64a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d64e:	ed9f 0ae3 	vldr	s0, [pc, #908]	; 800d9dc <_ZN16MainViewViewBaseC1Ev+0x2b54>
 800d652:	4618      	mov	r0, r3
 800d654:	f00b f8de 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2025.52299108748f);
 800d658:	687b      	ldr	r3, [r7, #4]
 800d65a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d65e:	ed9f 0ae0 	vldr	s0, [pc, #896]	; 800d9e0 <_ZN16MainViewViewBaseC1Ev+0x2b58>
 800d662:	4618      	mov	r0, r3
 800d664:	f00b f8d6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2068.07528223298f);
 800d668:	687b      	ldr	r3, [r7, #4]
 800d66a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d66e:	ed9f 0add 	vldr	s0, [pc, #884]	; 800d9e4 <_ZN16MainViewViewBaseC1Ev+0x2b5c>
 800d672:	4618      	mov	r0, r3
 800d674:	f00b f8ce 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2118.01563201244f);
 800d678:	687b      	ldr	r3, [r7, #4]
 800d67a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d67e:	ed9f 0ada 	vldr	s0, [pc, #872]	; 800d9e8 <_ZN16MainViewViewBaseC1Ev+0x2b60>
 800d682:	4618      	mov	r0, r3
 800d684:	f00b f8c6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2174.50418683294f);
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d68e:	ed9f 0ad7 	vldr	s0, [pc, #860]	; 800d9ec <_ZN16MainViewViewBaseC1Ev+0x2b64>
 800d692:	4618      	mov	r0, r3
 800d694:	f00b f8be 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2236.60881235034f);
 800d698:	687b      	ldr	r3, [r7, #4]
 800d69a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d69e:	ed9f 0ad4 	vldr	s0, [pc, #848]	; 800d9f0 <_ZN16MainViewViewBaseC1Ev+0x2b68>
 800d6a2:	4618      	mov	r0, r3
 800d6a4:	f00b f8b6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2303.31656583111f);
 800d6a8:	687b      	ldr	r3, [r7, #4]
 800d6aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6ae:	ed9f 0ad1 	vldr	s0, [pc, #836]	; 800d9f4 <_ZN16MainViewViewBaseC1Ev+0x2b6c>
 800d6b2:	4618      	mov	r0, r3
 800d6b4:	f00b f8ae 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2373.5461653903f);
 800d6b8:	687b      	ldr	r3, [r7, #4]
 800d6ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6be:	ed9f 0ace 	vldr	s0, [pc, #824]	; 800d9f8 <_ZN16MainViewViewBaseC1Ev+0x2b70>
 800d6c2:	4618      	mov	r0, r3
 800d6c4:	f00b f8a6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2446.16143700458f);
 800d6c8:	687b      	ldr	r3, [r7, #4]
 800d6ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6ce:	ed9f 0acb 	vldr	s0, [pc, #812]	; 800d9fc <_ZN16MainViewViewBaseC1Ev+0x2b74>
 800d6d2:	4618      	mov	r0, r3
 800d6d4:	f00b f89e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2519.98510176538f);
 800d6d8:	687b      	ldr	r3, [r7, #4]
 800d6da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6de:	ed9f 0ac8 	vldr	s0, [pc, #800]	; 800da00 <_ZN16MainViewViewBaseC1Ev+0x2b78>
 800d6e2:	4618      	mov	r0, r3
 800d6e4:	f00b f896 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2593.81343038455f);
 800d6e8:	687b      	ldr	r3, [r7, #4]
 800d6ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6ee:	ed9f 0ac5 	vldr	s0, [pc, #788]	; 800da04 <_ZN16MainViewViewBaseC1Ev+0x2b7c>
 800d6f2:	4618      	mov	r0, r3
 800d6f4:	f00b f88e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2666.4310124983f);
 800d6f8:	687b      	ldr	r3, [r7, #4]
 800d6fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d6fe:	ed9f 0ac2 	vldr	s0, [pc, #776]	; 800da08 <_ZN16MainViewViewBaseC1Ev+0x2b80>
 800d702:	4618      	mov	r0, r3
 800d704:	f00b f886 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2736.62576879968f);
 800d708:	687b      	ldr	r3, [r7, #4]
 800d70a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d70e:	ed9f 0abf 	vldr	s0, [pc, #764]	; 800da0c <_ZN16MainViewViewBaseC1Ev+0x2b84>
 800d712:	4618      	mov	r0, r3
 800d714:	f00b f87e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2803.2039479659f);
 800d718:	687b      	ldr	r3, [r7, #4]
 800d71a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d71e:	ed9f 0abc 	vldr	s0, [pc, #752]	; 800da10 <_ZN16MainViewViewBaseC1Ev+0x2b88>
 800d722:	4618      	mov	r0, r3
 800d724:	f00b f876 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2865.00483561013f);
 800d728:	687b      	ldr	r3, [r7, #4]
 800d72a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d72e:	ed9f 0ab9 	vldr	s0, [pc, #740]	; 800da14 <_ZN16MainViewViewBaseC1Ev+0x2b8c>
 800d732:	4618      	mov	r0, r3
 800d734:	f00b f86e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2920.91532333287f);
 800d738:	687b      	ldr	r3, [r7, #4]
 800d73a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d73e:	ed9f 0ab6 	vldr	s0, [pc, #728]	; 800da18 <_ZN16MainViewViewBaseC1Ev+0x2b90>
 800d742:	4618      	mov	r0, r3
 800d744:	f00b f866 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2969.88356107525f);
 800d748:	687b      	ldr	r3, [r7, #4]
 800d74a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d74e:	ed9f 0ab3 	vldr	s0, [pc, #716]	; 800da1c <_ZN16MainViewViewBaseC1Ev+0x2b94>
 800d752:	4618      	mov	r0, r3
 800d754:	f00b f85e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3010.93224353809f);
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d75e:	ed9f 0ab0 	vldr	s0, [pc, #704]	; 800da20 <_ZN16MainViewViewBaseC1Ev+0x2b98>
 800d762:	4618      	mov	r0, r3
 800d764:	f00b f856 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3043.17089357408f);
 800d768:	687b      	ldr	r3, [r7, #4]
 800d76a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d76e:	ed9f 0aad 	vldr	s0, [pc, #692]	; 800da24 <_ZN16MainViewViewBaseC1Ev+0x2b9c>
 800d772:	4618      	mov	r0, r3
 800d774:	f00b f84e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3065.8070907262f);
 800d778:	687b      	ldr	r3, [r7, #4]
 800d77a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d77e:	ed9f 0aaa 	vldr	s0, [pc, #680]	; 800da28 <_ZN16MainViewViewBaseC1Ev+0x2ba0>
 800d782:	4618      	mov	r0, r3
 800d784:	f00b f846 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3078.15665948738f);
 800d788:	687b      	ldr	r3, [r7, #4]
 800d78a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d78e:	ed9f 0aa7 	vldr	s0, [pc, #668]	; 800da2c <_ZN16MainViewViewBaseC1Ev+0x2ba4>
 800d792:	4618      	mov	r0, r3
 800d794:	f00b f83e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3079.65248281779f);
 800d798:	687b      	ldr	r3, [r7, #4]
 800d79a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d79e:	ed9f 0aa4 	vldr	s0, [pc, #656]	; 800da30 <_ZN16MainViewViewBaseC1Ev+0x2ba8>
 800d7a2:	4618      	mov	r0, r3
 800d7a4:	f00b f836 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3069.85200594073f);
 800d7a8:	687b      	ldr	r3, [r7, #4]
 800d7aa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7ae:	ed9f 0aa1 	vldr	s0, [pc, #644]	; 800da34 <_ZN16MainViewViewBaseC1Ev+0x2bac>
 800d7b2:	4618      	mov	r0, r3
 800d7b4:	f00b f82e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3048.44331873356f);
 800d7b8:	687b      	ldr	r3, [r7, #4]
 800d7ba:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7be:	ed9f 0a9e 	vldr	s0, [pc, #632]	; 800da38 <_ZN16MainViewViewBaseC1Ev+0x2bb0>
 800d7c2:	4618      	mov	r0, r3
 800d7c4:	f00b f826 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(3015.24954647983f);
 800d7c8:	687b      	ldr	r3, [r7, #4]
 800d7ca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7ce:	ed9f 0a9b 	vldr	s0, [pc, #620]	; 800da3c <_ZN16MainViewViewBaseC1Ev+0x2bb4>
 800d7d2:	4618      	mov	r0, r3
 800d7d4:	f00b f81e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2970.23181101964f);
 800d7d8:	687b      	ldr	r3, [r7, #4]
 800d7da:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7de:	ed9f 0a98 	vldr	s0, [pc, #608]	; 800da40 <_ZN16MainViewViewBaseC1Ev+0x2bb8>
 800d7e2:	4618      	mov	r0, r3
 800d7e4:	f00b f816 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2913.49051528455f);
 800d7e8:	687b      	ldr	r3, [r7, #4]
 800d7ea:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7ee:	ed9f 0a95 	vldr	s0, [pc, #596]	; 800da44 <_ZN16MainViewViewBaseC1Ev+0x2bbc>
 800d7f2:	4618      	mov	r0, r3
 800d7f4:	f00b f80e 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2845.26492082728f);
 800d7f8:	687b      	ldr	r3, [r7, #4]
 800d7fa:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d7fe:	ed9f 0a92 	vldr	s0, [pc, #584]	; 800da48 <_ZN16MainViewViewBaseC1Ev+0x2bc0>
 800d802:	4618      	mov	r0, r3
 800d804:	f00b f806 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2765.93119664907f);
 800d808:	687b      	ldr	r3, [r7, #4]
 800d80a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d80e:	ed9f 0a8f 	vldr	s0, [pc, #572]	; 800da4c <_ZN16MainViewViewBaseC1Ev+0x2bc4>
 800d812:	4618      	mov	r0, r3
 800d814:	f00a fffe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2675.99873849282f);
 800d818:	687b      	ldr	r3, [r7, #4]
 800d81a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d81e:	ed9f 0a8c 	vldr	s0, [pc, #560]	; 800da50 <_ZN16MainViewViewBaseC1Ev+0x2bc8>
 800d822:	4618      	mov	r0, r3
 800d824:	f00a fff6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2576.10500292531f);
 800d828:	687b      	ldr	r3, [r7, #4]
 800d82a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d82e:	ed9f 0a89 	vldr	s0, [pc, #548]	; 800da54 <_ZN16MainViewViewBaseC1Ev+0x2bcc>
 800d832:	4618      	mov	r0, r3
 800d834:	f00a ffee 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2467.00874055675f);
 800d838:	687b      	ldr	r3, [r7, #4]
 800d83a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d83e:	ed9f 0a86 	vldr	s0, [pc, #536]	; 800da58 <_ZN16MainViewViewBaseC1Ev+0x2bd0>
 800d842:	4618      	mov	r0, r3
 800d844:	f00a ffe6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2349.58187879895f);
 800d848:	687b      	ldr	r3, [r7, #4]
 800d84a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d84e:	ed9f 0a83 	vldr	s0, [pc, #524]	; 800da5c <_ZN16MainViewViewBaseC1Ev+0x2bd4>
 800d852:	4618      	mov	r0, r3
 800d854:	f00a ffde 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2224.80001320788f);
 800d858:	687b      	ldr	r3, [r7, #4]
 800d85a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d85e:	ed9f 0a80 	vldr	s0, [pc, #512]	; 800da60 <_ZN16MainViewViewBaseC1Ev+0x2bd8>
 800d862:	4618      	mov	r0, r3
 800d864:	f00a ffd6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(2093.73163279017f);
 800d868:	687b      	ldr	r3, [r7, #4]
 800d86a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d86e:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 800da64 <_ZN16MainViewViewBaseC1Ev+0x2bdc>
 800d872:	4618      	mov	r0, r3
 800d874:	f00a ffce 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1957.52629442287f);
 800d878:	687b      	ldr	r3, [r7, #4]
 800d87a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d87e:	ed9f 0a7a 	vldr	s0, [pc, #488]	; 800da68 <_ZN16MainViewViewBaseC1Ev+0x2be0>
 800d882:	4618      	mov	r0, r3
 800d884:	f00a ffc6 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>
    chart.addDataPoint(1817.40182531075f);
 800d888:	687b      	ldr	r3, [r7, #4]
 800d88a:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800d88e:	ed9f 0a77 	vldr	s0, [pc, #476]	; 800da6c <_ZN16MainViewViewBaseC1Ev+0x2be4>
 800d892:	4618      	mov	r0, r3
 800d894:	f00a ffbe 	bl	8018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>

    btnPlus.setXY(5, 1);
 800d898:	687b      	ldr	r3, [r7, #4]
 800d89a:	f503 632c 	add.w	r3, r3, #2752	; 0xac0
 800d89e:	2201      	movs	r2, #1
 800d8a0:	2105      	movs	r1, #5
 800d8a2:	4618      	mov	r0, r3
 800d8a4:	f7fc fc70 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    btnPlus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
 800d8a8:	687b      	ldr	r3, [r7, #4]
 800d8aa:	f503 642c 	add.w	r4, r3, #2752	; 0xac0
 800d8ae:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800d8b2:	2100      	movs	r1, #0
 800d8b4:	4618      	mov	r0, r3
 800d8b6:	f7fc fbbf 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d8ba:	f107 0368 	add.w	r3, r7, #104	; 0x68
 800d8be:	2101      	movs	r1, #1
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	f7fc fbb9 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d8c6:	f107 0268 	add.w	r2, r7, #104	; 0x68
 800d8ca:	f107 0364 	add.w	r3, r7, #100	; 0x64
 800d8ce:	4619      	mov	r1, r3
 800d8d0:	4620      	mov	r0, r4
 800d8d2:	f00b fdf1 	bl	80194b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btnPlus.setAction(buttonCallback);
 800d8d6:	687b      	ldr	r3, [r7, #4]
 800d8d8:	f503 622c 	add.w	r2, r3, #2752	; 0xac0
 800d8dc:	687b      	ldr	r3, [r7, #4]
 800d8de:	f503 634e 	add.w	r3, r3, #3296	; 0xce0
 800d8e2:	4619      	mov	r1, r3
 800d8e4:	4610      	mov	r0, r2
 800d8e6:	f7fc fe61 	bl	800a5ac <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    btnMinus.setXY(65, 1);
 800d8ea:	687b      	ldr	r3, [r7, #4]
 800d8ec:	f603 23f4 	addw	r3, r3, #2804	; 0xaf4
 800d8f0:	2201      	movs	r2, #1
 800d8f2:	2141      	movs	r1, #65	; 0x41
 800d8f4:	4618      	mov	r0, r3
 800d8f6:	f7fc fc47 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    btnMinus.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
 800d8fa:	687b      	ldr	r3, [r7, #4]
 800d8fc:	f603 24f4 	addw	r4, r3, #2804	; 0xaf4
 800d900:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800d904:	2100      	movs	r1, #0
 800d906:	4618      	mov	r0, r3
 800d908:	f7fc fb96 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d90c:	f107 0370 	add.w	r3, r7, #112	; 0x70
 800d910:	2101      	movs	r1, #1
 800d912:	4618      	mov	r0, r3
 800d914:	f7fc fb90 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d918:	f107 0270 	add.w	r2, r7, #112	; 0x70
 800d91c:	f107 036c 	add.w	r3, r7, #108	; 0x6c
 800d920:	4619      	mov	r1, r3
 800d922:	4620      	mov	r0, r4
 800d924:	f00b fdc8 	bl	80194b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btnMinus.setAction(buttonCallback);
 800d928:	687b      	ldr	r3, [r7, #4]
 800d92a:	f603 22f4 	addw	r2, r3, #2804	; 0xaf4
 800d92e:	687b      	ldr	r3, [r7, #4]
 800d930:	f503 634e 	add.w	r3, r3, #3296	; 0xce0
 800d934:	4619      	mov	r1, r3
 800d936:	4610      	mov	r0, r2
 800d938:	f7fc fe38 	bl	800a5ac <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    btnTrigger.setXY(415, 1);
 800d93c:	687b      	ldr	r3, [r7, #4]
 800d93e:	f603 3328 	addw	r3, r3, #2856	; 0xb28
 800d942:	2201      	movs	r2, #1
 800d944:	f240 119f 	movw	r1, #415	; 0x19f
 800d948:	4618      	mov	r0, r3
 800d94a:	f7fc fc1d 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    btnTrigger.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_SQUARE_ICON_BUTTON_PRESSED_ID));
 800d94e:	687b      	ldr	r3, [r7, #4]
 800d950:	f603 3428 	addw	r4, r3, #2856	; 0xb28
 800d954:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800d958:	2100      	movs	r1, #0
 800d95a:	4618      	mov	r0, r3
 800d95c:	f7fc fb6c 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d960:	f107 0378 	add.w	r3, r7, #120	; 0x78
 800d964:	2101      	movs	r1, #1
 800d966:	4618      	mov	r0, r3
 800d968:	f7fc fb66 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800d96c:	f107 0278 	add.w	r2, r7, #120	; 0x78
 800d970:	f107 0374 	add.w	r3, r7, #116	; 0x74
 800d974:	4619      	mov	r1, r3
 800d976:	4620      	mov	r0, r4
 800d978:	f00b fd9e 	bl	80194b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btnTrigger.setAction(buttonCallback);
 800d97c:	687b      	ldr	r3, [r7, #4]
 800d97e:	f603 3228 	addw	r2, r3, #2856	; 0xb28
 800d982:	687b      	ldr	r3, [r7, #4]
 800d984:	f503 634e 	add.w	r3, r3, #3296	; 0xce0
 800d988:	4619      	mov	r1, r3
 800d98a:	4610      	mov	r0, r2
 800d98c:	f7fc fe0e 	bl	800a5ac <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>

    labelTrigger.setXY(428, 24);
 800d990:	687b      	ldr	r3, [r7, #4]
 800d992:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800d996:	2218      	movs	r2, #24
 800d998:	f44f 71d6 	mov.w	r1, #428	; 0x1ac
 800d99c:	4618      	mov	r0, r3
 800d99e:	f7fc fbf3 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    labelTrigger.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800d9a2:	687b      	ldr	r3, [r7, #4]
 800d9a4:	f603 345c 	addw	r4, r3, #2908	; 0xb5c
 800d9a8:	22ff      	movs	r2, #255	; 0xff
 800d9aa:	21ff      	movs	r1, #255	; 0xff
 800d9ac:	20ff      	movs	r0, #255	; 0xff
 800d9ae:	f7fc ff63 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800d9b2:	4603      	mov	r3, r0
 800d9b4:	f8c7 40cc 	str.w	r4, [r7, #204]	; 0xcc
 800d9b8:	613b      	str	r3, [r7, #16]
        this->color = color;
 800d9ba:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 800d9be:	693a      	ldr	r2, [r7, #16]
 800d9c0:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800d9c2:	bf00      	nop
    labelTrigger.setLinespacing(0);
 800d9c4:	687b      	ldr	r3, [r7, #4]
 800d9c6:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800d9ca:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800d9ce:	2300      	movs	r3, #0
 800d9d0:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
        linespace = space;
 800d9d4:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800d9d8:	e04a      	b.n	800da70 <_ZN16MainViewViewBaseC1Ev+0x2be8>
 800d9da:	bf00      	nop
 800d9dc:	44f8e312 	.word	0x44f8e312
 800d9e0:	44fd30bc 	.word	0x44fd30bc
 800d9e4:	45014134 	.word	0x45014134
 800d9e8:	45046040 	.word	0x45046040
 800d9ec:	4507e811 	.word	0x4507e811
 800d9f0:	450bc9be 	.word	0x450bc9be
 800d9f4:	450ff511 	.word	0x450ff511
 800d9f8:	451458bd 	.word	0x451458bd
 800d9fc:	4518e295 	.word	0x4518e295
 800da00:	451d7fc3 	.word	0x451d7fc3
 800da04:	45221d04 	.word	0x45221d04
 800da08:	4526a6e5 	.word	0x4526a6e5
 800da0c:	452b0a03 	.word	0x452b0a03
 800da10:	452f3343 	.word	0x452f3343
 800da14:	45331014 	.word	0x45331014
 800da18:	45368ea5 	.word	0x45368ea5
 800da1c:	45399e23 	.word	0x45399e23
 800da20:	453c2eea 	.word	0x453c2eea
 800da24:	453e32bc 	.word	0x453e32bc
 800da28:	453f9cea 	.word	0x453f9cea
 800da2c:	45406282 	.word	0x45406282
 800da30:	45407a71 	.word	0x45407a71
 800da34:	453fdda2 	.word	0x453fdda2
 800da38:	453e8718 	.word	0x453e8718
 800da3c:	453c73fe 	.word	0x453c73fe
 800da40:	4539a3b5 	.word	0x4539a3b5
 800da44:	453617d9 	.word	0x453617d9
 800da48:	4531d43d 	.word	0x4531d43d
 800da4c:	452cdee6 	.word	0x452cdee6
 800da50:	45273ffb 	.word	0x45273ffb
 800da54:	452101ae 	.word	0x452101ae
 800da58:	451a3024 	.word	0x451a3024
 800da5c:	4512d94f 	.word	0x4512d94f
 800da60:	450b0ccd 	.word	0x450b0ccd
 800da64:	4502dbb5 	.word	0x4502dbb5
 800da68:	44f4b0d7 	.word	0x44f4b0d7
 800da6c:	44e32cdc 	.word	0x44e32cdc
 800da70:	f8b7 20d2 	ldrh.w	r2, [r7, #210]	; 0xd2
 800da74:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800da76:	bf00      	nop
    labelTrigger.setRotation(touchgfx::TEXT_ROTATE_180);
 800da78:	687b      	ldr	r3, [r7, #4]
 800da7a:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800da7e:	2102      	movs	r1, #2
 800da80:	4618      	mov	r0, r3
 800da82:	f7fc fe69 	bl	800a758 <_ZN8touchgfx8TextArea11setRotationENS_12TextRotationE>
    labelTrigger.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));
 800da86:	687b      	ldr	r3, [r7, #4]
 800da88:	f603 345c 	addw	r4, r3, #2908	; 0xb5c
 800da8c:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800da90:	2106      	movs	r1, #6
 800da92:	4618      	mov	r0, r3
 800da94:	f7fc fe10 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800da98:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800da9c:	4619      	mov	r1, r3
 800da9e:	4620      	mov	r0, r4
 800daa0:	f00b fcd3 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800daa4:	f107 037c 	add.w	r3, r7, #124	; 0x7c
 800daa8:	4618      	mov	r0, r3
 800daaa:	f7fb fb8d 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    labelPlus.setXY(18, 2);
 800daae:	687b      	ldr	r3, [r7, #4]
 800dab0:	f603 3398 	addw	r3, r3, #2968	; 0xb98
 800dab4:	2202      	movs	r2, #2
 800dab6:	2112      	movs	r1, #18
 800dab8:	4618      	mov	r0, r3
 800daba:	f7fc fb65 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    labelPlus.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	f603 3498 	addw	r4, r3, #2968	; 0xb98
 800dac4:	22ff      	movs	r2, #255	; 0xff
 800dac6:	21ff      	movs	r1, #255	; 0xff
 800dac8:	20ff      	movs	r0, #255	; 0xff
 800daca:	f7fc fed5 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800dace:	4603      	mov	r3, r0
 800dad0:	f8c7 40d8 	str.w	r4, [r7, #216]	; 0xd8
 800dad4:	60fb      	str	r3, [r7, #12]
        this->color = color;
 800dad6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800dada:	68fa      	ldr	r2, [r7, #12]
 800dadc:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800dade:	bf00      	nop
    labelPlus.setLinespacing(0);
 800dae0:	687b      	ldr	r3, [r7, #4]
 800dae2:	f603 3398 	addw	r3, r3, #2968	; 0xb98
 800dae6:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800daea:	2300      	movs	r3, #0
 800daec:	f8a7 30de 	strh.w	r3, [r7, #222]	; 0xde
        linespace = space;
 800daf0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800daf4:	f8b7 20de 	ldrh.w	r2, [r7, #222]	; 0xde
 800daf8:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800dafa:	bf00      	nop
    labelPlus.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));
 800dafc:	687b      	ldr	r3, [r7, #4]
 800dafe:	f603 3498 	addw	r4, r3, #2968	; 0xb98
 800db02:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800db06:	2107      	movs	r1, #7
 800db08:	4618      	mov	r0, r3
 800db0a:	f7fc fdd5 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800db0e:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800db12:	4619      	mov	r1, r3
 800db14:	4620      	mov	r0, r4
 800db16:	f00b fc98 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800db1a:	f107 0384 	add.w	r3, r7, #132	; 0x84
 800db1e:	4618      	mov	r0, r3
 800db20:	f7fb fb52 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    labelMinus.setXY(85, 2);
 800db24:	687b      	ldr	r3, [r7, #4]
 800db26:	f603 33d4 	addw	r3, r3, #3028	; 0xbd4
 800db2a:	2202      	movs	r2, #2
 800db2c:	2155      	movs	r1, #85	; 0x55
 800db2e:	4618      	mov	r0, r3
 800db30:	f7fc fb2a 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    labelMinus.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
 800db34:	687b      	ldr	r3, [r7, #4]
 800db36:	f603 34d4 	addw	r4, r3, #3028	; 0xbd4
 800db3a:	22ff      	movs	r2, #255	; 0xff
 800db3c:	21ff      	movs	r1, #255	; 0xff
 800db3e:	20ff      	movs	r0, #255	; 0xff
 800db40:	f7fc fe9a 	bl	800a878 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 800db44:	4603      	mov	r3, r0
 800db46:	f8c7 40e4 	str.w	r4, [r7, #228]	; 0xe4
 800db4a:	60bb      	str	r3, [r7, #8]
        this->color = color;
 800db4c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800db50:	68ba      	ldr	r2, [r7, #8]
 800db52:	631a      	str	r2, [r3, #48]	; 0x30
    }
 800db54:	bf00      	nop
    labelMinus.setLinespacing(0);
 800db56:	687b      	ldr	r3, [r7, #4]
 800db58:	f603 33d4 	addw	r3, r3, #3028	; 0xbd4
 800db5c:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 800db60:	2300      	movs	r3, #0
 800db62:	f8a7 30ea 	strh.w	r3, [r7, #234]	; 0xea
        linespace = space;
 800db66:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800db6a:	f8b7 20ea 	ldrh.w	r2, [r7, #234]	; 0xea
 800db6e:	869a      	strh	r2, [r3, #52]	; 0x34
    }
 800db70:	bf00      	nop
    labelMinus.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));
 800db72:	687b      	ldr	r3, [r7, #4]
 800db74:	f603 34d4 	addw	r4, r3, #3028	; 0xbd4
 800db78:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800db7c:	2108      	movs	r1, #8
 800db7e:	4618      	mov	r0, r3
 800db80:	f7fc fd9a 	bl	800a6b8 <_ZN8touchgfx9TypedTextC1Et>
 800db84:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800db88:	4619      	mov	r1, r3
 800db8a:	4620      	mov	r0, r4
 800db8c:	f00b fc5d 	bl	801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>
 800db90:	f107 038c 	add.w	r3, r7, #140	; 0x8c
 800db94:	4618      	mov	r0, r3
 800db96:	f7fb fb17 	bl	80091c8 <_ZN8touchgfx9TypedTextD1Ev>

    redLedEnable.setXY(388, 21);
 800db9a:	687b      	ldr	r3, [r7, #4]
 800db9c:	f503 6341 	add.w	r3, r3, #3088	; 0xc10
 800dba0:	2215      	movs	r2, #21
 800dba2:	f44f 71c2 	mov.w	r1, #388	; 0x184
 800dba6:	4618      	mov	r0, r3
 800dba8:	f7fc faee 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    redLedEnable.setBitmap(touchgfx::Bitmap(BITMAP_RED_LED_CIRCLE_01_ID));
 800dbac:	687b      	ldr	r3, [r7, #4]
 800dbae:	f503 6441 	add.w	r4, r3, #3088	; 0xc10
 800dbb2:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800dbb6:	2102      	movs	r1, #2
 800dbb8:	4618      	mov	r0, r3
 800dbba:	f7fc fa3d 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800dbbe:	f107 0394 	add.w	r3, r7, #148	; 0x94
 800dbc2:	4619      	mov	r1, r3
 800dbc4:	4620      	mov	r0, r4
 800dbc6:	f00b ff23 	bl	8019a10 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    redLedDisable.setXY(388, 21);
 800dbca:	687b      	ldr	r3, [r7, #4]
 800dbcc:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dbd0:	2215      	movs	r2, #21
 800dbd2:	f44f 71c2 	mov.w	r1, #388	; 0x184
 800dbd6:	4618      	mov	r0, r3
 800dbd8:	f7fc fad6 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
    redLedDisable.setBitmap(touchgfx::Bitmap(BITMAP_RED_LED_CIRCLE_02_ID));
 800dbdc:	687b      	ldr	r3, [r7, #4]
 800dbde:	f603 443c 	addw	r4, r3, #3132	; 0xc3c
 800dbe2:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800dbe6:	2103      	movs	r1, #3
 800dbe8:	4618      	mov	r0, r3
 800dbea:	f7fc fa25 	bl	800a038 <_ZN8touchgfx6BitmapC1Et>
 800dbee:	f107 0398 	add.w	r3, r7, #152	; 0x98
 800dbf2:	4619      	mov	r1, r3
 800dbf4:	4620      	mov	r0, r4
 800dbf6:	f00b ff0b 	bl	8019a10 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

    add(__background);
 800dbfa:	687a      	ldr	r2, [r7, #4]
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	3340      	adds	r3, #64	; 0x40
 800dc00:	4619      	mov	r1, r3
 800dc02:	4610      	mov	r0, r2
 800dc04:	f7fc fc3a 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(bgView);
 800dc08:	687a      	ldr	r2, [r7, #4]
 800dc0a:	687b      	ldr	r3, [r7, #4]
 800dc0c:	336c      	adds	r3, #108	; 0x6c
 800dc0e:	4619      	mov	r1, r3
 800dc10:	4610      	mov	r0, r2
 800dc12:	f7fc fc33 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelTitle);
 800dc16:	687a      	ldr	r2, [r7, #4]
 800dc18:	687b      	ldr	r3, [r7, #4]
 800dc1a:	3398      	adds	r3, #152	; 0x98
 800dc1c:	4619      	mov	r1, r3
 800dc1e:	4610      	mov	r0, r2
 800dc20:	f7fc fc2c 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(bgSignal);
 800dc24:	687a      	ldr	r2, [r7, #4]
 800dc26:	687b      	ldr	r3, [r7, #4]
 800dc28:	33d4      	adds	r3, #212	; 0xd4
 800dc2a:	4619      	mov	r1, r3
 800dc2c:	4610      	mov	r0, r2
 800dc2e:	f7fc fc25 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelSignal);
 800dc32:	687a      	ldr	r2, [r7, #4]
 800dc34:	687b      	ldr	r3, [r7, #4]
 800dc36:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800dc3a:	4619      	mov	r1, r3
 800dc3c:	4610      	mov	r0, r2
 800dc3e:	f7fc fc1d 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelDivTime);
 800dc42:	687a      	ldr	r2, [r7, #4]
 800dc44:	687b      	ldr	r3, [r7, #4]
 800dc46:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800dc4a:	4619      	mov	r1, r3
 800dc4c:	4610      	mov	r0, r2
 800dc4e:	f7fc fc15 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(chartBG);
 800dc52:	687a      	ldr	r2, [r7, #4]
 800dc54:	687b      	ldr	r3, [r7, #4]
 800dc56:	f503 73c2 	add.w	r3, r3, #388	; 0x184
 800dc5a:	4619      	mov	r1, r3
 800dc5c:	4610      	mov	r0, r2
 800dc5e:	f7fc fc0d 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(chart);
 800dc62:	687a      	ldr	r2, [r7, #4]
 800dc64:	687b      	ldr	r3, [r7, #4]
 800dc66:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800dc6a:	4619      	mov	r1, r3
 800dc6c:	4610      	mov	r0, r2
 800dc6e:	f7fc fc05 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(btnPlus);
 800dc72:	687a      	ldr	r2, [r7, #4]
 800dc74:	687b      	ldr	r3, [r7, #4]
 800dc76:	f503 632c 	add.w	r3, r3, #2752	; 0xac0
 800dc7a:	4619      	mov	r1, r3
 800dc7c:	4610      	mov	r0, r2
 800dc7e:	f7fc fbfd 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(btnMinus);
 800dc82:	687a      	ldr	r2, [r7, #4]
 800dc84:	687b      	ldr	r3, [r7, #4]
 800dc86:	f603 23f4 	addw	r3, r3, #2804	; 0xaf4
 800dc8a:	4619      	mov	r1, r3
 800dc8c:	4610      	mov	r0, r2
 800dc8e:	f7fc fbf5 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(btnTrigger);
 800dc92:	687a      	ldr	r2, [r7, #4]
 800dc94:	687b      	ldr	r3, [r7, #4]
 800dc96:	f603 3328 	addw	r3, r3, #2856	; 0xb28
 800dc9a:	4619      	mov	r1, r3
 800dc9c:	4610      	mov	r0, r2
 800dc9e:	f7fc fbed 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelTrigger);
 800dca2:	687a      	ldr	r2, [r7, #4]
 800dca4:	687b      	ldr	r3, [r7, #4]
 800dca6:	f603 335c 	addw	r3, r3, #2908	; 0xb5c
 800dcaa:	4619      	mov	r1, r3
 800dcac:	4610      	mov	r0, r2
 800dcae:	f7fc fbe5 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelPlus);
 800dcb2:	687a      	ldr	r2, [r7, #4]
 800dcb4:	687b      	ldr	r3, [r7, #4]
 800dcb6:	f603 3398 	addw	r3, r3, #2968	; 0xb98
 800dcba:	4619      	mov	r1, r3
 800dcbc:	4610      	mov	r0, r2
 800dcbe:	f7fc fbdd 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(labelMinus);
 800dcc2:	687a      	ldr	r2, [r7, #4]
 800dcc4:	687b      	ldr	r3, [r7, #4]
 800dcc6:	f603 33d4 	addw	r3, r3, #3028	; 0xbd4
 800dcca:	4619      	mov	r1, r3
 800dccc:	4610      	mov	r0, r2
 800dcce:	f7fc fbd5 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(redLedEnable);
 800dcd2:	687a      	ldr	r2, [r7, #4]
 800dcd4:	687b      	ldr	r3, [r7, #4]
 800dcd6:	f503 6341 	add.w	r3, r3, #3088	; 0xc10
 800dcda:	4619      	mov	r1, r3
 800dcdc:	4610      	mov	r0, r2
 800dcde:	f7fc fbcd 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(redLedDisable);
 800dce2:	687a      	ldr	r2, [r7, #4]
 800dce4:	687b      	ldr	r3, [r7, #4]
 800dce6:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dcea:	4619      	mov	r1, r3
 800dcec:	4610      	mov	r0, r2
 800dcee:	f7fc fbc5 	bl	800a47c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800dcf2:	687b      	ldr	r3, [r7, #4]
 800dcf4:	4618      	mov	r0, r3
 800dcf6:	37f4      	adds	r7, #244	; 0xf4
 800dcf8:	46bd      	mov	sp, r7
 800dcfa:	bd90      	pop	{r4, r7, pc}

0800dcfc <_ZN16MainViewViewBase11setupScreenEv>:

void MainViewViewBase::setupScreen()
{
 800dcfc:	b480      	push	{r7}
 800dcfe:	b083      	sub	sp, #12
 800dd00:	af00      	add	r7, sp, #0
 800dd02:	6078      	str	r0, [r7, #4]

}
 800dd04:	bf00      	nop
 800dd06:	370c      	adds	r7, #12
 800dd08:	46bd      	mov	sp, r7
 800dd0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd0e:	4770      	bx	lr

0800dd10 <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800dd10:	b580      	push	{r7, lr}
 800dd12:	b082      	sub	sp, #8
 800dd14:	af00      	add	r7, sp, #0
 800dd16:	6078      	str	r0, [r7, #4]
 800dd18:	6039      	str	r1, [r7, #0]
    if (&src == &btnPlus)
 800dd1a:	687b      	ldr	r3, [r7, #4]
 800dd1c:	f503 632c 	add.w	r3, r3, #2752	; 0xac0
 800dd20:	683a      	ldr	r2, [r7, #0]
 800dd22:	429a      	cmp	r2, r3
 800dd24:	d106      	bne.n	800dd34 <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x24>
    {
        //onPlusPush
        //When btnPlus clicked call virtual function
        //Call onBtnPlusPressed
        onBtnPlusPressed();
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	681b      	ldr	r3, [r3, #0]
 800dd2a:	3330      	adds	r3, #48	; 0x30
 800dd2c:	681b      	ldr	r3, [r3, #0]
 800dd2e:	6878      	ldr	r0, [r7, #4]
 800dd30:	4798      	blx	r3
        //onTriggerCheckState
        //When onTriggerPush completed call virtual function
        //Call onCheckBoxTriggerPressed
        onCheckBoxTriggerPressed();
    }
}
 800dd32:	e03c      	b.n	800ddae <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9e>
    else if (&src == &btnMinus)
 800dd34:	687b      	ldr	r3, [r7, #4]
 800dd36:	f603 23f4 	addw	r3, r3, #2804	; 0xaf4
 800dd3a:	683a      	ldr	r2, [r7, #0]
 800dd3c:	429a      	cmp	r2, r3
 800dd3e:	d106      	bne.n	800dd4e <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>
        onBtnMinusPressed();
 800dd40:	687b      	ldr	r3, [r7, #4]
 800dd42:	681b      	ldr	r3, [r3, #0]
 800dd44:	332c      	adds	r3, #44	; 0x2c
 800dd46:	681b      	ldr	r3, [r3, #0]
 800dd48:	6878      	ldr	r0, [r7, #4]
 800dd4a:	4798      	blx	r3
}
 800dd4c:	e02f      	b.n	800ddae <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9e>
    else if (&src == &btnTrigger)
 800dd4e:	687b      	ldr	r3, [r7, #4]
 800dd50:	f603 3328 	addw	r3, r3, #2856	; 0xb28
 800dd54:	683a      	ldr	r2, [r7, #0]
 800dd56:	429a      	cmp	r2, r3
 800dd58:	d129      	bne.n	800ddae <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x9e>
        if(redLedDisable.isVisible()){
 800dd5a:	687b      	ldr	r3, [r7, #4]
 800dd5c:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dd60:	4618      	mov	r0, r3
 800dd62:	f7fc fac0 	bl	800a2e6 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800dd66:	4603      	mov	r3, r0
 800dd68:	2b00      	cmp	r3, #0
 800dd6a:	d00d      	beq.n	800dd88 <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x78>
        	redLedDisable.setVisible(false);
 800dd6c:	687b      	ldr	r3, [r7, #4]
 800dd6e:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dd72:	2100      	movs	r1, #0
 800dd74:	4618      	mov	r0, r3
 800dd76:	f7fc fa96 	bl	800a2a6 <_ZN8touchgfx8Drawable10setVisibleEb>
        	redLedDisable.invalidate();
 800dd7a:	687b      	ldr	r3, [r7, #4]
 800dd7c:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dd80:	4618      	mov	r0, r3
 800dd82:	f00e faed 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 800dd86:	e00c      	b.n	800dda2 <_ZN16MainViewViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x92>
        	redLedDisable.setVisible(true);
 800dd88:	687b      	ldr	r3, [r7, #4]
 800dd8a:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dd8e:	2101      	movs	r1, #1
 800dd90:	4618      	mov	r0, r3
 800dd92:	f7fc fa88 	bl	800a2a6 <_ZN8touchgfx8Drawable10setVisibleEb>
        	redLedDisable.invalidate();
 800dd96:	687b      	ldr	r3, [r7, #4]
 800dd98:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800dd9c:	4618      	mov	r0, r3
 800dd9e:	f00e fadf 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
        onCheckBoxTriggerPressed();
 800dda2:	687b      	ldr	r3, [r7, #4]
 800dda4:	681b      	ldr	r3, [r3, #0]
 800dda6:	3334      	adds	r3, #52	; 0x34
 800dda8:	681b      	ldr	r3, [r3, #0]
 800ddaa:	6878      	ldr	r0, [r7, #4]
 800ddac:	4798      	blx	r3
}
 800ddae:	bf00      	nop
 800ddb0:	3708      	adds	r7, #8
 800ddb2:	46bd      	mov	sp, r7
 800ddb4:	bd80      	pop	{r7, pc}
	...

0800ddb8 <_ZN8touchgfx4ViewI17MainViewPresenterEC1Ev>:
    View()
 800ddb8:	b580      	push	{r7, lr}
 800ddba:	b082      	sub	sp, #8
 800ddbc:	af00      	add	r7, sp, #0
 800ddbe:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ddc0:	687b      	ldr	r3, [r7, #4]
 800ddc2:	4618      	mov	r0, r3
 800ddc4:	f00e feb6 	bl	801cb34 <_ZN8touchgfx6ScreenC1Ev>
 800ddc8:	4a05      	ldr	r2, [pc, #20]	; (800dde0 <_ZN8touchgfx4ViewI17MainViewPresenterEC1Ev+0x28>)
 800ddca:	687b      	ldr	r3, [r7, #4]
 800ddcc:	601a      	str	r2, [r3, #0]
 800ddce:	687b      	ldr	r3, [r7, #4]
 800ddd0:	2200      	movs	r2, #0
 800ddd2:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 800ddd4:	687b      	ldr	r3, [r7, #4]
 800ddd6:	4618      	mov	r0, r3
 800ddd8:	3708      	adds	r7, #8
 800ddda:	46bd      	mov	sp, r7
 800dddc:	bd80      	pop	{r7, pc}
 800ddde:	bf00      	nop
 800dde0:	0802f090 	.word	0x0802f090

0800dde4 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800dde4:	b580      	push	{r7, lr}
 800dde6:	b082      	sub	sp, #8
 800dde8:	af00      	add	r7, sp, #0
 800ddea:	6078      	str	r0, [r7, #4]
 800ddec:	4a05      	ldr	r2, [pc, #20]	; (800de04 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800ddee:	687b      	ldr	r3, [r7, #4]
 800ddf0:	601a      	str	r2, [r3, #0]
 800ddf2:	687b      	ldr	r3, [r7, #4]
 800ddf4:	4618      	mov	r0, r3
 800ddf6:	f7fc f95d 	bl	800a0b4 <_ZN8touchgfx8DrawableD1Ev>
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	4618      	mov	r0, r3
 800ddfe:	3708      	adds	r7, #8
 800de00:	46bd      	mov	sp, r7
 800de02:	bd80      	pop	{r7, pc}
 800de04:	0802fd68 	.word	0x0802fd68

0800de08 <_ZN8touchgfx9ContainerD0Ev>:
 800de08:	b580      	push	{r7, lr}
 800de0a:	b082      	sub	sp, #8
 800de0c:	af00      	add	r7, sp, #0
 800de0e:	6078      	str	r0, [r7, #4]
 800de10:	6878      	ldr	r0, [r7, #4]
 800de12:	f7ff ffe7 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de16:	212c      	movs	r1, #44	; 0x2c
 800de18:	6878      	ldr	r0, [r7, #4]
 800de1a:	f01d fe24 	bl	802ba66 <_ZdlPvj>
 800de1e:	687b      	ldr	r3, [r7, #4]
 800de20:	4618      	mov	r0, r3
 800de22:	3708      	adds	r7, #8
 800de24:	46bd      	mov	sp, r7
 800de26:	bd80      	pop	{r7, pc}

0800de28 <_ZN8touchgfx17AbstractDataGraphD1Ev>:
{
class AbstractGraphElement;
class AbstractGraphDecoration;

/** An abstract data graph. */
class AbstractDataGraph : public Container
 800de28:	b580      	push	{r7, lr}
 800de2a:	b082      	sub	sp, #8
 800de2c:	af00      	add	r7, sp, #0
 800de2e:	6078      	str	r0, [r7, #4]
 800de30:	4a12      	ldr	r2, [pc, #72]	; (800de7c <_ZN8touchgfx17AbstractDataGraphD1Ev+0x54>)
 800de32:	687b      	ldr	r3, [r7, #4]
 800de34:	601a      	str	r2, [r3, #0]
 800de36:	687b      	ldr	r3, [r7, #4]
 800de38:	33e4      	adds	r3, #228	; 0xe4
 800de3a:	4618      	mov	r0, r3
 800de3c:	f7ff ffd2 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de40:	687b      	ldr	r3, [r7, #4]
 800de42:	33b8      	adds	r3, #184	; 0xb8
 800de44:	4618      	mov	r0, r3
 800de46:	f7ff ffcd 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	338c      	adds	r3, #140	; 0x8c
 800de4e:	4618      	mov	r0, r3
 800de50:	f7ff ffc8 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de54:	687b      	ldr	r3, [r7, #4]
 800de56:	3360      	adds	r3, #96	; 0x60
 800de58:	4618      	mov	r0, r3
 800de5a:	f7ff ffc3 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de5e:	687b      	ldr	r3, [r7, #4]
 800de60:	3334      	adds	r3, #52	; 0x34
 800de62:	4618      	mov	r0, r3
 800de64:	f7ff ffbe 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de68:	687b      	ldr	r3, [r7, #4]
 800de6a:	4618      	mov	r0, r3
 800de6c:	f7ff ffba 	bl	800dde4 <_ZN8touchgfx9ContainerD1Ev>
 800de70:	687b      	ldr	r3, [r7, #4]
 800de72:	4618      	mov	r0, r3
 800de74:	3708      	adds	r7, #8
 800de76:	46bd      	mov	sp, r7
 800de78:	bd80      	pop	{r7, pc}
 800de7a:	bf00      	nop
 800de7c:	08030750 	.word	0x08030750

0800de80 <_ZN8touchgfx17AbstractDataGraphD0Ev>:
 800de80:	b580      	push	{r7, lr}
 800de82:	b082      	sub	sp, #8
 800de84:	af00      	add	r7, sp, #0
 800de86:	6078      	str	r0, [r7, #4]
 800de88:	6878      	ldr	r0, [r7, #4]
 800de8a:	f7ff ffcd 	bl	800de28 <_ZN8touchgfx17AbstractDataGraphD1Ev>
 800de8e:	f44f 7194 	mov.w	r1, #296	; 0x128
 800de92:	6878      	ldr	r0, [r7, #4]
 800de94:	f01d fde7 	bl	802ba66 <_ZdlPvj>
 800de98:	687b      	ldr	r3, [r7, #4]
 800de9a:	4618      	mov	r0, r3
 800de9c:	3708      	adds	r7, #8
 800de9e:	46bd      	mov	sp, r7
 800dea0:	bd80      	pop	{r7, pc}
	...

0800dea4 <_ZN8touchgfx22AbstractDataGraphWithYD1Ev>:
};

/**
 * Abstract helper class used to implement graphs with the same distance between the x values (i.e. x is ignored).
 */
class AbstractDataGraphWithY : public AbstractDataGraph
 800dea4:	b580      	push	{r7, lr}
 800dea6:	b082      	sub	sp, #8
 800dea8:	af00      	add	r7, sp, #0
 800deaa:	6078      	str	r0, [r7, #4]
 800deac:	4a05      	ldr	r2, [pc, #20]	; (800dec4 <_ZN8touchgfx22AbstractDataGraphWithYD1Ev+0x20>)
 800deae:	687b      	ldr	r3, [r7, #4]
 800deb0:	601a      	str	r2, [r3, #0]
 800deb2:	687b      	ldr	r3, [r7, #4]
 800deb4:	4618      	mov	r0, r3
 800deb6:	f7ff ffb7 	bl	800de28 <_ZN8touchgfx17AbstractDataGraphD1Ev>
 800deba:	687b      	ldr	r3, [r7, #4]
 800debc:	4618      	mov	r0, r3
 800debe:	3708      	adds	r7, #8
 800dec0:	46bd      	mov	sp, r7
 800dec2:	bd80      	pop	{r7, pc}
 800dec4:	08030840 	.word	0x08030840

0800dec8 <_ZN8touchgfx22AbstractDataGraphWithYD0Ev>:
 800dec8:	b580      	push	{r7, lr}
 800deca:	b082      	sub	sp, #8
 800decc:	af00      	add	r7, sp, #0
 800dece:	6078      	str	r0, [r7, #4]
 800ded0:	6878      	ldr	r0, [r7, #4]
 800ded2:	f7ff ffe7 	bl	800dea4 <_ZN8touchgfx22AbstractDataGraphWithYD1Ev>
 800ded6:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800deda:	6878      	ldr	r0, [r7, #4]
 800dedc:	f01d fdc3 	bl	802ba66 <_ZdlPvj>
 800dee0:	687b      	ldr	r3, [r7, #4]
 800dee2:	4618      	mov	r0, r3
 800dee4:	3708      	adds	r7, #8
 800dee6:	46bd      	mov	sp, r7
 800dee8:	bd80      	pop	{r7, pc}
	...

0800deec <_ZN8touchgfx21DataGraphWrapAndClearD1Ev>:
/**
 * The DataGraphWrapAndClear will show new points progressing across the graph. Once the graph is
 * filled, the next point added will cause the graph to be cleared and a new graph will slowly
 * be created as new values are added.
 */
class DataGraphWrapAndClear : public AbstractDataGraphWithY
 800deec:	b580      	push	{r7, lr}
 800deee:	b082      	sub	sp, #8
 800def0:	af00      	add	r7, sp, #0
 800def2:	6078      	str	r0, [r7, #4]
 800def4:	4a05      	ldr	r2, [pc, #20]	; (800df0c <_ZN8touchgfx21DataGraphWrapAndClearD1Ev+0x20>)
 800def6:	687b      	ldr	r3, [r7, #4]
 800def8:	601a      	str	r2, [r3, #0]
 800defa:	687b      	ldr	r3, [r7, #4]
 800defc:	4618      	mov	r0, r3
 800defe:	f7ff ffd1 	bl	800dea4 <_ZN8touchgfx22AbstractDataGraphWithYD1Ev>
 800df02:	687b      	ldr	r3, [r7, #4]
 800df04:	4618      	mov	r0, r3
 800df06:	3708      	adds	r7, #8
 800df08:	46bd      	mov	sp, r7
 800df0a:	bd80      	pop	{r7, pc}
 800df0c:	08030c5c 	.word	0x08030c5c

0800df10 <_ZN8touchgfx21DataGraphWrapAndClearD0Ev>:
 800df10:	b580      	push	{r7, lr}
 800df12:	b082      	sub	sp, #8
 800df14:	af00      	add	r7, sp, #0
 800df16:	6078      	str	r0, [r7, #4]
 800df18:	6878      	ldr	r0, [r7, #4]
 800df1a:	f7ff ffe7 	bl	800deec <_ZN8touchgfx21DataGraphWrapAndClearD1Ev>
 800df1e:	f44f 71a4 	mov.w	r1, #328	; 0x148
 800df22:	6878      	ldr	r0, [r7, #4]
 800df24:	f01d fd9f 	bl	802ba66 <_ZdlPvj>
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	4618      	mov	r0, r3
 800df2c:	3708      	adds	r7, #8
 800df2e:	46bd      	mov	sp, r7
 800df30:	bd80      	pop	{r7, pc}
	...

0800df34 <_ZN8touchgfx17GraphWrapAndClearILs460EEC1Ev>:
 */
template <int16_t CAPACITY>
class GraphWrapAndClear : public DataGraphWrapAndClear
{
public:
    GraphWrapAndClear()
 800df34:	b580      	push	{r7, lr}
 800df36:	b082      	sub	sp, #8
 800df38:	af00      	add	r7, sp, #0
 800df3a:	6078      	str	r0, [r7, #4]
        : DataGraphWrapAndClear(CAPACITY, yValues)
 800df3c:	6878      	ldr	r0, [r7, #4]
 800df3e:	687b      	ldr	r3, [r7, #4]
 800df40:	f503 73a4 	add.w	r3, r3, #328	; 0x148
 800df44:	461a      	mov	r2, r3
 800df46:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 800df4a:	f00b f867 	bl	801901c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi>
 800df4e:	4a04      	ldr	r2, [pc, #16]	; (800df60 <_ZN8touchgfx17GraphWrapAndClearILs460EEC1Ev+0x2c>)
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	601a      	str	r2, [r3, #0]
    {
    }
 800df54:	687b      	ldr	r3, [r7, #4]
 800df56:	4618      	mov	r0, r3
 800df58:	3708      	adds	r7, #8
 800df5a:	46bd      	mov	sp, r7
 800df5c:	bd80      	pop	{r7, pc}
 800df5e:	bf00      	nop
 800df60:	0802ef6c 	.word	0x0802ef6c

0800df64 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800df64:	b480      	push	{r7}
 800df66:	b083      	sub	sp, #12
 800df68:	af00      	add	r7, sp, #0
 800df6a:	6078      	str	r0, [r7, #4]
 800df6c:	4a04      	ldr	r2, [pc, #16]	; (800df80 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800df6e:	687b      	ldr	r3, [r7, #4]
 800df70:	601a      	str	r2, [r3, #0]
 800df72:	687b      	ldr	r3, [r7, #4]
 800df74:	4618      	mov	r0, r3
 800df76:	370c      	adds	r7, #12
 800df78:	46bd      	mov	sp, r7
 800df7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df7e:	4770      	bx	lr
 800df80:	0802f160 	.word	0x0802f160

0800df84 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pobject, void (dest_type::*pmemfun_1)(T1))
 800df84:	b580      	push	{r7, lr}
 800df86:	b084      	sub	sp, #16
 800df88:	af00      	add	r7, sp, #0
 800df8a:	60f8      	str	r0, [r7, #12]
 800df8c:	60b9      	str	r1, [r7, #8]
 800df8e:	4639      	mov	r1, r7
 800df90:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 800df94:	68fb      	ldr	r3, [r7, #12]
 800df96:	4618      	mov	r0, r3
 800df98:	f7ff ffe4 	bl	800df64 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800df9c:	4a08      	ldr	r2, [pc, #32]	; (800dfc0 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800df9e:	68fb      	ldr	r3, [r7, #12]
 800dfa0:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 800dfa2:	68fb      	ldr	r3, [r7, #12]
 800dfa4:	68ba      	ldr	r2, [r7, #8]
 800dfa6:	605a      	str	r2, [r3, #4]
        this->pmemfun_1 = pmemfun_1;
 800dfa8:	68fb      	ldr	r3, [r7, #12]
 800dfaa:	3308      	adds	r3, #8
 800dfac:	463a      	mov	r2, r7
 800dfae:	e892 0003 	ldmia.w	r2, {r0, r1}
 800dfb2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800dfb6:	68fb      	ldr	r3, [r7, #12]
 800dfb8:	4618      	mov	r0, r3
 800dfba:	3710      	adds	r7, #16
 800dfbc:	46bd      	mov	sp, r7
 800dfbe:	bd80      	pop	{r7, pc}
 800dfc0:	0802ef54 	.word	0x0802ef54

0800dfc4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800dfc4:	b480      	push	{r7}
 800dfc6:	b083      	sub	sp, #12
 800dfc8:	af00      	add	r7, sp, #0
 800dfca:	6078      	str	r0, [r7, #4]
    }
 800dfcc:	4a04      	ldr	r2, [pc, #16]	; (800dfe0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800dfce:	687b      	ldr	r3, [r7, #4]
 800dfd0:	601a      	str	r2, [r3, #0]
 800dfd2:	687b      	ldr	r3, [r7, #4]
 800dfd4:	4618      	mov	r0, r3
 800dfd6:	370c      	adds	r7, #12
 800dfd8:	46bd      	mov	sp, r7
 800dfda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfde:	4770      	bx	lr
 800dfe0:	0802f160 	.word	0x0802f160

0800dfe4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800dfe4:	b580      	push	{r7, lr}
 800dfe6:	b082      	sub	sp, #8
 800dfe8:	af00      	add	r7, sp, #0
 800dfea:	6078      	str	r0, [r7, #4]
    }
 800dfec:	6878      	ldr	r0, [r7, #4]
 800dfee:	f7ff ffe9 	bl	800dfc4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800dff2:	2104      	movs	r1, #4
 800dff4:	6878      	ldr	r0, [r7, #4]
 800dff6:	f01d fd36 	bl	802ba66 <_ZdlPvj>
 800dffa:	687b      	ldr	r3, [r7, #4]
 800dffc:	4618      	mov	r0, r3
 800dffe:	3708      	adds	r7, #8
 800e000:	46bd      	mov	sp, r7
 800e002:	bd80      	pop	{r7, pc}

0800e004 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e004:	b580      	push	{r7, lr}
 800e006:	b082      	sub	sp, #8
 800e008:	af00      	add	r7, sp, #0
 800e00a:	6078      	str	r0, [r7, #4]
 800e00c:	4a05      	ldr	r2, [pc, #20]	; (800e024 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	601a      	str	r2, [r3, #0]
 800e012:	687b      	ldr	r3, [r7, #4]
 800e014:	4618      	mov	r0, r3
 800e016:	f7ff ffd5 	bl	800dfc4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e01a:	687b      	ldr	r3, [r7, #4]
 800e01c:	4618      	mov	r0, r3
 800e01e:	3708      	adds	r7, #8
 800e020:	46bd      	mov	sp, r7
 800e022:	bd80      	pop	{r7, pc}
 800e024:	0802ef54 	.word	0x0802ef54

0800e028 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800e028:	b580      	push	{r7, lr}
 800e02a:	b082      	sub	sp, #8
 800e02c:	af00      	add	r7, sp, #0
 800e02e:	6078      	str	r0, [r7, #4]
 800e030:	6878      	ldr	r0, [r7, #4]
 800e032:	f7ff ffe7 	bl	800e004 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e036:	2110      	movs	r1, #16
 800e038:	6878      	ldr	r0, [r7, #4]
 800e03a:	f01d fd14 	bl	802ba66 <_ZdlPvj>
 800e03e:	687b      	ldr	r3, [r7, #4]
 800e040:	4618      	mov	r0, r3
 800e042:	3708      	adds	r7, #8
 800e044:	46bd      	mov	sp, r7
 800e046:	bd80      	pop	{r7, pc}

0800e048 <_ZN8touchgfx17GraphWrapAndClearILs460EED1Ev>:
class GraphWrapAndClear : public DataGraphWrapAndClear
 800e048:	b580      	push	{r7, lr}
 800e04a:	b082      	sub	sp, #8
 800e04c:	af00      	add	r7, sp, #0
 800e04e:	6078      	str	r0, [r7, #4]
 800e050:	4a05      	ldr	r2, [pc, #20]	; (800e068 <_ZN8touchgfx17GraphWrapAndClearILs460EED1Ev+0x20>)
 800e052:	687b      	ldr	r3, [r7, #4]
 800e054:	601a      	str	r2, [r3, #0]
 800e056:	687b      	ldr	r3, [r7, #4]
 800e058:	4618      	mov	r0, r3
 800e05a:	f7ff ff47 	bl	800deec <_ZN8touchgfx21DataGraphWrapAndClearD1Ev>
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	4618      	mov	r0, r3
 800e062:	3708      	adds	r7, #8
 800e064:	46bd      	mov	sp, r7
 800e066:	bd80      	pop	{r7, pc}
 800e068:	0802ef6c 	.word	0x0802ef6c

0800e06c <_ZN8touchgfx17GraphWrapAndClearILs460EED0Ev>:
 800e06c:	b580      	push	{r7, lr}
 800e06e:	b082      	sub	sp, #8
 800e070:	af00      	add	r7, sp, #0
 800e072:	6078      	str	r0, [r7, #4]
 800e074:	6878      	ldr	r0, [r7, #4]
 800e076:	f7ff ffe7 	bl	800e048 <_ZN8touchgfx17GraphWrapAndClearILs460EED1Ev>
 800e07a:	f640 0178 	movw	r1, #2168	; 0x878
 800e07e:	6878      	ldr	r0, [r7, #4]
 800e080:	f01d fcf1 	bl	802ba66 <_ZdlPvj>
 800e084:	687b      	ldr	r3, [r7, #4]
 800e086:	4618      	mov	r0, r3
 800e088:	3708      	adds	r7, #8
 800e08a:	46bd      	mov	sp, r7
 800e08c:	bd80      	pop	{r7, pc}
	...

0800e090 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800e090:	b580      	push	{r7, lr}
 800e092:	b082      	sub	sp, #8
 800e094:	af00      	add	r7, sp, #0
 800e096:	6078      	str	r0, [r7, #4]
 800e098:	4a05      	ldr	r2, [pc, #20]	; (800e0b0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800e09a:	687b      	ldr	r3, [r7, #4]
 800e09c:	601a      	str	r2, [r3, #0]
 800e09e:	687b      	ldr	r3, [r7, #4]
 800e0a0:	4618      	mov	r0, r3
 800e0a2:	f7fc fa3b 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800e0a6:	687b      	ldr	r3, [r7, #4]
 800e0a8:	4618      	mov	r0, r3
 800e0aa:	3708      	adds	r7, #8
 800e0ac:	46bd      	mov	sp, r7
 800e0ae:	bd80      	pop	{r7, pc}
 800e0b0:	08030f54 	.word	0x08030f54

0800e0b4 <_ZN8touchgfx3BoxD0Ev>:
 800e0b4:	b580      	push	{r7, lr}
 800e0b6:	b082      	sub	sp, #8
 800e0b8:	af00      	add	r7, sp, #0
 800e0ba:	6078      	str	r0, [r7, #4]
 800e0bc:	6878      	ldr	r0, [r7, #4]
 800e0be:	f7ff ffe7 	bl	800e090 <_ZN8touchgfx3BoxD1Ev>
 800e0c2:	212c      	movs	r1, #44	; 0x2c
 800e0c4:	6878      	ldr	r0, [r7, #4]
 800e0c6:	f01d fcce 	bl	802ba66 <_ZdlPvj>
 800e0ca:	687b      	ldr	r3, [r7, #4]
 800e0cc:	4618      	mov	r0, r3
 800e0ce:	3708      	adds	r7, #8
 800e0d0:	46bd      	mov	sp, r7
 800e0d2:	bd80      	pop	{r7, pc}

0800e0d4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>:
class TextAreaWithTwoWildcards : public TextArea
 800e0d4:	b580      	push	{r7, lr}
 800e0d6:	b082      	sub	sp, #8
 800e0d8:	af00      	add	r7, sp, #0
 800e0da:	6078      	str	r0, [r7, #4]
 800e0dc:	4a05      	ldr	r2, [pc, #20]	; (800e0f4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev+0x20>)
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	601a      	str	r2, [r3, #0]
 800e0e2:	687b      	ldr	r3, [r7, #4]
 800e0e4:	4618      	mov	r0, r3
 800e0e6:	f7fc fb47 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800e0ea:	687b      	ldr	r3, [r7, #4]
 800e0ec:	4618      	mov	r0, r3
 800e0ee:	3708      	adds	r7, #8
 800e0f0:	46bd      	mov	sp, r7
 800e0f2:	bd80      	pop	{r7, pc}
 800e0f4:	08031138 	.word	0x08031138

0800e0f8 <_ZN8touchgfx24TextAreaWithTwoWildcardsD0Ev>:
 800e0f8:	b580      	push	{r7, lr}
 800e0fa:	b082      	sub	sp, #8
 800e0fc:	af00      	add	r7, sp, #0
 800e0fe:	6078      	str	r0, [r7, #4]
 800e100:	6878      	ldr	r0, [r7, #4]
 800e102:	f7ff ffe7 	bl	800e0d4 <_ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev>
 800e106:	2144      	movs	r1, #68	; 0x44
 800e108:	6878      	ldr	r0, [r7, #4]
 800e10a:	f01d fcac 	bl	802ba66 <_ZdlPvj>
 800e10e:	687b      	ldr	r3, [r7, #4]
 800e110:	4618      	mov	r0, r3
 800e112:	3708      	adds	r7, #8
 800e114:	46bd      	mov	sp, r7
 800e116:	bd80      	pop	{r7, pc}

0800e118 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextArea
 800e118:	b580      	push	{r7, lr}
 800e11a:	b082      	sub	sp, #8
 800e11c:	af00      	add	r7, sp, #0
 800e11e:	6078      	str	r0, [r7, #4]
 800e120:	4a05      	ldr	r2, [pc, #20]	; (800e138 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800e122:	687b      	ldr	r3, [r7, #4]
 800e124:	601a      	str	r2, [r3, #0]
 800e126:	687b      	ldr	r3, [r7, #4]
 800e128:	4618      	mov	r0, r3
 800e12a:	f7fc fb25 	bl	800a778 <_ZN8touchgfx8TextAreaD1Ev>
 800e12e:	687b      	ldr	r3, [r7, #4]
 800e130:	4618      	mov	r0, r3
 800e132:	3708      	adds	r7, #8
 800e134:	46bd      	mov	sp, r7
 800e136:	bd80      	pop	{r7, pc}
 800e138:	080310c0 	.word	0x080310c0

0800e13c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800e13c:	b580      	push	{r7, lr}
 800e13e:	b082      	sub	sp, #8
 800e140:	af00      	add	r7, sp, #0
 800e142:	6078      	str	r0, [r7, #4]
 800e144:	6878      	ldr	r0, [r7, #4]
 800e146:	f7ff ffe7 	bl	800e118 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800e14a:	2140      	movs	r1, #64	; 0x40
 800e14c:	6878      	ldr	r0, [r7, #4]
 800e14e:	f01d fc8a 	bl	802ba66 <_ZdlPvj>
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	4618      	mov	r0, r3
 800e156:	3708      	adds	r7, #8
 800e158:	46bd      	mov	sp, r7
 800e15a:	bd80      	pop	{r7, pc}

0800e15c <_ZN8touchgfx20GraphElementDiamondsD1Ev>:
 * every data point in graph.
 *
 * @note The Diamonds are drawn using Canvas Widget Renderer which is slower but produces much
 *       nicer graphics.
 */
class GraphElementDiamonds : public AbstractGraphElement
 800e15c:	b580      	push	{r7, lr}
 800e15e:	b082      	sub	sp, #8
 800e160:	af00      	add	r7, sp, #0
 800e162:	6078      	str	r0, [r7, #4]
 800e164:	4a05      	ldr	r2, [pc, #20]	; (800e17c <_ZN8touchgfx20GraphElementDiamondsD1Ev+0x20>)
 800e166:	687b      	ldr	r3, [r7, #4]
 800e168:	601a      	str	r2, [r3, #0]
 800e16a:	687b      	ldr	r3, [r7, #4]
 800e16c:	4618      	mov	r0, r3
 800e16e:	f7fc fe13 	bl	800ad98 <_ZN8touchgfx20AbstractGraphElementD1Ev>
 800e172:	687b      	ldr	r3, [r7, #4]
 800e174:	4618      	mov	r0, r3
 800e176:	3708      	adds	r7, #8
 800e178:	46bd      	mov	sp, r7
 800e17a:	bd80      	pop	{r7, pc}
 800e17c:	08030acc 	.word	0x08030acc

0800e180 <_ZN8touchgfx20GraphElementDiamondsD0Ev>:
 800e180:	b580      	push	{r7, lr}
 800e182:	b082      	sub	sp, #8
 800e184:	af00      	add	r7, sp, #0
 800e186:	6078      	str	r0, [r7, #4]
 800e188:	6878      	ldr	r0, [r7, #4]
 800e18a:	f7ff ffe7 	bl	800e15c <_ZN8touchgfx20GraphElementDiamondsD1Ev>
 800e18e:	2138      	movs	r1, #56	; 0x38
 800e190:	6878      	ldr	r0, [r7, #4]
 800e192:	f01d fc68 	bl	802ba66 <_ZdlPvj>
 800e196:	687b      	ldr	r3, [r7, #4]
 800e198:	4618      	mov	r0, r3
 800e19a:	3708      	adds	r7, #8
 800e19c:	46bd      	mov	sp, r7
 800e19e:	bd80      	pop	{r7, pc}

0800e1a0 <_ZN8touchgfx13PainterRGB565D1Ev>:
class PainterRGB565 : public AbstractPainterRGB565
 800e1a0:	b580      	push	{r7, lr}
 800e1a2:	b082      	sub	sp, #8
 800e1a4:	af00      	add	r7, sp, #0
 800e1a6:	6078      	str	r0, [r7, #4]
 800e1a8:	4a05      	ldr	r2, [pc, #20]	; (800e1c0 <_ZN8touchgfx13PainterRGB565D1Ev+0x20>)
 800e1aa:	687b      	ldr	r3, [r7, #4]
 800e1ac:	601a      	str	r2, [r3, #0]
 800e1ae:	687b      	ldr	r3, [r7, #4]
 800e1b0:	4618      	mov	r0, r3
 800e1b2:	f7fc fc63 	bl	800aa7c <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800e1b6:	687b      	ldr	r3, [r7, #4]
 800e1b8:	4618      	mov	r0, r3
 800e1ba:	3708      	adds	r7, #8
 800e1bc:	46bd      	mov	sp, r7
 800e1be:	bd80      	pop	{r7, pc}
 800e1c0:	0803057c 	.word	0x0803057c

0800e1c4 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800e1c4:	b580      	push	{r7, lr}
 800e1c6:	b082      	sub	sp, #8
 800e1c8:	af00      	add	r7, sp, #0
 800e1ca:	6078      	str	r0, [r7, #4]
 800e1cc:	6878      	ldr	r0, [r7, #4]
 800e1ce:	f7ff ffe7 	bl	800e1a0 <_ZN8touchgfx13PainterRGB565D1Ev>
 800e1d2:	211c      	movs	r1, #28
 800e1d4:	6878      	ldr	r0, [r7, #4]
 800e1d6:	f01d fc46 	bl	802ba66 <_ZdlPvj>
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	4618      	mov	r0, r3
 800e1de:	3708      	adds	r7, #8
 800e1e0:	46bd      	mov	sp, r7
 800e1e2:	bd80      	pop	{r7, pc}

0800e1e4 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 800e1e4:	b580      	push	{r7, lr}
 800e1e6:	b082      	sub	sp, #8
 800e1e8:	af00      	add	r7, sp, #0
 800e1ea:	6078      	str	r0, [r7, #4]
 800e1ec:	4a05      	ldr	r2, [pc, #20]	; (800e204 <_ZN8touchgfx17GraphElementGridXD1Ev+0x20>)
 800e1ee:	687b      	ldr	r3, [r7, #4]
 800e1f0:	601a      	str	r2, [r3, #0]
 800e1f2:	687b      	ldr	r3, [r7, #4]
 800e1f4:	4618      	mov	r0, r3
 800e1f6:	f7fc fe13 	bl	800ae20 <_ZN8touchgfx20GraphElementGridBaseD1Ev>
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	4618      	mov	r0, r3
 800e1fe:	3708      	adds	r7, #8
 800e200:	46bd      	mov	sp, r7
 800e202:	bd80      	pop	{r7, pc}
 800e204:	08030a44 	.word	0x08030a44

0800e208 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 800e208:	b580      	push	{r7, lr}
 800e20a:	b082      	sub	sp, #8
 800e20c:	af00      	add	r7, sp, #0
 800e20e:	6078      	str	r0, [r7, #4]
 800e210:	6878      	ldr	r0, [r7, #4]
 800e212:	f7ff ffe7 	bl	800e1e4 <_ZN8touchgfx17GraphElementGridXD1Ev>
 800e216:	2144      	movs	r1, #68	; 0x44
 800e218:	6878      	ldr	r0, [r7, #4]
 800e21a:	f01d fc24 	bl	802ba66 <_ZdlPvj>
 800e21e:	687b      	ldr	r3, [r7, #4]
 800e220:	4618      	mov	r0, r3
 800e222:	3708      	adds	r7, #8
 800e224:	46bd      	mov	sp, r7
 800e226:	bd80      	pop	{r7, pc}

0800e228 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 800e228:	b580      	push	{r7, lr}
 800e22a:	b082      	sub	sp, #8
 800e22c:	af00      	add	r7, sp, #0
 800e22e:	6078      	str	r0, [r7, #4]
 800e230:	4a05      	ldr	r2, [pc, #20]	; (800e248 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	601a      	str	r2, [r3, #0]
 800e236:	687b      	ldr	r3, [r7, #4]
 800e238:	4618      	mov	r0, r3
 800e23a:	f7fc f9c5 	bl	800a5c8 <_ZN8touchgfx14AbstractButtonD1Ev>
 800e23e:	687b      	ldr	r3, [r7, #4]
 800e240:	4618      	mov	r0, r3
 800e242:	3708      	adds	r7, #8
 800e244:	46bd      	mov	sp, r7
 800e246:	bd80      	pop	{r7, pc}
 800e248:	0803101c 	.word	0x0803101c

0800e24c <_ZN8touchgfx6ButtonD0Ev>:
 800e24c:	b580      	push	{r7, lr}
 800e24e:	b082      	sub	sp, #8
 800e250:	af00      	add	r7, sp, #0
 800e252:	6078      	str	r0, [r7, #4]
 800e254:	6878      	ldr	r0, [r7, #4]
 800e256:	f7ff ffe7 	bl	800e228 <_ZN8touchgfx6ButtonD1Ev>
 800e25a:	2134      	movs	r1, #52	; 0x34
 800e25c:	6878      	ldr	r0, [r7, #4]
 800e25e:	f01d fc02 	bl	802ba66 <_ZdlPvj>
 800e262:	687b      	ldr	r3, [r7, #4]
 800e264:	4618      	mov	r0, r3
 800e266:	3708      	adds	r7, #8
 800e268:	46bd      	mov	sp, r7
 800e26a:	bd80      	pop	{r7, pc}

0800e26c <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800e26c:	b580      	push	{r7, lr}
 800e26e:	b082      	sub	sp, #8
 800e270:	af00      	add	r7, sp, #0
 800e272:	6078      	str	r0, [r7, #4]
 800e274:	4a05      	ldr	r2, [pc, #20]	; (800e28c <_ZN8touchgfx5ImageD1Ev+0x20>)
 800e276:	687b      	ldr	r3, [r7, #4]
 800e278:	601a      	str	r2, [r3, #0]
 800e27a:	687b      	ldr	r3, [r7, #4]
 800e27c:	4618      	mov	r0, r3
 800e27e:	f7fc f94d 	bl	800a51c <_ZN8touchgfx6WidgetD1Ev>
 800e282:	687b      	ldr	r3, [r7, #4]
 800e284:	4618      	mov	r0, r3
 800e286:	3708      	adds	r7, #8
 800e288:	46bd      	mov	sp, r7
 800e28a:	bd80      	pop	{r7, pc}
 800e28c:	080311e0 	.word	0x080311e0

0800e290 <_ZN8touchgfx5ImageD0Ev>:
 800e290:	b580      	push	{r7, lr}
 800e292:	b082      	sub	sp, #8
 800e294:	af00      	add	r7, sp, #0
 800e296:	6078      	str	r0, [r7, #4]
 800e298:	6878      	ldr	r0, [r7, #4]
 800e29a:	f7ff ffe7 	bl	800e26c <_ZN8touchgfx5ImageD1Ev>
 800e29e:	212c      	movs	r1, #44	; 0x2c
 800e2a0:	6878      	ldr	r0, [r7, #4]
 800e2a2:	f01d fbe0 	bl	802ba66 <_ZdlPvj>
 800e2a6:	687b      	ldr	r3, [r7, #4]
 800e2a8:	4618      	mov	r0, r3
 800e2aa:	3708      	adds	r7, #8
 800e2ac:	46bd      	mov	sp, r7
 800e2ae:	bd80      	pop	{r7, pc}

0800e2b0 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800e2b0:	b580      	push	{r7, lr}
 800e2b2:	b082      	sub	sp, #8
 800e2b4:	af00      	add	r7, sp, #0
 800e2b6:	6078      	str	r0, [r7, #4]
 800e2b8:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun_1)(t1);
 800e2ba:	687b      	ldr	r3, [r7, #4]
 800e2bc:	685b      	ldr	r3, [r3, #4]
 800e2be:	687a      	ldr	r2, [r7, #4]
 800e2c0:	68d2      	ldr	r2, [r2, #12]
 800e2c2:	1052      	asrs	r2, r2, #1
 800e2c4:	1898      	adds	r0, r3, r2
 800e2c6:	687b      	ldr	r3, [r7, #4]
 800e2c8:	68db      	ldr	r3, [r3, #12]
 800e2ca:	f003 0301 	and.w	r3, r3, #1
 800e2ce:	2b00      	cmp	r3, #0
 800e2d0:	d102      	bne.n	800e2d8 <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800e2d2:	687b      	ldr	r3, [r7, #4]
 800e2d4:	689b      	ldr	r3, [r3, #8]
 800e2d6:	e00a      	b.n	800e2ee <_ZN8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800e2d8:	687b      	ldr	r3, [r7, #4]
 800e2da:	685b      	ldr	r3, [r3, #4]
 800e2dc:	687a      	ldr	r2, [r7, #4]
 800e2de:	68d2      	ldr	r2, [r2, #12]
 800e2e0:	1052      	asrs	r2, r2, #1
 800e2e2:	4413      	add	r3, r2
 800e2e4:	681b      	ldr	r3, [r3, #0]
 800e2e6:	687a      	ldr	r2, [r7, #4]
 800e2e8:	6892      	ldr	r2, [r2, #8]
 800e2ea:	4413      	add	r3, r2
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	6839      	ldr	r1, [r7, #0]
 800e2f0:	4798      	blx	r3
    }
 800e2f2:	bf00      	nop
 800e2f4:	3708      	adds	r7, #8
 800e2f6:	46bd      	mov	sp, r7
 800e2f8:	bd80      	pop	{r7, pc}

0800e2fa <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800e2fa:	b480      	push	{r7}
 800e2fc:	b083      	sub	sp, #12
 800e2fe:	af00      	add	r7, sp, #0
 800e300:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun_1 != 0);
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	685b      	ldr	r3, [r3, #4]
 800e306:	2b00      	cmp	r3, #0
 800e308:	d010      	beq.n	800e32c <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800e30a:	687b      	ldr	r3, [r7, #4]
 800e30c:	689b      	ldr	r3, [r3, #8]
 800e30e:	2b00      	cmp	r3, #0
 800e310:	d107      	bne.n	800e322 <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800e312:	687b      	ldr	r3, [r7, #4]
 800e314:	68db      	ldr	r3, [r3, #12]
 800e316:	f003 0301 	and.w	r3, r3, #1
 800e31a:	2b00      	cmp	r3, #0
 800e31c:	d101      	bne.n	800e322 <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800e31e:	2301      	movs	r3, #1
 800e320:	e000      	b.n	800e324 <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800e322:	2300      	movs	r3, #0
 800e324:	2b01      	cmp	r3, #1
 800e326:	d001      	beq.n	800e32c <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800e328:	2301      	movs	r3, #1
 800e32a:	e000      	b.n	800e32e <_ZNK8touchgfx8CallbackI16MainViewViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800e32c:	2300      	movs	r3, #0
    }
 800e32e:	4618      	mov	r0, r3
 800e330:	370c      	adds	r7, #12
 800e332:	46bd      	mov	sp, r7
 800e334:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e338:	4770      	bx	lr
	...

0800e33c <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800e33c:	b480      	push	{r7}
 800e33e:	af00      	add	r7, sp, #0
    return bitmap_database;
 800e340:	4b02      	ldr	r3, [pc, #8]	; (800e34c <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800e342:	4618      	mov	r0, r3
 800e344:	46bd      	mov	sp, r7
 800e346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e34a:	4770      	bx	lr
 800e34c:	0802f1d4 	.word	0x0802f1d4

0800e350 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800e350:	b480      	push	{r7}
 800e352:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800e354:	2304      	movs	r3, #4
}
 800e356:	4618      	mov	r0, r3
 800e358:	46bd      	mov	sp, r7
 800e35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e35e:	4770      	bx	lr

0800e360 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
     * @param  prevChar The Unicode value of the previous character.
     * @param  glyph    the glyph object for the current character.
     *
     * @return The kerning distance between prevChar and glyph char.
     */
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800e360:	b480      	push	{r7}
 800e362:	b085      	sub	sp, #20
 800e364:	af00      	add	r7, sp, #0
 800e366:	60f8      	str	r0, [r7, #12]
 800e368:	460b      	mov	r3, r1
 800e36a:	607a      	str	r2, [r7, #4]
 800e36c:	817b      	strh	r3, [r7, #10]
    {
        return 0;
 800e36e:	2300      	movs	r3, #0
    }
 800e370:	4618      	mov	r0, r3
 800e372:	3714      	adds	r7, #20
 800e374:	46bd      	mov	sp, r7
 800e376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e37a:	4770      	bx	lr

0800e37c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    /**
     * Gets GSUB table. Currently only used for Devanagari fonts.
     *
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
 800e37c:	b480      	push	{r7}
 800e37e:	b083      	sub	sp, #12
 800e380:	af00      	add	r7, sp, #0
 800e382:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800e384:	2300      	movs	r3, #0
    }
 800e386:	4618      	mov	r0, r3
 800e388:	370c      	adds	r7, #12
 800e38a:	46bd      	mov	sp, r7
 800e38c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e390:	4770      	bx	lr
	...

0800e394 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800e394:	b480      	push	{r7}
 800e396:	b085      	sub	sp, #20
 800e398:	af00      	add	r7, sp, #0
 800e39a:	60f8      	str	r0, [r7, #12]
 800e39c:	60b9      	str	r1, [r7, #8]
 800e39e:	4613      	mov	r3, r2
 800e3a0:	80fb      	strh	r3, [r7, #6]
        typedTexts = data;
 800e3a2:	4a07      	ldr	r2, [pc, #28]	; (800e3c0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800e3a4:	68fb      	ldr	r3, [r7, #12]
 800e3a6:	6013      	str	r3, [r2, #0]
        fonts = f;
 800e3a8:	4a06      	ldr	r2, [pc, #24]	; (800e3c4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800e3aa:	68bb      	ldr	r3, [r7, #8]
 800e3ac:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800e3ae:	4a06      	ldr	r2, [pc, #24]	; (800e3c8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800e3b0:	88fb      	ldrh	r3, [r7, #6]
 800e3b2:	8013      	strh	r3, [r2, #0]
    }
 800e3b4:	bf00      	nop
 800e3b6:	3714      	adds	r7, #20
 800e3b8:	46bd      	mov	sp, r7
 800e3ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e3be:	4770      	bx	lr
 800e3c0:	200041d8 	.word	0x200041d8
 800e3c4:	200041e0 	.word	0x200041e0
 800e3c8:	200041dc 	.word	0x200041dc

0800e3cc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800e3cc:	b40e      	push	{r1, r2, r3}
 800e3ce:	b580      	push	{r7, lr}
 800e3d0:	b085      	sub	sp, #20
 800e3d2:	af00      	add	r7, sp, #0
 800e3d4:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800e3d6:	f107 0320 	add.w	r3, r7, #32
 800e3da:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800e3dc:	68bb      	ldr	r3, [r7, #8]
 800e3de:	69fa      	ldr	r2, [r7, #28]
 800e3e0:	2100      	movs	r1, #0
 800e3e2:	6878      	ldr	r0, [r7, #4]
 800e3e4:	f00d feb2 	bl	801c14c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800e3e8:	4603      	mov	r3, r0
 800e3ea:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800e3ec:	89fb      	ldrh	r3, [r7, #14]
}
 800e3ee:	4618      	mov	r0, r3
 800e3f0:	3714      	adds	r7, #20
 800e3f2:	46bd      	mov	sp, r7
 800e3f4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800e3f8:	b003      	add	sp, #12
 800e3fa:	4770      	bx	lr

0800e3fc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800e3fc:	b40c      	push	{r2, r3}
 800e3fe:	b580      	push	{r7, lr}
 800e400:	b084      	sub	sp, #16
 800e402:	af00      	add	r7, sp, #0
 800e404:	6078      	str	r0, [r7, #4]
 800e406:	460b      	mov	r3, r1
 800e408:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800e40a:	f107 031c 	add.w	r3, r7, #28
 800e40e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800e410:	78f9      	ldrb	r1, [r7, #3]
 800e412:	68bb      	ldr	r3, [r7, #8]
 800e414:	69ba      	ldr	r2, [r7, #24]
 800e416:	6878      	ldr	r0, [r7, #4]
 800e418:	f00d fe98 	bl	801c14c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800e41c:	4603      	mov	r3, r0
 800e41e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800e420:	89fb      	ldrh	r3, [r7, #14]
}
 800e422:	4618      	mov	r0, r3
 800e424:	3710      	adds	r7, #16
 800e426:	46bd      	mov	sp, r7
 800e428:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800e42c:	b002      	add	sp, #8
 800e42e:	4770      	bx	lr

0800e430 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800e430:	b580      	push	{r7, lr}
 800e432:	b08a      	sub	sp, #40	; 0x28
 800e434:	af00      	add	r7, sp, #0
 800e436:	6078      	str	r0, [r7, #4]
 800e438:	460b      	mov	r3, r1
 800e43a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800e43c:	687b      	ldr	r3, [r7, #4]
 800e43e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e440:	2b00      	cmp	r3, #0
 800e442:	d016      	beq.n	800e472 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800e444:	687b      	ldr	r3, [r7, #4]
 800e446:	331a      	adds	r3, #26
 800e448:	627b      	str	r3, [r7, #36]	; 0x24
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800e44a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e44c:	8adb      	ldrh	r3, [r3, #22]
 800e44e:	2b00      	cmp	r3, #0
 800e450:	d105      	bne.n	800e45e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800e452:	4b43      	ldr	r3, [pc, #268]	; (800e560 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800e454:	4a43      	ldr	r2, [pc, #268]	; (800e564 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800e456:	21c0      	movs	r1, #192	; 0xc0
 800e458:	4843      	ldr	r0, [pc, #268]	; (800e568 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800e45a:	f01d fd45 	bl	802bee8 <__assert_func>
            return buffer[pos];
 800e45e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e460:	8a9b      	ldrh	r3, [r3, #20]
 800e462:	461a      	mov	r2, r3
 800e464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e466:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800e46a:	2b00      	cmp	r3, #0
 800e46c:	d001      	beq.n	800e472 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800e46e:	2301      	movs	r3, #1
 800e470:	e000      	b.n	800e474 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800e472:	2300      	movs	r3, #0
 800e474:	2b00      	cmp	r3, #0
 800e476:	d06a      	beq.n	800e54e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800e478:	6878      	ldr	r0, [r7, #4]
 800e47a:	f00f fa2f 	bl	801d8dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 800e47e:	687b      	ldr	r3, [r7, #4]
 800e480:	331a      	adds	r3, #26
 800e482:	623b      	str	r3, [r7, #32]
 800e484:	2301      	movs	r3, #1
 800e486:	83fb      	strh	r3, [r7, #30]
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800e488:	6a3b      	ldr	r3, [r7, #32]
 800e48a:	8adb      	ldrh	r3, [r3, #22]
 800e48c:	8bfa      	ldrh	r2, [r7, #30]
 800e48e:	429a      	cmp	r2, r3
 800e490:	d305      	bcc.n	800e49e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800e492:	4b36      	ldr	r3, [pc, #216]	; (800e56c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800e494:	4a36      	ldr	r2, [pc, #216]	; (800e570 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800e496:	21c5      	movs	r1, #197	; 0xc5
 800e498:	4833      	ldr	r0, [pc, #204]	; (800e568 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800e49a:	f01d fd25 	bl	802bee8 <__assert_func>
            const uint16_t index = pos + offset;
 800e49e:	6a3b      	ldr	r3, [r7, #32]
 800e4a0:	8a9a      	ldrh	r2, [r3, #20]
 800e4a2:	8bfb      	ldrh	r3, [r7, #30]
 800e4a4:	4413      	add	r3, r2
 800e4a6:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800e4a8:	8bbb      	ldrh	r3, [r7, #28]
 800e4aa:	2b09      	cmp	r3, #9
 800e4ac:	d801      	bhi.n	800e4b2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800e4ae:	8bbb      	ldrh	r3, [r7, #28]
 800e4b0:	e001      	b.n	800e4b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800e4b2:	8bbb      	ldrh	r3, [r7, #28]
 800e4b4:	3b0a      	subs	r3, #10
 800e4b6:	6a3a      	ldr	r2, [r7, #32]
 800e4b8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800e4bc:	f640 123f 	movw	r2, #2367	; 0x93f
 800e4c0:	4293      	cmp	r3, r2
 800e4c2:	bf0c      	ite	eq
 800e4c4:	2301      	moveq	r3, #1
 800e4c6:	2300      	movne	r3, #0
 800e4c8:	b2db      	uxtb	r3, r3
 800e4ca:	2b00      	cmp	r3, #0
 800e4cc:	d03f      	beq.n	800e54e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800e4ce:	687b      	ldr	r3, [r7, #4]
 800e4d0:	331a      	adds	r3, #26
 800e4d2:	687a      	ldr	r2, [r7, #4]
 800e4d4:	321a      	adds	r2, #26
 800e4d6:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800e4d8:	68ba      	ldr	r2, [r7, #8]
 800e4da:	8ad2      	ldrh	r2, [r2, #22]
 800e4dc:	2a00      	cmp	r2, #0
 800e4de:	d105      	bne.n	800e4ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800e4e0:	4b1f      	ldr	r3, [pc, #124]	; (800e560 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800e4e2:	4a20      	ldr	r2, [pc, #128]	; (800e564 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800e4e4:	21c0      	movs	r1, #192	; 0xc0
 800e4e6:	4820      	ldr	r0, [pc, #128]	; (800e568 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800e4e8:	f01d fcfe 	bl	802bee8 <__assert_func>
            return buffer[pos];
 800e4ec:	68ba      	ldr	r2, [r7, #8]
 800e4ee:	8a92      	ldrh	r2, [r2, #20]
 800e4f0:	4611      	mov	r1, r2
 800e4f2:	68ba      	ldr	r2, [r7, #8]
 800e4f4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800e4f8:	613b      	str	r3, [r7, #16]
 800e4fa:	4613      	mov	r3, r2
 800e4fc:	81fb      	strh	r3, [r7, #14]
        {
            buffer[pos] = newChar;
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800e4fe:	693b      	ldr	r3, [r7, #16]
 800e500:	8adb      	ldrh	r3, [r3, #22]
 800e502:	2b01      	cmp	r3, #1
 800e504:	d806      	bhi.n	800e514 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800e506:	4b1b      	ldr	r3, [pc, #108]	; (800e574 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800e508:	4a1b      	ldr	r2, [pc, #108]	; (800e578 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800e50a:	f240 110d 	movw	r1, #269	; 0x10d
 800e50e:	4816      	ldr	r0, [pc, #88]	; (800e568 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800e510:	f01d fcea 	bl	802bee8 <__assert_func>
            const uint16_t index = pos + 1;
 800e514:	693b      	ldr	r3, [r7, #16]
 800e516:	8a9b      	ldrh	r3, [r3, #20]
 800e518:	3301      	adds	r3, #1
 800e51a:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800e51c:	89bb      	ldrh	r3, [r7, #12]
 800e51e:	2b09      	cmp	r3, #9
 800e520:	d801      	bhi.n	800e526 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800e522:	89bb      	ldrh	r3, [r7, #12]
 800e524:	e000      	b.n	800e528 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800e526:	2300      	movs	r3, #0
 800e528:	693a      	ldr	r2, [r7, #16]
 800e52a:	89f9      	ldrh	r1, [r7, #14]
 800e52c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800e530:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800e532:	687b      	ldr	r3, [r7, #4]
 800e534:	331a      	adds	r3, #26
 800e536:	61bb      	str	r3, [r7, #24]
 800e538:	f640 133f 	movw	r3, #2367	; 0x93f
 800e53c:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800e53e:	69bb      	ldr	r3, [r7, #24]
 800e540:	8a9b      	ldrh	r3, [r3, #20]
 800e542:	4619      	mov	r1, r3
 800e544:	69bb      	ldr	r3, [r7, #24]
 800e546:	8afa      	ldrh	r2, [r7, #22]
 800e548:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800e54c:	bf00      	nop
        }
    }
    return getNextChar();
 800e54e:	6878      	ldr	r0, [r7, #4]
 800e550:	f00f f8a8 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e554:	4603      	mov	r3, r0
}
 800e556:	4618      	mov	r0, r3
 800e558:	3728      	adds	r7, #40	; 0x28
 800e55a:	46bd      	mov	sp, r7
 800e55c:	bd80      	pop	{r7, pc}
 800e55e:	bf00      	nop
 800e560:	0802dc14 	.word	0x0802dc14
 800e564:	0802dc20 	.word	0x0802dc20
 800e568:	0802dccc 	.word	0x0802dccc
 800e56c:	0802dd64 	.word	0x0802dd64
 800e570:	0802dd74 	.word	0x0802dd74
 800e574:	0802de48 	.word	0x0802de48
 800e578:	0802de54 	.word	0x0802de54

0800e57c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800e57c:	b580      	push	{r7, lr}
 800e57e:	b082      	sub	sp, #8
 800e580:	af00      	add	r7, sp, #0
 800e582:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800e584:	6878      	ldr	r0, [r7, #4]
 800e586:	f00f f847 	bl	801d618 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800e58a:	bf00      	nop
 800e58c:	3708      	adds	r7, #8
 800e58e:	46bd      	mov	sp, r7
 800e590:	bd80      	pop	{r7, pc}

0800e592 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800e592:	b580      	push	{r7, lr}
 800e594:	b088      	sub	sp, #32
 800e596:	af02      	add	r7, sp, #8
 800e598:	60f8      	str	r0, [r7, #12]
 800e59a:	1d38      	adds	r0, r7, #4
 800e59c:	e880 0006 	stmia.w	r0, {r1, r2}
 800e5a0:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800e5a2:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800e5a6:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800e5a8:	1d39      	adds	r1, r7, #4
 800e5aa:	697b      	ldr	r3, [r7, #20]
 800e5ac:	9301      	str	r3, [sp, #4]
 800e5ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e5b0:	9300      	str	r3, [sp, #0]
 800e5b2:	6a3b      	ldr	r3, [r7, #32]
 800e5b4:	683a      	ldr	r2, [r7, #0]
 800e5b6:	68f8      	ldr	r0, [r7, #12]
 800e5b8:	f00c fb54 	bl	801ac64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800e5bc:	bf00      	nop
 800e5be:	3718      	adds	r7, #24
 800e5c0:	46bd      	mov	sp, r7
 800e5c2:	bd80      	pop	{r7, pc}

0800e5c4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800e5c4:	b590      	push	{r4, r7, lr}
 800e5c6:	b085      	sub	sp, #20
 800e5c8:	af00      	add	r7, sp, #0
 800e5ca:	4603      	mov	r3, r0
 800e5cc:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800e5ce:	2300      	movs	r3, #0
 800e5d0:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800e5d2:	88fb      	ldrh	r3, [r7, #6]
 800e5d4:	2b00      	cmp	r3, #0
 800e5d6:	d127      	bne.n	800e628 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800e5d8:	88fb      	ldrh	r3, [r7, #6]
 800e5da:	4a1e      	ldr	r2, [pc, #120]	; (800e654 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800e5dc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e5e0:	2b00      	cmp	r3, #0
 800e5e2:	d016      	beq.n	800e612 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800e5e4:	88fb      	ldrh	r3, [r7, #6]
 800e5e6:	4a1b      	ldr	r2, [pc, #108]	; (800e654 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800e5e8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e5ec:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800e5ee:	68bb      	ldr	r3, [r7, #8]
 800e5f0:	681b      	ldr	r3, [r3, #0]
 800e5f2:	68ba      	ldr	r2, [r7, #8]
 800e5f4:	4413      	add	r3, r2
 800e5f6:	4a18      	ldr	r2, [pc, #96]	; (800e658 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800e5f8:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800e5fa:	68bb      	ldr	r3, [r7, #8]
 800e5fc:	685b      	ldr	r3, [r3, #4]
 800e5fe:	68ba      	ldr	r2, [r7, #8]
 800e600:	4413      	add	r3, r2
 800e602:	4a16      	ldr	r2, [pc, #88]	; (800e65c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800e604:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800e606:	68bb      	ldr	r3, [r7, #8]
 800e608:	689b      	ldr	r3, [r3, #8]
 800e60a:	68ba      	ldr	r2, [r7, #8]
 800e60c:	4413      	add	r3, r2
 800e60e:	60fb      	str	r3, [r7, #12]
 800e610:	e00a      	b.n	800e628 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800e612:	4b11      	ldr	r3, [pc, #68]	; (800e658 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800e614:	4a12      	ldr	r2, [pc, #72]	; (800e660 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800e616:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800e618:	4a12      	ldr	r2, [pc, #72]	; (800e664 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800e61a:	4b10      	ldr	r3, [pc, #64]	; (800e65c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800e61c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800e61e:	88fb      	ldrh	r3, [r7, #6]
 800e620:	4a11      	ldr	r2, [pc, #68]	; (800e668 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800e622:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e626:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800e628:	68fb      	ldr	r3, [r7, #12]
 800e62a:	2b00      	cmp	r3, #0
 800e62c:	d00d      	beq.n	800e64a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800e62e:	4a0f      	ldr	r2, [pc, #60]	; (800e66c <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800e630:	88fb      	ldrh	r3, [r7, #6]
 800e632:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800e634:	f000 f83e 	bl	800e6b4 <_ZN17TypedTextDatabase8getFontsEv>
 800e638:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800e63a:	f000 f833 	bl	800e6a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800e63e:	4603      	mov	r3, r0
 800e640:	461a      	mov	r2, r3
 800e642:	4621      	mov	r1, r4
 800e644:	68f8      	ldr	r0, [r7, #12]
 800e646:	f7ff fea5 	bl	800e394 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800e64a:	bf00      	nop
 800e64c:	3714      	adds	r7, #20
 800e64e:	46bd      	mov	sp, r7
 800e650:	bd90      	pop	{r4, r7, pc}
 800e652:	bf00      	nop
 800e654:	20000530 	.word	0x20000530
 800e658:	20000538 	.word	0x20000538
 800e65c:	2000053c 	.word	0x2000053c
 800e660:	0803b1d0 	.word	0x0803b1d0
 800e664:	0803b1ac 	.word	0x0803b1ac
 800e668:	0803b274 	.word	0x0803b274
 800e66c:	20000534 	.word	0x20000534

0800e670 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800e670:	b480      	push	{r7}
 800e672:	b083      	sub	sp, #12
 800e674:	af00      	add	r7, sp, #0
 800e676:	6078      	str	r0, [r7, #4]
 800e678:	460b      	mov	r3, r1
 800e67a:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800e67c:	4b07      	ldr	r3, [pc, #28]	; (800e69c <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800e67e:	681a      	ldr	r2, [r3, #0]
 800e680:	4b07      	ldr	r3, [pc, #28]	; (800e6a0 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800e682:	6819      	ldr	r1, [r3, #0]
 800e684:	887b      	ldrh	r3, [r7, #2]
 800e686:	009b      	lsls	r3, r3, #2
 800e688:	440b      	add	r3, r1
 800e68a:	681b      	ldr	r3, [r3, #0]
 800e68c:	005b      	lsls	r3, r3, #1
 800e68e:	4413      	add	r3, r2
}
 800e690:	4618      	mov	r0, r3
 800e692:	370c      	adds	r7, #12
 800e694:	46bd      	mov	sp, r7
 800e696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e69a:	4770      	bx	lr
 800e69c:	20000538 	.word	0x20000538
 800e6a0:	2000053c 	.word	0x2000053c

0800e6a4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800e6a4:	b480      	push	{r7}
 800e6a6:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800e6a8:	2309      	movs	r3, #9
}
 800e6aa:	4618      	mov	r0, r3
 800e6ac:	46bd      	mov	sp, r7
 800e6ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6b2:	4770      	bx	lr

0800e6b4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800e6b4:	b480      	push	{r7}
 800e6b6:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800e6b8:	4b02      	ldr	r3, [pc, #8]	; (800e6c4 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800e6ba:	4618      	mov	r0, r3
 800e6bc:	46bd      	mov	sp, r7
 800e6be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6c2:	4770      	bx	lr
 800e6c4:	20000540 	.word	0x20000540

0800e6c8 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 800e6c8:	b580      	push	{r7, lr}
 800e6ca:	b082      	sub	sp, #8
 800e6cc:	af00      	add	r7, sp, #0
 800e6ce:	6078      	str	r0, [r7, #4]
 800e6d0:	6039      	str	r1, [r7, #0]
 800e6d2:	687b      	ldr	r3, [r7, #4]
 800e6d4:	2b01      	cmp	r3, #1
 800e6d6:	d113      	bne.n	800e700 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800e6d8:	683b      	ldr	r3, [r7, #0]
 800e6da:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800e6de:	4293      	cmp	r3, r2
 800e6e0:	d10e      	bne.n	800e700 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800e6e2:	f7fa fe8f 	bl	8009404 <_Z23getFont_verdana_20_4bppv>
 800e6e6:	4603      	mov	r3, r0
};
 800e6e8:	4a07      	ldr	r2, [pc, #28]	; (800e708 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e6ea:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800e6ec:	f7fa fede 	bl	80094ac <_Z23getFont_verdana_40_4bppv>
 800e6f0:	4603      	mov	r3, r0
};
 800e6f2:	4a05      	ldr	r2, [pc, #20]	; (800e708 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e6f4:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800e6f6:	f7fa fe31 	bl	800935c <_Z23getFont_verdana_10_4bppv>
 800e6fa:	4603      	mov	r3, r0
};
 800e6fc:	4a02      	ldr	r2, [pc, #8]	; (800e708 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e6fe:	6093      	str	r3, [r2, #8]
}  // namespace TypedTextDatabase
 800e700:	bf00      	nop
 800e702:	3708      	adds	r7, #8
 800e704:	46bd      	mov	sp, r7
 800e706:	bd80      	pop	{r7, pc}
 800e708:	20000540 	.word	0x20000540

0800e70c <_GLOBAL__sub_I_touchgfx_fonts>:
 800e70c:	b580      	push	{r7, lr}
 800e70e:	af00      	add	r7, sp, #0
 800e710:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e714:	2001      	movs	r0, #1
 800e716:	f7ff ffd7 	bl	800e6c8 <_Z41__static_initialization_and_destruction_0ii>
 800e71a:	bd80      	pop	{r7, pc}

0800e71c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800e71c:	b580      	push	{r7, lr}
 800e71e:	b082      	sub	sp, #8
 800e720:	af00      	add	r7, sp, #0
 800e722:	6078      	str	r0, [r7, #4]
 800e724:	4a05      	ldr	r2, [pc, #20]	; (800e73c <_ZN19FrontendApplicationD1Ev+0x20>)
 800e726:	687b      	ldr	r3, [r7, #4]
 800e728:	601a      	str	r2, [r3, #0]
 800e72a:	687b      	ldr	r3, [r7, #4]
 800e72c:	4618      	mov	r0, r3
 800e72e:	f7fb f8ff 	bl	8009930 <_ZN23FrontendApplicationBaseD1Ev>
 800e732:	687b      	ldr	r3, [r7, #4]
 800e734:	4618      	mov	r0, r3
 800e736:	3708      	adds	r7, #8
 800e738:	46bd      	mov	sp, r7
 800e73a:	bd80      	pop	{r7, pc}
 800e73c:	0802f27c 	.word	0x0802f27c

0800e740 <_ZN19FrontendApplicationD0Ev>:
 800e740:	b580      	push	{r7, lr}
 800e742:	b082      	sub	sp, #8
 800e744:	af00      	add	r7, sp, #0
 800e746:	6078      	str	r0, [r7, #4]
 800e748:	6878      	ldr	r0, [r7, #4]
 800e74a:	f7ff ffe7 	bl	800e71c <_ZN19FrontendApplicationD1Ev>
 800e74e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800e752:	6878      	ldr	r0, [r7, #4]
 800e754:	f01d f987 	bl	802ba66 <_ZdlPvj>
 800e758:	687b      	ldr	r3, [r7, #4]
 800e75a:	4618      	mov	r0, r3
 800e75c:	3708      	adds	r7, #8
 800e75e:	46bd      	mov	sp, r7
 800e760:	bd80      	pop	{r7, pc}

0800e762 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800e762:	b580      	push	{r7, lr}
 800e764:	b082      	sub	sp, #8
 800e766:	af00      	add	r7, sp, #0
 800e768:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800e76a:	687b      	ldr	r3, [r7, #4]
 800e76c:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 800e770:	4618      	mov	r0, r3
 800e772:	f000 fb51 	bl	800ee18 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800e776:	687b      	ldr	r3, [r7, #4]
 800e778:	4618      	mov	r0, r3
 800e77a:	f00c fdbb 	bl	801b2f4 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800e77e:	bf00      	nop
 800e780:	3708      	adds	r7, #8
 800e782:	46bd      	mov	sp, r7
 800e784:	bd80      	pop	{r7, pc}
	...

0800e788 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800e788:	b580      	push	{r7, lr}
 800e78a:	b084      	sub	sp, #16
 800e78c:	af00      	add	r7, sp, #0
 800e78e:	60f8      	str	r0, [r7, #12]
 800e790:	60b9      	str	r1, [r7, #8]
 800e792:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800e794:	68fb      	ldr	r3, [r7, #12]
 800e796:	687a      	ldr	r2, [r7, #4]
 800e798:	68b9      	ldr	r1, [r7, #8]
 800e79a:	4618      	mov	r0, r3
 800e79c:	f7fb f90c 	bl	80099b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800e7a0:	4a03      	ldr	r2, [pc, #12]	; (800e7b0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800e7a2:	68fb      	ldr	r3, [r7, #12]
 800e7a4:	601a      	str	r2, [r3, #0]
{

}
 800e7a6:	68fb      	ldr	r3, [r7, #12]
 800e7a8:	4618      	mov	r0, r3
 800e7aa:	3710      	adds	r7, #16
 800e7ac:	46bd      	mov	sp, r7
 800e7ae:	bd80      	pop	{r7, pc}
 800e7b0:	0802f27c 	.word	0x0802f27c

0800e7b4 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800e7b4:	b480      	push	{r7}
 800e7b6:	b083      	sub	sp, #12
 800e7b8:	af00      	add	r7, sp, #0
 800e7ba:	6078      	str	r0, [r7, #4]
    {
    }
 800e7bc:	bf00      	nop
 800e7be:	370c      	adds	r7, #12
 800e7c0:	46bd      	mov	sp, r7
 800e7c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7c6:	4770      	bx	lr

0800e7c8 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800e7c8:	b480      	push	{r7}
 800e7ca:	b083      	sub	sp, #12
 800e7cc:	af00      	add	r7, sp, #0
 800e7ce:	6078      	str	r0, [r7, #4]
    {
    }
 800e7d0:	bf00      	nop
 800e7d2:	370c      	adds	r7, #12
 800e7d4:	46bd      	mov	sp, r7
 800e7d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7da:	4770      	bx	lr

0800e7dc <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800e7dc:	b480      	push	{r7}
 800e7de:	b083      	sub	sp, #12
 800e7e0:	af00      	add	r7, sp, #0
 800e7e2:	6078      	str	r0, [r7, #4]
    {
 800e7e4:	4a04      	ldr	r2, [pc, #16]	; (800e7f8 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800e7e6:	687b      	ldr	r3, [r7, #4]
 800e7e8:	601a      	str	r2, [r3, #0]
    }
 800e7ea:	687b      	ldr	r3, [r7, #4]
 800e7ec:	4618      	mov	r0, r3
 800e7ee:	370c      	adds	r7, #12
 800e7f0:	46bd      	mov	sp, r7
 800e7f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7f6:	4770      	bx	lr
 800e7f8:	0802f328 	.word	0x0802f328

0800e7fc <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800e7fc:	b580      	push	{r7, lr}
 800e7fe:	b082      	sub	sp, #8
 800e800:	af00      	add	r7, sp, #0
 800e802:	6078      	str	r0, [r7, #4]
    }
 800e804:	6878      	ldr	r0, [r7, #4]
 800e806:	f7ff ffe9 	bl	800e7dc <_ZN8touchgfx9PresenterD1Ev>
 800e80a:	2104      	movs	r1, #4
 800e80c:	6878      	ldr	r0, [r7, #4]
 800e80e:	f01d f92a 	bl	802ba66 <_ZdlPvj>
 800e812:	687b      	ldr	r3, [r7, #4]
 800e814:	4618      	mov	r0, r3
 800e816:	3708      	adds	r7, #8
 800e818:	46bd      	mov	sp, r7
 800e81a:	bd80      	pop	{r7, pc}

0800e81c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800e81c:	b480      	push	{r7}
 800e81e:	b083      	sub	sp, #12
 800e820:	af00      	add	r7, sp, #0
 800e822:	6078      	str	r0, [r7, #4]
    {
 800e824:	4a04      	ldr	r2, [pc, #16]	; (800e838 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800e826:	687b      	ldr	r3, [r7, #4]
 800e828:	601a      	str	r2, [r3, #0]
    }
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	4618      	mov	r0, r3
 800e82e:	370c      	adds	r7, #12
 800e830:	46bd      	mov	sp, r7
 800e832:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e836:	4770      	bx	lr
 800e838:	0802f328 	.word	0x0802f328

0800e83c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800e83c:	b480      	push	{r7}
 800e83e:	b083      	sub	sp, #12
 800e840:	af00      	add	r7, sp, #0
 800e842:	6078      	str	r0, [r7, #4]
 800e844:	4a06      	ldr	r2, [pc, #24]	; (800e860 <_ZN13ModelListenerC1Ev+0x24>)
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	601a      	str	r2, [r3, #0]
 800e84a:	687b      	ldr	r3, [r7, #4]
 800e84c:	2200      	movs	r2, #0
 800e84e:	605a      	str	r2, [r3, #4]
 800e850:	687b      	ldr	r3, [r7, #4]
 800e852:	4618      	mov	r0, r3
 800e854:	370c      	adds	r7, #12
 800e856:	46bd      	mov	sp, r7
 800e858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e85c:	4770      	bx	lr
 800e85e:	bf00      	nop
 800e860:	0802f308 	.word	0x0802f308

0800e864 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800e864:	b480      	push	{r7}
 800e866:	b083      	sub	sp, #12
 800e868:	af00      	add	r7, sp, #0
 800e86a:	6078      	str	r0, [r7, #4]
 800e86c:	4a04      	ldr	r2, [pc, #16]	; (800e880 <_ZN13ModelListenerD1Ev+0x1c>)
 800e86e:	687b      	ldr	r3, [r7, #4]
 800e870:	601a      	str	r2, [r3, #0]
 800e872:	687b      	ldr	r3, [r7, #4]
 800e874:	4618      	mov	r0, r3
 800e876:	370c      	adds	r7, #12
 800e878:	46bd      	mov	sp, r7
 800e87a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e87e:	4770      	bx	lr
 800e880:	0802f308 	.word	0x0802f308

0800e884 <_ZN13ModelListenerD0Ev>:
 800e884:	b580      	push	{r7, lr}
 800e886:	b082      	sub	sp, #8
 800e888:	af00      	add	r7, sp, #0
 800e88a:	6078      	str	r0, [r7, #4]
 800e88c:	6878      	ldr	r0, [r7, #4]
 800e88e:	f7ff ffe9 	bl	800e864 <_ZN13ModelListenerD1Ev>
 800e892:	2108      	movs	r1, #8
 800e894:	6878      	ldr	r0, [r7, #4]
 800e896:	f01d f8e6 	bl	802ba66 <_ZdlPvj>
 800e89a:	687b      	ldr	r3, [r7, #4]
 800e89c:	4618      	mov	r0, r3
 800e89e:	3708      	adds	r7, #8
 800e8a0:	46bd      	mov	sp, r7
 800e8a2:	bd80      	pop	{r7, pc}

0800e8a4 <_ZN13ModelListener17notifyModeChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

    virtual void notifyModeChanged(std::string newMode){};
 800e8a4:	b480      	push	{r7}
 800e8a6:	b083      	sub	sp, #12
 800e8a8:	af00      	add	r7, sp, #0
 800e8aa:	6078      	str	r0, [r7, #4]
 800e8ac:	6039      	str	r1, [r7, #0]
 800e8ae:	bf00      	nop
 800e8b0:	370c      	adds	r7, #12
 800e8b2:	46bd      	mov	sp, r7
 800e8b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8b8:	4770      	bx	lr

0800e8ba <_ZN13ModelListener17notifyFreqChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    virtual void notifyFreqChanged(std::string newFreq){};
 800e8ba:	b480      	push	{r7}
 800e8bc:	b083      	sub	sp, #12
 800e8be:	af00      	add	r7, sp, #0
 800e8c0:	6078      	str	r0, [r7, #4]
 800e8c2:	6039      	str	r1, [r7, #0]
 800e8c4:	bf00      	nop
 800e8c6:	370c      	adds	r7, #12
 800e8c8:	46bd      	mov	sp, r7
 800e8ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8ce:	4770      	bx	lr

0800e8d0 <_ZN13ModelListener19notifyDivTimChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    virtual void notifyDivTimChanged(std::string newDivTim){};
 800e8d0:	b480      	push	{r7}
 800e8d2:	b083      	sub	sp, #12
 800e8d4:	af00      	add	r7, sp, #0
 800e8d6:	6078      	str	r0, [r7, #4]
 800e8d8:	6039      	str	r1, [r7, #0]
 800e8da:	bf00      	nop
 800e8dc:	370c      	adds	r7, #12
 800e8de:	46bd      	mov	sp, r7
 800e8e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8e4:	4770      	bx	lr

0800e8e6 <_ZN13ModelListener15notifyDrawGraphEPttf>:
    virtual void notifyDrawGraph(uint16_t * values, uint16_t maxSize, float xScale = 1){};
 800e8e6:	b480      	push	{r7}
 800e8e8:	b085      	sub	sp, #20
 800e8ea:	af00      	add	r7, sp, #0
 800e8ec:	60f8      	str	r0, [r7, #12]
 800e8ee:	60b9      	str	r1, [r7, #8]
 800e8f0:	4613      	mov	r3, r2
 800e8f2:	ed87 0a00 	vstr	s0, [r7]
 800e8f6:	80fb      	strh	r3, [r7, #6]
 800e8f8:	bf00      	nop
 800e8fa:	3714      	adds	r7, #20
 800e8fc:	46bd      	mov	sp, r7
 800e8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e902:	4770      	bx	lr

0800e904 <_ZN17MainViewPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainViewPresenter() {};
 800e904:	b580      	push	{r7, lr}
 800e906:	b082      	sub	sp, #8
 800e908:	af00      	add	r7, sp, #0
 800e90a:	6078      	str	r0, [r7, #4]
 800e90c:	4a09      	ldr	r2, [pc, #36]	; (800e934 <_ZN17MainViewPresenterD1Ev+0x30>)
 800e90e:	687b      	ldr	r3, [r7, #4]
 800e910:	601a      	str	r2, [r3, #0]
 800e912:	4a09      	ldr	r2, [pc, #36]	; (800e938 <_ZN17MainViewPresenterD1Ev+0x34>)
 800e914:	687b      	ldr	r3, [r7, #4]
 800e916:	605a      	str	r2, [r3, #4]
 800e918:	687b      	ldr	r3, [r7, #4]
 800e91a:	3304      	adds	r3, #4
 800e91c:	4618      	mov	r0, r3
 800e91e:	f7ff ffa1 	bl	800e864 <_ZN13ModelListenerD1Ev>
 800e922:	687b      	ldr	r3, [r7, #4]
 800e924:	4618      	mov	r0, r3
 800e926:	f7ff ff59 	bl	800e7dc <_ZN8touchgfx9PresenterD1Ev>
 800e92a:	687b      	ldr	r3, [r7, #4]
 800e92c:	4618      	mov	r0, r3
 800e92e:	3708      	adds	r7, #8
 800e930:	46bd      	mov	sp, r7
 800e932:	bd80      	pop	{r7, pc}
 800e934:	0802f2c0 	.word	0x0802f2c0
 800e938:	0802f2e8 	.word	0x0802f2e8

0800e93c <_ZThn4_N17MainViewPresenterD1Ev>:
 800e93c:	f1a0 0004 	sub.w	r0, r0, #4
 800e940:	e7e0      	b.n	800e904 <_ZN17MainViewPresenterD1Ev>
 800e942:	bf00      	nop

0800e944 <_ZN17MainViewPresenterD0Ev>:
 800e944:	b580      	push	{r7, lr}
 800e946:	b082      	sub	sp, #8
 800e948:	af00      	add	r7, sp, #0
 800e94a:	6078      	str	r0, [r7, #4]
 800e94c:	6878      	ldr	r0, [r7, #4]
 800e94e:	f7ff ffd9 	bl	800e904 <_ZN17MainViewPresenterD1Ev>
 800e952:	2110      	movs	r1, #16
 800e954:	6878      	ldr	r0, [r7, #4]
 800e956:	f01d f886 	bl	802ba66 <_ZdlPvj>
 800e95a:	687b      	ldr	r3, [r7, #4]
 800e95c:	4618      	mov	r0, r3
 800e95e:	3708      	adds	r7, #8
 800e960:	46bd      	mov	sp, r7
 800e962:	bd80      	pop	{r7, pc}

0800e964 <_ZThn4_N17MainViewPresenterD0Ev>:
 800e964:	f1a0 0004 	sub.w	r0, r0, #4
 800e968:	e7ec      	b.n	800e944 <_ZN17MainViewPresenterD0Ev>
	...

0800e96c <_ZN17MainViewPresenterC1ER12MainViewView>:
#include <gui/mainview_screen/MainViewView.hpp>
#include <gui/mainview_screen/MainViewPresenter.hpp>

MainViewPresenter::MainViewPresenter(MainViewView& v)
 800e96c:	b580      	push	{r7, lr}
 800e96e:	b082      	sub	sp, #8
 800e970:	af00      	add	r7, sp, #0
 800e972:	6078      	str	r0, [r7, #4]
 800e974:	6039      	str	r1, [r7, #0]
    : view(v)
 800e976:	687b      	ldr	r3, [r7, #4]
 800e978:	4618      	mov	r0, r3
 800e97a:	f7ff ff4f 	bl	800e81c <_ZN8touchgfx9PresenterC1Ev>
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	3304      	adds	r3, #4
 800e982:	4618      	mov	r0, r3
 800e984:	f7ff ff5a 	bl	800e83c <_ZN13ModelListenerC1Ev>
 800e988:	4a06      	ldr	r2, [pc, #24]	; (800e9a4 <_ZN17MainViewPresenterC1ER12MainViewView+0x38>)
 800e98a:	687b      	ldr	r3, [r7, #4]
 800e98c:	601a      	str	r2, [r3, #0]
 800e98e:	4a06      	ldr	r2, [pc, #24]	; (800e9a8 <_ZN17MainViewPresenterC1ER12MainViewView+0x3c>)
 800e990:	687b      	ldr	r3, [r7, #4]
 800e992:	605a      	str	r2, [r3, #4]
 800e994:	687b      	ldr	r3, [r7, #4]
 800e996:	683a      	ldr	r2, [r7, #0]
 800e998:	60da      	str	r2, [r3, #12]
{

}
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	4618      	mov	r0, r3
 800e99e:	3708      	adds	r7, #8
 800e9a0:	46bd      	mov	sp, r7
 800e9a2:	bd80      	pop	{r7, pc}
 800e9a4:	0802f2c0 	.word	0x0802f2c0
 800e9a8:	0802f2e8 	.word	0x0802f2e8

0800e9ac <_ZN17MainViewPresenter8activateEv>:

void MainViewPresenter::activate()
{
 800e9ac:	b480      	push	{r7}
 800e9ae:	b083      	sub	sp, #12
 800e9b0:	af00      	add	r7, sp, #0
 800e9b2:	6078      	str	r0, [r7, #4]

}
 800e9b4:	bf00      	nop
 800e9b6:	370c      	adds	r7, #12
 800e9b8:	46bd      	mov	sp, r7
 800e9ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9be:	4770      	bx	lr

0800e9c0 <_ZN17MainViewPresenter10deactivateEv>:

void MainViewPresenter::deactivate()
{
 800e9c0:	b480      	push	{r7}
 800e9c2:	b083      	sub	sp, #12
 800e9c4:	af00      	add	r7, sp, #0
 800e9c6:	6078      	str	r0, [r7, #4]

}
 800e9c8:	bf00      	nop
 800e9ca:	370c      	adds	r7, #12
 800e9cc:	46bd      	mov	sp, r7
 800e9ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9d2:	4770      	bx	lr

0800e9d4 <_ZN17MainViewPresenter17notifyModeChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewPresenter::notifyModeChanged(std::string newMode){
 800e9d4:	b590      	push	{r4, r7, lr}
 800e9d6:	b089      	sub	sp, #36	; 0x24
 800e9d8:	af00      	add	r7, sp, #0
 800e9da:	6078      	str	r0, [r7, #4]
 800e9dc:	6039      	str	r1, [r7, #0]
	view.setModeSignal(newMode);
 800e9de:	687b      	ldr	r3, [r7, #4]
 800e9e0:	68dc      	ldr	r4, [r3, #12]
 800e9e2:	f107 0308 	add.w	r3, r7, #8
 800e9e6:	6839      	ldr	r1, [r7, #0]
 800e9e8:	4618      	mov	r0, r3
 800e9ea:	f01d fa0f 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800e9ee:	f107 0308 	add.w	r3, r7, #8
 800e9f2:	4619      	mov	r1, r3
 800e9f4:	4620      	mov	r0, r4
 800e9f6:	f000 f905 	bl	800ec04 <_ZN12MainViewView13setModeSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800e9fa:	f107 0308 	add.w	r3, r7, #8
 800e9fe:	4618      	mov	r0, r3
 800ea00:	f01d f93f 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800ea04:	bf00      	nop
 800ea06:	3724      	adds	r7, #36	; 0x24
 800ea08:	46bd      	mov	sp, r7
 800ea0a:	bd90      	pop	{r4, r7, pc}

0800ea0c <_ZThn4_N17MainViewPresenter17notifyModeChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

    void notifyModeChanged(std::string newMode) override;
 800ea0c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea10:	f7ff bfe0 	b.w	800e9d4 <_ZN17MainViewPresenter17notifyModeChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

0800ea14 <_ZN17MainViewPresenter17notifyFreqChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewPresenter::notifyFreqChanged(std::string newFreq){
 800ea14:	b590      	push	{r4, r7, lr}
 800ea16:	b089      	sub	sp, #36	; 0x24
 800ea18:	af00      	add	r7, sp, #0
 800ea1a:	6078      	str	r0, [r7, #4]
 800ea1c:	6039      	str	r1, [r7, #0]
	view.setFreqSignal(newFreq);
 800ea1e:	687b      	ldr	r3, [r7, #4]
 800ea20:	68dc      	ldr	r4, [r3, #12]
 800ea22:	f107 0308 	add.w	r3, r7, #8
 800ea26:	6839      	ldr	r1, [r7, #0]
 800ea28:	4618      	mov	r0, r3
 800ea2a:	f01d f9ef 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800ea2e:	f107 0308 	add.w	r3, r7, #8
 800ea32:	4619      	mov	r1, r3
 800ea34:	4620      	mov	r0, r4
 800ea36:	f000 f8fe 	bl	800ec36 <_ZN12MainViewView13setFreqSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800ea3a:	f107 0308 	add.w	r3, r7, #8
 800ea3e:	4618      	mov	r0, r3
 800ea40:	f01d f91f 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800ea44:	bf00      	nop
 800ea46:	3724      	adds	r7, #36	; 0x24
 800ea48:	46bd      	mov	sp, r7
 800ea4a:	bd90      	pop	{r4, r7, pc}

0800ea4c <_ZThn4_N17MainViewPresenter17notifyFreqChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    void notifyFreqChanged(std::string newFreq) override;
 800ea4c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea50:	f7ff bfe0 	b.w	800ea14 <_ZN17MainViewPresenter17notifyFreqChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

0800ea54 <_ZN17MainViewPresenter19notifyDivTimChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewPresenter::notifyDivTimChanged(std::string newDivTim){
 800ea54:	b590      	push	{r4, r7, lr}
 800ea56:	b089      	sub	sp, #36	; 0x24
 800ea58:	af00      	add	r7, sp, #0
 800ea5a:	6078      	str	r0, [r7, #4]
 800ea5c:	6039      	str	r1, [r7, #0]
	view.setLabelDivTime(newDivTim);
 800ea5e:	687b      	ldr	r3, [r7, #4]
 800ea60:	68dc      	ldr	r4, [r3, #12]
 800ea62:	f107 0308 	add.w	r3, r7, #8
 800ea66:	6839      	ldr	r1, [r7, #0]
 800ea68:	4618      	mov	r0, r3
 800ea6a:	f01d f9cf 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800ea6e:	f107 0308 	add.w	r3, r7, #8
 800ea72:	4619      	mov	r1, r3
 800ea74:	4620      	mov	r0, r4
 800ea76:	f000 f8f7 	bl	800ec68 <_ZN12MainViewView15setLabelDivTimeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 800ea7a:	f107 0308 	add.w	r3, r7, #8
 800ea7e:	4618      	mov	r0, r3
 800ea80:	f01d f8ff 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 800ea84:	bf00      	nop
 800ea86:	3724      	adds	r7, #36	; 0x24
 800ea88:	46bd      	mov	sp, r7
 800ea8a:	bd90      	pop	{r4, r7, pc}

0800ea8c <_ZThn4_N17MainViewPresenter19notifyDivTimChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    void notifyDivTimChanged(std::string newDivTim) override;
 800ea8c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea90:	f7ff bfe0 	b.w	800ea54 <_ZN17MainViewPresenter19notifyDivTimChangedENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>

0800ea94 <_ZN17MainViewPresenter15notifyDrawGraphEPttf>:

void MainViewPresenter::notifyDrawGraph(uint16_t * values, uint16_t maxSize, float xScale /* = 1 */){
 800ea94:	b580      	push	{r7, lr}
 800ea96:	b084      	sub	sp, #16
 800ea98:	af00      	add	r7, sp, #0
 800ea9a:	60f8      	str	r0, [r7, #12]
 800ea9c:	60b9      	str	r1, [r7, #8]
 800ea9e:	4613      	mov	r3, r2
 800eaa0:	ed87 0a00 	vstr	s0, [r7]
 800eaa4:	80fb      	strh	r3, [r7, #6]
	view.drawGraph(values, maxSize, xScale);
 800eaa6:	68fb      	ldr	r3, [r7, #12]
 800eaa8:	68db      	ldr	r3, [r3, #12]
 800eaaa:	88fa      	ldrh	r2, [r7, #6]
 800eaac:	ed97 0a00 	vldr	s0, [r7]
 800eab0:	68b9      	ldr	r1, [r7, #8]
 800eab2:	4618      	mov	r0, r3
 800eab4:	f000 f8f2 	bl	800ec9c <_ZN12MainViewView9drawGraphEPttf>
};
 800eab8:	bf00      	nop
 800eaba:	3710      	adds	r7, #16
 800eabc:	46bd      	mov	sp, r7
 800eabe:	bd80      	pop	{r7, pc}

0800eac0 <_ZThn4_N17MainViewPresenter15notifyDrawGraphEPttf>:
    void notifyDrawGraph(uint16_t* values, uint16_t maxSize, float xScale = 1) override;
 800eac0:	f1a0 0004 	sub.w	r0, r0, #4
 800eac4:	f7ff bfe6 	b.w	800ea94 <_ZN17MainViewPresenter15notifyDrawGraphEPttf>

0800eac8 <_ZN12MainViewViewD1Ev>:

class MainViewView : public MainViewViewBase
{
public:
    MainViewView();
    virtual ~MainViewView() {}
 800eac8:	b580      	push	{r7, lr}
 800eaca:	b082      	sub	sp, #8
 800eacc:	af00      	add	r7, sp, #0
 800eace:	6078      	str	r0, [r7, #4]
 800ead0:	4a05      	ldr	r2, [pc, #20]	; (800eae8 <_ZN12MainViewViewD1Ev+0x20>)
 800ead2:	687b      	ldr	r3, [r7, #4]
 800ead4:	601a      	str	r2, [r3, #0]
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	4618      	mov	r0, r3
 800eada:	f7fc f885 	bl	800abe8 <_ZN16MainViewViewBaseD1Ev>
 800eade:	687b      	ldr	r3, [r7, #4]
 800eae0:	4618      	mov	r0, r3
 800eae2:	3708      	adds	r7, #8
 800eae4:	46bd      	mov	sp, r7
 800eae6:	bd80      	pop	{r7, pc}
 800eae8:	0802f340 	.word	0x0802f340

0800eaec <_ZN12MainViewViewD0Ev>:
 800eaec:	b580      	push	{r7, lr}
 800eaee:	b082      	sub	sp, #8
 800eaf0:	af00      	add	r7, sp, #0
 800eaf2:	6078      	str	r0, [r7, #4]
 800eaf4:	6878      	ldr	r0, [r7, #4]
 800eaf6:	f7ff ffe7 	bl	800eac8 <_ZN12MainViewViewD1Ev>
 800eafa:	f642 1110 	movw	r1, #10512	; 0x2910
 800eafe:	6878      	ldr	r0, [r7, #4]
 800eb00:	f01c ffb1 	bl	802ba66 <_ZdlPvj>
 800eb04:	687b      	ldr	r3, [r7, #4]
 800eb06:	4618      	mov	r0, r3
 800eb08:	3708      	adds	r7, #8
 800eb0a:	46bd      	mov	sp, r7
 800eb0c:	bd80      	pop	{r7, pc}
	...

0800eb10 <_ZN12MainViewViewC1Ev>:
#include "gui/mainview_screen/MainViewView.hpp"
#include "app/gui.h"

MainViewView* MainViewView::_instance = nullptr;

MainViewView::MainViewView()
 800eb10:	b580      	push	{r7, lr}
 800eb12:	b082      	sub	sp, #8
 800eb14:	af00      	add	r7, sp, #0
 800eb16:	6078      	str	r0, [r7, #4]
 800eb18:	687b      	ldr	r3, [r7, #4]
 800eb1a:	4618      	mov	r0, r3
 800eb1c:	f7fc f9b4 	bl	800ae88 <_ZN16MainViewViewBaseC1Ev>
 800eb20:	4a0c      	ldr	r2, [pc, #48]	; (800eb54 <_ZN12MainViewViewC1Ev+0x44>)
 800eb22:	687b      	ldr	r3, [r7, #4]
 800eb24:	601a      	str	r2, [r3, #0]
{
    assert(!_instance);
 800eb26:	4b0c      	ldr	r3, [pc, #48]	; (800eb58 <_ZN12MainViewViewC1Ev+0x48>)
 800eb28:	681b      	ldr	r3, [r3, #0]
 800eb2a:	2b00      	cmp	r3, #0
 800eb2c:	d005      	beq.n	800eb3a <_ZN12MainViewViewC1Ev+0x2a>
 800eb2e:	4b0b      	ldr	r3, [pc, #44]	; (800eb5c <_ZN12MainViewViewC1Ev+0x4c>)
 800eb30:	4a0b      	ldr	r2, [pc, #44]	; (800eb60 <_ZN12MainViewViewC1Ev+0x50>)
 800eb32:	2109      	movs	r1, #9
 800eb34:	480b      	ldr	r0, [pc, #44]	; (800eb64 <_ZN12MainViewViewC1Ev+0x54>)
 800eb36:	f01d f9d7 	bl	802bee8 <__assert_func>
	if(_instance==nullptr){
 800eb3a:	4b07      	ldr	r3, [pc, #28]	; (800eb58 <_ZN12MainViewViewC1Ev+0x48>)
 800eb3c:	681b      	ldr	r3, [r3, #0]
 800eb3e:	2b00      	cmp	r3, #0
 800eb40:	d102      	bne.n	800eb48 <_ZN12MainViewViewC1Ev+0x38>
	    _instance = this;
 800eb42:	4a05      	ldr	r2, [pc, #20]	; (800eb58 <_ZN12MainViewViewC1Ev+0x48>)
 800eb44:	687b      	ldr	r3, [r7, #4]
 800eb46:	6013      	str	r3, [r2, #0]
	}
}
 800eb48:	687b      	ldr	r3, [r7, #4]
 800eb4a:	4618      	mov	r0, r3
 800eb4c:	3708      	adds	r7, #8
 800eb4e:	46bd      	mov	sp, r7
 800eb50:	bd80      	pop	{r7, pc}
 800eb52:	bf00      	nop
 800eb54:	0802f340 	.word	0x0802f340
 800eb58:	2000054c 	.word	0x2000054c
 800eb5c:	0802df08 	.word	0x0802df08
 800eb60:	0802df14 	.word	0x0802df14
 800eb64:	0802df34 	.word	0x0802df34

0800eb68 <_ZN12MainViewView11setupScreenEv>:
MainViewView* MainViewView::getInstance() {
	return _instance;
}

void MainViewView::setupScreen()
{
 800eb68:	b580      	push	{r7, lr}
 800eb6a:	b082      	sub	sp, #8
 800eb6c:	af00      	add	r7, sp, #0
 800eb6e:	6078      	str	r0, [r7, #4]
    MainViewViewBase::setupScreen();
 800eb70:	687b      	ldr	r3, [r7, #4]
 800eb72:	4618      	mov	r0, r3
 800eb74:	f7ff f8c2 	bl	800dcfc <_ZN16MainViewViewBase11setupScreenEv>
}
 800eb78:	bf00      	nop
 800eb7a:	3708      	adds	r7, #8
 800eb7c:	46bd      	mov	sp, r7
 800eb7e:	bd80      	pop	{r7, pc}

0800eb80 <_ZN12MainViewView14tearDownScreenEv>:

void MainViewView::tearDownScreen()
{
 800eb80:	b580      	push	{r7, lr}
 800eb82:	b082      	sub	sp, #8
 800eb84:	af00      	add	r7, sp, #0
 800eb86:	6078      	str	r0, [r7, #4]
    MainViewViewBase::tearDownScreen();
 800eb88:	687b      	ldr	r3, [r7, #4]
 800eb8a:	4618      	mov	r0, r3
 800eb8c:	f7fb fc56 	bl	800a43c <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800eb90:	bf00      	nop
 800eb92:	3708      	adds	r7, #8
 800eb94:	46bd      	mov	sp, r7
 800eb96:	bd80      	pop	{r7, pc}

0800eb98 <_ZN12MainViewView16onBtnPlusPressedEv>:

void MainViewView::onBtnPlusPressed(){
 800eb98:	b580      	push	{r7, lr}
 800eb9a:	b082      	sub	sp, #8
 800eb9c:	af00      	add	r7, sp, #0
 800eb9e:	6078      	str	r0, [r7, #4]
	oscilloscope::Gui::getInstance()->onButtonTimePlusPressed();
 800eba0:	f003 f9a2 	bl	8011ee8 <_ZN12oscilloscope3Gui11getInstanceEv>
 800eba4:	4603      	mov	r3, r0
 800eba6:	4618      	mov	r0, r3
 800eba8:	f003 fa14 	bl	8011fd4 <_ZN12oscilloscope3Gui23onButtonTimePlusPressedEv>
}
 800ebac:	bf00      	nop
 800ebae:	3708      	adds	r7, #8
 800ebb0:	46bd      	mov	sp, r7
 800ebb2:	bd80      	pop	{r7, pc}

0800ebb4 <_ZN12MainViewView17onBtnMinusPressedEv>:

void MainViewView::onBtnMinusPressed(){
 800ebb4:	b580      	push	{r7, lr}
 800ebb6:	b082      	sub	sp, #8
 800ebb8:	af00      	add	r7, sp, #0
 800ebba:	6078      	str	r0, [r7, #4]
    oscilloscope::Gui::getInstance()->onButtonTimeMinusPressed();
 800ebbc:	f003 f994 	bl	8011ee8 <_ZN12oscilloscope3Gui11getInstanceEv>
 800ebc0:	4603      	mov	r3, r0
 800ebc2:	4618      	mov	r0, r3
 800ebc4:	f003 fa17 	bl	8011ff6 <_ZN12oscilloscope3Gui24onButtonTimeMinusPressedEv>
}
 800ebc8:	bf00      	nop
 800ebca:	3708      	adds	r7, #8
 800ebcc:	46bd      	mov	sp, r7
 800ebce:	bd80      	pop	{r7, pc}

0800ebd0 <_ZN12MainViewView24onCheckBoxTriggerPressedEv>:

void MainViewView::onCheckBoxTriggerPressed(){
 800ebd0:	b580      	push	{r7, lr}
 800ebd2:	b084      	sub	sp, #16
 800ebd4:	af00      	add	r7, sp, #0
 800ebd6:	6078      	str	r0, [r7, #4]

    // Get actual state of the trigger checkbox by reading the status of the red LED
    const bool checked = !redLedDisable.isVisible();
 800ebd8:	687b      	ldr	r3, [r7, #4]
 800ebda:	f603 433c 	addw	r3, r3, #3132	; 0xc3c
 800ebde:	4618      	mov	r0, r3
 800ebe0:	f7fb fb81 	bl	800a2e6 <_ZNK8touchgfx8Drawable9isVisibleEv>
 800ebe4:	4603      	mov	r3, r0
 800ebe6:	f083 0301 	eor.w	r3, r3, #1
 800ebea:	73fb      	strb	r3, [r7, #15]
    // Notify GUI
    oscilloscope::Gui::getInstance()->onCheckBoxTriggerCheckState(checked);
 800ebec:	f003 f97c 	bl	8011ee8 <_ZN12oscilloscope3Gui11getInstanceEv>
 800ebf0:	4602      	mov	r2, r0
 800ebf2:	7bfb      	ldrb	r3, [r7, #15]
 800ebf4:	4619      	mov	r1, r3
 800ebf6:	4610      	mov	r0, r2
 800ebf8:	f003 fa0e 	bl	8012018 <_ZN12oscilloscope3Gui27onCheckBoxTriggerCheckStateEb>
}
 800ebfc:	bf00      	nop
 800ebfe:	3710      	adds	r7, #16
 800ec00:	46bd      	mov	sp, r7
 800ec02:	bd80      	pop	{r7, pc}

0800ec04 <_ZN12MainViewView13setModeSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewView::setModeSignal(const std::string str){
 800ec04:	b580      	push	{r7, lr}
 800ec06:	b082      	sub	sp, #8
 800ec08:	af00      	add	r7, sp, #0
 800ec0a:	6078      	str	r0, [r7, #4]
 800ec0c:	6039      	str	r1, [r7, #0]
	Unicode::fromUTF8((const unsigned char *)str.c_str(),labelSignalBuffer1,LABELSIGNALBUFFER1_SIZE);
 800ec0e:	6838      	ldr	r0, [r7, #0]
 800ec10:	f01d f8d5 	bl	802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	f603 4368 	addw	r3, r3, #3176	; 0xc68
 800ec1a:	2214      	movs	r2, #20
 800ec1c:	4619      	mov	r1, r3
 800ec1e:	f00f fc22 	bl	801e466 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>
	labelSignal.invalidate();
 800ec22:	687b      	ldr	r3, [r7, #4]
 800ec24:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800ec28:	4618      	mov	r0, r3
 800ec2a:	f00d fb99 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ec2e:	bf00      	nop
 800ec30:	3708      	adds	r7, #8
 800ec32:	46bd      	mov	sp, r7
 800ec34:	bd80      	pop	{r7, pc}

0800ec36 <_ZN12MainViewView13setFreqSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewView::setFreqSignal(const std::string str){
 800ec36:	b580      	push	{r7, lr}
 800ec38:	b082      	sub	sp, #8
 800ec3a:	af00      	add	r7, sp, #0
 800ec3c:	6078      	str	r0, [r7, #4]
 800ec3e:	6039      	str	r1, [r7, #0]
	Unicode::fromUTF8((const unsigned char *)str.c_str(),labelSignalBuffer2,LABELSIGNALBUFFER2_SIZE);
 800ec40:	6838      	ldr	r0, [r7, #0]
 800ec42:	f01d f8bc 	bl	802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ec46:	687b      	ldr	r3, [r7, #4]
 800ec48:	f503 6349 	add.w	r3, r3, #3216	; 0xc90
 800ec4c:	2214      	movs	r2, #20
 800ec4e:	4619      	mov	r1, r3
 800ec50:	f00f fc09 	bl	801e466 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>
	labelSignal.invalidate();
 800ec54:	687b      	ldr	r3, [r7, #4]
 800ec56:	f503 7380 	add.w	r3, r3, #256	; 0x100
 800ec5a:	4618      	mov	r0, r3
 800ec5c:	f00d fb80 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ec60:	bf00      	nop
 800ec62:	3708      	adds	r7, #8
 800ec64:	46bd      	mov	sp, r7
 800ec66:	bd80      	pop	{r7, pc}

0800ec68 <_ZN12MainViewView15setLabelDivTimeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void MainViewView::setLabelDivTime(const std::string str){
 800ec68:	b580      	push	{r7, lr}
 800ec6a:	b082      	sub	sp, #8
 800ec6c:	af00      	add	r7, sp, #0
 800ec6e:	6078      	str	r0, [r7, #4]
 800ec70:	6039      	str	r1, [r7, #0]
	Unicode::fromUTF8((const unsigned char *)str.c_str(),labelDivTimeBuffer,LABELDIVTIME_SIZE);
 800ec72:	6838      	ldr	r0, [r7, #0]
 800ec74:	f01d f8a3 	bl	802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 800ec78:	687b      	ldr	r3, [r7, #4]
 800ec7a:	f603 43b8 	addw	r3, r3, #3256	; 0xcb8
 800ec7e:	2214      	movs	r2, #20
 800ec80:	4619      	mov	r1, r3
 800ec82:	f00f fbf0 	bl	801e466 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>
    labelDivTime.invalidate();
 800ec86:	687b      	ldr	r3, [r7, #4]
 800ec88:	f503 73a2 	add.w	r3, r3, #324	; 0x144
 800ec8c:	4618      	mov	r0, r3
 800ec8e:	f00d fb67 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ec92:	bf00      	nop
 800ec94:	3708      	adds	r7, #8
 800ec96:	46bd      	mov	sp, r7
 800ec98:	bd80      	pop	{r7, pc}
	...

0800ec9c <_ZN12MainViewView9drawGraphEPttf>:

void MainViewView::drawGraph(uint16_t* values, uint16_t maxSize, float xScale /* = 1 */){
 800ec9c:	b580      	push	{r7, lr}
 800ec9e:	b086      	sub	sp, #24
 800eca0:	af00      	add	r7, sp, #0
 800eca2:	60f8      	str	r0, [r7, #12]
 800eca4:	60b9      	str	r1, [r7, #8]
 800eca6:	4613      	mov	r3, r2
 800eca8:	ed87 0a00 	vstr	s0, [r7]
 800ecac:	80fb      	strh	r3, [r7, #6]
	chart.clear();
 800ecae:	68fb      	ldr	r3, [r7, #12]
 800ecb0:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ecb4:	4618      	mov	r0, r3
 800ecb6:	f009 f869 	bl	8017d8c <_ZN8touchgfx17AbstractDataGraph5clearEv>

	chartMajorXAxisGrid.setInterval(460/8);     // Show 8 division on the chart
 800ecba:	68fb      	ldr	r3, [r7, #12]
 800ecbc:	f603 237c 	addw	r3, r3, #2684	; 0xa7c
 800ecc0:	2139      	movs	r1, #57	; 0x39
 800ecc2:	4618      	mov	r0, r3
 800ecc4:	f009 ff05 	bl	8018ad2 <_ZN8touchgfx20GraphElementGridBase11setIntervalEi>

	chart.setGraphRangeX(0, 460-1);
 800ecc8:	68fb      	ldr	r3, [r7, #12]
 800ecca:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ecce:	f240 12cb 	movw	r2, #459	; 0x1cb
 800ecd2:	2100      	movs	r1, #0
 800ecd4:	4618      	mov	r0, r3
 800ecd6:	f009 f925 	bl	8017f24 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>

	for(float addedPoints = 0, valuesIndex = 0;
 800ecda:	f04f 0300 	mov.w	r3, #0
 800ecde:	617b      	str	r3, [r7, #20]
 800ece0:	f04f 0300 	mov.w	r3, #0
 800ece4:	613b      	str	r3, [r7, #16]
	    (uint32_t)valuesIndex < maxSize and addedPoints < 460;
 800ece6:	edd7 7a04 	vldr	s15, [r7, #16]
 800ecea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800ecee:	ee17 2a90 	vmov	r2, s15
 800ecf2:	88fb      	ldrh	r3, [r7, #6]
 800ecf4:	429a      	cmp	r2, r3
 800ecf6:	d231      	bcs.n	800ed5c <_ZN12MainViewView9drawGraphEPttf+0xc0>
 800ecf8:	edd7 7a05 	vldr	s15, [r7, #20]
 800ecfc:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 800ed70 <_ZN12MainViewView9drawGraphEPttf+0xd4>
 800ed00:	eef4 7ac7 	vcmpe.f32	s15, s14
 800ed04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ed08:	bf4c      	ite	mi
 800ed0a:	2301      	movmi	r3, #1
 800ed0c:	2300      	movpl	r3, #0
 800ed0e:	b2db      	uxtb	r3, r3
 800ed10:	f083 0301 	eor.w	r3, r3, #1
 800ed14:	b2db      	uxtb	r3, r3
 800ed16:	2b00      	cmp	r3, #0
 800ed18:	d120      	bne.n	800ed5c <_ZN12MainViewView9drawGraphEPttf+0xc0>
	    addedPoints++)
	{
		chart.addDataPoint(values[(uint32_t)valuesIndex]);
 800ed1a:	68fb      	ldr	r3, [r7, #12]
 800ed1c:	f503 70d8 	add.w	r0, r3, #432	; 0x1b0
 800ed20:	edd7 7a04 	vldr	s15, [r7, #16]
 800ed24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800ed28:	ee17 3a90 	vmov	r3, s15
 800ed2c:	005b      	lsls	r3, r3, #1
 800ed2e:	68ba      	ldr	r2, [r7, #8]
 800ed30:	4413      	add	r3, r2
 800ed32:	881b      	ldrh	r3, [r3, #0]
 800ed34:	4619      	mov	r1, r3
 800ed36:	f009 fd69 	bl	801880c <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi>
		valuesIndex = addedPoints * xScale;
 800ed3a:	ed97 7a05 	vldr	s14, [r7, #20]
 800ed3e:	edd7 7a00 	vldr	s15, [r7]
 800ed42:	ee67 7a27 	vmul.f32	s15, s14, s15
 800ed46:	edc7 7a04 	vstr	s15, [r7, #16]
	for(float addedPoints = 0, valuesIndex = 0;
 800ed4a:	edd7 7a05 	vldr	s15, [r7, #20]
 800ed4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ed52:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ed56:	edc7 7a05 	vstr	s15, [r7, #20]
 800ed5a:	e7c4      	b.n	800ece6 <_ZN12MainViewView9drawGraphEPttf+0x4a>
	}
	chart.invalidate();
 800ed5c:	68fb      	ldr	r3, [r7, #12]
 800ed5e:	f503 73d8 	add.w	r3, r3, #432	; 0x1b0
 800ed62:	4618      	mov	r0, r3
 800ed64:	f00d fafc 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800ed68:	bf00      	nop
 800ed6a:	3718      	adds	r7, #24
 800ed6c:	46bd      	mov	sp, r7
 800ed6e:	bd80      	pop	{r7, pc}
 800ed70:	43e60000 	.word	0x43e60000

0800ed74 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model* Model::_instance = nullptr;

Model::Model() :
 800ed74:	b580      	push	{r7, lr}
 800ed76:	b082      	sub	sp, #8
 800ed78:	af00      	add	r7, sp, #0
 800ed7a:	6078      	str	r0, [r7, #4]
    modelListener(0),
    values(nullptr),
    maxSize(0),
    xScale(1.0f)
 800ed7c:	687b      	ldr	r3, [r7, #4]
 800ed7e:	2200      	movs	r2, #0
 800ed80:	601a      	str	r2, [r3, #0]
 800ed82:	687b      	ldr	r3, [r7, #4]
 800ed84:	3304      	adds	r3, #4
 800ed86:	4618      	mov	r0, r3
 800ed88:	f01c ff74 	bl	802bc74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800ed8c:	687b      	ldr	r3, [r7, #4]
 800ed8e:	331c      	adds	r3, #28
 800ed90:	4618      	mov	r0, r3
 800ed92:	f01c ff6f 	bl	802bc74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800ed96:	687b      	ldr	r3, [r7, #4]
 800ed98:	3334      	adds	r3, #52	; 0x34
 800ed9a:	4618      	mov	r0, r3
 800ed9c:	f01c ff6a 	bl	802bc74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>
 800eda0:	687b      	ldr	r3, [r7, #4]
 800eda2:	2200      	movs	r2, #0
 800eda4:	64da      	str	r2, [r3, #76]	; 0x4c
 800eda6:	687b      	ldr	r3, [r7, #4]
 800eda8:	2200      	movs	r2, #0
 800edaa:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800edae:	687b      	ldr	r3, [r7, #4]
 800edb0:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800edb4:	655a      	str	r2, [r3, #84]	; 0x54
{
	if(_instance==nullptr){
 800edb6:	4b11      	ldr	r3, [pc, #68]	; (800edfc <_ZN5ModelC1Ev+0x88>)
 800edb8:	681b      	ldr	r3, [r3, #0]
 800edba:	2b00      	cmp	r3, #0
 800edbc:	d102      	bne.n	800edc4 <_ZN5ModelC1Ev+0x50>
		_instance = this;
 800edbe:	4a0f      	ldr	r2, [pc, #60]	; (800edfc <_ZN5ModelC1Ev+0x88>)
 800edc0:	687b      	ldr	r3, [r7, #4]
 800edc2:	6013      	str	r3, [r2, #0]

#if (TOUCHGFX_FREERTOS != 0)
	gui_msg_q = xQueueGenericCreate(5, sizeof(GUI_EVENT), 0);
#endif // TOUCHGFX_FREERTOS
#if (TOUCHGFX_BAREMETAL != 0)
    flagMode = flagDivTim = flagFreq = flagGraph = false;
 800edc4:	687b      	ldr	r3, [r7, #4]
 800edc6:	2200      	movs	r2, #0
 800edc8:	f883 205b 	strb.w	r2, [r3, #91]	; 0x5b
 800edcc:	687b      	ldr	r3, [r7, #4]
 800edce:	f893 205b 	ldrb.w	r2, [r3, #91]	; 0x5b
 800edd2:	687b      	ldr	r3, [r7, #4]
 800edd4:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
 800edd8:	687b      	ldr	r3, [r7, #4]
 800edda:	f893 205a 	ldrb.w	r2, [r3, #90]	; 0x5a
 800edde:	687b      	ldr	r3, [r7, #4]
 800ede0:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 800ede4:	687b      	ldr	r3, [r7, #4]
 800ede6:	f893 2059 	ldrb.w	r2, [r3, #89]	; 0x59
 800edea:	687b      	ldr	r3, [r7, #4]
 800edec:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
#endif // TOUCHGFX_BAREMETAL
}
 800edf0:	687b      	ldr	r3, [r7, #4]
 800edf2:	4618      	mov	r0, r3
 800edf4:	3708      	adds	r7, #8
 800edf6:	46bd      	mov	sp, r7
 800edf8:	bd80      	pop	{r7, pc}
 800edfa:	bf00      	nop
 800edfc:	20000550 	.word	0x20000550

0800ee00 <_ZN5Model11getInstanceEv>:

Model* Model::getInstance() {
 800ee00:	b480      	push	{r7}
 800ee02:	af00      	add	r7, sp, #0
	return _instance;
 800ee04:	4b03      	ldr	r3, [pc, #12]	; (800ee14 <_ZN5Model11getInstanceEv+0x14>)
 800ee06:	681b      	ldr	r3, [r3, #0]
}
 800ee08:	4618      	mov	r0, r3
 800ee0a:	46bd      	mov	sp, r7
 800ee0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee10:	4770      	bx	lr
 800ee12:	bf00      	nop
 800ee14:	20000550 	.word	0x20000550

0800ee18 <_ZN5Model4tickEv>:

void Model::tick()
{
 800ee18:	b5b0      	push	{r4, r5, r7, lr}
 800ee1a:	b094      	sub	sp, #80	; 0x50
 800ee1c:	af00      	add	r7, sp, #0
 800ee1e:	6078      	str	r0, [r7, #4]
			modelListener->notifyDrawGraph(values, maxSize);
		}
	  }
#endif // TOUCHGFX_FREERTOS
#if (TOUCHGFX_BAREMETAL != 0)
	if(this->flagFreq){
 800ee20:	687b      	ldr	r3, [r7, #4]
 800ee22:	f893 305a 	ldrb.w	r3, [r3, #90]	; 0x5a
 800ee26:	2b00      	cmp	r3, #0
 800ee28:	d01d      	beq.n	800ee66 <_ZN5Model4tickEv+0x4e>
		flagFreq=false;
 800ee2a:	687b      	ldr	r3, [r7, #4]
 800ee2c:	2200      	movs	r2, #0
 800ee2e:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
		modelListener->notifyFreqChanged(textFreq);
 800ee32:	687b      	ldr	r3, [r7, #4]
 800ee34:	681d      	ldr	r5, [r3, #0]
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	681b      	ldr	r3, [r3, #0]
 800ee3a:	681b      	ldr	r3, [r3, #0]
 800ee3c:	330c      	adds	r3, #12
 800ee3e:	681c      	ldr	r4, [r3, #0]
 800ee40:	687b      	ldr	r3, [r7, #4]
 800ee42:	f103 021c 	add.w	r2, r3, #28
 800ee46:	f107 0308 	add.w	r3, r7, #8
 800ee4a:	4611      	mov	r1, r2
 800ee4c:	4618      	mov	r0, r3
 800ee4e:	f01c ffdd 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800ee52:	f107 0308 	add.w	r3, r7, #8
 800ee56:	4619      	mov	r1, r3
 800ee58:	4628      	mov	r0, r5
 800ee5a:	47a0      	blx	r4
 800ee5c:	f107 0308 	add.w	r3, r7, #8
 800ee60:	4618      	mov	r0, r3
 800ee62:	f01c ff0e 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	if(this->flagMode){
 800ee66:	687b      	ldr	r3, [r7, #4]
 800ee68:	f893 3058 	ldrb.w	r3, [r3, #88]	; 0x58
 800ee6c:	2b00      	cmp	r3, #0
 800ee6e:	d01c      	beq.n	800eeaa <_ZN5Model4tickEv+0x92>
		flagMode=false;
 800ee70:	687b      	ldr	r3, [r7, #4]
 800ee72:	2200      	movs	r2, #0
 800ee74:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
		modelListener->notifyModeChanged(textMode);
 800ee78:	687b      	ldr	r3, [r7, #4]
 800ee7a:	681d      	ldr	r5, [r3, #0]
 800ee7c:	687b      	ldr	r3, [r7, #4]
 800ee7e:	681b      	ldr	r3, [r3, #0]
 800ee80:	681b      	ldr	r3, [r3, #0]
 800ee82:	3308      	adds	r3, #8
 800ee84:	681c      	ldr	r4, [r3, #0]
 800ee86:	687b      	ldr	r3, [r7, #4]
 800ee88:	1d1a      	adds	r2, r3, #4
 800ee8a:	f107 0320 	add.w	r3, r7, #32
 800ee8e:	4611      	mov	r1, r2
 800ee90:	4618      	mov	r0, r3
 800ee92:	f01c ffbb 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800ee96:	f107 0320 	add.w	r3, r7, #32
 800ee9a:	4619      	mov	r1, r3
 800ee9c:	4628      	mov	r0, r5
 800ee9e:	47a0      	blx	r4
 800eea0:	f107 0320 	add.w	r3, r7, #32
 800eea4:	4618      	mov	r0, r3
 800eea6:	f01c feec 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
	if(this->flagDivTim){
 800eeaa:	687b      	ldr	r3, [r7, #4]
 800eeac:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 800eeb0:	2b00      	cmp	r3, #0
 800eeb2:	d01d      	beq.n	800eef0 <_ZN5Model4tickEv+0xd8>
		flagDivTim=false;
 800eeb4:	687b      	ldr	r3, [r7, #4]
 800eeb6:	2200      	movs	r2, #0
 800eeb8:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
		modelListener->notifyDivTimChanged(textDivTim);
 800eebc:	687b      	ldr	r3, [r7, #4]
 800eebe:	681d      	ldr	r5, [r3, #0]
 800eec0:	687b      	ldr	r3, [r7, #4]
 800eec2:	681b      	ldr	r3, [r3, #0]
 800eec4:	681b      	ldr	r3, [r3, #0]
 800eec6:	3310      	adds	r3, #16
 800eec8:	681c      	ldr	r4, [r3, #0]
 800eeca:	687b      	ldr	r3, [r7, #4]
 800eecc:	f103 0234 	add.w	r2, r3, #52	; 0x34
 800eed0:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800eed4:	4611      	mov	r1, r2
 800eed6:	4618      	mov	r0, r3
 800eed8:	f01c ff98 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 800eedc:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800eee0:	4619      	mov	r1, r3
 800eee2:	4628      	mov	r0, r5
 800eee4:	47a0      	blx	r4
 800eee6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 800eeea:	4618      	mov	r0, r3
 800eeec:	f01c fec9 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
		}
	if(this->flagGraph){
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	f893 305b 	ldrb.w	r3, [r3, #91]	; 0x5b
 800eef6:	2b00      	cmp	r3, #0
 800eef8:	d016      	beq.n	800ef28 <_ZN5Model4tickEv+0x110>
		flagGraph=false;
 800eefa:	687b      	ldr	r3, [r7, #4]
 800eefc:	2200      	movs	r2, #0
 800eefe:	f883 205b 	strb.w	r2, [r3, #91]	; 0x5b
		modelListener->notifyDrawGraph(values, maxSize, xScale);
 800ef02:	687b      	ldr	r3, [r7, #4]
 800ef04:	6818      	ldr	r0, [r3, #0]
 800ef06:	687b      	ldr	r3, [r7, #4]
 800ef08:	681b      	ldr	r3, [r3, #0]
 800ef0a:	681b      	ldr	r3, [r3, #0]
 800ef0c:	3314      	adds	r3, #20
 800ef0e:	681b      	ldr	r3, [r3, #0]
 800ef10:	687a      	ldr	r2, [r7, #4]
 800ef12:	6cd1      	ldr	r1, [r2, #76]	; 0x4c
 800ef14:	687a      	ldr	r2, [r7, #4]
 800ef16:	f8b2 4050 	ldrh.w	r4, [r2, #80]	; 0x50
 800ef1a:	687a      	ldr	r2, [r7, #4]
 800ef1c:	edd2 7a15 	vldr	s15, [r2, #84]	; 0x54
 800ef20:	eeb0 0a67 	vmov.f32	s0, s15
 800ef24:	4622      	mov	r2, r4
 800ef26:	4798      	blx	r3
	}
#endif // TOUCHGFX_BAREMETAL
}
 800ef28:	bf00      	nop
 800ef2a:	3750      	adds	r7, #80	; 0x50
 800ef2c:	46bd      	mov	sp, r7
 800ef2e:	bdb0      	pop	{r4, r5, r7, pc}

0800ef30 <_ZN5Model14setDivTimLabelENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
	}
#endif // TOUCHGFX_FREERTOS
	// Makes async call to modelListener->notifyDrawGraph(...) see Model::tick()
}

void Model::setDivTimLabel(const std::string str){
 800ef30:	b580      	push	{r7, lr}
 800ef32:	b082      	sub	sp, #8
 800ef34:	af00      	add	r7, sp, #0
 800ef36:	6078      	str	r0, [r7, #4]
 800ef38:	6039      	str	r1, [r7, #0]
	textDivTim = str;
 800ef3a:	687b      	ldr	r3, [r7, #4]
 800ef3c:	3334      	adds	r3, #52	; 0x34
 800ef3e:	6839      	ldr	r1, [r7, #0]
 800ef40:	4618      	mov	r0, r3
 800ef42:	f01c fea4 	bl	802bc8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
#if (TOUCHGFX_BAREMETAL != 0)
	this->flagDivTim=true;
 800ef46:	687b      	ldr	r3, [r7, #4]
 800ef48:	2201      	movs	r2, #1
 800ef4a:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
#endif // TOUCHGFX_BAREMETAL
#if (TOUCHGFX_FREERTOS != 0)
	GUI_EVENT msg = DIVTIM_EVENT;
	xQueueSend(gui_msg_q, &msg, 0);
#endif // TOUCHGFX_FREERTOS
}
 800ef4e:	bf00      	nop
 800ef50:	3708      	adds	r7, #8
 800ef52:	46bd      	mov	sp, r7
 800ef54:	bd80      	pop	{r7, pc}

0800ef56 <_ZN5Model13setModeSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Model::setModeSignal(const std::string str){
 800ef56:	b580      	push	{r7, lr}
 800ef58:	b082      	sub	sp, #8
 800ef5a:	af00      	add	r7, sp, #0
 800ef5c:	6078      	str	r0, [r7, #4]
 800ef5e:	6039      	str	r1, [r7, #0]
	textMode = str;
 800ef60:	687b      	ldr	r3, [r7, #4]
 800ef62:	3304      	adds	r3, #4
 800ef64:	6839      	ldr	r1, [r7, #0]
 800ef66:	4618      	mov	r0, r3
 800ef68:	f01c fe91 	bl	802bc8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
#if (TOUCHGFX_BAREMETAL != 0)
	this->flagMode=true;
 800ef6c:	687b      	ldr	r3, [r7, #4]
 800ef6e:	2201      	movs	r2, #1
 800ef70:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
#endif // TOUCHGFX_BAREMETAL
#if (TOUCHGFX_FREERTOS != 0)
	GUI_EVENT msg = MODE_EVENT;
	xQueueSend(gui_msg_q, &msg, 0);
#endif // TOUCHGFX_FREERTOS
}
 800ef74:	bf00      	nop
 800ef76:	3708      	adds	r7, #8
 800ef78:	46bd      	mov	sp, r7
 800ef7a:	bd80      	pop	{r7, pc}

0800ef7c <_ZN5Model13setFreqSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Model::setFreqSignal(const std::string str){
 800ef7c:	b580      	push	{r7, lr}
 800ef7e:	b082      	sub	sp, #8
 800ef80:	af00      	add	r7, sp, #0
 800ef82:	6078      	str	r0, [r7, #4]
 800ef84:	6039      	str	r1, [r7, #0]
	textFreq = str;
 800ef86:	687b      	ldr	r3, [r7, #4]
 800ef88:	331c      	adds	r3, #28
 800ef8a:	6839      	ldr	r1, [r7, #0]
 800ef8c:	4618      	mov	r0, r3
 800ef8e:	f01c fe7e 	bl	802bc8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>
#if (TOUCHGFX_BAREMETAL != 0)
	this->flagFreq=true;
 800ef92:	687b      	ldr	r3, [r7, #4]
 800ef94:	2201      	movs	r2, #1
 800ef96:	f883 205a 	strb.w	r2, [r3, #90]	; 0x5a
#endif // TOUCHGFX_BAREMETAL
#if (TOUCHGFX_FREERTOS != 0)
	GUI_EVENT msg = FREQUENCY_EVENT;
	xQueueSend(gui_msg_q, &msg, 0);
#endif // TOUCHGFX_FREERTOS
}
 800ef9a:	bf00      	nop
 800ef9c:	3708      	adds	r7, #8
 800ef9e:	46bd      	mov	sp, r7
 800efa0:	bd80      	pop	{r7, pc}
	...

0800efa4 <_ZN8touchgfx18MCUInstrumentationD1Ev>:

    /** Initialize. */
    virtual void init() = 0;

    /** Finalizes an instance of the MCUInstrumentation class. */
    virtual ~MCUInstrumentation()
 800efa4:	b480      	push	{r7}
 800efa6:	b083      	sub	sp, #12
 800efa8:	af00      	add	r7, sp, #0
 800efaa:	6078      	str	r0, [r7, #4]
    {
 800efac:	4a04      	ldr	r2, [pc, #16]	; (800efc0 <_ZN8touchgfx18MCUInstrumentationD1Ev+0x1c>)
 800efae:	687b      	ldr	r3, [r7, #4]
 800efb0:	601a      	str	r2, [r3, #0]
    }
 800efb2:	687b      	ldr	r3, [r7, #4]
 800efb4:	4618      	mov	r0, r3
 800efb6:	370c      	adds	r7, #12
 800efb8:	46bd      	mov	sp, r7
 800efba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efbe:	4770      	bx	lr
 800efc0:	0802f3a8 	.word	0x0802f3a8

0800efc4 <_ZN8touchgfx18MCUInstrumentationD0Ev>:
    virtual ~MCUInstrumentation()
 800efc4:	b580      	push	{r7, lr}
 800efc6:	b082      	sub	sp, #8
 800efc8:	af00      	add	r7, sp, #0
 800efca:	6078      	str	r0, [r7, #4]
    }
 800efcc:	6878      	ldr	r0, [r7, #4]
 800efce:	f7ff ffe9 	bl	800efa4 <_ZN8touchgfx18MCUInstrumentationD1Ev>
 800efd2:	210c      	movs	r1, #12
 800efd4:	6878      	ldr	r0, [r7, #4]
 800efd6:	f01c fd46 	bl	802ba66 <_ZdlPvj>
 800efda:	687b      	ldr	r3, [r7, #4]
 800efdc:	4618      	mov	r0, r3
 800efde:	3708      	adds	r7, #8
 800efe0:	46bd      	mov	sp, r7
 800efe2:	bd80      	pop	{r7, pc}

0800efe4 <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb>:
    /**
     * Sets MCU activity high.
     *
     * @param  active if True, inactive otherwise.
     */
    virtual void setMCUActive(bool active)
 800efe4:	b580      	push	{r7, lr}
 800efe6:	b084      	sub	sp, #16
 800efe8:	af00      	add	r7, sp, #0
 800efea:	6078      	str	r0, [r7, #4]
 800efec:	460b      	mov	r3, r1
 800efee:	70fb      	strb	r3, [r7, #3]
    {
        if (active) //idle task sched out
 800eff0:	78fb      	ldrb	r3, [r7, #3]
 800eff2:	2b00      	cmp	r3, #0
 800eff4:	d011      	beq.n	800f01a <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x36>
        {
            uint32_t cc_temp = getCPUCycles() - cc_in;
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	681b      	ldr	r3, [r3, #0]
 800effa:	3310      	adds	r3, #16
 800effc:	681b      	ldr	r3, [r3, #0]
 800effe:	6878      	ldr	r0, [r7, #4]
 800f000:	4798      	blx	r3
 800f002:	4602      	mov	r2, r0
 800f004:	687b      	ldr	r3, [r7, #4]
 800f006:	689b      	ldr	r3, [r3, #8]
 800f008:	1ad3      	subs	r3, r2, r3
 800f00a:	60fb      	str	r3, [r7, #12]
            cc_consumed += cc_temp;
 800f00c:	687b      	ldr	r3, [r7, #4]
 800f00e:	685a      	ldr	r2, [r3, #4]
 800f010:	68fb      	ldr	r3, [r7, #12]
 800f012:	441a      	add	r2, r3
 800f014:	687b      	ldr	r3, [r7, #4]
 800f016:	605a      	str	r2, [r3, #4]
        }
        else //idle task sched in
        {
            cc_in = getCPUCycles();
        }
    }
 800f018:	e008      	b.n	800f02c <_ZN8touchgfx18MCUInstrumentation12setMCUActiveEb+0x48>
            cc_in = getCPUCycles();
 800f01a:	687b      	ldr	r3, [r7, #4]
 800f01c:	681b      	ldr	r3, [r3, #0]
 800f01e:	3310      	adds	r3, #16
 800f020:	681b      	ldr	r3, [r3, #0]
 800f022:	6878      	ldr	r0, [r7, #4]
 800f024:	4798      	blx	r3
 800f026:	4602      	mov	r2, r0
 800f028:	687b      	ldr	r3, [r7, #4]
 800f02a:	609a      	str	r2, [r3, #8]
    }
 800f02c:	bf00      	nop
 800f02e:	3710      	adds	r7, #16
 800f030:	46bd      	mov	sp, r7
 800f032:	bd80      	pop	{r7, pc}

0800f034 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
    /**
     * Gets number of consumed clock cycles.
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
 800f034:	b480      	push	{r7}
 800f036:	b083      	sub	sp, #12
 800f038:	af00      	add	r7, sp, #0
 800f03a:	6078      	str	r0, [r7, #4]
    {
        return cc_consumed;
 800f03c:	687b      	ldr	r3, [r7, #4]
 800f03e:	685b      	ldr	r3, [r3, #4]
    }
 800f040:	4618      	mov	r0, r3
 800f042:	370c      	adds	r7, #12
 800f044:	46bd      	mov	sp, r7
 800f046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f04a:	4770      	bx	lr

0800f04c <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
    /**
     * Sets number of consumed clock cycles.
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
 800f04c:	b480      	push	{r7}
 800f04e:	b083      	sub	sp, #12
 800f050:	af00      	add	r7, sp, #0
 800f052:	6078      	str	r0, [r7, #4]
 800f054:	6039      	str	r1, [r7, #0]
    {
        cc_consumed = val;
 800f056:	687b      	ldr	r3, [r7, #4]
 800f058:	683a      	ldr	r2, [r7, #0]
 800f05a:	605a      	str	r2, [r3, #4]
    }
 800f05c:	bf00      	nop
 800f05e:	370c      	adds	r7, #12
 800f060:	46bd      	mov	sp, r7
 800f062:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f066:	4770      	bx	lr

0800f068 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
#include <touchgfx/hal/HAL.hpp>

namespace touchgfx
{
void CortexMMCUInstrumentation::init()
{
 800f068:	b480      	push	{r7}
 800f06a:	b083      	sub	sp, #12
 800f06c:	af00      	add	r7, sp, #0
 800f06e:	6078      	str	r0, [r7, #4]
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 800f070:	4b0b      	ldr	r3, [pc, #44]	; (800f0a0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x38>)
 800f072:	681b      	ldr	r3, [r3, #0]
 800f074:	4a0a      	ldr	r2, [pc, #40]	; (800f0a0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x38>)
 800f076:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800f07a:	6013      	str	r3, [r2, #0]
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 800f07c:	4b09      	ldr	r3, [pc, #36]	; (800f0a4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x3c>)
 800f07e:	681a      	ldr	r2, [r3, #0]
 800f080:	4908      	ldr	r1, [pc, #32]	; (800f0a4 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x3c>)
 800f082:	4b09      	ldr	r3, [pc, #36]	; (800f0a8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x40>)
 800f084:	4313      	orrs	r3, r2
 800f086:	600b      	str	r3, [r1, #0]
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 800f088:	4b08      	ldr	r3, [pc, #32]	; (800f0ac <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x44>)
 800f08a:	681b      	ldr	r3, [r3, #0]
 800f08c:	4a07      	ldr	r2, [pc, #28]	; (800f0ac <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x44>)
 800f08e:	f043 0301 	orr.w	r3, r3, #1
 800f092:	6013      	str	r3, [r2, #0]
}
 800f094:	bf00      	nop
 800f096:	370c      	adds	r7, #12
 800f098:	46bd      	mov	sp, r7
 800f09a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f09e:	4770      	bx	lr
 800f0a0:	e000edfc 	.word	0xe000edfc
 800f0a4:	e0001fb0 	.word	0xe0001fb0
 800f0a8:	c5acce55 	.word	0xc5acce55
 800f0ac:	e0001000 	.word	0xe0001000

0800f0b0 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
 800f0b0:	b480      	push	{r7}
 800f0b2:	b085      	sub	sp, #20
 800f0b4:	af00      	add	r7, sp, #0
 800f0b6:	60f8      	str	r0, [r7, #12]
 800f0b8:	60b9      	str	r1, [r7, #8]
 800f0ba:	607a      	str	r2, [r7, #4]
 800f0bc:	603b      	str	r3, [r7, #0]
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 800f0be:	687a      	ldr	r2, [r7, #4]
 800f0c0:	68bb      	ldr	r3, [r7, #8]
 800f0c2:	1ad2      	subs	r2, r2, r3
 800f0c4:	683b      	ldr	r3, [r7, #0]
 800f0c6:	085b      	lsrs	r3, r3, #1
 800f0c8:	441a      	add	r2, r3
 800f0ca:	683b      	ldr	r3, [r7, #0]
 800f0cc:	fbb2 f3f3 	udiv	r3, r2, r3
}
 800f0d0:	4618      	mov	r0, r3
 800f0d2:	3714      	adds	r7, #20
 800f0d4:	46bd      	mov	sp, r7
 800f0d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0da:	4770      	bx	lr

0800f0dc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
 800f0dc:	b480      	push	{r7}
 800f0de:	b083      	sub	sp, #12
 800f0e0:	af00      	add	r7, sp, #0
 800f0e2:	6078      	str	r0, [r7, #4]
    return *((volatile unsigned int*)0xE0001004);
 800f0e4:	4b03      	ldr	r3, [pc, #12]	; (800f0f4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x18>)
 800f0e6:	681b      	ldr	r3, [r3, #0]
}
 800f0e8:	4618      	mov	r0, r3
 800f0ea:	370c      	adds	r7, #12
 800f0ec:	46bd      	mov	sp, r7
 800f0ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0f2:	4770      	bx	lr
 800f0f4:	e0001004 	.word	0xe0001004

0800f0f8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
 800f0f8:	b580      	push	{r7, lr}
 800f0fa:	b084      	sub	sp, #16
 800f0fc:	af00      	add	r7, sp, #0
 800f0fe:	6078      	str	r0, [r7, #4]
 800f100:	460b      	mov	r3, r1
 800f102:	70fb      	strb	r3, [r7, #3]
    if (active) //idle task sched out
 800f104:	78fb      	ldrb	r3, [r7, #3]
 800f106:	2b00      	cmp	r3, #0
 800f108:	d011      	beq.n	800f12e <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x36>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800f10a:	687b      	ldr	r3, [r7, #4]
 800f10c:	681b      	ldr	r3, [r3, #0]
 800f10e:	3310      	adds	r3, #16
 800f110:	681b      	ldr	r3, [r3, #0]
 800f112:	6878      	ldr	r0, [r7, #4]
 800f114:	4798      	blx	r3
 800f116:	4602      	mov	r2, r0
 800f118:	687b      	ldr	r3, [r7, #4]
 800f11a:	689b      	ldr	r3, [r3, #8]
 800f11c:	1ad3      	subs	r3, r2, r3
 800f11e:	60fb      	str	r3, [r7, #12]
        cc_consumed += cc_temp;
 800f120:	687b      	ldr	r3, [r7, #4]
 800f122:	685a      	ldr	r2, [r3, #4]
 800f124:	68fb      	ldr	r3, [r7, #12]
 800f126:	441a      	add	r2, r3
 800f128:	687b      	ldr	r3, [r7, #4]
 800f12a:	605a      	str	r2, [r3, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 800f12c:	e008      	b.n	800f140 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x48>
        cc_in = getCPUCycles();
 800f12e:	687b      	ldr	r3, [r7, #4]
 800f130:	681b      	ldr	r3, [r3, #0]
 800f132:	3310      	adds	r3, #16
 800f134:	681b      	ldr	r3, [r3, #0]
 800f136:	6878      	ldr	r0, [r7, #4]
 800f138:	4798      	blx	r3
 800f13a:	4602      	mov	r2, r0
 800f13c:	687b      	ldr	r3, [r7, #4]
 800f13e:	609a      	str	r2, [r3, #8]
}
 800f140:	bf00      	nop
 800f142:	3710      	adds	r7, #16
 800f144:	46bd      	mov	sp, r7
 800f146:	bd80      	pop	{r7, pc}

0800f148 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 800f148:	b580      	push	{r7, lr}
 800f14a:	b082      	sub	sp, #8
 800f14c:	af00      	add	r7, sp, #0
 800f14e:	6078      	str	r0, [r7, #4]
 800f150:	4a05      	ldr	r2, [pc, #20]	; (800f168 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev+0x20>)
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	601a      	str	r2, [r3, #0]
 800f156:	687b      	ldr	r3, [r7, #4]
 800f158:	4618      	mov	r0, r3
 800f15a:	f7ff ff23 	bl	800efa4 <_ZN8touchgfx18MCUInstrumentationD1Ev>
 800f15e:	687b      	ldr	r3, [r7, #4]
 800f160:	4618      	mov	r0, r3
 800f162:	3708      	adds	r7, #8
 800f164:	46bd      	mov	sp, r7
 800f166:	bd80      	pop	{r7, pc}
 800f168:	0802f380 	.word	0x0802f380

0800f16c <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	6878      	ldr	r0, [r7, #4]
 800f176:	f7ff ffe7 	bl	800f148 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>
 800f17a:	210c      	movs	r1, #12
 800f17c:	6878      	ldr	r0, [r7, #4]
 800f17e:	f01c fc72 	bl	802ba66 <_ZdlPvj>
 800f182:	687b      	ldr	r3, [r7, #4]
 800f184:	4618      	mov	r0, r3
 800f186:	3708      	adds	r7, #8
 800f188:	46bd      	mov	sp, r7
 800f18a:	bd80      	pop	{r7, pc}

0800f18c <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800f18c:	b480      	push	{r7}
 800f18e:	b083      	sub	sp, #12
 800f190:	af00      	add	r7, sp, #0
 800f192:	6078      	str	r0, [r7, #4]
    {
 800f194:	4a04      	ldr	r2, [pc, #16]	; (800f1a8 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800f196:	687b      	ldr	r3, [r7, #4]
 800f198:	601a      	str	r2, [r3, #0]
    }
 800f19a:	687b      	ldr	r3, [r7, #4]
 800f19c:	4618      	mov	r0, r3
 800f19e:	370c      	adds	r7, #12
 800f1a0:	46bd      	mov	sp, r7
 800f1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1a6:	4770      	bx	lr
 800f1a8:	0802f3e8 	.word	0x0802f3e8

0800f1ac <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800f1ac:	b580      	push	{r7, lr}
 800f1ae:	b082      	sub	sp, #8
 800f1b0:	af00      	add	r7, sp, #0
 800f1b2:	6078      	str	r0, [r7, #4]
    }
 800f1b4:	6878      	ldr	r0, [r7, #4]
 800f1b6:	f7ff ffe9 	bl	800f18c <_ZN8touchgfx15TouchControllerD1Ev>
 800f1ba:	2104      	movs	r1, #4
 800f1bc:	6878      	ldr	r0, [r7, #4]
 800f1be:	f01c fc52 	bl	802ba66 <_ZdlPvj>
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	3708      	adds	r7, #8
 800f1c8:	46bd      	mov	sp, r7
 800f1ca:	bd80      	pop	{r7, pc}

0800f1cc <_ZN20STM32TouchController4initEv>:

static TS_DrvTypeDef* tsDriver;
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
 800f1cc:	b580      	push	{r7, lr}
 800f1ce:	b082      	sub	sp, #8
 800f1d0:	af00      	add	r7, sp, #0
 800f1d2:	6078      	str	r0, [r7, #4]
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 800f1d4:	4b05      	ldr	r3, [pc, #20]	; (800f1ec <_ZN20STM32TouchController4initEv+0x20>)
 800f1d6:	4a06      	ldr	r2, [pc, #24]	; (800f1f0 <_ZN20STM32TouchController4initEv+0x24>)
 800f1d8:	601a      	str	r2, [r3, #0]

    /* Initialize the TS driver */
    tsDriver->Start(TS_I2C_ADDRESS);
 800f1da:	4b04      	ldr	r3, [pc, #16]	; (800f1ec <_ZN20STM32TouchController4initEv+0x20>)
 800f1dc:	681b      	ldr	r3, [r3, #0]
 800f1de:	68db      	ldr	r3, [r3, #12]
 800f1e0:	2070      	movs	r0, #112	; 0x70
 800f1e2:	4798      	blx	r3
}
 800f1e4:	bf00      	nop
 800f1e6:	3708      	adds	r7, #8
 800f1e8:	46bd      	mov	sp, r7
 800f1ea:	bd80      	pop	{r7, pc}
 800f1ec:	20000554 	.word	0x20000554
 800f1f0:	20000010 	.word	0x20000010

0800f1f4 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800f1f4:	b580      	push	{r7, lr}
 800f1f6:	b084      	sub	sp, #16
 800f1f8:	af00      	add	r7, sp, #0
 800f1fa:	60f8      	str	r0, [r7, #12]
 800f1fc:	60b9      	str	r1, [r7, #8]
 800f1fe:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (tsDriver)
 800f200:	4b0f      	ldr	r3, [pc, #60]	; (800f240 <_ZN20STM32TouchController11sampleTouchERlS0_+0x4c>)
 800f202:	681b      	ldr	r3, [r3, #0]
 800f204:	2b00      	cmp	r3, #0
 800f206:	d015      	beq.n	800f234 <_ZN20STM32TouchController11sampleTouchERlS0_+0x40>
    {
        if (tsDriver->DetectTouch(TS_I2C_ADDRESS))
 800f208:	4b0d      	ldr	r3, [pc, #52]	; (800f240 <_ZN20STM32TouchController11sampleTouchERlS0_+0x4c>)
 800f20a:	681b      	ldr	r3, [r3, #0]
 800f20c:	691b      	ldr	r3, [r3, #16]
 800f20e:	2070      	movs	r0, #112	; 0x70
 800f210:	4798      	blx	r3
 800f212:	4603      	mov	r3, r0
 800f214:	2b00      	cmp	r3, #0
 800f216:	bf14      	ite	ne
 800f218:	2301      	movne	r3, #1
 800f21a:	2300      	moveq	r3, #0
 800f21c:	b2db      	uxtb	r3, r3
 800f21e:	2b00      	cmp	r3, #0
 800f220:	d008      	beq.n	800f234 <_ZN20STM32TouchController11sampleTouchERlS0_+0x40>
        {
            /* Get each touch coordinates */
            tsDriver->GetXY(TS_I2C_ADDRESS, (uint16_t*)&y, (uint16_t*)&x);
 800f222:	4b07      	ldr	r3, [pc, #28]	; (800f240 <_ZN20STM32TouchController11sampleTouchERlS0_+0x4c>)
 800f224:	681b      	ldr	r3, [r3, #0]
 800f226:	695b      	ldr	r3, [r3, #20]
 800f228:	68ba      	ldr	r2, [r7, #8]
 800f22a:	6879      	ldr	r1, [r7, #4]
 800f22c:	2070      	movs	r0, #112	; 0x70
 800f22e:	4798      	blx	r3
            return true;
 800f230:	2301      	movs	r3, #1
 800f232:	e000      	b.n	800f236 <_ZN20STM32TouchController11sampleTouchERlS0_+0x42>
        }
    }
    return false;
 800f234:	2300      	movs	r3, #0
}
 800f236:	4618      	mov	r0, r3
 800f238:	3710      	adds	r7, #16
 800f23a:	46bd      	mov	sp, r7
 800f23c:	bd80      	pop	{r7, pc}
 800f23e:	bf00      	nop
 800f240:	20000554 	.word	0x20000554

0800f244 <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>:
  * @param  i2c_handler : I2C handler
  * @param  Addr: I2C Address
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef* i2c_handler, uint8_t Addr)
{
 800f244:	b580      	push	{r7, lr}
 800f246:	b082      	sub	sp, #8
 800f248:	af00      	add	r7, sp, #0
 800f24a:	6078      	str	r0, [r7, #4]
 800f24c:	460b      	mov	r3, r1
 800f24e:	70fb      	strb	r3, [r7, #3]
    /* De-initialize the I2C communication bus */
    HAL_I2C_DeInit(i2c_handler);
 800f250:	6878      	ldr	r0, [r7, #4]
 800f252:	f7f4 fc9d 	bl	8003b90 <HAL_I2C_DeInit>

    /* Re-Initialize the I2C communication bus */
    //I2Cx_Init(i2c_handler);
}
 800f256:	bf00      	nop
 800f258:	3708      	adds	r7, #8
 800f25a:	46bd      	mov	sp, r7
 800f25c:	bd80      	pop	{r7, pc}

0800f25e <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht>:
                                           uint8_t Addr,
                                           uint16_t Reg,
                                           uint16_t MemAddress,
                                           uint8_t* Buffer,
                                           uint16_t Length)
{
 800f25e:	b580      	push	{r7, lr}
 800f260:	b08a      	sub	sp, #40	; 0x28
 800f262:	af04      	add	r7, sp, #16
 800f264:	60f8      	str	r0, [r7, #12]
 800f266:	4608      	mov	r0, r1
 800f268:	4611      	mov	r1, r2
 800f26a:	461a      	mov	r2, r3
 800f26c:	4603      	mov	r3, r0
 800f26e:	72fb      	strb	r3, [r7, #11]
 800f270:	460b      	mov	r3, r1
 800f272:	813b      	strh	r3, [r7, #8]
 800f274:	4613      	mov	r3, r2
 800f276:	80fb      	strh	r3, [r7, #6]
    HAL_StatusTypeDef status = HAL_OK;
 800f278:	2300      	movs	r3, #0
 800f27a:	75fb      	strb	r3, [r7, #23]

    status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800f27c:	7afb      	ldrb	r3, [r7, #11]
 800f27e:	b299      	uxth	r1, r3
 800f280:	88f8      	ldrh	r0, [r7, #6]
 800f282:	893a      	ldrh	r2, [r7, #8]
 800f284:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f288:	9302      	str	r3, [sp, #8]
 800f28a:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800f28c:	9301      	str	r3, [sp, #4]
 800f28e:	6a3b      	ldr	r3, [r7, #32]
 800f290:	9300      	str	r3, [sp, #0]
 800f292:	4603      	mov	r3, r0
 800f294:	68f8      	ldr	r0, [r7, #12]
 800f296:	f7f4 fdbf 	bl	8003e18 <HAL_I2C_Mem_Read>
 800f29a:	4603      	mov	r3, r0
 800f29c:	75fb      	strb	r3, [r7, #23]

    /* Check the communication status */
    if (status != HAL_OK)
 800f29e:	7dfb      	ldrb	r3, [r7, #23]
 800f2a0:	2b00      	cmp	r3, #0
 800f2a2:	d004      	beq.n	800f2ae <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht+0x50>
    {
        /* I2C error occurred */
        I2Cx_Error(i2c_handler, Addr);
 800f2a4:	7afb      	ldrb	r3, [r7, #11]
 800f2a6:	4619      	mov	r1, r3
 800f2a8:	68f8      	ldr	r0, [r7, #12]
 800f2aa:	f7ff ffcb 	bl	800f244 <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>
    }
    return status;
 800f2ae:	7dfb      	ldrb	r3, [r7, #23]
}
 800f2b0:	4618      	mov	r0, r3
 800f2b2:	3718      	adds	r7, #24
 800f2b4:	46bd      	mov	sp, r7
 800f2b6:	bd80      	pop	{r7, pc}

0800f2b8 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht>:
                                            uint8_t Addr,
                                            uint16_t Reg,
                                            uint16_t MemAddress,
                                            uint8_t* Buffer,
                                            uint16_t Length)
{
 800f2b8:	b580      	push	{r7, lr}
 800f2ba:	b08a      	sub	sp, #40	; 0x28
 800f2bc:	af04      	add	r7, sp, #16
 800f2be:	60f8      	str	r0, [r7, #12]
 800f2c0:	4608      	mov	r0, r1
 800f2c2:	4611      	mov	r1, r2
 800f2c4:	461a      	mov	r2, r3
 800f2c6:	4603      	mov	r3, r0
 800f2c8:	72fb      	strb	r3, [r7, #11]
 800f2ca:	460b      	mov	r3, r1
 800f2cc:	813b      	strh	r3, [r7, #8]
 800f2ce:	4613      	mov	r3, r2
 800f2d0:	80fb      	strh	r3, [r7, #6]
    HAL_StatusTypeDef status = HAL_OK;
 800f2d2:	2300      	movs	r3, #0
 800f2d4:	75fb      	strb	r3, [r7, #23]

    status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800f2d6:	7afb      	ldrb	r3, [r7, #11]
 800f2d8:	b299      	uxth	r1, r3
 800f2da:	88f8      	ldrh	r0, [r7, #6]
 800f2dc:	893a      	ldrh	r2, [r7, #8]
 800f2de:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f2e2:	9302      	str	r3, [sp, #8]
 800f2e4:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 800f2e6:	9301      	str	r3, [sp, #4]
 800f2e8:	6a3b      	ldr	r3, [r7, #32]
 800f2ea:	9300      	str	r3, [sp, #0]
 800f2ec:	4603      	mov	r3, r0
 800f2ee:	68f8      	ldr	r0, [r7, #12]
 800f2f0:	f7f4 fc7e 	bl	8003bf0 <HAL_I2C_Mem_Write>
 800f2f4:	4603      	mov	r3, r0
 800f2f6:	75fb      	strb	r3, [r7, #23]

    /* Check the communication status */
    if (status != HAL_OK)
 800f2f8:	7dfb      	ldrb	r3, [r7, #23]
 800f2fa:	2b00      	cmp	r3, #0
 800f2fc:	d004      	beq.n	800f308 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht+0x50>
    {
        /* Re-Initiaize the I2C Bus */
        I2Cx_Error(i2c_handler, Addr);
 800f2fe:	7afb      	ldrb	r3, [r7, #11]
 800f300:	4619      	mov	r1, r3
 800f302:	68f8      	ldr	r0, [r7, #12]
 800f304:	f7ff ff9e 	bl	800f244 <_ZL10I2Cx_ErrorP19__I2C_HandleTypeDefh>
    }
    return status;
 800f308:	7dfb      	ldrb	r3, [r7, #23]
}
 800f30a:	4618      	mov	r0, r3
 800f30c:	3718      	adds	r7, #24
 800f30e:	46bd      	mov	sp, r7
 800f310:	bd80      	pop	{r7, pc}
	...

0800f314 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 800f314:	b580      	push	{r7, lr}
 800f316:	b084      	sub	sp, #16
 800f318:	af02      	add	r7, sp, #8
 800f31a:	4603      	mov	r3, r0
 800f31c:	71fb      	strb	r3, [r7, #7]
 800f31e:	460b      	mov	r3, r1
 800f320:	71bb      	strb	r3, [r7, #6]
 800f322:	4613      	mov	r3, r2
 800f324:	717b      	strb	r3, [r7, #5]
    I2Cx_WriteMultiple(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&Value, 1);
 800f326:	79bb      	ldrb	r3, [r7, #6]
 800f328:	b29a      	uxth	r2, r3
 800f32a:	79f9      	ldrb	r1, [r7, #7]
 800f32c:	2301      	movs	r3, #1
 800f32e:	9301      	str	r3, [sp, #4]
 800f330:	1d7b      	adds	r3, r7, #5
 800f332:	9300      	str	r3, [sp, #0]
 800f334:	2301      	movs	r3, #1
 800f336:	4803      	ldr	r0, [pc, #12]	; (800f344 <TS_IO_Write+0x30>)
 800f338:	f7ff ffbe 	bl	800f2b8 <_ZL18I2Cx_WriteMultipleP19__I2C_HandleTypeDefhttPht>
}
 800f33c:	bf00      	nop
 800f33e:	3708      	adds	r7, #8
 800f340:	46bd      	mov	sp, r7
 800f342:	bd80      	pop	{r7, pc}
 800f344:	200001ec 	.word	0x200001ec

0800f348 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800f348:	b580      	push	{r7, lr}
 800f34a:	b086      	sub	sp, #24
 800f34c:	af02      	add	r7, sp, #8
 800f34e:	4603      	mov	r3, r0
 800f350:	460a      	mov	r2, r1
 800f352:	71fb      	strb	r3, [r7, #7]
 800f354:	4613      	mov	r3, r2
 800f356:	71bb      	strb	r3, [r7, #6]
    uint8_t read_value = 0;
 800f358:	2300      	movs	r3, #0
 800f35a:	73fb      	strb	r3, [r7, #15]

    I2Cx_ReadMultiple(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
 800f35c:	79bb      	ldrb	r3, [r7, #6]
 800f35e:	b29a      	uxth	r2, r3
 800f360:	79f9      	ldrb	r1, [r7, #7]
 800f362:	2301      	movs	r3, #1
 800f364:	9301      	str	r3, [sp, #4]
 800f366:	f107 030f 	add.w	r3, r7, #15
 800f36a:	9300      	str	r3, [sp, #0]
 800f36c:	2301      	movs	r3, #1
 800f36e:	4804      	ldr	r0, [pc, #16]	; (800f380 <TS_IO_Read+0x38>)
 800f370:	f7ff ff75 	bl	800f25e <_ZL17I2Cx_ReadMultipleP19__I2C_HandleTypeDefhttPht>

    return read_value;
 800f374:	7bfb      	ldrb	r3, [r7, #15]
}
 800f376:	4618      	mov	r0, r3
 800f378:	3710      	adds	r7, #16
 800f37a:	46bd      	mov	sp, r7
 800f37c:	bd80      	pop	{r7, pc}
 800f37e:	bf00      	nop
 800f380:	200001ec 	.word	0x200001ec

0800f384 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800f384:	b580      	push	{r7, lr}
 800f386:	b082      	sub	sp, #8
 800f388:	af00      	add	r7, sp, #0
 800f38a:	6078      	str	r0, [r7, #4]
 800f38c:	4a05      	ldr	r2, [pc, #20]	; (800f3a4 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800f38e:	687b      	ldr	r3, [r7, #4]
 800f390:	601a      	str	r2, [r3, #0]
 800f392:	687b      	ldr	r3, [r7, #4]
 800f394:	4618      	mov	r0, r3
 800f396:	f7ff fef9 	bl	800f18c <_ZN8touchgfx15TouchControllerD1Ev>
 800f39a:	687b      	ldr	r3, [r7, #4]
 800f39c:	4618      	mov	r0, r3
 800f39e:	3708      	adds	r7, #8
 800f3a0:	46bd      	mov	sp, r7
 800f3a2:	bd80      	pop	{r7, pc}
 800f3a4:	0802f3d0 	.word	0x0802f3d0

0800f3a8 <_ZN20STM32TouchControllerD0Ev>:
 800f3a8:	b580      	push	{r7, lr}
 800f3aa:	b082      	sub	sp, #8
 800f3ac:	af00      	add	r7, sp, #0
 800f3ae:	6078      	str	r0, [r7, #4]
 800f3b0:	6878      	ldr	r0, [r7, #4]
 800f3b2:	f7ff ffe7 	bl	800f384 <_ZN20STM32TouchControllerD1Ev>
 800f3b6:	2104      	movs	r1, #4
 800f3b8:	6878      	ldr	r0, [r7, #4]
 800f3ba:	f01c fb54 	bl	802ba66 <_ZdlPvj>
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	4618      	mov	r0, r3
 800f3c2:	3708      	adds	r7, #8
 800f3c4:	46bd      	mov	sp, r7
 800f3c6:	bd80      	pop	{r7, pc}

0800f3c8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800f3c8:	b480      	push	{r7}
 800f3ca:	b083      	sub	sp, #12
 800f3cc:	af00      	add	r7, sp, #0
 800f3ce:	4603      	mov	r3, r0
 800f3d0:	71fb      	strb	r3, [r7, #7]

}
 800f3d2:	bf00      	nop
 800f3d4:	370c      	adds	r7, #12
 800f3d6:	46bd      	mov	sp, r7
 800f3d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3dc:	4770      	bx	lr

0800f3de <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800f3de:	b480      	push	{r7}
 800f3e0:	b083      	sub	sp, #12
 800f3e2:	af00      	add	r7, sp, #0
 800f3e4:	4603      	mov	r3, r0
 800f3e6:	71fb      	strb	r3, [r7, #7]

}
 800f3e8:	bf00      	nop
 800f3ea:	370c      	adds	r7, #12
 800f3ec:	46bd      	mov	sp, r7
 800f3ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3f2:	4770      	bx	lr

0800f3f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800f3f4:	b480      	push	{r7}
 800f3f6:	b083      	sub	sp, #12
 800f3f8:	af00      	add	r7, sp, #0
 800f3fa:	4603      	mov	r3, r0
 800f3fc:	71fb      	strb	r3, [r7, #7]

}
 800f3fe:	bf00      	nop
 800f400:	370c      	adds	r7, #12
 800f402:	46bd      	mov	sp, r7
 800f404:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f408:	4770      	bx	lr
	...

0800f40c <_ZN8touchgfx18MCUInstrumentationC1Ev>:
    MCUInstrumentation()
 800f40c:	b480      	push	{r7}
 800f40e:	b083      	sub	sp, #12
 800f410:	af00      	add	r7, sp, #0
 800f412:	6078      	str	r0, [r7, #4]
          cc_in(0)
 800f414:	4a07      	ldr	r2, [pc, #28]	; (800f434 <_ZN8touchgfx18MCUInstrumentationC1Ev+0x28>)
 800f416:	687b      	ldr	r3, [r7, #4]
 800f418:	601a      	str	r2, [r3, #0]
 800f41a:	687b      	ldr	r3, [r7, #4]
 800f41c:	2200      	movs	r2, #0
 800f41e:	605a      	str	r2, [r3, #4]
 800f420:	687b      	ldr	r3, [r7, #4]
 800f422:	2200      	movs	r2, #0
 800f424:	609a      	str	r2, [r3, #8]
    }
 800f426:	687b      	ldr	r3, [r7, #4]
 800f428:	4618      	mov	r0, r3
 800f42a:	370c      	adds	r7, #12
 800f42c:	46bd      	mov	sp, r7
 800f42e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f432:	4770      	bx	lr
 800f434:	0802f3a8 	.word	0x0802f3a8

0800f438 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800f438:	b480      	push	{r7}
 800f43a:	b083      	sub	sp, #12
 800f43c:	af00      	add	r7, sp, #0
 800f43e:	6078      	str	r0, [r7, #4]
    {
 800f440:	4a04      	ldr	r2, [pc, #16]	; (800f454 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800f442:	687b      	ldr	r3, [r7, #4]
 800f444:	601a      	str	r2, [r3, #0]
    }
 800f446:	687b      	ldr	r3, [r7, #4]
 800f448:	4618      	mov	r0, r3
 800f44a:	370c      	adds	r7, #12
 800f44c:	46bd      	mov	sp, r7
 800f44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f452:	4770      	bx	lr
 800f454:	0803000c 	.word	0x0803000c

0800f458 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800f458:	b580      	push	{r7, lr}
 800f45a:	b082      	sub	sp, #8
 800f45c:	af00      	add	r7, sp, #0
 800f45e:	6078      	str	r0, [r7, #4]
    }
 800f460:	6878      	ldr	r0, [r7, #4]
 800f462:	f7ff ffe9 	bl	800f438 <_ZN8touchgfx3HALD1Ev>
 800f466:	217c      	movs	r1, #124	; 0x7c
 800f468:	6878      	ldr	r0, [r7, #4]
 800f46a:	f01c fafc 	bl	802ba66 <_ZdlPvj>
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	4618      	mov	r0, r3
 800f472:	3708      	adds	r7, #8
 800f474:	46bd      	mov	sp, r7
 800f476:	bd80      	pop	{r7, pc}

0800f478 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800f478:	b480      	push	{r7}
 800f47a:	b083      	sub	sp, #12
 800f47c:	af00      	add	r7, sp, #0
 800f47e:	6078      	str	r0, [r7, #4]
 800f480:	460b      	mov	r3, r1
 800f482:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800f484:	687b      	ldr	r3, [r7, #4]
 800f486:	78fa      	ldrb	r2, [r7, #3]
 800f488:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800f48c:	687b      	ldr	r3, [r7, #4]
 800f48e:	2201      	movs	r2, #1
 800f490:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 800f494:	bf00      	nop
 800f496:	370c      	adds	r7, #12
 800f498:	46bd      	mov	sp, r7
 800f49a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f49e:	4770      	bx	lr

0800f4a0 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 800f4a0:	b480      	push	{r7}
 800f4a2:	b083      	sub	sp, #12
 800f4a4:	af00      	add	r7, sp, #0
 800f4a6:	6078      	str	r0, [r7, #4]
 800f4a8:	460b      	mov	r3, r1
 800f4aa:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 800f4ac:	687b      	ldr	r3, [r7, #4]
 800f4ae:	78fa      	ldrb	r2, [r7, #3]
 800f4b0:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800f4b4:	bf00      	nop
 800f4b6:	370c      	adds	r7, #12
 800f4b8:	46bd      	mov	sp, r7
 800f4ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4be:	4770      	bx	lr

0800f4c0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800f4c0:	b580      	push	{r7, lr}
 800f4c2:	b082      	sub	sp, #8
 800f4c4:	af00      	add	r7, sp, #0
 800f4c6:	6078      	str	r0, [r7, #4]
        if (useDMAAcceleration)
 800f4c8:	687b      	ldr	r3, [r7, #4]
 800f4ca:	f893 3077 	ldrb.w	r3, [r3, #119]	; 0x77
 800f4ce:	2b00      	cmp	r3, #0
 800f4d0:	d009      	beq.n	800f4e6 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
            return dma.getBlitCaps();
 800f4d2:	687b      	ldr	r3, [r7, #4]
 800f4d4:	685a      	ldr	r2, [r3, #4]
 800f4d6:	687b      	ldr	r3, [r7, #4]
 800f4d8:	685b      	ldr	r3, [r3, #4]
 800f4da:	681b      	ldr	r3, [r3, #0]
 800f4dc:	681b      	ldr	r3, [r3, #0]
 800f4de:	4610      	mov	r0, r2
 800f4e0:	4798      	blx	r3
 800f4e2:	4603      	mov	r3, r0
 800f4e4:	e000      	b.n	800f4e8 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
            return static_cast<BlitOperations>(0);
 800f4e6:	2300      	movs	r3, #0
    }
 800f4e8:	4618      	mov	r0, r3
 800f4ea:	3708      	adds	r7, #8
 800f4ec:	46bd      	mov	sp, r7
 800f4ee:	bd80      	pop	{r7, pc}

0800f4f0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800f4f0:	b580      	push	{r7, lr}
 800f4f2:	b082      	sub	sp, #8
 800f4f4:	af00      	add	r7, sp, #0
 800f4f6:	6078      	str	r0, [r7, #4]
        swapFrameBuffers();
 800f4f8:	6878      	ldr	r0, [r7, #4]
 800f4fa:	f008 f8c7 	bl	801768c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800f4fe:	687b      	ldr	r3, [r7, #4]
 800f500:	681b      	ldr	r3, [r3, #0]
 800f502:	3390      	adds	r3, #144	; 0x90
 800f504:	681b      	ldr	r3, [r3, #0]
 800f506:	6878      	ldr	r0, [r7, #4]
 800f508:	4798      	blx	r3
    }
 800f50a:	bf00      	nop
 800f50c:	3708      	adds	r7, #8
 800f50e:	46bd      	mov	sp, r7
 800f510:	bd80      	pop	{r7, pc}

0800f512 <_ZN8touchgfx3HAL9sampleKeyERh>:
    virtual bool sampleKey(uint8_t& key)
 800f512:	b480      	push	{r7}
 800f514:	b083      	sub	sp, #12
 800f516:	af00      	add	r7, sp, #0
 800f518:	6078      	str	r0, [r7, #4]
 800f51a:	6039      	str	r1, [r7, #0]
        return false;
 800f51c:	2300      	movs	r3, #0
    }
 800f51e:	4618      	mov	r0, r3
 800f520:	370c      	adds	r7, #12
 800f522:	46bd      	mov	sp, r7
 800f524:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f528:	4770      	bx	lr
	...

0800f52c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800f52c:	b580      	push	{r7, lr}
 800f52e:	b084      	sub	sp, #16
 800f530:	af00      	add	r7, sp, #0
 800f532:	60f8      	str	r0, [r7, #12]
 800f534:	60b9      	str	r1, [r7, #8]
 800f536:	607a      	str	r2, [r7, #4]
 800f538:	603b      	str	r3, [r7, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800f53a:	68bb      	ldr	r3, [r7, #8]
 800f53c:	2b00      	cmp	r3, #0
 800f53e:	d106      	bne.n	800f54e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800f540:	4b11      	ldr	r3, [pc, #68]	; (800f588 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800f542:	4a12      	ldr	r2, [pc, #72]	; (800f58c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800f544:	f240 216b 	movw	r1, #619	; 0x26b
 800f548:	4811      	ldr	r0, [pc, #68]	; (800f590 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 800f54a:	f01c fccd 	bl	802bee8 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800f54e:	68fb      	ldr	r3, [r7, #12]
 800f550:	68ba      	ldr	r2, [r7, #8]
 800f552:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800f554:	68fb      	ldr	r3, [r7, #12]
 800f556:	687a      	ldr	r2, [r7, #4]
 800f558:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800f55a:	68fb      	ldr	r3, [r7, #12]
 800f55c:	683a      	ldr	r2, [r7, #0]
 800f55e:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800f560:	687b      	ldr	r3, [r7, #4]
 800f562:	2b00      	cmp	r3, #0
 800f564:	bf14      	ite	ne
 800f566:	2301      	movne	r3, #1
 800f568:	2300      	moveq	r3, #0
 800f56a:	b2da      	uxtb	r2, r3
 800f56c:	4b09      	ldr	r3, [pc, #36]	; (800f594 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 800f56e:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800f570:	683b      	ldr	r3, [r7, #0]
 800f572:	2b00      	cmp	r3, #0
 800f574:	bf14      	ite	ne
 800f576:	2301      	movne	r3, #1
 800f578:	2300      	moveq	r3, #0
 800f57a:	b2da      	uxtb	r2, r3
 800f57c:	4b06      	ldr	r3, [pc, #24]	; (800f598 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 800f57e:	701a      	strb	r2, [r3, #0]
    }
 800f580:	bf00      	nop
 800f582:	3710      	adds	r7, #16
 800f584:	46bd      	mov	sp, r7
 800f586:	bd80      	pop	{r7, pc}
 800f588:	0802dfbc 	.word	0x0802dfbc
 800f58c:	0802dff4 	.word	0x0802dff4
 800f590:	0802e044 	.word	0x0802e044
 800f594:	20004164 	.word	0x20004164
 800f598:	20004165 	.word	0x20004165

0800f59c <_ZN8touchgfx3HAL21setMCUInstrumentationEPNS_18MCUInstrumentationE>:
    void setMCUInstrumentation(MCUInstrumentation* mcuInstr)
 800f59c:	b480      	push	{r7}
 800f59e:	b083      	sub	sp, #12
 800f5a0:	af00      	add	r7, sp, #0
 800f5a2:	6078      	str	r0, [r7, #4]
 800f5a4:	6039      	str	r1, [r7, #0]
        mcuInstrumentation = mcuInstr;
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	683a      	ldr	r2, [r7, #0]
 800f5aa:	611a      	str	r2, [r3, #16]
    }
 800f5ac:	bf00      	nop
 800f5ae:	370c      	adds	r7, #12
 800f5b0:	46bd      	mov	sp, r7
 800f5b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5b6:	4770      	bx	lr

0800f5b8 <_ZN8touchgfx3HAL24enableMCULoadCalculationEb>:
    void enableMCULoadCalculation(bool enabled)
 800f5b8:	b480      	push	{r7}
 800f5ba:	b083      	sub	sp, #12
 800f5bc:	af00      	add	r7, sp, #0
 800f5be:	6078      	str	r0, [r7, #4]
 800f5c0:	460b      	mov	r3, r1
 800f5c2:	70fb      	strb	r3, [r7, #3]
        updateMCULoad = enabled;
 800f5c4:	687b      	ldr	r3, [r7, #4]
 800f5c6:	78fa      	ldrb	r2, [r7, #3]
 800f5c8:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
    }
 800f5cc:	bf00      	nop
 800f5ce:	370c      	adds	r7, #12
 800f5d0:	46bd      	mov	sp, r7
 800f5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5d6:	4770      	bx	lr

0800f5d8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
    virtual FlashDataReader* getFlashDataReader() const
 800f5d8:	b480      	push	{r7}
 800f5da:	b083      	sub	sp, #12
 800f5dc:	af00      	add	r7, sp, #0
 800f5de:	6078      	str	r0, [r7, #4]
        return 0;
 800f5e0:	2300      	movs	r3, #0
    }
 800f5e2:	4618      	mov	r0, r3
 800f5e4:	370c      	adds	r7, #12
 800f5e6:	46bd      	mov	sp, r7
 800f5e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5ec:	4770      	bx	lr

0800f5ee <_ZN8touchgfx3HAL9taskDelayEt>:
    virtual void taskDelay(uint16_t ms)
 800f5ee:	b580      	push	{r7, lr}
 800f5f0:	b082      	sub	sp, #8
 800f5f2:	af00      	add	r7, sp, #0
 800f5f4:	6078      	str	r0, [r7, #4]
 800f5f6:	460b      	mov	r3, r1
 800f5f8:	807b      	strh	r3, [r7, #2]
        if (taskDelayFunc)
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f5fe:	2b00      	cmp	r3, #0
 800f600:	d004      	beq.n	800f60c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
            taskDelayFunc(ms);
 800f602:	687b      	ldr	r3, [r7, #4]
 800f604:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f606:	887a      	ldrh	r2, [r7, #2]
 800f608:	4610      	mov	r0, r2
 800f60a:	4798      	blx	r3
    }
 800f60c:	bf00      	nop
 800f60e:	3708      	adds	r7, #8
 800f610:	46bd      	mov	sp, r7
 800f612:	bd80      	pop	{r7, pc}

0800f614 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
    virtual uint16_t getTFTCurrentLine()
 800f614:	b480      	push	{r7}
 800f616:	b083      	sub	sp, #12
 800f618:	af00      	add	r7, sp, #0
 800f61a:	6078      	str	r0, [r7, #4]
        return 0xFFFFu;
 800f61c:	f64f 73ff 	movw	r3, #65535	; 0xffff
    }
 800f620:	4618      	mov	r0, r3
 800f622:	370c      	adds	r7, #12
 800f624:	46bd      	mov	sp, r7
 800f626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f62a:	4770      	bx	lr

0800f62c <_ZN8touchgfx3HAL10getDMATypeEv>:
    virtual DMAType getDMAType()
 800f62c:	b580      	push	{r7, lr}
 800f62e:	b082      	sub	sp, #8
 800f630:	af00      	add	r7, sp, #0
 800f632:	6078      	str	r0, [r7, #4]
        return dma.getDMAType();
 800f634:	687b      	ldr	r3, [r7, #4]
 800f636:	685a      	ldr	r2, [r3, #4]
 800f638:	687b      	ldr	r3, [r7, #4]
 800f63a:	685b      	ldr	r3, [r3, #4]
 800f63c:	681b      	ldr	r3, [r3, #0]
 800f63e:	3318      	adds	r3, #24
 800f640:	681b      	ldr	r3, [r3, #0]
 800f642:	4610      	mov	r0, r2
 800f644:	4798      	blx	r3
 800f646:	4603      	mov	r3, r0
    }
 800f648:	4618      	mov	r0, r3
 800f64a:	3708      	adds	r7, #8
 800f64c:	46bd      	mov	sp, r7
 800f64e:	bd80      	pop	{r7, pc}

0800f650 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800f650:	b480      	push	{r7}
 800f652:	b083      	sub	sp, #12
 800f654:	af00      	add	r7, sp, #0
 800f656:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800f658:	687b      	ldr	r3, [r7, #4]
 800f65a:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800f65e:	687b      	ldr	r3, [r7, #4]
 800f660:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 800f664:	429a      	cmp	r2, r3
 800f666:	d017      	beq.n	800f698 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 800f668:	4b1a      	ldr	r3, [pc, #104]	; (800f6d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800f66a:	781b      	ldrb	r3, [r3, #0]
 800f66c:	2b00      	cmp	r3, #0
 800f66e:	d12a      	bne.n	800f6c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800f670:	4b19      	ldr	r3, [pc, #100]	; (800f6d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800f672:	881a      	ldrh	r2, [r3, #0]
 800f674:	4b19      	ldr	r3, [pc, #100]	; (800f6dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800f676:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800f678:	4b19      	ldr	r3, [pc, #100]	; (800f6e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800f67a:	881a      	ldrh	r2, [r3, #0]
 800f67c:	4b19      	ldr	r3, [pc, #100]	; (800f6e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800f67e:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 800f680:	4b16      	ldr	r3, [pc, #88]	; (800f6dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800f682:	881a      	ldrh	r2, [r3, #0]
 800f684:	4b16      	ldr	r3, [pc, #88]	; (800f6e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800f686:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800f688:	4b16      	ldr	r3, [pc, #88]	; (800f6e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800f68a:	881a      	ldrh	r2, [r3, #0]
 800f68c:	4b12      	ldr	r3, [pc, #72]	; (800f6d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800f68e:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 800f690:	4b10      	ldr	r3, [pc, #64]	; (800f6d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800f692:	2201      	movs	r2, #1
 800f694:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800f696:	e016      	b.n	800f6c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 800f698:	4b0e      	ldr	r3, [pc, #56]	; (800f6d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800f69a:	781b      	ldrb	r3, [r3, #0]
 800f69c:	2b00      	cmp	r3, #0
 800f69e:	d012      	beq.n	800f6c6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800f6a0:	4b0f      	ldr	r3, [pc, #60]	; (800f6e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800f6a2:	881a      	ldrh	r2, [r3, #0]
 800f6a4:	4b0d      	ldr	r3, [pc, #52]	; (800f6dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800f6a6:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 800f6a8:	4b0b      	ldr	r3, [pc, #44]	; (800f6d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800f6aa:	881a      	ldrh	r2, [r3, #0]
 800f6ac:	4b0d      	ldr	r3, [pc, #52]	; (800f6e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800f6ae:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 800f6b0:	4b0c      	ldr	r3, [pc, #48]	; (800f6e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 800f6b2:	881a      	ldrh	r2, [r3, #0]
 800f6b4:	4b0a      	ldr	r3, [pc, #40]	; (800f6e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 800f6b6:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 800f6b8:	4b08      	ldr	r3, [pc, #32]	; (800f6dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 800f6ba:	881a      	ldrh	r2, [r3, #0]
 800f6bc:	4b06      	ldr	r3, [pc, #24]	; (800f6d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 800f6be:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 800f6c0:	4b04      	ldr	r3, [pc, #16]	; (800f6d4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800f6c2:	2200      	movs	r2, #0
 800f6c4:	701a      	strb	r2, [r3, #0]
    }
 800f6c6:	bf00      	nop
 800f6c8:	370c      	adds	r7, #12
 800f6ca:	46bd      	mov	sp, r7
 800f6cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6d0:	4770      	bx	lr
 800f6d2:	bf00      	nop
 800f6d4:	2000415e 	.word	0x2000415e
 800f6d8:	2000415a 	.word	0x2000415a
 800f6dc:	20004160 	.word	0x20004160
 800f6e0:	2000415c 	.word	0x2000415c
 800f6e4:	20004162 	.word	0x20004162

0800f6e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800f6e8:	b580      	push	{r7, lr}
 800f6ea:	b082      	sub	sp, #8
 800f6ec:	af00      	add	r7, sp, #0
 800f6ee:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800f6f0:	687b      	ldr	r3, [r7, #4]
 800f6f2:	4618      	mov	r0, r3
 800f6f4:	f007 fa50 	bl	8016b98 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800f6f8:	bf00      	nop
 800f6fa:	3708      	adds	r7, #8
 800f6fc:	46bd      	mov	sp, r7
 800f6fe:	bd80      	pop	{r7, pc}

0800f700 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800f700:	b580      	push	{r7, lr}
 800f702:	b082      	sub	sp, #8
 800f704:	af00      	add	r7, sp, #0
 800f706:	6078      	str	r0, [r7, #4]
 800f708:	4a05      	ldr	r2, [pc, #20]	; (800f720 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800f70a:	687b      	ldr	r3, [r7, #4]
 800f70c:	601a      	str	r2, [r3, #0]
 800f70e:	687b      	ldr	r3, [r7, #4]
 800f710:	4618      	mov	r0, r3
 800f712:	f7ff fe91 	bl	800f438 <_ZN8touchgfx3HALD1Ev>
 800f716:	687b      	ldr	r3, [r7, #4]
 800f718:	4618      	mov	r0, r3
 800f71a:	3708      	adds	r7, #8
 800f71c:	46bd      	mov	sp, r7
 800f71e:	bd80      	pop	{r7, pc}
 800f720:	0802f604 	.word	0x0802f604

0800f724 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800f724:	b580      	push	{r7, lr}
 800f726:	b082      	sub	sp, #8
 800f728:	af00      	add	r7, sp, #0
 800f72a:	6078      	str	r0, [r7, #4]
 800f72c:	6878      	ldr	r0, [r7, #4]
 800f72e:	f7ff ffe7 	bl	800f700 <_ZN20TouchGFXGeneratedHALD1Ev>
 800f732:	217c      	movs	r1, #124	; 0x7c
 800f734:	6878      	ldr	r0, [r7, #4]
 800f736:	f01c f996 	bl	802ba66 <_ZdlPvj>
 800f73a:	687b      	ldr	r3, [r7, #4]
 800f73c:	4618      	mov	r0, r3
 800f73e:	3708      	adds	r7, #8
 800f740:	46bd      	mov	sp, r7
 800f742:	bd80      	pop	{r7, pc}

0800f744 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800f744:	b580      	push	{r7, lr}
 800f746:	b082      	sub	sp, #8
 800f748:	af00      	add	r7, sp, #0
 800f74a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800f74c:	687b      	ldr	r3, [r7, #4]
 800f74e:	4618      	mov	r0, r3
 800f750:	f7ff ffca 	bl	800f6e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800f754:	bf00      	nop
 800f756:	3708      	adds	r7, #8
 800f758:	46bd      	mov	sp, r7
 800f75a:	bd80      	pop	{r7, pc}

0800f75c <SCB_CleanInvalidateDCache>:
/**
  \brief   Clean & Invalidate D-Cache
  \details Cleans and Invalidates D-Cache
  */
__STATIC_INLINE void SCB_CleanInvalidateDCache (void)
{
 800f75c:	b480      	push	{r7}
 800f75e:	b085      	sub	sp, #20
 800f760:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800f762:	4b21      	ldr	r3, [pc, #132]	; (800f7e8 <SCB_CleanInvalidateDCache+0x8c>)
 800f764:	2200      	movs	r2, #0
 800f766:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800f76a:	f3bf 8f4f 	dsb	sy
}
 800f76e:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 800f770:	4b1d      	ldr	r3, [pc, #116]	; (800f7e8 <SCB_CleanInvalidateDCache+0x8c>)
 800f772:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f776:	607b      	str	r3, [r7, #4]

                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800f778:	687b      	ldr	r3, [r7, #4]
 800f77a:	0b5b      	lsrs	r3, r3, #13
 800f77c:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800f780:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800f782:	687b      	ldr	r3, [r7, #4]
 800f784:	08db      	lsrs	r3, r3, #3
 800f786:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800f78a:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f78c:	68fb      	ldr	r3, [r7, #12]
 800f78e:	015a      	lsls	r2, r3, #5
 800f790:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 800f794:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800f796:	68ba      	ldr	r2, [r7, #8]
 800f798:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800f79a:	4913      	ldr	r1, [pc, #76]	; (800f7e8 <SCB_CleanInvalidateDCache+0x8c>)
 800f79c:	4313      	orrs	r3, r2
 800f79e:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800f7a2:	68bb      	ldr	r3, [r7, #8]
 800f7a4:	1e5a      	subs	r2, r3, #1
 800f7a6:	60ba      	str	r2, [r7, #8]
 800f7a8:	2b00      	cmp	r3, #0
 800f7aa:	bf14      	ite	ne
 800f7ac:	2301      	movne	r3, #1
 800f7ae:	2300      	moveq	r3, #0
 800f7b0:	b2db      	uxtb	r3, r3
 800f7b2:	2b00      	cmp	r3, #0
 800f7b4:	d000      	beq.n	800f7b8 <SCB_CleanInvalidateDCache+0x5c>
      do {
 800f7b6:	e7e9      	b.n	800f78c <SCB_CleanInvalidateDCache+0x30>
    } while(sets-- != 0U);
 800f7b8:	68fb      	ldr	r3, [r7, #12]
 800f7ba:	1e5a      	subs	r2, r3, #1
 800f7bc:	60fa      	str	r2, [r7, #12]
 800f7be:	2b00      	cmp	r3, #0
 800f7c0:	bf14      	ite	ne
 800f7c2:	2301      	movne	r3, #1
 800f7c4:	2300      	moveq	r3, #0
 800f7c6:	b2db      	uxtb	r3, r3
 800f7c8:	2b00      	cmp	r3, #0
 800f7ca:	d000      	beq.n	800f7ce <SCB_CleanInvalidateDCache+0x72>
    do {
 800f7cc:	e7d9      	b.n	800f782 <SCB_CleanInvalidateDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 800f7ce:	f3bf 8f4f 	dsb	sy
}
 800f7d2:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800f7d4:	f3bf 8f6f 	isb	sy
}
 800f7d8:	bf00      	nop

    __DSB();
    __ISB();
  #endif
}
 800f7da:	bf00      	nop
 800f7dc:	3714      	adds	r7, #20
 800f7de:	46bd      	mov	sp, r7
 800f7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7e4:	4770      	bx	lr
 800f7e6:	bf00      	nop
 800f7e8:	e000ed00 	.word	0xe000ed00

0800f7ec <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev>:
 800f7ec:	b580      	push	{r7, lr}
 800f7ee:	b082      	sub	sp, #8
 800f7f0:	af00      	add	r7, sp, #0
 800f7f2:	6078      	str	r0, [r7, #4]
 800f7f4:	687b      	ldr	r3, [r7, #4]
 800f7f6:	4618      	mov	r0, r3
 800f7f8:	f7ff fe08 	bl	800f40c <_ZN8touchgfx18MCUInstrumentationC1Ev>
 800f7fc:	4a03      	ldr	r2, [pc, #12]	; (800f80c <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev+0x20>)
 800f7fe:	687b      	ldr	r3, [r7, #4]
 800f800:	601a      	str	r2, [r3, #0]
 800f802:	687b      	ldr	r3, [r7, #4]
 800f804:	4618      	mov	r0, r3
 800f806:	3708      	adds	r7, #8
 800f808:	46bd      	mov	sp, r7
 800f80a:	bd80      	pop	{r7, pc}
 800f80c:	0802f380 	.word	0x0802f380

0800f810 <_ZN11TouchGFXHAL10initializeEv>:

using namespace touchgfx;
CortexMMCUInstrumentation instrumentation;

void TouchGFXHAL::initialize()
{
 800f810:	b590      	push	{r4, r7, lr}
 800f812:	b083      	sub	sp, #12
 800f814:	af00      	add	r7, sp, #0
 800f816:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800f818:	687b      	ldr	r3, [r7, #4]
 800f81a:	4618      	mov	r0, r3
 800f81c:	f001 fbb6 	bl	8010f8c <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0xC003FC00, (void*)0xC007F800);  //enable the animation storage to allow slide animations
 800f820:	6878      	ldr	r0, [r7, #4]
 800f822:	687b      	ldr	r3, [r7, #4]
 800f824:	681b      	ldr	r3, [r3, #0]
 800f826:	3370      	adds	r3, #112	; 0x70
 800f828:	681c      	ldr	r4, [r3, #0]
 800f82a:	4b0d      	ldr	r3, [pc, #52]	; (800f860 <_ZN11TouchGFXHAL10initializeEv+0x50>)
 800f82c:	4a0d      	ldr	r2, [pc, #52]	; (800f864 <_ZN11TouchGFXHAL10initializeEv+0x54>)
 800f82e:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800f832:	47a0      	blx	r4
    lockDMAToFrontPorch(false);
 800f834:	687b      	ldr	r3, [r7, #4]
 800f836:	2100      	movs	r1, #0
 800f838:	4618      	mov	r0, r3
 800f83a:	f7ff fe31 	bl	800f4a0 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
    instrumentation.init();
 800f83e:	480a      	ldr	r0, [pc, #40]	; (800f868 <_ZN11TouchGFXHAL10initializeEv+0x58>)
 800f840:	f7ff fc12 	bl	800f068 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
    setMCUInstrumentation(&instrumentation);
 800f844:	687b      	ldr	r3, [r7, #4]
 800f846:	4908      	ldr	r1, [pc, #32]	; (800f868 <_ZN11TouchGFXHAL10initializeEv+0x58>)
 800f848:	4618      	mov	r0, r3
 800f84a:	f7ff fea7 	bl	800f59c <_ZN8touchgfx3HAL21setMCUInstrumentationEPNS_18MCUInstrumentationE>
    enableMCULoadCalculation(true);
 800f84e:	687b      	ldr	r3, [r7, #4]
 800f850:	2101      	movs	r1, #1
 800f852:	4618      	mov	r0, r3
 800f854:	f7ff feb0 	bl	800f5b8 <_ZN8touchgfx3HAL24enableMCULoadCalculationEb>
}
 800f858:	bf00      	nop
 800f85a:	370c      	adds	r7, #12
 800f85c:	46bd      	mov	sp, r7
 800f85e:	bd90      	pop	{r4, r7, pc}
 800f860:	c007f800 	.word	0xc007f800
 800f864:	c003fc00 	.word	0xc003fc00
 800f868:	20000558 	.word	0x20000558

0800f86c <_ZN11TouchGFXHAL9taskEntryEv>:

#if (TOUCHGFX_BAREMETAL != 0)
void TouchGFXHAL::taskEntry()
{
 800f86c:	b580      	push	{r7, lr}
 800f86e:	b082      	sub	sp, #8
 800f870:	af00      	add	r7, sp, #0
 800f872:	6078      	str	r0, [r7, #4]
    static bool firstCall = true;

    if (firstCall)
 800f874:	4b0c      	ldr	r3, [pc, #48]	; (800f8a8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 800f876:	781b      	ldrb	r3, [r3, #0]
 800f878:	2b00      	cmp	r3, #0
 800f87a:	d00e      	beq.n	800f89a <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
    {
        firstCall = false;
 800f87c:	4b0a      	ldr	r3, [pc, #40]	; (800f8a8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 800f87e:	2200      	movs	r2, #0
 800f880:	701a      	strb	r2, [r3, #0]
        enableLCDControllerInterrupt();
 800f882:	687b      	ldr	r3, [r7, #4]
 800f884:	681b      	ldr	r3, [r3, #0]
 800f886:	3368      	adds	r3, #104	; 0x68
 800f888:	681b      	ldr	r3, [r3, #0]
 800f88a:	6878      	ldr	r0, [r7, #4]
 800f88c:	4798      	blx	r3
        enableInterrupts();
 800f88e:	687b      	ldr	r3, [r7, #4]
 800f890:	681b      	ldr	r3, [r3, #0]
 800f892:	3360      	adds	r3, #96	; 0x60
 800f894:	681b      	ldr	r3, [r3, #0]
 800f896:	6878      	ldr	r0, [r7, #4]
 800f898:	4798      	blx	r3
    }

    OSWrappers::waitForVSync();
 800f89a:	f000 f92f 	bl	800fafc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>

    //backPorchExited();
    // Not necessary to call here when it is done by the
    // OSWrappers::waitForVSync() method
}
 800f89e:	bf00      	nop
 800f8a0:	3708      	adds	r7, #8
 800f8a2:	46bd      	mov	sp, r7
 800f8a4:	bd80      	pop	{r7, pc}
 800f8a6:	bf00      	nop
 800f8a8:	20000038 	.word	0x20000038

0800f8ac <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800f8ac:	b580      	push	{r7, lr}
 800f8ae:	b082      	sub	sp, #8
 800f8b0:	af00      	add	r7, sp, #0
 800f8b2:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800f8b4:	687b      	ldr	r3, [r7, #4]
 800f8b6:	4618      	mov	r0, r3
 800f8b8:	f001 fbe6 	bl	8011088 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800f8bc:	4603      	mov	r3, r0
}
 800f8be:	4618      	mov	r0, r3
 800f8c0:	3708      	adds	r7, #8
 800f8c2:	46bd      	mov	sp, r7
 800f8c4:	bd80      	pop	{r7, pc}

0800f8c6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800f8c6:	b580      	push	{r7, lr}
 800f8c8:	b082      	sub	sp, #8
 800f8ca:	af00      	add	r7, sp, #0
 800f8cc:	6078      	str	r0, [r7, #4]
 800f8ce:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800f8d0:	687b      	ldr	r3, [r7, #4]
 800f8d2:	6839      	ldr	r1, [r7, #0]
 800f8d4:	4618      	mov	r0, r3
 800f8d6:	f001 fbe5 	bl	80110a4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800f8da:	bf00      	nop
 800f8dc:	3708      	adds	r7, #8
 800f8de:	46bd      	mov	sp, r7
 800f8e0:	bd80      	pop	{r7, pc}
	...

0800f8e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800f8e4:	b580      	push	{r7, lr}
 800f8e6:	b082      	sub	sp, #8
 800f8e8:	af00      	add	r7, sp, #0
 800f8ea:	6078      	str	r0, [r7, #4]
 800f8ec:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800f8ee:	687b      	ldr	r3, [r7, #4]
 800f8f0:	6839      	ldr	r1, [r7, #0]
 800f8f2:	4618      	mov	r0, r3
 800f8f4:	f001 fbec 	bl	80110d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    if ((SCB->CCR & SCB_CCR_DC_Msk) != 0)   // Check data cache is enabled
 800f8f8:	4b08      	ldr	r3, [pc, #32]	; (800f91c <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x38>)
 800f8fa:	695b      	ldr	r3, [r3, #20]
 800f8fc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800f900:	2b00      	cmp	r3, #0
 800f902:	bf14      	ite	ne
 800f904:	2301      	movne	r3, #1
 800f906:	2300      	moveq	r3, #0
 800f908:	b2db      	uxtb	r3, r3
 800f90a:	2b00      	cmp	r3, #0
 800f90c:	d001      	beq.n	800f912 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2e>
    {
        SCB_CleanInvalidateDCache();
 800f90e:	f7ff ff25 	bl	800f75c <SCB_CleanInvalidateDCache>
    }
}
 800f912:	bf00      	nop
 800f914:	3708      	adds	r7, #8
 800f916:	46bd      	mov	sp, r7
 800f918:	bd80      	pop	{r7, pc}
 800f91a:	bf00      	nop
 800f91c:	e000ed00 	.word	0xe000ed00

0800f920 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800f920:	b580      	push	{r7, lr}
 800f922:	b084      	sub	sp, #16
 800f924:	af00      	add	r7, sp, #0
 800f926:	60f8      	str	r0, [r7, #12]
 800f928:	60b9      	str	r1, [r7, #8]
 800f92a:	607a      	str	r2, [r7, #4]
 800f92c:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800f92e:	68f8      	ldr	r0, [r7, #12]
 800f930:	683b      	ldr	r3, [r7, #0]
 800f932:	687a      	ldr	r2, [r7, #4]
 800f934:	68b9      	ldr	r1, [r7, #8]
 800f936:	f001 fbe9 	bl	801110c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800f93a:	4603      	mov	r3, r0
}
 800f93c:	4618      	mov	r0, r3
 800f93e:	3710      	adds	r7, #16
 800f940:	46bd      	mov	sp, r7
 800f942:	bd80      	pop	{r7, pc}

0800f944 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800f944:	b580      	push	{r7, lr}
 800f946:	b082      	sub	sp, #8
 800f948:	af00      	add	r7, sp, #0
 800f94a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800f94c:	687b      	ldr	r3, [r7, #4]
 800f94e:	4618      	mov	r0, r3
 800f950:	f001 fb40 	bl	8010fd4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800f954:	bf00      	nop
 800f956:	3708      	adds	r7, #8
 800f958:	46bd      	mov	sp, r7
 800f95a:	bd80      	pop	{r7, pc}

0800f95c <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800f95c:	b580      	push	{r7, lr}
 800f95e:	b082      	sub	sp, #8
 800f960:	af00      	add	r7, sp, #0
 800f962:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800f964:	687b      	ldr	r3, [r7, #4]
 800f966:	4618      	mov	r0, r3
 800f968:	f001 fb44 	bl	8010ff4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800f96c:	bf00      	nop
 800f96e:	3708      	adds	r7, #8
 800f970:	46bd      	mov	sp, r7
 800f972:	bd80      	pop	{r7, pc}

0800f974 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800f974:	b580      	push	{r7, lr}
 800f976:	b082      	sub	sp, #8
 800f978:	af00      	add	r7, sp, #0
 800f97a:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800f97c:	687b      	ldr	r3, [r7, #4]
 800f97e:	4618      	mov	r0, r3
 800f980:	f001 fb46 	bl	8011010 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800f984:	bf00      	nop
 800f986:	3708      	adds	r7, #8
 800f988:	46bd      	mov	sp, r7
 800f98a:	bd80      	pop	{r7, pc}

0800f98c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800f98c:	b580      	push	{r7, lr}
 800f98e:	b082      	sub	sp, #8
 800f990:	af00      	add	r7, sp, #0
 800f992:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800f994:	687b      	ldr	r3, [r7, #4]
 800f996:	4618      	mov	r0, r3
 800f998:	f001 fb48 	bl	801102c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800f99c:	bf00      	nop
 800f99e:	3708      	adds	r7, #8
 800f9a0:	46bd      	mov	sp, r7
 800f9a2:	bd80      	pop	{r7, pc}

0800f9a4 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800f9a4:	b580      	push	{r7, lr}
 800f9a6:	b082      	sub	sp, #8
 800f9a8:	af00      	add	r7, sp, #0
 800f9aa:	6078      	str	r0, [r7, #4]
 800f9ac:	4a05      	ldr	r2, [pc, #20]	; (800f9c4 <_ZN11TouchGFXHALD1Ev+0x20>)
 800f9ae:	687b      	ldr	r3, [r7, #4]
 800f9b0:	601a      	str	r2, [r3, #0]
 800f9b2:	687b      	ldr	r3, [r7, #4]
 800f9b4:	4618      	mov	r0, r3
 800f9b6:	f7ff fea3 	bl	800f700 <_ZN20TouchGFXGeneratedHALD1Ev>
 800f9ba:	687b      	ldr	r3, [r7, #4]
 800f9bc:	4618      	mov	r0, r3
 800f9be:	3708      	adds	r7, #8
 800f9c0:	46bd      	mov	sp, r7
 800f9c2:	bd80      	pop	{r7, pc}
 800f9c4:	0802f400 	.word	0x0802f400

0800f9c8 <_ZN11TouchGFXHALD0Ev>:
 800f9c8:	b580      	push	{r7, lr}
 800f9ca:	b082      	sub	sp, #8
 800f9cc:	af00      	add	r7, sp, #0
 800f9ce:	6078      	str	r0, [r7, #4]
 800f9d0:	6878      	ldr	r0, [r7, #4]
 800f9d2:	f7ff ffe7 	bl	800f9a4 <_ZN11TouchGFXHALD1Ev>
 800f9d6:	217c      	movs	r1, #124	; 0x7c
 800f9d8:	6878      	ldr	r0, [r7, #4]
 800f9da:	f01c f844 	bl	802ba66 <_ZdlPvj>
 800f9de:	687b      	ldr	r3, [r7, #4]
 800f9e0:	4618      	mov	r0, r3
 800f9e2:	3708      	adds	r7, #8
 800f9e4:	46bd      	mov	sp, r7
 800f9e6:	bd80      	pop	{r7, pc}

0800f9e8 <_Z41__static_initialization_and_destruction_0ii>:
        }
        return pdTRUE;
    }
	#endif // TOUCHGFX_FREERTOS

}
 800f9e8:	b580      	push	{r7, lr}
 800f9ea:	b082      	sub	sp, #8
 800f9ec:	af00      	add	r7, sp, #0
 800f9ee:	6078      	str	r0, [r7, #4]
 800f9f0:	6039      	str	r1, [r7, #0]
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	2b01      	cmp	r3, #1
 800f9f6:	d107      	bne.n	800fa08 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800f9f8:	683b      	ldr	r3, [r7, #0]
 800f9fa:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f9fe:	4293      	cmp	r3, r2
 800fa00:	d102      	bne.n	800fa08 <_Z41__static_initialization_and_destruction_0ii+0x20>
CortexMMCUInstrumentation instrumentation;
 800fa02:	4809      	ldr	r0, [pc, #36]	; (800fa28 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fa04:	f7ff fef2 	bl	800f7ec <_ZN8touchgfx25CortexMMCUInstrumentationC1Ev>
 800fa08:	687b      	ldr	r3, [r7, #4]
 800fa0a:	2b00      	cmp	r3, #0
 800fa0c:	d107      	bne.n	800fa1e <_Z41__static_initialization_and_destruction_0ii+0x36>
 800fa0e:	683b      	ldr	r3, [r7, #0]
 800fa10:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800fa14:	4293      	cmp	r3, r2
 800fa16:	d102      	bne.n	800fa1e <_Z41__static_initialization_and_destruction_0ii+0x36>
 800fa18:	4803      	ldr	r0, [pc, #12]	; (800fa28 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800fa1a:	f7ff fb95 	bl	800f148 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>
}
 800fa1e:	bf00      	nop
 800fa20:	3708      	adds	r7, #8
 800fa22:	46bd      	mov	sp, r7
 800fa24:	bd80      	pop	{r7, pc}
 800fa26:	bf00      	nop
 800fa28:	20000558 	.word	0x20000558

0800fa2c <_GLOBAL__sub_I_instrumentation>:
 800fa2c:	b580      	push	{r7, lr}
 800fa2e:	af00      	add	r7, sp, #0
 800fa30:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa34:	2001      	movs	r0, #1
 800fa36:	f7ff ffd7 	bl	800f9e8 <_Z41__static_initialization_and_destruction_0ii>
 800fa3a:	bd80      	pop	{r7, pc}

0800fa3c <_GLOBAL__sub_D_instrumentation>:
 800fa3c:	b580      	push	{r7, lr}
 800fa3e:	af00      	add	r7, sp, #0
 800fa40:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800fa44:	2000      	movs	r0, #0
 800fa46:	f7ff ffcf 	bl	800f9e8 <_Z41__static_initialization_and_destruction_0ii>
 800fa4a:	bd80      	pop	{r7, pc}

0800fa4c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800fa4c:	b480      	push	{r7}
 800fa4e:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
		fb_sem = 0;
 800fa50:	4b05      	ldr	r3, [pc, #20]	; (800fa68 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800fa52:	2200      	movs	r2, #0
 800fa54:	601a      	str	r2, [r3, #0]
		vsync_sem = 0;
 800fa56:	4b05      	ldr	r3, [pc, #20]	; (800fa6c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800fa58:	2200      	movs	r2, #0
 800fa5a:	601a      	str	r2, [r3, #0]

		// Create a queue of length 1
		vsync_queue = osMessageQueueNew(1, 4, NULL);
		assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
	#endif // TOUCHGFX_FREERTOS
}
 800fa5c:	bf00      	nop
 800fa5e:	46bd      	mov	sp, r7
 800fa60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa64:	4770      	bx	lr
 800fa66:	bf00      	nop
 800fa68:	20000564 	.word	0x20000564
 800fa6c:	20000568 	.word	0x20000568

0800fa70 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800fa70:	b480      	push	{r7}
 800fa72:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
	  while(fb_sem);
 800fa74:	4b08      	ldr	r3, [pc, #32]	; (800fa98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fa76:	681b      	ldr	r3, [r3, #0]
 800fa78:	2b00      	cmp	r3, #0
 800fa7a:	bf14      	ite	ne
 800fa7c:	2301      	movne	r3, #1
 800fa7e:	2300      	moveq	r3, #0
 800fa80:	b2db      	uxtb	r3, r3
 800fa82:	2b00      	cmp	r3, #0
 800fa84:	d000      	beq.n	800fa88 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 800fa86:	e7f5      	b.n	800fa74 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
	  fb_sem = 1;
 800fa88:	4b03      	ldr	r3, [pc, #12]	; (800fa98 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fa8a:	2201      	movs	r2, #1
 800fa8c:	601a      	str	r2, [r3, #0]
	#endif  // TOUCHGFX_BAREMETAL
	#if (TOUCHGFX_FREERTOS != 0)
	    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
	#endif // TOUCHGFX_FREERTOS
}
 800fa8e:	bf00      	nop
 800fa90:	46bd      	mov	sp, r7
 800fa92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa96:	4770      	bx	lr
 800fa98:	20000564 	.word	0x20000564

0800fa9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800fa9c:	b480      	push	{r7}
 800fa9e:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
	  fb_sem = 0;
 800faa0:	4b03      	ldr	r3, [pc, #12]	; (800fab0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800faa2:	2200      	movs	r2, #0
 800faa4:	601a      	str	r2, [r3, #0]
	#endif  // TOUCHGFX_BAREMETAL
	#if (TOUCHGFX_FREERTOS != 0)
	  osSemaphoreRelease(frame_buffer_sem);
	#endif // TOUCHGFX_FREERTOS
}
 800faa6:	bf00      	nop
 800faa8:	46bd      	mov	sp, r7
 800faaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faae:	4770      	bx	lr
 800fab0:	20000564 	.word	0x20000564

0800fab4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800fab4:	b480      	push	{r7}
 800fab6:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
	  fb_sem = 1;
 800fab8:	4b03      	ldr	r3, [pc, #12]	; (800fac8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800faba:	2201      	movs	r2, #1
 800fabc:	601a      	str	r2, [r3, #0]
	#endif  // TOUCHGFX_BAREMETAL
	#if (TOUCHGFX_FREERTOS != 0)
	    osSemaphoreAcquire(frame_buffer_sem, 0);
	#endif // TOUCHGFX_FREERTOS
}
 800fabe:	bf00      	nop
 800fac0:	46bd      	mov	sp, r7
 800fac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fac6:	4770      	bx	lr
 800fac8:	20000564 	.word	0x20000564

0800facc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800facc:	b480      	push	{r7}
 800face:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
		fb_sem = 0;
 800fad0:	4b03      	ldr	r3, [pc, #12]	; (800fae0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800fad2:	2200      	movs	r2, #0
 800fad4:	601a      	str	r2, [r3, #0]
	#endif  // TOUCHGFX_BAREMETAL
	#if (TOUCHGFX_FREERTOS != 0)
	    osSemaphoreRelease(frame_buffer_sem);
	#endif // TOUCHGFX_FREERTOS
}
 800fad6:	bf00      	nop
 800fad8:	46bd      	mov	sp, r7
 800fada:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fade:	4770      	bx	lr
 800fae0:	20000564 	.word	0x20000564

0800fae4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800fae4:	b480      	push	{r7}
 800fae6:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
	  vsync_sem = 1;
 800fae8:	4b03      	ldr	r3, [pc, #12]	; (800faf8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800faea:	2201      	movs	r2, #1
 800faec:	601a      	str	r2, [r3, #0]
	#endif  // TOUCHGFX_BAREMETAL
	#if (TOUCHGFX_FREERTOS != 0)
	    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
	#endif // TOUCHGFX_FREERTOS
}
 800faee:	bf00      	nop
 800faf0:	46bd      	mov	sp, r7
 800faf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faf6:	4770      	bx	lr
 800faf8:	20000568 	.word	0x20000568

0800fafc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800fafc:	b580      	push	{r7, lr}
 800fafe:	af00      	add	r7, sp, #0
	#if (TOUCHGFX_BAREMETAL != 0)
	  if(vsync_sem)
 800fb00:	4b0a      	ldr	r3, [pc, #40]	; (800fb2c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800fb02:	681b      	ldr	r3, [r3, #0]
 800fb04:	2b00      	cmp	r3, #0
 800fb06:	bf14      	ite	ne
 800fb08:	2301      	movne	r3, #1
 800fb0a:	2300      	moveq	r3, #0
 800fb0c:	b2db      	uxtb	r3, r3
 800fb0e:	2b00      	cmp	r3, #0
 800fb10:	d00a      	beq.n	800fb28 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
	  {
		vsync_sem = 0;
 800fb12:	4b06      	ldr	r3, [pc, #24]	; (800fb2c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800fb14:	2200      	movs	r2, #0
 800fb16:	601a      	str	r2, [r3, #0]
		HAL::getInstance()->backPorchExited();
 800fb18:	f7f9 fdc0 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 800fb1c:	4603      	mov	r3, r0
 800fb1e:	681a      	ldr	r2, [r3, #0]
 800fb20:	3258      	adds	r2, #88	; 0x58
 800fb22:	6812      	ldr	r2, [r2, #0]
 800fb24:	4618      	mov	r0, r3
 800fb26:	4790      	blx	r2
	  osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);

	  // Then, wait for next VSYNC to occur.
	  osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
	#endif // TOUCHGFX_FREERTOS
}
 800fb28:	bf00      	nop
 800fb2a:	bd80      	pop	{r7, pc}
 800fb2c:	20000568 	.word	0x20000568

0800fb30 <__NVIC_EnableIRQ>:
{
 800fb30:	b480      	push	{r7}
 800fb32:	b083      	sub	sp, #12
 800fb34:	af00      	add	r7, sp, #0
 800fb36:	4603      	mov	r3, r0
 800fb38:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800fb3a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800fb3e:	2b00      	cmp	r3, #0
 800fb40:	db0b      	blt.n	800fb5a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800fb42:	79fb      	ldrb	r3, [r7, #7]
 800fb44:	f003 021f 	and.w	r2, r3, #31
 800fb48:	4907      	ldr	r1, [pc, #28]	; (800fb68 <__NVIC_EnableIRQ+0x38>)
 800fb4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800fb4e:	095b      	lsrs	r3, r3, #5
 800fb50:	2001      	movs	r0, #1
 800fb52:	fa00 f202 	lsl.w	r2, r0, r2
 800fb56:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800fb5a:	bf00      	nop
 800fb5c:	370c      	adds	r7, #12
 800fb5e:	46bd      	mov	sp, r7
 800fb60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb64:	4770      	bx	lr
 800fb66:	bf00      	nop
 800fb68:	e000e100 	.word	0xe000e100

0800fb6c <__NVIC_DisableIRQ>:
{
 800fb6c:	b480      	push	{r7}
 800fb6e:	b083      	sub	sp, #12
 800fb70:	af00      	add	r7, sp, #0
 800fb72:	4603      	mov	r3, r0
 800fb74:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800fb76:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800fb7a:	2b00      	cmp	r3, #0
 800fb7c:	db12      	blt.n	800fba4 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800fb7e:	79fb      	ldrb	r3, [r7, #7]
 800fb80:	f003 021f 	and.w	r2, r3, #31
 800fb84:	490a      	ldr	r1, [pc, #40]	; (800fbb0 <__NVIC_DisableIRQ+0x44>)
 800fb86:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800fb8a:	095b      	lsrs	r3, r3, #5
 800fb8c:	2001      	movs	r0, #1
 800fb8e:	fa00 f202 	lsl.w	r2, r0, r2
 800fb92:	3320      	adds	r3, #32
 800fb94:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800fb98:	f3bf 8f4f 	dsb	sy
}
 800fb9c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800fb9e:	f3bf 8f6f 	isb	sy
}
 800fba2:	bf00      	nop
}
 800fba4:	bf00      	nop
 800fba6:	370c      	adds	r7, #12
 800fba8:	46bd      	mov	sp, r7
 800fbaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbae:	4770      	bx	lr
 800fbb0:	e000e100 	.word	0xe000e100

0800fbb4 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800fbb4:	b480      	push	{r7}
 800fbb6:	b083      	sub	sp, #12
 800fbb8:	af00      	add	r7, sp, #0
 800fbba:	6078      	str	r0, [r7, #4]
        : color(0)
 800fbbc:	687b      	ldr	r3, [r7, #4]
 800fbbe:	2200      	movs	r2, #0
 800fbc0:	601a      	str	r2, [r3, #0]
    }
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	4618      	mov	r0, r3
 800fbc6:	370c      	adds	r7, #12
 800fbc8:	46bd      	mov	sp, r7
 800fbca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbce:	4770      	bx	lr

0800fbd0 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800fbd0:	b480      	push	{r7}
 800fbd2:	b083      	sub	sp, #12
 800fbd4:	af00      	add	r7, sp, #0
 800fbd6:	6078      	str	r0, [r7, #4]
    {
 800fbd8:	4a04      	ldr	r2, [pc, #16]	; (800fbec <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800fbda:	687b      	ldr	r3, [r7, #4]
 800fbdc:	601a      	str	r2, [r3, #0]
    }
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	4618      	mov	r0, r3
 800fbe2:	370c      	adds	r7, #12
 800fbe4:	46bd      	mov	sp, r7
 800fbe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbea:	4770      	bx	lr
 800fbec:	0802f50c 	.word	0x0802f50c

0800fbf0 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800fbf0:	b580      	push	{r7, lr}
 800fbf2:	b082      	sub	sp, #8
 800fbf4:	af00      	add	r7, sp, #0
 800fbf6:	6078      	str	r0, [r7, #4]
    }
 800fbf8:	6878      	ldr	r0, [r7, #4]
 800fbfa:	f7ff ffe9 	bl	800fbd0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800fbfe:	2104      	movs	r1, #4
 800fc00:	6878      	ldr	r0, [r7, #4]
 800fc02:	f01b ff30 	bl	802ba66 <_ZdlPvj>
 800fc06:	687b      	ldr	r3, [r7, #4]
 800fc08:	4618      	mov	r0, r3
 800fc0a:	3708      	adds	r7, #8
 800fc0c:	46bd      	mov	sp, r7
 800fc0e:	bd80      	pop	{r7, pc}

0800fc10 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800fc10:	b580      	push	{r7, lr}
 800fc12:	b082      	sub	sp, #8
 800fc14:	af00      	add	r7, sp, #0
 800fc16:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800fc18:	687b      	ldr	r3, [r7, #4]
 800fc1a:	681b      	ldr	r3, [r3, #0]
 800fc1c:	3344      	adds	r3, #68	; 0x44
 800fc1e:	681b      	ldr	r3, [r3, #0]
 800fc20:	6878      	ldr	r0, [r7, #4]
 800fc22:	4798      	blx	r3
    }
 800fc24:	bf00      	nop
 800fc26:	3708      	adds	r7, #8
 800fc28:	46bd      	mov	sp, r7
 800fc2a:	bd80      	pop	{r7, pc}

0800fc2c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800fc2c:	b480      	push	{r7}
 800fc2e:	b083      	sub	sp, #12
 800fc30:	af00      	add	r7, sp, #0
 800fc32:	6078      	str	r0, [r7, #4]
    {
 800fc34:	4a04      	ldr	r2, [pc, #16]	; (800fc48 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800fc36:	687b      	ldr	r3, [r7, #4]
 800fc38:	601a      	str	r2, [r3, #0]
    }
 800fc3a:	687b      	ldr	r3, [r7, #4]
 800fc3c:	4618      	mov	r0, r3
 800fc3e:	370c      	adds	r7, #12
 800fc40:	46bd      	mov	sp, r7
 800fc42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc46:	4770      	bx	lr
 800fc48:	08030458 	.word	0x08030458

0800fc4c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800fc4c:	b580      	push	{r7, lr}
 800fc4e:	b082      	sub	sp, #8
 800fc50:	af00      	add	r7, sp, #0
 800fc52:	6078      	str	r0, [r7, #4]
    }
 800fc54:	6878      	ldr	r0, [r7, #4]
 800fc56:	f7ff ffe9 	bl	800fc2c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800fc5a:	210c      	movs	r1, #12
 800fc5c:	6878      	ldr	r0, [r7, #4]
 800fc5e:	f01b ff02 	bl	802ba66 <_ZdlPvj>
 800fc62:	687b      	ldr	r3, [r7, #4]
 800fc64:	4618      	mov	r0, r3
 800fc66:	3708      	adds	r7, #8
 800fc68:	46bd      	mov	sp, r7
 800fc6a:	bd80      	pop	{r7, pc}

0800fc6c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800fc6c:	b480      	push	{r7}
 800fc6e:	b083      	sub	sp, #12
 800fc70:	af00      	add	r7, sp, #0
 800fc72:	6078      	str	r0, [r7, #4]
 800fc74:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800fc76:	4a09      	ldr	r2, [pc, #36]	; (800fc9c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800fc78:	687b      	ldr	r3, [r7, #4]
 800fc7a:	601a      	str	r2, [r3, #0]
 800fc7c:	687b      	ldr	r3, [r7, #4]
 800fc7e:	683a      	ldr	r2, [r7, #0]
 800fc80:	605a      	str	r2, [r3, #4]
 800fc82:	687b      	ldr	r3, [r7, #4]
 800fc84:	2200      	movs	r2, #0
 800fc86:	721a      	strb	r2, [r3, #8]
 800fc88:	687b      	ldr	r3, [r7, #4]
 800fc8a:	2200      	movs	r2, #0
 800fc8c:	725a      	strb	r2, [r3, #9]
    {
    }
 800fc8e:	687b      	ldr	r3, [r7, #4]
 800fc90:	4618      	mov	r0, r3
 800fc92:	370c      	adds	r7, #12
 800fc94:	46bd      	mov	sp, r7
 800fc96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc9a:	4770      	bx	lr
 800fc9c:	08030458 	.word	0x08030458

0800fca0 <_ZN10STM32F7DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800fca0:	b480      	push	{r7}
 800fca2:	b083      	sub	sp, #12
 800fca4:	af00      	add	r7, sp, #0
 800fca6:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800fca8:	2301      	movs	r3, #1
    }
 800fcaa:	4618      	mov	r0, r3
 800fcac:	370c      	adds	r7, #12
 800fcae:	46bd      	mov	sp, r7
 800fcb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcb4:	4770      	bx	lr

0800fcb6 <_ZN10STM32F7DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800fcb6:	b580      	push	{r7, lr}
 800fcb8:	b082      	sub	sp, #8
 800fcba:	af00      	add	r7, sp, #0
 800fcbc:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800fcbe:	687a      	ldr	r2, [r7, #4]
 800fcc0:	687b      	ldr	r3, [r7, #4]
 800fcc2:	681b      	ldr	r3, [r3, #0]
 800fcc4:	3328      	adds	r3, #40	; 0x28
 800fcc6:	681b      	ldr	r3, [r3, #0]
 800fcc8:	4610      	mov	r0, r2
 800fcca:	4798      	blx	r3
    }
 800fccc:	bf00      	nop
 800fcce:	3708      	adds	r7, #8
 800fcd0:	46bd      	mov	sp, r7
 800fcd2:	bd80      	pop	{r7, pc}

0800fcd4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800fcd4:	b580      	push	{r7, lr}
 800fcd6:	b082      	sub	sp, #8
 800fcd8:	af00      	add	r7, sp, #0
 800fcda:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800fcdc:	687b      	ldr	r3, [r7, #4]
 800fcde:	685a      	ldr	r2, [r3, #4]
 800fce0:	687b      	ldr	r3, [r7, #4]
 800fce2:	685b      	ldr	r3, [r3, #4]
 800fce4:	681b      	ldr	r3, [r3, #0]
 800fce6:	3314      	adds	r3, #20
 800fce8:	681b      	ldr	r3, [r3, #0]
 800fcea:	4610      	mov	r0, r2
 800fcec:	4798      	blx	r3
    }
 800fcee:	bf00      	nop
 800fcf0:	3708      	adds	r7, #8
 800fcf2:	46bd      	mov	sp, r7
 800fcf4:	bd80      	pop	{r7, pc}

0800fcf6 <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 800fcf6:	b580      	push	{r7, lr}
 800fcf8:	b082      	sub	sp, #8
 800fcfa:	af00      	add	r7, sp, #0
 800fcfc:	6078      	str	r0, [r7, #4]
    (void)handle; // Unused argument
    HAL::getInstance()->signalDMAInterrupt();
 800fcfe:	f7f9 fccd 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 800fd02:	4603      	mov	r3, r0
 800fd04:	4618      	mov	r0, r3
 800fd06:	f7ff ffe5 	bl	800fcd4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800fd0a:	bf00      	nop
 800fd0c:	3708      	adds	r7, #8
 800fd0e:	46bd      	mov	sp, r7
 800fd10:	bd80      	pop	{r7, pc}

0800fd12 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800fd12:	b580      	push	{r7, lr}
 800fd14:	b082      	sub	sp, #8
 800fd16:	af00      	add	r7, sp, #0
 800fd18:	6078      	str	r0, [r7, #4]
 800fd1a:	687b      	ldr	r3, [r7, #4]
 800fd1c:	3318      	adds	r3, #24
 800fd1e:	4618      	mov	r0, r3
 800fd20:	f7ff ff48 	bl	800fbb4 <_ZN8touchgfx9colortypeC1Ev>
 800fd24:	687b      	ldr	r3, [r7, #4]
 800fd26:	4618      	mov	r0, r3
 800fd28:	3708      	adds	r7, #8
 800fd2a:	46bd      	mov	sp, r7
 800fd2c:	bd80      	pop	{r7, pc}
	...

0800fd30 <_ZN10STM32F7DMAC1Ev>:
}

STM32F7DMA::STM32F7DMA()
 800fd30:	b5b0      	push	{r4, r5, r7, lr}
 800fd32:	b082      	sub	sp, #8
 800fd34:	af00      	add	r7, sp, #0
 800fd36:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800fd38:	687a      	ldr	r2, [r7, #4]
 800fd3a:	687b      	ldr	r3, [r7, #4]
 800fd3c:	330c      	adds	r3, #12
 800fd3e:	4619      	mov	r1, r3
 800fd40:	4610      	mov	r0, r2
 800fd42:	f7ff ff93 	bl	800fc6c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800fd46:	4a0e      	ldr	r2, [pc, #56]	; (800fd80 <_ZN10STM32F7DMAC1Ev+0x50>)
 800fd48:	687b      	ldr	r3, [r7, #4]
 800fd4a:	601a      	str	r2, [r3, #0]
 800fd4c:	687b      	ldr	r3, [r7, #4]
 800fd4e:	f103 000c 	add.w	r0, r3, #12
 800fd52:	687b      	ldr	r3, [r7, #4]
 800fd54:	3320      	adds	r3, #32
 800fd56:	2260      	movs	r2, #96	; 0x60
 800fd58:	4619      	mov	r1, r3
 800fd5a:	f007 fdf7 	bl	801794c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800fd5e:	687b      	ldr	r3, [r7, #4]
 800fd60:	3320      	adds	r3, #32
 800fd62:	245f      	movs	r4, #95	; 0x5f
 800fd64:	461d      	mov	r5, r3
 800fd66:	2c00      	cmp	r4, #0
 800fd68:	db05      	blt.n	800fd76 <_ZN10STM32F7DMAC1Ev+0x46>
 800fd6a:	4628      	mov	r0, r5
 800fd6c:	f7ff ffd1 	bl	800fd12 <_ZN8touchgfx6BlitOpC1Ev>
 800fd70:	3520      	adds	r5, #32
 800fd72:	3c01      	subs	r4, #1
 800fd74:	e7f7      	b.n	800fd66 <_ZN10STM32F7DMAC1Ev+0x36>
{
}
 800fd76:	687b      	ldr	r3, [r7, #4]
 800fd78:	4618      	mov	r0, r3
 800fd7a:	3708      	adds	r7, #8
 800fd7c:	46bd      	mov	sp, r7
 800fd7e:	bdb0      	pop	{r4, r5, r7, pc}
 800fd80:	0802f4bc 	.word	0x0802f4bc

0800fd84 <_ZN10STM32F7DMAD1Ev>:

STM32F7DMA::~STM32F7DMA()
 800fd84:	b580      	push	{r7, lr}
 800fd86:	b082      	sub	sp, #8
 800fd88:	af00      	add	r7, sp, #0
 800fd8a:	6078      	str	r0, [r7, #4]
 800fd8c:	4a09      	ldr	r2, [pc, #36]	; (800fdb4 <_ZN10STM32F7DMAD1Ev+0x30>)
 800fd8e:	687b      	ldr	r3, [r7, #4]
 800fd90:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800fd92:	205a      	movs	r0, #90	; 0x5a
 800fd94:	f7ff feea 	bl	800fb6c <__NVIC_DisableIRQ>
STM32F7DMA::~STM32F7DMA()
 800fd98:	687b      	ldr	r3, [r7, #4]
 800fd9a:	330c      	adds	r3, #12
 800fd9c:	4618      	mov	r0, r3
 800fd9e:	f000 fb27 	bl	80103f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800fda2:	687b      	ldr	r3, [r7, #4]
 800fda4:	4618      	mov	r0, r3
 800fda6:	f7ff ff41 	bl	800fc2c <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 800fdaa:	687b      	ldr	r3, [r7, #4]
 800fdac:	4618      	mov	r0, r3
 800fdae:	3708      	adds	r7, #8
 800fdb0:	46bd      	mov	sp, r7
 800fdb2:	bd80      	pop	{r7, pc}
 800fdb4:	0802f4bc 	.word	0x0802f4bc

0800fdb8 <_ZN10STM32F7DMAD0Ev>:
STM32F7DMA::~STM32F7DMA()
 800fdb8:	b580      	push	{r7, lr}
 800fdba:	b082      	sub	sp, #8
 800fdbc:	af00      	add	r7, sp, #0
 800fdbe:	6078      	str	r0, [r7, #4]
}
 800fdc0:	6878      	ldr	r0, [r7, #4]
 800fdc2:	f7ff ffdf 	bl	800fd84 <_ZN10STM32F7DMAD1Ev>
 800fdc6:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 800fdca:	6878      	ldr	r0, [r7, #4]
 800fdcc:	f01b fe4b 	bl	802ba66 <_ZdlPvj>
 800fdd0:	687b      	ldr	r3, [r7, #4]
 800fdd2:	4618      	mov	r0, r3
 800fdd4:	3708      	adds	r7, #8
 800fdd6:	46bd      	mov	sp, r7
 800fdd8:	bd80      	pop	{r7, pc}
	...

0800fddc <_ZN10STM32F7DMA10initializeEv>:

void STM32F7DMA::initialize()
{
 800fddc:	b580      	push	{r7, lr}
 800fdde:	b084      	sub	sp, #16
 800fde0:	af00      	add	r7, sp, #0
 800fde2:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800fde4:	4b10      	ldr	r3, [pc, #64]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fde6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fde8:	4a0f      	ldr	r2, [pc, #60]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fdea:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800fdee:	6313      	str	r3, [r2, #48]	; 0x30
 800fdf0:	4b0d      	ldr	r3, [pc, #52]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fdf2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fdf4:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800fdf8:	60fb      	str	r3, [r7, #12]
 800fdfa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800fdfc:	4b0a      	ldr	r3, [pc, #40]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fdfe:	691b      	ldr	r3, [r3, #16]
 800fe00:	4a09      	ldr	r2, [pc, #36]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fe02:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800fe06:	6113      	str	r3, [r2, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800fe08:	4b07      	ldr	r3, [pc, #28]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fe0a:	691b      	ldr	r3, [r3, #16]
 800fe0c:	4a06      	ldr	r2, [pc, #24]	; (800fe28 <_ZN10STM32F7DMA10initializeEv+0x4c>)
 800fe0e:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800fe12:	6113      	str	r3, [r2, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800fe14:	4b05      	ldr	r3, [pc, #20]	; (800fe2c <_ZN10STM32F7DMA10initializeEv+0x50>)
 800fe16:	4a06      	ldr	r2, [pc, #24]	; (800fe30 <_ZN10STM32F7DMA10initializeEv+0x54>)
 800fe18:	611a      	str	r2, [r3, #16]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
 800fe1a:	205a      	movs	r0, #90	; 0x5a
 800fe1c:	f7ff fe88 	bl	800fb30 <__NVIC_EnableIRQ>
}
 800fe20:	bf00      	nop
 800fe22:	3710      	adds	r7, #16
 800fe24:	46bd      	mov	sp, r7
 800fe26:	bd80      	pop	{r7, pc}
 800fe28:	40023800 	.word	0x40023800
 800fe2c:	200001ac 	.word	0x200001ac
 800fe30:	0800fcf7 	.word	0x0800fcf7

0800fe34 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32F7DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800fe34:	b580      	push	{r7, lr}
 800fe36:	b084      	sub	sp, #16
 800fe38:	af00      	add	r7, sp, #0
 800fe3a:	6078      	str	r0, [r7, #4]
 800fe3c:	460b      	mov	r3, r1
 800fe3e:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800fe40:	2300      	movs	r3, #0
 800fe42:	60fb      	str	r3, [r7, #12]

    switch (format)
 800fe44:	78fb      	ldrb	r3, [r7, #3]
 800fe46:	2b0b      	cmp	r3, #11
 800fe48:	d826      	bhi.n	800fe98 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800fe4a:	a201      	add	r2, pc, #4	; (adr r2, 800fe50 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800fe4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fe50:	0800fe8d 	.word	0x0800fe8d
 800fe54:	0800fe87 	.word	0x0800fe87
 800fe58:	0800fe81 	.word	0x0800fe81
 800fe5c:	0800fe99 	.word	0x0800fe99
 800fe60:	0800fe99 	.word	0x0800fe99
 800fe64:	0800fe99 	.word	0x0800fe99
 800fe68:	0800fe99 	.word	0x0800fe99
 800fe6c:	0800fe93 	.word	0x0800fe93
 800fe70:	0800fe93 	.word	0x0800fe93
 800fe74:	0800fe93 	.word	0x0800fe93
 800fe78:	0800fe93 	.word	0x0800fe93
 800fe7c:	0800fe93 	.word	0x0800fe93
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800fe80:	2300      	movs	r3, #0
 800fe82:	60fb      	str	r3, [r7, #12]
        break;
 800fe84:	e00e      	b.n	800fea4 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800fe86:	2301      	movs	r3, #1
 800fe88:	60fb      	str	r3, [r7, #12]
        break;
 800fe8a:	e00b      	b.n	800fea4 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800fe8c:	2302      	movs	r3, #2
 800fe8e:	60fb      	str	r3, [r7, #12]
        break;
 800fe90:	e008      	b.n	800fea4 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800fe92:	2305      	movs	r3, #5
 800fe94:	60fb      	str	r3, [r7, #12]
        break;
 800fe96:	e005      	b.n	800fea4 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800fe98:	4b05      	ldr	r3, [pc, #20]	; (800feb0 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800fe9a:	4a06      	ldr	r2, [pc, #24]	; (800feb4 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800fe9c:	2165      	movs	r1, #101	; 0x65
 800fe9e:	4806      	ldr	r0, [pc, #24]	; (800feb8 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800fea0:	f01c f822 	bl	802bee8 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800fea4:	68fb      	ldr	r3, [r7, #12]
}
 800fea6:	4618      	mov	r0, r3
 800fea8:	3710      	adds	r7, #16
 800feaa:	46bd      	mov	sp, r7
 800feac:	bd80      	pop	{r7, pc}
 800feae:	bf00      	nop
 800feb0:	0802e0d8 	.word	0x0802e0d8
 800feb4:	0802e0f4 	.word	0x0802e0f4
 800feb8:	0802e140 	.word	0x0802e140

0800febc <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32F7DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800febc:	b580      	push	{r7, lr}
 800febe:	b084      	sub	sp, #16
 800fec0:	af00      	add	r7, sp, #0
 800fec2:	6078      	str	r0, [r7, #4]
 800fec4:	460b      	mov	r3, r1
 800fec6:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800fec8:	2300      	movs	r3, #0
 800feca:	60fb      	str	r3, [r7, #12]

    switch (format)
 800fecc:	78fb      	ldrb	r3, [r7, #3]
 800fece:	2b0a      	cmp	r3, #10
 800fed0:	d821      	bhi.n	800ff16 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800fed2:	a201      	add	r2, pc, #4	; (adr r2, 800fed8 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800fed4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fed8:	0800ff11 	.word	0x0800ff11
 800fedc:	0800ff0b 	.word	0x0800ff0b
 800fee0:	0800ff05 	.word	0x0800ff05
 800fee4:	0800ff17 	.word	0x0800ff17
 800fee8:	0800ff17 	.word	0x0800ff17
 800feec:	0800ff17 	.word	0x0800ff17
 800fef0:	0800ff17 	.word	0x0800ff17
 800fef4:	0800ff0b 	.word	0x0800ff0b
 800fef8:	0800ff0b 	.word	0x0800ff0b
 800fefc:	0800ff0b 	.word	0x0800ff0b
 800ff00:	0800ff0b 	.word	0x0800ff0b
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800ff04:	2300      	movs	r3, #0
 800ff06:	60fb      	str	r3, [r7, #12]
        break;
 800ff08:	e00b      	b.n	800ff22 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800ff0a:	2301      	movs	r3, #1
 800ff0c:	60fb      	str	r3, [r7, #12]
        break;
 800ff0e:	e008      	b.n	800ff22 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800ff10:	2302      	movs	r3, #2
 800ff12:	60fb      	str	r3, [r7, #12]
        break;
 800ff14:	e005      	b.n	800ff22 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800ff16:	4b05      	ldr	r3, [pc, #20]	; (800ff2c <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800ff18:	4a05      	ldr	r2, [pc, #20]	; (800ff30 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800ff1a:	2186      	movs	r1, #134	; 0x86
 800ff1c:	4805      	ldr	r0, [pc, #20]	; (800ff34 <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800ff1e:	f01b ffe3 	bl	802bee8 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800ff22:	68fb      	ldr	r3, [r7, #12]
}
 800ff24:	4618      	mov	r0, r3
 800ff26:	3710      	adds	r7, #16
 800ff28:	46bd      	mov	sp, r7
 800ff2a:	bd80      	pop	{r7, pc}
 800ff2c:	0802e0d8 	.word	0x0802e0d8
 800ff30:	0802e1bc 	.word	0x0802e1bc
 800ff34:	0802e140 	.word	0x0802e140

0800ff38 <_ZN10STM32F7DMA11getBlitCapsEv>:

BlitOperations STM32F7DMA::getBlitCaps()
{
 800ff38:	b480      	push	{r7}
 800ff3a:	b083      	sub	sp, #12
 800ff3c:	af00      	add	r7, sp, #0
 800ff3e:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800ff40:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 800ff44:	4618      	mov	r0, r3
 800ff46:	370c      	adds	r7, #12
 800ff48:	46bd      	mov	sp, r7
 800ff4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff4e:	4770      	bx	lr

0800ff50 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F7DMA::setupDataCopy(const BlitOp& blitOp)
{
 800ff50:	b590      	push	{r4, r7, lr}
 800ff52:	b089      	sub	sp, #36	; 0x24
 800ff54:	af00      	add	r7, sp, #0
 800ff56:	6078      	str	r0, [r7, #4]
 800ff58:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800ff5a:	683b      	ldr	r3, [r7, #0]
 800ff5c:	7f5b      	ldrb	r3, [r3, #29]
 800ff5e:	4619      	mov	r1, r3
 800ff60:	6878      	ldr	r0, [r7, #4]
 800ff62:	f7ff ff67 	bl	800fe34 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff66:	61f8      	str	r0, [r7, #28]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800ff68:	683b      	ldr	r3, [r7, #0]
 800ff6a:	7f9b      	ldrb	r3, [r3, #30]
 800ff6c:	4619      	mov	r1, r3
 800ff6e:	6878      	ldr	r0, [r7, #4]
 800ff70:	f7ff ff60 	bl	800fe34 <_ZN10STM32F7DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff74:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800ff76:	683b      	ldr	r3, [r7, #0]
 800ff78:	7f9b      	ldrb	r3, [r3, #30]
 800ff7a:	4619      	mov	r1, r3
 800ff7c:	6878      	ldr	r0, [r7, #4]
 800ff7e:	f7ff ff9d 	bl	800febc <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff82:	6178      	str	r0, [r7, #20]

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ff84:	683b      	ldr	r3, [r7, #0]
 800ff86:	8adb      	ldrh	r3, [r3, #22]
 800ff88:	461a      	mov	r2, r3
 800ff8a:	683b      	ldr	r3, [r7, #0]
 800ff8c:	8a1b      	ldrh	r3, [r3, #16]
 800ff8e:	1ad2      	subs	r2, r2, r3
 800ff90:	4b8b      	ldr	r3, [pc, #556]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ff92:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ff94:	683b      	ldr	r3, [r7, #0]
 800ff96:	8adb      	ldrh	r3, [r3, #22]
 800ff98:	461a      	mov	r2, r3
 800ff9a:	683b      	ldr	r3, [r7, #0]
 800ff9c:	8a1b      	ldrh	r3, [r3, #16]
 800ff9e:	1ad2      	subs	r2, r2, r3
 800ffa0:	4b87      	ldr	r3, [pc, #540]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffa2:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800ffa4:	683b      	ldr	r3, [r7, #0]
 800ffa6:	8a9b      	ldrh	r3, [r3, #20]
 800ffa8:	461a      	mov	r2, r3
 800ffaa:	683b      	ldr	r3, [r7, #0]
 800ffac:	8a1b      	ldrh	r3, [r3, #16]
 800ffae:	1ad2      	subs	r2, r2, r3
 800ffb0:	4b83      	ldr	r3, [pc, #524]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffb2:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800ffb4:	4a82      	ldr	r2, [pc, #520]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffb6:	697b      	ldr	r3, [r7, #20]
 800ffb8:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800ffba:	683b      	ldr	r3, [r7, #0]
 800ffbc:	8a5b      	ldrh	r3, [r3, #18]
 800ffbe:	461a      	mov	r2, r3
 800ffc0:	683b      	ldr	r3, [r7, #0]
 800ffc2:	8a1b      	ldrh	r3, [r3, #16]
 800ffc4:	041b      	lsls	r3, r3, #16
 800ffc6:	431a      	orrs	r2, r3
 800ffc8:	4b7d      	ldr	r3, [pc, #500]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffca:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800ffcc:	683b      	ldr	r3, [r7, #0]
 800ffce:	68da      	ldr	r2, [r3, #12]
 800ffd0:	4b7b      	ldr	r3, [pc, #492]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffd2:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800ffd4:	683b      	ldr	r3, [r7, #0]
 800ffd6:	685a      	ldr	r2, [r3, #4]
 800ffd8:	4b79      	ldr	r3, [pc, #484]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 800ffda:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800ffdc:	683b      	ldr	r3, [r7, #0]
 800ffde:	681b      	ldr	r3, [r3, #0]
 800ffe0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ffe4:	d046      	beq.n	8010074 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x124>
 800ffe6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ffea:	f200 80f9 	bhi.w	80101e0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
 800ffee:	2b80      	cmp	r3, #128	; 0x80
 800fff0:	d00e      	beq.n	8010010 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
 800fff2:	2b80      	cmp	r3, #128	; 0x80
 800fff4:	f200 80f4 	bhi.w	80101e0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
 800fff8:	2b40      	cmp	r3, #64	; 0x40
 800fffa:	f000 80cc 	beq.w	8010196 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 800fffe:	2b40      	cmp	r3, #64	; 0x40
 8010000:	f200 80ee 	bhi.w	80101e0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
 8010004:	2b04      	cmp	r3, #4
 8010006:	d067      	beq.n	80100d8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>
 8010008:	2b20      	cmp	r3, #32
 801000a:	f000 80c4 	beq.w	8010196 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 801000e:	e0e7      	b.n	80101e0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010010:	683b      	ldr	r3, [r7, #0]
 8010012:	7f1b      	ldrb	r3, [r3, #28]
 8010014:	061b      	lsls	r3, r3, #24
 8010016:	4619      	mov	r1, r3
 8010018:	4a69      	ldr	r2, [pc, #420]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801001a:	4b6a      	ldr	r3, [pc, #424]	; (80101c4 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x274>)
 801001c:	430b      	orrs	r3, r1
 801001e:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8010020:	683b      	ldr	r3, [r7, #0]
 8010022:	3318      	adds	r3, #24
 8010024:	4618      	mov	r0, r3
 8010026:	f7f9 ffc4 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 801002a:	4603      	mov	r3, r0
 801002c:	021b      	lsls	r3, r3, #8
 801002e:	f403 0478 	and.w	r4, r3, #16252928	; 0xf80000
 8010032:	683b      	ldr	r3, [r7, #0]
 8010034:	3318      	adds	r3, #24
 8010036:	4618      	mov	r0, r3
 8010038:	f7f9 ffbb 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 801003c:	4603      	mov	r3, r0
 801003e:	015b      	lsls	r3, r3, #5
 8010040:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
 8010044:	431c      	orrs	r4, r3
 8010046:	683b      	ldr	r3, [r7, #0]
 8010048:	3318      	adds	r3, #24
 801004a:	4618      	mov	r0, r3
 801004c:	f7f9 ffb1 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 8010050:	4603      	mov	r3, r0
 8010052:	00db      	lsls	r3, r3, #3
 8010054:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8010058:	4a59      	ldr	r2, [pc, #356]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801005a:	4323      	orrs	r3, r4
 801005c:	6213      	str	r3, [r2, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801005e:	4a58      	ldr	r2, [pc, #352]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010060:	69bb      	ldr	r3, [r7, #24]
 8010062:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010064:	683b      	ldr	r3, [r7, #0]
 8010066:	68da      	ldr	r2, [r3, #12]
 8010068:	4b55      	ldr	r3, [pc, #340]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801006a:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 801006c:	4b54      	ldr	r3, [pc, #336]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801006e:	4a56      	ldr	r2, [pc, #344]	; (80101c8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
 8010070:	601a      	str	r2, [r3, #0]
        break;
 8010072:	e0f6      	b.n	8010262 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010074:	683b      	ldr	r3, [r7, #0]
 8010076:	7f1b      	ldrb	r3, [r3, #28]
 8010078:	061b      	lsls	r3, r3, #24
 801007a:	4619      	mov	r1, r3
 801007c:	4a50      	ldr	r2, [pc, #320]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801007e:	4b53      	ldr	r3, [pc, #332]	; (80101cc <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27c>)
 8010080:	430b      	orrs	r3, r1
 8010082:	61d3      	str	r3, [r2, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8010084:	683b      	ldr	r3, [r7, #0]
 8010086:	3318      	adds	r3, #24
 8010088:	4618      	mov	r0, r3
 801008a:	f7f9 ff92 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 801008e:	4603      	mov	r3, r0
 8010090:	021b      	lsls	r3, r3, #8
 8010092:	f403 0478 	and.w	r4, r3, #16252928	; 0xf80000
 8010096:	683b      	ldr	r3, [r7, #0]
 8010098:	3318      	adds	r3, #24
 801009a:	4618      	mov	r0, r3
 801009c:	f7f9 ff89 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 80100a0:	4603      	mov	r3, r0
 80100a2:	015b      	lsls	r3, r3, #5
 80100a4:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
 80100a8:	431c      	orrs	r4, r3
 80100aa:	683b      	ldr	r3, [r7, #0]
 80100ac:	3318      	adds	r3, #24
 80100ae:	4618      	mov	r0, r3
 80100b0:	f7f9 ff7f 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 80100b4:	4603      	mov	r3, r0
 80100b6:	00db      	lsls	r3, r3, #3
 80100b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80100bc:	4a40      	ldr	r2, [pc, #256]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100be:	4323      	orrs	r3, r4
 80100c0:	6213      	str	r3, [r2, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80100c2:	4a3f      	ldr	r2, [pc, #252]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100c4:	69bb      	ldr	r3, [r7, #24]
 80100c6:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80100c8:	683b      	ldr	r3, [r7, #0]
 80100ca:	68da      	ldr	r2, [r3, #12]
 80100cc:	4b3c      	ldr	r3, [pc, #240]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100ce:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80100d0:	4b3b      	ldr	r3, [pc, #236]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100d2:	4a3d      	ldr	r2, [pc, #244]	; (80101c8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
 80100d4:	601a      	str	r2, [r3, #0]
        break;
 80100d6:	e0c4      	b.n	8010262 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80100d8:	683b      	ldr	r3, [r7, #0]
 80100da:	7f1b      	ldrb	r3, [r3, #28]
 80100dc:	061b      	lsls	r3, r3, #24
 80100de:	461a      	mov	r2, r3
 80100e0:	69fb      	ldr	r3, [r7, #28]
 80100e2:	4313      	orrs	r3, r2
 80100e4:	4a36      	ldr	r2, [pc, #216]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100e6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80100ea:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80100ec:	4a34      	ldr	r2, [pc, #208]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100ee:	69bb      	ldr	r3, [r7, #24]
 80100f0:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80100f2:	683b      	ldr	r3, [r7, #0]
 80100f4:	68da      	ldr	r2, [r3, #12]
 80100f6:	4b32      	ldr	r3, [pc, #200]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80100f8:	615a      	str	r2, [r3, #20]

        if (blitOp.srcFormat == Bitmap::L8)
 80100fa:	683b      	ldr	r3, [r7, #0]
 80100fc:	7f5b      	ldrb	r3, [r3, #29]
 80100fe:	2b0b      	cmp	r3, #11
 8010100:	d145      	bne.n	801018e <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x23e>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8010102:	683b      	ldr	r3, [r7, #0]
 8010104:	689b      	ldr	r3, [r3, #8]
 8010106:	613b      	str	r3, [r7, #16]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8010108:	693b      	ldr	r3, [r7, #16]
 801010a:	1d1a      	adds	r2, r3, #4
 801010c:	4b2c      	ldr	r3, [pc, #176]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801010e:	62da      	str	r2, [r3, #44]	; 0x2c

            switch ((Bitmap::ClutFormat)palette->format)
 8010110:	693b      	ldr	r3, [r7, #16]
 8010112:	881b      	ldrh	r3, [r3, #0]
 8010114:	b2db      	uxtb	r3, r3
 8010116:	2b00      	cmp	r3, #0
 8010118:	d002      	beq.n	8010120 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>
 801011a:	2b01      	cmp	r3, #1
 801011c:	d00d      	beq.n	801013a <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ea>
 801011e:	e01a      	b.n	8010156 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x206>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8010120:	4b27      	ldr	r3, [pc, #156]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010122:	69da      	ldr	r2, [r3, #28]
 8010124:	4b2a      	ldr	r3, [pc, #168]	; (80101d0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x280>)
 8010126:	4013      	ands	r3, r2
 8010128:	693a      	ldr	r2, [r7, #16]
 801012a:	8852      	ldrh	r2, [r2, #2]
 801012c:	3a01      	subs	r2, #1
 801012e:	0212      	lsls	r2, r2, #8
 8010130:	4611      	mov	r1, r2
 8010132:	4a23      	ldr	r2, [pc, #140]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010134:	430b      	orrs	r3, r1
 8010136:	61d3      	str	r3, [r2, #28]
                break;
 8010138:	e013      	b.n	8010162 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x212>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 801013a:	4b21      	ldr	r3, [pc, #132]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801013c:	69da      	ldr	r2, [r3, #28]
 801013e:	4b24      	ldr	r3, [pc, #144]	; (80101d0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x280>)
 8010140:	4013      	ands	r3, r2
 8010142:	693a      	ldr	r2, [r7, #16]
 8010144:	8852      	ldrh	r2, [r2, #2]
 8010146:	3a01      	subs	r2, #1
 8010148:	0212      	lsls	r2, r2, #8
 801014a:	4313      	orrs	r3, r2
 801014c:	4a1c      	ldr	r2, [pc, #112]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801014e:	f043 0310 	orr.w	r3, r3, #16
 8010152:	61d3      	str	r3, [r2, #28]
                break;
 8010154:	e005      	b.n	8010162 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x212>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 8010156:	4b1f      	ldr	r3, [pc, #124]	; (80101d4 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x284>)
 8010158:	4a1f      	ldr	r2, [pc, #124]	; (80101d8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>)
 801015a:	21fc      	movs	r1, #252	; 0xfc
 801015c:	481f      	ldr	r0, [pc, #124]	; (80101dc <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x28c>)
 801015e:	f01b fec3 	bl	802bee8 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8010162:	4b17      	ldr	r3, [pc, #92]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010164:	69db      	ldr	r3, [r3, #28]
 8010166:	4a16      	ldr	r2, [pc, #88]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010168:	f043 0320 	orr.w	r3, r3, #32
 801016c:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 801016e:	4b14      	ldr	r3, [pc, #80]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010170:	69db      	ldr	r3, [r3, #28]
 8010172:	f003 0320 	and.w	r3, r3, #32
 8010176:	2b00      	cmp	r3, #0
 8010178:	bf14      	ite	ne
 801017a:	2301      	movne	r3, #1
 801017c:	2300      	moveq	r3, #0
 801017e:	b2db      	uxtb	r3, r3
 8010180:	2b00      	cmp	r3, #0
 8010182:	d001      	beq.n	8010188 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x238>
            {
                __NOP();
 8010184:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8010186:	e7f2      	b.n	801016e <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x21e>
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8010188:	4b0d      	ldr	r3, [pc, #52]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 801018a:	2210      	movs	r2, #16
 801018c:	609a      	str	r2, [r3, #8]
        }

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 801018e:	4b0c      	ldr	r3, [pc, #48]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 8010190:	4a0d      	ldr	r2, [pc, #52]	; (80101c8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
 8010192:	601a      	str	r2, [r3, #0]
        break;
 8010194:	e065      	b.n	8010262 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010196:	683b      	ldr	r3, [r7, #0]
 8010198:	7f1b      	ldrb	r3, [r3, #28]
 801019a:	061b      	lsls	r3, r3, #24
 801019c:	461a      	mov	r2, r3
 801019e:	69fb      	ldr	r3, [r7, #28]
 80101a0:	4313      	orrs	r3, r2
 80101a2:	4a07      	ldr	r2, [pc, #28]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80101a4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80101a8:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80101aa:	4a05      	ldr	r2, [pc, #20]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80101ac:	69bb      	ldr	r3, [r7, #24]
 80101ae:	6253      	str	r3, [r2, #36]	; 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80101b0:	683b      	ldr	r3, [r7, #0]
 80101b2:	68da      	ldr	r2, [r3, #12]
 80101b4:	4b02      	ldr	r3, [pc, #8]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80101b6:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80101b8:	4b01      	ldr	r3, [pc, #4]	; (80101c0 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x270>)
 80101ba:	4a03      	ldr	r2, [pc, #12]	; (80101c8 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x278>)
 80101bc:	601a      	str	r2, [r3, #0]
        break;
 80101be:	e050      	b.n	8010262 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x312>
 80101c0:	4002b000 	.word	0x4002b000
 80101c4:	0002000a 	.word	0x0002000a
 80101c8:	00020201 	.word	0x00020201
 80101cc:	00020009 	.word	0x00020009
 80101d0:	ffff00ef 	.word	0xffff00ef
 80101d4:	0802e20c 	.word	0x0802e20c
 80101d8:	0802e228 	.word	0x0802e228
 80101dc:	0802e140 	.word	0x0802e140
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80101e0:	683b      	ldr	r3, [r7, #0]
 80101e2:	7f1b      	ldrb	r3, [r3, #28]
 80101e4:	061b      	lsls	r3, r3, #24
 80101e6:	461a      	mov	r2, r3
 80101e8:	69fb      	ldr	r3, [r7, #28]
 80101ea:	4313      	orrs	r3, r2
 80101ec:	4a1f      	ldr	r2, [pc, #124]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 80101ee:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80101f2:	61d3      	str	r3, [r2, #28]

        if (blitOp.srcFormat == Bitmap::L8)
 80101f4:	683b      	ldr	r3, [r7, #0]
 80101f6:	7f5b      	ldrb	r3, [r3, #29]
 80101f8:	2b0b      	cmp	r3, #11
 80101fa:	d12d      	bne.n	8010258 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x308>
        {
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80101fc:	683b      	ldr	r3, [r7, #0]
 80101fe:	689b      	ldr	r3, [r3, #8]
 8010200:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8010202:	68fb      	ldr	r3, [r7, #12]
 8010204:	1d1a      	adds	r2, r3, #4
 8010206:	4b19      	ldr	r3, [pc, #100]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 8010208:	62da      	str	r2, [r3, #44]	; 0x2c

            /* Write foreground CLUT size and CLUT color mode */
            MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 801020a:	4b18      	ldr	r3, [pc, #96]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 801020c:	69da      	ldr	r2, [r3, #28]
 801020e:	4b18      	ldr	r3, [pc, #96]	; (8010270 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x320>)
 8010210:	4013      	ands	r3, r2
 8010212:	68fa      	ldr	r2, [r7, #12]
 8010214:	8852      	ldrh	r2, [r2, #2]
 8010216:	3a01      	subs	r2, #1
 8010218:	0212      	lsls	r2, r2, #8
 801021a:	4313      	orrs	r3, r2
 801021c:	4a13      	ldr	r2, [pc, #76]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 801021e:	f043 0310 	orr.w	r3, r3, #16
 8010222:	61d3      	str	r3, [r2, #28]

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8010224:	4b11      	ldr	r3, [pc, #68]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 8010226:	69db      	ldr	r3, [r3, #28]
 8010228:	4a10      	ldr	r2, [pc, #64]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 801022a:	f043 0320 	orr.w	r3, r3, #32
 801022e:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8010230:	4b0e      	ldr	r3, [pc, #56]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 8010232:	69db      	ldr	r3, [r3, #28]
 8010234:	f003 0320 	and.w	r3, r3, #32
 8010238:	2b00      	cmp	r3, #0
 801023a:	bf14      	ite	ne
 801023c:	2301      	movne	r3, #1
 801023e:	2300      	moveq	r3, #0
 8010240:	b2db      	uxtb	r3, r3
 8010242:	2b00      	cmp	r3, #0
 8010244:	d001      	beq.n	801024a <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2fa>
            {
                __NOP();
 8010246:	bf00      	nop
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8010248:	e7f2      	b.n	8010230 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2e0>
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 801024a:	4b08      	ldr	r3, [pc, #32]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 801024c:	2210      	movs	r2, #16
 801024e:	609a      	str	r2, [r3, #8]
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8010250:	4b06      	ldr	r3, [pc, #24]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 8010252:	4a08      	ldr	r2, [pc, #32]	; (8010274 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x324>)
 8010254:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
        }
        break;
 8010256:	e003      	b.n	8010260 <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x310>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8010258:	4b04      	ldr	r3, [pc, #16]	; (801026c <_ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x31c>)
 801025a:	f240 2201 	movw	r2, #513	; 0x201
 801025e:	601a      	str	r2, [r3, #0]
        break;
 8010260:	bf00      	nop
    }
}
 8010262:	bf00      	nop
 8010264:	3724      	adds	r7, #36	; 0x24
 8010266:	46bd      	mov	sp, r7
 8010268:	bd90      	pop	{r4, r7, pc}
 801026a:	bf00      	nop
 801026c:	4002b000 	.word	0x4002b000
 8010270:	ffff00ef 	.word	0xffff00ef
 8010274:	00010201 	.word	0x00010201

08010278 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F7DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F7DMA::setupDataFill(const BlitOp& blitOp)
{
 8010278:	b590      	push	{r4, r7, lr}
 801027a:	b085      	sub	sp, #20
 801027c:	af00      	add	r7, sp, #0
 801027e:	6078      	str	r0, [r7, #4]
 8010280:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8010282:	683b      	ldr	r3, [r7, #0]
 8010284:	7f9b      	ldrb	r3, [r3, #30]
 8010286:	4619      	mov	r1, r3
 8010288:	6878      	ldr	r0, [r7, #4]
 801028a:	f7ff fe17 	bl	800febc <_ZN10STM32F7DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 801028e:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8010290:	4a53      	ldr	r2, [pc, #332]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 8010292:	68fb      	ldr	r3, [r7, #12]
 8010294:	6353      	str	r3, [r2, #52]	; 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8010296:	683b      	ldr	r3, [r7, #0]
 8010298:	8a5b      	ldrh	r3, [r3, #18]
 801029a:	461a      	mov	r2, r3
 801029c:	683b      	ldr	r3, [r7, #0]
 801029e:	8a1b      	ldrh	r3, [r3, #16]
 80102a0:	041b      	lsls	r3, r3, #16
 80102a2:	431a      	orrs	r2, r3
 80102a4:	4b4e      	ldr	r3, [pc, #312]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102a6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80102a8:	683b      	ldr	r3, [r7, #0]
 80102aa:	68da      	ldr	r2, [r3, #12]
 80102ac:	4b4c      	ldr	r3, [pc, #304]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102ae:	63da      	str	r2, [r3, #60]	; 0x3c

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80102b0:	683b      	ldr	r3, [r7, #0]
 80102b2:	8adb      	ldrh	r3, [r3, #22]
 80102b4:	461a      	mov	r2, r3
 80102b6:	683b      	ldr	r3, [r7, #0]
 80102b8:	8a1b      	ldrh	r3, [r3, #16]
 80102ba:	1ad2      	subs	r2, r2, r3
 80102bc:	4b48      	ldr	r3, [pc, #288]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102be:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80102c0:	683b      	ldr	r3, [r7, #0]
 80102c2:	681b      	ldr	r3, [r3, #0]
 80102c4:	2b08      	cmp	r3, #8
 80102c6:	d14c      	bne.n	8010362 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0xea>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80102c8:	683b      	ldr	r3, [r7, #0]
 80102ca:	8adb      	ldrh	r3, [r3, #22]
 80102cc:	461a      	mov	r2, r3
 80102ce:	683b      	ldr	r3, [r7, #0]
 80102d0:	8a1b      	ldrh	r3, [r3, #16]
 80102d2:	1ad2      	subs	r2, r2, r3
 80102d4:	4b42      	ldr	r3, [pc, #264]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102d6:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80102d8:	683b      	ldr	r3, [r7, #0]
 80102da:	8adb      	ldrh	r3, [r3, #22]
 80102dc:	461a      	mov	r2, r3
 80102de:	683b      	ldr	r3, [r7, #0]
 80102e0:	8a1b      	ldrh	r3, [r3, #16]
 80102e2:	1ad2      	subs	r2, r2, r3
 80102e4:	4b3e      	ldr	r3, [pc, #248]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102e6:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80102e8:	4a3d      	ldr	r2, [pc, #244]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102ea:	68fb      	ldr	r3, [r7, #12]
 80102ec:	6253      	str	r3, [r2, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 80102ee:	683b      	ldr	r3, [r7, #0]
 80102f0:	7f1b      	ldrb	r3, [r3, #28]
 80102f2:	061b      	lsls	r3, r3, #24
 80102f4:	4619      	mov	r1, r3
 80102f6:	4a3a      	ldr	r2, [pc, #232]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80102f8:	4b3a      	ldr	r3, [pc, #232]	; (80103e4 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x16c>)
 80102fa:	430b      	orrs	r3, r1
 80102fc:	61d3      	str	r3, [r2, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 80102fe:	683b      	ldr	r3, [r7, #0]
 8010300:	7f1b      	ldrb	r3, [r3, #28]
 8010302:	061b      	lsls	r3, r3, #24
 8010304:	461c      	mov	r4, r3
 8010306:	683b      	ldr	r3, [r7, #0]
 8010308:	3318      	adds	r3, #24
 801030a:	4618      	mov	r0, r3
 801030c:	f7f9 fe51 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 8010310:	4603      	mov	r3, r0
 8010312:	021b      	lsls	r3, r3, #8
 8010314:	f403 0378 	and.w	r3, r3, #16252928	; 0xf80000
 8010318:	431c      	orrs	r4, r3
 801031a:	683b      	ldr	r3, [r7, #0]
 801031c:	3318      	adds	r3, #24
 801031e:	4618      	mov	r0, r3
 8010320:	f7f9 fe47 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 8010324:	4603      	mov	r3, r0
 8010326:	015b      	lsls	r3, r3, #5
 8010328:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
 801032c:	431c      	orrs	r4, r3
 801032e:	683b      	ldr	r3, [r7, #0]
 8010330:	3318      	adds	r3, #24
 8010332:	4618      	mov	r0, r3
 8010334:	f7f9 fe3d 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 8010338:	4603      	mov	r3, r0
 801033a:	00db      	lsls	r3, r3, #3
 801033c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8010340:	4323      	orrs	r3, r4
 8010342:	4a27      	ldr	r2, [pc, #156]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 8010344:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8010348:	6213      	str	r3, [r2, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 801034a:	683b      	ldr	r3, [r7, #0]
 801034c:	68da      	ldr	r2, [r3, #12]
 801034e:	4b24      	ldr	r3, [pc, #144]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 8010350:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010352:	683b      	ldr	r3, [r7, #0]
 8010354:	68da      	ldr	r2, [r3, #12]
 8010356:	4b22      	ldr	r3, [pc, #136]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 8010358:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 801035a:	4b21      	ldr	r3, [pc, #132]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 801035c:	4a22      	ldr	r2, [pc, #136]	; (80103e8 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x170>)
 801035e:	601a      	str	r2, [r3, #0]
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
    }
}
 8010360:	e039      	b.n	80103d6 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x15e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010362:	4a1f      	ldr	r2, [pc, #124]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 8010364:	68fb      	ldr	r3, [r7, #12]
 8010366:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8010368:	4b1d      	ldr	r3, [pc, #116]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 801036a:	2200      	movs	r2, #0
 801036c:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 801036e:	683b      	ldr	r3, [r7, #0]
 8010370:	7f9b      	ldrb	r3, [r3, #30]
 8010372:	2b00      	cmp	r3, #0
 8010374:	d108      	bne.n	8010388 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8010376:	683b      	ldr	r3, [r7, #0]
 8010378:	3318      	adds	r3, #24
 801037a:	4c19      	ldr	r4, [pc, #100]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 801037c:	4618      	mov	r0, r3
 801037e:	f7f9 fe18 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 8010382:	4603      	mov	r3, r0
 8010384:	63a3      	str	r3, [r4, #56]	; 0x38
 8010386:	e023      	b.n	80103d0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x158>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8010388:	683b      	ldr	r3, [r7, #0]
 801038a:	7f1b      	ldrb	r3, [r3, #28]
 801038c:	061b      	lsls	r3, r3, #24
 801038e:	461c      	mov	r4, r3
 8010390:	683b      	ldr	r3, [r7, #0]
 8010392:	3318      	adds	r3, #24
 8010394:	4618      	mov	r0, r3
 8010396:	f7f9 fe0c 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 801039a:	4603      	mov	r3, r0
 801039c:	021b      	lsls	r3, r3, #8
 801039e:	f403 0378 	and.w	r3, r3, #16252928	; 0xf80000
 80103a2:	431c      	orrs	r4, r3
 80103a4:	683b      	ldr	r3, [r7, #0]
 80103a6:	3318      	adds	r3, #24
 80103a8:	4618      	mov	r0, r3
 80103aa:	f7f9 fe02 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 80103ae:	4603      	mov	r3, r0
 80103b0:	015b      	lsls	r3, r3, #5
 80103b2:	f403 437c 	and.w	r3, r3, #64512	; 0xfc00
 80103b6:	431c      	orrs	r4, r3
 80103b8:	683b      	ldr	r3, [r7, #0]
 80103ba:	3318      	adds	r3, #24
 80103bc:	4618      	mov	r0, r3
 80103be:	f7f9 fdf8 	bl	8009fb2 <_ZNK8touchgfx9colortypecvmEv>
 80103c2:	4603      	mov	r3, r0
 80103c4:	00db      	lsls	r3, r3, #3
 80103c6:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80103ca:	4a05      	ldr	r2, [pc, #20]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80103cc:	4323      	orrs	r3, r4
 80103ce:	6393      	str	r3, [r2, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80103d0:	4b03      	ldr	r3, [pc, #12]	; (80103e0 <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x168>)
 80103d2:	4a06      	ldr	r2, [pc, #24]	; (80103ec <_ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE+0x174>)
 80103d4:	601a      	str	r2, [r3, #0]
}
 80103d6:	bf00      	nop
 80103d8:	3714      	adds	r7, #20
 80103da:	46bd      	mov	sp, r7
 80103dc:	bd90      	pop	{r4, r7, pc}
 80103de:	bf00      	nop
 80103e0:	4002b000 	.word	0x4002b000
 80103e4:	00010009 	.word	0x00010009
 80103e8:	00020201 	.word	0x00020201
 80103ec:	00030201 	.word	0x00030201

080103f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80103f0:	b580      	push	{r7, lr}
 80103f2:	b082      	sub	sp, #8
 80103f4:	af00      	add	r7, sp, #0
 80103f6:	6078      	str	r0, [r7, #4]
 80103f8:	4a05      	ldr	r2, [pc, #20]	; (8010410 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80103fa:	687b      	ldr	r3, [r7, #4]
 80103fc:	601a      	str	r2, [r3, #0]
 80103fe:	687b      	ldr	r3, [r7, #4]
 8010400:	4618      	mov	r0, r3
 8010402:	f7ff fbe5 	bl	800fbd0 <_ZN8touchgfx9DMA_QueueD1Ev>
 8010406:	687b      	ldr	r3, [r7, #4]
 8010408:	4618      	mov	r0, r3
 801040a:	3708      	adds	r7, #8
 801040c:	46bd      	mov	sp, r7
 801040e:	bd80      	pop	{r7, pc}
 8010410:	080304a8 	.word	0x080304a8

08010414 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010414:	b580      	push	{r7, lr}
 8010416:	b082      	sub	sp, #8
 8010418:	af00      	add	r7, sp, #0
 801041a:	6078      	str	r0, [r7, #4]
 801041c:	6878      	ldr	r0, [r7, #4]
 801041e:	f7ff ffe7 	bl	80103f0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010422:	2114      	movs	r1, #20
 8010424:	6878      	ldr	r0, [r7, #4]
 8010426:	f01b fb1e 	bl	802ba66 <_ZdlPvj>
 801042a:	687b      	ldr	r3, [r7, #4]
 801042c:	4618      	mov	r0, r3
 801042e:	3708      	adds	r7, #8
 8010430:	46bd      	mov	sp, r7
 8010432:	bd80      	pop	{r7, pc}

08010434 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
    static void registerTexts(const Texts* t)
 8010434:	b480      	push	{r7}
 8010436:	b083      	sub	sp, #12
 8010438:	af00      	add	r7, sp, #0
 801043a:	6078      	str	r0, [r7, #4]
        texts = t;
 801043c:	4a04      	ldr	r2, [pc, #16]	; (8010450 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 801043e:	687b      	ldr	r3, [r7, #4]
 8010440:	6013      	str	r3, [r2, #0]
    }
 8010442:	bf00      	nop
 8010444:	370c      	adds	r7, #12
 8010446:	46bd      	mov	sp, r7
 8010448:	f85d 7b04 	ldr.w	r7, [sp], #4
 801044c:	4770      	bx	lr
 801044e:	bf00      	nop
 8010450:	200041e4 	.word	0x200041e4

08010454 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010454:	b480      	push	{r7}
 8010456:	b085      	sub	sp, #20
 8010458:	af00      	add	r7, sp, #0
 801045a:	60f8      	str	r0, [r7, #12]
 801045c:	60b9      	str	r1, [r7, #8]
 801045e:	607a      	str	r2, [r7, #4]
 8010460:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010462:	4a0b      	ldr	r2, [pc, #44]	; (8010490 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010464:	68fb      	ldr	r3, [r7, #12]
 8010466:	601a      	str	r2, [r3, #0]
 8010468:	68fb      	ldr	r3, [r7, #12]
 801046a:	68ba      	ldr	r2, [r7, #8]
 801046c:	605a      	str	r2, [r3, #4]
 801046e:	68fb      	ldr	r3, [r7, #12]
 8010470:	687a      	ldr	r2, [r7, #4]
 8010472:	609a      	str	r2, [r3, #8]
 8010474:	68fb      	ldr	r3, [r7, #12]
 8010476:	683a      	ldr	r2, [r7, #0]
 8010478:	60da      	str	r2, [r3, #12]
 801047a:	68fb      	ldr	r3, [r7, #12]
 801047c:	69ba      	ldr	r2, [r7, #24]
 801047e:	611a      	str	r2, [r3, #16]
    {
    }
 8010480:	68fb      	ldr	r3, [r7, #12]
 8010482:	4618      	mov	r0, r3
 8010484:	3714      	adds	r7, #20
 8010486:	46bd      	mov	sp, r7
 8010488:	f85d 7b04 	ldr.w	r7, [sp], #4
 801048c:	4770      	bx	lr
 801048e:	bf00      	nop
 8010490:	0802f5f4 	.word	0x0802f5f4

08010494 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010494:	b480      	push	{r7}
 8010496:	b083      	sub	sp, #12
 8010498:	af00      	add	r7, sp, #0
 801049a:	6078      	str	r0, [r7, #4]
    {
 801049c:	4a04      	ldr	r2, [pc, #16]	; (80104b0 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 801049e:	687b      	ldr	r3, [r7, #4]
 80104a0:	601a      	str	r2, [r3, #0]
    }
 80104a2:	687b      	ldr	r3, [r7, #4]
 80104a4:	4618      	mov	r0, r3
 80104a6:	370c      	adds	r7, #12
 80104a8:	46bd      	mov	sp, r7
 80104aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104ae:	4770      	bx	lr
 80104b0:	0802f5f4 	.word	0x0802f5f4

080104b4 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 80104b4:	b580      	push	{r7, lr}
 80104b6:	b082      	sub	sp, #8
 80104b8:	af00      	add	r7, sp, #0
 80104ba:	6078      	str	r0, [r7, #4]
    }
 80104bc:	6878      	ldr	r0, [r7, #4]
 80104be:	f7ff ffe9 	bl	8010494 <_ZN8touchgfx7MVPHeapD1Ev>
 80104c2:	2114      	movs	r1, #20
 80104c4:	6878      	ldr	r0, [r7, #4]
 80104c6:	f01b face 	bl	802ba66 <_ZdlPvj>
 80104ca:	687b      	ldr	r3, [r7, #4]
 80104cc:	4618      	mov	r0, r3
 80104ce:	3708      	adds	r7, #8
 80104d0:	46bd      	mov	sp, r7
 80104d2:	bd80      	pop	{r7, pc}

080104d4 <_ZN8touchgfx3LCDD1Ev>:
 */
class LCD
{
public:
    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 80104d4:	b480      	push	{r7}
 80104d6:	b083      	sub	sp, #12
 80104d8:	af00      	add	r7, sp, #0
 80104da:	6078      	str	r0, [r7, #4]
    {
 80104dc:	4a04      	ldr	r2, [pc, #16]	; (80104f0 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 80104de:	687b      	ldr	r3, [r7, #4]
 80104e0:	601a      	str	r2, [r3, #0]
    }
 80104e2:	687b      	ldr	r3, [r7, #4]
 80104e4:	4618      	mov	r0, r3
 80104e6:	370c      	adds	r7, #12
 80104e8:	46bd      	mov	sp, r7
 80104ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104ee:	4770      	bx	lr
 80104f0:	0803135c 	.word	0x0803135c

080104f4 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 80104f4:	b580      	push	{r7, lr}
 80104f6:	b082      	sub	sp, #8
 80104f8:	af00      	add	r7, sp, #0
 80104fa:	6078      	str	r0, [r7, #4]
    }
 80104fc:	6878      	ldr	r0, [r7, #4]
 80104fe:	f7ff ffe9 	bl	80104d4 <_ZN8touchgfx3LCDD1Ev>
 8010502:	2108      	movs	r1, #8
 8010504:	6878      	ldr	r0, [r7, #4]
 8010506:	f01b faae 	bl	802ba66 <_ZdlPvj>
 801050a:	687b      	ldr	r3, [r7, #4]
 801050c:	4618      	mov	r0, r3
 801050e:	3708      	adds	r7, #8
 8010510:	46bd      	mov	sp, r7
 8010512:	bd80      	pop	{r7, pc}

08010514 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8010514:	b480      	push	{r7}
 8010516:	b083      	sub	sp, #12
 8010518:	af00      	add	r7, sp, #0
 801051a:	6078      	str	r0, [r7, #4]
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 801051c:	687b      	ldr	r3, [r7, #4]
 801051e:	2200      	movs	r2, #0
 8010520:	801a      	strh	r2, [r3, #0]
 8010522:	687b      	ldr	r3, [r7, #4]
 8010524:	2200      	movs	r2, #0
 8010526:	805a      	strh	r2, [r3, #2]
 8010528:	687b      	ldr	r3, [r7, #4]
 801052a:	2200      	movs	r2, #0
 801052c:	809a      	strh	r2, [r3, #4]
 801052e:	687b      	ldr	r3, [r7, #4]
 8010530:	2200      	movs	r2, #0
 8010532:	80da      	strh	r2, [r3, #6]
 8010534:	687b      	ldr	r3, [r7, #4]
 8010536:	2200      	movs	r2, #0
 8010538:	811a      	strh	r2, [r3, #8]
 801053a:	687b      	ldr	r3, [r7, #4]
 801053c:	2200      	movs	r2, #0
 801053e:	815a      	strh	r2, [r3, #10]
 8010540:	687b      	ldr	r3, [r7, #4]
 8010542:	2200      	movs	r2, #0
 8010544:	819a      	strh	r2, [r3, #12]
 8010546:	687b      	ldr	r3, [r7, #4]
 8010548:	2200      	movs	r2, #0
 801054a:	739a      	strb	r2, [r3, #14]
        {
        }
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	4618      	mov	r0, r3
 8010550:	370c      	adds	r7, #12
 8010552:	46bd      	mov	sp, r7
 8010554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010558:	4770      	bx	lr

0801055a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 801055a:	b580      	push	{r7, lr}
 801055c:	b082      	sub	sp, #8
 801055e:	af00      	add	r7, sp, #0
 8010560:	6078      	str	r0, [r7, #4]
        : listener(0), dragThresholdValue(0)
 8010562:	687b      	ldr	r3, [r7, #4]
 8010564:	4618      	mov	r0, r3
 8010566:	f7ff ffd5 	bl	8010514 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 801056a:	687b      	ldr	r3, [r7, #4]
 801056c:	2200      	movs	r2, #0
 801056e:	611a      	str	r2, [r3, #16]
 8010570:	687b      	ldr	r3, [r7, #4]
 8010572:	2200      	movs	r2, #0
 8010574:	829a      	strh	r2, [r3, #20]
    {
    }
 8010576:	687b      	ldr	r3, [r7, #4]
 8010578:	4618      	mov	r0, r3
 801057a:	3708      	adds	r7, #8
 801057c:	46bd      	mov	sp, r7
 801057e:	bd80      	pop	{r7, pc}

08010580 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010580:	b580      	push	{r7, lr}
 8010582:	b084      	sub	sp, #16
 8010584:	af00      	add	r7, sp, #0
 8010586:	60f8      	str	r0, [r7, #12]
 8010588:	60b9      	str	r1, [r7, #8]
 801058a:	607a      	str	r2, [r7, #4]
 801058c:	603b      	str	r3, [r7, #0]
          lastRenderVariant(HARDWARE)
 801058e:	4a4a      	ldr	r2, [pc, #296]	; (80106b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 8010590:	68fb      	ldr	r3, [r7, #12]
 8010592:	601a      	str	r2, [r3, #0]
 8010594:	68fb      	ldr	r3, [r7, #12]
 8010596:	68ba      	ldr	r2, [r7, #8]
 8010598:	605a      	str	r2, [r3, #4]
 801059a:	68fb      	ldr	r3, [r7, #12]
 801059c:	687a      	ldr	r2, [r7, #4]
 801059e:	609a      	str	r2, [r3, #8]
 80105a0:	68fb      	ldr	r3, [r7, #12]
 80105a2:	683a      	ldr	r2, [r7, #0]
 80105a4:	60da      	str	r2, [r3, #12]
 80105a6:	68fb      	ldr	r3, [r7, #12]
 80105a8:	2200      	movs	r2, #0
 80105aa:	611a      	str	r2, [r3, #16]
 80105ac:	68fb      	ldr	r3, [r7, #12]
 80105ae:	2200      	movs	r2, #0
 80105b0:	615a      	str	r2, [r3, #20]
 80105b2:	68fb      	ldr	r3, [r7, #12]
 80105b4:	2200      	movs	r2, #0
 80105b6:	619a      	str	r2, [r3, #24]
 80105b8:	68fb      	ldr	r3, [r7, #12]
 80105ba:	331c      	adds	r3, #28
 80105bc:	4618      	mov	r0, r3
 80105be:	f7ff ffcc 	bl	801055a <_ZN8touchgfx8GesturesC1Ev>
 80105c2:	68fb      	ldr	r3, [r7, #12]
 80105c4:	2200      	movs	r2, #0
 80105c6:	639a      	str	r2, [r3, #56]	; 0x38
 80105c8:	68fb      	ldr	r3, [r7, #12]
 80105ca:	2200      	movs	r2, #0
 80105cc:	63da      	str	r2, [r3, #60]	; 0x3c
 80105ce:	68fb      	ldr	r3, [r7, #12]
 80105d0:	2200      	movs	r2, #0
 80105d2:	641a      	str	r2, [r3, #64]	; 0x40
 80105d4:	68fb      	ldr	r3, [r7, #12]
 80105d6:	2200      	movs	r2, #0
 80105d8:	645a      	str	r2, [r3, #68]	; 0x44
 80105da:	68fb      	ldr	r3, [r7, #12]
 80105dc:	2200      	movs	r2, #0
 80105de:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 80105e2:	68fb      	ldr	r3, [r7, #12]
 80105e4:	2201      	movs	r2, #1
 80105e6:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 80105ea:	68fb      	ldr	r3, [r7, #12]
 80105ec:	2200      	movs	r2, #0
 80105ee:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 80105f2:	68fb      	ldr	r3, [r7, #12]
 80105f4:	2200      	movs	r2, #0
 80105f6:	64da      	str	r2, [r3, #76]	; 0x4c
 80105f8:	68fb      	ldr	r3, [r7, #12]
 80105fa:	3350      	adds	r3, #80	; 0x50
 80105fc:	4618      	mov	r0, r3
 80105fe:	f7f9 fce4 	bl	8009fca <_ZN8touchgfx4RectC1Ev>
 8010602:	68fb      	ldr	r3, [r7, #12]
 8010604:	2201      	movs	r2, #1
 8010606:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 801060a:	68fb      	ldr	r3, [r7, #12]
 801060c:	2200      	movs	r2, #0
 801060e:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 8010612:	68fb      	ldr	r3, [r7, #12]
 8010614:	2200      	movs	r2, #0
 8010616:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 801061a:	68fb      	ldr	r3, [r7, #12]
 801061c:	2201      	movs	r2, #1
 801061e:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 8010622:	68fb      	ldr	r3, [r7, #12]
 8010624:	2200      	movs	r2, #0
 8010626:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 801062a:	68fb      	ldr	r3, [r7, #12]
 801062c:	2200      	movs	r2, #0
 801062e:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 8010632:	68fb      	ldr	r3, [r7, #12]
 8010634:	2200      	movs	r2, #0
 8010636:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 801063a:	68fb      	ldr	r3, [r7, #12]
 801063c:	2200      	movs	r2, #0
 801063e:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 8010642:	68fb      	ldr	r3, [r7, #12]
 8010644:	2200      	movs	r2, #0
 8010646:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 801064a:	68fb      	ldr	r3, [r7, #12]
 801064c:	2200      	movs	r2, #0
 801064e:	671a      	str	r2, [r3, #112]	; 0x70
 8010650:	68fb      	ldr	r3, [r7, #12]
 8010652:	2200      	movs	r2, #0
 8010654:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 8010658:	68fb      	ldr	r3, [r7, #12]
 801065a:	2200      	movs	r2, #0
 801065c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 8010660:	68fb      	ldr	r3, [r7, #12]
 8010662:	2201      	movs	r2, #1
 8010664:	f883 2077 	strb.w	r2, [r3, #119]	; 0x77
 8010668:	68fb      	ldr	r3, [r7, #12]
 801066a:	2201      	movs	r2, #1
 801066c:	f883 2078 	strb.w	r2, [r3, #120]	; 0x78
        instance = this;
 8010670:	4a12      	ldr	r2, [pc, #72]	; (80106bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x13c>)
 8010672:	68fb      	ldr	r3, [r7, #12]
 8010674:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 8010676:	4a12      	ldr	r2, [pc, #72]	; (80106c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
 8010678:	8b3b      	ldrh	r3, [r7, #24]
 801067a:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 801067c:	4a11      	ldr	r2, [pc, #68]	; (80106c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
 801067e:	8bbb      	ldrh	r3, [r7, #28]
 8010680:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8010682:	4b11      	ldr	r3, [pc, #68]	; (80106c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x148>)
 8010684:	2200      	movs	r2, #0
 8010686:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8010688:	4b0d      	ldr	r3, [pc, #52]	; (80106c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x140>)
 801068a:	881a      	ldrh	r2, [r3, #0]
 801068c:	4b0f      	ldr	r3, [pc, #60]	; (80106cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x14c>)
 801068e:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8010690:	4b0c      	ldr	r3, [pc, #48]	; (80106c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x144>)
 8010692:	881a      	ldrh	r2, [r3, #0]
 8010694:	4b0e      	ldr	r3, [pc, #56]	; (80106d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x150>)
 8010696:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010698:	8b3a      	ldrh	r2, [r7, #24]
 801069a:	8bbb      	ldrh	r3, [r7, #28]
 801069c:	429a      	cmp	r2, r3
 801069e:	bf34      	ite	cc
 80106a0:	2301      	movcc	r3, #1
 80106a2:	2300      	movcs	r3, #0
 80106a4:	b2db      	uxtb	r3, r3
 80106a6:	461a      	mov	r2, r3
 80106a8:	68fb      	ldr	r3, [r7, #12]
 80106aa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 80106ae:	68fb      	ldr	r3, [r7, #12]
 80106b0:	4618      	mov	r0, r3
 80106b2:	3710      	adds	r7, #16
 80106b4:	46bd      	mov	sp, r7
 80106b6:	bd80      	pop	{r7, pc}
 80106b8:	0803000c 	.word	0x0803000c
 80106bc:	20004168 	.word	0x20004168
 80106c0:	2000415a 	.word	0x2000415a
 80106c4:	2000415c 	.word	0x2000415c
 80106c8:	2000415e 	.word	0x2000415e
 80106cc:	20004160 	.word	0x20004160
 80106d0:	20004162 	.word	0x20004162

080106d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80106d4:	b580      	push	{r7, lr}
 80106d6:	b082      	sub	sp, #8
 80106d8:	af00      	add	r7, sp, #0
 80106da:	6078      	str	r0, [r7, #4]
 80106dc:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainViewScreenNoTransition();
 80106de:	683b      	ldr	r3, [r7, #0]
 80106e0:	4618      	mov	r0, r3
 80106e2:	f7f9 f9c5 	bl	8009a70 <_ZN23FrontendApplicationBase30gotoMainViewScreenNoTransitionEv>
    }
 80106e6:	bf00      	nop
 80106e8:	3708      	adds	r7, #8
 80106ea:	46bd      	mov	sp, r7
 80106ec:	bd80      	pop	{r7, pc}
	...

080106f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80106f0:	b580      	push	{r7, lr}
 80106f2:	b086      	sub	sp, #24
 80106f4:	af02      	add	r7, sp, #8
 80106f6:	60f8      	str	r0, [r7, #12]
 80106f8:	60b9      	str	r1, [r7, #8]
 80106fa:	607a      	str	r2, [r7, #4]
 80106fc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80106fe:	68f8      	ldr	r0, [r7, #12]
 8010700:	69bb      	ldr	r3, [r7, #24]
 8010702:	9300      	str	r3, [sp, #0]
 8010704:	683b      	ldr	r3, [r7, #0]
 8010706:	687a      	ldr	r2, [r7, #4]
 8010708:	68b9      	ldr	r1, [r7, #8]
 801070a:	f7ff fea3 	bl	8010454 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 801070e:	4a04      	ldr	r2, [pc, #16]	; (8010720 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8010710:	68fb      	ldr	r3, [r7, #12]
 8010712:	601a      	str	r2, [r3, #0]
    {

    }
 8010714:	68fb      	ldr	r3, [r7, #12]
 8010716:	4618      	mov	r0, r3
 8010718:	3710      	adds	r7, #16
 801071a:	46bd      	mov	sp, r7
 801071c:	bd80      	pop	{r7, pc}
 801071e:	bf00      	nop
 8010720:	0802f5e0 	.word	0x0802f5e0

08010724 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8010724:	b580      	push	{r7, lr}
 8010726:	af00      	add	r7, sp, #0
 8010728:	4801      	ldr	r0, [pc, #4]	; (8010730 <__tcf_0+0xc>)
 801072a:	f000 f97f 	bl	8010a2c <_ZN12FrontendHeapD1Ev>
 801072e:	bd80      	pop	{r7, pc}
 8010730:	2000056c 	.word	0x2000056c

08010734 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8010734:	b580      	push	{r7, lr}
 8010736:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010738:	4b12      	ldr	r3, [pc, #72]	; (8010784 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 801073a:	781b      	ldrb	r3, [r3, #0]
 801073c:	f3bf 8f5b 	dmb	ish
 8010740:	b2db      	uxtb	r3, r3
 8010742:	f003 0301 	and.w	r3, r3, #1
 8010746:	2b00      	cmp	r3, #0
 8010748:	bf0c      	ite	eq
 801074a:	2301      	moveq	r3, #1
 801074c:	2300      	movne	r3, #0
 801074e:	b2db      	uxtb	r3, r3
 8010750:	2b00      	cmp	r3, #0
 8010752:	d013      	beq.n	801077c <_ZN12FrontendHeap11getInstanceEv+0x48>
 8010754:	480b      	ldr	r0, [pc, #44]	; (8010784 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010756:	f01b f988 	bl	802ba6a <__cxa_guard_acquire>
 801075a:	4603      	mov	r3, r0
 801075c:	2b00      	cmp	r3, #0
 801075e:	bf14      	ite	ne
 8010760:	2301      	movne	r3, #1
 8010762:	2300      	moveq	r3, #0
 8010764:	b2db      	uxtb	r3, r3
 8010766:	2b00      	cmp	r3, #0
 8010768:	d008      	beq.n	801077c <_ZN12FrontendHeap11getInstanceEv+0x48>
 801076a:	4807      	ldr	r0, [pc, #28]	; (8010788 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 801076c:	f000 f880 	bl	8010870 <_ZN12FrontendHeapC1Ev>
 8010770:	4806      	ldr	r0, [pc, #24]	; (801078c <_ZN12FrontendHeap11getInstanceEv+0x58>)
 8010772:	f01b fbd7 	bl	802bf24 <atexit>
 8010776:	4803      	ldr	r0, [pc, #12]	; (8010784 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010778:	f01b f983 	bl	802ba82 <__cxa_guard_release>
        return instance;
 801077c:	4b02      	ldr	r3, [pc, #8]	; (8010788 <_ZN12FrontendHeap11getInstanceEv+0x54>)
    }
 801077e:	4618      	mov	r0, r3
 8010780:	bd80      	pop	{r7, pc}
 8010782:	bf00      	nop
 8010784:	20003078 	.word	0x20003078
 8010788:	2000056c 	.word	0x2000056c
 801078c:	08010725 	.word	0x08010725

08010790 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8010790:	b580      	push	{r7, lr}
 8010792:	b082      	sub	sp, #8
 8010794:	af00      	add	r7, sp, #0
 8010796:	6078      	str	r0, [r7, #4]
 8010798:	4a05      	ldr	r2, [pc, #20]	; (80107b0 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 801079a:	687b      	ldr	r3, [r7, #4]
 801079c:	601a      	str	r2, [r3, #0]
 801079e:	687b      	ldr	r3, [r7, #4]
 80107a0:	4618      	mov	r0, r3
 80107a2:	f7ff fe77 	bl	8010494 <_ZN8touchgfx7MVPHeapD1Ev>
 80107a6:	687b      	ldr	r3, [r7, #4]
 80107a8:	4618      	mov	r0, r3
 80107aa:	3708      	adds	r7, #8
 80107ac:	46bd      	mov	sp, r7
 80107ae:	bd80      	pop	{r7, pc}
 80107b0:	0802f5e0 	.word	0x0802f5e0

080107b4 <_ZN16FrontendHeapBaseD0Ev>:
 80107b4:	b580      	push	{r7, lr}
 80107b6:	b082      	sub	sp, #8
 80107b8:	af00      	add	r7, sp, #0
 80107ba:	6078      	str	r0, [r7, #4]
 80107bc:	6878      	ldr	r0, [r7, #4]
 80107be:	f7ff ffe7 	bl	8010790 <_ZN16FrontendHeapBaseD1Ev>
 80107c2:	2114      	movs	r1, #20
 80107c4:	6878      	ldr	r0, [r7, #4]
 80107c6:	f01b f94e 	bl	802ba66 <_ZdlPvj>
 80107ca:	687b      	ldr	r3, [r7, #4]
 80107cc:	4618      	mov	r0, r3
 80107ce:	3708      	adds	r7, #8
 80107d0:	46bd      	mov	sp, r7
 80107d2:	bd80      	pop	{r7, pc}

080107d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 80107d4:	b580      	push	{r7, lr}
 80107d6:	b082      	sub	sp, #8
 80107d8:	af00      	add	r7, sp, #0
 80107da:	6078      	str	r0, [r7, #4]
 80107dc:	687b      	ldr	r3, [r7, #4]
 80107de:	4618      	mov	r0, r3
 80107e0:	f005 fff8 	bl	80167d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80107e4:	4a03      	ldr	r2, [pc, #12]	; (80107f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80107e6:	687b      	ldr	r3, [r7, #4]
 80107e8:	601a      	str	r2, [r3, #0]
 80107ea:	687b      	ldr	r3, [r7, #4]
 80107ec:	4618      	mov	r0, r3
 80107ee:	3708      	adds	r7, #8
 80107f0:	46bd      	mov	sp, r7
 80107f2:	bd80      	pop	{r7, pc}
 80107f4:	0802f5ac 	.word	0x0802f5ac

080107f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80107f8:	b580      	push	{r7, lr}
 80107fa:	b082      	sub	sp, #8
 80107fc:	af00      	add	r7, sp, #0
 80107fe:	6078      	str	r0, [r7, #4]
 8010800:	687b      	ldr	r3, [r7, #4]
 8010802:	4618      	mov	r0, r3
 8010804:	f005 ffe6 	bl	80167d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010808:	4a03      	ldr	r2, [pc, #12]	; (8010818 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 801080a:	687b      	ldr	r3, [r7, #4]
 801080c:	601a      	str	r2, [r3, #0]
 801080e:	687b      	ldr	r3, [r7, #4]
 8010810:	4618      	mov	r0, r3
 8010812:	3708      	adds	r7, #8
 8010814:	46bd      	mov	sp, r7
 8010816:	bd80      	pop	{r7, pc}
 8010818:	0802f578 	.word	0x0802f578

0801081c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 801081c:	b580      	push	{r7, lr}
 801081e:	b082      	sub	sp, #8
 8010820:	af00      	add	r7, sp, #0
 8010822:	6078      	str	r0, [r7, #4]
 8010824:	687b      	ldr	r3, [r7, #4]
 8010826:	4618      	mov	r0, r3
 8010828:	f005 ffd4 	bl	80167d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 801082c:	4a03      	ldr	r2, [pc, #12]	; (801083c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 801082e:	687b      	ldr	r3, [r7, #4]
 8010830:	601a      	str	r2, [r3, #0]
 8010832:	687b      	ldr	r3, [r7, #4]
 8010834:	4618      	mov	r0, r3
 8010836:	3708      	adds	r7, #8
 8010838:	46bd      	mov	sp, r7
 801083a:	bd80      	pop	{r7, pc}
 801083c:	0802f544 	.word	0x0802f544

08010840 <_ZN5ModelD1Ev>:
class Model
 8010840:	b580      	push	{r7, lr}
 8010842:	b082      	sub	sp, #8
 8010844:	af00      	add	r7, sp, #0
 8010846:	6078      	str	r0, [r7, #4]
 8010848:	687b      	ldr	r3, [r7, #4]
 801084a:	3334      	adds	r3, #52	; 0x34
 801084c:	4618      	mov	r0, r3
 801084e:	f01b fa18 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8010852:	687b      	ldr	r3, [r7, #4]
 8010854:	331c      	adds	r3, #28
 8010856:	4618      	mov	r0, r3
 8010858:	f01b fa13 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 801085c:	687b      	ldr	r3, [r7, #4]
 801085e:	3304      	adds	r3, #4
 8010860:	4618      	mov	r0, r3
 8010862:	f01b fa0e 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8010866:	687b      	ldr	r3, [r7, #4]
 8010868:	4618      	mov	r0, r3
 801086a:	3708      	adds	r7, #8
 801086c:	46bd      	mov	sp, r7
 801086e:	bd80      	pop	{r7, pc}

08010870 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010870:	b5b0      	push	{r4, r5, r7, lr}
 8010872:	b084      	sub	sp, #16
 8010874:	af02      	add	r7, sp, #8
 8010876:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8010878:	6878      	ldr	r0, [r7, #4]
 801087a:	687b      	ldr	r3, [r7, #4]
 801087c:	f103 0414 	add.w	r4, r3, #20
 8010880:	687b      	ldr	r3, [r7, #4]
 8010882:	f103 052c 	add.w	r5, r3, #44	; 0x2c
 8010886:	687b      	ldr	r3, [r7, #4]
 8010888:	f642 1244 	movw	r2, #10564	; 0x2944
 801088c:	441a      	add	r2, r3
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 801088e:	6879      	ldr	r1, [r7, #4]
 8010890:	f642 13b4 	movw	r3, #10676	; 0x29b4
 8010894:	440b      	add	r3, r1
                     app(model, *this)
 8010896:	9300      	str	r3, [sp, #0]
 8010898:	4613      	mov	r3, r2
 801089a:	462a      	mov	r2, r5
 801089c:	4621      	mov	r1, r4
 801089e:	f7ff ff27 	bl	80106f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 80108a2:	4a1a      	ldr	r2, [pc, #104]	; (801090c <_ZN12FrontendHeapC1Ev+0x9c>)
 80108a4:	687b      	ldr	r3, [r7, #4]
 80108a6:	601a      	str	r2, [r3, #0]
 80108a8:	687b      	ldr	r3, [r7, #4]
 80108aa:	3314      	adds	r3, #20
 80108ac:	4618      	mov	r0, r3
 80108ae:	f7ff ff91 	bl	80107d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80108b2:	687b      	ldr	r3, [r7, #4]
 80108b4:	332c      	adds	r3, #44	; 0x2c
 80108b6:	4618      	mov	r0, r3
 80108b8:	f7ff ff9e 	bl	80107f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80108bc:	687a      	ldr	r2, [r7, #4]
 80108be:	f642 1344 	movw	r3, #10564	; 0x2944
 80108c2:	4413      	add	r3, r2
 80108c4:	4618      	mov	r0, r3
 80108c6:	f7ff ffa9 	bl	801081c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80108ca:	687a      	ldr	r2, [r7, #4]
 80108cc:	f642 1358 	movw	r3, #10584	; 0x2958
 80108d0:	4413      	add	r3, r2
 80108d2:	4618      	mov	r0, r3
 80108d4:	f7fe fa4e 	bl	800ed74 <_ZN5ModelC1Ev>
 80108d8:	687a      	ldr	r2, [r7, #4]
 80108da:	f642 13b4 	movw	r3, #10676	; 0x29b4
 80108de:	4413      	add	r3, r2
 80108e0:	687a      	ldr	r2, [r7, #4]
 80108e2:	f642 1158 	movw	r1, #10584	; 0x2958
 80108e6:	4411      	add	r1, r2
 80108e8:	687a      	ldr	r2, [r7, #4]
 80108ea:	4618      	mov	r0, r3
 80108ec:	f7fd ff4c 	bl	800e788 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 80108f0:	6878      	ldr	r0, [r7, #4]
 80108f2:	687a      	ldr	r2, [r7, #4]
 80108f4:	f642 13b4 	movw	r3, #10676	; 0x29b4
 80108f8:	4413      	add	r3, r2
 80108fa:	4619      	mov	r1, r3
 80108fc:	f7ff feea 	bl	80106d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 8010900:	687b      	ldr	r3, [r7, #4]
 8010902:	4618      	mov	r0, r3
 8010904:	3708      	adds	r7, #8
 8010906:	46bd      	mov	sp, r7
 8010908:	bdb0      	pop	{r4, r5, r7, pc}
 801090a:	bf00      	nop
 801090c:	0802f530 	.word	0x0802f530

08010910 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 8010910:	b580      	push	{r7, lr}
 8010912:	b086      	sub	sp, #24
 8010914:	af02      	add	r7, sp, #8
 8010916:	60f8      	str	r0, [r7, #12]
 8010918:	60b9      	str	r1, [r7, #8]
 801091a:	607a      	str	r2, [r7, #4]
 801091c:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 801091e:	68f8      	ldr	r0, [r7, #12]
 8010920:	8bbb      	ldrh	r3, [r7, #28]
 8010922:	9301      	str	r3, [sp, #4]
 8010924:	8b3b      	ldrh	r3, [r7, #24]
 8010926:	9300      	str	r3, [sp, #0]
 8010928:	683b      	ldr	r3, [r7, #0]
 801092a:	687a      	ldr	r2, [r7, #4]
 801092c:	68b9      	ldr	r1, [r7, #8]
 801092e:	f7ff fe27 	bl	8010580 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 8010932:	4a04      	ldr	r2, [pc, #16]	; (8010944 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010934:	68fb      	ldr	r3, [r7, #12]
 8010936:	601a      	str	r2, [r3, #0]
    }
 8010938:	68fb      	ldr	r3, [r7, #12]
 801093a:	4618      	mov	r0, r3
 801093c:	3710      	adds	r7, #16
 801093e:	46bd      	mov	sp, r7
 8010940:	bd80      	pop	{r7, pc}
 8010942:	bf00      	nop
 8010944:	0802f604 	.word	0x0802f604

08010948 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8010948:	b580      	push	{r7, lr}
 801094a:	b086      	sub	sp, #24
 801094c:	af02      	add	r7, sp, #8
 801094e:	60f8      	str	r0, [r7, #12]
 8010950:	60b9      	str	r1, [r7, #8]
 8010952:	607a      	str	r2, [r7, #4]
 8010954:	603b      	str	r3, [r7, #0]
 8010956:	68f8      	ldr	r0, [r7, #12]
 8010958:	8bbb      	ldrh	r3, [r7, #28]
 801095a:	9301      	str	r3, [sp, #4]
 801095c:	8b3b      	ldrh	r3, [r7, #24]
 801095e:	9300      	str	r3, [sp, #0]
 8010960:	683b      	ldr	r3, [r7, #0]
 8010962:	687a      	ldr	r2, [r7, #4]
 8010964:	68b9      	ldr	r1, [r7, #8]
 8010966:	f7ff ffd3 	bl	8010910 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 801096a:	4a04      	ldr	r2, [pc, #16]	; (801097c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 801096c:	68fb      	ldr	r3, [r7, #12]
 801096e:	601a      	str	r2, [r3, #0]
    }
 8010970:	68fb      	ldr	r3, [r7, #12]
 8010972:	4618      	mov	r0, r3
 8010974:	3710      	adds	r7, #16
 8010976:	46bd      	mov	sp, r7
 8010978:	bd80      	pop	{r7, pc}
 801097a:	bf00      	nop
 801097c:	0802f400 	.word	0x0802f400

08010980 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8010980:	b480      	push	{r7}
 8010982:	b083      	sub	sp, #12
 8010984:	af00      	add	r7, sp, #0
 8010986:	6078      	str	r0, [r7, #4]
 8010988:	4a04      	ldr	r2, [pc, #16]	; (801099c <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 801098a:	687b      	ldr	r3, [r7, #4]
 801098c:	601a      	str	r2, [r3, #0]
 801098e:	687b      	ldr	r3, [r7, #4]
 8010990:	4618      	mov	r0, r3
 8010992:	370c      	adds	r7, #12
 8010994:	46bd      	mov	sp, r7
 8010996:	f85d 7b04 	ldr.w	r7, [sp], #4
 801099a:	4770      	bx	lr
 801099c:	0802f3e8 	.word	0x0802f3e8

080109a0 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 80109a0:	b580      	push	{r7, lr}
 80109a2:	b082      	sub	sp, #8
 80109a4:	af00      	add	r7, sp, #0
 80109a6:	6078      	str	r0, [r7, #4]
 80109a8:	687b      	ldr	r3, [r7, #4]
 80109aa:	4618      	mov	r0, r3
 80109ac:	f7ff ffe8 	bl	8010980 <_ZN8touchgfx15TouchControllerC1Ev>
 80109b0:	4a03      	ldr	r2, [pc, #12]	; (80109c0 <_ZN20STM32TouchControllerC1Ev+0x20>)
 80109b2:	687b      	ldr	r3, [r7, #4]
 80109b4:	601a      	str	r2, [r3, #0]
 80109b6:	687b      	ldr	r3, [r7, #4]
 80109b8:	4618      	mov	r0, r3
 80109ba:	3708      	adds	r7, #8
 80109bc:	46bd      	mov	sp, r7
 80109be:	bd80      	pop	{r7, pc}
 80109c0:	0802f3d0 	.word	0x0802f3d0

080109c4 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 80109c4:	b590      	push	{r4, r7, lr}
 80109c6:	b085      	sub	sp, #20
 80109c8:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80109ca:	f7fd fcb7 	bl	800e33c <_ZN14BitmapDatabase11getInstanceEv>
 80109ce:	4604      	mov	r4, r0
 80109d0:	f7fd fcbe 	bl	800e350 <_ZN14BitmapDatabase15getInstanceSizeEv>
 80109d4:	4603      	mov	r3, r0
 80109d6:	4619      	mov	r1, r3
 80109d8:	2300      	movs	r3, #0
 80109da:	9300      	str	r3, [sp, #0]
 80109dc:	2300      	movs	r3, #0
 80109de:	2200      	movs	r2, #0
 80109e0:	4620      	mov	r0, r4
 80109e2:	f00d fe3d 	bl	801e660 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 80109e6:	4809      	ldr	r0, [pc, #36]	; (8010a0c <touchgfx_init+0x48>)
 80109e8:	f7ff fd24 	bl	8010434 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 80109ec:	2000      	movs	r0, #0
 80109ee:	f7fd fde9 	bl	800e5c4 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 80109f2:	4807      	ldr	r0, [pc, #28]	; (8010a10 <touchgfx_init+0x4c>)
 80109f4:	f00d fd76 	bl	801e4e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 80109f8:	f7ff fe9c 	bl	8010734 <_ZN12FrontendHeap11getInstanceEv>
 80109fc:	6078      	str	r0, [r7, #4]
  (void)heap;

  /*
   * Initialize TouchGFX
   */
  hal.initialize();
 80109fe:	4805      	ldr	r0, [pc, #20]	; (8010a14 <touchgfx_init+0x50>)
 8010a00:	f7fe ff06 	bl	800f810 <_ZN11TouchGFXHAL10initializeEv>
}
 8010a04:	bf00      	nop
 8010a06:	370c      	adds	r7, #12
 8010a08:	46bd      	mov	sp, r7
 8010a0a:	bd90      	pop	{r4, r7, pc}
 8010a0c:	20003d18 	.word	0x20003d18
 8010a10:	2000003c 	.word	0x2000003c
 8010a14:	20003d1c 	.word	0x20003d1c

08010a18 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8010a18:	b580      	push	{r7, lr}
 8010a1a:	af00      	add	r7, sp, #0
  * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
  * this function from your GUI task.
  *
  * Note This function never returns
  */
  hal.taskEntry();
 8010a1c:	4802      	ldr	r0, [pc, #8]	; (8010a28 <touchgfx_taskEntry+0x10>)
 8010a1e:	f7fe ff25 	bl	800f86c <_ZN11TouchGFXHAL9taskEntryEv>
}
 8010a22:	bf00      	nop
 8010a24:	bd80      	pop	{r7, pc}
 8010a26:	bf00      	nop
 8010a28:	20003d1c 	.word	0x20003d1c

08010a2c <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8010a2c:	b580      	push	{r7, lr}
 8010a2e:	b082      	sub	sp, #8
 8010a30:	af00      	add	r7, sp, #0
 8010a32:	6078      	str	r0, [r7, #4]
 8010a34:	4a15      	ldr	r2, [pc, #84]	; (8010a8c <_ZN12FrontendHeapD1Ev+0x60>)
 8010a36:	687b      	ldr	r3, [r7, #4]
 8010a38:	601a      	str	r2, [r3, #0]
 8010a3a:	687a      	ldr	r2, [r7, #4]
 8010a3c:	f642 13b4 	movw	r3, #10676	; 0x29b4
 8010a40:	4413      	add	r3, r2
 8010a42:	4618      	mov	r0, r3
 8010a44:	f7fd fe6a 	bl	800e71c <_ZN19FrontendApplicationD1Ev>
 8010a48:	687a      	ldr	r2, [r7, #4]
 8010a4a:	f642 1358 	movw	r3, #10584	; 0x2958
 8010a4e:	4413      	add	r3, r2
 8010a50:	4618      	mov	r0, r3
 8010a52:	f7ff fef5 	bl	8010840 <_ZN5ModelD1Ev>
 8010a56:	687a      	ldr	r2, [r7, #4]
 8010a58:	f642 1344 	movw	r3, #10564	; 0x2944
 8010a5c:	4413      	add	r3, r2
 8010a5e:	4618      	mov	r0, r3
 8010a60:	f000 f828 	bl	8010ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010a64:	687b      	ldr	r3, [r7, #4]
 8010a66:	332c      	adds	r3, #44	; 0x2c
 8010a68:	4618      	mov	r0, r3
 8010a6a:	f000 f845 	bl	8010af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010a6e:	687b      	ldr	r3, [r7, #4]
 8010a70:	3314      	adds	r3, #20
 8010a72:	4618      	mov	r0, r3
 8010a74:	f000 f864 	bl	8010b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010a78:	687b      	ldr	r3, [r7, #4]
 8010a7a:	4618      	mov	r0, r3
 8010a7c:	f7ff fe88 	bl	8010790 <_ZN16FrontendHeapBaseD1Ev>
 8010a80:	687b      	ldr	r3, [r7, #4]
 8010a82:	4618      	mov	r0, r3
 8010a84:	3708      	adds	r7, #8
 8010a86:	46bd      	mov	sp, r7
 8010a88:	bd80      	pop	{r7, pc}
 8010a8a:	bf00      	nop
 8010a8c:	0802f530 	.word	0x0802f530

08010a90 <_ZN12FrontendHeapD0Ev>:
 8010a90:	b580      	push	{r7, lr}
 8010a92:	b082      	sub	sp, #8
 8010a94:	af00      	add	r7, sp, #0
 8010a96:	6078      	str	r0, [r7, #4]
 8010a98:	6878      	ldr	r0, [r7, #4]
 8010a9a:	f7ff ffc7 	bl	8010a2c <_ZN12FrontendHeapD1Ev>
 8010a9e:	f642 310c 	movw	r1, #11020	; 0x2b0c
 8010aa2:	6878      	ldr	r0, [r7, #4]
 8010aa4:	f01a ffdf 	bl	802ba66 <_ZdlPvj>
 8010aa8:	687b      	ldr	r3, [r7, #4]
 8010aaa:	4618      	mov	r0, r3
 8010aac:	3708      	adds	r7, #8
 8010aae:	46bd      	mov	sp, r7
 8010ab0:	bd80      	pop	{r7, pc}
	...

08010ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010ab4:	b580      	push	{r7, lr}
 8010ab6:	b082      	sub	sp, #8
 8010ab8:	af00      	add	r7, sp, #0
 8010aba:	6078      	str	r0, [r7, #4]
 8010abc:	4a05      	ldr	r2, [pc, #20]	; (8010ad4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010abe:	687b      	ldr	r3, [r7, #4]
 8010ac0:	601a      	str	r2, [r3, #0]
 8010ac2:	687b      	ldr	r3, [r7, #4]
 8010ac4:	4618      	mov	r0, r3
 8010ac6:	f005 fe83 	bl	80167d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010aca:	687b      	ldr	r3, [r7, #4]
 8010acc:	4618      	mov	r0, r3
 8010ace:	3708      	adds	r7, #8
 8010ad0:	46bd      	mov	sp, r7
 8010ad2:	bd80      	pop	{r7, pc}
 8010ad4:	0802f544 	.word	0x0802f544

08010ad8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010ad8:	b580      	push	{r7, lr}
 8010ada:	b082      	sub	sp, #8
 8010adc:	af00      	add	r7, sp, #0
 8010ade:	6078      	str	r0, [r7, #4]
 8010ae0:	6878      	ldr	r0, [r7, #4]
 8010ae2:	f7ff ffe7 	bl	8010ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010ae6:	2114      	movs	r1, #20
 8010ae8:	6878      	ldr	r0, [r7, #4]
 8010aea:	f01a ffbc 	bl	802ba66 <_ZdlPvj>
 8010aee:	687b      	ldr	r3, [r7, #4]
 8010af0:	4618      	mov	r0, r3
 8010af2:	3708      	adds	r7, #8
 8010af4:	46bd      	mov	sp, r7
 8010af6:	bd80      	pop	{r7, pc}

08010af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010af8:	b580      	push	{r7, lr}
 8010afa:	b082      	sub	sp, #8
 8010afc:	af00      	add	r7, sp, #0
 8010afe:	6078      	str	r0, [r7, #4]
 8010b00:	4a05      	ldr	r2, [pc, #20]	; (8010b18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010b02:	687b      	ldr	r3, [r7, #4]
 8010b04:	601a      	str	r2, [r3, #0]
 8010b06:	687b      	ldr	r3, [r7, #4]
 8010b08:	4618      	mov	r0, r3
 8010b0a:	f005 fe61 	bl	80167d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010b0e:	687b      	ldr	r3, [r7, #4]
 8010b10:	4618      	mov	r0, r3
 8010b12:	3708      	adds	r7, #8
 8010b14:	46bd      	mov	sp, r7
 8010b16:	bd80      	pop	{r7, pc}
 8010b18:	0802f578 	.word	0x0802f578

08010b1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010b1c:	b580      	push	{r7, lr}
 8010b1e:	b082      	sub	sp, #8
 8010b20:	af00      	add	r7, sp, #0
 8010b22:	6078      	str	r0, [r7, #4]
 8010b24:	6878      	ldr	r0, [r7, #4]
 8010b26:	f7ff ffe7 	bl	8010af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010b2a:	f642 1118 	movw	r1, #10520	; 0x2918
 8010b2e:	6878      	ldr	r0, [r7, #4]
 8010b30:	f01a ff99 	bl	802ba66 <_ZdlPvj>
 8010b34:	687b      	ldr	r3, [r7, #4]
 8010b36:	4618      	mov	r0, r3
 8010b38:	3708      	adds	r7, #8
 8010b3a:	46bd      	mov	sp, r7
 8010b3c:	bd80      	pop	{r7, pc}
	...

08010b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010b40:	b580      	push	{r7, lr}
 8010b42:	b082      	sub	sp, #8
 8010b44:	af00      	add	r7, sp, #0
 8010b46:	6078      	str	r0, [r7, #4]
 8010b48:	4a05      	ldr	r2, [pc, #20]	; (8010b60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010b4a:	687b      	ldr	r3, [r7, #4]
 8010b4c:	601a      	str	r2, [r3, #0]
 8010b4e:	687b      	ldr	r3, [r7, #4]
 8010b50:	4618      	mov	r0, r3
 8010b52:	f005 fe3d 	bl	80167d0 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010b56:	687b      	ldr	r3, [r7, #4]
 8010b58:	4618      	mov	r0, r3
 8010b5a:	3708      	adds	r7, #8
 8010b5c:	46bd      	mov	sp, r7
 8010b5e:	bd80      	pop	{r7, pc}
 8010b60:	0802f5ac 	.word	0x0802f5ac

08010b64 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010b64:	b580      	push	{r7, lr}
 8010b66:	b082      	sub	sp, #8
 8010b68:	af00      	add	r7, sp, #0
 8010b6a:	6078      	str	r0, [r7, #4]
 8010b6c:	6878      	ldr	r0, [r7, #4]
 8010b6e:	f7ff ffe7 	bl	8010b40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010b72:	2118      	movs	r1, #24
 8010b74:	6878      	ldr	r0, [r7, #4]
 8010b76:	f01a ff76 	bl	802ba66 <_ZdlPvj>
 8010b7a:	687b      	ldr	r3, [r7, #4]
 8010b7c:	4618      	mov	r0, r3
 8010b7e:	3708      	adds	r7, #8
 8010b80:	46bd      	mov	sp, r7
 8010b82:	bd80      	pop	{r7, pc}

08010b84 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8010b84:	b580      	push	{r7, lr}
 8010b86:	b082      	sub	sp, #8
 8010b88:	af00      	add	r7, sp, #0
 8010b8a:	6078      	str	r0, [r7, #4]
 8010b8c:	4a05      	ldr	r2, [pc, #20]	; (8010ba4 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8010b8e:	687b      	ldr	r3, [r7, #4]
 8010b90:	601a      	str	r2, [r3, #0]
 8010b92:	687b      	ldr	r3, [r7, #4]
 8010b94:	4618      	mov	r0, r3
 8010b96:	f7ff fc9d 	bl	80104d4 <_ZN8touchgfx3LCDD1Ev>
 8010b9a:	687b      	ldr	r3, [r7, #4]
 8010b9c:	4618      	mov	r0, r3
 8010b9e:	3708      	adds	r7, #8
 8010ba0:	46bd      	mov	sp, r7
 8010ba2:	bd80      	pop	{r7, pc}
 8010ba4:	080324d0 	.word	0x080324d0

08010ba8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010ba8:	b580      	push	{r7, lr}
 8010baa:	b082      	sub	sp, #8
 8010bac:	af00      	add	r7, sp, #0
 8010bae:	6078      	str	r0, [r7, #4]
 8010bb0:	6878      	ldr	r0, [r7, #4]
 8010bb2:	f7ff ffe7 	bl	8010b84 <_ZN8touchgfx8LCD16bppD1Ev>
 8010bb6:	2178      	movs	r1, #120	; 0x78
 8010bb8:	6878      	ldr	r0, [r7, #4]
 8010bba:	f01a ff54 	bl	802ba66 <_ZdlPvj>
 8010bbe:	687b      	ldr	r3, [r7, #4]
 8010bc0:	4618      	mov	r0, r3
 8010bc2:	3708      	adds	r7, #8
 8010bc4:	46bd      	mov	sp, r7
 8010bc6:	bd80      	pop	{r7, pc}

08010bc8 <_Z41__static_initialization_and_destruction_0ii>:
 8010bc8:	b580      	push	{r7, lr}
 8010bca:	b084      	sub	sp, #16
 8010bcc:	af02      	add	r7, sp, #8
 8010bce:	6078      	str	r0, [r7, #4]
 8010bd0:	6039      	str	r1, [r7, #0]
 8010bd2:	687b      	ldr	r3, [r7, #4]
 8010bd4:	2b01      	cmp	r3, #1
 8010bd6:	d119      	bne.n	8010c0c <_Z41__static_initialization_and_destruction_0ii+0x44>
 8010bd8:	683b      	ldr	r3, [r7, #0]
 8010bda:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010bde:	4293      	cmp	r3, r2
 8010be0:	d114      	bne.n	8010c0c <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 8010be2:	4818      	ldr	r0, [pc, #96]	; (8010c44 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010be4:	f7ff fedc 	bl	80109a0 <_ZN20STM32TouchControllerC1Ev>
static STM32F7DMA dma;
 8010be8:	4817      	ldr	r0, [pc, #92]	; (8010c48 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010bea:	f7ff f8a1 	bl	800fd30 <_ZN10STM32F7DMAC1Ev>
static LCD16bpp display;
 8010bee:	4817      	ldr	r0, [pc, #92]	; (8010c4c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010bf0:	f010 fdba 	bl	8021768 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 272);
 8010bf4:	f44f 7388 	mov.w	r3, #272	; 0x110
 8010bf8:	9301      	str	r3, [sp, #4]
 8010bfa:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8010bfe:	9300      	str	r3, [sp, #0]
 8010c00:	4b10      	ldr	r3, [pc, #64]	; (8010c44 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010c02:	4a12      	ldr	r2, [pc, #72]	; (8010c4c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010c04:	4910      	ldr	r1, [pc, #64]	; (8010c48 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010c06:	4812      	ldr	r0, [pc, #72]	; (8010c50 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010c08:	f7ff fe9e 	bl	8010948 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010c0c:	687b      	ldr	r3, [r7, #4]
 8010c0e:	2b00      	cmp	r3, #0
 8010c10:	d113      	bne.n	8010c3a <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010c12:	683b      	ldr	r3, [r7, #0]
 8010c14:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010c18:	4293      	cmp	r3, r2
 8010c1a:	d10e      	bne.n	8010c3a <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010c1c:	480c      	ldr	r0, [pc, #48]	; (8010c50 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010c1e:	f7fe fec1 	bl	800f9a4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8010c22:	480c      	ldr	r0, [pc, #48]	; (8010c54 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 8010c24:	f7f8 f9d6 	bl	8008fd4 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8010c28:	4808      	ldr	r0, [pc, #32]	; (8010c4c <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010c2a:	f7ff ffab 	bl	8010b84 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F7DMA dma;
 8010c2e:	4806      	ldr	r0, [pc, #24]	; (8010c48 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010c30:	f7ff f8a8 	bl	800fd84 <_ZN10STM32F7DMAD1Ev>
static STM32TouchController tc;
 8010c34:	4803      	ldr	r0, [pc, #12]	; (8010c44 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010c36:	f7fe fba5 	bl	800f384 <_ZN20STM32TouchControllerD1Ev>
}
 8010c3a:	bf00      	nop
 8010c3c:	3708      	adds	r7, #8
 8010c3e:	46bd      	mov	sp, r7
 8010c40:	bd80      	pop	{r7, pc}
 8010c42:	bf00      	nop
 8010c44:	2000307c 	.word	0x2000307c
 8010c48:	20003080 	.word	0x20003080
 8010c4c:	20003ca0 	.word	0x20003ca0
 8010c50:	20003d1c 	.word	0x20003d1c
 8010c54:	2000003c 	.word	0x2000003c

08010c58 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8010c58:	b480      	push	{r7}
 8010c5a:	b083      	sub	sp, #12
 8010c5c:	af00      	add	r7, sp, #0
 8010c5e:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8010c60:	2301      	movs	r3, #1
    }
 8010c62:	4618      	mov	r0, r3
 8010c64:	370c      	adds	r7, #12
 8010c66:	46bd      	mov	sp, r7
 8010c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c6c:	4770      	bx	lr

08010c6e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8010c6e:	b480      	push	{r7}
 8010c70:	b083      	sub	sp, #12
 8010c72:	af00      	add	r7, sp, #0
 8010c74:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8010c76:	230c      	movs	r3, #12
    }
 8010c78:	4618      	mov	r0, r3
 8010c7a:	370c      	adds	r7, #12
 8010c7c:	46bd      	mov	sp, r7
 8010c7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c82:	4770      	bx	lr

08010c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8010c84:	b480      	push	{r7}
 8010c86:	b083      	sub	sp, #12
 8010c88:	af00      	add	r7, sp, #0
 8010c8a:	6078      	str	r0, [r7, #4]
 8010c8c:	460b      	mov	r3, r1
 8010c8e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010c90:	887a      	ldrh	r2, [r7, #2]
 8010c92:	4613      	mov	r3, r2
 8010c94:	005b      	lsls	r3, r3, #1
 8010c96:	4413      	add	r3, r2
 8010c98:	009b      	lsls	r3, r3, #2
 8010c9a:	3308      	adds	r3, #8
 8010c9c:	687a      	ldr	r2, [r7, #4]
 8010c9e:	4413      	add	r3, r2
    }
 8010ca0:	4618      	mov	r0, r3
 8010ca2:	370c      	adds	r7, #12
 8010ca4:	46bd      	mov	sp, r7
 8010ca6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010caa:	4770      	bx	lr

08010cac <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8010cac:	b480      	push	{r7}
 8010cae:	b083      	sub	sp, #12
 8010cb0:	af00      	add	r7, sp, #0
 8010cb2:	6078      	str	r0, [r7, #4]
 8010cb4:	460b      	mov	r3, r1
 8010cb6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010cb8:	887a      	ldrh	r2, [r7, #2]
 8010cba:	4613      	mov	r3, r2
 8010cbc:	005b      	lsls	r3, r3, #1
 8010cbe:	4413      	add	r3, r2
 8010cc0:	009b      	lsls	r3, r3, #2
 8010cc2:	3308      	adds	r3, #8
 8010cc4:	687a      	ldr	r2, [r7, #4]
 8010cc6:	4413      	add	r3, r2
    }
 8010cc8:	4618      	mov	r0, r3
 8010cca:	370c      	adds	r7, #12
 8010ccc:	46bd      	mov	sp, r7
 8010cce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cd2:	4770      	bx	lr

08010cd4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010cd4:	b480      	push	{r7}
 8010cd6:	b083      	sub	sp, #12
 8010cd8:	af00      	add	r7, sp, #0
 8010cda:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010cdc:	2301      	movs	r3, #1
    }
 8010cde:	4618      	mov	r0, r3
 8010ce0:	370c      	adds	r7, #12
 8010ce2:	46bd      	mov	sp, r7
 8010ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ce8:	4770      	bx	lr

08010cea <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010cea:	b480      	push	{r7}
 8010cec:	b083      	sub	sp, #12
 8010cee:	af00      	add	r7, sp, #0
 8010cf0:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010cf2:	f642 1310 	movw	r3, #10512	; 0x2910
    }
 8010cf6:	4618      	mov	r0, r3
 8010cf8:	370c      	adds	r7, #12
 8010cfa:	46bd      	mov	sp, r7
 8010cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d00:	4770      	bx	lr

08010d02 <_ZN8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010d02:	b480      	push	{r7}
 8010d04:	b083      	sub	sp, #12
 8010d06:	af00      	add	r7, sp, #0
 8010d08:	6078      	str	r0, [r7, #4]
 8010d0a:	460b      	mov	r3, r1
 8010d0c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010d0e:	887b      	ldrh	r3, [r7, #2]
 8010d10:	f642 1210 	movw	r2, #10512	; 0x2910
 8010d14:	fb02 f303 	mul.w	r3, r2, r3
 8010d18:	3308      	adds	r3, #8
 8010d1a:	687a      	ldr	r2, [r7, #4]
 8010d1c:	4413      	add	r3, r2
    }
 8010d1e:	4618      	mov	r0, r3
 8010d20:	370c      	adds	r7, #12
 8010d22:	46bd      	mov	sp, r7
 8010d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d28:	4770      	bx	lr

08010d2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI12MainViewViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010d2a:	b480      	push	{r7}
 8010d2c:	b083      	sub	sp, #12
 8010d2e:	af00      	add	r7, sp, #0
 8010d30:	6078      	str	r0, [r7, #4]
 8010d32:	460b      	mov	r3, r1
 8010d34:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010d36:	887b      	ldrh	r3, [r7, #2]
 8010d38:	f642 1210 	movw	r2, #10512	; 0x2910
 8010d3c:	fb02 f303 	mul.w	r3, r2, r3
 8010d40:	3308      	adds	r3, #8
 8010d42:	687a      	ldr	r2, [r7, #4]
 8010d44:	4413      	add	r3, r2
    }
 8010d46:	4618      	mov	r0, r3
 8010d48:	370c      	adds	r7, #12
 8010d4a:	46bd      	mov	sp, r7
 8010d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d50:	4770      	bx	lr

08010d52 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010d52:	b480      	push	{r7}
 8010d54:	b083      	sub	sp, #12
 8010d56:	af00      	add	r7, sp, #0
 8010d58:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010d5a:	2301      	movs	r3, #1
    }
 8010d5c:	4618      	mov	r0, r3
 8010d5e:	370c      	adds	r7, #12
 8010d60:	46bd      	mov	sp, r7
 8010d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d66:	4770      	bx	lr

08010d68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010d68:	b480      	push	{r7}
 8010d6a:	b083      	sub	sp, #12
 8010d6c:	af00      	add	r7, sp, #0
 8010d6e:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010d70:	2310      	movs	r3, #16
    }
 8010d72:	4618      	mov	r0, r3
 8010d74:	370c      	adds	r7, #12
 8010d76:	46bd      	mov	sp, r7
 8010d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d7c:	4770      	bx	lr

08010d7e <_ZN8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010d7e:	b480      	push	{r7}
 8010d80:	b083      	sub	sp, #12
 8010d82:	af00      	add	r7, sp, #0
 8010d84:	6078      	str	r0, [r7, #4]
 8010d86:	460b      	mov	r3, r1
 8010d88:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010d8a:	887b      	ldrh	r3, [r7, #2]
 8010d8c:	011b      	lsls	r3, r3, #4
 8010d8e:	3308      	adds	r3, #8
 8010d90:	687a      	ldr	r2, [r7, #4]
 8010d92:	4413      	add	r3, r2
    }
 8010d94:	4618      	mov	r0, r3
 8010d96:	370c      	adds	r7, #12
 8010d98:	46bd      	mov	sp, r7
 8010d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d9e:	4770      	bx	lr

08010da0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17MainViewPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010da0:	b480      	push	{r7}
 8010da2:	b083      	sub	sp, #12
 8010da4:	af00      	add	r7, sp, #0
 8010da6:	6078      	str	r0, [r7, #4]
 8010da8:	460b      	mov	r3, r1
 8010daa:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010dac:	887b      	ldrh	r3, [r7, #2]
 8010dae:	011b      	lsls	r3, r3, #4
 8010db0:	3308      	adds	r3, #8
 8010db2:	687a      	ldr	r2, [r7, #4]
 8010db4:	4413      	add	r3, r2
    }
 8010db6:	4618      	mov	r0, r3
 8010db8:	370c      	adds	r7, #12
 8010dba:	46bd      	mov	sp, r7
 8010dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dc0:	4770      	bx	lr

08010dc2 <_GLOBAL__sub_I_touchgfx_init>:
 8010dc2:	b580      	push	{r7, lr}
 8010dc4:	af00      	add	r7, sp, #0
 8010dc6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010dca:	2001      	movs	r0, #1
 8010dcc:	f7ff fefc 	bl	8010bc8 <_Z41__static_initialization_and_destruction_0ii>
 8010dd0:	bd80      	pop	{r7, pc}

08010dd2 <_GLOBAL__sub_D_touchgfx_init>:
 8010dd2:	b580      	push	{r7, lr}
 8010dd4:	af00      	add	r7, sp, #0
 8010dd6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8010dda:	2000      	movs	r0, #0
 8010ddc:	f7ff fef4 	bl	8010bc8 <_Z41__static_initialization_and_destruction_0ii>
 8010de0:	bd80      	pop	{r7, pc}

08010de2 <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 8010de2:	b580      	push	{r7, lr}
 8010de4:	b082      	sub	sp, #8
 8010de6:	af00      	add	r7, sp, #0
 8010de8:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 8010dea:	687b      	ldr	r3, [r7, #4]
 8010dec:	681b      	ldr	r3, [r3, #0]
 8010dee:	3318      	adds	r3, #24
 8010df0:	681b      	ldr	r3, [r3, #0]
 8010df2:	6878      	ldr	r0, [r7, #4]
 8010df4:	4798      	blx	r3
    }
 8010df6:	bf00      	nop
 8010df8:	3708      	adds	r7, #8
 8010dfa:	46bd      	mov	sp, r7
 8010dfc:	bd80      	pop	{r7, pc}

08010dfe <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8010dfe:	b480      	push	{r7}
 8010e00:	b083      	sub	sp, #12
 8010e02:	af00      	add	r7, sp, #0
 8010e04:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8010e06:	687b      	ldr	r3, [r7, #4]
 8010e08:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 8010e0c:	3301      	adds	r3, #1
 8010e0e:	b2da      	uxtb	r2, r3
 8010e10:	687b      	ldr	r3, [r7, #4]
 8010e12:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 8010e16:	bf00      	nop
 8010e18:	370c      	adds	r7, #12
 8010e1a:	46bd      	mov	sp, r7
 8010e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e20:	4770      	bx	lr
	...

08010e24 <__NVIC_EnableIRQ>:
{
 8010e24:	b480      	push	{r7}
 8010e26:	b083      	sub	sp, #12
 8010e28:	af00      	add	r7, sp, #0
 8010e2a:	4603      	mov	r3, r0
 8010e2c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8010e2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010e32:	2b00      	cmp	r3, #0
 8010e34:	db0b      	blt.n	8010e4e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8010e36:	79fb      	ldrb	r3, [r7, #7]
 8010e38:	f003 021f 	and.w	r2, r3, #31
 8010e3c:	4907      	ldr	r1, [pc, #28]	; (8010e5c <__NVIC_EnableIRQ+0x38>)
 8010e3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010e42:	095b      	lsrs	r3, r3, #5
 8010e44:	2001      	movs	r0, #1
 8010e46:	fa00 f202 	lsl.w	r2, r0, r2
 8010e4a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8010e4e:	bf00      	nop
 8010e50:	370c      	adds	r7, #12
 8010e52:	46bd      	mov	sp, r7
 8010e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e58:	4770      	bx	lr
 8010e5a:	bf00      	nop
 8010e5c:	e000e100 	.word	0xe000e100

08010e60 <__NVIC_DisableIRQ>:
{
 8010e60:	b480      	push	{r7}
 8010e62:	b083      	sub	sp, #12
 8010e64:	af00      	add	r7, sp, #0
 8010e66:	4603      	mov	r3, r0
 8010e68:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8010e6a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010e6e:	2b00      	cmp	r3, #0
 8010e70:	db12      	blt.n	8010e98 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8010e72:	79fb      	ldrb	r3, [r7, #7]
 8010e74:	f003 021f 	and.w	r2, r3, #31
 8010e78:	490a      	ldr	r1, [pc, #40]	; (8010ea4 <__NVIC_DisableIRQ+0x44>)
 8010e7a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010e7e:	095b      	lsrs	r3, r3, #5
 8010e80:	2001      	movs	r0, #1
 8010e82:	fa00 f202 	lsl.w	r2, r0, r2
 8010e86:	3320      	adds	r3, #32
 8010e88:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8010e8c:	f3bf 8f4f 	dsb	sy
}
 8010e90:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8010e92:	f3bf 8f6f 	isb	sy
}
 8010e96:	bf00      	nop
}
 8010e98:	bf00      	nop
 8010e9a:	370c      	adds	r7, #12
 8010e9c:	46bd      	mov	sp, r7
 8010e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ea2:	4770      	bx	lr
 8010ea4:	e000e100 	.word	0xe000e100

08010ea8 <__NVIC_SetPriority>:
{
 8010ea8:	b480      	push	{r7}
 8010eaa:	b083      	sub	sp, #12
 8010eac:	af00      	add	r7, sp, #0
 8010eae:	4603      	mov	r3, r0
 8010eb0:	6039      	str	r1, [r7, #0]
 8010eb2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8010eb4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010eb8:	2b00      	cmp	r3, #0
 8010eba:	db0a      	blt.n	8010ed2 <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010ebc:	683b      	ldr	r3, [r7, #0]
 8010ebe:	b2da      	uxtb	r2, r3
 8010ec0:	490c      	ldr	r1, [pc, #48]	; (8010ef4 <__NVIC_SetPriority+0x4c>)
 8010ec2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010ec6:	0112      	lsls	r2, r2, #4
 8010ec8:	b2d2      	uxtb	r2, r2
 8010eca:	440b      	add	r3, r1
 8010ecc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8010ed0:	e00a      	b.n	8010ee8 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010ed2:	683b      	ldr	r3, [r7, #0]
 8010ed4:	b2da      	uxtb	r2, r3
 8010ed6:	4908      	ldr	r1, [pc, #32]	; (8010ef8 <__NVIC_SetPriority+0x50>)
 8010ed8:	79fb      	ldrb	r3, [r7, #7]
 8010eda:	f003 030f 	and.w	r3, r3, #15
 8010ede:	3b04      	subs	r3, #4
 8010ee0:	0112      	lsls	r2, r2, #4
 8010ee2:	b2d2      	uxtb	r2, r2
 8010ee4:	440b      	add	r3, r1
 8010ee6:	761a      	strb	r2, [r3, #24]
}
 8010ee8:	bf00      	nop
 8010eea:	370c      	adds	r7, #12
 8010eec:	46bd      	mov	sp, r7
 8010eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010ef2:	4770      	bx	lr
 8010ef4:	e000e100 	.word	0xe000e100
 8010ef8:	e000ed00 	.word	0xe000ed00

08010efc <SCB_CleanInvalidateDCache>:
{
 8010efc:	b480      	push	{r7}
 8010efe:	b085      	sub	sp, #20
 8010f00:	af00      	add	r7, sp, #0
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 8010f02:	4b21      	ldr	r3, [pc, #132]	; (8010f88 <SCB_CleanInvalidateDCache+0x8c>)
 8010f04:	2200      	movs	r2, #0
 8010f06:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8010f0a:	f3bf 8f4f 	dsb	sy
}
 8010f0e:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 8010f10:	4b1d      	ldr	r3, [pc, #116]	; (8010f88 <SCB_CleanInvalidateDCache+0x8c>)
 8010f12:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8010f16:	607b      	str	r3, [r7, #4]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8010f18:	687b      	ldr	r3, [r7, #4]
 8010f1a:	0b5b      	lsrs	r3, r3, #13
 8010f1c:	f3c3 030e 	ubfx	r3, r3, #0, #15
 8010f20:	60fb      	str	r3, [r7, #12]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8010f22:	687b      	ldr	r3, [r7, #4]
 8010f24:	08db      	lsrs	r3, r3, #3
 8010f26:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8010f2a:	60bb      	str	r3, [r7, #8]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8010f2c:	68fb      	ldr	r3, [r7, #12]
 8010f2e:	015a      	lsls	r2, r3, #5
 8010f30:	f643 73e0 	movw	r3, #16352	; 0x3fe0
 8010f34:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 8010f36:	68ba      	ldr	r2, [r7, #8]
 8010f38:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8010f3a:	4913      	ldr	r1, [pc, #76]	; (8010f88 <SCB_CleanInvalidateDCache+0x8c>)
 8010f3c:	4313      	orrs	r3, r2
 8010f3e:	f8c1 3274 	str.w	r3, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8010f42:	68bb      	ldr	r3, [r7, #8]
 8010f44:	1e5a      	subs	r2, r3, #1
 8010f46:	60ba      	str	r2, [r7, #8]
 8010f48:	2b00      	cmp	r3, #0
 8010f4a:	bf14      	ite	ne
 8010f4c:	2301      	movne	r3, #1
 8010f4e:	2300      	moveq	r3, #0
 8010f50:	b2db      	uxtb	r3, r3
 8010f52:	2b00      	cmp	r3, #0
 8010f54:	d000      	beq.n	8010f58 <SCB_CleanInvalidateDCache+0x5c>
      do {
 8010f56:	e7e9      	b.n	8010f2c <SCB_CleanInvalidateDCache+0x30>
    } while(sets-- != 0U);
 8010f58:	68fb      	ldr	r3, [r7, #12]
 8010f5a:	1e5a      	subs	r2, r3, #1
 8010f5c:	60fa      	str	r2, [r7, #12]
 8010f5e:	2b00      	cmp	r3, #0
 8010f60:	bf14      	ite	ne
 8010f62:	2301      	movne	r3, #1
 8010f64:	2300      	moveq	r3, #0
 8010f66:	b2db      	uxtb	r3, r3
 8010f68:	2b00      	cmp	r3, #0
 8010f6a:	d000      	beq.n	8010f6e <SCB_CleanInvalidateDCache+0x72>
    do {
 8010f6c:	e7d9      	b.n	8010f22 <SCB_CleanInvalidateDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 8010f6e:	f3bf 8f4f 	dsb	sy
}
 8010f72:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8010f74:	f3bf 8f6f 	isb	sy
}
 8010f78:	bf00      	nop
}
 8010f7a:	bf00      	nop
 8010f7c:	3714      	adds	r7, #20
 8010f7e:	46bd      	mov	sp, r7
 8010f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f84:	4770      	bx	lr
 8010f86:	bf00      	nop
 8010f88:	e000ed00 	.word	0xe000ed00

08010f8c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 8010f8c:	b5b0      	push	{r4, r5, r7, lr}
 8010f8e:	b082      	sub	sp, #8
 8010f90:	af00      	add	r7, sp, #0
 8010f92:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8010f94:	687b      	ldr	r3, [r7, #4]
 8010f96:	4618      	mov	r0, r3
 8010f98:	f006 f8f0 	bl	801717c <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(Application::getInstance()));
 8010f9c:	687d      	ldr	r5, [r7, #4]
 8010f9e:	687b      	ldr	r3, [r7, #4]
 8010fa0:	681b      	ldr	r3, [r3, #0]
 8010fa2:	334c      	adds	r3, #76	; 0x4c
 8010fa4:	681c      	ldr	r4, [r3, #0]
 8010fa6:	f00a fa7d 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 8010faa:	4603      	mov	r3, r0
 8010fac:	4619      	mov	r1, r3
 8010fae:	4628      	mov	r0, r5
 8010fb0:	47a0      	blx	r4
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0xC003FC00, (void*)0);
 8010fb2:	6878      	ldr	r0, [r7, #4]
 8010fb4:	687b      	ldr	r3, [r7, #4]
 8010fb6:	681b      	ldr	r3, [r3, #0]
 8010fb8:	3370      	adds	r3, #112	; 0x70
 8010fba:	681c      	ldr	r4, [r3, #0]
 8010fbc:	2300      	movs	r3, #0
 8010fbe:	4a04      	ldr	r2, [pc, #16]	; (8010fd0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>)
 8010fc0:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8010fc4:	47a0      	blx	r4
}
 8010fc6:	bf00      	nop
 8010fc8:	3708      	adds	r7, #8
 8010fca:	46bd      	mov	sp, r7
 8010fcc:	bdb0      	pop	{r4, r5, r7, pc}
 8010fce:	bf00      	nop
 8010fd0:	c003fc00 	.word	0xc003fc00

08010fd4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8010fd4:	b580      	push	{r7, lr}
 8010fd6:	b082      	sub	sp, #8
 8010fd8:	af00      	add	r7, sp, #0
 8010fda:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 8010fdc:	2109      	movs	r1, #9
 8010fde:	205a      	movs	r0, #90	; 0x5a
 8010fe0:	f7ff ff62 	bl	8010ea8 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 8010fe4:	2109      	movs	r1, #9
 8010fe6:	2058      	movs	r0, #88	; 0x58
 8010fe8:	f7ff ff5e 	bl	8010ea8 <__NVIC_SetPriority>
}
 8010fec:	bf00      	nop
 8010fee:	3708      	adds	r7, #8
 8010ff0:	46bd      	mov	sp, r7
 8010ff2:	bd80      	pop	{r7, pc}

08010ff4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8010ff4:	b580      	push	{r7, lr}
 8010ff6:	b082      	sub	sp, #8
 8010ff8:	af00      	add	r7, sp, #0
 8010ffa:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 8010ffc:	205a      	movs	r0, #90	; 0x5a
 8010ffe:	f7ff ff11 	bl	8010e24 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 8011002:	2058      	movs	r0, #88	; 0x58
 8011004:	f7ff ff0e 	bl	8010e24 <__NVIC_EnableIRQ>
}
 8011008:	bf00      	nop
 801100a:	3708      	adds	r7, #8
 801100c:	46bd      	mov	sp, r7
 801100e:	bd80      	pop	{r7, pc}

08011010 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8011010:	b580      	push	{r7, lr}
 8011012:	b082      	sub	sp, #8
 8011014:	af00      	add	r7, sp, #0
 8011016:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 8011018:	205a      	movs	r0, #90	; 0x5a
 801101a:	f7ff ff21 	bl	8010e60 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 801101e:	2058      	movs	r0, #88	; 0x58
 8011020:	f7ff ff1e 	bl	8010e60 <__NVIC_DisableIRQ>
}
 8011024:	bf00      	nop
 8011026:	3708      	adds	r7, #8
 8011028:	46bd      	mov	sp, r7
 801102a:	bd80      	pop	{r7, pc}

0801102c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 801102c:	b480      	push	{r7}
 801102e:	b083      	sub	sp, #12
 8011030:	af00      	add	r7, sp, #0
 8011032:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8011034:	4b11      	ldr	r3, [pc, #68]	; (801107c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011036:	68db      	ldr	r3, [r3, #12]
 8011038:	b29b      	uxth	r3, r3
 801103a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801103e:	b29b      	uxth	r3, r3
 8011040:	3b01      	subs	r3, #1
 8011042:	b29a      	uxth	r2, r3
 8011044:	4b0e      	ldr	r3, [pc, #56]	; (8011080 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8011046:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8011048:	4b0c      	ldr	r3, [pc, #48]	; (801107c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801104a:	691b      	ldr	r3, [r3, #16]
 801104c:	b29b      	uxth	r3, r3
 801104e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011052:	b29b      	uxth	r3, r3
 8011054:	3b01      	subs	r3, #1
 8011056:	b29a      	uxth	r2, r3
 8011058:	4b0a      	ldr	r3, [pc, #40]	; (8011084 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 801105a:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 801105c:	4b08      	ldr	r3, [pc, #32]	; (8011080 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 801105e:	881a      	ldrh	r2, [r3, #0]
 8011060:	4b06      	ldr	r3, [pc, #24]	; (801107c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011062:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8011064:	4b05      	ldr	r3, [pc, #20]	; (801107c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011066:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011068:	4a04      	ldr	r2, [pc, #16]	; (801107c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801106a:	f043 0301 	orr.w	r3, r3, #1
 801106e:	6353      	str	r3, [r2, #52]	; 0x34
}
 8011070:	bf00      	nop
 8011072:	370c      	adds	r7, #12
 8011074:	46bd      	mov	sp, r7
 8011076:	f85d 7b04 	ldr.w	r7, [sp], #4
 801107a:	4770      	bx	lr
 801107c:	40016800 	.word	0x40016800
 8011080:	20003d98 	.word	0x20003d98
 8011084:	20003d9a 	.word	0x20003d9a

08011088 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8011088:	b480      	push	{r7}
 801108a:	b083      	sub	sp, #12
 801108c:	af00      	add	r7, sp, #0
 801108e:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8011090:	4b03      	ldr	r3, [pc, #12]	; (80110a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 8011092:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 8011094:	4618      	mov	r0, r3
 8011096:	370c      	adds	r7, #12
 8011098:	46bd      	mov	sp, r7
 801109a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801109e:	4770      	bx	lr
 80110a0:	40016884 	.word	0x40016884

080110a4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 80110a4:	b480      	push	{r7}
 80110a6:	b083      	sub	sp, #12
 80110a8:	af00      	add	r7, sp, #0
 80110aa:	6078      	str	r0, [r7, #4]
 80110ac:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80110ae:	4a06      	ldr	r2, [pc, #24]	; (80110c8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 80110b0:	683b      	ldr	r3, [r7, #0]
 80110b2:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80110b4:	4b05      	ldr	r3, [pc, #20]	; (80110cc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 80110b6:	2201      	movs	r2, #1
 80110b8:	625a      	str	r2, [r3, #36]	; 0x24
}
 80110ba:	bf00      	nop
 80110bc:	370c      	adds	r7, #12
 80110be:	46bd      	mov	sp, r7
 80110c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110c4:	4770      	bx	lr
 80110c6:	bf00      	nop
 80110c8:	40016884 	.word	0x40016884
 80110cc:	40016800 	.word	0x40016800

080110d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80110d0:	b580      	push	{r7, lr}
 80110d2:	b082      	sub	sp, #8
 80110d4:	af00      	add	r7, sp, #0
 80110d6:	6078      	str	r0, [r7, #4]
 80110d8:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 80110da:	687b      	ldr	r3, [r7, #4]
 80110dc:	6839      	ldr	r1, [r7, #0]
 80110de:	4618      	mov	r0, r3
 80110e0:	f005 fd60 	bl	8016ba4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache prior to letting DMA2D accessing it. That's done
    // using SCB_CleanInvalidateDCache().
    if ((SCB->CCR & SCB_CCR_DC_Msk) != 0)   // Check data cache is enabled
 80110e4:	4b08      	ldr	r3, [pc, #32]	; (8011108 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x38>)
 80110e6:	695b      	ldr	r3, [r3, #20]
 80110e8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80110ec:	2b00      	cmp	r3, #0
 80110ee:	bf14      	ite	ne
 80110f0:	2301      	movne	r3, #1
 80110f2:	2300      	moveq	r3, #0
 80110f4:	b2db      	uxtb	r3, r3
 80110f6:	2b00      	cmp	r3, #0
 80110f8:	d001      	beq.n	80110fe <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x2e>
    {
        SCB_CleanInvalidateDCache();
 80110fa:	f7ff feff 	bl	8010efc <SCB_CleanInvalidateDCache>
    }
}
 80110fe:	bf00      	nop
 8011100:	3708      	adds	r7, #8
 8011102:	46bd      	mov	sp, r7
 8011104:	bd80      	pop	{r7, pc}
 8011106:	bf00      	nop
 8011108:	e000ed00 	.word	0xe000ed00

0801110c <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 801110c:	b580      	push	{r7, lr}
 801110e:	b084      	sub	sp, #16
 8011110:	af00      	add	r7, sp, #0
 8011112:	60f8      	str	r0, [r7, #12]
 8011114:	60b9      	str	r1, [r7, #8]
 8011116:	607a      	str	r2, [r7, #4]
 8011118:	603b      	str	r3, [r7, #0]
  return HAL::blockCopy(dest, src, numBytes);
 801111a:	68f8      	ldr	r0, [r7, #12]
 801111c:	683b      	ldr	r3, [r7, #0]
 801111e:	687a      	ldr	r2, [r7, #4]
 8011120:	68b9      	ldr	r1, [r7, #8]
 8011122:	f005 fe74 	bl	8016e0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8011126:	4603      	mov	r3, r0
}
 8011128:	4618      	mov	r0, r3
 801112a:	3710      	adds	r7, #16
 801112c:	46bd      	mov	sp, r7
 801112e:	bd80      	pop	{r7, pc}

08011130 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 8011130:	b580      	push	{r7, lr}
 8011132:	b082      	sub	sp, #8
 8011134:	af00      	add	r7, sp, #0
 8011136:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache prior to letting DMA2D accessing it. That's done
    // using SCB_CleanInvalidateDCache().
    if ((SCB->CCR & SCB_CCR_DC_Msk) != 0)   // Check data cache is enabled
 8011138:	4b08      	ldr	r3, [pc, #32]	; (801115c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x2c>)
 801113a:	695b      	ldr	r3, [r3, #20]
 801113c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8011140:	2b00      	cmp	r3, #0
 8011142:	bf14      	ite	ne
 8011144:	2301      	movne	r3, #1
 8011146:	2300      	moveq	r3, #0
 8011148:	b2db      	uxtb	r3, r3
 801114a:	2b00      	cmp	r3, #0
 801114c:	d001      	beq.n	8011152 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 801114e:	f7ff fed5 	bl	8010efc <SCB_CleanInvalidateDCache>
    }
}
 8011152:	bf00      	nop
 8011154:	3708      	adds	r7, #8
 8011156:	46bd      	mov	sp, r7
 8011158:	bd80      	pop	{r7, pc}
 801115a:	bf00      	nop
 801115c:	e000ed00 	.word	0xe000ed00

08011160 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 8011160:	b580      	push	{r7, lr}
 8011162:	b082      	sub	sp, #8
 8011164:	af00      	add	r7, sp, #0
 8011166:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache prior to letting DMA2D accessing it. That's done
    // using SCB_CleanInvalidateDCache().
    if ((SCB->CCR & SCB_CCR_DC_Msk) != 0)   // Check data cache is enabled
 8011168:	4b08      	ldr	r3, [pc, #32]	; (801118c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>)
 801116a:	695b      	ldr	r3, [r3, #20]
 801116c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8011170:	2b00      	cmp	r3, #0
 8011172:	bf14      	ite	ne
 8011174:	2301      	movne	r3, #1
 8011176:	2300      	moveq	r3, #0
 8011178:	b2db      	uxtb	r3, r3
 801117a:	2b00      	cmp	r3, #0
 801117c:	d001      	beq.n	8011182 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 801117e:	f7ff febd 	bl	8010efc <SCB_CleanInvalidateDCache>
    }
}
 8011182:	bf00      	nop
 8011184:	3708      	adds	r7, #8
 8011186:	46bd      	mov	sp, r7
 8011188:	bd80      	pop	{r7, pc}
 801118a:	bf00      	nop
 801118c:	e000ed00 	.word	0xe000ed00

08011190 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 8011190:	b580      	push	{r7, lr}
 8011192:	b082      	sub	sp, #8
 8011194:	af00      	add	r7, sp, #0
 8011196:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 8011198:	4b1a      	ldr	r3, [pc, #104]	; (8011204 <HAL_LTDC_LineEventCallback+0x74>)
 801119a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801119c:	4a1a      	ldr	r2, [pc, #104]	; (8011208 <HAL_LTDC_LineEventCallback+0x78>)
 801119e:	8812      	ldrh	r2, [r2, #0]
 80111a0:	4293      	cmp	r3, r2
 80111a2:	bf0c      	ite	eq
 80111a4:	2301      	moveq	r3, #1
 80111a6:	2300      	movne	r3, #0
 80111a8:	b2db      	uxtb	r3, r3
 80111aa:	2b00      	cmp	r3, #0
 80111ac:	d017      	beq.n	80111de <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80111ae:	4b17      	ldr	r3, [pc, #92]	; (801120c <HAL_LTDC_LineEventCallback+0x7c>)
 80111b0:	881b      	ldrh	r3, [r3, #0]
 80111b2:	4619      	mov	r1, r3
 80111b4:	6878      	ldr	r0, [r7, #4]
 80111b6:	f7f3 fc4d 	bl	8004a54 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 80111ba:	f7f8 fa6f 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 80111be:	4603      	mov	r3, r0
 80111c0:	4618      	mov	r0, r3
 80111c2:	f7ff fe1c 	bl	8010dfe <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 80111c6:	f7fe fc8d 	bl	800fae4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80111ca:	f7f8 fa67 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 80111ce:	4603      	mov	r3, r0
 80111d0:	4618      	mov	r0, r3
 80111d2:	f006 fa5b 	bl	801768c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 80111d6:	2000      	movs	r0, #0
 80111d8:	f7fe f8f6 	bl	800f3c8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 80111dc:	e00e      	b.n	80111fc <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80111de:	4b0a      	ldr	r3, [pc, #40]	; (8011208 <HAL_LTDC_LineEventCallback+0x78>)
 80111e0:	881b      	ldrh	r3, [r3, #0]
 80111e2:	4619      	mov	r1, r3
 80111e4:	6878      	ldr	r0, [r7, #4]
 80111e6:	f7f3 fc35 	bl	8004a54 <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 80111ea:	2000      	movs	r0, #0
 80111ec:	f7fe f8f7 	bl	800f3de <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 80111f0:	f7f8 fa54 	bl	800969c <_ZN8touchgfx3HAL11getInstanceEv>
 80111f4:	4603      	mov	r3, r0
 80111f6:	4618      	mov	r0, r3
 80111f8:	f7ff fdf3 	bl	8010de2 <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 80111fc:	bf00      	nop
 80111fe:	3708      	adds	r7, #8
 8011200:	46bd      	mov	sp, r7
 8011202:	bd80      	pop	{r7, pc}
 8011204:	40016800 	.word	0x40016800
 8011208:	20003d98 	.word	0x20003d98
 801120c:	20003d9a 	.word	0x20003d9a

08011210 <_ZN9interface11GuiObserverD1Ev>:
namespace interface {

class GuiObserver
{
public:
    virtual ~GuiObserver() {}
 8011210:	b480      	push	{r7}
 8011212:	b083      	sub	sp, #12
 8011214:	af00      	add	r7, sp, #0
 8011216:	6078      	str	r0, [r7, #4]
 8011218:	4a04      	ldr	r2, [pc, #16]	; (801122c <_ZN9interface11GuiObserverD1Ev+0x1c>)
 801121a:	687b      	ldr	r3, [r7, #4]
 801121c:	601a      	str	r2, [r3, #0]
 801121e:	687b      	ldr	r3, [r7, #4]
 8011220:	4618      	mov	r0, r3
 8011222:	370c      	adds	r7, #12
 8011224:	46bd      	mov	sp, r7
 8011226:	f85d 7b04 	ldr.w	r7, [sp], #4
 801122a:	4770      	bx	lr
 801122c:	0802f6d0 	.word	0x0802f6d0

08011230 <_ZN9interface11GuiObserverD0Ev>:
 8011230:	b580      	push	{r7, lr}
 8011232:	b082      	sub	sp, #8
 8011234:	af00      	add	r7, sp, #0
 8011236:	6078      	str	r0, [r7, #4]
 8011238:	6878      	ldr	r0, [r7, #4]
 801123a:	f7ff ffe9 	bl	8011210 <_ZN9interface11GuiObserverD1Ev>
 801123e:	2104      	movs	r1, #4
 8011240:	6878      	ldr	r0, [r7, #4]
 8011242:	f01a fc10 	bl	802ba66 <_ZdlPvj>
 8011246:	687b      	ldr	r3, [r7, #4]
 8011248:	4618      	mov	r0, r3
 801124a:	3708      	adds	r7, #8
 801124c:	46bd      	mov	sp, r7
 801124e:	bd80      	pop	{r7, pc}

08011250 <_ZN12oscilloscope10ControllerD1Ev>:
class Controller : public XFBehavior,
                   public interface::GuiObserver
{
public:
	Controller();
	virtual ~Controller() {}
 8011250:	b580      	push	{r7, lr}
 8011252:	b082      	sub	sp, #8
 8011254:	af00      	add	r7, sp, #0
 8011256:	6078      	str	r0, [r7, #4]
 8011258:	4a09      	ldr	r2, [pc, #36]	; (8011280 <_ZN12oscilloscope10ControllerD1Ev+0x30>)
 801125a:	687b      	ldr	r3, [r7, #4]
 801125c:	601a      	str	r2, [r3, #0]
 801125e:	4a09      	ldr	r2, [pc, #36]	; (8011284 <_ZN12oscilloscope10ControllerD1Ev+0x34>)
 8011260:	687b      	ldr	r3, [r7, #4]
 8011262:	611a      	str	r2, [r3, #16]
 8011264:	687b      	ldr	r3, [r7, #4]
 8011266:	3310      	adds	r3, #16
 8011268:	4618      	mov	r0, r3
 801126a:	f7ff ffd1 	bl	8011210 <_ZN9interface11GuiObserverD1Ev>
 801126e:	687b      	ldr	r3, [r7, #4]
 8011270:	4618      	mov	r0, r3
 8011272:	f002 fbe3 	bl	8013a3c <_ZN10XFBehaviorD1Ev>
 8011276:	687b      	ldr	r3, [r7, #4]
 8011278:	4618      	mov	r0, r3
 801127a:	3708      	adds	r7, #8
 801127c:	46bd      	mov	sp, r7
 801127e:	bd80      	pop	{r7, pc}
 8011280:	0802f72c 	.word	0x0802f72c
 8011284:	0802f764 	.word	0x0802f764

08011288 <_ZThn16_N12oscilloscope10ControllerD1Ev>:
 8011288:	f1a0 0010 	sub.w	r0, r0, #16
 801128c:	e7e0      	b.n	8011250 <_ZN12oscilloscope10ControllerD1Ev>
 801128e:	bf00      	nop

08011290 <_ZN12oscilloscope10ControllerD0Ev>:
 8011290:	b580      	push	{r7, lr}
 8011292:	b082      	sub	sp, #8
 8011294:	af00      	add	r7, sp, #0
 8011296:	6078      	str	r0, [r7, #4]
 8011298:	6878      	ldr	r0, [r7, #4]
 801129a:	f7ff ffd9 	bl	8011250 <_ZN12oscilloscope10ControllerD1Ev>
 801129e:	212c      	movs	r1, #44	; 0x2c
 80112a0:	6878      	ldr	r0, [r7, #4]
 80112a2:	f01a fbe0 	bl	802ba66 <_ZdlPvj>
 80112a6:	687b      	ldr	r3, [r7, #4]
 80112a8:	4618      	mov	r0, r3
 80112aa:	3708      	adds	r7, #8
 80112ac:	46bd      	mov	sp, r7
 80112ae:	bd80      	pop	{r7, pc}

080112b0 <_ZThn16_N12oscilloscope10ControllerD0Ev>:
 80112b0:	f1a0 0010 	sub.w	r0, r0, #16
 80112b4:	e7ec      	b.n	8011290 <_ZN12oscilloscope10ControllerD0Ev>
	...

080112b8 <_ZN9interface33ButtonsControllerCallbackProviderD1Ev>:
 *
 */
class ButtonsControllerCallbackProvider
{
public:
    virtual ~ButtonsControllerCallbackProvider() {}
 80112b8:	b480      	push	{r7}
 80112ba:	b083      	sub	sp, #12
 80112bc:	af00      	add	r7, sp, #0
 80112be:	6078      	str	r0, [r7, #4]
 80112c0:	4a04      	ldr	r2, [pc, #16]	; (80112d4 <_ZN9interface33ButtonsControllerCallbackProviderD1Ev+0x1c>)
 80112c2:	687b      	ldr	r3, [r7, #4]
 80112c4:	601a      	str	r2, [r3, #0]
 80112c6:	687b      	ldr	r3, [r7, #4]
 80112c8:	4618      	mov	r0, r3
 80112ca:	370c      	adds	r7, #12
 80112cc:	46bd      	mov	sp, r7
 80112ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112d2:	4770      	bx	lr
 80112d4:	0802f6c0 	.word	0x0802f6c0

080112d8 <_ZN9interface33ButtonsControllerCallbackProviderD0Ev>:
 80112d8:	b580      	push	{r7, lr}
 80112da:	b082      	sub	sp, #8
 80112dc:	af00      	add	r7, sp, #0
 80112de:	6078      	str	r0, [r7, #4]
 80112e0:	6878      	ldr	r0, [r7, #4]
 80112e2:	f7ff ffe9 	bl	80112b8 <_ZN9interface33ButtonsControllerCallbackProviderD1Ev>
 80112e6:	2104      	movs	r1, #4
 80112e8:	6878      	ldr	r0, [r7, #4]
 80112ea:	f01a fbbc 	bl	802ba66 <_ZdlPvj>
 80112ee:	687b      	ldr	r3, [r7, #4]
 80112f0:	4618      	mov	r0, r3
 80112f2:	3708      	adds	r7, #8
 80112f4:	46bd      	mov	sp, r7
 80112f6:	bd80      	pop	{r7, pc}

080112f8 <_ZN17ButtonsController5startEv>:

    inline void start() { startBehavior(); }
 80112f8:	b580      	push	{r7, lr}
 80112fa:	b082      	sub	sp, #8
 80112fc:	af00      	add	r7, sp, #0
 80112fe:	6078      	str	r0, [r7, #4]
 8011300:	687b      	ldr	r3, [r7, #4]
 8011302:	f103 0208 	add.w	r2, r3, #8
 8011306:	687b      	ldr	r3, [r7, #4]
 8011308:	689b      	ldr	r3, [r3, #8]
 801130a:	3308      	adds	r3, #8
 801130c:	681b      	ldr	r3, [r3, #0]
 801130e:	4610      	mov	r0, r2
 8011310:	4798      	blx	r3
 8011312:	bf00      	nop
 8011314:	3708      	adds	r7, #8
 8011316:	46bd      	mov	sp, r7
 8011318:	bd80      	pop	{r7, pc}

0801131a <Factory_initialize>:
external::FrequencyGenerator Factory::_fgen;
oscilloscope::FreqGenController Factory::_fgenctrl;
ButtonsController Factory::_bc;

void Factory_initialize()
{
 801131a:	b580      	push	{r7, lr}
 801131c:	af00      	add	r7, sp, #0
    Factory::initialize();
 801131e:	f000 f809 	bl	8011334 <_ZN7Factory10initializeEv>

}
 8011322:	bf00      	nop
 8011324:	bd80      	pop	{r7, pc}

08011326 <Factory_build>:

void Factory_build()
{
 8011326:	b580      	push	{r7, lr}
 8011328:	af00      	add	r7, sp, #0
    Factory::build();
 801132a:	f000 f827 	bl	801137c <_ZN7Factory5buildEv>
}
 801132e:	bf00      	nop
 8011330:	bd80      	pop	{r7, pc}
	...

08011334 <_ZN7Factory10initializeEv>:

}

// static
void Factory::initialize()
{
 8011334:	b598      	push	{r3, r4, r7, lr}
 8011336:	af00      	add	r7, sp, #0
    Trace::out("---------------------------------------------");
 8011338:	480e      	ldr	r0, [pc, #56]	; (8011374 <_ZN7Factory10initializeEv+0x40>)
 801133a:	f001 fff9 	bl	8013330 <_ZN5Trace3outEPKcz>
    Trace::out("Initializing...");
 801133e:	480e      	ldr	r0, [pc, #56]	; (8011378 <_ZN7Factory10initializeEv+0x44>)
 8011340:	f001 fff6 	bl	8013330 <_ZN5Trace3outEPKcz>

    // TODO: Uncomment code line below in order to call OscilloscopeController's initialize() method
//	getOscilloscopeController().initialize(getGui(), adcValuesBuffer, ADC_VALUES_BUFFER_SIZE);
    getFrequencyGenerator().initialize();
 8011344:	f000 f8c4 	bl	80114d0 <_ZN7Factory21getFrequencyGeneratorEv>
 8011348:	4603      	mov	r3, r0
 801134a:	4618      	mov	r0, r3
 801134c:	f001 fb9e 	bl	8012a8c <_ZN8external18FrequencyGenerator10initializeEv>
    getFreqGenController().initialize(getGui());
 8011350:	f000 f87e 	bl	8011450 <_ZN7Factory20getFreqGenControllerEv>
 8011354:	4604      	mov	r4, r0
 8011356:	f000 f867 	bl	8011428 <_ZN7Factory6getGuiEv>
 801135a:	4603      	mov	r3, r0
 801135c:	4619      	mov	r1, r3
 801135e:	4620      	mov	r0, r4
 8011360:	f000 fcda 	bl	8011d18 <_ZN12oscilloscope17FreqGenController10initializeERNS_3GuiE>
#if (TOUCHGFX_BAREMETAL != 0)
    getTouchGfxTask().initialize();
 8011364:	f000 f886 	bl	8011474 <_ZN7Factory15getTouchGfxTaskEv>
 8011368:	4603      	mov	r3, r0
 801136a:	4618      	mov	r0, r3
 801136c:	f001 fa08 	bl	8012780 <_ZN12TouchGfxTask10initializeEv>
#endif  // TOUCHGFX_BAREMETAL
}
 8011370:	bf00      	nop
 8011372:	bd98      	pop	{r3, r4, r7, pc}
 8011374:	0802e268 	.word	0x0802e268
 8011378:	0802e298 	.word	0x0802e298

0801137c <_ZN7Factory5buildEv>:

// static
void Factory::build()
{
 801137c:	b5b0      	push	{r4, r5, r7, lr}
 801137e:	b082      	sub	sp, #8
 8011380:	af00      	add	r7, sp, #0
    Trace::out("Building...");
 8011382:	4820      	ldr	r0, [pc, #128]	; (8011404 <_ZN7Factory5buildEv+0x88>)
 8011384:	f001 ffd4 	bl	8013330 <_ZN5Trace3outEPKcz>

    HAL_ADC_Start_IT(&hadc3);                     // Start ADC conversion
 8011388:	481f      	ldr	r0, [pc, #124]	; (8011408 <_ZN7Factory5buildEv+0x8c>)
 801138a:	f7f0 ffab 	bl	80022e4 <HAL_ADC_Start_IT>
    HAL_TIM_OC_Start_IT(&htim1, TIM_CHANNEL_1);   // Start TIM1 with trigger channel 1
 801138e:	2100      	movs	r1, #0
 8011390:	481e      	ldr	r0, [pc, #120]	; (801140c <_ZN7Factory5buildEv+0x90>)
 8011392:	f7f5 fba1 	bl	8006ad8 <HAL_TIM_OC_Start_IT>

    getOscilloscopeController().start();
 8011396:	f000 f83f 	bl	8011418 <_ZN7Factory25getOscilloscopeControllerEv>
 801139a:	4603      	mov	r3, r0
 801139c:	4618      	mov	r0, r3
 801139e:	f000 ff43 	bl	8012228 <_ZN12oscilloscope10Controller5startEv>
    getGui().start();
 80113a2:	f000 f841 	bl	8011428 <_ZN7Factory6getGuiEv>
 80113a6:	4603      	mov	r3, r0
 80113a8:	4618      	mov	r0, r3
 80113aa:	f000 fda9 	bl	8011f00 <_ZN12oscilloscope3Gui5startEv>
    getButtonsController().registerCallback(&getFreqGenController(),
 80113ae:	f000 f845 	bl	801143c <_ZN7Factory20getButtonsControllerEv>
 80113b2:	4604      	mov	r4, r0
        								    (interface::ButtonsControllerCallbackProvider::CallbackMethod)&oscilloscope::FreqGenController::onButtonChanged);
 80113b4:	6823      	ldr	r3, [r4, #0]
 80113b6:	330c      	adds	r3, #12
 80113b8:	681d      	ldr	r5, [r3, #0]
    getButtonsController().registerCallback(&getFreqGenController(),
 80113ba:	f000 f849 	bl	8011450 <_ZN7Factory20getFreqGenControllerEv>
 80113be:	4601      	mov	r1, r0
 80113c0:	4b13      	ldr	r3, [pc, #76]	; (8011410 <_ZN7Factory5buildEv+0x94>)
 80113c2:	603b      	str	r3, [r7, #0]
 80113c4:	2300      	movs	r3, #0
 80113c6:	607b      	str	r3, [r7, #4]
 80113c8:	463b      	mov	r3, r7
 80113ca:	cb0c      	ldmia	r3, {r2, r3}
 80113cc:	4620      	mov	r0, r4
 80113ce:	47a8      	blx	r5

    getFreqGenController().start();
 80113d0:	f000 f83e 	bl	8011450 <_ZN7Factory20getFreqGenControllerEv>
 80113d4:	4603      	mov	r3, r0
 80113d6:	4618      	mov	r0, r3
 80113d8:	f000 fac6 	bl	8011968 <_ZN12oscilloscope17FreqGenController5startEv>
    getButtonsController().start();
 80113dc:	f000 f82e 	bl	801143c <_ZN7Factory20getButtonsControllerEv>
 80113e0:	4603      	mov	r3, r0
 80113e2:	4618      	mov	r0, r3
 80113e4:	f7ff ff88 	bl	80112f8 <_ZN17ButtonsController5startEv>
#if (TOUCHGFX_BAREMETAL != 0)
    getTouchGfxTask().start();
 80113e8:	f000 f844 	bl	8011474 <_ZN7Factory15getTouchGfxTaskEv>
 80113ec:	4603      	mov	r3, r0
 80113ee:	4618      	mov	r0, r3
 80113f0:	f001 f9d0 	bl	8012794 <_ZN12TouchGfxTask5startEv>
#endif  // TOUCHGFX_BAREMETAL

    Trace::out("Running...");
 80113f4:	4807      	ldr	r0, [pc, #28]	; (8011414 <_ZN7Factory5buildEv+0x98>)
 80113f6:	f001 ff9b 	bl	8013330 <_ZN5Trace3outEPKcz>
}
 80113fa:	bf00      	nop
 80113fc:	3708      	adds	r7, #8
 80113fe:	46bd      	mov	sp, r7
 8011400:	bdb0      	pop	{r4, r5, r7, pc}
 8011402:	bf00      	nop
 8011404:	0802e2a8 	.word	0x0802e2a8
 8011408:	20000140 	.word	0x20000140
 801140c:	20000344 	.word	0x20000344
 8011410:	08011755 	.word	0x08011755
 8011414:	0802e2b4 	.word	0x0802e2b4

08011418 <_ZN7Factory25getOscilloscopeControllerEv>:

oscilloscope::Controller & Factory::getOscilloscopeController()
{
 8011418:	b580      	push	{r7, lr}
 801141a:	af00      	add	r7, sp, #0
    return oscilloscope::Controller::getInstance();
 801141c:	f000 feec 	bl	80121f8 <_ZN12oscilloscope10Controller11getInstanceEv>
 8011420:	4603      	mov	r3, r0
}
 8011422:	4618      	mov	r0, r3
 8011424:	bd80      	pop	{r7, pc}
	...

08011428 <_ZN7Factory6getGuiEv>:

//static
oscilloscope::Gui & Factory::getGui()
{
 8011428:	b480      	push	{r7}
 801142a:	af00      	add	r7, sp, #0
    return _gui;
 801142c:	4b02      	ldr	r3, [pc, #8]	; (8011438 <_ZN7Factory6getGuiEv+0x10>)
}
 801142e:	4618      	mov	r0, r3
 8011430:	46bd      	mov	sp, r7
 8011432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011436:	4770      	bx	lr
 8011438:	20003dc8 	.word	0x20003dc8

0801143c <_ZN7Factory20getButtonsControllerEv>:

//static
ButtonsController& Factory::getButtonsController() {
 801143c:	b480      	push	{r7}
 801143e:	af00      	add	r7, sp, #0
	return _bc;
 8011440:	4b02      	ldr	r3, [pc, #8]	; (801144c <_ZN7Factory20getButtonsControllerEv+0x10>)
}
 8011442:	4618      	mov	r0, r3
 8011444:	46bd      	mov	sp, r7
 8011446:	f85d 7b04 	ldr.w	r7, [sp], #4
 801144a:	4770      	bx	lr
 801144c:	20003df8 	.word	0x20003df8

08011450 <_ZN7Factory20getFreqGenControllerEv>:

//static
oscilloscope::FreqGenController& Factory::getFreqGenController() {
 8011450:	b480      	push	{r7}
 8011452:	af00      	add	r7, sp, #0
	return _fgenctrl;
 8011454:	4b02      	ldr	r3, [pc, #8]	; (8011460 <_ZN7Factory20getFreqGenControllerEv+0x10>)
}
 8011456:	4618      	mov	r0, r3
 8011458:	46bd      	mov	sp, r7
 801145a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801145e:	4770      	bx	lr
 8011460:	20003ddc 	.word	0x20003ddc

08011464 <__tcf_0>:

#if (TOUCHGFX_BAREMETAL != 0)
// static
TouchGfxTask & Factory::getTouchGfxTask()
{
    static TouchGfxTask touchGfxTask;
 8011464:	b580      	push	{r7, lr}
 8011466:	af00      	add	r7, sp, #0
 8011468:	4801      	ldr	r0, [pc, #4]	; (8011470 <__tcf_0+0xc>)
 801146a:	f000 f8ab 	bl	80115c4 <_ZN12TouchGfxTaskD1Ev>
 801146e:	bd80      	pop	{r7, pc}
 8011470:	20003e74 	.word	0x20003e74

08011474 <_ZN7Factory15getTouchGfxTaskEv>:
{
 8011474:	b580      	push	{r7, lr}
 8011476:	af00      	add	r7, sp, #0
    static TouchGfxTask touchGfxTask;
 8011478:	4b12      	ldr	r3, [pc, #72]	; (80114c4 <_ZN7Factory15getTouchGfxTaskEv+0x50>)
 801147a:	781b      	ldrb	r3, [r3, #0]
 801147c:	f3bf 8f5b 	dmb	ish
 8011480:	b2db      	uxtb	r3, r3
 8011482:	f003 0301 	and.w	r3, r3, #1
 8011486:	2b00      	cmp	r3, #0
 8011488:	bf0c      	ite	eq
 801148a:	2301      	moveq	r3, #1
 801148c:	2300      	movne	r3, #0
 801148e:	b2db      	uxtb	r3, r3
 8011490:	2b00      	cmp	r3, #0
 8011492:	d013      	beq.n	80114bc <_ZN7Factory15getTouchGfxTaskEv+0x48>
 8011494:	480b      	ldr	r0, [pc, #44]	; (80114c4 <_ZN7Factory15getTouchGfxTaskEv+0x50>)
 8011496:	f01a fae8 	bl	802ba6a <__cxa_guard_acquire>
 801149a:	4603      	mov	r3, r0
 801149c:	2b00      	cmp	r3, #0
 801149e:	bf14      	ite	ne
 80114a0:	2301      	movne	r3, #1
 80114a2:	2300      	moveq	r3, #0
 80114a4:	b2db      	uxtb	r3, r3
 80114a6:	2b00      	cmp	r3, #0
 80114a8:	d008      	beq.n	80114bc <_ZN7Factory15getTouchGfxTaskEv+0x48>
 80114aa:	4807      	ldr	r0, [pc, #28]	; (80114c8 <_ZN7Factory15getTouchGfxTaskEv+0x54>)
 80114ac:	f001 f952 	bl	8012754 <_ZN12TouchGfxTaskC1Ev>
 80114b0:	4806      	ldr	r0, [pc, #24]	; (80114cc <_ZN7Factory15getTouchGfxTaskEv+0x58>)
 80114b2:	f01a fd37 	bl	802bf24 <atexit>
 80114b6:	4803      	ldr	r0, [pc, #12]	; (80114c4 <_ZN7Factory15getTouchGfxTaskEv+0x50>)
 80114b8:	f01a fae3 	bl	802ba82 <__cxa_guard_release>
    return touchGfxTask;
 80114bc:	4b02      	ldr	r3, [pc, #8]	; (80114c8 <_ZN7Factory15getTouchGfxTaskEv+0x54>)
}
 80114be:	4618      	mov	r0, r3
 80114c0:	bd80      	pop	{r7, pc}
 80114c2:	bf00      	nop
 80114c4:	20003e88 	.word	0x20003e88
 80114c8:	20003e74 	.word	0x20003e74
 80114cc:	08011465 	.word	0x08011465

080114d0 <_ZN7Factory21getFrequencyGeneratorEv>:
#endif  // TOUCHGFX_BAREMETAL

FrequencyGenerator& Factory::getFrequencyGenerator() {
 80114d0:	b480      	push	{r7}
 80114d2:	af00      	add	r7, sp, #0
	return _fgen;
 80114d4:	4b02      	ldr	r3, [pc, #8]	; (80114e0 <_ZN7Factory21getFrequencyGeneratorEv+0x10>)
}
 80114d6:	4618      	mov	r0, r3
 80114d8:	46bd      	mov	sp, r7
 80114da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80114de:	4770      	bx	lr
 80114e0:	20003dd4 	.word	0x20003dd4

080114e4 <_ZN12oscilloscope17FreqGenControllerD1Ev>:
} Frequency;

/**
 * @brief Frequency generator controller to drive external MinGen module with buttons.
 */
class FreqGenController : public interface::ButtonsControllerCallbackProvider,
 80114e4:	b580      	push	{r7, lr}
 80114e6:	b082      	sub	sp, #8
 80114e8:	af00      	add	r7, sp, #0
 80114ea:	6078      	str	r0, [r7, #4]
 80114ec:	4a09      	ldr	r2, [pc, #36]	; (8011514 <_ZN12oscilloscope17FreqGenControllerD1Ev+0x30>)
 80114ee:	687b      	ldr	r3, [r7, #4]
 80114f0:	601a      	str	r2, [r3, #0]
 80114f2:	4a09      	ldr	r2, [pc, #36]	; (8011518 <_ZN12oscilloscope17FreqGenControllerD1Ev+0x34>)
 80114f4:	687b      	ldr	r3, [r7, #4]
 80114f6:	605a      	str	r2, [r3, #4]
 80114f8:	687b      	ldr	r3, [r7, #4]
 80114fa:	3304      	adds	r3, #4
 80114fc:	4618      	mov	r0, r3
 80114fe:	f002 fa9d 	bl	8013a3c <_ZN10XFBehaviorD1Ev>
 8011502:	687b      	ldr	r3, [r7, #4]
 8011504:	4618      	mov	r0, r3
 8011506:	f7ff fed7 	bl	80112b8 <_ZN9interface33ButtonsControllerCallbackProviderD1Ev>
 801150a:	687b      	ldr	r3, [r7, #4]
 801150c:	4618      	mov	r0, r3
 801150e:	3708      	adds	r7, #8
 8011510:	46bd      	mov	sp, r7
 8011512:	bd80      	pop	{r7, pc}
 8011514:	0802f6f0 	.word	0x0802f6f0
 8011518:	0802f704 	.word	0x0802f704

0801151c <_ZThn4_N12oscilloscope17FreqGenControllerD1Ev>:
 801151c:	f1a0 0004 	sub.w	r0, r0, #4
 8011520:	e7e0      	b.n	80114e4 <_ZN12oscilloscope17FreqGenControllerD1Ev>
 8011522:	bf00      	nop

08011524 <_ZN12oscilloscope17FreqGenControllerD0Ev>:
 8011524:	b580      	push	{r7, lr}
 8011526:	b082      	sub	sp, #8
 8011528:	af00      	add	r7, sp, #0
 801152a:	6078      	str	r0, [r7, #4]
 801152c:	6878      	ldr	r0, [r7, #4]
 801152e:	f7ff ffd9 	bl	80114e4 <_ZN12oscilloscope17FreqGenControllerD1Ev>
 8011532:	211c      	movs	r1, #28
 8011534:	6878      	ldr	r0, [r7, #4]
 8011536:	f01a fa96 	bl	802ba66 <_ZdlPvj>
 801153a:	687b      	ldr	r3, [r7, #4]
 801153c:	4618      	mov	r0, r3
 801153e:	3708      	adds	r7, #8
 8011540:	46bd      	mov	sp, r7
 8011542:	bd80      	pop	{r7, pc}

08011544 <_ZThn4_N12oscilloscope17FreqGenControllerD0Ev>:
 8011544:	f1a0 0004 	sub.w	r0, r0, #4
 8011548:	e7ec      	b.n	8011524 <_ZN12oscilloscope17FreqGenControllerD0Ev>
	...

0801154c <_Z41__static_initialization_and_destruction_0ii>:
 801154c:	b580      	push	{r7, lr}
 801154e:	b082      	sub	sp, #8
 8011550:	af00      	add	r7, sp, #0
 8011552:	6078      	str	r0, [r7, #4]
 8011554:	6039      	str	r1, [r7, #0]
 8011556:	687b      	ldr	r3, [r7, #4]
 8011558:	2b01      	cmp	r3, #1
 801155a:	d113      	bne.n	8011584 <_Z41__static_initialization_and_destruction_0ii+0x38>
 801155c:	683b      	ldr	r3, [r7, #0]
 801155e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011562:	4293      	cmp	r3, r2
 8011564:	d10e      	bne.n	8011584 <_Z41__static_initialization_and_destruction_0ii+0x38>
oscilloscope::Controller Factory::_oscilloscopeController;
 8011566:	4812      	ldr	r0, [pc, #72]	; (80115b0 <_Z41__static_initialization_and_destruction_0ii+0x64>)
 8011568:	f000 fe00 	bl	801216c <_ZN12oscilloscope10ControllerC1Ev>
oscilloscope::Gui Factory::_gui;
 801156c:	4811      	ldr	r0, [pc, #68]	; (80115b4 <_Z41__static_initialization_and_destruction_0ii+0x68>)
 801156e:	f000 fc9b 	bl	8011ea8 <_ZN12oscilloscope3GuiC1Ev>
external::FrequencyGenerator Factory::_fgen;
 8011572:	4811      	ldr	r0, [pc, #68]	; (80115b8 <_Z41__static_initialization_and_destruction_0ii+0x6c>)
 8011574:	f001 fa62 	bl	8012a3c <_ZN8external18FrequencyGeneratorC1Ev>
oscilloscope::FreqGenController Factory::_fgenctrl;
 8011578:	4810      	ldr	r0, [pc, #64]	; (80115bc <_Z41__static_initialization_and_destruction_0ii+0x70>)
 801157a:	f000 f8a9 	bl	80116d0 <_ZN12oscilloscope17FreqGenControllerC1Ev>
ButtonsController Factory::_bc;
 801157e:	4810      	ldr	r0, [pc, #64]	; (80115c0 <_Z41__static_initialization_and_destruction_0ii+0x74>)
 8011580:	f001 fb32 	bl	8012be8 <_ZN17ButtonsControllerC1Ev>
 8011584:	687b      	ldr	r3, [r7, #4]
 8011586:	2b00      	cmp	r3, #0
 8011588:	d10d      	bne.n	80115a6 <_Z41__static_initialization_and_destruction_0ii+0x5a>
 801158a:	683b      	ldr	r3, [r7, #0]
 801158c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011590:	4293      	cmp	r3, r2
 8011592:	d108      	bne.n	80115a6 <_Z41__static_initialization_and_destruction_0ii+0x5a>
 8011594:	480a      	ldr	r0, [pc, #40]	; (80115c0 <_Z41__static_initialization_and_destruction_0ii+0x74>)
 8011596:	f001 fb77 	bl	8012c88 <_ZN17ButtonsControllerD1Ev>
oscilloscope::FreqGenController Factory::_fgenctrl;
 801159a:	4808      	ldr	r0, [pc, #32]	; (80115bc <_Z41__static_initialization_and_destruction_0ii+0x70>)
 801159c:	f7ff ffa2 	bl	80114e4 <_ZN12oscilloscope17FreqGenControllerD1Ev>
oscilloscope::Controller Factory::_oscilloscopeController;
 80115a0:	4803      	ldr	r0, [pc, #12]	; (80115b0 <_Z41__static_initialization_and_destruction_0ii+0x64>)
 80115a2:	f7ff fe55 	bl	8011250 <_ZN12oscilloscope10ControllerD1Ev>
}
 80115a6:	bf00      	nop
 80115a8:	3708      	adds	r7, #8
 80115aa:	46bd      	mov	sp, r7
 80115ac:	bd80      	pop	{r7, pc}
 80115ae:	bf00      	nop
 80115b0:	20003d9c 	.word	0x20003d9c
 80115b4:	20003dc8 	.word	0x20003dc8
 80115b8:	20003dd4 	.word	0x20003dd4
 80115bc:	20003ddc 	.word	0x20003ddc
 80115c0:	20003df8 	.word	0x20003df8

080115c4 <_ZN12TouchGfxTaskD1Ev>:
#include "xf/behavior.h"

/**
 * @brief TouchGFX task used in IDF and/or bare-metal environments to drive LCD display.
 */
class TouchGfxTask : public XFBehavior
 80115c4:	b580      	push	{r7, lr}
 80115c6:	b082      	sub	sp, #8
 80115c8:	af00      	add	r7, sp, #0
 80115ca:	6078      	str	r0, [r7, #4]
 80115cc:	4a05      	ldr	r2, [pc, #20]	; (80115e4 <_ZN12TouchGfxTaskD1Ev+0x20>)
 80115ce:	687b      	ldr	r3, [r7, #4]
 80115d0:	601a      	str	r2, [r3, #0]
 80115d2:	687b      	ldr	r3, [r7, #4]
 80115d4:	4618      	mov	r0, r3
 80115d6:	f002 fa31 	bl	8013a3c <_ZN10XFBehaviorD1Ev>
 80115da:	687b      	ldr	r3, [r7, #4]
 80115dc:	4618      	mov	r0, r3
 80115de:	3708      	adds	r7, #8
 80115e0:	46bd      	mov	sp, r7
 80115e2:	bd80      	pop	{r7, pc}
 80115e4:	0802f798 	.word	0x0802f798

080115e8 <_ZN12TouchGfxTaskD0Ev>:
 80115e8:	b580      	push	{r7, lr}
 80115ea:	b082      	sub	sp, #8
 80115ec:	af00      	add	r7, sp, #0
 80115ee:	6078      	str	r0, [r7, #4]
 80115f0:	6878      	ldr	r0, [r7, #4]
 80115f2:	f7ff ffe7 	bl	80115c4 <_ZN12TouchGfxTaskD1Ev>
 80115f6:	2114      	movs	r1, #20
 80115f8:	6878      	ldr	r0, [r7, #4]
 80115fa:	f01a fa34 	bl	802ba66 <_ZdlPvj>
 80115fe:	687b      	ldr	r3, [r7, #4]
 8011600:	4618      	mov	r0, r3
 8011602:	3708      	adds	r7, #8
 8011604:	46bd      	mov	sp, r7
 8011606:	bd80      	pop	{r7, pc}

08011608 <_GLOBAL__sub_I__ZN7Factory23_oscilloscopeControllerE>:
 8011608:	b580      	push	{r7, lr}
 801160a:	af00      	add	r7, sp, #0
 801160c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011610:	2001      	movs	r0, #1
 8011612:	f7ff ff9b 	bl	801154c <_Z41__static_initialization_and_destruction_0ii>
 8011616:	bd80      	pop	{r7, pc}

08011618 <_GLOBAL__sub_D__ZN7Factory23_oscilloscopeControllerE>:
 8011618:	b580      	push	{r7, lr}
 801161a:	af00      	add	r7, sp, #0
 801161c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8011620:	2000      	movs	r0, #0
 8011622:	f7ff ff93 	bl	801154c <_Z41__static_initialization_and_destruction_0ii>
 8011626:	bd80      	pop	{r7, pc}

08011628 <_ZNK7XFEvent12getEventTypeEv>:

    /** \brief Returns the type of the event.
     *
     * Can be used to distinguish between an event or a timeout.
     */
    inline XFEventType getEventType() const { return eventType_; }
 8011628:	b480      	push	{r7}
 801162a:	b083      	sub	sp, #12
 801162c:	af00      	add	r7, sp, #0
 801162e:	6078      	str	r0, [r7, #4]
 8011630:	687b      	ldr	r3, [r7, #4]
 8011632:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8011636:	4618      	mov	r0, r3
 8011638:	370c      	adds	r7, #12
 801163a:	46bd      	mov	sp, r7
 801163c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011640:	4770      	bx	lr

08011642 <_ZNK7XFEvent5getIdEv>:
    /** \brief Sets pointer to behavioral class (see #_pBehavior).
     * Sets the behavior in which the event should be executed.
     */
    inline void setBehavior(interface::XFReactive * pBehavior) { pBehavior_ = pBehavior; }

    inline int getId() const { return id_; }		///< Returns #_id identifying the event in the behaviors context.
 8011642:	b480      	push	{r7}
 8011644:	b083      	sub	sp, #12
 8011646:	af00      	add	r7, sp, #0
 8011648:	6078      	str	r0, [r7, #4]
 801164a:	687b      	ldr	r3, [r7, #4]
 801164c:	689b      	ldr	r3, [r3, #8]
 801164e:	4618      	mov	r0, r3
 8011650:	370c      	adds	r7, #12
 8011652:	46bd      	mov	sp, r7
 8011654:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011658:	4770      	bx	lr

0801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>:
	/**
	 * Constructor
	 *
	 * \param eventStatus Initial value of the event status.
	 */
    XFEventStatus(eEventStatus eventStatus = Unknown) : status_(eventStatus) {}
 801165a:	b480      	push	{r7}
 801165c:	b083      	sub	sp, #12
 801165e:	af00      	add	r7, sp, #0
 8011660:	6078      	str	r0, [r7, #4]
 8011662:	460b      	mov	r3, r1
 8011664:	70fb      	strb	r3, [r7, #3]
 8011666:	687b      	ldr	r3, [r7, #4]
 8011668:	78fa      	ldrb	r2, [r7, #3]
 801166a:	701a      	strb	r2, [r3, #0]
 801166c:	687b      	ldr	r3, [r7, #4]
 801166e:	4618      	mov	r0, r3
 8011670:	370c      	adds	r7, #12
 8011672:	46bd      	mov	sp, r7
 8011674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011678:	4770      	bx	lr
	...

0801167c <_ZN9interface33ButtonsControllerCallbackProviderC1Ev>:
     *
     */
    typedef void (ButtonsControllerCallbackProvider::*CallbackMethod)(uint16_t buttonIndex, bool pressed);

protected:
    ButtonsControllerCallbackProvider() {}                                  ///< Not allowing to instantiate object of interface.
 801167c:	b480      	push	{r7}
 801167e:	b083      	sub	sp, #12
 8011680:	af00      	add	r7, sp, #0
 8011682:	6078      	str	r0, [r7, #4]
 8011684:	4a04      	ldr	r2, [pc, #16]	; (8011698 <_ZN9interface33ButtonsControllerCallbackProviderC1Ev+0x1c>)
 8011686:	687b      	ldr	r3, [r7, #4]
 8011688:	601a      	str	r2, [r3, #0]
 801168a:	687b      	ldr	r3, [r7, #4]
 801168c:	4618      	mov	r0, r3
 801168e:	370c      	adds	r7, #12
 8011690:	46bd      	mov	sp, r7
 8011692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011696:	4770      	bx	lr
 8011698:	0802f6c0 	.word	0x0802f6c0

0801169c <_ZNK12oscilloscope17FreqGenController3guiEv>:
    XFEventStatus processEvent();
    void start();
    void initialize(oscilloscope::Gui & gui);

protected:
    inline oscilloscope::Gui & gui() const { assert(_pGui); return *_pGui; }
 801169c:	b580      	push	{r7, lr}
 801169e:	b082      	sub	sp, #8
 80116a0:	af00      	add	r7, sp, #0
 80116a2:	6078      	str	r0, [r7, #4]
 80116a4:	687b      	ldr	r3, [r7, #4]
 80116a6:	695b      	ldr	r3, [r3, #20]
 80116a8:	2b00      	cmp	r3, #0
 80116aa:	d105      	bne.n	80116b8 <_ZNK12oscilloscope17FreqGenController3guiEv+0x1c>
 80116ac:	4b05      	ldr	r3, [pc, #20]	; (80116c4 <_ZNK12oscilloscope17FreqGenController3guiEv+0x28>)
 80116ae:	4a06      	ldr	r2, [pc, #24]	; (80116c8 <_ZNK12oscilloscope17FreqGenController3guiEv+0x2c>)
 80116b0:	213d      	movs	r1, #61	; 0x3d
 80116b2:	4806      	ldr	r0, [pc, #24]	; (80116cc <_ZNK12oscilloscope17FreqGenController3guiEv+0x30>)
 80116b4:	f01a fc18 	bl	802bee8 <__assert_func>
 80116b8:	687b      	ldr	r3, [r7, #4]
 80116ba:	695b      	ldr	r3, [r3, #20]
 80116bc:	4618      	mov	r0, r3
 80116be:	3708      	adds	r7, #8
 80116c0:	46bd      	mov	sp, r7
 80116c2:	bd80      	pop	{r7, pc}
 80116c4:	0802e2c0 	.word	0x0802e2c0
 80116c8:	0802e2c8 	.word	0x0802e2c8
 80116cc:	0802e308 	.word	0x0802e308

080116d0 <_ZN12oscilloscope17FreqGenControllerC1Ev>:
namespace oscilloscope
{

FreqGenController* FreqGenController::_instance = nullptr;

FreqGenController::FreqGenController():
 80116d0:	b580      	push	{r7, lr}
 80116d2:	b082      	sub	sp, #8
 80116d4:	af00      	add	r7, sp, #0
 80116d6:	6078      	str	r0, [r7, #4]
    _pGui(nullptr)
 80116d8:	687b      	ldr	r3, [r7, #4]
 80116da:	4618      	mov	r0, r3
 80116dc:	f7ff ffce 	bl	801167c <_ZN9interface33ButtonsControllerCallbackProviderC1Ev>
 80116e0:	687b      	ldr	r3, [r7, #4]
 80116e2:	3304      	adds	r3, #4
 80116e4:	2100      	movs	r1, #0
 80116e6:	4618      	mov	r0, r3
 80116e8:	f002 f95a 	bl	80139a0 <_ZN10XFBehaviorC1Eb>
 80116ec:	4a13      	ldr	r2, [pc, #76]	; (801173c <_ZN12oscilloscope17FreqGenControllerC1Ev+0x6c>)
 80116ee:	687b      	ldr	r3, [r7, #4]
 80116f0:	601a      	str	r2, [r3, #0]
 80116f2:	4a13      	ldr	r2, [pc, #76]	; (8011740 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x70>)
 80116f4:	687b      	ldr	r3, [r7, #4]
 80116f6:	605a      	str	r2, [r3, #4]
 80116f8:	687b      	ldr	r3, [r7, #4]
 80116fa:	2200      	movs	r2, #0
 80116fc:	615a      	str	r2, [r3, #20]
{
    assert (_instance==nullptr);
 80116fe:	4b11      	ldr	r3, [pc, #68]	; (8011744 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x74>)
 8011700:	681b      	ldr	r3, [r3, #0]
 8011702:	2b00      	cmp	r3, #0
 8011704:	d005      	beq.n	8011712 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x42>
 8011706:	4b10      	ldr	r3, [pc, #64]	; (8011748 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x78>)
 8011708:	4a10      	ldr	r2, [pc, #64]	; (801174c <_ZN12oscilloscope17FreqGenControllerC1Ev+0x7c>)
 801170a:	2110      	movs	r1, #16
 801170c:	4810      	ldr	r0, [pc, #64]	; (8011750 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x80>)
 801170e:	f01a fbeb 	bl	802bee8 <__assert_func>
    _instance = this;
 8011712:	4a0c      	ldr	r2, [pc, #48]	; (8011744 <_ZN12oscilloscope17FreqGenControllerC1Ev+0x74>)
 8011714:	687b      	ldr	r3, [r7, #4]
 8011716:	6013      	str	r3, [r2, #0]
		EXTFREQGEN_START_FREQUENCY == HZ_700  ||
		EXTFREQGEN_START_FREQUENCY == HZ_1000 ||
		EXTFREQGEN_START_FREQUENCY == HZ_5000 ||
		EXTFREQGEN_START_FREQUENCY == HZ_10000)
    {
    	_frequency = EXTFREQGEN_START_FREQUENCY;
 8011718:	687b      	ldr	r3, [r7, #4]
 801171a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801171e:	831a      	strh	r2, [r3, #24]
    }
    if (EXTFREQGEN_START_WAVEFORM == SINUS   ||
    	EXTFREQGEN_START_WAVEFORM == TRIANGLE   ||
		EXTFREQGEN_START_WAVEFORM == SQUARE)
    {
    	_mode = EXTFREQGEN_START_WAVEFORM;
 8011720:	687b      	ldr	r3, [r7, #4]
 8011722:	2201      	movs	r2, #1
 8011724:	769a      	strb	r2, [r3, #26]
    }
    else
    {
    	_mode = SINUS;
    }
    change();
 8011726:	6878      	ldr	r0, [r7, #4]
 8011728:	f000 fb14 	bl	8011d54 <_ZN12oscilloscope17FreqGenController6changeEv>

    state = ST_INIT;
 801172c:	687b      	ldr	r3, [r7, #4]
 801172e:	2200      	movs	r2, #0
 8011730:	76da      	strb	r2, [r3, #27]
}
 8011732:	687b      	ldr	r3, [r7, #4]
 8011734:	4618      	mov	r0, r3
 8011736:	3708      	adds	r7, #8
 8011738:	46bd      	mov	sp, r7
 801173a:	bd80      	pop	{r7, pc}
 801173c:	0802f6f0 	.word	0x0802f6f0
 8011740:	0802f704 	.word	0x0802f704
 8011744:	20003e8c 	.word	0x20003e8c
 8011748:	0802e368 	.word	0x0802e368
 801174c:	0802e37c 	.word	0x0802e37c
 8011750:	0802e3b4 	.word	0x0802e3b4

08011754 <_ZN12oscilloscope17FreqGenController15onButtonChangedEtb>:

void FreqGenController::onButtonChanged(uint16_t buttonIndex, bool pressed) {
 8011754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011756:	b083      	sub	sp, #12
 8011758:	af00      	add	r7, sp, #0
 801175a:	6078      	str	r0, [r7, #4]
 801175c:	460b      	mov	r3, r1
 801175e:	807b      	strh	r3, [r7, #2]
 8011760:	4613      	mov	r3, r2
 8011762:	707b      	strb	r3, [r7, #1]
	if (pressed)
 8011764:	787b      	ldrb	r3, [r7, #1]
 8011766:	2b00      	cmp	r3, #0
 8011768:	d013      	beq.n	8011792 <_ZN12oscilloscope17FreqGenController15onButtonChangedEtb+0x3e>
	{
			GEN(evButtonPressed(buttonIndex));
 801176a:	687b      	ldr	r3, [r7, #4]
 801176c:	1d1d      	adds	r5, r3, #4
 801176e:	687b      	ldr	r3, [r7, #4]
 8011770:	685b      	ldr	r3, [r3, #4]
 8011772:	330c      	adds	r3, #12
 8011774:	681c      	ldr	r4, [r3, #0]
 8011776:	2014      	movs	r0, #20
 8011778:	f01a f986 	bl	802ba88 <_Znwj>
 801177c:	4603      	mov	r3, r0
 801177e:	461e      	mov	r6, r3
 8011780:	887b      	ldrh	r3, [r7, #2]
 8011782:	4619      	mov	r1, r3
 8011784:	4630      	mov	r0, r6
 8011786:	f001 f8d5 	bl	8012934 <_ZN15evButtonPressedC1Ei>
 801178a:	2200      	movs	r2, #0
 801178c:	4631      	mov	r1, r6
 801178e:	4628      	mov	r0, r5
 8011790:	47a0      	blx	r4
	}
}
 8011792:	bf00      	nop
 8011794:	370c      	adds	r7, #12
 8011796:	46bd      	mov	sp, r7
 8011798:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801179c <_ZN12oscilloscope17FreqGenController12processEventEv>:
FreqGenController* FreqGenController::getInstance() {
	return _instance;
}


 XFEventStatus FreqGenController::processEvent() {
 801179c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801179e:	b087      	sub	sp, #28
 80117a0:	af00      	add	r7, sp, #0
 80117a2:	6078      	str	r0, [r7, #4]
	XFEventStatus retVal = XFEventStatus::NotConsumed;
 80117a4:	f107 0308 	add.w	r3, r7, #8
 80117a8:	2102      	movs	r1, #2
 80117aa:	4618      	mov	r0, r3
 80117ac:	f7ff ff55 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>
	FCG_STATES oldState = state;
 80117b0:	687b      	ldr	r3, [r7, #4]
 80117b2:	7edb      	ldrb	r3, [r3, #27]
 80117b4:	75fb      	strb	r3, [r7, #23]
	const XFEvent* ev = getCurrentEvent();
 80117b6:	687b      	ldr	r3, [r7, #4]
 80117b8:	3304      	adds	r3, #4
 80117ba:	4618      	mov	r0, r3
 80117bc:	f002 f9f1 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 80117c0:	6138      	str	r0, [r7, #16]
	switch (state)
 80117c2:	687b      	ldr	r3, [r7, #4]
 80117c4:	7edb      	ldrb	r3, [r3, #27]
 80117c6:	2b04      	cmp	r3, #4
 80117c8:	dc50      	bgt.n	801186c <_ZN12oscilloscope17FreqGenController12processEventEv+0xd0>
 80117ca:	2b02      	cmp	r3, #2
 80117cc:	da3f      	bge.n	801184e <_ZN12oscilloscope17FreqGenController12processEventEv+0xb2>
 80117ce:	2b00      	cmp	r3, #0
 80117d0:	d002      	beq.n	80117d8 <_ZN12oscilloscope17FreqGenController12processEventEv+0x3c>
 80117d2:	2b01      	cmp	r3, #1
 80117d4:	d00f      	beq.n	80117f6 <_ZN12oscilloscope17FreqGenController12processEventEv+0x5a>
		{
			state = ST_WAITBUTTON;
		}
		break;
	default:
		break;
 80117d6:	e049      	b.n	801186c <_ZN12oscilloscope17FreqGenController12processEventEv+0xd0>
		if (ev->getEventType()==XFEvent::Initial)
 80117d8:	6938      	ldr	r0, [r7, #16]
 80117da:	f7ff ff25 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 80117de:	4603      	mov	r3, r0
 80117e0:	2b01      	cmp	r3, #1
 80117e2:	bf0c      	ite	eq
 80117e4:	2301      	moveq	r3, #1
 80117e6:	2300      	movne	r3, #0
 80117e8:	b2db      	uxtb	r3, r3
 80117ea:	2b00      	cmp	r3, #0
 80117ec:	d040      	beq.n	8011870 <_ZN12oscilloscope17FreqGenController12processEventEv+0xd4>
			state = ST_WAITBUTTON;
 80117ee:	687b      	ldr	r3, [r7, #4]
 80117f0:	2201      	movs	r2, #1
 80117f2:	76da      	strb	r2, [r3, #27]
		break;
 80117f4:	e03c      	b.n	8011870 <_ZN12oscilloscope17FreqGenController12processEventEv+0xd4>
		if (ev->getEventType()==XFEvent::Event && ev->getId() == evButtonPressedId)
 80117f6:	6938      	ldr	r0, [r7, #16]
 80117f8:	f7ff ff16 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 80117fc:	4603      	mov	r3, r0
 80117fe:	2b03      	cmp	r3, #3
 8011800:	d107      	bne.n	8011812 <_ZN12oscilloscope17FreqGenController12processEventEv+0x76>
 8011802:	6938      	ldr	r0, [r7, #16]
 8011804:	f7ff ff1d 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8011808:	4603      	mov	r3, r0
 801180a:	2b02      	cmp	r3, #2
 801180c:	d101      	bne.n	8011812 <_ZN12oscilloscope17FreqGenController12processEventEv+0x76>
 801180e:	2301      	movs	r3, #1
 8011810:	e000      	b.n	8011814 <_ZN12oscilloscope17FreqGenController12processEventEv+0x78>
 8011812:	2300      	movs	r3, #0
 8011814:	2b00      	cmp	r3, #0
 8011816:	d02d      	beq.n	8011874 <_ZN12oscilloscope17FreqGenController12processEventEv+0xd8>
			switch (((evButtonPressed*) ev)->buttonIndex())
 8011818:	6938      	ldr	r0, [r7, #16]
 801181a:	f001 f8a5 	bl	8012968 <_ZN15evButtonPressed11buttonIndexEv>
 801181e:	4603      	mov	r3, r0
 8011820:	2b03      	cmp	r3, #3
 8011822:	d00e      	beq.n	8011842 <_ZN12oscilloscope17FreqGenController12processEventEv+0xa6>
 8011824:	2b03      	cmp	r3, #3
 8011826:	dc10      	bgt.n	801184a <_ZN12oscilloscope17FreqGenController12processEventEv+0xae>
 8011828:	2b01      	cmp	r3, #1
 801182a:	d002      	beq.n	8011832 <_ZN12oscilloscope17FreqGenController12processEventEv+0x96>
 801182c:	2b02      	cmp	r3, #2
 801182e:	d004      	beq.n	801183a <_ZN12oscilloscope17FreqGenController12processEventEv+0x9e>
					break;
 8011830:	e00b      	b.n	801184a <_ZN12oscilloscope17FreqGenController12processEventEv+0xae>
					state = ST_CHANGEFREQDOWN;
 8011832:	687b      	ldr	r3, [r7, #4]
 8011834:	2203      	movs	r2, #3
 8011836:	76da      	strb	r2, [r3, #27]
					break;
 8011838:	e008      	b.n	801184c <_ZN12oscilloscope17FreqGenController12processEventEv+0xb0>
					state = ST_CHANGEFREQUP;
 801183a:	687b      	ldr	r3, [r7, #4]
 801183c:	2202      	movs	r2, #2
 801183e:	76da      	strb	r2, [r3, #27]
					break;
 8011840:	e004      	b.n	801184c <_ZN12oscilloscope17FreqGenController12processEventEv+0xb0>
					state = ST_CHANGEMODE;
 8011842:	687b      	ldr	r3, [r7, #4]
 8011844:	2204      	movs	r2, #4
 8011846:	76da      	strb	r2, [r3, #27]
						break;
 8011848:	e000      	b.n	801184c <_ZN12oscilloscope17FreqGenController12processEventEv+0xb0>
					break;
 801184a:	bf00      	nop
		break;
 801184c:	e012      	b.n	8011874 <_ZN12oscilloscope17FreqGenController12processEventEv+0xd8>
		if (ev->getEventType()==XFEvent::NullTransition )
 801184e:	6938      	ldr	r0, [r7, #16]
 8011850:	f7ff feea 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8011854:	4603      	mov	r3, r0
 8011856:	2b02      	cmp	r3, #2
 8011858:	bf0c      	ite	eq
 801185a:	2301      	moveq	r3, #1
 801185c:	2300      	movne	r3, #0
 801185e:	b2db      	uxtb	r3, r3
 8011860:	2b00      	cmp	r3, #0
 8011862:	d009      	beq.n	8011878 <_ZN12oscilloscope17FreqGenController12processEventEv+0xdc>
			state = ST_WAITBUTTON;
 8011864:	687b      	ldr	r3, [r7, #4]
 8011866:	2201      	movs	r2, #1
 8011868:	76da      	strb	r2, [r3, #27]
		break;
 801186a:	e005      	b.n	8011878 <_ZN12oscilloscope17FreqGenController12processEventEv+0xdc>
		break;
 801186c:	bf00      	nop
 801186e:	e004      	b.n	801187a <_ZN12oscilloscope17FreqGenController12processEventEv+0xde>
		break;
 8011870:	bf00      	nop
 8011872:	e002      	b.n	801187a <_ZN12oscilloscope17FreqGenController12processEventEv+0xde>
		break;
 8011874:	bf00      	nop
 8011876:	e000      	b.n	801187a <_ZN12oscilloscope17FreqGenController12processEventEv+0xde>
		break;
 8011878:	bf00      	nop
	}
	if (oldState != state)
 801187a:	687b      	ldr	r3, [r7, #4]
 801187c:	7edb      	ldrb	r3, [r3, #27]
 801187e:	7dfa      	ldrb	r2, [r7, #23]
 8011880:	429a      	cmp	r2, r3
 8011882:	d068      	beq.n	8011956 <_ZN12oscilloscope17FreqGenController12processEventEv+0x1ba>
	{
		retVal = XFEventStatus::Consumed;
 8011884:	f107 030c 	add.w	r3, r7, #12
 8011888:	2101      	movs	r1, #1
 801188a:	4618      	mov	r0, r3
 801188c:	f7ff fee5 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>
 8011890:	7b3b      	ldrb	r3, [r7, #12]
 8011892:	723b      	strb	r3, [r7, #8]
		switch (state)
 8011894:	687b      	ldr	r3, [r7, #4]
 8011896:	7edb      	ldrb	r3, [r3, #27]
 8011898:	2b04      	cmp	r3, #4
 801189a:	d85b      	bhi.n	8011954 <_ZN12oscilloscope17FreqGenController12processEventEv+0x1b8>
 801189c:	a201      	add	r2, pc, #4	; (adr r2, 80118a4 <_ZN12oscilloscope17FreqGenController12processEventEv+0x108>)
 801189e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80118a2:	bf00      	nop
 80118a4:	08011955 	.word	0x08011955
 80118a8:	08011955 	.word	0x08011955
 80118ac:	080118b9 	.word	0x080118b9
 80118b0:	080118ed 	.word	0x080118ed
 80118b4:	08011921 	.word	0x08011921
		case ST_INIT:
			break;
		case ST_WAITBUTTON:
			break;
		case ST_CHANGEFREQUP:
			frequencyUp();
 80118b8:	6878      	ldr	r0, [r7, #4]
 80118ba:	f000 f865 	bl	8011988 <_ZN12oscilloscope17FreqGenController11frequencyUpEv>
			change();
 80118be:	6878      	ldr	r0, [r7, #4]
 80118c0:	f000 fa48 	bl	8011d54 <_ZN12oscilloscope17FreqGenController6changeEv>
			GEN(XFNullTransition());
 80118c4:	687b      	ldr	r3, [r7, #4]
 80118c6:	1d1d      	adds	r5, r3, #4
 80118c8:	687b      	ldr	r3, [r7, #4]
 80118ca:	685b      	ldr	r3, [r3, #4]
 80118cc:	330c      	adds	r3, #12
 80118ce:	681c      	ldr	r4, [r3, #0]
 80118d0:	2010      	movs	r0, #16
 80118d2:	f01a f8d9 	bl	802ba88 <_Znwj>
 80118d6:	4603      	mov	r3, r0
 80118d8:	461e      	mov	r6, r3
 80118da:	2100      	movs	r1, #0
 80118dc:	4630      	mov	r0, r6
 80118de:	f002 f9eb 	bl	8013cb8 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE>
 80118e2:	2200      	movs	r2, #0
 80118e4:	4631      	mov	r1, r6
 80118e6:	4628      	mov	r0, r5
 80118e8:	47a0      	blx	r4
			break;
 80118ea:	e034      	b.n	8011956 <_ZN12oscilloscope17FreqGenController12processEventEv+0x1ba>
		case ST_CHANGEFREQDOWN:
			frequencyDown();
 80118ec:	6878      	ldr	r0, [r7, #4]
 80118ee:	f000 f8e3 	bl	8011ab8 <_ZN12oscilloscope17FreqGenController13frequencyDownEv>
			change();
 80118f2:	6878      	ldr	r0, [r7, #4]
 80118f4:	f000 fa2e 	bl	8011d54 <_ZN12oscilloscope17FreqGenController6changeEv>
			GEN(XFNullTransition());
 80118f8:	687b      	ldr	r3, [r7, #4]
 80118fa:	1d1d      	adds	r5, r3, #4
 80118fc:	687b      	ldr	r3, [r7, #4]
 80118fe:	685b      	ldr	r3, [r3, #4]
 8011900:	330c      	adds	r3, #12
 8011902:	681c      	ldr	r4, [r3, #0]
 8011904:	2010      	movs	r0, #16
 8011906:	f01a f8bf 	bl	802ba88 <_Znwj>
 801190a:	4603      	mov	r3, r0
 801190c:	461e      	mov	r6, r3
 801190e:	2100      	movs	r1, #0
 8011910:	4630      	mov	r0, r6
 8011912:	f002 f9d1 	bl	8013cb8 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE>
 8011916:	2200      	movs	r2, #0
 8011918:	4631      	mov	r1, r6
 801191a:	4628      	mov	r0, r5
 801191c:	47a0      	blx	r4
			break;
 801191e:	e01a      	b.n	8011956 <_ZN12oscilloscope17FreqGenController12processEventEv+0x1ba>
		case ST_CHANGEMODE:
			shiftMode();
 8011920:	6878      	ldr	r0, [r7, #4]
 8011922:	f000 f961 	bl	8011be8 <_ZN12oscilloscope17FreqGenController9shiftModeEv>
			change();
 8011926:	6878      	ldr	r0, [r7, #4]
 8011928:	f000 fa14 	bl	8011d54 <_ZN12oscilloscope17FreqGenController6changeEv>
			GEN(XFNullTransition());
 801192c:	687b      	ldr	r3, [r7, #4]
 801192e:	1d1d      	adds	r5, r3, #4
 8011930:	687b      	ldr	r3, [r7, #4]
 8011932:	685b      	ldr	r3, [r3, #4]
 8011934:	330c      	adds	r3, #12
 8011936:	681c      	ldr	r4, [r3, #0]
 8011938:	2010      	movs	r0, #16
 801193a:	f01a f8a5 	bl	802ba88 <_Znwj>
 801193e:	4603      	mov	r3, r0
 8011940:	461e      	mov	r6, r3
 8011942:	2100      	movs	r1, #0
 8011944:	4630      	mov	r0, r6
 8011946:	f002 f9b7 	bl	8013cb8 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE>
 801194a:	2200      	movs	r2, #0
 801194c:	4631      	mov	r1, r6
 801194e:	4628      	mov	r0, r5
 8011950:	47a0      	blx	r4
			break;
 8011952:	e000      	b.n	8011956 <_ZN12oscilloscope17FreqGenController12processEventEv+0x1ba>
		default:
			break;
 8011954:	bf00      	nop
		}
	}
	return retVal;
 8011956:	7a3b      	ldrb	r3, [r7, #8]
}
 8011958:	4618      	mov	r0, r3
 801195a:	371c      	adds	r7, #28
 801195c:	46bd      	mov	sp, r7
 801195e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011960 <_ZThn4_N12oscilloscope17FreqGenController12processEventEv>:
    XFEventStatus processEvent();
 8011960:	f1a0 0004 	sub.w	r0, r0, #4
 8011964:	f7ff bf1a 	b.w	801179c <_ZN12oscilloscope17FreqGenController12processEventEv>

08011968 <_ZN12oscilloscope17FreqGenController5startEv>:

void FreqGenController::start() {
 8011968:	b580      	push	{r7, lr}
 801196a:	b082      	sub	sp, #8
 801196c:	af00      	add	r7, sp, #0
 801196e:	6078      	str	r0, [r7, #4]
	startBehavior();
 8011970:	687b      	ldr	r3, [r7, #4]
 8011972:	1d1a      	adds	r2, r3, #4
 8011974:	687b      	ldr	r3, [r7, #4]
 8011976:	685b      	ldr	r3, [r3, #4]
 8011978:	3308      	adds	r3, #8
 801197a:	681b      	ldr	r3, [r3, #0]
 801197c:	4610      	mov	r0, r2
 801197e:	4798      	blx	r3
}
 8011980:	bf00      	nop
 8011982:	3708      	adds	r7, #8
 8011984:	46bd      	mov	sp, r7
 8011986:	bd80      	pop	{r7, pc}

08011988 <_ZN12oscilloscope17FreqGenController11frequencyUpEv>:

void FreqGenController::frequencyUp() {
 8011988:	b590      	push	{r4, r7, lr}
 801198a:	b08f      	sub	sp, #60	; 0x3c
 801198c:	af00      	add	r7, sp, #0
 801198e:	6078      	str	r0, [r7, #4]
	//change the frequency up
	switch (_frequency)
 8011990:	687b      	ldr	r3, [r7, #4]
 8011992:	8b1b      	ldrh	r3, [r3, #24]
 8011994:	f242 7210 	movw	r2, #10000	; 0x2710
 8011998:	4293      	cmp	r3, r2
 801199a:	d052      	beq.n	8011a42 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xba>
 801199c:	f242 7210 	movw	r2, #10000	; 0x2710
 80119a0:	4293      	cmp	r3, r2
 80119a2:	dc52      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80119a8:	4293      	cmp	r3, r2
 80119aa:	d045      	beq.n	8011a38 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xb0>
 80119ac:	f241 3288 	movw	r2, #5000	; 0x1388
 80119b0:	4293      	cmp	r3, r2
 80119b2:	dc4a      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119b4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80119b8:	d039      	beq.n	8011a2e <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xa6>
 80119ba:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80119be:	dc44      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119c0:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 80119c4:	d02e      	beq.n	8011a24 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x9c>
 80119c6:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 80119ca:	dc3e      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119cc:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80119d0:	d023      	beq.n	8011a1a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x92>
 80119d2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80119d6:	dc38      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119d8:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 80119dc:	d018      	beq.n	8011a10 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x88>
 80119de:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 80119e2:	dc32      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119e4:	2bf0      	cmp	r3, #240	; 0xf0
 80119e6:	d00e      	beq.n	8011a06 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x7e>
 80119e8:	2bf0      	cmp	r3, #240	; 0xf0
 80119ea:	dc2e      	bgt.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
 80119ec:	2b32      	cmp	r3, #50	; 0x32
 80119ee:	d002      	beq.n	80119f6 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x6e>
 80119f0:	2b6e      	cmp	r3, #110	; 0x6e
 80119f2:	d004      	beq.n	80119fe <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x76>
		break;
	case HZ_10000:
		_frequency = HZ_50;
		break;
	default:
		break;
 80119f4:	e029      	b.n	8011a4a <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc2>
		_frequency = HZ_110;
 80119f6:	687b      	ldr	r3, [r7, #4]
 80119f8:	226e      	movs	r2, #110	; 0x6e
 80119fa:	831a      	strh	r2, [r3, #24]
		break;
 80119fc:	e026      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_240;
 80119fe:	687b      	ldr	r3, [r7, #4]
 8011a00:	22f0      	movs	r2, #240	; 0xf0
 8011a02:	831a      	strh	r2, [r3, #24]
		break;
 8011a04:	e022      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_370;
 8011a06:	687b      	ldr	r3, [r7, #4]
 8011a08:	f44f 72b9 	mov.w	r2, #370	; 0x172
 8011a0c:	831a      	strh	r2, [r3, #24]
		break;
 8011a0e:	e01d      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_500;
 8011a10:	687b      	ldr	r3, [r7, #4]
 8011a12:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8011a16:	831a      	strh	r2, [r3, #24]
		break;
 8011a18:	e018      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_700;
 8011a1a:	687b      	ldr	r3, [r7, #4]
 8011a1c:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8011a20:	831a      	strh	r2, [r3, #24]
		break;
 8011a22:	e013      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_1000;
 8011a24:	687b      	ldr	r3, [r7, #4]
 8011a26:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011a2a:	831a      	strh	r2, [r3, #24]
		break;
 8011a2c:	e00e      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_5000;
 8011a2e:	687b      	ldr	r3, [r7, #4]
 8011a30:	f241 3288 	movw	r2, #5000	; 0x1388
 8011a34:	831a      	strh	r2, [r3, #24]
		break;
 8011a36:	e009      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_10000;
 8011a38:	687b      	ldr	r3, [r7, #4]
 8011a3a:	f242 7210 	movw	r2, #10000	; 0x2710
 8011a3e:	831a      	strh	r2, [r3, #24]
		break;
 8011a40:	e004      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		_frequency = HZ_50;
 8011a42:	687b      	ldr	r3, [r7, #4]
 8011a44:	2232      	movs	r2, #50	; 0x32
 8011a46:	831a      	strh	r2, [r3, #24]
		break;
 8011a48:	e000      	b.n	8011a4c <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0xc4>
		break;
 8011a4a:	bf00      	nop
	}

	Trace::out("Frequency up to %s", toString(_frequency).c_str());
 8011a4c:	687b      	ldr	r3, [r7, #4]
 8011a4e:	f103 0218 	add.w	r2, r3, #24
 8011a52:	f107 0308 	add.w	r3, r7, #8
 8011a56:	4611      	mov	r1, r2
 8011a58:	4618      	mov	r0, r3
 8011a5a:	f000 f995 	bl	8011d88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE>
 8011a5e:	f107 0308 	add.w	r3, r7, #8
 8011a62:	4618      	mov	r0, r3
 8011a64:	f01a f9ab 	bl	802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8011a68:	4603      	mov	r3, r0
 8011a6a:	4619      	mov	r1, r3
 8011a6c:	4811      	ldr	r0, [pc, #68]	; (8011ab4 <_ZN12oscilloscope17FreqGenController11frequencyUpEv+0x12c>)
 8011a6e:	f001 fc5f 	bl	8013330 <_ZN5Trace3outEPKcz>
 8011a72:	f107 0308 	add.w	r3, r7, #8
 8011a76:	4618      	mov	r0, r3
 8011a78:	f01a f903 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	// Update LCD display
	gui().setFreqGenFrequencyText(toString(_frequency));
 8011a7c:	6878      	ldr	r0, [r7, #4]
 8011a7e:	f7ff fe0d 	bl	801169c <_ZNK12oscilloscope17FreqGenController3guiEv>
 8011a82:	4604      	mov	r4, r0
 8011a84:	687b      	ldr	r3, [r7, #4]
 8011a86:	f103 0218 	add.w	r2, r3, #24
 8011a8a:	f107 0320 	add.w	r3, r7, #32
 8011a8e:	4611      	mov	r1, r2
 8011a90:	4618      	mov	r0, r3
 8011a92:	f000 f979 	bl	8011d88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE>
 8011a96:	f107 0320 	add.w	r3, r7, #32
 8011a9a:	4619      	mov	r1, r3
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	f000 fa79 	bl	8011f94 <_ZN12oscilloscope3Gui23setFreqGenFrequencyTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011aa2:	f107 0320 	add.w	r3, r7, #32
 8011aa6:	4618      	mov	r0, r3
 8011aa8:	f01a f8eb 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8011aac:	bf00      	nop
 8011aae:	373c      	adds	r7, #60	; 0x3c
 8011ab0:	46bd      	mov	sp, r7
 8011ab2:	bd90      	pop	{r4, r7, pc}
 8011ab4:	0802e418 	.word	0x0802e418

08011ab8 <_ZN12oscilloscope17FreqGenController13frequencyDownEv>:

void FreqGenController::frequencyDown() {
 8011ab8:	b590      	push	{r4, r7, lr}
 8011aba:	b08f      	sub	sp, #60	; 0x3c
 8011abc:	af00      	add	r7, sp, #0
 8011abe:	6078      	str	r0, [r7, #4]
	//change the frequency down
	switch (_frequency)
 8011ac0:	687b      	ldr	r3, [r7, #4]
 8011ac2:	8b1b      	ldrh	r3, [r3, #24]
 8011ac4:	f242 7210 	movw	r2, #10000	; 0x2710
 8011ac8:	4293      	cmp	r3, r2
 8011aca:	d051      	beq.n	8011b70 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xb8>
 8011acc:	f242 7210 	movw	r2, #10000	; 0x2710
 8011ad0:	4293      	cmp	r3, r2
 8011ad2:	dc52      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011ad4:	f241 3288 	movw	r2, #5000	; 0x1388
 8011ad8:	4293      	cmp	r3, r2
 8011ada:	d044      	beq.n	8011b66 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xae>
 8011adc:	f241 3288 	movw	r2, #5000	; 0x1388
 8011ae0:	4293      	cmp	r3, r2
 8011ae2:	dc4a      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011ae4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8011ae8:	d038      	beq.n	8011b5c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xa4>
 8011aea:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8011aee:	dc44      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011af0:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 8011af4:	d02d      	beq.n	8011b52 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x9a>
 8011af6:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 8011afa:	dc3e      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011afc:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011b00:	d022      	beq.n	8011b48 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x90>
 8011b02:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011b06:	dc38      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011b08:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 8011b0c:	d018      	beq.n	8011b40 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x88>
 8011b0e:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 8011b12:	dc32      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011b14:	2bf0      	cmp	r3, #240	; 0xf0
 8011b16:	d00f      	beq.n	8011b38 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x80>
 8011b18:	2bf0      	cmp	r3, #240	; 0xf0
 8011b1a:	dc2e      	bgt.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
 8011b1c:	2b32      	cmp	r3, #50	; 0x32
 8011b1e:	d002      	beq.n	8011b26 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x6e>
 8011b20:	2b6e      	cmp	r3, #110	; 0x6e
 8011b22:	d005      	beq.n	8011b30 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x78>
		break;
	case HZ_10000:
		_frequency = HZ_5000;
		break;
	default:
		break;
 8011b24:	e029      	b.n	8011b7a <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc2>
		_frequency = HZ_10000;
 8011b26:	687b      	ldr	r3, [r7, #4]
 8011b28:	f242 7210 	movw	r2, #10000	; 0x2710
 8011b2c:	831a      	strh	r2, [r3, #24]
		break;
 8011b2e:	e025      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_50;
 8011b30:	687b      	ldr	r3, [r7, #4]
 8011b32:	2232      	movs	r2, #50	; 0x32
 8011b34:	831a      	strh	r2, [r3, #24]
		break;
 8011b36:	e021      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_110;
 8011b38:	687b      	ldr	r3, [r7, #4]
 8011b3a:	226e      	movs	r2, #110	; 0x6e
 8011b3c:	831a      	strh	r2, [r3, #24]
		break;
 8011b3e:	e01d      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_240;
 8011b40:	687b      	ldr	r3, [r7, #4]
 8011b42:	22f0      	movs	r2, #240	; 0xf0
 8011b44:	831a      	strh	r2, [r3, #24]
		break;
 8011b46:	e019      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_370;
 8011b48:	687b      	ldr	r3, [r7, #4]
 8011b4a:	f44f 72b9 	mov.w	r2, #370	; 0x172
 8011b4e:	831a      	strh	r2, [r3, #24]
		break;
 8011b50:	e014      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_500;
 8011b52:	687b      	ldr	r3, [r7, #4]
 8011b54:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8011b58:	831a      	strh	r2, [r3, #24]
		break;
 8011b5a:	e00f      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_700;
 8011b5c:	687b      	ldr	r3, [r7, #4]
 8011b5e:	f44f 722f 	mov.w	r2, #700	; 0x2bc
 8011b62:	831a      	strh	r2, [r3, #24]
		break;
 8011b64:	e00a      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_1000;
 8011b66:	687b      	ldr	r3, [r7, #4]
 8011b68:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011b6c:	831a      	strh	r2, [r3, #24]
		break;
 8011b6e:	e005      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		_frequency = HZ_5000;
 8011b70:	687b      	ldr	r3, [r7, #4]
 8011b72:	f241 3288 	movw	r2, #5000	; 0x1388
 8011b76:	831a      	strh	r2, [r3, #24]
		break;
 8011b78:	e000      	b.n	8011b7c <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0xc4>
		break;
 8011b7a:	bf00      	nop
	}

	Trace::out("Frequency down to %s", toString(_frequency).c_str());
 8011b7c:	687b      	ldr	r3, [r7, #4]
 8011b7e:	f103 0218 	add.w	r2, r3, #24
 8011b82:	f107 0308 	add.w	r3, r7, #8
 8011b86:	4611      	mov	r1, r2
 8011b88:	4618      	mov	r0, r3
 8011b8a:	f000 f8fd 	bl	8011d88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE>
 8011b8e:	f107 0308 	add.w	r3, r7, #8
 8011b92:	4618      	mov	r0, r3
 8011b94:	f01a f913 	bl	802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>
 8011b98:	4603      	mov	r3, r0
 8011b9a:	4619      	mov	r1, r3
 8011b9c:	4811      	ldr	r0, [pc, #68]	; (8011be4 <_ZN12oscilloscope17FreqGenController13frequencyDownEv+0x12c>)
 8011b9e:	f001 fbc7 	bl	8013330 <_ZN5Trace3outEPKcz>
 8011ba2:	f107 0308 	add.w	r3, r7, #8
 8011ba6:	4618      	mov	r0, r3
 8011ba8:	f01a f86b 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>

	// Update LCD display
	gui().setFreqGenFrequencyText(toString(_frequency));
 8011bac:	6878      	ldr	r0, [r7, #4]
 8011bae:	f7ff fd75 	bl	801169c <_ZNK12oscilloscope17FreqGenController3guiEv>
 8011bb2:	4604      	mov	r4, r0
 8011bb4:	687b      	ldr	r3, [r7, #4]
 8011bb6:	f103 0218 	add.w	r2, r3, #24
 8011bba:	f107 0320 	add.w	r3, r7, #32
 8011bbe:	4611      	mov	r1, r2
 8011bc0:	4618      	mov	r0, r3
 8011bc2:	f000 f8e1 	bl	8011d88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE>
 8011bc6:	f107 0320 	add.w	r3, r7, #32
 8011bca:	4619      	mov	r1, r3
 8011bcc:	4620      	mov	r0, r4
 8011bce:	f000 f9e1 	bl	8011f94 <_ZN12oscilloscope3Gui23setFreqGenFrequencyTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011bd2:	f107 0320 	add.w	r3, r7, #32
 8011bd6:	4618      	mov	r0, r3
 8011bd8:	f01a f853 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
}
 8011bdc:	bf00      	nop
 8011bde:	373c      	adds	r7, #60	; 0x3c
 8011be0:	46bd      	mov	sp, r7
 8011be2:	bd90      	pop	{r4, r7, pc}
 8011be4:	0802e42c 	.word	0x0802e42c

08011be8 <_ZN12oscilloscope17FreqGenController9shiftModeEv>:

void FreqGenController::shiftMode() {
 8011be8:	b590      	push	{r4, r7, lr}
 8011bea:	b099      	sub	sp, #100	; 0x64
 8011bec:	af00      	add	r7, sp, #0
 8011bee:	6078      	str	r0, [r7, #4]
	//change the waveform
	switch (_mode)
 8011bf0:	687b      	ldr	r3, [r7, #4]
 8011bf2:	7e9b      	ldrb	r3, [r3, #26]
 8011bf4:	2b02      	cmp	r3, #2
 8011bf6:	d056      	beq.n	8011ca6 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0xbe>
 8011bf8:	2b02      	cmp	r3, #2
 8011bfa:	dc7c      	bgt.n	8011cf6 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x10e>
 8011bfc:	2b00      	cmp	r3, #0
 8011bfe:	d002      	beq.n	8011c06 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x1e>
 8011c00:	2b01      	cmp	r3, #1
 8011c02:	d028      	beq.n	8011c56 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x6e>
		    Trace::out("Sine\n");
            gui().setFreqGenWaveformText("Sine -");
		}
		break;
	default:
		break;
 8011c04:	e077      	b.n	8011cf6 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x10e>
		_mode = TRIANGLE;
 8011c06:	687b      	ldr	r3, [r7, #4]
 8011c08:	2201      	movs	r2, #1
 8011c0a:	769a      	strb	r2, [r3, #26]
			Trace::out("Triangle\n");
 8011c0c:	483c      	ldr	r0, [pc, #240]	; (8011d00 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x118>)
 8011c0e:	f001 fb8f 	bl	8013330 <_ZN5Trace3outEPKcz>
			gui().setFreqGenWaveformText("Tria -");
 8011c12:	6878      	ldr	r0, [r7, #4]
 8011c14:	f7ff fd42 	bl	801169c <_ZNK12oscilloscope17FreqGenController3guiEv>
 8011c18:	4604      	mov	r4, r0
 8011c1a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8011c1e:	4618      	mov	r0, r3
 8011c20:	f019 ff46 	bl	802bab0 <_ZNSaIcEC1Ev>
 8011c24:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8011c28:	f107 030c 	add.w	r3, r7, #12
 8011c2c:	4935      	ldr	r1, [pc, #212]	; (8011d04 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x11c>)
 8011c2e:	4618      	mov	r0, r3
 8011c30:	f01a f920 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011c34:	f107 030c 	add.w	r3, r7, #12
 8011c38:	4619      	mov	r1, r3
 8011c3a:	4620      	mov	r0, r4
 8011c3c:	f000 f98a 	bl	8011f54 <_ZN12oscilloscope3Gui22setFreqGenWaveformTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011c40:	f107 030c 	add.w	r3, r7, #12
 8011c44:	4618      	mov	r0, r3
 8011c46:	f01a f81c 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011c4a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8011c4e:	4618      	mov	r0, r3
 8011c50:	f019 ff2f 	bl	802bab2 <_ZNSaIcED1Ev>
		break;
 8011c54:	e050      	b.n	8011cf8 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x110>
		_mode = SQUARE;
 8011c56:	687b      	ldr	r3, [r7, #4]
 8011c58:	2202      	movs	r2, #2
 8011c5a:	769a      	strb	r2, [r3, #26]
		    Trace::out("Square\n");
 8011c5c:	482a      	ldr	r0, [pc, #168]	; (8011d08 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x120>)
 8011c5e:	f001 fb67 	bl	8013330 <_ZN5Trace3outEPKcz>
            gui().setFreqGenWaveformText("Rect -");
 8011c62:	6878      	ldr	r0, [r7, #4]
 8011c64:	f7ff fd1a 	bl	801169c <_ZNK12oscilloscope17FreqGenController3guiEv>
 8011c68:	4604      	mov	r4, r0
 8011c6a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011c6e:	4618      	mov	r0, r3
 8011c70:	f019 ff1e 	bl	802bab0 <_ZNSaIcEC1Ev>
 8011c74:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8011c78:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c7c:	4923      	ldr	r1, [pc, #140]	; (8011d0c <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x124>)
 8011c7e:	4618      	mov	r0, r3
 8011c80:	f01a f8f8 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011c84:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c88:	4619      	mov	r1, r3
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	f000 f962 	bl	8011f54 <_ZN12oscilloscope3Gui22setFreqGenWaveformTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011c90:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8011c94:	4618      	mov	r0, r3
 8011c96:	f019 fff4 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011c9a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8011c9e:	4618      	mov	r0, r3
 8011ca0:	f019 ff07 	bl	802bab2 <_ZNSaIcED1Ev>
		break;
 8011ca4:	e028      	b.n	8011cf8 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x110>
		_mode = SINUS;
 8011ca6:	687b      	ldr	r3, [r7, #4]
 8011ca8:	2200      	movs	r2, #0
 8011caa:	769a      	strb	r2, [r3, #26]
		    Trace::out("Sine\n");
 8011cac:	4818      	ldr	r0, [pc, #96]	; (8011d10 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x128>)
 8011cae:	f001 fb3f 	bl	8013330 <_ZN5Trace3outEPKcz>
            gui().setFreqGenWaveformText("Sine -");
 8011cb2:	6878      	ldr	r0, [r7, #4]
 8011cb4:	f7ff fcf2 	bl	801169c <_ZNK12oscilloscope17FreqGenController3guiEv>
 8011cb8:	4604      	mov	r4, r0
 8011cba:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8011cbe:	4618      	mov	r0, r3
 8011cc0:	f019 fef6 	bl	802bab0 <_ZNSaIcEC1Ev>
 8011cc4:	f107 025c 	add.w	r2, r7, #92	; 0x5c
 8011cc8:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011ccc:	4911      	ldr	r1, [pc, #68]	; (8011d14 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x12c>)
 8011cce:	4618      	mov	r0, r3
 8011cd0:	f01a f8d0 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011cd4:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011cd8:	4619      	mov	r1, r3
 8011cda:	4620      	mov	r0, r4
 8011cdc:	f000 f93a 	bl	8011f54 <_ZN12oscilloscope3Gui22setFreqGenWaveformTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011ce0:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8011ce4:	4618      	mov	r0, r3
 8011ce6:	f019 ffcc 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 8011cea:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8011cee:	4618      	mov	r0, r3
 8011cf0:	f019 fedf 	bl	802bab2 <_ZNSaIcED1Ev>
		break;
 8011cf4:	e000      	b.n	8011cf8 <_ZN12oscilloscope17FreqGenController9shiftModeEv+0x110>
		break;
 8011cf6:	bf00      	nop
	}
}
 8011cf8:	bf00      	nop
 8011cfa:	3764      	adds	r7, #100	; 0x64
 8011cfc:	46bd      	mov	sp, r7
 8011cfe:	bd90      	pop	{r4, r7, pc}
 8011d00:	0802e444 	.word	0x0802e444
 8011d04:	0802e450 	.word	0x0802e450
 8011d08:	0802e458 	.word	0x0802e458
 8011d0c:	0802e460 	.word	0x0802e460
 8011d10:	0802e468 	.word	0x0802e468
 8011d14:	0802e470 	.word	0x0802e470

08011d18 <_ZN12oscilloscope17FreqGenController10initializeERNS_3GuiE>:

void FreqGenController::initialize(oscilloscope::Gui & gui) {
 8011d18:	b580      	push	{r7, lr}
 8011d1a:	b082      	sub	sp, #8
 8011d1c:	af00      	add	r7, sp, #0
 8011d1e:	6078      	str	r0, [r7, #4]
 8011d20:	6039      	str	r1, [r7, #0]
    _pGui = &gui;
 8011d22:	687b      	ldr	r3, [r7, #4]
 8011d24:	683a      	ldr	r2, [r7, #0]
 8011d26:	615a      	str	r2, [r3, #20]
    Factory::getFrequencyGenerator().setFrequency(_frequency);
 8011d28:	f7ff fbd2 	bl	80114d0 <_ZN7Factory21getFrequencyGeneratorEv>
 8011d2c:	4602      	mov	r2, r0
 8011d2e:	687b      	ldr	r3, [r7, #4]
 8011d30:	8b1b      	ldrh	r3, [r3, #24]
 8011d32:	4619      	mov	r1, r3
 8011d34:	4610      	mov	r0, r2
 8011d36:	f000 fece 	bl	8012ad6 <_ZN8external18FrequencyGenerator12setFrequencyEm>
    Factory::getFrequencyGenerator().setWaveForm(_mode);
 8011d3a:	f7ff fbc9 	bl	80114d0 <_ZN7Factory21getFrequencyGeneratorEv>
 8011d3e:	4602      	mov	r2, r0
 8011d40:	687b      	ldr	r3, [r7, #4]
 8011d42:	7e9b      	ldrb	r3, [r3, #26]
 8011d44:	4619      	mov	r1, r3
 8011d46:	4610      	mov	r0, r2
 8011d48:	f000 feb5 	bl	8012ab6 <_ZN8external18FrequencyGenerator11setWaveFormE6f_mode>
}
 8011d4c:	bf00      	nop
 8011d4e:	3708      	adds	r7, #8
 8011d50:	46bd      	mov	sp, r7
 8011d52:	bd80      	pop	{r7, pc}

08011d54 <_ZN12oscilloscope17FreqGenController6changeEv>:

void FreqGenController::change() {
 8011d54:	b580      	push	{r7, lr}
 8011d56:	b082      	sub	sp, #8
 8011d58:	af00      	add	r7, sp, #0
 8011d5a:	6078      	str	r0, [r7, #4]
	Factory::getFrequencyGenerator().setWaveForm(_mode);
 8011d5c:	f7ff fbb8 	bl	80114d0 <_ZN7Factory21getFrequencyGeneratorEv>
 8011d60:	4602      	mov	r2, r0
 8011d62:	687b      	ldr	r3, [r7, #4]
 8011d64:	7e9b      	ldrb	r3, [r3, #26]
 8011d66:	4619      	mov	r1, r3
 8011d68:	4610      	mov	r0, r2
 8011d6a:	f000 fea4 	bl	8012ab6 <_ZN8external18FrequencyGenerator11setWaveFormE6f_mode>
	Factory::getFrequencyGenerator().setFrequency(_frequency);
 8011d6e:	f7ff fbaf 	bl	80114d0 <_ZN7Factory21getFrequencyGeneratorEv>
 8011d72:	4602      	mov	r2, r0
 8011d74:	687b      	ldr	r3, [r7, #4]
 8011d76:	8b1b      	ldrh	r3, [r3, #24]
 8011d78:	4619      	mov	r1, r3
 8011d7a:	4610      	mov	r0, r2
 8011d7c:	f000 feab 	bl	8012ad6 <_ZN8external18FrequencyGenerator12setFrequencyEm>
}
 8011d80:	bf00      	nop
 8011d82:	3708      	adds	r7, #8
 8011d84:	46bd      	mov	sp, r7
 8011d86:	bd80      	pop	{r7, pc}

08011d88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE>:

//static
std::string FreqGenController::toString(const Frequency & frequency)
{
 8011d88:	b580      	push	{r7, lr}
 8011d8a:	b084      	sub	sp, #16
 8011d8c:	af00      	add	r7, sp, #0
 8011d8e:	6078      	str	r0, [r7, #4]
 8011d90:	6039      	str	r1, [r7, #0]
    std::string freqString("n/a");
 8011d92:	f107 030c 	add.w	r3, r7, #12
 8011d96:	4618      	mov	r0, r3
 8011d98:	f019 fe8a 	bl	802bab0 <_ZNSaIcEC1Ev>
 8011d9c:	f107 030c 	add.w	r3, r7, #12
 8011da0:	461a      	mov	r2, r3
 8011da2:	4937      	ldr	r1, [pc, #220]	; (8011e80 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xf8>)
 8011da4:	6878      	ldr	r0, [r7, #4]
 8011da6:	f01a f865 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8011daa:	f107 030c 	add.w	r3, r7, #12
 8011dae:	4618      	mov	r0, r3
 8011db0:	f019 fe7f 	bl	802bab2 <_ZNSaIcED1Ev>

    switch (frequency)
 8011db4:	683b      	ldr	r3, [r7, #0]
 8011db6:	881b      	ldrh	r3, [r3, #0]
 8011db8:	f242 7210 	movw	r2, #10000	; 0x2710
 8011dbc:	4293      	cmp	r3, r2
 8011dbe:	d054      	beq.n	8011e6a <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xe2>
 8011dc0:	f242 7210 	movw	r2, #10000	; 0x2710
 8011dc4:	4293      	cmp	r3, r2
 8011dc6:	dc55      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011dc8:	f241 3288 	movw	r2, #5000	; 0x1388
 8011dcc:	4293      	cmp	r3, r2
 8011dce:	d047      	beq.n	8011e60 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xd8>
 8011dd0:	f241 3288 	movw	r2, #5000	; 0x1388
 8011dd4:	4293      	cmp	r3, r2
 8011dd6:	dc4d      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011dd8:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8011ddc:	d03b      	beq.n	8011e56 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xce>
 8011dde:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8011de2:	dc47      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011de4:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 8011de8:	d030      	beq.n	8011e4c <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xc4>
 8011dea:	f5b3 7f2f 	cmp.w	r3, #700	; 0x2bc
 8011dee:	dc41      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011df0:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011df4:	d025      	beq.n	8011e42 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xba>
 8011df6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011dfa:	dc3b      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011dfc:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 8011e00:	d01a      	beq.n	8011e38 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xb0>
 8011e02:	f5b3 7fb9 	cmp.w	r3, #370	; 0x172
 8011e06:	dc35      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011e08:	2bf0      	cmp	r3, #240	; 0xf0
 8011e0a:	d010      	beq.n	8011e2e <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xa6>
 8011e0c:	2bf0      	cmp	r3, #240	; 0xf0
 8011e0e:	dc31      	bgt.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
 8011e10:	2b32      	cmp	r3, #50	; 0x32
 8011e12:	d002      	beq.n	8011e1a <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x92>
 8011e14:	2b6e      	cmp	r3, #110	; 0x6e
 8011e16:	d005      	beq.n	8011e24 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x9c>
    case HZ_10000:
        freqString = "10 kHz";
        break;
    }

    return freqString;
 8011e18:	e02c      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "50 Hz";
 8011e1a:	491a      	ldr	r1, [pc, #104]	; (8011e84 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xfc>)
 8011e1c:	6878      	ldr	r0, [r7, #4]
 8011e1e:	f019 ffca 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e22:	e027      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "110 Hz";
 8011e24:	4918      	ldr	r1, [pc, #96]	; (8011e88 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x100>)
 8011e26:	6878      	ldr	r0, [r7, #4]
 8011e28:	f019 ffc5 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e2c:	e022      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "240 Hz";
 8011e2e:	4917      	ldr	r1, [pc, #92]	; (8011e8c <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x104>)
 8011e30:	6878      	ldr	r0, [r7, #4]
 8011e32:	f019 ffc0 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e36:	e01d      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "370 Hz";
 8011e38:	4915      	ldr	r1, [pc, #84]	; (8011e90 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x108>)
 8011e3a:	6878      	ldr	r0, [r7, #4]
 8011e3c:	f019 ffbb 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e40:	e018      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "500 Hz";
 8011e42:	4914      	ldr	r1, [pc, #80]	; (8011e94 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x10c>)
 8011e44:	6878      	ldr	r0, [r7, #4]
 8011e46:	f019 ffb6 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e4a:	e013      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "700 Hz";
 8011e4c:	4912      	ldr	r1, [pc, #72]	; (8011e98 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x110>)
 8011e4e:	6878      	ldr	r0, [r7, #4]
 8011e50:	f019 ffb1 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e54:	e00e      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "1 kHz";
 8011e56:	4911      	ldr	r1, [pc, #68]	; (8011e9c <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x114>)
 8011e58:	6878      	ldr	r0, [r7, #4]
 8011e5a:	f019 ffac 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e5e:	e009      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "5 kHz";
 8011e60:	490f      	ldr	r1, [pc, #60]	; (8011ea0 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x118>)
 8011e62:	6878      	ldr	r0, [r7, #4]
 8011e64:	f019 ffa7 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e68:	e004      	b.n	8011e74 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0xec>
        freqString = "10 kHz";
 8011e6a:	490e      	ldr	r1, [pc, #56]	; (8011ea4 <_ZN12oscilloscope17FreqGenController8toStringB5cxx11ERKNS_10_FrequencyE+0x11c>)
 8011e6c:	6878      	ldr	r0, [r7, #4]
 8011e6e:	f019 ffa2 	bl	802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>
        break;
 8011e72:	bf00      	nop
    return freqString;
 8011e74:	bf00      	nop
}
 8011e76:	6878      	ldr	r0, [r7, #4]
 8011e78:	3710      	adds	r7, #16
 8011e7a:	46bd      	mov	sp, r7
 8011e7c:	bd80      	pop	{r7, pc}
 8011e7e:	bf00      	nop
 8011e80:	0802e478 	.word	0x0802e478
 8011e84:	0802e47c 	.word	0x0802e47c
 8011e88:	0802e484 	.word	0x0802e484
 8011e8c:	0802e48c 	.word	0x0802e48c
 8011e90:	0802e494 	.word	0x0802e494
 8011e94:	0802e49c 	.word	0x0802e49c
 8011e98:	0802e4a4 	.word	0x0802e4a4
 8011e9c:	0802e4ac 	.word	0x0802e4ac
 8011ea0:	0802e4b4 	.word	0x0802e4b4
 8011ea4:	0802e4bc 	.word	0x0802e4bc

08011ea8 <_ZN12oscilloscope3GuiC1Ev>:

namespace oscilloscope {

Gui* Gui::_instance = nullptr;

Gui::Gui() :
 8011ea8:	b480      	push	{r7}
 8011eaa:	b083      	sub	sp, #12
 8011eac:	af00      	add	r7, sp, #0
 8011eae:	6078      	str	r0, [r7, #4]
    _pGuiObserver(nullptr),
    _redLedOn(false),
    _xAxisPixelsPerField(roundf(460.0/8))     // Width of the chart graph divided by the number of divisions to show
 8011eb0:	687b      	ldr	r3, [r7, #4]
 8011eb2:	2200      	movs	r2, #0
 8011eb4:	601a      	str	r2, [r3, #0]
 8011eb6:	687b      	ldr	r3, [r7, #4]
 8011eb8:	2200      	movs	r2, #0
 8011eba:	711a      	strb	r2, [r3, #4]
 8011ebc:	687b      	ldr	r3, [r7, #4]
 8011ebe:	4a08      	ldr	r2, [pc, #32]	; (8011ee0 <_ZN12oscilloscope3GuiC1Ev+0x38>)
 8011ec0:	609a      	str	r2, [r3, #8]
{
	if(_instance==nullptr){
 8011ec2:	4b08      	ldr	r3, [pc, #32]	; (8011ee4 <_ZN12oscilloscope3GuiC1Ev+0x3c>)
 8011ec4:	681b      	ldr	r3, [r3, #0]
 8011ec6:	2b00      	cmp	r3, #0
 8011ec8:	d102      	bne.n	8011ed0 <_ZN12oscilloscope3GuiC1Ev+0x28>
		    _instance = this;
 8011eca:	4a06      	ldr	r2, [pc, #24]	; (8011ee4 <_ZN12oscilloscope3GuiC1Ev+0x3c>)
 8011ecc:	687b      	ldr	r3, [r7, #4]
 8011ece:	6013      	str	r3, [r2, #0]
		}
}
 8011ed0:	687b      	ldr	r3, [r7, #4]
 8011ed2:	4618      	mov	r0, r3
 8011ed4:	370c      	adds	r7, #12
 8011ed6:	46bd      	mov	sp, r7
 8011ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011edc:	4770      	bx	lr
 8011ede:	bf00      	nop
 8011ee0:	42680000 	.word	0x42680000
 8011ee4:	20003e90 	.word	0x20003e90

08011ee8 <_ZN12oscilloscope3Gui11getInstanceEv>:

Gui* Gui::getInstance() {
 8011ee8:	b480      	push	{r7}
 8011eea:	af00      	add	r7, sp, #0
	return _instance;
 8011eec:	4b03      	ldr	r3, [pc, #12]	; (8011efc <_ZN12oscilloscope3Gui11getInstanceEv+0x14>)
 8011eee:	681b      	ldr	r3, [r3, #0]
}
 8011ef0:	4618      	mov	r0, r3
 8011ef2:	46bd      	mov	sp, r7
 8011ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011ef8:	4770      	bx	lr
 8011efa:	bf00      	nop
 8011efc:	20003e90 	.word	0x20003e90

08011f00 <_ZN12oscilloscope3Gui5startEv>:
    }
    return false;
}

void Gui::start()
{
 8011f00:	b480      	push	{r7}
 8011f02:	b083      	sub	sp, #12
 8011f04:	af00      	add	r7, sp, #0
 8011f06:	6078      	str	r0, [r7, #4]
}
 8011f08:	bf00      	nop
 8011f0a:	370c      	adds	r7, #12
 8011f0c:	46bd      	mov	sp, r7
 8011f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011f12:	4770      	bx	lr

08011f14 <_ZN12oscilloscope3Gui19setTimeDivisionTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
{
	return true;
}

void Gui::setTimeDivisionText(std::string text)
{
 8011f14:	b580      	push	{r7, lr}
 8011f16:	b08a      	sub	sp, #40	; 0x28
 8011f18:	af00      	add	r7, sp, #0
 8011f1a:	6078      	str	r0, [r7, #4]
 8011f1c:	6039      	str	r1, [r7, #0]
	Model* model = Model::getInstance();
 8011f1e:	f7fc ff6f 	bl	800ee00 <_ZN5Model11getInstanceEv>
 8011f22:	6278      	str	r0, [r7, #36]	; 0x24
	if(model!=nullptr){
 8011f24:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011f26:	2b00      	cmp	r3, #0
 8011f28:	d010      	beq.n	8011f4c <_ZN12oscilloscope3Gui19setTimeDivisionTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
		model->setDivTimLabel(text);
 8011f2a:	f107 030c 	add.w	r3, r7, #12
 8011f2e:	6839      	ldr	r1, [r7, #0]
 8011f30:	4618      	mov	r0, r3
 8011f32:	f019 ff6b 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8011f36:	f107 030c 	add.w	r3, r7, #12
 8011f3a:	4619      	mov	r1, r3
 8011f3c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8011f3e:	f7fc fff7 	bl	800ef30 <_ZN5Model14setDivTimLabelENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011f42:	f107 030c 	add.w	r3, r7, #12
 8011f46:	4618      	mov	r0, r3
 8011f48:	f019 fe9b 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8011f4c:	bf00      	nop
 8011f4e:	3728      	adds	r7, #40	; 0x28
 8011f50:	46bd      	mov	sp, r7
 8011f52:	bd80      	pop	{r7, pc}

08011f54 <_ZN12oscilloscope3Gui22setFreqGenWaveformTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Gui::setFreqGenWaveformText(std::string text)
{
 8011f54:	b580      	push	{r7, lr}
 8011f56:	b08a      	sub	sp, #40	; 0x28
 8011f58:	af00      	add	r7, sp, #0
 8011f5a:	6078      	str	r0, [r7, #4]
 8011f5c:	6039      	str	r1, [r7, #0]
	Model* model = Model::getInstance();
 8011f5e:	f7fc ff4f 	bl	800ee00 <_ZN5Model11getInstanceEv>
 8011f62:	6278      	str	r0, [r7, #36]	; 0x24
	if(model!=nullptr){
 8011f64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011f66:	2b00      	cmp	r3, #0
 8011f68:	d010      	beq.n	8011f8c <_ZN12oscilloscope3Gui22setFreqGenWaveformTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
		model->setModeSignal(text);
 8011f6a:	f107 030c 	add.w	r3, r7, #12
 8011f6e:	6839      	ldr	r1, [r7, #0]
 8011f70:	4618      	mov	r0, r3
 8011f72:	f019 ff4b 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8011f76:	f107 030c 	add.w	r3, r7, #12
 8011f7a:	4619      	mov	r1, r3
 8011f7c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8011f7e:	f7fc ffea 	bl	800ef56 <_ZN5Model13setModeSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011f82:	f107 030c 	add.w	r3, r7, #12
 8011f86:	4618      	mov	r0, r3
 8011f88:	f019 fe7b 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8011f8c:	bf00      	nop
 8011f8e:	3728      	adds	r7, #40	; 0x28
 8011f90:	46bd      	mov	sp, r7
 8011f92:	bd80      	pop	{r7, pc}

08011f94 <_ZN12oscilloscope3Gui23setFreqGenFrequencyTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void Gui::setFreqGenFrequencyText(std::string text)
{
 8011f94:	b580      	push	{r7, lr}
 8011f96:	b08a      	sub	sp, #40	; 0x28
 8011f98:	af00      	add	r7, sp, #0
 8011f9a:	6078      	str	r0, [r7, #4]
 8011f9c:	6039      	str	r1, [r7, #0]
	Model* model = Model::getInstance();
 8011f9e:	f7fc ff2f 	bl	800ee00 <_ZN5Model11getInstanceEv>
 8011fa2:	6278      	str	r0, [r7, #36]	; 0x24
	if(model!=nullptr){
 8011fa4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8011fa6:	2b00      	cmp	r3, #0
 8011fa8:	d010      	beq.n	8011fcc <_ZN12oscilloscope3Gui23setFreqGenFrequencyTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x38>
		model->setFreqSignal(text);
 8011faa:	f107 030c 	add.w	r3, r7, #12
 8011fae:	6839      	ldr	r1, [r7, #0]
 8011fb0:	4618      	mov	r0, r3
 8011fb2:	f019 ff2b 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 8011fb6:	f107 030c 	add.w	r3, r7, #12
 8011fba:	4619      	mov	r1, r3
 8011fbc:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8011fbe:	f7fc ffdd 	bl	800ef7c <_ZN5Model13setFreqSignalENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 8011fc2:	f107 030c 	add.w	r3, r7, #12
 8011fc6:	4618      	mov	r0, r3
 8011fc8:	f019 fe5b 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
	}
}
 8011fcc:	bf00      	nop
 8011fce:	3728      	adds	r7, #40	; 0x28
 8011fd0:	46bd      	mov	sp, r7
 8011fd2:	bd80      	pop	{r7, pc}

08011fd4 <_ZN12oscilloscope3Gui23onButtonTimePlusPressedEv>:

void Gui::onButtonTimePlusPressed()
{
 8011fd4:	b580      	push	{r7, lr}
 8011fd6:	b082      	sub	sp, #8
 8011fd8:	af00      	add	r7, sp, #0
 8011fda:	6078      	str	r0, [r7, #4]
    _pGuiObserver->onButtonTimePlusPressed();
 8011fdc:	687b      	ldr	r3, [r7, #4]
 8011fde:	681a      	ldr	r2, [r3, #0]
 8011fe0:	687b      	ldr	r3, [r7, #4]
 8011fe2:	681b      	ldr	r3, [r3, #0]
 8011fe4:	681b      	ldr	r3, [r3, #0]
 8011fe6:	3308      	adds	r3, #8
 8011fe8:	681b      	ldr	r3, [r3, #0]
 8011fea:	4610      	mov	r0, r2
 8011fec:	4798      	blx	r3
}
 8011fee:	bf00      	nop
 8011ff0:	3708      	adds	r7, #8
 8011ff2:	46bd      	mov	sp, r7
 8011ff4:	bd80      	pop	{r7, pc}

08011ff6 <_ZN12oscilloscope3Gui24onButtonTimeMinusPressedEv>:

void Gui::onButtonTimeMinusPressed()
{
 8011ff6:	b580      	push	{r7, lr}
 8011ff8:	b082      	sub	sp, #8
 8011ffa:	af00      	add	r7, sp, #0
 8011ffc:	6078      	str	r0, [r7, #4]
    _pGuiObserver->onButtonTimeMinusPressed();
 8011ffe:	687b      	ldr	r3, [r7, #4]
 8012000:	681a      	ldr	r2, [r3, #0]
 8012002:	687b      	ldr	r3, [r7, #4]
 8012004:	681b      	ldr	r3, [r3, #0]
 8012006:	681b      	ldr	r3, [r3, #0]
 8012008:	330c      	adds	r3, #12
 801200a:	681b      	ldr	r3, [r3, #0]
 801200c:	4610      	mov	r0, r2
 801200e:	4798      	blx	r3
}
 8012010:	bf00      	nop
 8012012:	3708      	adds	r7, #8
 8012014:	46bd      	mov	sp, r7
 8012016:	bd80      	pop	{r7, pc}

08012018 <_ZN12oscilloscope3Gui27onCheckBoxTriggerCheckStateEb>:

void Gui::onCheckBoxTriggerCheckState(bool checked)
{
 8012018:	b580      	push	{r7, lr}
 801201a:	b082      	sub	sp, #8
 801201c:	af00      	add	r7, sp, #0
 801201e:	6078      	str	r0, [r7, #4]
 8012020:	460b      	mov	r3, r1
 8012022:	70fb      	strb	r3, [r7, #3]
    _pGuiObserver->onCheckBoxTriggerCheckState(checked);
 8012024:	687b      	ldr	r3, [r7, #4]
 8012026:	681a      	ldr	r2, [r3, #0]
 8012028:	687b      	ldr	r3, [r7, #4]
 801202a:	681b      	ldr	r3, [r3, #0]
 801202c:	681b      	ldr	r3, [r3, #0]
 801202e:	3310      	adds	r3, #16
 8012030:	681b      	ldr	r3, [r3, #0]
 8012032:	78f9      	ldrb	r1, [r7, #3]
 8012034:	4610      	mov	r0, r2
 8012036:	4798      	blx	r3
}
 8012038:	bf00      	nop
 801203a:	3708      	adds	r7, #8
 801203c:	46bd      	mov	sp, r7
 801203e:	bd80      	pop	{r7, pc}

08012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>:
    XFEvent(XFEventType eventType, int id, interface::XFReactive * pBehavior) : eventType_(eventType), id_(id), pBehavior_(pBehavior) {}
 8012040:	b480      	push	{r7}
 8012042:	b085      	sub	sp, #20
 8012044:	af00      	add	r7, sp, #0
 8012046:	60f8      	str	r0, [r7, #12]
 8012048:	607a      	str	r2, [r7, #4]
 801204a:	603b      	str	r3, [r7, #0]
 801204c:	460b      	mov	r3, r1
 801204e:	72fb      	strb	r3, [r7, #11]
 8012050:	4a09      	ldr	r2, [pc, #36]	; (8012078 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE+0x38>)
 8012052:	68fb      	ldr	r3, [r7, #12]
 8012054:	601a      	str	r2, [r3, #0]
 8012056:	68fb      	ldr	r3, [r7, #12]
 8012058:	7afa      	ldrb	r2, [r7, #11]
 801205a:	711a      	strb	r2, [r3, #4]
 801205c:	68fb      	ldr	r3, [r7, #12]
 801205e:	687a      	ldr	r2, [r7, #4]
 8012060:	609a      	str	r2, [r3, #8]
 8012062:	68fb      	ldr	r3, [r7, #12]
 8012064:	683a      	ldr	r2, [r7, #0]
 8012066:	60da      	str	r2, [r3, #12]
 8012068:	68fb      	ldr	r3, [r7, #12]
 801206a:	4618      	mov	r0, r3
 801206c:	3714      	adds	r7, #20
 801206e:	46bd      	mov	sp, r7
 8012070:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012074:	4770      	bx	lr
 8012076:	bf00      	nop
 8012078:	0802f784 	.word	0x0802f784

0801207c <_ZN7XFEventD1Ev>:
    virtual ~XFEvent() {}		///< Class destructor
 801207c:	b480      	push	{r7}
 801207e:	b083      	sub	sp, #12
 8012080:	af00      	add	r7, sp, #0
 8012082:	6078      	str	r0, [r7, #4]
 8012084:	4a04      	ldr	r2, [pc, #16]	; (8012098 <_ZN7XFEventD1Ev+0x1c>)
 8012086:	687b      	ldr	r3, [r7, #4]
 8012088:	601a      	str	r2, [r3, #0]
 801208a:	687b      	ldr	r3, [r7, #4]
 801208c:	4618      	mov	r0, r3
 801208e:	370c      	adds	r7, #12
 8012090:	46bd      	mov	sp, r7
 8012092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012096:	4770      	bx	lr
 8012098:	0802f784 	.word	0x0802f784

0801209c <_ZN7XFEventD0Ev>:
 801209c:	b580      	push	{r7, lr}
 801209e:	b082      	sub	sp, #8
 80120a0:	af00      	add	r7, sp, #0
 80120a2:	6078      	str	r0, [r7, #4]
 80120a4:	6878      	ldr	r0, [r7, #4]
 80120a6:	f7ff ffe9 	bl	801207c <_ZN7XFEventD1Ev>
 80120aa:	2110      	movs	r1, #16
 80120ac:	6878      	ldr	r0, [r7, #4]
 80120ae:	f019 fcda 	bl	802ba66 <_ZdlPvj>
 80120b2:	687b      	ldr	r3, [r7, #4]
 80120b4:	4618      	mov	r0, r3
 80120b6:	3708      	adds	r7, #8
 80120b8:	46bd      	mov	sp, r7
 80120ba:	bd80      	pop	{r7, pc}

080120bc <_ZNK7XFEvent18deleteAfterConsumeEv>:

    virtual bool deleteAfterConsume() const { return false; }	///< Tells the dispatcher if the event must be deleted or not.
 80120bc:	b480      	push	{r7}
 80120be:	b083      	sub	sp, #12
 80120c0:	af00      	add	r7, sp, #0
 80120c2:	6078      	str	r0, [r7, #4]
 80120c4:	2300      	movs	r3, #0
 80120c6:	4618      	mov	r0, r3
 80120c8:	370c      	adds	r7, #12
 80120ca:	46bd      	mov	sp, r7
 80120cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120d0:	4770      	bx	lr
	...

080120d4 <_ZN9interface11GuiObserverC1Ev>:
    virtual void onCheckBoxTriggerCheckState(bool checked) = 0;

    virtual uint32_t getTDivCount() const = 0;      // Returns the of x-axis grid count

protected:
    GuiObserver() {}
 80120d4:	b480      	push	{r7}
 80120d6:	b083      	sub	sp, #12
 80120d8:	af00      	add	r7, sp, #0
 80120da:	6078      	str	r0, [r7, #4]
 80120dc:	4a04      	ldr	r2, [pc, #16]	; (80120f0 <_ZN9interface11GuiObserverC1Ev+0x1c>)
 80120de:	687b      	ldr	r3, [r7, #4]
 80120e0:	601a      	str	r2, [r3, #0]
 80120e2:	687b      	ldr	r3, [r7, #4]
 80120e4:	4618      	mov	r0, r3
 80120e6:	370c      	adds	r7, #12
 80120e8:	46bd      	mov	sp, r7
 80120ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80120ee:	4770      	bx	lr
 80120f0:	0802f6d0 	.word	0x0802f6d0

080120f4 <_ZN10XFBehavior15scheduleTimeoutEii>:
     *
     * Will work only if the current event is of type IXFEvent::Timeout.
     */
    const XFTimeout * getCurrentTimeout();

    inline void scheduleTimeout(int timeoutId, int interval) { getDispatcher()->scheduleTimeout(timeoutId, interval, this); }	///< @brief Schedules a timeout for this state machine.
 80120f4:	b590      	push	{r4, r7, lr}
 80120f6:	b085      	sub	sp, #20
 80120f8:	af00      	add	r7, sp, #0
 80120fa:	60f8      	str	r0, [r7, #12]
 80120fc:	60b9      	str	r1, [r7, #8]
 80120fe:	607a      	str	r2, [r7, #4]
 8012100:	68f8      	ldr	r0, [r7, #12]
 8012102:	f001 fd34 	bl	8013b6e <_ZN10XFBehavior13getDispatcherEv>
 8012106:	6803      	ldr	r3, [r0, #0]
 8012108:	3318      	adds	r3, #24
 801210a:	681c      	ldr	r4, [r3, #0]
 801210c:	68fb      	ldr	r3, [r7, #12]
 801210e:	687a      	ldr	r2, [r7, #4]
 8012110:	68b9      	ldr	r1, [r7, #8]
 8012112:	47a0      	blx	r4
 8012114:	bf00      	nop
 8012116:	3714      	adds	r7, #20
 8012118:	46bd      	mov	sp, r7
 801211a:	bd90      	pop	{r4, r7, pc}

0801211c <_ZNK12oscilloscope10Controller12getTDivCountEv>:
	// GuiObserver interface implementation
protected:
    void onButtonTimePlusPressed() override;
    void onButtonTimeMinusPressed() override;
    void onCheckBoxTriggerCheckState(bool checked) override;
    uint32_t getTDivCount() const override { return 8; };
 801211c:	b480      	push	{r7}
 801211e:	b083      	sub	sp, #12
 8012120:	af00      	add	r7, sp, #0
 8012122:	6078      	str	r0, [r7, #4]
 8012124:	2308      	movs	r3, #8
 8012126:	4618      	mov	r0, r3
 8012128:	370c      	adds	r7, #12
 801212a:	46bd      	mov	sp, r7
 801212c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012130:	4770      	bx	lr

08012132 <_ZThn16_NK12oscilloscope10Controller12getTDivCountEv>:
 8012132:	f1a0 0010 	sub.w	r0, r0, #16
 8012136:	e7f1      	b.n	801211c <_ZNK12oscilloscope10Controller12getTDivCountEv>

08012138 <_ZNK12oscilloscope10Controller3guiEv>:

protected:
	void doShowAnalogSignal();
	void doButtonTimePlusPressed();
	void doButtonTimeMinusPressed();
	inline Gui & gui() const { assert(_pGui); return *_pGui; }
 8012138:	b580      	push	{r7, lr}
 801213a:	b082      	sub	sp, #8
 801213c:	af00      	add	r7, sp, #0
 801213e:	6078      	str	r0, [r7, #4]
 8012140:	687b      	ldr	r3, [r7, #4]
 8012142:	695b      	ldr	r3, [r3, #20]
 8012144:	2b00      	cmp	r3, #0
 8012146:	d105      	bne.n	8012154 <_ZNK12oscilloscope10Controller3guiEv+0x1c>
 8012148:	4b05      	ldr	r3, [pc, #20]	; (8012160 <_ZNK12oscilloscope10Controller3guiEv+0x28>)
 801214a:	4a06      	ldr	r2, [pc, #24]	; (8012164 <_ZNK12oscilloscope10Controller3guiEv+0x2c>)
 801214c:	2142      	movs	r1, #66	; 0x42
 801214e:	4806      	ldr	r0, [pc, #24]	; (8012168 <_ZNK12oscilloscope10Controller3guiEv+0x30>)
 8012150:	f019 feca 	bl	802bee8 <__assert_func>
 8012154:	687b      	ldr	r3, [r7, #4]
 8012156:	695b      	ldr	r3, [r3, #20]
 8012158:	4618      	mov	r0, r3
 801215a:	3708      	adds	r7, #8
 801215c:	46bd      	mov	sp, r7
 801215e:	bd80      	pop	{r7, pc}
 8012160:	0802e4c4 	.word	0x0802e4c4
 8012164:	0802e4cc 	.word	0x0802e4cc
 8012168:	0802e508 	.word	0x0802e508

0801216c <_ZN12oscilloscope10ControllerC1Ev>:
                                               {TDIV_1ms,     "1 ms / div"},
                                               {TDIV_2ms,     "2 ms / div"},
                                               {TDIV_5ms,     "5 ms / div"},
                                               {TDIV_10ms,   "10 ms / div"}};

Controller::Controller() :
 801216c:	b580      	push	{r7, lr}
 801216e:	b082      	sub	sp, #8
 8012170:	af00      	add	r7, sp, #0
 8012172:	6078      	str	r0, [r7, #4]
    _pGui(nullptr),
    _adcValuesBuffer(nullptr),
	_adcValuesBufferSize(0),
	_tdivValue(TDIV_1ms)
 8012174:	687b      	ldr	r3, [r7, #4]
 8012176:	2100      	movs	r1, #0
 8012178:	4618      	mov	r0, r3
 801217a:	f001 fc11 	bl	80139a0 <_ZN10XFBehaviorC1Eb>
 801217e:	687b      	ldr	r3, [r7, #4]
 8012180:	3310      	adds	r3, #16
 8012182:	4618      	mov	r0, r3
 8012184:	f7ff ffa6 	bl	80120d4 <_ZN9interface11GuiObserverC1Ev>
 8012188:	4a15      	ldr	r2, [pc, #84]	; (80121e0 <_ZN12oscilloscope10ControllerC1Ev+0x74>)
 801218a:	687b      	ldr	r3, [r7, #4]
 801218c:	601a      	str	r2, [r3, #0]
 801218e:	4a15      	ldr	r2, [pc, #84]	; (80121e4 <_ZN12oscilloscope10ControllerC1Ev+0x78>)
 8012190:	687b      	ldr	r3, [r7, #4]
 8012192:	611a      	str	r2, [r3, #16]
 8012194:	687b      	ldr	r3, [r7, #4]
 8012196:	2200      	movs	r2, #0
 8012198:	615a      	str	r2, [r3, #20]
 801219a:	687b      	ldr	r3, [r7, #4]
 801219c:	2200      	movs	r2, #0
 801219e:	619a      	str	r2, [r3, #24]
 80121a0:	687b      	ldr	r3, [r7, #4]
 80121a2:	2200      	movs	r2, #0
 80121a4:	61da      	str	r2, [r3, #28]
 80121a6:	687b      	ldr	r3, [r7, #4]
 80121a8:	2200      	movs	r2, #0
 80121aa:	621a      	str	r2, [r3, #32]
 80121ac:	687b      	ldr	r3, [r7, #4]
 80121ae:	2214      	movs	r2, #20
 80121b0:	625a      	str	r2, [r3, #36]	; 0x24
 80121b2:	687b      	ldr	r3, [r7, #4]
 80121b4:	2202      	movs	r2, #2
 80121b6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
{
    assert(!_pInstance);    // Only one instance of this class allowed!
 80121ba:	4b0b      	ldr	r3, [pc, #44]	; (80121e8 <_ZN12oscilloscope10ControllerC1Ev+0x7c>)
 80121bc:	681b      	ldr	r3, [r3, #0]
 80121be:	2b00      	cmp	r3, #0
 80121c0:	d005      	beq.n	80121ce <_ZN12oscilloscope10ControllerC1Ev+0x62>
 80121c2:	4b0a      	ldr	r3, [pc, #40]	; (80121ec <_ZN12oscilloscope10ControllerC1Ev+0x80>)
 80121c4:	4a0a      	ldr	r2, [pc, #40]	; (80121f0 <_ZN12oscilloscope10ControllerC1Ev+0x84>)
 80121c6:	2119      	movs	r1, #25
 80121c8:	480a      	ldr	r0, [pc, #40]	; (80121f4 <_ZN12oscilloscope10ControllerC1Ev+0x88>)
 80121ca:	f019 fe8d 	bl	802bee8 <__assert_func>
    _pInstance = this;
 80121ce:	4a06      	ldr	r2, [pc, #24]	; (80121e8 <_ZN12oscilloscope10ControllerC1Ev+0x7c>)
 80121d0:	687b      	ldr	r3, [r7, #4]
 80121d2:	6013      	str	r3, [r2, #0]
}
 80121d4:	687b      	ldr	r3, [r7, #4]
 80121d6:	4618      	mov	r0, r3
 80121d8:	3708      	adds	r7, #8
 80121da:	46bd      	mov	sp, r7
 80121dc:	bd80      	pop	{r7, pc}
 80121de:	bf00      	nop
 80121e0:	0802f72c 	.word	0x0802f72c
 80121e4:	0802f764 	.word	0x0802f764
 80121e8:	20003e94 	.word	0x20003e94
 80121ec:	0802e56c 	.word	0x0802e56c
 80121f0:	0802e578 	.word	0x0802e578
 80121f4:	0802e5a0 	.word	0x0802e5a0

080121f8 <_ZN12oscilloscope10Controller11getInstanceEv>:

//static
Controller & Controller::getInstance()
{
 80121f8:	b580      	push	{r7, lr}
 80121fa:	af00      	add	r7, sp, #0
    assert(_pInstance);     // Create first an instance!
 80121fc:	4b06      	ldr	r3, [pc, #24]	; (8012218 <_ZN12oscilloscope10Controller11getInstanceEv+0x20>)
 80121fe:	681b      	ldr	r3, [r3, #0]
 8012200:	2b00      	cmp	r3, #0
 8012202:	d105      	bne.n	8012210 <_ZN12oscilloscope10Controller11getInstanceEv+0x18>
 8012204:	4b05      	ldr	r3, [pc, #20]	; (801221c <_ZN12oscilloscope10Controller11getInstanceEv+0x24>)
 8012206:	4a06      	ldr	r2, [pc, #24]	; (8012220 <_ZN12oscilloscope10Controller11getInstanceEv+0x28>)
 8012208:	2120      	movs	r1, #32
 801220a:	4806      	ldr	r0, [pc, #24]	; (8012224 <_ZN12oscilloscope10Controller11getInstanceEv+0x2c>)
 801220c:	f019 fe6c 	bl	802bee8 <__assert_func>
    return *_pInstance;
 8012210:	4b01      	ldr	r3, [pc, #4]	; (8012218 <_ZN12oscilloscope10Controller11getInstanceEv+0x20>)
 8012212:	681b      	ldr	r3, [r3, #0]
}
 8012214:	4618      	mov	r0, r3
 8012216:	bd80      	pop	{r7, pc}
 8012218:	20003e94 	.word	0x20003e94
 801221c:	0802e608 	.word	0x0802e608
 8012220:	0802e614 	.word	0x0802e614
 8012224:	0802e5a0 	.word	0x0802e5a0

08012228 <_ZN12oscilloscope10Controller5startEv>:

    gui.registerObserver(this);     // Get notified about GUI events
}

void Controller::start()
{
 8012228:	b580      	push	{r7, lr}
 801222a:	b082      	sub	sp, #8
 801222c:	af00      	add	r7, sp, #0
 801222e:	6078      	str	r0, [r7, #4]
    startBehavior();
 8012230:	687a      	ldr	r2, [r7, #4]
 8012232:	687b      	ldr	r3, [r7, #4]
 8012234:	681b      	ldr	r3, [r3, #0]
 8012236:	3308      	adds	r3, #8
 8012238:	681b      	ldr	r3, [r3, #0]
 801223a:	4610      	mov	r0, r2
 801223c:	4798      	blx	r3
}
 801223e:	bf00      	nop
 8012240:	3708      	adds	r7, #8
 8012242:	46bd      	mov	sp, r7
 8012244:	bd80      	pop	{r7, pc}
	...

08012248 <_ZN12oscilloscope10Controller12processEventEv>:

XFEventStatus Controller::processEvent()
{
 8012248:	b580      	push	{r7, lr}
 801224a:	b084      	sub	sp, #16
 801224c:	af00      	add	r7, sp, #0
 801224e:	6078      	str	r0, [r7, #4]
    if (!_adcValuesBuffer)
 8012250:	687b      	ldr	r3, [r7, #4]
 8012252:	699b      	ldr	r3, [r3, #24]
 8012254:	2b00      	cmp	r3, #0
 8012256:	d102      	bne.n	801225e <_ZN12oscilloscope10Controller12processEventEv+0x16>
    {
        Trace::out("oscilloscope::Controller Error: Attribute '_adcValuesBuffer' not set!");
 8012258:	4850      	ldr	r0, [pc, #320]	; (801239c <_ZN12oscilloscope10Controller12processEventEv+0x154>)
 801225a:	f001 f869 	bl	8013330 <_ZN5Trace3outEPKcz>
    }

    assert(_adcValuesBuffer);
 801225e:	687b      	ldr	r3, [r7, #4]
 8012260:	699b      	ldr	r3, [r3, #24]
 8012262:	2b00      	cmp	r3, #0
 8012264:	d105      	bne.n	8012272 <_ZN12oscilloscope10Controller12processEventEv+0x2a>
 8012266:	4b4e      	ldr	r3, [pc, #312]	; (80123a0 <_ZN12oscilloscope10Controller12processEventEv+0x158>)
 8012268:	4a4e      	ldr	r2, [pc, #312]	; (80123a4 <_ZN12oscilloscope10Controller12processEventEv+0x15c>)
 801226a:	2139      	movs	r1, #57	; 0x39
 801226c:	484e      	ldr	r0, [pc, #312]	; (80123a8 <_ZN12oscilloscope10Controller12processEventEv+0x160>)
 801226e:	f019 fe3b 	bl	802bee8 <__assert_func>
    assert(_adcValuesBufferSize > 0);
 8012272:	687b      	ldr	r3, [r7, #4]
 8012274:	69db      	ldr	r3, [r3, #28]
 8012276:	2b00      	cmp	r3, #0
 8012278:	d105      	bne.n	8012286 <_ZN12oscilloscope10Controller12processEventEv+0x3e>
 801227a:	4b4c      	ldr	r3, [pc, #304]	; (80123ac <_ZN12oscilloscope10Controller12processEventEv+0x164>)
 801227c:	4a49      	ldr	r2, [pc, #292]	; (80123a4 <_ZN12oscilloscope10Controller12processEventEv+0x15c>)
 801227e:	213a      	movs	r1, #58	; 0x3a
 8012280:	4849      	ldr	r0, [pc, #292]	; (80123a8 <_ZN12oscilloscope10Controller12processEventEv+0x160>)
 8012282:	f019 fe31 	bl	802bee8 <__assert_func>

	if (getCurrentEvent()->getEventType() == XFEvent::Initial)
 8012286:	687b      	ldr	r3, [r7, #4]
 8012288:	4618      	mov	r0, r3
 801228a:	f001 fc8a 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 801228e:	4603      	mov	r3, r0
 8012290:	4618      	mov	r0, r3
 8012292:	f7ff f9c9 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012296:	4603      	mov	r3, r0
 8012298:	2b01      	cmp	r3, #1
 801229a:	bf0c      	ite	eq
 801229c:	2301      	moveq	r3, #1
 801229e:	2300      	movne	r3, #0
 80122a0:	b2db      	uxtb	r3, r3
 80122a2:	2b00      	cmp	r3, #0
 80122a4:	d00a      	beq.n	80122bc <_ZN12oscilloscope10Controller12processEventEv+0x74>
	{
		scheduleTimeout(TIMEOUT_ID, TIMEOUT_INTERVAL);
 80122a6:	6878      	ldr	r0, [r7, #4]
 80122a8:	687b      	ldr	r3, [r7, #4]
 80122aa:	6a19      	ldr	r1, [r3, #32]
 80122ac:	687b      	ldr	r3, [r7, #4]
 80122ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80122b0:	461a      	mov	r2, r3
 80122b2:	f7ff ff1f 	bl	80120f4 <_ZN10XFBehavior15scheduleTimeoutEii>

		doShowAnalogSignal();
 80122b6:	6878      	ldr	r0, [r7, #4]
 80122b8:	f000 f8ec 	bl	8012494 <_ZN12oscilloscope10Controller18doShowAnalogSignalEv>
	}

	if (getCurrentEvent()->getEventType() == XFEvent::Timeout &&
 80122bc:	687b      	ldr	r3, [r7, #4]
 80122be:	4618      	mov	r0, r3
 80122c0:	f001 fc6f 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 80122c4:	4603      	mov	r3, r0
 80122c6:	4618      	mov	r0, r3
 80122c8:	f7ff f9ae 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 80122cc:	4603      	mov	r3, r0
 80122ce:	2b04      	cmp	r3, #4
 80122d0:	d10e      	bne.n	80122f0 <_ZN12oscilloscope10Controller12processEventEv+0xa8>
		getCurrentTimeout()->getId() == TIMEOUT_ID)
 80122d2:	687b      	ldr	r3, [r7, #4]
 80122d4:	4618      	mov	r0, r3
 80122d6:	f001 fc71 	bl	8013bbc <_ZN10XFBehavior17getCurrentTimeoutEv>
 80122da:	4603      	mov	r3, r0
 80122dc:	4618      	mov	r0, r3
 80122de:	f7ff f9b0 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 80122e2:	4602      	mov	r2, r0
 80122e4:	687b      	ldr	r3, [r7, #4]
 80122e6:	6a1b      	ldr	r3, [r3, #32]
	if (getCurrentEvent()->getEventType() == XFEvent::Timeout &&
 80122e8:	429a      	cmp	r2, r3
 80122ea:	d101      	bne.n	80122f0 <_ZN12oscilloscope10Controller12processEventEv+0xa8>
 80122ec:	2301      	movs	r3, #1
 80122ee:	e000      	b.n	80122f2 <_ZN12oscilloscope10Controller12processEventEv+0xaa>
 80122f0:	2300      	movs	r3, #0
 80122f2:	2b00      	cmp	r3, #0
 80122f4:	d00a      	beq.n	801230c <_ZN12oscilloscope10Controller12processEventEv+0xc4>
	{
		scheduleTimeout(TIMEOUT_ID, TIMEOUT_INTERVAL);
 80122f6:	6878      	ldr	r0, [r7, #4]
 80122f8:	687b      	ldr	r3, [r7, #4]
 80122fa:	6a19      	ldr	r1, [r3, #32]
 80122fc:	687b      	ldr	r3, [r7, #4]
 80122fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012300:	461a      	mov	r2, r3
 8012302:	f7ff fef7 	bl	80120f4 <_ZN10XFBehavior15scheduleTimeoutEii>

		doShowAnalogSignal();
 8012306:	6878      	ldr	r0, [r7, #4]
 8012308:	f000 f8c4 	bl	8012494 <_ZN12oscilloscope10Controller18doShowAnalogSignalEv>
	}

	if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 801230c:	687b      	ldr	r3, [r7, #4]
 801230e:	4618      	mov	r0, r3
 8012310:	f001 fc47 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012314:	4603      	mov	r3, r0
 8012316:	4618      	mov	r0, r3
 8012318:	f7ff f986 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 801231c:	4603      	mov	r3, r0
 801231e:	2b03      	cmp	r3, #3
 8012320:	d10c      	bne.n	801233c <_ZN12oscilloscope10Controller12processEventEv+0xf4>
		getCurrentEvent()->getId() == BTN_PLUS_ID)
 8012322:	687b      	ldr	r3, [r7, #4]
 8012324:	4618      	mov	r0, r3
 8012326:	f001 fc3c 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 801232a:	4603      	mov	r3, r0
 801232c:	4618      	mov	r0, r3
 801232e:	f7ff f988 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8012332:	4603      	mov	r3, r0
	if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 8012334:	2b00      	cmp	r3, #0
 8012336:	d101      	bne.n	801233c <_ZN12oscilloscope10Controller12processEventEv+0xf4>
 8012338:	2301      	movs	r3, #1
 801233a:	e000      	b.n	801233e <_ZN12oscilloscope10Controller12processEventEv+0xf6>
 801233c:	2300      	movs	r3, #0
 801233e:	2b00      	cmp	r3, #0
 8012340:	d002      	beq.n	8012348 <_ZN12oscilloscope10Controller12processEventEv+0x100>
	{
		doButtonTimePlusPressed();
 8012342:	6878      	ldr	r0, [r7, #4]
 8012344:	f000 f8b0 	bl	80124a8 <_ZN12oscilloscope10Controller23doButtonTimePlusPressedEv>
	}

	if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 8012348:	687b      	ldr	r3, [r7, #4]
 801234a:	4618      	mov	r0, r3
 801234c:	f001 fc29 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012350:	4603      	mov	r3, r0
 8012352:	4618      	mov	r0, r3
 8012354:	f7ff f968 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012358:	4603      	mov	r3, r0
 801235a:	2b03      	cmp	r3, #3
 801235c:	d10c      	bne.n	8012378 <_ZN12oscilloscope10Controller12processEventEv+0x130>
		getCurrentEvent()->getId() == BTN_MINUS_ID)
 801235e:	687b      	ldr	r3, [r7, #4]
 8012360:	4618      	mov	r0, r3
 8012362:	f001 fc1e 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012366:	4603      	mov	r3, r0
 8012368:	4618      	mov	r0, r3
 801236a:	f7ff f96a 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 801236e:	4603      	mov	r3, r0
	if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 8012370:	2b01      	cmp	r3, #1
 8012372:	d101      	bne.n	8012378 <_ZN12oscilloscope10Controller12processEventEv+0x130>
 8012374:	2301      	movs	r3, #1
 8012376:	e000      	b.n	801237a <_ZN12oscilloscope10Controller12processEventEv+0x132>
 8012378:	2300      	movs	r3, #0
 801237a:	2b00      	cmp	r3, #0
 801237c:	d002      	beq.n	8012384 <_ZN12oscilloscope10Controller12processEventEv+0x13c>
	{
		doButtonTimeMinusPressed();
 801237e:	6878      	ldr	r0, [r7, #4]
 8012380:	f000 f8bf 	bl	8012502 <_ZN12oscilloscope10Controller24doButtonTimeMinusPressedEv>
	}

	return XFEventStatus::Consumed;
 8012384:	f107 030c 	add.w	r3, r7, #12
 8012388:	2101      	movs	r1, #1
 801238a:	4618      	mov	r0, r3
 801238c:	f7ff f965 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>
 8012390:	7b3b      	ldrb	r3, [r7, #12]
}
 8012392:	4618      	mov	r0, r3
 8012394:	3710      	adds	r7, #16
 8012396:	46bd      	mov	sp, r7
 8012398:	bd80      	pop	{r7, pc}
 801239a:	bf00      	nop
 801239c:	0802e660 	.word	0x0802e660
 80123a0:	0802e6a8 	.word	0x0802e6a8
 80123a4:	0802e6bc 	.word	0x0802e6bc
 80123a8:	0802e5a0 	.word	0x0802e5a0
 80123ac:	0802e6fc 	.word	0x0802e6fc

080123b0 <_ZN12oscilloscope10Controller23onButtonTimePlusPressedEv>:

void Controller::onButtonTimePlusPressed()
{
 80123b0:	b590      	push	{r4, r7, lr}
 80123b2:	b085      	sub	sp, #20
 80123b4:	af00      	add	r7, sp, #0
 80123b6:	6078      	str	r0, [r7, #4]
	XFEvent* evButtonPlus =new XFEvent(XFEvent::Event, BTN_PLUS_ID, this);
 80123b8:	2010      	movs	r0, #16
 80123ba:	f019 fb65 	bl	802ba88 <_Znwj>
 80123be:	4603      	mov	r3, r0
 80123c0:	461c      	mov	r4, r3
 80123c2:	687b      	ldr	r3, [r7, #4]
 80123c4:	2200      	movs	r2, #0
 80123c6:	2103      	movs	r1, #3
 80123c8:	4620      	mov	r0, r4
 80123ca:	f7ff fe39 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 80123ce:	60fc      	str	r4, [r7, #12]

	pushEvent(evButtonPlus);
 80123d0:	6878      	ldr	r0, [r7, #4]
 80123d2:	687b      	ldr	r3, [r7, #4]
 80123d4:	681b      	ldr	r3, [r3, #0]
 80123d6:	330c      	adds	r3, #12
 80123d8:	681b      	ldr	r3, [r3, #0]
 80123da:	2200      	movs	r2, #0
 80123dc:	68f9      	ldr	r1, [r7, #12]
 80123de:	4798      	blx	r3
}
 80123e0:	bf00      	nop
 80123e2:	3714      	adds	r7, #20
 80123e4:	46bd      	mov	sp, r7
 80123e6:	bd90      	pop	{r4, r7, pc}

080123e8 <_ZThn16_N12oscilloscope10Controller23onButtonTimePlusPressedEv>:
    void onButtonTimePlusPressed() override;
 80123e8:	f1a0 0010 	sub.w	r0, r0, #16
 80123ec:	f7ff bfe0 	b.w	80123b0 <_ZN12oscilloscope10Controller23onButtonTimePlusPressedEv>

080123f0 <_ZN12oscilloscope10Controller24onButtonTimeMinusPressedEv>:

void Controller::onButtonTimeMinusPressed()
{
 80123f0:	b590      	push	{r4, r7, lr}
 80123f2:	b085      	sub	sp, #20
 80123f4:	af00      	add	r7, sp, #0
 80123f6:	6078      	str	r0, [r7, #4]
	XFEvent* evButtonMinus =new XFEvent(XFEvent::Event, BTN_MINUS_ID, this);
 80123f8:	2010      	movs	r0, #16
 80123fa:	f019 fb45 	bl	802ba88 <_Znwj>
 80123fe:	4603      	mov	r3, r0
 8012400:	461c      	mov	r4, r3
 8012402:	687b      	ldr	r3, [r7, #4]
 8012404:	2201      	movs	r2, #1
 8012406:	2103      	movs	r1, #3
 8012408:	4620      	mov	r0, r4
 801240a:	f7ff fe19 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 801240e:	60fc      	str	r4, [r7, #12]

	pushEvent(evButtonMinus);
 8012410:	6878      	ldr	r0, [r7, #4]
 8012412:	687b      	ldr	r3, [r7, #4]
 8012414:	681b      	ldr	r3, [r3, #0]
 8012416:	330c      	adds	r3, #12
 8012418:	681b      	ldr	r3, [r3, #0]
 801241a:	2200      	movs	r2, #0
 801241c:	68f9      	ldr	r1, [r7, #12]
 801241e:	4798      	blx	r3
}
 8012420:	bf00      	nop
 8012422:	3714      	adds	r7, #20
 8012424:	46bd      	mov	sp, r7
 8012426:	bd90      	pop	{r4, r7, pc}

08012428 <_ZThn16_N12oscilloscope10Controller24onButtonTimeMinusPressedEv>:
    void onButtonTimeMinusPressed() override;
 8012428:	f1a0 0010 	sub.w	r0, r0, #16
 801242c:	f7ff bfe0 	b.w	80123f0 <_ZN12oscilloscope10Controller24onButtonTimeMinusPressedEv>

08012430 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb>:

void Controller::onCheckBoxTriggerCheckState(bool checked)
{
 8012430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012432:	b083      	sub	sp, #12
 8012434:	af00      	add	r7, sp, #0
 8012436:	6078      	str	r0, [r7, #4]
 8012438:	460b      	mov	r3, r1
 801243a:	70fb      	strb	r3, [r7, #3]
    Trace::out("Trigger checkbox: %s", (checked) ? "checked" : "unchecked");
 801243c:	78fb      	ldrb	r3, [r7, #3]
 801243e:	2b00      	cmp	r3, #0
 8012440:	d001      	beq.n	8012446 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb+0x16>
 8012442:	4b0f      	ldr	r3, [pc, #60]	; (8012480 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb+0x50>)
 8012444:	e000      	b.n	8012448 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb+0x18>
 8012446:	4b0f      	ldr	r3, [pc, #60]	; (8012484 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb+0x54>)
 8012448:	4619      	mov	r1, r3
 801244a:	480f      	ldr	r0, [pc, #60]	; (8012488 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb+0x58>)
 801244c:	f000 ff70 	bl	8013330 <_ZN5Trace3outEPKcz>

    GEN(evCheckBoxTrigger(checked, CHECK_BOX_TRIGGER_ID));
 8012450:	687d      	ldr	r5, [r7, #4]
 8012452:	687b      	ldr	r3, [r7, #4]
 8012454:	681b      	ldr	r3, [r3, #0]
 8012456:	330c      	adds	r3, #12
 8012458:	681c      	ldr	r4, [r3, #0]
 801245a:	2014      	movs	r0, #20
 801245c:	f019 fb14 	bl	802ba88 <_Znwj>
 8012460:	4603      	mov	r3, r0
 8012462:	461e      	mov	r6, r3
 8012464:	78fb      	ldrb	r3, [r7, #3]
 8012466:	2202      	movs	r2, #2
 8012468:	4619      	mov	r1, r3
 801246a:	4630      	mov	r0, r6
 801246c:	f000 faaa 	bl	80129c4 <_ZN17evCheckBoxTriggerC1Ebi>
 8012470:	2200      	movs	r2, #0
 8012472:	4631      	mov	r1, r6
 8012474:	4628      	mov	r0, r5
 8012476:	47a0      	blx	r4
}
 8012478:	bf00      	nop
 801247a:	370c      	adds	r7, #12
 801247c:	46bd      	mov	sp, r7
 801247e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012480:	0802e718 	.word	0x0802e718
 8012484:	0802e720 	.word	0x0802e720
 8012488:	0802e72c 	.word	0x0802e72c

0801248c <_ZThn16_N12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb>:
    void onCheckBoxTriggerCheckState(bool checked) override;
 801248c:	f1a0 0010 	sub.w	r0, r0, #16
 8012490:	f7ff bfce 	b.w	8012430 <_ZN12oscilloscope10Controller27onCheckBoxTriggerCheckStateEb>

08012494 <_ZN12oscilloscope10Controller18doShowAnalogSignalEv>:

void Controller::doShowAnalogSignal()
{
 8012494:	b480      	push	{r7}
 8012496:	b083      	sub	sp, #12
 8012498:	af00      	add	r7, sp, #0
 801249a:	6078      	str	r0, [r7, #4]
	// TODO: Call gui().drawGraphPoints() with the appropriate data.
}
 801249c:	bf00      	nop
 801249e:	370c      	adds	r7, #12
 80124a0:	46bd      	mov	sp, r7
 80124a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80124a6:	4770      	bx	lr

080124a8 <_ZN12oscilloscope10Controller23doButtonTimePlusPressedEv>:

void Controller::doButtonTimePlusPressed()
{
 80124a8:	b590      	push	{r4, r7, lr}
 80124aa:	b089      	sub	sp, #36	; 0x24
 80124ac:	af00      	add	r7, sp, #0
 80124ae:	6078      	str	r0, [r7, #4]
    if (_tdivValue < (TDIV_MAX - 1))
 80124b0:	687b      	ldr	r3, [r7, #4]
 80124b2:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80124b6:	2b04      	cmp	r3, #4
 80124b8:	d81f      	bhi.n	80124fa <_ZN12oscilloscope10Controller23doButtonTimePlusPressedEv+0x52>
    {
        _tdivValue = (TDivValue)(_tdivValue + 1);
 80124ba:	687b      	ldr	r3, [r7, #4]
 80124bc:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80124c0:	3301      	adds	r3, #1
 80124c2:	b2da      	uxtb	r2, r3
 80124c4:	687b      	ldr	r3, [r7, #4]
 80124c6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29

        gui().setTimeDivisionText(getText(_tdivValue));
 80124ca:	6878      	ldr	r0, [r7, #4]
 80124cc:	f7ff fe34 	bl	8012138 <_ZNK12oscilloscope10Controller3guiEv>
 80124d0:	4604      	mov	r4, r0
 80124d2:	687b      	ldr	r3, [r7, #4]
 80124d4:	f893 2029 	ldrb.w	r2, [r3, #41]	; 0x29
 80124d8:	f107 0308 	add.w	r3, r7, #8
 80124dc:	6879      	ldr	r1, [r7, #4]
 80124de:	4618      	mov	r0, r3
 80124e0:	f000 f83c 	bl	801255c <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE>
 80124e4:	f107 0308 	add.w	r3, r7, #8
 80124e8:	4619      	mov	r1, r3
 80124ea:	4620      	mov	r0, r4
 80124ec:	f7ff fd12 	bl	8011f14 <_ZN12oscilloscope3Gui19setTimeDivisionTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 80124f0:	f107 0308 	add.w	r3, r7, #8
 80124f4:	4618      	mov	r0, r3
 80124f6:	f019 fbc4 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    }
}
 80124fa:	bf00      	nop
 80124fc:	3724      	adds	r7, #36	; 0x24
 80124fe:	46bd      	mov	sp, r7
 8012500:	bd90      	pop	{r4, r7, pc}

08012502 <_ZN12oscilloscope10Controller24doButtonTimeMinusPressedEv>:

void Controller::doButtonTimeMinusPressed()
{
 8012502:	b590      	push	{r4, r7, lr}
 8012504:	b089      	sub	sp, #36	; 0x24
 8012506:	af00      	add	r7, sp, #0
 8012508:	6078      	str	r0, [r7, #4]
    if (_tdivValue > (TDIV_MIN + 1))
 801250a:	687b      	ldr	r3, [r7, #4]
 801250c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8012510:	2b01      	cmp	r3, #1
 8012512:	d91f      	bls.n	8012554 <_ZN12oscilloscope10Controller24doButtonTimeMinusPressedEv+0x52>
    {
        _tdivValue = (TDivValue)(_tdivValue - 1);
 8012514:	687b      	ldr	r3, [r7, #4]
 8012516:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 801251a:	3b01      	subs	r3, #1
 801251c:	b2da      	uxtb	r2, r3
 801251e:	687b      	ldr	r3, [r7, #4]
 8012520:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29

        gui().setTimeDivisionText(getText(_tdivValue));
 8012524:	6878      	ldr	r0, [r7, #4]
 8012526:	f7ff fe07 	bl	8012138 <_ZNK12oscilloscope10Controller3guiEv>
 801252a:	4604      	mov	r4, r0
 801252c:	687b      	ldr	r3, [r7, #4]
 801252e:	f893 2029 	ldrb.w	r2, [r3, #41]	; 0x29
 8012532:	f107 0308 	add.w	r3, r7, #8
 8012536:	6879      	ldr	r1, [r7, #4]
 8012538:	4618      	mov	r0, r3
 801253a:	f000 f80f 	bl	801255c <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE>
 801253e:	f107 0308 	add.w	r3, r7, #8
 8012542:	4619      	mov	r1, r3
 8012544:	4620      	mov	r0, r4
 8012546:	f7ff fce5 	bl	8011f14 <_ZN12oscilloscope3Gui19setTimeDivisionTextENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
 801254a:	f107 0308 	add.w	r3, r7, #8
 801254e:	4618      	mov	r0, r3
 8012550:	f019 fb97 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
    }
}
 8012554:	bf00      	nop
 8012556:	3724      	adds	r7, #36	; 0x24
 8012558:	46bd      	mov	sp, r7
 801255a:	bd90      	pop	{r4, r7, pc}

0801255c <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE>:

std::string Controller::getText(TDivValue tdivValue)
{
 801255c:	b580      	push	{r7, lr}
 801255e:	b088      	sub	sp, #32
 8012560:	af00      	add	r7, sp, #0
 8012562:	60f8      	str	r0, [r7, #12]
 8012564:	60b9      	str	r1, [r7, #8]
 8012566:	4613      	mov	r3, r2
 8012568:	71fb      	strb	r3, [r7, #7]
    const uint32_t count = sizeof(_tdivOptions)/sizeof(_tdivOptions[0]);
 801256a:	2305      	movs	r3, #5
 801256c:	61bb      	str	r3, [r7, #24]

    for (uint32_t i = 0; i < count; i++)
 801256e:	2300      	movs	r3, #0
 8012570:	61fb      	str	r3, [r7, #28]
 8012572:	69fb      	ldr	r3, [r7, #28]
 8012574:	2b04      	cmp	r3, #4
 8012576:	d81b      	bhi.n	80125b0 <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x54>
    {
        if (_tdivOptions[i].tdivValue == tdivValue)
 8012578:	4918      	ldr	r1, [pc, #96]	; (80125dc <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x80>)
 801257a:	69fa      	ldr	r2, [r7, #28]
 801257c:	4613      	mov	r3, r2
 801257e:	00db      	lsls	r3, r3, #3
 8012580:	1a9b      	subs	r3, r3, r2
 8012582:	009b      	lsls	r3, r3, #2
 8012584:	440b      	add	r3, r1
 8012586:	781b      	ldrb	r3, [r3, #0]
 8012588:	79fa      	ldrb	r2, [r7, #7]
 801258a:	429a      	cmp	r2, r3
 801258c:	d10c      	bne.n	80125a8 <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x4c>
        {
            return _tdivOptions[i].text;
 801258e:	69fa      	ldr	r2, [r7, #28]
 8012590:	4613      	mov	r3, r2
 8012592:	00db      	lsls	r3, r3, #3
 8012594:	1a9b      	subs	r3, r3, r2
 8012596:	009b      	lsls	r3, r3, #2
 8012598:	4a10      	ldr	r2, [pc, #64]	; (80125dc <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x80>)
 801259a:	4413      	add	r3, r2
 801259c:	3304      	adds	r3, #4
 801259e:	4619      	mov	r1, r3
 80125a0:	68f8      	ldr	r0, [r7, #12]
 80125a2:	f019 fc33 	bl	802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>
 80125a6:	e014      	b.n	80125d2 <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x76>
    for (uint32_t i = 0; i < count; i++)
 80125a8:	69fb      	ldr	r3, [r7, #28]
 80125aa:	3301      	adds	r3, #1
 80125ac:	61fb      	str	r3, [r7, #28]
 80125ae:	e7e0      	b.n	8012572 <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x16>
        }
    }
    return "n/a";
 80125b0:	f107 0314 	add.w	r3, r7, #20
 80125b4:	4618      	mov	r0, r3
 80125b6:	f019 fa7b 	bl	802bab0 <_ZNSaIcEC1Ev>
 80125ba:	f107 0314 	add.w	r3, r7, #20
 80125be:	461a      	mov	r2, r3
 80125c0:	4907      	ldr	r1, [pc, #28]	; (80125e0 <_ZN12oscilloscope10Controller7getTextB5cxx11ENS_9TDivValueE+0x84>)
 80125c2:	68f8      	ldr	r0, [r7, #12]
 80125c4:	f019 fc56 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80125c8:	f107 0314 	add.w	r3, r7, #20
 80125cc:	4618      	mov	r0, r3
 80125ce:	f019 fa70 	bl	802bab2 <_ZNSaIcED1Ev>
}
 80125d2:	68f8      	ldr	r0, [r7, #12]
 80125d4:	3720      	adds	r7, #32
 80125d6:	46bd      	mov	sp, r7
 80125d8:	bd80      	pop	{r7, pc}
 80125da:	bf00      	nop
 80125dc:	20003e98 	.word	0x20003e98
 80125e0:	0802e744 	.word	0x0802e744

080125e4 <_ZN12oscilloscope10TDivOptionD1Ev>:
} TDivOption;
 80125e4:	b580      	push	{r7, lr}
 80125e6:	b082      	sub	sp, #8
 80125e8:	af00      	add	r7, sp, #0
 80125ea:	6078      	str	r0, [r7, #4]
 80125ec:	687b      	ldr	r3, [r7, #4]
 80125ee:	3304      	adds	r3, #4
 80125f0:	4618      	mov	r0, r3
 80125f2:	f019 fb46 	bl	802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>
 80125f6:	687b      	ldr	r3, [r7, #4]
 80125f8:	4618      	mov	r0, r3
 80125fa:	3708      	adds	r7, #8
 80125fc:	46bd      	mov	sp, r7
 80125fe:	bd80      	pop	{r7, pc}

08012600 <_Z41__static_initialization_and_destruction_0ii>:

}   // namespace oscilloscope
 8012600:	b5b0      	push	{r4, r5, r7, lr}
 8012602:	b088      	sub	sp, #32
 8012604:	af00      	add	r7, sp, #0
 8012606:	6078      	str	r0, [r7, #4]
 8012608:	6039      	str	r1, [r7, #0]
 801260a:	687b      	ldr	r3, [r7, #4]
 801260c:	2b01      	cmp	r3, #1
 801260e:	d16e      	bne.n	80126ee <_Z41__static_initialization_and_destruction_0ii+0xee>
 8012610:	683b      	ldr	r3, [r7, #0]
 8012612:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012616:	4293      	cmp	r3, r2
 8012618:	d169      	bne.n	80126ee <_Z41__static_initialization_and_destruction_0ii+0xee>
                                               {TDIV_10ms,   "10 ms / div"}};
 801261a:	4c3f      	ldr	r4, [pc, #252]	; (8012718 <_Z41__static_initialization_and_destruction_0ii+0x118>)
 801261c:	2301      	movs	r3, #1
 801261e:	7023      	strb	r3, [r4, #0]
 8012620:	1d25      	adds	r5, r4, #4
 8012622:	f107 030c 	add.w	r3, r7, #12
 8012626:	4618      	mov	r0, r3
 8012628:	f019 fa42 	bl	802bab0 <_ZNSaIcEC1Ev>
 801262c:	f107 030c 	add.w	r3, r7, #12
 8012630:	461a      	mov	r2, r3
 8012632:	493a      	ldr	r1, [pc, #232]	; (801271c <_Z41__static_initialization_and_destruction_0ii+0x11c>)
 8012634:	4628      	mov	r0, r5
 8012636:	f019 fc1d 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801263a:	f107 030c 	add.w	r3, r7, #12
 801263e:	4618      	mov	r0, r3
 8012640:	f019 fa37 	bl	802bab2 <_ZNSaIcED1Ev>
 8012644:	341c      	adds	r4, #28
 8012646:	2302      	movs	r3, #2
 8012648:	7023      	strb	r3, [r4, #0]
 801264a:	1d25      	adds	r5, r4, #4
 801264c:	f107 0310 	add.w	r3, r7, #16
 8012650:	4618      	mov	r0, r3
 8012652:	f019 fa2d 	bl	802bab0 <_ZNSaIcEC1Ev>
 8012656:	f107 0310 	add.w	r3, r7, #16
 801265a:	461a      	mov	r2, r3
 801265c:	4930      	ldr	r1, [pc, #192]	; (8012720 <_Z41__static_initialization_and_destruction_0ii+0x120>)
 801265e:	4628      	mov	r0, r5
 8012660:	f019 fc08 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 8012664:	f107 0310 	add.w	r3, r7, #16
 8012668:	4618      	mov	r0, r3
 801266a:	f019 fa22 	bl	802bab2 <_ZNSaIcED1Ev>
 801266e:	341c      	adds	r4, #28
 8012670:	2303      	movs	r3, #3
 8012672:	7023      	strb	r3, [r4, #0]
 8012674:	1d25      	adds	r5, r4, #4
 8012676:	f107 0314 	add.w	r3, r7, #20
 801267a:	4618      	mov	r0, r3
 801267c:	f019 fa18 	bl	802bab0 <_ZNSaIcEC1Ev>
 8012680:	f107 0314 	add.w	r3, r7, #20
 8012684:	461a      	mov	r2, r3
 8012686:	4927      	ldr	r1, [pc, #156]	; (8012724 <_Z41__static_initialization_and_destruction_0ii+0x124>)
 8012688:	4628      	mov	r0, r5
 801268a:	f019 fbf3 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 801268e:	f107 0314 	add.w	r3, r7, #20
 8012692:	4618      	mov	r0, r3
 8012694:	f019 fa0d 	bl	802bab2 <_ZNSaIcED1Ev>
 8012698:	341c      	adds	r4, #28
 801269a:	2304      	movs	r3, #4
 801269c:	7023      	strb	r3, [r4, #0]
 801269e:	1d25      	adds	r5, r4, #4
 80126a0:	f107 0318 	add.w	r3, r7, #24
 80126a4:	4618      	mov	r0, r3
 80126a6:	f019 fa03 	bl	802bab0 <_ZNSaIcEC1Ev>
 80126aa:	f107 0318 	add.w	r3, r7, #24
 80126ae:	461a      	mov	r2, r3
 80126b0:	491d      	ldr	r1, [pc, #116]	; (8012728 <_Z41__static_initialization_and_destruction_0ii+0x128>)
 80126b2:	4628      	mov	r0, r5
 80126b4:	f019 fbde 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80126b8:	f107 0318 	add.w	r3, r7, #24
 80126bc:	4618      	mov	r0, r3
 80126be:	f019 f9f8 	bl	802bab2 <_ZNSaIcED1Ev>
 80126c2:	f104 031c 	add.w	r3, r4, #28
 80126c6:	2205      	movs	r2, #5
 80126c8:	701a      	strb	r2, [r3, #0]
 80126ca:	1d1c      	adds	r4, r3, #4
 80126cc:	f107 031c 	add.w	r3, r7, #28
 80126d0:	4618      	mov	r0, r3
 80126d2:	f019 f9ed 	bl	802bab0 <_ZNSaIcEC1Ev>
 80126d6:	f107 031c 	add.w	r3, r7, #28
 80126da:	461a      	mov	r2, r3
 80126dc:	4913      	ldr	r1, [pc, #76]	; (801272c <_Z41__static_initialization_and_destruction_0ii+0x12c>)
 80126de:	4620      	mov	r0, r4
 80126e0:	f019 fbc8 	bl	802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>
 80126e4:	f107 031c 	add.w	r3, r7, #28
 80126e8:	4618      	mov	r0, r3
 80126ea:	f019 f9e2 	bl	802bab2 <_ZNSaIcED1Ev>
const TDivOption Controller::_tdivOptions[] = {{TDIV_500us, "500 us / div"},
 80126ee:	687b      	ldr	r3, [r7, #4]
 80126f0:	2b00      	cmp	r3, #0
 80126f2:	d10d      	bne.n	8012710 <_Z41__static_initialization_and_destruction_0ii+0x110>
 80126f4:	683b      	ldr	r3, [r7, #0]
 80126f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80126fa:	4293      	cmp	r3, r2
 80126fc:	d108      	bne.n	8012710 <_Z41__static_initialization_and_destruction_0ii+0x110>
 80126fe:	4c0c      	ldr	r4, [pc, #48]	; (8012730 <_Z41__static_initialization_and_destruction_0ii+0x130>)
 8012700:	4b05      	ldr	r3, [pc, #20]	; (8012718 <_Z41__static_initialization_and_destruction_0ii+0x118>)
 8012702:	429c      	cmp	r4, r3
 8012704:	d004      	beq.n	8012710 <_Z41__static_initialization_and_destruction_0ii+0x110>
 8012706:	3c1c      	subs	r4, #28
 8012708:	4620      	mov	r0, r4
 801270a:	f7ff ff6b 	bl	80125e4 <_ZN12oscilloscope10TDivOptionD1Ev>
 801270e:	e7f7      	b.n	8012700 <_Z41__static_initialization_and_destruction_0ii+0x100>
}   // namespace oscilloscope
 8012710:	bf00      	nop
 8012712:	3720      	adds	r7, #32
 8012714:	46bd      	mov	sp, r7
 8012716:	bdb0      	pop	{r4, r5, r7, pc}
 8012718:	20003e98 	.word	0x20003e98
 801271c:	0802e748 	.word	0x0802e748
 8012720:	0802e758 	.word	0x0802e758
 8012724:	0802e764 	.word	0x0802e764
 8012728:	0802e770 	.word	0x0802e770
 801272c:	0802e77c 	.word	0x0802e77c
 8012730:	20003f24 	.word	0x20003f24

08012734 <_GLOBAL__sub_I__ZN12oscilloscope10Controller10_pInstanceE>:
 8012734:	b580      	push	{r7, lr}
 8012736:	af00      	add	r7, sp, #0
 8012738:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801273c:	2001      	movs	r0, #1
 801273e:	f7ff ff5f 	bl	8012600 <_Z41__static_initialization_and_destruction_0ii>
 8012742:	bd80      	pop	{r7, pc}

08012744 <_GLOBAL__sub_D__ZN12oscilloscope10Controller10_pInstanceE>:
 8012744:	b580      	push	{r7, lr}
 8012746:	af00      	add	r7, sp, #0
 8012748:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801274c:	2000      	movs	r0, #0
 801274e:	f7ff ff57 	bl	8012600 <_Z41__static_initialization_and_destruction_0ii>
 8012752:	bd80      	pop	{r7, pc}

08012754 <_ZN12TouchGfxTaskC1Ev>:
#include "touchgfxtask.h"

extern "C" void touchgfx_init();
extern "C" void touchgfx_taskEntry();

TouchGfxTask::TouchGfxTask():
 8012754:	b580      	push	{r7, lr}
 8012756:	b082      	sub	sp, #8
 8012758:	af00      	add	r7, sp, #0
 801275a:	6078      	str	r0, [r7, #4]
    interval_(20)
 801275c:	687b      	ldr	r3, [r7, #4]
 801275e:	2100      	movs	r1, #0
 8012760:	4618      	mov	r0, r3
 8012762:	f001 f91d 	bl	80139a0 <_ZN10XFBehaviorC1Eb>
 8012766:	4a05      	ldr	r2, [pc, #20]	; (801277c <_ZN12TouchGfxTaskC1Ev+0x28>)
 8012768:	687b      	ldr	r3, [r7, #4]
 801276a:	601a      	str	r2, [r3, #0]
 801276c:	687b      	ldr	r3, [r7, #4]
 801276e:	2214      	movs	r2, #20
 8012770:	611a      	str	r2, [r3, #16]
{

}
 8012772:	687b      	ldr	r3, [r7, #4]
 8012774:	4618      	mov	r0, r3
 8012776:	3708      	adds	r7, #8
 8012778:	46bd      	mov	sp, r7
 801277a:	bd80      	pop	{r7, pc}
 801277c:	0802f798 	.word	0x0802f798

08012780 <_ZN12TouchGfxTask10initializeEv>:

void TouchGfxTask::initialize()
{
 8012780:	b580      	push	{r7, lr}
 8012782:	b082      	sub	sp, #8
 8012784:	af00      	add	r7, sp, #0
 8012786:	6078      	str	r0, [r7, #4]
    touchgfx_init();
 8012788:	f7fe f91c 	bl	80109c4 <touchgfx_init>

}
 801278c:	bf00      	nop
 801278e:	3708      	adds	r7, #8
 8012790:	46bd      	mov	sp, r7
 8012792:	bd80      	pop	{r7, pc}

08012794 <_ZN12TouchGfxTask5startEv>:

void TouchGfxTask::start()
{
 8012794:	b580      	push	{r7, lr}
 8012796:	b082      	sub	sp, #8
 8012798:	af00      	add	r7, sp, #0
 801279a:	6078      	str	r0, [r7, #4]
    startBehavior();
 801279c:	687a      	ldr	r2, [r7, #4]
 801279e:	687b      	ldr	r3, [r7, #4]
 80127a0:	681b      	ldr	r3, [r3, #0]
 80127a2:	3308      	adds	r3, #8
 80127a4:	681b      	ldr	r3, [r3, #0]
 80127a6:	4610      	mov	r0, r2
 80127a8:	4798      	blx	r3
}
 80127aa:	bf00      	nop
 80127ac:	3708      	adds	r7, #8
 80127ae:	46bd      	mov	sp, r7
 80127b0:	bd80      	pop	{r7, pc}

080127b2 <_ZN12TouchGfxTask12processEventEv>:

XFEventStatus TouchGfxTask::processEvent()
{
 80127b2:	b580      	push	{r7, lr}
 80127b4:	b084      	sub	sp, #16
 80127b6:	af00      	add	r7, sp, #0
 80127b8:	6078      	str	r0, [r7, #4]
    // Generate a timeout on startup. Want to call touchgfx_taskEntry()
    // every x milliseconds
    if (getCurrentEvent()->getEventType() == XFEvent::Initial)
 80127ba:	687b      	ldr	r3, [r7, #4]
 80127bc:	4618      	mov	r0, r3
 80127be:	f001 f9f0 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 80127c2:	4603      	mov	r3, r0
 80127c4:	4618      	mov	r0, r3
 80127c6:	f7fe ff2f 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 80127ca:	4603      	mov	r3, r0
 80127cc:	2b01      	cmp	r3, #1
 80127ce:	bf0c      	ite	eq
 80127d0:	2301      	moveq	r3, #1
 80127d2:	2300      	movne	r3, #0
 80127d4:	b2db      	uxtb	r3, r3
 80127d6:	2b00      	cmp	r3, #0
 80127d8:	d005      	beq.n	80127e6 <_ZN12TouchGfxTask12processEventEv+0x34>
    {
        scheduleTimeout(1, 20);
 80127da:	687b      	ldr	r3, [r7, #4]
 80127dc:	2214      	movs	r2, #20
 80127de:	2101      	movs	r1, #1
 80127e0:	4618      	mov	r0, r3
 80127e2:	f7ff fc87 	bl	80120f4 <_ZN10XFBehavior15scheduleTimeoutEii>
    }

    // Call touchgfx_taskEntry on timeout
    if (getCurrentEvent()->getEventType() == XFEvent::Timeout and
 80127e6:	687b      	ldr	r3, [r7, #4]
 80127e8:	4618      	mov	r0, r3
 80127ea:	f001 f9da 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 80127ee:	4603      	mov	r3, r0
 80127f0:	4618      	mov	r0, r3
 80127f2:	f7fe ff19 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 80127f6:	4603      	mov	r3, r0
 80127f8:	2b04      	cmp	r3, #4
 80127fa:	d10c      	bne.n	8012816 <_ZN12TouchGfxTask12processEventEv+0x64>
        getCurrentTimeout()->getId() == 1)
 80127fc:	687b      	ldr	r3, [r7, #4]
 80127fe:	4618      	mov	r0, r3
 8012800:	f001 f9dc 	bl	8013bbc <_ZN10XFBehavior17getCurrentTimeoutEv>
 8012804:	4603      	mov	r3, r0
 8012806:	4618      	mov	r0, r3
 8012808:	f7fe ff1b 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 801280c:	4603      	mov	r3, r0
    if (getCurrentEvent()->getEventType() == XFEvent::Timeout and
 801280e:	2b01      	cmp	r3, #1
 8012810:	d101      	bne.n	8012816 <_ZN12TouchGfxTask12processEventEv+0x64>
 8012812:	2301      	movs	r3, #1
 8012814:	e000      	b.n	8012818 <_ZN12TouchGfxTask12processEventEv+0x66>
 8012816:	2300      	movs	r3, #0
 8012818:	2b00      	cmp	r3, #0
 801281a:	d007      	beq.n	801282c <_ZN12TouchGfxTask12processEventEv+0x7a>
    {
        touchgfx_taskEntry();
 801281c:	f7fe f8fc 	bl	8010a18 <touchgfx_taskEntry>

        scheduleTimeout(1, 20);
 8012820:	687b      	ldr	r3, [r7, #4]
 8012822:	2214      	movs	r2, #20
 8012824:	2101      	movs	r1, #1
 8012826:	4618      	mov	r0, r3
 8012828:	f7ff fc64 	bl	80120f4 <_ZN10XFBehavior15scheduleTimeoutEii>
    }

    return XFEventStatus::Consumed;
 801282c:	f107 030c 	add.w	r3, r7, #12
 8012830:	2101      	movs	r1, #1
 8012832:	4618      	mov	r0, r3
 8012834:	f7fe ff11 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>
 8012838:	7b3b      	ldrb	r3, [r7, #12]
}
 801283a:	4618      	mov	r0, r3
 801283c:	3710      	adds	r7, #16
 801283e:	46bd      	mov	sp, r7
 8012840:	bd80      	pop	{r7, pc}

08012842 <_ZNK13XFCustomEvent18deleteAfterConsumeEv>:

    /**
     * @brief Tells the XF if the event should be deleted after processing.
     * @return True if the event should be deleted.
     */
    bool deleteAfterConsume() const override { return bDeleteAfterConsume_; }
 8012842:	b480      	push	{r7}
 8012844:	b083      	sub	sp, #12
 8012846:	af00      	add	r7, sp, #0
 8012848:	6078      	str	r0, [r7, #4]
 801284a:	687b      	ldr	r3, [r7, #4]
 801284c:	7c1b      	ldrb	r3, [r3, #16]
 801284e:	4618      	mov	r0, r3
 8012850:	370c      	adds	r7, #12
 8012852:	46bd      	mov	sp, r7
 8012854:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012858:	4770      	bx	lr

0801285a <_ZN13XFCustomEvent21setDeleteAfterConsumeEb>:
protected:
    /**
     * @brief Setter for #_bDeleteAfterConsume attribute.
     * @param bDeleteAfterConsume Parameter to be assigned. Default: true.
     */
    void setDeleteAfterConsume(bool bDeleteAfterConsume = true) { bDeleteAfterConsume_ = bDeleteAfterConsume; }
 801285a:	b480      	push	{r7}
 801285c:	b083      	sub	sp, #12
 801285e:	af00      	add	r7, sp, #0
 8012860:	6078      	str	r0, [r7, #4]
 8012862:	460b      	mov	r3, r1
 8012864:	70fb      	strb	r3, [r7, #3]
 8012866:	687b      	ldr	r3, [r7, #4]
 8012868:	78fa      	ldrb	r2, [r7, #3]
 801286a:	741a      	strb	r2, [r3, #16]
 801286c:	bf00      	nop
 801286e:	370c      	adds	r7, #12
 8012870:	46bd      	mov	sp, r7
 8012872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012876:	4770      	bx	lr

08012878 <_ZN13XFCustomEventD1Ev>:
class XFCustomEvent : public XFEvent
 8012878:	b580      	push	{r7, lr}
 801287a:	b082      	sub	sp, #8
 801287c:	af00      	add	r7, sp, #0
 801287e:	6078      	str	r0, [r7, #4]
 8012880:	4a05      	ldr	r2, [pc, #20]	; (8012898 <_ZN13XFCustomEventD1Ev+0x20>)
 8012882:	687b      	ldr	r3, [r7, #4]
 8012884:	601a      	str	r2, [r3, #0]
 8012886:	687b      	ldr	r3, [r7, #4]
 8012888:	4618      	mov	r0, r3
 801288a:	f7ff fbf7 	bl	801207c <_ZN7XFEventD1Ev>
 801288e:	687b      	ldr	r3, [r7, #4]
 8012890:	4618      	mov	r0, r3
 8012892:	3708      	adds	r7, #8
 8012894:	46bd      	mov	sp, r7
 8012896:	bd80      	pop	{r7, pc}
 8012898:	0802f7d4 	.word	0x0802f7d4

0801289c <_ZN13XFCustomEventD0Ev>:
 801289c:	b580      	push	{r7, lr}
 801289e:	b082      	sub	sp, #8
 80128a0:	af00      	add	r7, sp, #0
 80128a2:	6078      	str	r0, [r7, #4]
 80128a4:	6878      	ldr	r0, [r7, #4]
 80128a6:	f7ff ffe7 	bl	8012878 <_ZN13XFCustomEventD1Ev>
 80128aa:	2114      	movs	r1, #20
 80128ac:	6878      	ldr	r0, [r7, #4]
 80128ae:	f019 f8da 	bl	802ba66 <_ZdlPvj>
 80128b2:	687b      	ldr	r3, [r7, #4]
 80128b4:	4618      	mov	r0, r3
 80128b6:	3708      	adds	r7, #8
 80128b8:	46bd      	mov	sp, r7
 80128ba:	bd80      	pop	{r7, pc}

080128bc <_ZN11evButtonIrqC1Ev>:
#include "events.h"
#include "evbuttonirq.h"

evButtonIrq::evButtonIrq() :
 80128bc:	b580      	push	{r7, lr}
 80128be:	b082      	sub	sp, #8
 80128c0:	af00      	add	r7, sp, #0
 80128c2:	6078      	str	r0, [r7, #4]
    XFCustomEvent(evButtonIrqId)
 80128c4:	687b      	ldr	r3, [r7, #4]
 80128c6:	2200      	movs	r2, #0
 80128c8:	2101      	movs	r1, #1
 80128ca:	4618      	mov	r0, r3
 80128cc:	f001 f998 	bl	8013c00 <_ZN13XFCustomEventC1EiPN9interface10XFReactiveE>
 80128d0:	4a06      	ldr	r2, [pc, #24]	; (80128ec <_ZN11evButtonIrqC1Ev+0x30>)
 80128d2:	687b      	ldr	r3, [r7, #4]
 80128d4:	601a      	str	r2, [r3, #0]
{
	setDeleteAfterConsume(false);
 80128d6:	687b      	ldr	r3, [r7, #4]
 80128d8:	2100      	movs	r1, #0
 80128da:	4618      	mov	r0, r3
 80128dc:	f7ff ffbd 	bl	801285a <_ZN13XFCustomEvent21setDeleteAfterConsumeEb>
}
 80128e0:	687b      	ldr	r3, [r7, #4]
 80128e2:	4618      	mov	r0, r3
 80128e4:	3708      	adds	r7, #8
 80128e6:	46bd      	mov	sp, r7
 80128e8:	bd80      	pop	{r7, pc}
 80128ea:	bf00      	nop
 80128ec:	0802f7c0 	.word	0x0802f7c0

080128f0 <_ZN11evButtonIrqD1Ev>:
#define EVBUTTONIRQ_H

#include "xf/customevent.h"
#include "events.h"

class evButtonIrq : public XFCustomEvent
 80128f0:	b580      	push	{r7, lr}
 80128f2:	b082      	sub	sp, #8
 80128f4:	af00      	add	r7, sp, #0
 80128f6:	6078      	str	r0, [r7, #4]
 80128f8:	4a05      	ldr	r2, [pc, #20]	; (8012910 <_ZN11evButtonIrqD1Ev+0x20>)
 80128fa:	687b      	ldr	r3, [r7, #4]
 80128fc:	601a      	str	r2, [r3, #0]
 80128fe:	687b      	ldr	r3, [r7, #4]
 8012900:	4618      	mov	r0, r3
 8012902:	f7ff ffb9 	bl	8012878 <_ZN13XFCustomEventD1Ev>
 8012906:	687b      	ldr	r3, [r7, #4]
 8012908:	4618      	mov	r0, r3
 801290a:	3708      	adds	r7, #8
 801290c:	46bd      	mov	sp, r7
 801290e:	bd80      	pop	{r7, pc}
 8012910:	0802f7c0 	.word	0x0802f7c0

08012914 <_ZN11evButtonIrqD0Ev>:
 8012914:	b580      	push	{r7, lr}
 8012916:	b082      	sub	sp, #8
 8012918:	af00      	add	r7, sp, #0
 801291a:	6078      	str	r0, [r7, #4]
 801291c:	6878      	ldr	r0, [r7, #4]
 801291e:	f7ff ffe7 	bl	80128f0 <_ZN11evButtonIrqD1Ev>
 8012922:	2114      	movs	r1, #20
 8012924:	6878      	ldr	r0, [r7, #4]
 8012926:	f019 f89e 	bl	802ba66 <_ZdlPvj>
 801292a:	687b      	ldr	r3, [r7, #4]
 801292c:	4618      	mov	r0, r3
 801292e:	3708      	adds	r7, #8
 8012930:	46bd      	mov	sp, r7
 8012932:	bd80      	pop	{r7, pc}

08012934 <_ZN15evButtonPressedC1Ei>:
#include "events.h"
#include "evbuttonpressed.h"

evButtonPressed::evButtonPressed(int buttonIndex) :
 8012934:	b580      	push	{r7, lr}
 8012936:	b082      	sub	sp, #8
 8012938:	af00      	add	r7, sp, #0
 801293a:	6078      	str	r0, [r7, #4]
 801293c:	6039      	str	r1, [r7, #0]
    XFCustomEvent(evButtonPressedId)
 801293e:	687b      	ldr	r3, [r7, #4]
 8012940:	2200      	movs	r2, #0
 8012942:	2102      	movs	r1, #2
 8012944:	4618      	mov	r0, r3
 8012946:	f001 f95b 	bl	8013c00 <_ZN13XFCustomEventC1EiPN9interface10XFReactiveE>
 801294a:	4a06      	ldr	r2, [pc, #24]	; (8012964 <_ZN15evButtonPressedC1Ei+0x30>)
 801294c:	687b      	ldr	r3, [r7, #4]
 801294e:	601a      	str	r2, [r3, #0]
{
	_buttonIndex = buttonIndex;
 8012950:	683b      	ldr	r3, [r7, #0]
 8012952:	b29a      	uxth	r2, r3
 8012954:	687b      	ldr	r3, [r7, #4]
 8012956:	825a      	strh	r2, [r3, #18]
}
 8012958:	687b      	ldr	r3, [r7, #4]
 801295a:	4618      	mov	r0, r3
 801295c:	3708      	adds	r7, #8
 801295e:	46bd      	mov	sp, r7
 8012960:	bd80      	pop	{r7, pc}
 8012962:	bf00      	nop
 8012964:	0802f7e8 	.word	0x0802f7e8

08012968 <_ZN15evButtonPressed11buttonIndexEv>:

uint16_t evButtonPressed::buttonIndex() {
 8012968:	b480      	push	{r7}
 801296a:	b083      	sub	sp, #12
 801296c:	af00      	add	r7, sp, #0
 801296e:	6078      	str	r0, [r7, #4]
	return _buttonIndex;
 8012970:	687b      	ldr	r3, [r7, #4]
 8012972:	8a5b      	ldrh	r3, [r3, #18]
}
 8012974:	4618      	mov	r0, r3
 8012976:	370c      	adds	r7, #12
 8012978:	46bd      	mov	sp, r7
 801297a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801297e:	4770      	bx	lr

08012980 <_ZN15evButtonPressedD1Ev>:

#include "xf/customevent.h"
#include "events.h"
#include <stdint.h>

class evButtonPressed : public XFCustomEvent
 8012980:	b580      	push	{r7, lr}
 8012982:	b082      	sub	sp, #8
 8012984:	af00      	add	r7, sp, #0
 8012986:	6078      	str	r0, [r7, #4]
 8012988:	4a05      	ldr	r2, [pc, #20]	; (80129a0 <_ZN15evButtonPressedD1Ev+0x20>)
 801298a:	687b      	ldr	r3, [r7, #4]
 801298c:	601a      	str	r2, [r3, #0]
 801298e:	687b      	ldr	r3, [r7, #4]
 8012990:	4618      	mov	r0, r3
 8012992:	f7ff ff71 	bl	8012878 <_ZN13XFCustomEventD1Ev>
 8012996:	687b      	ldr	r3, [r7, #4]
 8012998:	4618      	mov	r0, r3
 801299a:	3708      	adds	r7, #8
 801299c:	46bd      	mov	sp, r7
 801299e:	bd80      	pop	{r7, pc}
 80129a0:	0802f7e8 	.word	0x0802f7e8

080129a4 <_ZN15evButtonPressedD0Ev>:
 80129a4:	b580      	push	{r7, lr}
 80129a6:	b082      	sub	sp, #8
 80129a8:	af00      	add	r7, sp, #0
 80129aa:	6078      	str	r0, [r7, #4]
 80129ac:	6878      	ldr	r0, [r7, #4]
 80129ae:	f7ff ffe7 	bl	8012980 <_ZN15evButtonPressedD1Ev>
 80129b2:	2114      	movs	r1, #20
 80129b4:	6878      	ldr	r0, [r7, #4]
 80129b6:	f019 f856 	bl	802ba66 <_ZdlPvj>
 80129ba:	687b      	ldr	r3, [r7, #4]
 80129bc:	4618      	mov	r0, r3
 80129be:	3708      	adds	r7, #8
 80129c0:	46bd      	mov	sp, r7
 80129c2:	bd80      	pop	{r7, pc}

080129c4 <_ZN17evCheckBoxTriggerC1Ebi>:
#include "events.h"
#include "evcheckboxtrigger.h"

evCheckBoxTrigger::evCheckBoxTrigger(bool checked, int eventId) :
 80129c4:	b580      	push	{r7, lr}
 80129c6:	b084      	sub	sp, #16
 80129c8:	af00      	add	r7, sp, #0
 80129ca:	60f8      	str	r0, [r7, #12]
 80129cc:	460b      	mov	r3, r1
 80129ce:	607a      	str	r2, [r7, #4]
 80129d0:	72fb      	strb	r3, [r7, #11]
    XFCustomEvent(eventId),
    checked(checked)
 80129d2:	68fb      	ldr	r3, [r7, #12]
 80129d4:	2200      	movs	r2, #0
 80129d6:	6879      	ldr	r1, [r7, #4]
 80129d8:	4618      	mov	r0, r3
 80129da:	f001 f911 	bl	8013c00 <_ZN13XFCustomEventC1EiPN9interface10XFReactiveE>
 80129de:	4a05      	ldr	r2, [pc, #20]	; (80129f4 <_ZN17evCheckBoxTriggerC1Ebi+0x30>)
 80129e0:	68fb      	ldr	r3, [r7, #12]
 80129e2:	601a      	str	r2, [r3, #0]
 80129e4:	68fb      	ldr	r3, [r7, #12]
 80129e6:	7afa      	ldrb	r2, [r7, #11]
 80129e8:	745a      	strb	r2, [r3, #17]
{

}
 80129ea:	68fb      	ldr	r3, [r7, #12]
 80129ec:	4618      	mov	r0, r3
 80129ee:	3710      	adds	r7, #16
 80129f0:	46bd      	mov	sp, r7
 80129f2:	bd80      	pop	{r7, pc}
 80129f4:	0802f7fc 	.word	0x0802f7fc

080129f8 <_ZN17evCheckBoxTriggerD1Ev>:

#include "xf/customevent.h"
#include "events.h"
#include <stdint.h>

class evCheckBoxTrigger : public XFCustomEvent
 80129f8:	b580      	push	{r7, lr}
 80129fa:	b082      	sub	sp, #8
 80129fc:	af00      	add	r7, sp, #0
 80129fe:	6078      	str	r0, [r7, #4]
 8012a00:	4a05      	ldr	r2, [pc, #20]	; (8012a18 <_ZN17evCheckBoxTriggerD1Ev+0x20>)
 8012a02:	687b      	ldr	r3, [r7, #4]
 8012a04:	601a      	str	r2, [r3, #0]
 8012a06:	687b      	ldr	r3, [r7, #4]
 8012a08:	4618      	mov	r0, r3
 8012a0a:	f7ff ff35 	bl	8012878 <_ZN13XFCustomEventD1Ev>
 8012a0e:	687b      	ldr	r3, [r7, #4]
 8012a10:	4618      	mov	r0, r3
 8012a12:	3708      	adds	r7, #8
 8012a14:	46bd      	mov	sp, r7
 8012a16:	bd80      	pop	{r7, pc}
 8012a18:	0802f7fc 	.word	0x0802f7fc

08012a1c <_ZN17evCheckBoxTriggerD0Ev>:
 8012a1c:	b580      	push	{r7, lr}
 8012a1e:	b082      	sub	sp, #8
 8012a20:	af00      	add	r7, sp, #0
 8012a22:	6078      	str	r0, [r7, #4]
 8012a24:	6878      	ldr	r0, [r7, #4]
 8012a26:	f7ff ffe7 	bl	80129f8 <_ZN17evCheckBoxTriggerD1Ev>
 8012a2a:	2114      	movs	r1, #20
 8012a2c:	6878      	ldr	r0, [r7, #4]
 8012a2e:	f019 f81a 	bl	802ba66 <_ZdlPvj>
 8012a32:	687b      	ldr	r3, [r7, #4]
 8012a34:	4618      	mov	r0, r3
 8012a36:	3708      	adds	r7, #8
 8012a38:	46bd      	mov	sp, r7
 8012a3a:	bd80      	pop	{r7, pc}

08012a3c <_ZN8external18FrequencyGeneratorC1Ev>:

namespace external
{

FrequencyGenerator* FrequencyGenerator::_instance = nullptr;
FrequencyGenerator::FrequencyGenerator()
 8012a3c:	b580      	push	{r7, lr}
 8012a3e:	b082      	sub	sp, #8
 8012a40:	af00      	add	r7, sp, #0
 8012a42:	6078      	str	r0, [r7, #4]
{
	assert (_instance==nullptr);
 8012a44:	4b0d      	ldr	r3, [pc, #52]	; (8012a7c <_ZN8external18FrequencyGeneratorC1Ev+0x40>)
 8012a46:	681b      	ldr	r3, [r3, #0]
 8012a48:	2b00      	cmp	r3, #0
 8012a4a:	d005      	beq.n	8012a58 <_ZN8external18FrequencyGeneratorC1Ev+0x1c>
 8012a4c:	4b0c      	ldr	r3, [pc, #48]	; (8012a80 <_ZN8external18FrequencyGeneratorC1Ev+0x44>)
 8012a4e:	4a0d      	ldr	r2, [pc, #52]	; (8012a84 <_ZN8external18FrequencyGeneratorC1Ev+0x48>)
 8012a50:	210b      	movs	r1, #11
 8012a52:	480d      	ldr	r0, [pc, #52]	; (8012a88 <_ZN8external18FrequencyGeneratorC1Ev+0x4c>)
 8012a54:	f019 fa48 	bl	802bee8 <__assert_func>
	_instance = this;
 8012a58:	4a08      	ldr	r2, [pc, #32]	; (8012a7c <_ZN8external18FrequencyGeneratorC1Ev+0x40>)
 8012a5a:	687b      	ldr	r3, [r7, #4]
 8012a5c:	6013      	str	r3, [r2, #0]
	_mode = SINUS;
 8012a5e:	687b      	ldr	r3, [r7, #4]
 8012a60:	2200      	movs	r2, #0
 8012a62:	711a      	strb	r2, [r3, #4]
	_frequency = 500;
 8012a64:	687b      	ldr	r3, [r7, #4]
 8012a66:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8012a6a:	601a      	str	r2, [r3, #0]
	_initialized = false;
 8012a6c:	687b      	ldr	r3, [r7, #4]
 8012a6e:	2200      	movs	r2, #0
 8012a70:	715a      	strb	r2, [r3, #5]

}
 8012a72:	687b      	ldr	r3, [r7, #4]
 8012a74:	4618      	mov	r0, r3
 8012a76:	3708      	adds	r7, #8
 8012a78:	46bd      	mov	sp, r7
 8012a7a:	bd80      	pop	{r7, pc}
 8012a7c:	20003f24 	.word	0x20003f24
 8012a80:	0802e788 	.word	0x0802e788
 8012a84:	0802e79c 	.word	0x0802e79c
 8012a88:	0802e7d0 	.word	0x0802e7d0

08012a8c <_ZN8external18FrequencyGenerator10initializeEv>:

void FrequencyGenerator::initialize() {
 8012a8c:	b580      	push	{r7, lr}
 8012a8e:	b082      	sub	sp, #8
 8012a90:	af00      	add	r7, sp, #0
 8012a92:	6078      	str	r0, [r7, #4]
	if (Ext_FreqGen_Init() == 0)
 8012a94:	f000 fcaa 	bl	80133ec <Ext_FreqGen_Init>
 8012a98:	4603      	mov	r3, r0
 8012a9a:	2b00      	cmp	r3, #0
 8012a9c:	bf0c      	ite	eq
 8012a9e:	2301      	moveq	r3, #1
 8012aa0:	2300      	movne	r3, #0
 8012aa2:	b2db      	uxtb	r3, r3
 8012aa4:	2b00      	cmp	r3, #0
 8012aa6:	d002      	beq.n	8012aae <_ZN8external18FrequencyGenerator10initializeEv+0x22>
	{
		_initialized = true;
 8012aa8:	687b      	ldr	r3, [r7, #4]
 8012aaa:	2201      	movs	r2, #1
 8012aac:	715a      	strb	r2, [r3, #5]
	}
}
 8012aae:	bf00      	nop
 8012ab0:	3708      	adds	r7, #8
 8012ab2:	46bd      	mov	sp, r7
 8012ab4:	bd80      	pop	{r7, pc}

08012ab6 <_ZN8external18FrequencyGenerator11setWaveFormE6f_mode>:

void FrequencyGenerator::setWaveForm(f_mode mode) {
 8012ab6:	b580      	push	{r7, lr}
 8012ab8:	b082      	sub	sp, #8
 8012aba:	af00      	add	r7, sp, #0
 8012abc:	6078      	str	r0, [r7, #4]
 8012abe:	460b      	mov	r3, r1
 8012ac0:	70fb      	strb	r3, [r7, #3]
	_mode = mode;
 8012ac2:	687b      	ldr	r3, [r7, #4]
 8012ac4:	78fa      	ldrb	r2, [r7, #3]
 8012ac6:	711a      	strb	r2, [r3, #4]
	setGen();
 8012ac8:	6878      	ldr	r0, [r7, #4]
 8012aca:	f000 f813 	bl	8012af4 <_ZN8external18FrequencyGenerator6setGenEv>
}
 8012ace:	bf00      	nop
 8012ad0:	3708      	adds	r7, #8
 8012ad2:	46bd      	mov	sp, r7
 8012ad4:	bd80      	pop	{r7, pc}

08012ad6 <_ZN8external18FrequencyGenerator12setFrequencyEm>:

void FrequencyGenerator::setFrequency(uint32_t frequency) {
 8012ad6:	b580      	push	{r7, lr}
 8012ad8:	b082      	sub	sp, #8
 8012ada:	af00      	add	r7, sp, #0
 8012adc:	6078      	str	r0, [r7, #4]
 8012ade:	6039      	str	r1, [r7, #0]
	_frequency = frequency;
 8012ae0:	687b      	ldr	r3, [r7, #4]
 8012ae2:	683a      	ldr	r2, [r7, #0]
 8012ae4:	601a      	str	r2, [r3, #0]
	setGen();
 8012ae6:	6878      	ldr	r0, [r7, #4]
 8012ae8:	f000 f804 	bl	8012af4 <_ZN8external18FrequencyGenerator6setGenEv>
}
 8012aec:	bf00      	nop
 8012aee:	3708      	adds	r7, #8
 8012af0:	46bd      	mov	sp, r7
 8012af2:	bd80      	pop	{r7, pc}

08012af4 <_ZN8external18FrequencyGenerator6setGenEv>:

FrequencyGenerator* FrequencyGenerator::getInstance() {
	return _instance;
}

void FrequencyGenerator::setGen() {
 8012af4:	b580      	push	{r7, lr}
 8012af6:	b082      	sub	sp, #8
 8012af8:	af00      	add	r7, sp, #0
 8012afa:	6078      	str	r0, [r7, #4]
	if (_initialized )
 8012afc:	687b      	ldr	r3, [r7, #4]
 8012afe:	795b      	ldrb	r3, [r3, #5]
 8012b00:	2b00      	cmp	r3, #0
 8012b02:	d008      	beq.n	8012b16 <_ZN8external18FrequencyGenerator6setGenEv+0x22>
	{
		Ext_FreqGen_Set(_frequency, _mode);
 8012b04:	687b      	ldr	r3, [r7, #4]
 8012b06:	681a      	ldr	r2, [r3, #0]
 8012b08:	687b      	ldr	r3, [r7, #4]
 8012b0a:	791b      	ldrb	r3, [r3, #4]
 8012b0c:	4619      	mov	r1, r3
 8012b0e:	4610      	mov	r0, r2
 8012b10:	f000 fd22 	bl	8013558 <Ext_FreqGen_Set>
	}
	else
	{
		trace_out("Frequency Generator not initialized\n");
	}
}
 8012b14:	e002      	b.n	8012b1c <_ZN8external18FrequencyGenerator6setGenEv+0x28>
		trace_out("Frequency Generator not initialized\n");
 8012b16:	4803      	ldr	r0, [pc, #12]	; (8012b24 <_ZN8external18FrequencyGenerator6setGenEv+0x30>)
 8012b18:	f000 fb96 	bl	8013248 <trace_out>
}
 8012b1c:	bf00      	nop
 8012b1e:	3708      	adds	r7, #8
 8012b20:	46bd      	mov	sp, r7
 8012b22:	bd80      	pop	{r7, pc}
 8012b24:	0802e840 	.word	0x0802e840

08012b28 <_ZN9interface9ButtonIrqD1Ev>:
 * the ISR calls this method.
 */
class ButtonIrq
{
protected:
    virtual ~ButtonIrq() {}
 8012b28:	b480      	push	{r7}
 8012b2a:	b083      	sub	sp, #12
 8012b2c:	af00      	add	r7, sp, #0
 8012b2e:	6078      	str	r0, [r7, #4]
 8012b30:	4a04      	ldr	r2, [pc, #16]	; (8012b44 <_ZN9interface9ButtonIrqD1Ev+0x1c>)
 8012b32:	687b      	ldr	r3, [r7, #4]
 8012b34:	601a      	str	r2, [r3, #0]
 8012b36:	687b      	ldr	r3, [r7, #4]
 8012b38:	4618      	mov	r0, r3
 8012b3a:	370c      	adds	r7, #12
 8012b3c:	46bd      	mov	sp, r7
 8012b3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b42:	4770      	bx	lr
 8012b44:	0802f87c 	.word	0x0802f87c

08012b48 <_ZN9interface9ButtonIrqD0Ev>:
 8012b48:	b580      	push	{r7, lr}
 8012b4a:	b082      	sub	sp, #8
 8012b4c:	af00      	add	r7, sp, #0
 8012b4e:	6078      	str	r0, [r7, #4]
 8012b50:	6878      	ldr	r0, [r7, #4]
 8012b52:	f7ff ffe9 	bl	8012b28 <_ZN9interface9ButtonIrqD1Ev>
 8012b56:	2104      	movs	r1, #4
 8012b58:	6878      	ldr	r0, [r7, #4]
 8012b5a:	f018 ff84 	bl	802ba66 <_ZdlPvj>
 8012b5e:	687b      	ldr	r3, [r7, #4]
 8012b60:	4618      	mov	r0, r3
 8012b62:	3708      	adds	r7, #8
 8012b64:	46bd      	mov	sp, r7
 8012b66:	bd80      	pop	{r7, pc}

08012b68 <_ZN9interface9ButtonIrqC1Ev>:

	virtual void onIrq() = 0;	///< @brief Called by the ISR.

protected:
	ButtonIrq() {}              ///< Not allowing to instantiate object of interface.
 8012b68:	b480      	push	{r7}
 8012b6a:	b083      	sub	sp, #12
 8012b6c:	af00      	add	r7, sp, #0
 8012b6e:	6078      	str	r0, [r7, #4]
 8012b70:	4a04      	ldr	r2, [pc, #16]	; (8012b84 <_ZN9interface9ButtonIrqC1Ev+0x1c>)
 8012b72:	687b      	ldr	r3, [r7, #4]
 8012b74:	601a      	str	r2, [r3, #0]
 8012b76:	687b      	ldr	r3, [r7, #4]
 8012b78:	4618      	mov	r0, r3
 8012b7a:	370c      	adds	r7, #12
 8012b7c:	46bd      	mov	sp, r7
 8012b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012b82:	4770      	bx	lr
 8012b84:	0802f87c 	.word	0x0802f87c

08012b88 <_ZN9interface31ButtonsControllerCallbackCallerD1Ev>:
 *
 */
class ButtonsControllerCallbackCaller
{
protected:
    virtual ~ButtonsControllerCallbackCaller() {}
 8012b88:	b480      	push	{r7}
 8012b8a:	b083      	sub	sp, #12
 8012b8c:	af00      	add	r7, sp, #0
 8012b8e:	6078      	str	r0, [r7, #4]
 8012b90:	4a04      	ldr	r2, [pc, #16]	; (8012ba4 <_ZN9interface31ButtonsControllerCallbackCallerD1Ev+0x1c>)
 8012b92:	687b      	ldr	r3, [r7, #4]
 8012b94:	601a      	str	r2, [r3, #0]
 8012b96:	687b      	ldr	r3, [r7, #4]
 8012b98:	4618      	mov	r0, r3
 8012b9a:	370c      	adds	r7, #12
 8012b9c:	46bd      	mov	sp, r7
 8012b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012ba2:	4770      	bx	lr
 8012ba4:	0802f868 	.word	0x0802f868

08012ba8 <_ZN9interface31ButtonsControllerCallbackCallerD0Ev>:
 8012ba8:	b580      	push	{r7, lr}
 8012baa:	b082      	sub	sp, #8
 8012bac:	af00      	add	r7, sp, #0
 8012bae:	6078      	str	r0, [r7, #4]
 8012bb0:	6878      	ldr	r0, [r7, #4]
 8012bb2:	f7ff ffe9 	bl	8012b88 <_ZN9interface31ButtonsControllerCallbackCallerD1Ev>
 8012bb6:	2104      	movs	r1, #4
 8012bb8:	6878      	ldr	r0, [r7, #4]
 8012bba:	f018 ff54 	bl	802ba66 <_ZdlPvj>
 8012bbe:	687b      	ldr	r3, [r7, #4]
 8012bc0:	4618      	mov	r0, r3
 8012bc2:	3708      	adds	r7, #8
 8012bc4:	46bd      	mov	sp, r7
 8012bc6:	bd80      	pop	{r7, pc}

08012bc8 <_ZN9interface31ButtonsControllerCallbackCallerC1Ev>:
     */
    virtual bool registerCallback(ButtonsControllerCallbackProvider * callbackProvider,
                                  ButtonsControllerCallbackProvider::CallbackMethod callbackMethod) = 0;

protected:
    ButtonsControllerCallbackCaller() {}                        ///< Not allowing to instantiate object of interface.
 8012bc8:	b480      	push	{r7}
 8012bca:	b083      	sub	sp, #12
 8012bcc:	af00      	add	r7, sp, #0
 8012bce:	6078      	str	r0, [r7, #4]
 8012bd0:	4a04      	ldr	r2, [pc, #16]	; (8012be4 <_ZN9interface31ButtonsControllerCallbackCallerC1Ev+0x1c>)
 8012bd2:	687b      	ldr	r3, [r7, #4]
 8012bd4:	601a      	str	r2, [r3, #0]
 8012bd6:	687b      	ldr	r3, [r7, #4]
 8012bd8:	4618      	mov	r0, r3
 8012bda:	370c      	adds	r7, #12
 8012bdc:	46bd      	mov	sp, r7
 8012bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012be2:	4770      	bx	lr
 8012be4:	0802f868 	.word	0x0802f868

08012be8 <_ZN17ButtonsControllerC1Ev>:

#include "event/evbuttonirq.h"

ButtonsController * ButtonsController::_pInstance(nullptr);

ButtonsController::ButtonsController()
 8012be8:	b580      	push	{r7, lr}
 8012bea:	b082      	sub	sp, #8
 8012bec:	af00      	add	r7, sp, #0
 8012bee:	6078      	str	r0, [r7, #4]
 8012bf0:	687b      	ldr	r3, [r7, #4]
 8012bf2:	4618      	mov	r0, r3
 8012bf4:	f7ff ffb8 	bl	8012b68 <_ZN9interface9ButtonIrqC1Ev>
 8012bf8:	687b      	ldr	r3, [r7, #4]
 8012bfa:	3304      	adds	r3, #4
 8012bfc:	4618      	mov	r0, r3
 8012bfe:	f7ff ffe3 	bl	8012bc8 <_ZN9interface31ButtonsControllerCallbackCallerC1Ev>
 8012c02:	687b      	ldr	r3, [r7, #4]
 8012c04:	3308      	adds	r3, #8
 8012c06:	2100      	movs	r1, #0
 8012c08:	4618      	mov	r0, r3
 8012c0a:	f000 fec9 	bl	80139a0 <_ZN10XFBehaviorC1Eb>
 8012c0e:	4a17      	ldr	r2, [pc, #92]	; (8012c6c <_ZN17ButtonsControllerC1Ev+0x84>)
 8012c10:	687b      	ldr	r3, [r7, #4]
 8012c12:	601a      	str	r2, [r3, #0]
 8012c14:	4a16      	ldr	r2, [pc, #88]	; (8012c70 <_ZN17ButtonsControllerC1Ev+0x88>)
 8012c16:	687b      	ldr	r3, [r7, #4]
 8012c18:	605a      	str	r2, [r3, #4]
 8012c1a:	4a16      	ldr	r2, [pc, #88]	; (8012c74 <_ZN17ButtonsControllerC1Ev+0x8c>)
 8012c1c:	687b      	ldr	r3, [r7, #4]
 8012c1e:	609a      	str	r2, [r3, #8]
 8012c20:	687b      	ldr	r3, [r7, #4]
 8012c22:	331c      	adds	r3, #28
 8012c24:	2260      	movs	r2, #96	; 0x60
 8012c26:	2100      	movs	r1, #0
 8012c28:	4618      	mov	r0, r3
 8012c2a:	f019 fa03 	bl	802c034 <memset>
{
    assert(!_pInstance);        // Singleton pattern. Only one instance allowed.
 8012c2e:	4b12      	ldr	r3, [pc, #72]	; (8012c78 <_ZN17ButtonsControllerC1Ev+0x90>)
 8012c30:	681b      	ldr	r3, [r3, #0]
 8012c32:	2b00      	cmp	r3, #0
 8012c34:	d005      	beq.n	8012c42 <_ZN17ButtonsControllerC1Ev+0x5a>
 8012c36:	4b11      	ldr	r3, [pc, #68]	; (8012c7c <_ZN17ButtonsControllerC1Ev+0x94>)
 8012c38:	4a11      	ldr	r2, [pc, #68]	; (8012c80 <_ZN17ButtonsControllerC1Ev+0x98>)
 8012c3a:	2113      	movs	r1, #19
 8012c3c:	4811      	ldr	r0, [pc, #68]	; (8012c84 <_ZN17ButtonsControllerC1Ev+0x9c>)
 8012c3e:	f019 f953 	bl	802bee8 <__assert_func>
    _pInstance = this;          // Store 'this' to static pointer
 8012c42:	4a0d      	ldr	r2, [pc, #52]	; (8012c78 <_ZN17ButtonsControllerC1Ev+0x90>)
 8012c44:	687b      	ldr	r3, [r7, #4]
 8012c46:	6013      	str	r3, [r2, #0]

    _currentState = STATE_UNKOWN;
 8012c48:	687b      	ldr	r3, [r7, #4]
 8012c4a:	2200      	movs	r2, #0
 8012c4c:	761a      	strb	r2, [r3, #24]

    // Now the actual state of the buttons can be read
    _currentButtonsValue = readButtonsValue();
 8012c4e:	6878      	ldr	r0, [r7, #4]
 8012c50:	f000 f8ee 	bl	8012e30 <_ZN17ButtonsController16readButtonsValueEv>
 8012c54:	4603      	mov	r3, r0
 8012c56:	461a      	mov	r2, r3
 8012c58:	687b      	ldr	r3, [r7, #4]
 8012c5a:	765a      	strb	r2, [r3, #25]

    _callbacksCount = 0;
 8012c5c:	687b      	ldr	r3, [r7, #4]
 8012c5e:	2200      	movs	r2, #0
 8012c60:	769a      	strb	r2, [r3, #26]
}
 8012c62:	687b      	ldr	r3, [r7, #4]
 8012c64:	4618      	mov	r0, r3
 8012c66:	3708      	adds	r7, #8
 8012c68:	46bd      	mov	sp, r7
 8012c6a:	bd80      	pop	{r7, pc}
 8012c6c:	0802f810 	.word	0x0802f810
 8012c70:	0802f82c 	.word	0x0802f82c
 8012c74:	0802f840 	.word	0x0802f840
 8012c78:	20003f28 	.word	0x20003f28
 8012c7c:	0802e868 	.word	0x0802e868
 8012c80:	0802e874 	.word	0x0802e874
 8012c84:	0802e89c 	.word	0x0802e89c

08012c88 <_ZN17ButtonsControllerD1Ev>:

ButtonsController::~ButtonsController()
 8012c88:	b580      	push	{r7, lr}
 8012c8a:	b082      	sub	sp, #8
 8012c8c:	af00      	add	r7, sp, #0
 8012c8e:	6078      	str	r0, [r7, #4]
 8012c90:	4a0d      	ldr	r2, [pc, #52]	; (8012cc8 <_ZN17ButtonsControllerD1Ev+0x40>)
 8012c92:	687b      	ldr	r3, [r7, #4]
 8012c94:	601a      	str	r2, [r3, #0]
 8012c96:	4a0d      	ldr	r2, [pc, #52]	; (8012ccc <_ZN17ButtonsControllerD1Ev+0x44>)
 8012c98:	687b      	ldr	r3, [r7, #4]
 8012c9a:	605a      	str	r2, [r3, #4]
 8012c9c:	4a0c      	ldr	r2, [pc, #48]	; (8012cd0 <_ZN17ButtonsControllerD1Ev+0x48>)
 8012c9e:	687b      	ldr	r3, [r7, #4]
 8012ca0:	609a      	str	r2, [r3, #8]
 8012ca2:	687b      	ldr	r3, [r7, #4]
 8012ca4:	3308      	adds	r3, #8
 8012ca6:	4618      	mov	r0, r3
 8012ca8:	f000 fec8 	bl	8013a3c <_ZN10XFBehaviorD1Ev>
 8012cac:	687b      	ldr	r3, [r7, #4]
 8012cae:	3304      	adds	r3, #4
 8012cb0:	4618      	mov	r0, r3
 8012cb2:	f7ff ff69 	bl	8012b88 <_ZN9interface31ButtonsControllerCallbackCallerD1Ev>
 8012cb6:	687b      	ldr	r3, [r7, #4]
 8012cb8:	4618      	mov	r0, r3
 8012cba:	f7ff ff35 	bl	8012b28 <_ZN9interface9ButtonIrqD1Ev>
{

}
 8012cbe:	687b      	ldr	r3, [r7, #4]
 8012cc0:	4618      	mov	r0, r3
 8012cc2:	3708      	adds	r7, #8
 8012cc4:	46bd      	mov	sp, r7
 8012cc6:	bd80      	pop	{r7, pc}
 8012cc8:	0802f810 	.word	0x0802f810
 8012ccc:	0802f82c 	.word	0x0802f82c
 8012cd0:	0802f840 	.word	0x0802f840

08012cd4 <_ZThn4_N17ButtonsControllerD1Ev>:
    virtual ~ButtonsController();
 8012cd4:	f1a0 0004 	sub.w	r0, r0, #4
 8012cd8:	f7ff bfd6 	b.w	8012c88 <_ZN17ButtonsControllerD1Ev>

08012cdc <_ZThn8_N17ButtonsControllerD1Ev>:
 8012cdc:	f1a0 0008 	sub.w	r0, r0, #8
 8012ce0:	f7ff bfd2 	b.w	8012c88 <_ZN17ButtonsControllerD1Ev>

08012ce4 <_ZN17ButtonsControllerD0Ev>:
ButtonsController::~ButtonsController()
 8012ce4:	b580      	push	{r7, lr}
 8012ce6:	b082      	sub	sp, #8
 8012ce8:	af00      	add	r7, sp, #0
 8012cea:	6078      	str	r0, [r7, #4]
}
 8012cec:	6878      	ldr	r0, [r7, #4]
 8012cee:	f7ff ffcb 	bl	8012c88 <_ZN17ButtonsControllerD1Ev>
 8012cf2:	217c      	movs	r1, #124	; 0x7c
 8012cf4:	6878      	ldr	r0, [r7, #4]
 8012cf6:	f018 feb6 	bl	802ba66 <_ZdlPvj>
 8012cfa:	687b      	ldr	r3, [r7, #4]
 8012cfc:	4618      	mov	r0, r3
 8012cfe:	3708      	adds	r7, #8
 8012d00:	46bd      	mov	sp, r7
 8012d02:	bd80      	pop	{r7, pc}

08012d04 <_ZThn8_N17ButtonsControllerD0Ev>:
 8012d04:	f1a0 0008 	sub.w	r0, r0, #8
 8012d08:	f7ff bfec 	b.w	8012ce4 <_ZN17ButtonsControllerD0Ev>

08012d0c <_ZThn4_N17ButtonsControllerD0Ev>:
 8012d0c:	f1a0 0004 	sub.w	r0, r0, #4
 8012d10:	f7ff bfe8 	b.w	8012ce4 <_ZN17ButtonsControllerD0Ev>

08012d14 <__tcf_0>:

void ButtonsController::onIrq()
{
    static evButtonIrq evButtonIrq;
 8012d14:	b580      	push	{r7, lr}
 8012d16:	af00      	add	r7, sp, #0
 8012d18:	4801      	ldr	r0, [pc, #4]	; (8012d20 <__tcf_0+0xc>)
 8012d1a:	f7ff fde9 	bl	80128f0 <_ZN11evButtonIrqD1Ev>
 8012d1e:	bd80      	pop	{r7, pc}
 8012d20:	20003f2c 	.word	0x20003f2c

08012d24 <_ZN17ButtonsController5onIrqEv>:
{
 8012d24:	b580      	push	{r7, lr}
 8012d26:	b082      	sub	sp, #8
 8012d28:	af00      	add	r7, sp, #0
 8012d2a:	6078      	str	r0, [r7, #4]
    static evButtonIrq evButtonIrq;
 8012d2c:	4b17      	ldr	r3, [pc, #92]	; (8012d8c <_ZN17ButtonsController5onIrqEv+0x68>)
 8012d2e:	781b      	ldrb	r3, [r3, #0]
 8012d30:	f3bf 8f5b 	dmb	ish
 8012d34:	b2db      	uxtb	r3, r3
 8012d36:	f003 0301 	and.w	r3, r3, #1
 8012d3a:	2b00      	cmp	r3, #0
 8012d3c:	bf0c      	ite	eq
 8012d3e:	2301      	moveq	r3, #1
 8012d40:	2300      	movne	r3, #0
 8012d42:	b2db      	uxtb	r3, r3
 8012d44:	2b00      	cmp	r3, #0
 8012d46:	d013      	beq.n	8012d70 <_ZN17ButtonsController5onIrqEv+0x4c>
 8012d48:	4810      	ldr	r0, [pc, #64]	; (8012d8c <_ZN17ButtonsController5onIrqEv+0x68>)
 8012d4a:	f018 fe8e 	bl	802ba6a <__cxa_guard_acquire>
 8012d4e:	4603      	mov	r3, r0
 8012d50:	2b00      	cmp	r3, #0
 8012d52:	bf14      	ite	ne
 8012d54:	2301      	movne	r3, #1
 8012d56:	2300      	moveq	r3, #0
 8012d58:	b2db      	uxtb	r3, r3
 8012d5a:	2b00      	cmp	r3, #0
 8012d5c:	d008      	beq.n	8012d70 <_ZN17ButtonsController5onIrqEv+0x4c>
 8012d5e:	480c      	ldr	r0, [pc, #48]	; (8012d90 <_ZN17ButtonsController5onIrqEv+0x6c>)
 8012d60:	f7ff fdac 	bl	80128bc <_ZN11evButtonIrqC1Ev>
 8012d64:	480b      	ldr	r0, [pc, #44]	; (8012d94 <_ZN17ButtonsController5onIrqEv+0x70>)
 8012d66:	f019 f8dd 	bl	802bf24 <atexit>
 8012d6a:	4808      	ldr	r0, [pc, #32]	; (8012d8c <_ZN17ButtonsController5onIrqEv+0x68>)
 8012d6c:	f018 fe89 	bl	802ba82 <__cxa_guard_release>

    pushEvent(&evButtonIrq, true);
 8012d70:	687b      	ldr	r3, [r7, #4]
 8012d72:	f103 0008 	add.w	r0, r3, #8
 8012d76:	687b      	ldr	r3, [r7, #4]
 8012d78:	689b      	ldr	r3, [r3, #8]
 8012d7a:	330c      	adds	r3, #12
 8012d7c:	681b      	ldr	r3, [r3, #0]
 8012d7e:	2201      	movs	r2, #1
 8012d80:	4903      	ldr	r1, [pc, #12]	; (8012d90 <_ZN17ButtonsController5onIrqEv+0x6c>)
 8012d82:	4798      	blx	r3
}
 8012d84:	bf00      	nop
 8012d86:	3708      	adds	r7, #8
 8012d88:	46bd      	mov	sp, r7
 8012d8a:	bd80      	pop	{r7, pc}
 8012d8c:	20003f40 	.word	0x20003f40
 8012d90:	20003f2c 	.word	0x20003f2c
 8012d94:	08012d15 	.word	0x08012d15

08012d98 <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE>:

bool ButtonsController::registerCallback(interface::ButtonsControllerCallbackProvider * callbackProvider,
                                         interface::ButtonsControllerCallbackProvider::CallbackMethod callbackMethod)
{
 8012d98:	b480      	push	{r7}
 8012d9a:	b087      	sub	sp, #28
 8012d9c:	af00      	add	r7, sp, #0
 8012d9e:	60f8      	str	r0, [r7, #12]
 8012da0:	60b9      	str	r1, [r7, #8]
 8012da2:	4639      	mov	r1, r7
 8012da4:	e881 000c 	stmia.w	r1, {r2, r3}
    if (_callbacksCount < MAX_CALLBACKS)
 8012da8:	68fb      	ldr	r3, [r7, #12]
 8012daa:	7e9b      	ldrb	r3, [r3, #26]
 8012dac:	2b07      	cmp	r3, #7
 8012dae:	d834      	bhi.n	8012e1a <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x82>
    {
        for (uint8_t i = 0; i < MAX_CALLBACKS; i++)
 8012db0:	2300      	movs	r3, #0
 8012db2:	75fb      	strb	r3, [r7, #23]
 8012db4:	7dfb      	ldrb	r3, [r7, #23]
 8012db6:	2b07      	cmp	r3, #7
 8012db8:	d82d      	bhi.n	8012e16 <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x7e>
        {
            if (_callbackProvider[i].first == nullptr)
 8012dba:	7dfa      	ldrb	r2, [r7, #23]
 8012dbc:	68f9      	ldr	r1, [r7, #12]
 8012dbe:	4613      	mov	r3, r2
 8012dc0:	005b      	lsls	r3, r3, #1
 8012dc2:	4413      	add	r3, r2
 8012dc4:	009b      	lsls	r3, r3, #2
 8012dc6:	440b      	add	r3, r1
 8012dc8:	331c      	adds	r3, #28
 8012dca:	681b      	ldr	r3, [r3, #0]
 8012dcc:	2b00      	cmp	r3, #0
 8012dce:	d11e      	bne.n	8012e0e <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x76>
            {
                _callbackProvider[i].first = callbackProvider;
 8012dd0:	7dfa      	ldrb	r2, [r7, #23]
 8012dd2:	68f9      	ldr	r1, [r7, #12]
 8012dd4:	4613      	mov	r3, r2
 8012dd6:	005b      	lsls	r3, r3, #1
 8012dd8:	4413      	add	r3, r2
 8012dda:	009b      	lsls	r3, r3, #2
 8012ddc:	440b      	add	r3, r1
 8012dde:	331c      	adds	r3, #28
 8012de0:	68ba      	ldr	r2, [r7, #8]
 8012de2:	601a      	str	r2, [r3, #0]
                _callbackProvider[i].second = callbackMethod;
 8012de4:	7dfa      	ldrb	r2, [r7, #23]
 8012de6:	68f9      	ldr	r1, [r7, #12]
 8012de8:	4613      	mov	r3, r2
 8012dea:	005b      	lsls	r3, r3, #1
 8012dec:	4413      	add	r3, r2
 8012dee:	009b      	lsls	r3, r3, #2
 8012df0:	440b      	add	r3, r1
 8012df2:	3320      	adds	r3, #32
 8012df4:	461a      	mov	r2, r3
 8012df6:	463b      	mov	r3, r7
 8012df8:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012dfc:	e882 0003 	stmia.w	r2, {r0, r1}
                _callbacksCount++;
 8012e00:	68fb      	ldr	r3, [r7, #12]
 8012e02:	7e9b      	ldrb	r3, [r3, #26]
 8012e04:	3301      	adds	r3, #1
 8012e06:	b2da      	uxtb	r2, r3
 8012e08:	68fb      	ldr	r3, [r7, #12]
 8012e0a:	769a      	strb	r2, [r3, #26]
                break;
 8012e0c:	e003      	b.n	8012e16 <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x7e>
        for (uint8_t i = 0; i < MAX_CALLBACKS; i++)
 8012e0e:	7dfb      	ldrb	r3, [r7, #23]
 8012e10:	3301      	adds	r3, #1
 8012e12:	75fb      	strb	r3, [r7, #23]
 8012e14:	e7ce      	b.n	8012db4 <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x1c>
            }
        }
        return true;
 8012e16:	2301      	movs	r3, #1
 8012e18:	e000      	b.n	8012e1c <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE+0x84>
    }
    return false;
 8012e1a:	2300      	movs	r3, #0
}
 8012e1c:	4618      	mov	r0, r3
 8012e1e:	371c      	adds	r7, #28
 8012e20:	46bd      	mov	sp, r7
 8012e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8012e26:	4770      	bx	lr

08012e28 <_ZThn4_N17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE>:

protected:
    void onIrq() override;

public:
    bool registerCallback(interface::ButtonsControllerCallbackProvider * callbackProvider,
 8012e28:	f1a0 0004 	sub.w	r0, r0, #4
 8012e2c:	f7ff bfb4 	b.w	8012d98 <_ZN17ButtonsController16registerCallbackEPN9interface33ButtonsControllerCallbackProviderEMS1_FvtbE>

08012e30 <_ZN17ButtonsController16readButtonsValueEv>:

ButtonsController::tButtonsValue ButtonsController::readButtonsValue()
{
 8012e30:	b580      	push	{r7, lr}
 8012e32:	b084      	sub	sp, #16
 8012e34:	af00      	add	r7, sp, #0
 8012e36:	6078      	str	r0, [r7, #4]
    tButtonsValue value = 0;
 8012e38:	2300      	movs	r3, #0
 8012e3a:	73fb      	strb	r3, [r7, #15]

    // Button BTN0
    value |= (HAL_GPIO_ReadPin(BUTTON0_GPIO_Port, BUTTON0_Pin) == GPIO_PIN_SET) ? 0x01 : 0x00;
 8012e3c:	2104      	movs	r1, #4
 8012e3e:	4822      	ldr	r0, [pc, #136]	; (8012ec8 <_ZN17ButtonsController16readButtonsValueEv+0x98>)
 8012e40:	f7f0 fdb2 	bl	80039a8 <HAL_GPIO_ReadPin>
 8012e44:	4603      	mov	r3, r0
 8012e46:	2b01      	cmp	r3, #1
 8012e48:	d101      	bne.n	8012e4e <_ZN17ButtonsController16readButtonsValueEv+0x1e>
 8012e4a:	2301      	movs	r3, #1
 8012e4c:	e000      	b.n	8012e50 <_ZN17ButtonsController16readButtonsValueEv+0x20>
 8012e4e:	2300      	movs	r3, #0
 8012e50:	b25a      	sxtb	r2, r3
 8012e52:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012e56:	4313      	orrs	r3, r2
 8012e58:	b25b      	sxtb	r3, r3
 8012e5a:	73fb      	strb	r3, [r7, #15]

    // Button BTN1
    value |= (HAL_GPIO_ReadPin(BUTTON1_GPIO_Port, BUTTON1_Pin) == GPIO_PIN_SET) ? 0x02 : 0x00;
 8012e5c:	2108      	movs	r1, #8
 8012e5e:	481a      	ldr	r0, [pc, #104]	; (8012ec8 <_ZN17ButtonsController16readButtonsValueEv+0x98>)
 8012e60:	f7f0 fda2 	bl	80039a8 <HAL_GPIO_ReadPin>
 8012e64:	4603      	mov	r3, r0
 8012e66:	2b01      	cmp	r3, #1
 8012e68:	d101      	bne.n	8012e6e <_ZN17ButtonsController16readButtonsValueEv+0x3e>
 8012e6a:	2302      	movs	r3, #2
 8012e6c:	e000      	b.n	8012e70 <_ZN17ButtonsController16readButtonsValueEv+0x40>
 8012e6e:	2300      	movs	r3, #0
 8012e70:	b25a      	sxtb	r2, r3
 8012e72:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012e76:	4313      	orrs	r3, r2
 8012e78:	b25b      	sxtb	r3, r3
 8012e7a:	73fb      	strb	r3, [r7, #15]

    // Button BTN2
    value |= (HAL_GPIO_ReadPin(BUTTON2_GPIO_Port, BUTTON2_Pin) == GPIO_PIN_SET) ? 0x04 : 0x00;
 8012e7c:	2180      	movs	r1, #128	; 0x80
 8012e7e:	4813      	ldr	r0, [pc, #76]	; (8012ecc <_ZN17ButtonsController16readButtonsValueEv+0x9c>)
 8012e80:	f7f0 fd92 	bl	80039a8 <HAL_GPIO_ReadPin>
 8012e84:	4603      	mov	r3, r0
 8012e86:	2b01      	cmp	r3, #1
 8012e88:	d101      	bne.n	8012e8e <_ZN17ButtonsController16readButtonsValueEv+0x5e>
 8012e8a:	2304      	movs	r3, #4
 8012e8c:	e000      	b.n	8012e90 <_ZN17ButtonsController16readButtonsValueEv+0x60>
 8012e8e:	2300      	movs	r3, #0
 8012e90:	b25a      	sxtb	r2, r3
 8012e92:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012e96:	4313      	orrs	r3, r2
 8012e98:	b25b      	sxtb	r3, r3
 8012e9a:	73fb      	strb	r3, [r7, #15]

    // Button BTN3
    value |= (HAL_GPIO_ReadPin(BUTTON3_GPIO_Port, BUTTON3_Pin) == GPIO_PIN_SET) ? 0x08 : 0x00;
 8012e9c:	2140      	movs	r1, #64	; 0x40
 8012e9e:	480b      	ldr	r0, [pc, #44]	; (8012ecc <_ZN17ButtonsController16readButtonsValueEv+0x9c>)
 8012ea0:	f7f0 fd82 	bl	80039a8 <HAL_GPIO_ReadPin>
 8012ea4:	4603      	mov	r3, r0
 8012ea6:	2b01      	cmp	r3, #1
 8012ea8:	d101      	bne.n	8012eae <_ZN17ButtonsController16readButtonsValueEv+0x7e>
 8012eaa:	2308      	movs	r3, #8
 8012eac:	e000      	b.n	8012eb0 <_ZN17ButtonsController16readButtonsValueEv+0x80>
 8012eae:	2300      	movs	r3, #0
 8012eb0:	b25a      	sxtb	r2, r3
 8012eb2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8012eb6:	4313      	orrs	r3, r2
 8012eb8:	b25b      	sxtb	r3, r3
 8012eba:	73fb      	strb	r3, [r7, #15]

    return value;
 8012ebc:	7bfb      	ldrb	r3, [r7, #15]
}
 8012ebe:	4618      	mov	r0, r3
 8012ec0:	3710      	adds	r7, #16
 8012ec2:	46bd      	mov	sp, r7
 8012ec4:	bd80      	pop	{r7, pc}
 8012ec6:	bf00      	nop
 8012ec8:	40022000 	.word	0x40022000
 8012ecc:	40021800 	.word	0x40021800

08012ed0 <_ZN17ButtonsController12processEventEv>:

XFEventStatus ButtonsController::processEvent()
{
 8012ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ed2:	b085      	sub	sp, #20
 8012ed4:	af00      	add	r7, sp, #0
 8012ed6:	6078      	str	r0, [r7, #4]
    eMainState newState = _currentState;
 8012ed8:	687b      	ldr	r3, [r7, #4]
 8012eda:	7e1b      	ldrb	r3, [r3, #24]
 8012edc:	73fb      	strb	r3, [r7, #15]

    // Handle transition changes
    switch (_currentState)
 8012ede:	687b      	ldr	r3, [r7, #4]
 8012ee0:	7e1b      	ldrb	r3, [r3, #24]
 8012ee2:	2b03      	cmp	r3, #3
 8012ee4:	d879      	bhi.n	8012fda <_ZN17ButtonsController12processEventEv+0x10a>
 8012ee6:	a201      	add	r2, pc, #4	; (adr r2, 8012eec <_ZN17ButtonsController12processEventEv+0x1c>)
 8012ee8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8012eec:	08012efd 	.word	0x08012efd
 8012ef0:	08012f25 	.word	0x08012f25
 8012ef4:	08012f4d 	.word	0x08012f4d
 8012ef8:	08012f8d 	.word	0x08012f8d
    {
    case STATE_UNKOWN:
        // Decouple caller of startBehavior() with
        // the transition from UNKNOWN to INITIAL.
        if (getCurrentEvent()->getEventType() == XFEvent::Initial)
 8012efc:	687b      	ldr	r3, [r7, #4]
 8012efe:	3308      	adds	r3, #8
 8012f00:	4618      	mov	r0, r3
 8012f02:	f000 fe4e 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012f06:	4603      	mov	r3, r0
 8012f08:	4618      	mov	r0, r3
 8012f0a:	f7fe fb8d 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012f0e:	4603      	mov	r3, r0
 8012f10:	2b01      	cmp	r3, #1
 8012f12:	bf0c      	ite	eq
 8012f14:	2301      	moveq	r3, #1
 8012f16:	2300      	movne	r3, #0
 8012f18:	b2db      	uxtb	r3, r3
 8012f1a:	2b00      	cmp	r3, #0
 8012f1c:	d056      	beq.n	8012fcc <_ZN17ButtonsController12processEventEv+0xfc>
        {
            newState = STATE_INITIAL;
 8012f1e:	2301      	movs	r3, #1
 8012f20:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8012f22:	e053      	b.n	8012fcc <_ZN17ButtonsController12processEventEv+0xfc>
    case STATE_INITIAL:
        if (getCurrentEvent()->getEventType() == XFEvent::NullTransition)
 8012f24:	687b      	ldr	r3, [r7, #4]
 8012f26:	3308      	adds	r3, #8
 8012f28:	4618      	mov	r0, r3
 8012f2a:	f000 fe3a 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012f2e:	4603      	mov	r3, r0
 8012f30:	4618      	mov	r0, r3
 8012f32:	f7fe fb79 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012f36:	4603      	mov	r3, r0
 8012f38:	2b02      	cmp	r3, #2
 8012f3a:	bf0c      	ite	eq
 8012f3c:	2301      	moveq	r3, #1
 8012f3e:	2300      	movne	r3, #0
 8012f40:	b2db      	uxtb	r3, r3
 8012f42:	2b00      	cmp	r3, #0
 8012f44:	d044      	beq.n	8012fd0 <_ZN17ButtonsController12processEventEv+0x100>
        {
            newState = STATE_CHECK_BUTTONS;
 8012f46:	2302      	movs	r3, #2
 8012f48:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8012f4a:	e041      	b.n	8012fd0 <_ZN17ButtonsController12processEventEv+0x100>
    case STATE_CHECK_BUTTONS:
        if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 8012f4c:	687b      	ldr	r3, [r7, #4]
 8012f4e:	3308      	adds	r3, #8
 8012f50:	4618      	mov	r0, r3
 8012f52:	f000 fe26 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012f56:	4603      	mov	r3, r0
 8012f58:	4618      	mov	r0, r3
 8012f5a:	f7fe fb65 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012f5e:	4603      	mov	r3, r0
 8012f60:	2b03      	cmp	r3, #3
 8012f62:	d10d      	bne.n	8012f80 <_ZN17ButtonsController12processEventEv+0xb0>
            getCurrentEvent()->getId() == evButtonIrqId)
 8012f64:	687b      	ldr	r3, [r7, #4]
 8012f66:	3308      	adds	r3, #8
 8012f68:	4618      	mov	r0, r3
 8012f6a:	f000 fe1a 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012f6e:	4603      	mov	r3, r0
 8012f70:	4618      	mov	r0, r3
 8012f72:	f7fe fb66 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8012f76:	4603      	mov	r3, r0
        if (getCurrentEvent()->getEventType() == XFEvent::Event &&
 8012f78:	2b01      	cmp	r3, #1
 8012f7a:	d101      	bne.n	8012f80 <_ZN17ButtonsController12processEventEv+0xb0>
 8012f7c:	2301      	movs	r3, #1
 8012f7e:	e000      	b.n	8012f82 <_ZN17ButtonsController12processEventEv+0xb2>
 8012f80:	2300      	movs	r3, #0
 8012f82:	2b00      	cmp	r3, #0
 8012f84:	d026      	beq.n	8012fd4 <_ZN17ButtonsController12processEventEv+0x104>
        {
            newState = STATE_DEBOUNCE;
 8012f86:	2303      	movs	r3, #3
 8012f88:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8012f8a:	e023      	b.n	8012fd4 <_ZN17ButtonsController12processEventEv+0x104>
    case STATE_DEBOUNCE:
        if (getCurrentEvent()->getEventType() == XFEvent::Timeout &&
 8012f8c:	687b      	ldr	r3, [r7, #4]
 8012f8e:	3308      	adds	r3, #8
 8012f90:	4618      	mov	r0, r3
 8012f92:	f000 fe06 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8012f96:	4603      	mov	r3, r0
 8012f98:	4618      	mov	r0, r3
 8012f9a:	f7fe fb45 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8012f9e:	4603      	mov	r3, r0
 8012fa0:	2b04      	cmp	r3, #4
 8012fa2:	d10d      	bne.n	8012fc0 <_ZN17ButtonsController12processEventEv+0xf0>
            getCurrentTimeout()->getId() == Timeout_DEBOUNCE_id)
 8012fa4:	687b      	ldr	r3, [r7, #4]
 8012fa6:	3308      	adds	r3, #8
 8012fa8:	4618      	mov	r0, r3
 8012faa:	f000 fe07 	bl	8013bbc <_ZN10XFBehavior17getCurrentTimeoutEv>
 8012fae:	4603      	mov	r3, r0
 8012fb0:	4618      	mov	r0, r3
 8012fb2:	f7fe fb46 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8012fb6:	4603      	mov	r3, r0
        if (getCurrentEvent()->getEventType() == XFEvent::Timeout &&
 8012fb8:	2b01      	cmp	r3, #1
 8012fba:	d101      	bne.n	8012fc0 <_ZN17ButtonsController12processEventEv+0xf0>
 8012fbc:	2301      	movs	r3, #1
 8012fbe:	e000      	b.n	8012fc2 <_ZN17ButtonsController12processEventEv+0xf2>
 8012fc0:	2300      	movs	r3, #0
 8012fc2:	2b00      	cmp	r3, #0
 8012fc4:	d008      	beq.n	8012fd8 <_ZN17ButtonsController12processEventEv+0x108>
        {
            newState = STATE_CHECK_BUTTONS;
 8012fc6:	2302      	movs	r3, #2
 8012fc8:	73fb      	strb	r3, [r7, #15]
        }
        break;
 8012fca:	e005      	b.n	8012fd8 <_ZN17ButtonsController12processEventEv+0x108>
        break;
 8012fcc:	bf00      	nop
 8012fce:	e004      	b.n	8012fda <_ZN17ButtonsController12processEventEv+0x10a>
        break;
 8012fd0:	bf00      	nop
 8012fd2:	e002      	b.n	8012fda <_ZN17ButtonsController12processEventEv+0x10a>
        break;
 8012fd4:	bf00      	nop
 8012fd6:	e000      	b.n	8012fda <_ZN17ButtonsController12processEventEv+0x10a>
        break;
 8012fd8:	bf00      	nop
    }

    // Handle transitions
    if (_currentState != newState)
 8012fda:	687b      	ldr	r3, [r7, #4]
 8012fdc:	7e1b      	ldrb	r3, [r3, #24]
 8012fde:	7bfa      	ldrb	r2, [r7, #15]
 8012fe0:	429a      	cmp	r2, r3
 8012fe2:	d02e      	beq.n	8013042 <_ZN17ButtonsController12processEventEv+0x172>
    {
        switch (newState)
 8012fe4:	7bfb      	ldrb	r3, [r7, #15]
 8012fe6:	2b03      	cmp	r3, #3
 8012fe8:	d01f      	beq.n	801302a <_ZN17ButtonsController12processEventEv+0x15a>
 8012fea:	2b03      	cmp	r3, #3
 8012fec:	dc25      	bgt.n	801303a <_ZN17ButtonsController12processEventEv+0x16a>
 8012fee:	2b01      	cmp	r3, #1
 8012ff0:	d002      	beq.n	8012ff8 <_ZN17ButtonsController12processEventEv+0x128>
 8012ff2:	2b02      	cmp	r3, #2
 8012ff4:	d015      	beq.n	8013022 <_ZN17ButtonsController12processEventEv+0x152>
            break;
        case STATE_DEBOUNCE:
            scheduleTimeout(Timeout_DEBOUNCE_id, BUTTONSCONTROLLER_DEBOUNCE_TIME);
            break;
        default:
            break;
 8012ff6:	e020      	b.n	801303a <_ZN17ButtonsController12processEventEv+0x16a>
            GEN(XFNullTransition());
 8012ff8:	687b      	ldr	r3, [r7, #4]
 8012ffa:	f103 0508 	add.w	r5, r3, #8
 8012ffe:	687b      	ldr	r3, [r7, #4]
 8013000:	689b      	ldr	r3, [r3, #8]
 8013002:	330c      	adds	r3, #12
 8013004:	681c      	ldr	r4, [r3, #0]
 8013006:	2010      	movs	r0, #16
 8013008:	f018 fd3e 	bl	802ba88 <_Znwj>
 801300c:	4603      	mov	r3, r0
 801300e:	461e      	mov	r6, r3
 8013010:	2100      	movs	r1, #0
 8013012:	4630      	mov	r0, r6
 8013014:	f000 fe50 	bl	8013cb8 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE>
 8013018:	2200      	movs	r2, #0
 801301a:	4631      	mov	r1, r6
 801301c:	4628      	mov	r0, r5
 801301e:	47a0      	blx	r4
            break;
 8013020:	e00c      	b.n	801303c <_ZN17ButtonsController12processEventEv+0x16c>
            doCheckButtons();
 8013022:	6878      	ldr	r0, [r7, #4]
 8013024:	f000 f81c 	bl	8013060 <_ZN17ButtonsController14doCheckButtonsEv>
            break;
 8013028:	e008      	b.n	801303c <_ZN17ButtonsController12processEventEv+0x16c>
            scheduleTimeout(Timeout_DEBOUNCE_id, BUTTONSCONTROLLER_DEBOUNCE_TIME);
 801302a:	687b      	ldr	r3, [r7, #4]
 801302c:	3308      	adds	r3, #8
 801302e:	2232      	movs	r2, #50	; 0x32
 8013030:	2101      	movs	r1, #1
 8013032:	4618      	mov	r0, r3
 8013034:	f7ff f85e 	bl	80120f4 <_ZN10XFBehavior15scheduleTimeoutEii>
            break;
 8013038:	e000      	b.n	801303c <_ZN17ButtonsController12processEventEv+0x16c>
            break;
 801303a:	bf00      	nop
        }

        _currentState = newState;
 801303c:	687b      	ldr	r3, [r7, #4]
 801303e:	7bfa      	ldrb	r2, [r7, #15]
 8013040:	761a      	strb	r2, [r3, #24]
    }
    return XFEventStatus::Consumed;
 8013042:	f107 030c 	add.w	r3, r7, #12
 8013046:	2101      	movs	r1, #1
 8013048:	4618      	mov	r0, r3
 801304a:	f7fe fb06 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>
 801304e:	7b3b      	ldrb	r3, [r7, #12]
}
 8013050:	4618      	mov	r0, r3
 8013052:	3714      	adds	r7, #20
 8013054:	46bd      	mov	sp, r7
 8013056:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013058 <_ZThn8_N17ButtonsController12processEventEv>:
                          interface::ButtonsControllerCallbackProvider::CallbackMethod callbackMethod) override;

public:
    XFEventStatus processEvent() override;
 8013058:	f1a0 0008 	sub.w	r0, r0, #8
 801305c:	f7ff bf38 	b.w	8012ed0 <_ZN17ButtonsController12processEventEv>

08013060 <_ZN17ButtonsController14doCheckButtonsEv>:


void ButtonsController::doCheckButtons()
{
 8013060:	b580      	push	{r7, lr}
 8013062:	b086      	sub	sp, #24
 8013064:	af00      	add	r7, sp, #0
 8013066:	6078      	str	r0, [r7, #4]
    tButtonsValue newButtonsValue = readButtonsValue();
 8013068:	6878      	ldr	r0, [r7, #4]
 801306a:	f7ff fee1 	bl	8012e30 <_ZN17ButtonsController16readButtonsValueEv>
 801306e:	4603      	mov	r3, r0
 8013070:	73fb      	strb	r3, [r7, #15]
    uint8_t mask = 0x01;
 8013072:	2301      	movs	r3, #1
 8013074:	75fb      	strb	r3, [r7, #23]

    if (_currentButtonsValue != newButtonsValue)
 8013076:	687b      	ldr	r3, [r7, #4]
 8013078:	7e5b      	ldrb	r3, [r3, #25]
 801307a:	7bfa      	ldrb	r2, [r7, #15]
 801307c:	429a      	cmp	r2, r3
 801307e:	d027      	beq.n	80130d0 <_ZN17ButtonsController14doCheckButtonsEv+0x70>
    {
        for (uint32_t i = 0; i < BUTTONS_COUNT; i++)
 8013080:	2300      	movs	r3, #0
 8013082:	613b      	str	r3, [r7, #16]
 8013084:	693b      	ldr	r3, [r7, #16]
 8013086:	2b03      	cmp	r3, #3
 8013088:	d81f      	bhi.n	80130ca <_ZN17ButtonsController14doCheckButtonsEv+0x6a>
        {
            if ((_currentButtonsValue & mask) != (newButtonsValue & mask))
 801308a:	687b      	ldr	r3, [r7, #4]
 801308c:	7e5a      	ldrb	r2, [r3, #25]
 801308e:	7bfb      	ldrb	r3, [r7, #15]
 8013090:	4053      	eors	r3, r2
 8013092:	b2da      	uxtb	r2, r3
 8013094:	7dfb      	ldrb	r3, [r7, #23]
 8013096:	4013      	ands	r3, r2
 8013098:	b2db      	uxtb	r3, r3
 801309a:	2b00      	cmp	r3, #0
 801309c:	d00e      	beq.n	80130bc <_ZN17ButtonsController14doCheckButtonsEv+0x5c>
            {
                notifyButtonChange(i, !(newButtonsValue & mask));
 801309e:	693b      	ldr	r3, [r7, #16]
 80130a0:	b299      	uxth	r1, r3
 80130a2:	7bfa      	ldrb	r2, [r7, #15]
 80130a4:	7dfb      	ldrb	r3, [r7, #23]
 80130a6:	4013      	ands	r3, r2
 80130a8:	b2db      	uxtb	r3, r3
 80130aa:	2b00      	cmp	r3, #0
 80130ac:	bf0c      	ite	eq
 80130ae:	2301      	moveq	r3, #1
 80130b0:	2300      	movne	r3, #0
 80130b2:	b2db      	uxtb	r3, r3
 80130b4:	461a      	mov	r2, r3
 80130b6:	6878      	ldr	r0, [r7, #4]
 80130b8:	f000 f80e 	bl	80130d8 <_ZN17ButtonsController18notifyButtonChangeEtb>
            }

            mask <<= 0x01;
 80130bc:	7dfb      	ldrb	r3, [r7, #23]
 80130be:	005b      	lsls	r3, r3, #1
 80130c0:	75fb      	strb	r3, [r7, #23]
        for (uint32_t i = 0; i < BUTTONS_COUNT; i++)
 80130c2:	693b      	ldr	r3, [r7, #16]
 80130c4:	3301      	adds	r3, #1
 80130c6:	613b      	str	r3, [r7, #16]
 80130c8:	e7dc      	b.n	8013084 <_ZN17ButtonsController14doCheckButtonsEv+0x24>
        }

        _currentButtonsValue = newButtonsValue;
 80130ca:	687b      	ldr	r3, [r7, #4]
 80130cc:	7bfa      	ldrb	r2, [r7, #15]
 80130ce:	765a      	strb	r2, [r3, #25]
    }
}
 80130d0:	bf00      	nop
 80130d2:	3718      	adds	r7, #24
 80130d4:	46bd      	mov	sp, r7
 80130d6:	bd80      	pop	{r7, pc}

080130d8 <_ZN17ButtonsController18notifyButtonChangeEtb>:

void ButtonsController::notifyButtonChange(uint16_t buttonIndex, bool pressed)
{
 80130d8:	b590      	push	{r4, r7, lr}
 80130da:	b085      	sub	sp, #20
 80130dc:	af00      	add	r7, sp, #0
 80130de:	6078      	str	r0, [r7, #4]
 80130e0:	460b      	mov	r3, r1
 80130e2:	807b      	strh	r3, [r7, #2]
 80130e4:	4613      	mov	r3, r2
 80130e6:	707b      	strb	r3, [r7, #1]
#if (TRACE_BUTTONSCONTROLLER_NOTIFICATIONS != 0)
    Trace::out("Button %d %s", buttonIndex, (pressed) ? "pressed" : "released");
#endif

    for (uint8_t i = 0; i < MAX_CALLBACKS; i++)
 80130e8:	2300      	movs	r3, #0
 80130ea:	73fb      	strb	r3, [r7, #15]
 80130ec:	7bfb      	ldrb	r3, [r7, #15]
 80130ee:	2b07      	cmp	r3, #7
 80130f0:	d85b      	bhi.n	80131aa <_ZN17ButtonsController18notifyButtonChangeEtb+0xd2>
    {
        if (_callbackProvider[i].first != nullptr)
 80130f2:	7bfa      	ldrb	r2, [r7, #15]
 80130f4:	6879      	ldr	r1, [r7, #4]
 80130f6:	4613      	mov	r3, r2
 80130f8:	005b      	lsls	r3, r3, #1
 80130fa:	4413      	add	r3, r2
 80130fc:	009b      	lsls	r3, r3, #2
 80130fe:	440b      	add	r3, r1
 8013100:	331c      	adds	r3, #28
 8013102:	681b      	ldr	r3, [r3, #0]
 8013104:	2b00      	cmp	r3, #0
 8013106:	d04f      	beq.n	80131a8 <_ZN17ButtonsController18notifyButtonChangeEtb+0xd0>
        {
            (_callbackProvider[i].first->*_callbackProvider[i].second)(buttonIndex, pressed);
 8013108:	7bfa      	ldrb	r2, [r7, #15]
 801310a:	6879      	ldr	r1, [r7, #4]
 801310c:	4613      	mov	r3, r2
 801310e:	005b      	lsls	r3, r3, #1
 8013110:	4413      	add	r3, r2
 8013112:	009b      	lsls	r3, r3, #2
 8013114:	440b      	add	r3, r1
 8013116:	331c      	adds	r3, #28
 8013118:	6819      	ldr	r1, [r3, #0]
 801311a:	7bfa      	ldrb	r2, [r7, #15]
 801311c:	6878      	ldr	r0, [r7, #4]
 801311e:	4613      	mov	r3, r2
 8013120:	005b      	lsls	r3, r3, #1
 8013122:	4413      	add	r3, r2
 8013124:	009b      	lsls	r3, r3, #2
 8013126:	4403      	add	r3, r0
 8013128:	3324      	adds	r3, #36	; 0x24
 801312a:	681b      	ldr	r3, [r3, #0]
 801312c:	105b      	asrs	r3, r3, #1
 801312e:	18cc      	adds	r4, r1, r3
 8013130:	7bfa      	ldrb	r2, [r7, #15]
 8013132:	6879      	ldr	r1, [r7, #4]
 8013134:	4613      	mov	r3, r2
 8013136:	005b      	lsls	r3, r3, #1
 8013138:	4413      	add	r3, r2
 801313a:	009b      	lsls	r3, r3, #2
 801313c:	440b      	add	r3, r1
 801313e:	3324      	adds	r3, #36	; 0x24
 8013140:	681b      	ldr	r3, [r3, #0]
 8013142:	f003 0301 	and.w	r3, r3, #1
 8013146:	2b00      	cmp	r3, #0
 8013148:	d109      	bne.n	801315e <_ZN17ButtonsController18notifyButtonChangeEtb+0x86>
 801314a:	7bfa      	ldrb	r2, [r7, #15]
 801314c:	6879      	ldr	r1, [r7, #4]
 801314e:	4613      	mov	r3, r2
 8013150:	005b      	lsls	r3, r3, #1
 8013152:	4413      	add	r3, r2
 8013154:	009b      	lsls	r3, r3, #2
 8013156:	440b      	add	r3, r1
 8013158:	3320      	adds	r3, #32
 801315a:	681b      	ldr	r3, [r3, #0]
 801315c:	e01f      	b.n	801319e <_ZN17ButtonsController18notifyButtonChangeEtb+0xc6>
 801315e:	7bfa      	ldrb	r2, [r7, #15]
 8013160:	6879      	ldr	r1, [r7, #4]
 8013162:	4613      	mov	r3, r2
 8013164:	005b      	lsls	r3, r3, #1
 8013166:	4413      	add	r3, r2
 8013168:	009b      	lsls	r3, r3, #2
 801316a:	440b      	add	r3, r1
 801316c:	331c      	adds	r3, #28
 801316e:	6819      	ldr	r1, [r3, #0]
 8013170:	7bfa      	ldrb	r2, [r7, #15]
 8013172:	6878      	ldr	r0, [r7, #4]
 8013174:	4613      	mov	r3, r2
 8013176:	005b      	lsls	r3, r3, #1
 8013178:	4413      	add	r3, r2
 801317a:	009b      	lsls	r3, r3, #2
 801317c:	4403      	add	r3, r0
 801317e:	3324      	adds	r3, #36	; 0x24
 8013180:	681b      	ldr	r3, [r3, #0]
 8013182:	105b      	asrs	r3, r3, #1
 8013184:	440b      	add	r3, r1
 8013186:	6819      	ldr	r1, [r3, #0]
 8013188:	7bfa      	ldrb	r2, [r7, #15]
 801318a:	6878      	ldr	r0, [r7, #4]
 801318c:	4613      	mov	r3, r2
 801318e:	005b      	lsls	r3, r3, #1
 8013190:	4413      	add	r3, r2
 8013192:	009b      	lsls	r3, r3, #2
 8013194:	4403      	add	r3, r0
 8013196:	3320      	adds	r3, #32
 8013198:	681b      	ldr	r3, [r3, #0]
 801319a:	440b      	add	r3, r1
 801319c:	681b      	ldr	r3, [r3, #0]
 801319e:	787a      	ldrb	r2, [r7, #1]
 80131a0:	8879      	ldrh	r1, [r7, #2]
 80131a2:	4620      	mov	r0, r4
 80131a4:	4798      	blx	r3
            break;
 80131a6:	e000      	b.n	80131aa <_ZN17ButtonsController18notifyButtonChangeEtb+0xd2>
        }
        else
        {
            break;
 80131a8:	bf00      	nop
        }
    }
}
 80131aa:	bf00      	nop
 80131ac:	3714      	adds	r7, #20
 80131ae:	46bd      	mov	sp, r7
 80131b0:	bd90      	pop	{r4, r7, pc}
	...

080131b4 <_ZL10traceMutexv>:
static char strTrace[255];

static int32_t checkStringEnding(char * str, uint32_t len);

static interface::XFMutex & traceMutex()
{
 80131b4:	b580      	push	{r7, lr}
 80131b6:	af00      	add	r7, sp, #0
	static XFMutex * mutex = XFResourceFactory::getInstance()->createMutex();
 80131b8:	4b15      	ldr	r3, [pc, #84]	; (8013210 <_ZL10traceMutexv+0x5c>)
 80131ba:	781b      	ldrb	r3, [r3, #0]
 80131bc:	f3bf 8f5b 	dmb	ish
 80131c0:	b2db      	uxtb	r3, r3
 80131c2:	f003 0301 	and.w	r3, r3, #1
 80131c6:	2b00      	cmp	r3, #0
 80131c8:	bf0c      	ite	eq
 80131ca:	2301      	moveq	r3, #1
 80131cc:	2300      	movne	r3, #0
 80131ce:	b2db      	uxtb	r3, r3
 80131d0:	2b00      	cmp	r3, #0
 80131d2:	d018      	beq.n	8013206 <_ZL10traceMutexv+0x52>
 80131d4:	480e      	ldr	r0, [pc, #56]	; (8013210 <_ZL10traceMutexv+0x5c>)
 80131d6:	f018 fc48 	bl	802ba6a <__cxa_guard_acquire>
 80131da:	4603      	mov	r3, r0
 80131dc:	2b00      	cmp	r3, #0
 80131de:	bf14      	ite	ne
 80131e0:	2301      	movne	r3, #1
 80131e2:	2300      	moveq	r3, #0
 80131e4:	b2db      	uxtb	r3, r3
 80131e6:	2b00      	cmp	r3, #0
 80131e8:	d00d      	beq.n	8013206 <_ZL10traceMutexv+0x52>
 80131ea:	f000 fff5 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 80131ee:	4603      	mov	r3, r0
 80131f0:	681a      	ldr	r2, [r3, #0]
 80131f2:	320c      	adds	r2, #12
 80131f4:	6812      	ldr	r2, [r2, #0]
 80131f6:	4618      	mov	r0, r3
 80131f8:	4790      	blx	r2
 80131fa:	4603      	mov	r3, r0
 80131fc:	4a05      	ldr	r2, [pc, #20]	; (8013214 <_ZL10traceMutexv+0x60>)
 80131fe:	6013      	str	r3, [r2, #0]
 8013200:	4803      	ldr	r0, [pc, #12]	; (8013210 <_ZL10traceMutexv+0x5c>)
 8013202:	f018 fc3e 	bl	802ba82 <__cxa_guard_release>
	return *mutex;
 8013206:	4b03      	ldr	r3, [pc, #12]	; (8013214 <_ZL10traceMutexv+0x60>)
 8013208:	681b      	ldr	r3, [r3, #0]
}
 801320a:	4618      	mov	r0, r3
 801320c:	bd80      	pop	{r7, pc}
 801320e:	bf00      	nop
 8013210:	200040d8 	.word	0x200040d8
 8013214:	200040d4 	.word	0x200040d4

08013218 <_ZL14traceMutexLockv>:

static void traceMutexLock()
{
 8013218:	b580      	push	{r7, lr}
 801321a:	af00      	add	r7, sp, #0
    traceMutex().lock();
 801321c:	f7ff ffca 	bl	80131b4 <_ZL10traceMutexv>
 8013220:	4603      	mov	r3, r0
 8013222:	681a      	ldr	r2, [r3, #0]
 8013224:	3208      	adds	r2, #8
 8013226:	6812      	ldr	r2, [r2, #0]
 8013228:	4618      	mov	r0, r3
 801322a:	4790      	blx	r2
}
 801322c:	bf00      	nop
 801322e:	bd80      	pop	{r7, pc}

08013230 <_ZL16traceMutexUnlockv>:

static void traceMutexUnlock()
{
 8013230:	b580      	push	{r7, lr}
 8013232:	af00      	add	r7, sp, #0
    traceMutex().unlock();
 8013234:	f7ff ffbe 	bl	80131b4 <_ZL10traceMutexv>
 8013238:	4603      	mov	r3, r0
 801323a:	681a      	ldr	r2, [r3, #0]
 801323c:	320c      	adds	r2, #12
 801323e:	6812      	ldr	r2, [r2, #0]
 8013240:	4618      	mov	r0, r3
 8013242:	4790      	blx	r2
}
 8013244:	bf00      	nop
 8013246:	bd80      	pop	{r7, pc}

08013248 <trace_out>:
{
    Trace::initialize();
}

void trace_out(const char * const format , ...)
{
 8013248:	b40f      	push	{r0, r1, r2, r3}
 801324a:	b580      	push	{r7, lr}
 801324c:	b082      	sub	sp, #8
 801324e:	af00      	add	r7, sp, #0
    va_list args;

    // Format string
    va_start(args, format);
 8013250:	f107 0314 	add.w	r3, r7, #20
 8013254:	607b      	str	r3, [r7, #4]
    vsprintf(strTrace, format, args);
 8013256:	687a      	ldr	r2, [r7, #4]
 8013258:	6939      	ldr	r1, [r7, #16]
 801325a:	480b      	ldr	r0, [pc, #44]	; (8013288 <trace_out+0x40>)
 801325c:	f019 fb2a 	bl	802c8b4 <vsiprintf>
    va_end(args);

    checkStringEnding(strTrace, strlen(strTrace));
 8013260:	4809      	ldr	r0, [pc, #36]	; (8013288 <trace_out+0x40>)
 8013262:	f7ed f825 	bl	80002b0 <strlen>
 8013266:	4603      	mov	r3, r0
 8013268:	4619      	mov	r1, r3
 801326a:	4807      	ldr	r0, [pc, #28]	; (8013288 <trace_out+0x40>)
 801326c:	f000 f810 	bl	8013290 <_ZL17checkStringEndingPcm>

    traceUart.write(strTrace);
 8013270:	2200      	movs	r2, #0
 8013272:	4905      	ldr	r1, [pc, #20]	; (8013288 <trace_out+0x40>)
 8013274:	4805      	ldr	r0, [pc, #20]	; (801328c <trace_out+0x44>)
 8013276:	f000 fad9 	bl	801382c <_ZN4Uart5writeEPKcj>
}
 801327a:	bf00      	nop
 801327c:	3708      	adds	r7, #8
 801327e:	46bd      	mov	sp, r7
 8013280:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8013284:	b004      	add	sp, #16
 8013286:	4770      	bx	lr
 8013288:	20003fd4 	.word	0x20003fd4
 801328c:	20003f44 	.word	0x20003f44

08013290 <_ZL17checkStringEndingPcm>:
{
	traceUart.initialize(TRACE_UART_BAUD_RATE);
}

static int32_t checkStringEnding(char * str, uint32_t len)
{
 8013290:	b580      	push	{r7, lr}
 8013292:	b082      	sub	sp, #8
 8013294:	af00      	add	r7, sp, #0
 8013296:	6078      	str	r0, [r7, #4]
 8013298:	6039      	str	r1, [r7, #0]
	if (!len)
 801329a:	683b      	ldr	r3, [r7, #0]
 801329c:	2b00      	cmp	r3, #0
 801329e:	d101      	bne.n	80132a4 <_ZL17checkStringEndingPcm+0x14>
	{
		return 0;
 80132a0:	2300      	movs	r3, #0
 80132a2:	e040      	b.n	8013326 <_ZL17checkStringEndingPcm+0x96>
	}

	if (str[len-1] != '\n')
 80132a4:	683b      	ldr	r3, [r7, #0]
 80132a6:	3b01      	subs	r3, #1
 80132a8:	687a      	ldr	r2, [r7, #4]
 80132aa:	4413      	add	r3, r2
 80132ac:	781b      	ldrb	r3, [r3, #0]
 80132ae:	2b0a      	cmp	r3, #10
 80132b0:	d011      	beq.n	80132d6 <_ZL17checkStringEndingPcm+0x46>
	{
#if (TRACE_ADD_CRLF_SEQU != 0)
		// Add "\r\n" at the end of the string
		str[len] = '\r';
 80132b2:	687a      	ldr	r2, [r7, #4]
 80132b4:	683b      	ldr	r3, [r7, #0]
 80132b6:	4413      	add	r3, r2
 80132b8:	220d      	movs	r2, #13
 80132ba:	701a      	strb	r2, [r3, #0]
		str[len+1] = '\n';
 80132bc:	683b      	ldr	r3, [r7, #0]
 80132be:	3301      	adds	r3, #1
 80132c0:	687a      	ldr	r2, [r7, #4]
 80132c2:	4413      	add	r3, r2
 80132c4:	220a      	movs	r2, #10
 80132c6:	701a      	strb	r2, [r3, #0]
		str[len+2] = '\0';
 80132c8:	683b      	ldr	r3, [r7, #0]
 80132ca:	3302      	adds	r3, #2
 80132cc:	687a      	ldr	r2, [r7, #4]
 80132ce:	4413      	add	r3, r2
 80132d0:	2200      	movs	r2, #0
 80132d2:	701a      	strb	r2, [r3, #0]
 80132d4:	e023      	b.n	801331e <_ZL17checkStringEndingPcm+0x8e>
		str[len+1] = '\0';
#endif // TRACE_ADD_CRLF_SEQU
		}
#if (TRACE_ADD_CRLF_SEQU != 0)
	// Check string finishing with "\r\n"
	else if (str[len-1] == '\n')
 80132d6:	683b      	ldr	r3, [r7, #0]
 80132d8:	3b01      	subs	r3, #1
 80132da:	687a      	ldr	r2, [r7, #4]
 80132dc:	4413      	add	r3, r2
 80132de:	781b      	ldrb	r3, [r3, #0]
 80132e0:	2b0a      	cmp	r3, #10
 80132e2:	d11c      	bne.n	801331e <_ZL17checkStringEndingPcm+0x8e>
	{
		// Check if second last char is an '\r'
		if (len == 1 ||
 80132e4:	683b      	ldr	r3, [r7, #0]
 80132e6:	2b01      	cmp	r3, #1
 80132e8:	d009      	beq.n	80132fe <_ZL17checkStringEndingPcm+0x6e>
 80132ea:	683b      	ldr	r3, [r7, #0]
 80132ec:	2b01      	cmp	r3, #1
 80132ee:	d916      	bls.n	801331e <_ZL17checkStringEndingPcm+0x8e>
			(len >= 2 && str[len-2] != '\r'))
 80132f0:	683b      	ldr	r3, [r7, #0]
 80132f2:	3b02      	subs	r3, #2
 80132f4:	687a      	ldr	r2, [r7, #4]
 80132f6:	4413      	add	r3, r2
 80132f8:	781b      	ldrb	r3, [r3, #0]
 80132fa:	2b0d      	cmp	r3, #13
 80132fc:	d00f      	beq.n	801331e <_ZL17checkStringEndingPcm+0x8e>
		{
			// Squeeze a '\r'
			memmove(&str[len], &str[len-1], 2);
 80132fe:	687a      	ldr	r2, [r7, #4]
 8013300:	683b      	ldr	r3, [r7, #0]
 8013302:	4413      	add	r3, r2
 8013304:	683a      	ldr	r2, [r7, #0]
 8013306:	3a01      	subs	r2, #1
 8013308:	6879      	ldr	r1, [r7, #4]
 801330a:	440a      	add	r2, r1
 801330c:	8812      	ldrh	r2, [r2, #0]
 801330e:	b292      	uxth	r2, r2
 8013310:	801a      	strh	r2, [r3, #0]
			str[len-1] = '\r';
 8013312:	683b      	ldr	r3, [r7, #0]
 8013314:	3b01      	subs	r3, #1
 8013316:	687a      	ldr	r2, [r7, #4]
 8013318:	4413      	add	r3, r2
 801331a:	220d      	movs	r2, #13
 801331c:	701a      	strb	r2, [r3, #0]
		}
	}
#endif // TRACE_ADD_CRLF_SEQU
	return strlen(str);
 801331e:	6878      	ldr	r0, [r7, #4]
 8013320:	f7ec ffc6 	bl	80002b0 <strlen>
 8013324:	4603      	mov	r3, r0
}
 8013326:	4618      	mov	r0, r3
 8013328:	3708      	adds	r7, #8
 801332a:	46bd      	mov	sp, r7
 801332c:	bd80      	pop	{r7, pc}
	...

08013330 <_ZN5Trace3outEPKcz>:
	traceUart.write(str.data(), str.length());
	traceMutexUnlock();
}

void Trace::out(const char * format, ...)
{
 8013330:	b40f      	push	{r0, r1, r2, r3}
 8013332:	b580      	push	{r7, lr}
 8013334:	b082      	sub	sp, #8
 8013336:	af00      	add	r7, sp, #0
	traceMutexLock();
 8013338:	f7ff ff6e 	bl	8013218 <_ZL14traceMutexLockv>
	va_list args;

	// Format string
	va_start(args, format);
 801333c:	f107 0314 	add.w	r3, r7, #20
 8013340:	607b      	str	r3, [r7, #4]
	vsprintf(strTrace, format, args);
 8013342:	687a      	ldr	r2, [r7, #4]
 8013344:	6939      	ldr	r1, [r7, #16]
 8013346:	480c      	ldr	r0, [pc, #48]	; (8013378 <_ZN5Trace3outEPKcz+0x48>)
 8013348:	f019 fab4 	bl	802c8b4 <vsiprintf>
	va_end(args);

	checkStringEnding(strTrace, strlen(strTrace));
 801334c:	480a      	ldr	r0, [pc, #40]	; (8013378 <_ZN5Trace3outEPKcz+0x48>)
 801334e:	f7ec ffaf 	bl	80002b0 <strlen>
 8013352:	4603      	mov	r3, r0
 8013354:	4619      	mov	r1, r3
 8013356:	4808      	ldr	r0, [pc, #32]	; (8013378 <_ZN5Trace3outEPKcz+0x48>)
 8013358:	f7ff ff9a 	bl	8013290 <_ZL17checkStringEndingPcm>

	traceUart.write(strTrace);
 801335c:	2200      	movs	r2, #0
 801335e:	4906      	ldr	r1, [pc, #24]	; (8013378 <_ZN5Trace3outEPKcz+0x48>)
 8013360:	4806      	ldr	r0, [pc, #24]	; (801337c <_ZN5Trace3outEPKcz+0x4c>)
 8013362:	f000 fa63 	bl	801382c <_ZN4Uart5writeEPKcj>
	traceMutexUnlock();
 8013366:	f7ff ff63 	bl	8013230 <_ZL16traceMutexUnlockv>
}
 801336a:	bf00      	nop
 801336c:	3708      	adds	r7, #8
 801336e:	46bd      	mov	sp, r7
 8013370:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8013374:	b004      	add	sp, #16
 8013376:	4770      	bx	lr
 8013378:	20003fd4 	.word	0x20003fd4
 801337c:	20003f44 	.word	0x20003f44

08013380 <_Z41__static_initialization_and_destruction_0ii>:

//static
void Trace::unlock()
{
    traceMutexUnlock();
}
 8013380:	b580      	push	{r7, lr}
 8013382:	b082      	sub	sp, #8
 8013384:	af00      	add	r7, sp, #0
 8013386:	6078      	str	r0, [r7, #4]
 8013388:	6039      	str	r1, [r7, #0]
 801338a:	687b      	ldr	r3, [r7, #4]
 801338c:	2b01      	cmp	r3, #1
 801338e:	d10a      	bne.n	80133a6 <_Z41__static_initialization_and_destruction_0ii+0x26>
 8013390:	683b      	ldr	r3, [r7, #0]
 8013392:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013396:	4293      	cmp	r3, r2
 8013398:	d105      	bne.n	80133a6 <_Z41__static_initialization_and_destruction_0ii+0x26>
static Uart traceUart(TRACE_UART_CONSTRUCTOR_PARAMETERS);
 801339a:	2300      	movs	r3, #0
 801339c:	4a09      	ldr	r2, [pc, #36]	; (80133c4 <_Z41__static_initialization_and_destruction_0ii+0x44>)
 801339e:	2100      	movs	r1, #0
 80133a0:	4809      	ldr	r0, [pc, #36]	; (80133c8 <_Z41__static_initialization_and_destruction_0ii+0x48>)
 80133a2:	f000 f9d7 	bl	8013754 <_ZN4UartC1EhP20__UART_HandleTypeDefb>
 80133a6:	687b      	ldr	r3, [r7, #4]
 80133a8:	2b00      	cmp	r3, #0
 80133aa:	d107      	bne.n	80133bc <_Z41__static_initialization_and_destruction_0ii+0x3c>
 80133ac:	683b      	ldr	r3, [r7, #0]
 80133ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80133b2:	4293      	cmp	r3, r2
 80133b4:	d102      	bne.n	80133bc <_Z41__static_initialization_and_destruction_0ii+0x3c>
 80133b6:	4804      	ldr	r0, [pc, #16]	; (80133c8 <_Z41__static_initialization_and_destruction_0ii+0x48>)
 80133b8:	f000 fa18 	bl	80137ec <_ZN4UartD1Ev>
}
 80133bc:	bf00      	nop
 80133be:	3708      	adds	r7, #8
 80133c0:	46bd      	mov	sp, r7
 80133c2:	bd80      	pop	{r7, pc}
 80133c4:	20000390 	.word	0x20000390
 80133c8:	20003f44 	.word	0x20003f44

080133cc <_GLOBAL__sub_I_trace_initialize>:
 80133cc:	b580      	push	{r7, lr}
 80133ce:	af00      	add	r7, sp, #0
 80133d0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133d4:	2001      	movs	r0, #1
 80133d6:	f7ff ffd3 	bl	8013380 <_Z41__static_initialization_and_destruction_0ii>
 80133da:	bd80      	pop	{r7, pc}

080133dc <_GLOBAL__sub_D_trace_initialize>:
 80133dc:	b580      	push	{r7, lr}
 80133de:	af00      	add	r7, sp, #0
 80133e0:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133e4:	2000      	movs	r0, #0
 80133e6:	f7ff ffcb 	bl	8013380 <_Z41__static_initialization_and_destruction_0ii>
 80133ea:	bd80      	pop	{r7, pc}

080133ec <Ext_FreqGen_Init>:
  return 0;
}
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
int32_t Ext_FreqGen_Init (void)
{
 80133ec:	b580      	push	{r7, lr}
 80133ee:	b08a      	sub	sp, #40	; 0x28
 80133f0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct;

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOF_CLK_ENABLE();	
 80133f2:	4b53      	ldr	r3, [pc, #332]	; (8013540 <Ext_FreqGen_Init+0x154>)
 80133f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80133f6:	4a52      	ldr	r2, [pc, #328]	; (8013540 <Ext_FreqGen_Init+0x154>)
 80133f8:	f043 0320 	orr.w	r3, r3, #32
 80133fc:	6313      	str	r3, [r2, #48]	; 0x30
 80133fe:	4b50      	ldr	r3, [pc, #320]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013400:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013402:	f003 0320 	and.w	r3, r3, #32
 8013406:	613b      	str	r3, [r7, #16]
 8013408:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();	
 801340a:	4b4d      	ldr	r3, [pc, #308]	; (8013540 <Ext_FreqGen_Init+0x154>)
 801340c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801340e:	4a4c      	ldr	r2, [pc, #304]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013410:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013414:	6313      	str	r3, [r2, #48]	; 0x30
 8013416:	4b4a      	ldr	r3, [pc, #296]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801341a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801341e:	60fb      	str	r3, [r7, #12]
 8013420:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();	
 8013422:	4b47      	ldr	r3, [pc, #284]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013426:	4a46      	ldr	r2, [pc, #280]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013428:	f043 0302 	orr.w	r3, r3, #2
 801342c:	6313      	str	r3, [r2, #48]	; 0x30
 801342e:	4b44      	ldr	r3, [pc, #272]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013432:	f003 0302 	and.w	r3, r3, #2
 8013436:	60bb      	str	r3, [r7, #8]
 8013438:	68bb      	ldr	r3, [r7, #8]
	
  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_SET);
 801343a:	2201      	movs	r2, #1
 801343c:	2140      	movs	r1, #64	; 0x40
 801343e:	4841      	ldr	r0, [pc, #260]	; (8013544 <Ext_FreqGen_Init+0x158>)
 8013440:	f7f0 faca 	bl	80039d8 <HAL_GPIO_WritePin>
	
  /*Configure GPIO pin : nCS_FREQ_GEN_Pin */
  GPIO_InitStruct.Pin = nCS_FREQ_GEN_Pin;
 8013444:	2340      	movs	r3, #64	; 0x40
 8013446:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8013448:	2301      	movs	r3, #1
 801344a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 801344c:	2300      	movs	r3, #0
 801344e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8013450:	2300      	movs	r3, #0
 8013452:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(nCS_FREQ_GEN_GPIO_Port, &GPIO_InitStruct);
 8013454:	f107 0314 	add.w	r3, r7, #20
 8013458:	4619      	mov	r1, r3
 801345a:	483a      	ldr	r0, [pc, #232]	; (8013544 <Ext_FreqGen_Init+0x158>)
 801345c:	f7ef ffec 	bl	8003438 <HAL_GPIO_Init>

	
  __HAL_RCC_SPI2_CLK_ENABLE();
 8013460:	4b37      	ldr	r3, [pc, #220]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013462:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013464:	4a36      	ldr	r2, [pc, #216]	; (8013540 <Ext_FreqGen_Init+0x154>)
 8013466:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801346a:	6413      	str	r3, [r2, #64]	; 0x40
 801346c:	4b34      	ldr	r3, [pc, #208]	; (8013540 <Ext_FreqGen_Init+0x154>)
 801346e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8013470:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8013474:	607b      	str	r3, [r7, #4]
 8013476:	687b      	ldr	r3, [r7, #4]
  
   /**SPI2 GPIO Configuration    
   PI1     ------> SPI2_SCK
   PB15     ------> SPI2_MOSI 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8013478:	2302      	movs	r3, #2
 801347a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801347c:	2302      	movs	r3, #2
 801347e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8013480:	2300      	movs	r3, #0
 8013482:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8013484:	2303      	movs	r3, #3
 8013486:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8013488:	2305      	movs	r3, #5
 801348a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 801348c:	f107 0314 	add.w	r3, r7, #20
 8013490:	4619      	mov	r1, r3
 8013492:	482d      	ldr	r0, [pc, #180]	; (8013548 <Ext_FreqGen_Init+0x15c>)
 8013494:	f7ef ffd0 	bl	8003438 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8013498:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801349c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801349e:	2302      	movs	r3, #2
 80134a0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80134a2:	2300      	movs	r3, #0
 80134a4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80134a6:	2303      	movs	r3, #3
 80134a8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80134aa:	2305      	movs	r3, #5
 80134ac:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80134ae:	f107 0314 	add.w	r3, r7, #20
 80134b2:	4619      	mov	r1, r3
 80134b4:	4825      	ldr	r0, [pc, #148]	; (801354c <Ext_FreqGen_Init+0x160>)
 80134b6:	f7ef ffbf 	bl	8003438 <HAL_GPIO_Init>

	
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 80134ba:	4b25      	ldr	r3, [pc, #148]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134bc:	4a25      	ldr	r2, [pc, #148]	; (8013554 <Ext_FreqGen_Init+0x168>)
 80134be:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80134c0:	4b23      	ldr	r3, [pc, #140]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134c2:	f44f 7282 	mov.w	r2, #260	; 0x104
 80134c6:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 80134c8:	4b21      	ldr	r3, [pc, #132]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134ca:	2200      	movs	r2, #0
 80134cc:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 80134ce:	4b20      	ldr	r3, [pc, #128]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134d0:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 80134d4:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80134d6:	4b1e      	ldr	r3, [pc, #120]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134d8:	2202      	movs	r2, #2
 80134da:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 80134dc:	4b1c      	ldr	r3, [pc, #112]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134de:	2200      	movs	r2, #0
 80134e0:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80134e2:	4b1b      	ldr	r3, [pc, #108]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80134e8:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_64;
 80134ea:	4b19      	ldr	r3, [pc, #100]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134ec:	2228      	movs	r2, #40	; 0x28
 80134ee:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80134f0:	4b17      	ldr	r3, [pc, #92]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134f2:	2200      	movs	r2, #0
 80134f4:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80134f6:	4b16      	ldr	r3, [pc, #88]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134f8:	2200      	movs	r2, #0
 80134fa:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80134fc:	4b14      	ldr	r3, [pc, #80]	; (8013550 <Ext_FreqGen_Init+0x164>)
 80134fe:	2200      	movs	r2, #0
 8013500:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 7;
 8013502:	4b13      	ldr	r3, [pc, #76]	; (8013550 <Ext_FreqGen_Init+0x164>)
 8013504:	2207      	movs	r2, #7
 8013506:	62da      	str	r2, [r3, #44]	; 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8013508:	4b11      	ldr	r3, [pc, #68]	; (8013550 <Ext_FreqGen_Init+0x164>)
 801350a:	2200      	movs	r2, #0
 801350c:	631a      	str	r2, [r3, #48]	; 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 801350e:	4b10      	ldr	r3, [pc, #64]	; (8013550 <Ext_FreqGen_Init+0x164>)
 8013510:	2200      	movs	r2, #0
 8013512:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)	
 8013514:	480e      	ldr	r0, [pc, #56]	; (8013550 <Ext_FreqGen_Init+0x164>)
 8013516:	f7f2 fe0c 	bl	8006132 <HAL_SPI_Init>
 801351a:	4603      	mov	r3, r0
 801351c:	2b00      	cmp	r3, #0
 801351e:	d002      	beq.n	8013526 <Ext_FreqGen_Init+0x13a>
		return -1;
 8013520:	f04f 33ff 	mov.w	r3, #4294967295
 8013524:	e008      	b.n	8013538 <Ext_FreqGen_Init+0x14c>
  Ext_FreqGen_Set(20,SQUARE);
 8013526:	2102      	movs	r1, #2
 8013528:	2014      	movs	r0, #20
 801352a:	f000 f815 	bl	8013558 <Ext_FreqGen_Set>
  Ext_FreqGen_Set(20,SQUARE);
 801352e:	2102      	movs	r1, #2
 8013530:	2014      	movs	r0, #20
 8013532:	f000 f811 	bl	8013558 <Ext_FreqGen_Set>
	return 0;
 8013536:	2300      	movs	r3, #0
}
 8013538:	4618      	mov	r0, r3
 801353a:	3728      	adds	r7, #40	; 0x28
 801353c:	46bd      	mov	sp, r7
 801353e:	bd80      	pop	{r7, pc}
 8013540:	40023800 	.word	0x40023800
 8013544:	40021400 	.word	0x40021400
 8013548:	40022000 	.word	0x40022000
 801354c:	40020400 	.word	0x40020400
 8013550:	200002e0 	.word	0x200002e0
 8013554:	40003800 	.word	0x40003800

08013558 <Ext_FreqGen_Set>:
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
void Ext_FreqGen_Set(uint32_t frequency,f_mode mode)
{
 8013558:	b580      	push	{r7, lr}
 801355a:	b086      	sub	sp, #24
 801355c:	af00      	add	r7, sp, #0
 801355e:	6078      	str	r0, [r7, #4]
 8013560:	460b      	mov	r3, r1
 8013562:	70fb      	strb	r3, [r7, #3]
	uint8_t data[2];
	float calcDivisor;
	uint32_t divisorInt;
	calcDivisor = ((float)frequency * 268435456L) / 16000000L;
 8013564:	687b      	ldr	r3, [r7, #4]
 8013566:	ee07 3a90 	vmov	s15, r3
 801356a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 801356e:	ed9f 7a47 	vldr	s14, [pc, #284]	; 801368c <Ext_FreqGen_Set+0x134>
 8013572:	ee27 7a87 	vmul.f32	s14, s15, s14
 8013576:	eddf 6a46 	vldr	s13, [pc, #280]	; 8013690 <Ext_FreqGen_Set+0x138>
 801357a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 801357e:	edc7 7a05 	vstr	s15, [r7, #20]
	divisorInt = (uint32_t)calcDivisor - 1;
 8013582:	edd7 7a05 	vldr	s15, [r7, #20]
 8013586:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 801358a:	ee17 3a90 	vmov	r3, s15
 801358e:	3b01      	subs	r3, #1
 8013590:	613b      	str	r3, [r7, #16]
	//----------------------------------------------------------------------------
	// reset generator
	data[0] = 0x21;
 8013592:	2321      	movs	r3, #33	; 0x21
 8013594:	733b      	strb	r3, [r7, #12]
	data[1] = 0x00;
 8013596:	2300      	movs	r3, #0
 8013598:	737b      	strb	r3, [r7, #13]
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_RESET);
 801359a:	2200      	movs	r2, #0
 801359c:	2140      	movs	r1, #64	; 0x40
 801359e:	483d      	ldr	r0, [pc, #244]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 80135a0:	f7f0 fa1a 	bl	80039d8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,data,2,10);
 80135a4:	f107 010c 	add.w	r1, r7, #12
 80135a8:	230a      	movs	r3, #10
 80135aa:	2202      	movs	r2, #2
 80135ac:	483a      	ldr	r0, [pc, #232]	; (8013698 <Ext_FreqGen_Set+0x140>)
 80135ae:	f7f2 fe6b 	bl	8006288 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_SET);
 80135b2:	2201      	movs	r2, #1
 80135b4:	2140      	movs	r1, #64	; 0x40
 80135b6:	4837      	ldr	r0, [pc, #220]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 80135b8:	f7f0 fa0e 	bl	80039d8 <HAL_GPIO_WritePin>
	//----------------------------------------------------------------------------
	// set frequency LSB (14 bits)
	data[0] = ((divisorInt & 0x3FFF) | 0x4000) >> 8;
 80135bc:	693b      	ldr	r3, [r7, #16]
 80135be:	0a1b      	lsrs	r3, r3, #8
 80135c0:	b2db      	uxtb	r3, r3
 80135c2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80135c6:	b2db      	uxtb	r3, r3
 80135c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80135cc:	b2db      	uxtb	r3, r3
 80135ce:	733b      	strb	r3, [r7, #12]
	data[1] = ((divisorInt & 0x3FFF) | 0x4000) >> 0;
 80135d0:	693b      	ldr	r3, [r7, #16]
 80135d2:	b2db      	uxtb	r3, r3
 80135d4:	737b      	strb	r3, [r7, #13]
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_RESET);
 80135d6:	2200      	movs	r2, #0
 80135d8:	2140      	movs	r1, #64	; 0x40
 80135da:	482e      	ldr	r0, [pc, #184]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 80135dc:	f7f0 f9fc 	bl	80039d8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,data,2,10);
 80135e0:	f107 010c 	add.w	r1, r7, #12
 80135e4:	230a      	movs	r3, #10
 80135e6:	2202      	movs	r2, #2
 80135e8:	482b      	ldr	r0, [pc, #172]	; (8013698 <Ext_FreqGen_Set+0x140>)
 80135ea:	f7f2 fe4d 	bl	8006288 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_SET);
 80135ee:	2201      	movs	r2, #1
 80135f0:	2140      	movs	r1, #64	; 0x40
 80135f2:	4828      	ldr	r0, [pc, #160]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 80135f4:	f7f0 f9f0 	bl	80039d8 <HAL_GPIO_WritePin>
	//----------------------------------------------------------------------------
	// set frequency MSB (14 bits)
	data[0] = (((divisorInt>>14) & 0x3FFF) | 0x4000) >> 8;
 80135f8:	693b      	ldr	r3, [r7, #16]
 80135fa:	0b9b      	lsrs	r3, r3, #14
 80135fc:	0a1b      	lsrs	r3, r3, #8
 80135fe:	b2db      	uxtb	r3, r3
 8013600:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8013604:	b2db      	uxtb	r3, r3
 8013606:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801360a:	b2db      	uxtb	r3, r3
 801360c:	733b      	strb	r3, [r7, #12]
	data[1] = (((divisorInt>>14) & 0x3FFF) | 0x4000) >> 0;
 801360e:	693b      	ldr	r3, [r7, #16]
 8013610:	0b9b      	lsrs	r3, r3, #14
 8013612:	b2db      	uxtb	r3, r3
 8013614:	737b      	strb	r3, [r7, #13]
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_RESET);
 8013616:	2200      	movs	r2, #0
 8013618:	2140      	movs	r1, #64	; 0x40
 801361a:	481e      	ldr	r0, [pc, #120]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 801361c:	f7f0 f9dc 	bl	80039d8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,data,2,10);
 8013620:	f107 010c 	add.w	r1, r7, #12
 8013624:	230a      	movs	r3, #10
 8013626:	2202      	movs	r2, #2
 8013628:	481b      	ldr	r0, [pc, #108]	; (8013698 <Ext_FreqGen_Set+0x140>)
 801362a:	f7f2 fe2d 	bl	8006288 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_SET);
 801362e:	2201      	movs	r2, #1
 8013630:	2140      	movs	r1, #64	; 0x40
 8013632:	4818      	ldr	r0, [pc, #96]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 8013634:	f7f0 f9d0 	bl	80039d8 <HAL_GPIO_WritePin>
	//----------------------------------------------------------------------------
	// set output signal
	data[0] = 0x20;		// unreset
 8013638:	2320      	movs	r3, #32
 801363a:	733b      	strb	r3, [r7, #12]
	switch(mode)
 801363c:	78fb      	ldrb	r3, [r7, #3]
 801363e:	2b02      	cmp	r3, #2
 8013640:	d00c      	beq.n	801365c <Ext_FreqGen_Set+0x104>
 8013642:	2b02      	cmp	r3, #2
 8013644:	dc0d      	bgt.n	8013662 <Ext_FreqGen_Set+0x10a>
 8013646:	2b00      	cmp	r3, #0
 8013648:	d002      	beq.n	8013650 <Ext_FreqGen_Set+0xf8>
 801364a:	2b01      	cmp	r3, #1
 801364c:	d003      	beq.n	8013656 <Ext_FreqGen_Set+0xfe>
 801364e:	e008      	b.n	8013662 <Ext_FreqGen_Set+0x10a>
	{
		case SINUS:
			data[1] = 0x00;
 8013650:	2300      	movs	r3, #0
 8013652:	737b      	strb	r3, [r7, #13]
			break;		
 8013654:	e005      	b.n	8013662 <Ext_FreqGen_Set+0x10a>
		case TRIANGLE:
			data[1] = 0x02;
 8013656:	2302      	movs	r3, #2
 8013658:	737b      	strb	r3, [r7, #13]
			break;		
 801365a:	e002      	b.n	8013662 <Ext_FreqGen_Set+0x10a>
		case SQUARE:
			data[1] = 0x28;
 801365c:	2328      	movs	r3, #40	; 0x28
 801365e:	737b      	strb	r3, [r7, #13]
			break;
 8013660:	bf00      	nop
	}
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_RESET);
 8013662:	2200      	movs	r2, #0
 8013664:	2140      	movs	r1, #64	; 0x40
 8013666:	480b      	ldr	r0, [pc, #44]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 8013668:	f7f0 f9b6 	bl	80039d8 <HAL_GPIO_WritePin>
	HAL_SPI_Transmit(&hspi2,data,2,10);
 801366c:	f107 010c 	add.w	r1, r7, #12
 8013670:	230a      	movs	r3, #10
 8013672:	2202      	movs	r2, #2
 8013674:	4808      	ldr	r0, [pc, #32]	; (8013698 <Ext_FreqGen_Set+0x140>)
 8013676:	f7f2 fe07 	bl	8006288 <HAL_SPI_Transmit>
	HAL_GPIO_WritePin(nCS_FREQ_GEN_GPIO_Port, nCS_FREQ_GEN_Pin, GPIO_PIN_SET);
 801367a:	2201      	movs	r2, #1
 801367c:	2140      	movs	r1, #64	; 0x40
 801367e:	4805      	ldr	r0, [pc, #20]	; (8013694 <Ext_FreqGen_Set+0x13c>)
 8013680:	f7f0 f9aa 	bl	80039d8 <HAL_GPIO_WritePin>
}
 8013684:	bf00      	nop
 8013686:	3718      	adds	r7, #24
 8013688:	46bd      	mov	sp, r7
 801368a:	bd80      	pop	{r7, pc}
 801368c:	4d800000 	.word	0x4d800000
 8013690:	4b742400 	.word	0x4b742400
 8013694:	40021400 	.word	0x40021400
 8013698:	200002e0 	.word	0x200002e0

0801369c <critical_enter>:

static volatile int inIsr_ = 0;
static volatile int enterCriticalNested_ = 0;

void critical_enter()
{
 801369c:	b580      	push	{r7, lr}
 801369e:	af00      	add	r7, sp, #0
	// Only disable interrupts when not calling from an ISR
	if (!critical_inIsr())
 80136a0:	f000 f83c 	bl	801371c <critical_inIsr>
 80136a4:	4603      	mov	r3, r0
 80136a6:	2b00      	cmp	r3, #0
 80136a8:	bf0c      	ite	eq
 80136aa:	2301      	moveq	r3, #1
 80136ac:	2300      	movne	r3, #0
 80136ae:	b2db      	uxtb	r3, r3
 80136b0:	2b00      	cmp	r3, #0
 80136b2:	d00f      	beq.n	80136d4 <critical_enter+0x38>
	{
		if (!enterCriticalNested_)
 80136b4:	4b08      	ldr	r3, [pc, #32]	; (80136d8 <critical_enter+0x3c>)
 80136b6:	681b      	ldr	r3, [r3, #0]
 80136b8:	2b00      	cmp	r3, #0
 80136ba:	bf0c      	ite	eq
 80136bc:	2301      	moveq	r3, #1
 80136be:	2300      	movne	r3, #0
 80136c0:	b2db      	uxtb	r3, r3
 80136c2:	2b00      	cmp	r3, #0
 80136c4:	d001      	beq.n	80136ca <critical_enter+0x2e>
  __ASM volatile ("cpsid i" : : : "memory");
 80136c6:	b672      	cpsid	i
}
 80136c8:	bf00      	nop
		{
			// Turn off the priority configurable interrupts
		    __disable_irq();
		}
		enterCriticalNested_++;
 80136ca:	4b03      	ldr	r3, [pc, #12]	; (80136d8 <critical_enter+0x3c>)
 80136cc:	681b      	ldr	r3, [r3, #0]
 80136ce:	3301      	adds	r3, #1
 80136d0:	4a01      	ldr	r2, [pc, #4]	; (80136d8 <critical_enter+0x3c>)
 80136d2:	6013      	str	r3, [r2, #0]
	}
}
 80136d4:	bf00      	nop
 80136d6:	bd80      	pop	{r7, pc}
 80136d8:	200040e0 	.word	0x200040e0

080136dc <critical_exit>:

void critical_exit()
{
 80136dc:	b580      	push	{r7, lr}
 80136de:	af00      	add	r7, sp, #0
	// Only enable interrupts when not calling from an ISR
	if (!critical_inIsr())
 80136e0:	f000 f81c 	bl	801371c <critical_inIsr>
 80136e4:	4603      	mov	r3, r0
 80136e6:	2b00      	cmp	r3, #0
 80136e8:	bf0c      	ite	eq
 80136ea:	2301      	moveq	r3, #1
 80136ec:	2300      	movne	r3, #0
 80136ee:	b2db      	uxtb	r3, r3
 80136f0:	2b00      	cmp	r3, #0
 80136f2:	d00f      	beq.n	8013714 <critical_exit+0x38>
	{
		enterCriticalNested_--;
 80136f4:	4b08      	ldr	r3, [pc, #32]	; (8013718 <critical_exit+0x3c>)
 80136f6:	681b      	ldr	r3, [r3, #0]
 80136f8:	3b01      	subs	r3, #1
 80136fa:	4a07      	ldr	r2, [pc, #28]	; (8013718 <critical_exit+0x3c>)
 80136fc:	6013      	str	r3, [r2, #0]

		if (!enterCriticalNested_)
 80136fe:	4b06      	ldr	r3, [pc, #24]	; (8013718 <critical_exit+0x3c>)
 8013700:	681b      	ldr	r3, [r3, #0]
 8013702:	2b00      	cmp	r3, #0
 8013704:	bf0c      	ite	eq
 8013706:	2301      	moveq	r3, #1
 8013708:	2300      	movne	r3, #0
 801370a:	b2db      	uxtb	r3, r3
 801370c:	2b00      	cmp	r3, #0
 801370e:	d001      	beq.n	8013714 <critical_exit+0x38>
  __ASM volatile ("cpsie i" : : : "memory");
 8013710:	b662      	cpsie	i
}
 8013712:	bf00      	nop
		{
			// Turn on the interrupts with configurable priority
		    __enable_irq();
		}
	}
}
 8013714:	bf00      	nop
 8013716:	bd80      	pop	{r7, pc}
 8013718:	200040e0 	.word	0x200040e0

0801371c <critical_inIsr>:

int critical_inIsr()
{
 801371c:	b480      	push	{r7}
 801371e:	af00      	add	r7, sp, #0
    // Variable must be put to TRUE in every ISR to indicate execution
    // of an ISR and need to put back to FALSE before leaving ISR.
    return inIsr_;
 8013720:	4b03      	ldr	r3, [pc, #12]	; (8013730 <critical_inIsr+0x14>)
 8013722:	681b      	ldr	r3, [r3, #0]
}
 8013724:	4618      	mov	r0, r3
 8013726:	46bd      	mov	sp, r7
 8013728:	f85d 7b04 	ldr.w	r7, [sp], #4
 801372c:	4770      	bx	lr
 801372e:	bf00      	nop
 8013730:	200040dc 	.word	0x200040dc

08013734 <critical_setInIsr>:

void critical_setInIsr(bool inIsr)
{
 8013734:	b480      	push	{r7}
 8013736:	b083      	sub	sp, #12
 8013738:	af00      	add	r7, sp, #0
 801373a:	4603      	mov	r3, r0
 801373c:	71fb      	strb	r3, [r7, #7]
    inIsr_ = inIsr;
 801373e:	79fb      	ldrb	r3, [r7, #7]
 8013740:	4a03      	ldr	r2, [pc, #12]	; (8013750 <critical_setInIsr+0x1c>)
 8013742:	6013      	str	r3, [r2, #0]
}
 8013744:	bf00      	nop
 8013746:	370c      	adds	r7, #12
 8013748:	46bd      	mov	sp, r7
 801374a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801374e:	4770      	bx	lr
 8013750:	200040dc 	.word	0x200040dc

08013754 <_ZN4UartC1EhP20__UART_HandleTypeDefb>:
#endif

Uart * Uart::_sUart[Uart::UART_COUNT];				// Comment: Startup script should initialize pointers to zero (.bss section)
bool Uart::_sInitialized[Uart::UART_COUNT];			// Same for other arrays

Uart::Uart(const unsigned char uartNbr, UART_HandleTypeDef * uartHandle, bool bTxDMA /* = false */)
 8013754:	b580      	push	{r7, lr}
 8013756:	b084      	sub	sp, #16
 8013758:	af00      	add	r7, sp, #0
 801375a:	60f8      	str	r0, [r7, #12]
 801375c:	607a      	str	r2, [r7, #4]
 801375e:	461a      	mov	r2, r3
 8013760:	460b      	mov	r3, r1
 8013762:	72fb      	strb	r3, [r7, #11]
 8013764:	4613      	mov	r3, r2
 8013766:	72bb      	strb	r3, [r7, #10]
 : _uartNbr(-1),
   _pUartHandle(NULL),
   _bTxDMA(bTxDMA)
 8013768:	4a1a      	ldr	r2, [pc, #104]	; (80137d4 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x80>)
 801376a:	68fb      	ldr	r3, [r7, #12]
 801376c:	601a      	str	r2, [r3, #0]
 801376e:	68fb      	ldr	r3, [r7, #12]
 8013770:	22ff      	movs	r2, #255	; 0xff
 8013772:	711a      	strb	r2, [r3, #4]
 8013774:	68fb      	ldr	r3, [r7, #12]
 8013776:	2200      	movs	r2, #0
 8013778:	609a      	str	r2, [r3, #8]
 801377a:	68fb      	ldr	r3, [r7, #12]
 801377c:	7aba      	ldrb	r2, [r7, #10]
 801377e:	731a      	strb	r2, [r3, #12]
{
	assert(uartNbr < UART_COUNT);
 8013780:	7afb      	ldrb	r3, [r7, #11]
 8013782:	2b02      	cmp	r3, #2
 8013784:	d905      	bls.n	8013792 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x3e>
 8013786:	4b14      	ldr	r3, [pc, #80]	; (80137d8 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x84>)
 8013788:	4a14      	ldr	r2, [pc, #80]	; (80137dc <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x88>)
 801378a:	2111      	movs	r1, #17
 801378c:	4814      	ldr	r0, [pc, #80]	; (80137e0 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x8c>)
 801378e:	f018 fbab 	bl	802bee8 <__assert_func>

	if (uartNbr < UART_COUNT)
 8013792:	7afb      	ldrb	r3, [r7, #11]
 8013794:	2b02      	cmp	r3, #2
 8013796:	d817      	bhi.n	80137c8 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x74>
    {
        if (!_sUart[uartNbr])
 8013798:	7afb      	ldrb	r3, [r7, #11]
 801379a:	4a12      	ldr	r2, [pc, #72]	; (80137e4 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x90>)
 801379c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80137a0:	2b00      	cmp	r3, #0
 80137a2:	d10b      	bne.n	80137bc <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x68>
        {
            // Register instance
            _sUart[uartNbr] = this;
 80137a4:	7afb      	ldrb	r3, [r7, #11]
 80137a6:	490f      	ldr	r1, [pc, #60]	; (80137e4 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x90>)
 80137a8:	68fa      	ldr	r2, [r7, #12]
 80137aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
            _uartNbr = uartNbr;
 80137ae:	68fb      	ldr	r3, [r7, #12]
 80137b0:	7afa      	ldrb	r2, [r7, #11]
 80137b2:	711a      	strb	r2, [r3, #4]

            _pUartHandle = uartHandle;
 80137b4:	68fb      	ldr	r3, [r7, #12]
 80137b6:	687a      	ldr	r2, [r7, #4]
 80137b8:	609a      	str	r2, [r3, #8]
 80137ba:	e005      	b.n	80137c8 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x74>
        }
        else
        {
            assert(false);  // Error: Instance for specified UART already exists.
 80137bc:	4b0a      	ldr	r3, [pc, #40]	; (80137e8 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x94>)
 80137be:	4a07      	ldr	r2, [pc, #28]	; (80137dc <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x88>)
 80137c0:	211f      	movs	r1, #31
 80137c2:	4807      	ldr	r0, [pc, #28]	; (80137e0 <_ZN4UartC1EhP20__UART_HandleTypeDefb+0x8c>)
 80137c4:	f018 fb90 	bl	802bee8 <__assert_func>
        }
    }
}
 80137c8:	68fb      	ldr	r3, [r7, #12]
 80137ca:	4618      	mov	r0, r3
 80137cc:	3710      	adds	r7, #16
 80137ce:	46bd      	mov	sp, r7
 80137d0:	bd80      	pop	{r7, pc}
 80137d2:	bf00      	nop
 80137d4:	0802f890 	.word	0x0802f890
 80137d8:	0802e918 	.word	0x0802e918
 80137dc:	0802e930 	.word	0x0802e930
 80137e0:	0802e968 	.word	0x0802e968
 80137e4:	200040e4 	.word	0x200040e4
 80137e8:	0802e9d8 	.word	0x0802e9d8

080137ec <_ZN4UartD1Ev>:

Uart::~Uart()
 80137ec:	b480      	push	{r7}
 80137ee:	b083      	sub	sp, #12
 80137f0:	af00      	add	r7, sp, #0
 80137f2:	6078      	str	r0, [r7, #4]
 80137f4:	4a04      	ldr	r2, [pc, #16]	; (8013808 <_ZN4UartD1Ev+0x1c>)
 80137f6:	687b      	ldr	r3, [r7, #4]
 80137f8:	601a      	str	r2, [r3, #0]
{

}
 80137fa:	687b      	ldr	r3, [r7, #4]
 80137fc:	4618      	mov	r0, r3
 80137fe:	370c      	adds	r7, #12
 8013800:	46bd      	mov	sp, r7
 8013802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013806:	4770      	bx	lr
 8013808:	0802f890 	.word	0x0802f890

0801380c <_ZN4UartD0Ev>:
Uart::~Uart()
 801380c:	b580      	push	{r7, lr}
 801380e:	b082      	sub	sp, #8
 8013810:	af00      	add	r7, sp, #0
 8013812:	6078      	str	r0, [r7, #4]
}
 8013814:	6878      	ldr	r0, [r7, #4]
 8013816:	f7ff ffe9 	bl	80137ec <_ZN4UartD1Ev>
 801381a:	2190      	movs	r1, #144	; 0x90
 801381c:	6878      	ldr	r0, [r7, #4]
 801381e:	f018 f922 	bl	802ba66 <_ZdlPvj>
 8013822:	687b      	ldr	r3, [r7, #4]
 8013824:	4618      	mov	r0, r3
 8013826:	3708      	adds	r7, #8
 8013828:	46bd      	mov	sp, r7
 801382a:	bd80      	pop	{r7, pc}

0801382c <_ZN4Uart5writeEPKcj>:
    __HAL_UART_DISABLE(_pUartHandle);
    return true;
}

void Uart::write(const char * str, unsigned int length /* = 0 */)
{
 801382c:	b580      	push	{r7, lr}
 801382e:	b084      	sub	sp, #16
 8013830:	af00      	add	r7, sp, #0
 8013832:	60f8      	str	r0, [r7, #12]
 8013834:	60b9      	str	r1, [r7, #8]
 8013836:	607a      	str	r2, [r7, #4]
	if (!length)
 8013838:	687b      	ldr	r3, [r7, #4]
 801383a:	2b00      	cmp	r3, #0
 801383c:	d103      	bne.n	8013846 <_ZN4Uart5writeEPKcj+0x1a>
	{
		length = strlen(str);
 801383e:	68b8      	ldr	r0, [r7, #8]
 8013840:	f7ec fd36 	bl	80002b0 <strlen>
 8013844:	6078      	str	r0, [r7, #4]
	}

    if (!_bTxDMA)
 8013846:	68fb      	ldr	r3, [r7, #12]
 8013848:	7b1b      	ldrb	r3, [r3, #12]
 801384a:	f083 0301 	eor.w	r3, r3, #1
 801384e:	b2db      	uxtb	r3, r3
 8013850:	2b00      	cmp	r3, #0
 8013852:	d008      	beq.n	8013866 <_ZN4Uart5writeEPKcj+0x3a>
    {   // Transmit without DMA
        // Send next character
        HAL_UART_Transmit(_pUartHandle, (uint8_t *)str, length, 50);
 8013854:	68fb      	ldr	r3, [r7, #12]
 8013856:	6898      	ldr	r0, [r3, #8]
 8013858:	687b      	ldr	r3, [r7, #4]
 801385a:	b29a      	uxth	r2, r3
 801385c:	2332      	movs	r3, #50	; 0x32
 801385e:	68b9      	ldr	r1, [r7, #8]
 8013860:	f7f4 fa3a 	bl	8007cd8 <HAL_UART_Transmit>
    }
    else
    {   // TX DMA enabled
        writeUsingDMA((const uint8_t *)str, length);
    }
}
 8013864:	e004      	b.n	8013870 <_ZN4Uart5writeEPKcj+0x44>
        writeUsingDMA((const uint8_t *)str, length);
 8013866:	687a      	ldr	r2, [r7, #4]
 8013868:	68b9      	ldr	r1, [r7, #8]
 801386a:	68f8      	ldr	r0, [r7, #12]
 801386c:	f000 f804 	bl	8013878 <_ZN4Uart13writeUsingDMAEPKhm>
}
 8013870:	bf00      	nop
 8013872:	3710      	adds	r7, #16
 8013874:	46bd      	mov	sp, r7
 8013876:	bd80      	pop	{r7, pc}

08013878 <_ZN4Uart13writeUsingDMAEPKhm>:

void Uart::writeUsingDMA(const uint8_t * str, uint32_t length)
{
 8013878:	b580      	push	{r7, lr}
 801387a:	b084      	sub	sp, #16
 801387c:	af00      	add	r7, sp, #0
 801387e:	60f8      	str	r0, [r7, #12]
 8013880:	60b9      	str	r1, [r7, #8]
 8013882:	607a      	str	r2, [r7, #4]
    assert(length <= sizeof(_pTxDmaBuffer));
 8013884:	687b      	ldr	r3, [r7, #4]
 8013886:	2b80      	cmp	r3, #128	; 0x80
 8013888:	d905      	bls.n	8013896 <_ZN4Uart13writeUsingDMAEPKhm+0x1e>
 801388a:	4b13      	ldr	r3, [pc, #76]	; (80138d8 <_ZN4Uart13writeUsingDMAEPKhm+0x60>)
 801388c:	4a13      	ldr	r2, [pc, #76]	; (80138dc <_ZN4Uart13writeUsingDMAEPKhm+0x64>)
 801388e:	2150      	movs	r1, #80	; 0x50
 8013890:	4813      	ldr	r0, [pc, #76]	; (80138e0 <_ZN4Uart13writeUsingDMAEPKhm+0x68>)
 8013892:	f018 fb29 	bl	802bee8 <__assert_func>

    // Copy data to TX DMA buffer
    ::memcpy(_pTxDmaBuffer, str, length);
 8013896:	68fb      	ldr	r3, [r7, #12]
 8013898:	330d      	adds	r3, #13
 801389a:	687a      	ldr	r2, [r7, #4]
 801389c:	68b9      	ldr	r1, [r7, #8]
 801389e:	4618      	mov	r0, r3
 80138a0:	f018 fba0 	bl	802bfe4 <memcpy>

    // Check that a Tx process is not already ongoing
    // (should never happen, but who knows!)
    while (_pUartHandle->gState != HAL_UART_STATE_READY)
 80138a4:	68fb      	ldr	r3, [r7, #12]
 80138a6:	689b      	ldr	r3, [r3, #8]
 80138a8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80138aa:	2b20      	cmp	r3, #32
 80138ac:	bf14      	ite	ne
 80138ae:	2301      	movne	r3, #1
 80138b0:	2300      	moveq	r3, #0
 80138b2:	b2db      	uxtb	r3, r3
 80138b4:	2b00      	cmp	r3, #0
 80138b6:	d001      	beq.n	80138bc <_ZN4Uart13writeUsingDMAEPKhm+0x44>
    { continue; }
 80138b8:	bf00      	nop
    while (_pUartHandle->gState != HAL_UART_STATE_READY)
 80138ba:	e7f3      	b.n	80138a4 <_ZN4Uart13writeUsingDMAEPKhm+0x2c>

    // Give data to TX DMA
    HAL_UART_Transmit_DMA(_pUartHandle, _pTxDmaBuffer, length);
 80138bc:	68fb      	ldr	r3, [r7, #12]
 80138be:	6898      	ldr	r0, [r3, #8]
 80138c0:	68fb      	ldr	r3, [r7, #12]
 80138c2:	330d      	adds	r3, #13
 80138c4:	687a      	ldr	r2, [r7, #4]
 80138c6:	b292      	uxth	r2, r2
 80138c8:	4619      	mov	r1, r3
 80138ca:	f7f4 fa99 	bl	8007e00 <HAL_UART_Transmit_DMA>
}
 80138ce:	bf00      	nop
 80138d0:	3710      	adds	r7, #16
 80138d2:	46bd      	mov	sp, r7
 80138d4:	bd80      	pop	{r7, pc}
 80138d6:	bf00      	nop
 80138d8:	0802e9e0 	.word	0x0802e9e0
 80138dc:	0802ea00 	.word	0x0802ea00
 80138e0:	0802e968 	.word	0x0802e968

080138e4 <_ZN7XFEvent11setBehaviorEPN9interface10XFReactiveE>:
    inline void setBehavior(interface::XFReactive * pBehavior) { pBehavior_ = pBehavior; }
 80138e4:	b480      	push	{r7}
 80138e6:	b083      	sub	sp, #12
 80138e8:	af00      	add	r7, sp, #0
 80138ea:	6078      	str	r0, [r7, #4]
 80138ec:	6039      	str	r1, [r7, #0]
 80138ee:	687b      	ldr	r3, [r7, #4]
 80138f0:	683a      	ldr	r2, [r7, #0]
 80138f2:	60da      	str	r2, [r3, #12]
 80138f4:	bf00      	nop
 80138f6:	370c      	adds	r7, #12
 80138f8:	46bd      	mov	sp, r7
 80138fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80138fe:	4770      	bx	lr

08013900 <_ZNK13XFEventStatuseqERKNS_12eEventStatusE>:

	/**
	 * Checks if both variables contain the same event status.
	 */
    bool operator == (const XFEventStatus::eEventStatus & eventStatus) const
 8013900:	b480      	push	{r7}
 8013902:	b083      	sub	sp, #12
 8013904:	af00      	add	r7, sp, #0
 8013906:	6078      	str	r0, [r7, #4]
 8013908:	6039      	str	r1, [r7, #0]
	{
        return (this->status_ == eventStatus);
 801390a:	687b      	ldr	r3, [r7, #4]
 801390c:	781a      	ldrb	r2, [r3, #0]
 801390e:	683b      	ldr	r3, [r7, #0]
 8013910:	781b      	ldrb	r3, [r3, #0]
 8013912:	429a      	cmp	r2, r3
 8013914:	bf0c      	ite	eq
 8013916:	2301      	moveq	r3, #1
 8013918:	2300      	movne	r3, #0
 801391a:	b2db      	uxtb	r3, r3
	}
 801391c:	4618      	mov	r0, r3
 801391e:	370c      	adds	r7, #12
 8013920:	46bd      	mov	sp, r7
 8013922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013926:	4770      	bx	lr

08013928 <_ZNK10XFBehavior16hasOwnDispatcherEv>:
    inline bool hasOwnDispatcher() const { return hasOwnDispatcher_; }	///< True if behavior has its own dispatcher.
 8013928:	b480      	push	{r7}
 801392a:	b083      	sub	sp, #12
 801392c:	af00      	add	r7, sp, #0
 801392e:	6078      	str	r0, [r7, #4]
 8013930:	687b      	ldr	r3, [r7, #4]
 8013932:	7a1b      	ldrb	r3, [r3, #8]
 8013934:	4618      	mov	r0, r3
 8013936:	370c      	adds	r7, #12
 8013938:	46bd      	mov	sp, r7
 801393a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801393e:	4770      	bx	lr

08013940 <_ZN9interface10XFReactiveC1Ev>:

protected:
    virtual TerminateBehavior process(const XFEvent * pEvent) = 0;  ///< Called by the dispatcher to process an event.

protected:
    XFReactive() = default;
 8013940:	b480      	push	{r7}
 8013942:	b083      	sub	sp, #12
 8013944:	af00      	add	r7, sp, #0
 8013946:	6078      	str	r0, [r7, #4]
 8013948:	4a04      	ldr	r2, [pc, #16]	; (801395c <_ZN9interface10XFReactiveC1Ev+0x1c>)
 801394a:	687b      	ldr	r3, [r7, #4]
 801394c:	601a      	str	r2, [r3, #0]
 801394e:	687b      	ldr	r3, [r7, #4]
 8013950:	4618      	mov	r0, r3
 8013952:	370c      	adds	r7, #12
 8013954:	46bd      	mov	sp, r7
 8013956:	f85d 7b04 	ldr.w	r7, [sp], #4
 801395a:	4770      	bx	lr
 801395c:	0802f8c8 	.word	0x0802f8c8

08013960 <_ZN9interface10XFReactiveD1Ev>:
    virtual ~XFReactive() = default;
 8013960:	b480      	push	{r7}
 8013962:	b083      	sub	sp, #12
 8013964:	af00      	add	r7, sp, #0
 8013966:	6078      	str	r0, [r7, #4]
 8013968:	4a04      	ldr	r2, [pc, #16]	; (801397c <_ZN9interface10XFReactiveD1Ev+0x1c>)
 801396a:	687b      	ldr	r3, [r7, #4]
 801396c:	601a      	str	r2, [r3, #0]
 801396e:	687b      	ldr	r3, [r7, #4]
 8013970:	4618      	mov	r0, r3
 8013972:	370c      	adds	r7, #12
 8013974:	46bd      	mov	sp, r7
 8013976:	f85d 7b04 	ldr.w	r7, [sp], #4
 801397a:	4770      	bx	lr
 801397c:	0802f8c8 	.word	0x0802f8c8

08013980 <_ZN9interface10XFReactiveD0Ev>:
 8013980:	b580      	push	{r7, lr}
 8013982:	b082      	sub	sp, #8
 8013984:	af00      	add	r7, sp, #0
 8013986:	6078      	str	r0, [r7, #4]
 8013988:	6878      	ldr	r0, [r7, #4]
 801398a:	f7ff ffe9 	bl	8013960 <_ZN9interface10XFReactiveD1Ev>
 801398e:	2104      	movs	r1, #4
 8013990:	6878      	ldr	r0, [r7, #4]
 8013992:	f018 f868 	bl	802ba66 <_ZdlPvj>
 8013996:	687b      	ldr	r3, [r7, #4]
 8013998:	4618      	mov	r0, r3
 801399a:	3708      	adds	r7, #8
 801399c:	46bd      	mov	sp, r7
 801399e:	bd80      	pop	{r7, pc}

080139a0 <_ZN10XFBehaviorC1Eb>:
#include "xf/initialevent.h"
#include "xf/behavior.h"

using interface::XFResourceFactory;

XFBehavior::XFBehavior(bool ownDispatcher /* = false */) :
 80139a0:	b590      	push	{r4, r7, lr}
 80139a2:	b083      	sub	sp, #12
 80139a4:	af00      	add	r7, sp, #0
 80139a6:	6078      	str	r0, [r7, #4]
 80139a8:	460b      	mov	r3, r1
 80139aa:	70fb      	strb	r3, [r7, #3]
    pDispatcher_(nullptr),
    hasOwnDispatcher_(ownDispatcher),
    deleteOnTerminate_(false),
    pCurrentEvent_(nullptr)
 80139ac:	687b      	ldr	r3, [r7, #4]
 80139ae:	4618      	mov	r0, r3
 80139b0:	f7ff ffc6 	bl	8013940 <_ZN9interface10XFReactiveC1Ev>
 80139b4:	4a20      	ldr	r2, [pc, #128]	; (8013a38 <_ZN10XFBehaviorC1Eb+0x98>)
 80139b6:	687b      	ldr	r3, [r7, #4]
 80139b8:	601a      	str	r2, [r3, #0]
 80139ba:	687b      	ldr	r3, [r7, #4]
 80139bc:	2200      	movs	r2, #0
 80139be:	605a      	str	r2, [r3, #4]
 80139c0:	687b      	ldr	r3, [r7, #4]
 80139c2:	78fa      	ldrb	r2, [r7, #3]
 80139c4:	721a      	strb	r2, [r3, #8]
 80139c6:	687b      	ldr	r3, [r7, #4]
 80139c8:	2200      	movs	r2, #0
 80139ca:	725a      	strb	r2, [r3, #9]
 80139cc:	687b      	ldr	r3, [r7, #4]
 80139ce:	2200      	movs	r2, #0
 80139d0:	60da      	str	r2, [r3, #12]
{
    if (ownDispatcher)
 80139d2:	78fb      	ldrb	r3, [r7, #3]
 80139d4:	2b00      	cmp	r3, #0
 80139d6:	d00b      	beq.n	80139f0 <_ZN10XFBehaviorC1Eb+0x50>
    {
        pDispatcher_ = XFResourceFactory::getInstance()->createDispatcher();
 80139d8:	f000 fbfe 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 80139dc:	4603      	mov	r3, r0
 80139de:	681a      	ldr	r2, [r3, #0]
 80139e0:	3204      	adds	r2, #4
 80139e2:	6812      	ldr	r2, [r2, #0]
 80139e4:	4618      	mov	r0, r3
 80139e6:	4790      	blx	r2
 80139e8:	4602      	mov	r2, r0
 80139ea:	687b      	ldr	r3, [r7, #4]
 80139ec:	605a      	str	r2, [r3, #4]
 80139ee:	e009      	b.n	8013a04 <_ZN10XFBehaviorC1Eb+0x64>
    }
    else
    {
        pDispatcher_ = XFResourceFactory::getInstance()->getDefaultDispatcher();
 80139f0:	f000 fbf2 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 80139f4:	4603      	mov	r3, r0
 80139f6:	681a      	ldr	r2, [r3, #0]
 80139f8:	6812      	ldr	r2, [r2, #0]
 80139fa:	4618      	mov	r0, r3
 80139fc:	4790      	blx	r2
 80139fe:	4602      	mov	r2, r0
 8013a00:	687b      	ldr	r3, [r7, #4]
 8013a02:	605a      	str	r2, [r3, #4]

    // Force hasOwnDispatcher attribute to false in case actual
    // dispatcher is the default dispatcher. This may happen
    // if in an IDF an other dispatcher is requested, but
    // only the default dispatcher is present.
    if (pDispatcher_ == XFResourceFactory::getInstance()->getDefaultDispatcher())
 8013a04:	687b      	ldr	r3, [r7, #4]
 8013a06:	685c      	ldr	r4, [r3, #4]
 8013a08:	f000 fbe6 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 8013a0c:	4603      	mov	r3, r0
 8013a0e:	681a      	ldr	r2, [r3, #0]
 8013a10:	6812      	ldr	r2, [r2, #0]
 8013a12:	4618      	mov	r0, r3
 8013a14:	4790      	blx	r2
 8013a16:	4603      	mov	r3, r0
 8013a18:	429c      	cmp	r4, r3
 8013a1a:	bf0c      	ite	eq
 8013a1c:	2301      	moveq	r3, #1
 8013a1e:	2300      	movne	r3, #0
 8013a20:	b2db      	uxtb	r3, r3
 8013a22:	2b00      	cmp	r3, #0
 8013a24:	d002      	beq.n	8013a2c <_ZN10XFBehaviorC1Eb+0x8c>
    {
        hasOwnDispatcher_ = false;
 8013a26:	687b      	ldr	r3, [r7, #4]
 8013a28:	2200      	movs	r2, #0
 8013a2a:	721a      	strb	r2, [r3, #8]
    }
}
 8013a2c:	687b      	ldr	r3, [r7, #4]
 8013a2e:	4618      	mov	r0, r3
 8013a30:	370c      	adds	r7, #12
 8013a32:	46bd      	mov	sp, r7
 8013a34:	bd90      	pop	{r4, r7, pc}
 8013a36:	bf00      	nop
 8013a38:	0802f8a0 	.word	0x0802f8a0

08013a3c <_ZN10XFBehaviorD1Ev>:

XFBehavior::~XFBehavior()
 8013a3c:	b580      	push	{r7, lr}
 8013a3e:	b082      	sub	sp, #8
 8013a40:	af00      	add	r7, sp, #0
 8013a42:	6078      	str	r0, [r7, #4]
 8013a44:	4a05      	ldr	r2, [pc, #20]	; (8013a5c <_ZN10XFBehaviorD1Ev+0x20>)
 8013a46:	687b      	ldr	r3, [r7, #4]
 8013a48:	601a      	str	r2, [r3, #0]
 8013a4a:	687b      	ldr	r3, [r7, #4]
 8013a4c:	4618      	mov	r0, r3
 8013a4e:	f7ff ff87 	bl	8013960 <_ZN9interface10XFReactiveD1Ev>
{

}
 8013a52:	687b      	ldr	r3, [r7, #4]
 8013a54:	4618      	mov	r0, r3
 8013a56:	3708      	adds	r7, #8
 8013a58:	46bd      	mov	sp, r7
 8013a5a:	bd80      	pop	{r7, pc}
 8013a5c:	0802f8a0 	.word	0x0802f8a0

08013a60 <_ZN10XFBehavior13startBehaviorEv>:

void XFBehavior::startBehavior()
{
 8013a60:	b5b0      	push	{r4, r5, r7, lr}
 8013a62:	b082      	sub	sp, #8
 8013a64:	af00      	add	r7, sp, #0
 8013a66:	6078      	str	r0, [r7, #4]
    // Send initial event to state machine
    GEN(XFInitialEvent());
 8013a68:	687b      	ldr	r3, [r7, #4]
 8013a6a:	681b      	ldr	r3, [r3, #0]
 8013a6c:	330c      	adds	r3, #12
 8013a6e:	681c      	ldr	r4, [r3, #0]
 8013a70:	2010      	movs	r0, #16
 8013a72:	f018 f809 	bl	802ba88 <_Znwj>
 8013a76:	4603      	mov	r3, r0
 8013a78:	461d      	mov	r5, r3
 8013a7a:	4628      	mov	r0, r5
 8013a7c:	f000 f8da 	bl	8013c34 <_ZN14XFInitialEventC1Ev>
 8013a80:	2200      	movs	r2, #0
 8013a82:	4629      	mov	r1, r5
 8013a84:	6878      	ldr	r0, [r7, #4]
 8013a86:	47a0      	blx	r4

    // Start dispatcher if behavior has its own dispatcher
    if (hasOwnDispatcher())
 8013a88:	6878      	ldr	r0, [r7, #4]
 8013a8a:	f7ff ff4d 	bl	8013928 <_ZNK10XFBehavior16hasOwnDispatcherEv>
 8013a8e:	4603      	mov	r3, r0
 8013a90:	2b00      	cmp	r3, #0
 8013a92:	d008      	beq.n	8013aa6 <_ZN10XFBehavior13startBehaviorEv+0x46>
    {
        getDispatcher()->start();
 8013a94:	6878      	ldr	r0, [r7, #4]
 8013a96:	f000 f86a 	bl	8013b6e <_ZN10XFBehavior13getDispatcherEv>
 8013a9a:	4603      	mov	r3, r0
 8013a9c:	681a      	ldr	r2, [r3, #0]
 8013a9e:	320c      	adds	r2, #12
 8013aa0:	6812      	ldr	r2, [r2, #0]
 8013aa2:	4618      	mov	r0, r3
 8013aa4:	4790      	blx	r2
    }
}
 8013aa6:	bf00      	nop
 8013aa8:	3708      	adds	r7, #8
 8013aaa:	46bd      	mov	sp, r7
 8013aac:	bdb0      	pop	{r4, r5, r7, pc}

08013aae <_ZN10XFBehavior9pushEventEP7XFEventb>:

void XFBehavior::pushEvent(XFEvent * pEvent, bool fromISR)
{
 8013aae:	b590      	push	{r4, r7, lr}
 8013ab0:	b085      	sub	sp, #20
 8013ab2:	af00      	add	r7, sp, #0
 8013ab4:	60f8      	str	r0, [r7, #12]
 8013ab6:	60b9      	str	r1, [r7, #8]
 8013ab8:	4613      	mov	r3, r2
 8013aba:	71fb      	strb	r3, [r7, #7]
    // Set owner
    pEvent->setBehavior(this);
 8013abc:	68fb      	ldr	r3, [r7, #12]
 8013abe:	4619      	mov	r1, r3
 8013ac0:	68b8      	ldr	r0, [r7, #8]
 8013ac2:	f7ff ff0f 	bl	80138e4 <_ZN7XFEvent11setBehaviorEPN9interface10XFReactiveE>
    // Push to dispatchers event queue
    getDispatcher()->pushEvent(pEvent, fromISR);
 8013ac6:	68f8      	ldr	r0, [r7, #12]
 8013ac8:	f000 f851 	bl	8013b6e <_ZN10XFBehavior13getDispatcherEv>
 8013acc:	4603      	mov	r3, r0
 8013ace:	681a      	ldr	r2, [r3, #0]
 8013ad0:	3214      	adds	r2, #20
 8013ad2:	6814      	ldr	r4, [r2, #0]
 8013ad4:	79fa      	ldrb	r2, [r7, #7]
 8013ad6:	68b9      	ldr	r1, [r7, #8]
 8013ad8:	4618      	mov	r0, r3
 8013ada:	47a0      	blx	r4
}
 8013adc:	bf00      	nop
 8013ade:	3714      	adds	r7, #20
 8013ae0:	46bd      	mov	sp, r7
 8013ae2:	bd90      	pop	{r4, r7, pc}

08013ae4 <_ZNK10XFBehavior17deleteOnTerminateEv>:

bool XFBehavior::deleteOnTerminate() const
{
 8013ae4:	b480      	push	{r7}
 8013ae6:	b083      	sub	sp, #12
 8013ae8:	af00      	add	r7, sp, #0
 8013aea:	6078      	str	r0, [r7, #4]
    return deleteOnTerminate_;
 8013aec:	687b      	ldr	r3, [r7, #4]
 8013aee:	7a5b      	ldrb	r3, [r3, #9]
}
 8013af0:	4618      	mov	r0, r3
 8013af2:	370c      	adds	r7, #12
 8013af4:	46bd      	mov	sp, r7
 8013af6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013afa:	4770      	bx	lr

08013afc <_ZN10XFBehavior20setDeleteOnTerminateEb>:

void XFBehavior::setDeleteOnTerminate(bool deleteBehaviour)
{
 8013afc:	b480      	push	{r7}
 8013afe:	b083      	sub	sp, #12
 8013b00:	af00      	add	r7, sp, #0
 8013b02:	6078      	str	r0, [r7, #4]
 8013b04:	460b      	mov	r3, r1
 8013b06:	70fb      	strb	r3, [r7, #3]
    deleteOnTerminate_ = deleteBehaviour;
 8013b08:	687b      	ldr	r3, [r7, #4]
 8013b0a:	78fa      	ldrb	r2, [r7, #3]
 8013b0c:	725a      	strb	r2, [r3, #9]
}
 8013b0e:	bf00      	nop
 8013b10:	370c      	adds	r7, #12
 8013b12:	46bd      	mov	sp, r7
 8013b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013b18:	4770      	bx	lr

08013b1a <_ZN10XFBehavior7processEPK7XFEvent>:

XFBehavior::TerminateBehavior XFBehavior::process(const XFEvent * pEvent)
{
 8013b1a:	b580      	push	{r7, lr}
 8013b1c:	b084      	sub	sp, #16
 8013b1e:	af00      	add	r7, sp, #0
 8013b20:	6078      	str	r0, [r7, #4]
 8013b22:	6039      	str	r1, [r7, #0]
    XFEventStatus eventStatus;
 8013b24:	f107 030c 	add.w	r3, r7, #12
 8013b28:	2100      	movs	r1, #0
 8013b2a:	4618      	mov	r0, r3
 8013b2c:	f7fd fd95 	bl	801165a <_ZN13XFEventStatusC1ENS_12eEventStatusE>

    setCurrentEvent(pEvent);
 8013b30:	6839      	ldr	r1, [r7, #0]
 8013b32:	6878      	ldr	r0, [r7, #4]
 8013b34:	f000 f827 	bl	8013b86 <_ZN10XFBehavior15setCurrentEventEPK7XFEvent>

    eventStatus = processEvent();
 8013b38:	687b      	ldr	r3, [r7, #4]
 8013b3a:	681b      	ldr	r3, [r3, #0]
 8013b3c:	331c      	adds	r3, #28
 8013b3e:	681b      	ldr	r3, [r3, #0]
 8013b40:	6878      	ldr	r0, [r7, #4]
 8013b42:	4798      	blx	r3
 8013b44:	4603      	mov	r3, r0
 8013b46:	733b      	strb	r3, [r7, #12]

    setCurrentEvent(nullptr);
 8013b48:	2100      	movs	r1, #0
 8013b4a:	6878      	ldr	r0, [r7, #4]
 8013b4c:	f000 f81b 	bl	8013b86 <_ZN10XFBehavior15setCurrentEventEPK7XFEvent>

    return (eventStatus == XFEventStatus::Terminate);
 8013b50:	2308      	movs	r3, #8
 8013b52:	73fb      	strb	r3, [r7, #15]
 8013b54:	f107 020f 	add.w	r2, r7, #15
 8013b58:	f107 030c 	add.w	r3, r7, #12
 8013b5c:	4611      	mov	r1, r2
 8013b5e:	4618      	mov	r0, r3
 8013b60:	f7ff fece 	bl	8013900 <_ZNK13XFEventStatuseqERKNS_12eEventStatusE>
 8013b64:	4603      	mov	r3, r0
}
 8013b66:	4618      	mov	r0, r3
 8013b68:	3710      	adds	r7, #16
 8013b6a:	46bd      	mov	sp, r7
 8013b6c:	bd80      	pop	{r7, pc}

08013b6e <_ZN10XFBehavior13getDispatcherEv>:

interface::XFDispatcher * XFBehavior::getDispatcher()
{
 8013b6e:	b480      	push	{r7}
 8013b70:	b083      	sub	sp, #12
 8013b72:	af00      	add	r7, sp, #0
 8013b74:	6078      	str	r0, [r7, #4]
    return pDispatcher_;
 8013b76:	687b      	ldr	r3, [r7, #4]
 8013b78:	685b      	ldr	r3, [r3, #4]
}
 8013b7a:	4618      	mov	r0, r3
 8013b7c:	370c      	adds	r7, #12
 8013b7e:	46bd      	mov	sp, r7
 8013b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013b84:	4770      	bx	lr

08013b86 <_ZN10XFBehavior15setCurrentEventEPK7XFEvent>:

void XFBehavior::setCurrentEvent(const XFEvent * pEvent)
{
 8013b86:	b480      	push	{r7}
 8013b88:	b083      	sub	sp, #12
 8013b8a:	af00      	add	r7, sp, #0
 8013b8c:	6078      	str	r0, [r7, #4]
 8013b8e:	6039      	str	r1, [r7, #0]
    pCurrentEvent_ = pEvent;
 8013b90:	687b      	ldr	r3, [r7, #4]
 8013b92:	683a      	ldr	r2, [r7, #0]
 8013b94:	60da      	str	r2, [r3, #12]
}
 8013b96:	bf00      	nop
 8013b98:	370c      	adds	r7, #12
 8013b9a:	46bd      	mov	sp, r7
 8013b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013ba0:	4770      	bx	lr

08013ba2 <_ZNK10XFBehavior15getCurrentEventEv>:

const XFEvent * XFBehavior::getCurrentEvent() const
{
 8013ba2:	b480      	push	{r7}
 8013ba4:	b083      	sub	sp, #12
 8013ba6:	af00      	add	r7, sp, #0
 8013ba8:	6078      	str	r0, [r7, #4]
    return pCurrentEvent_;
 8013baa:	687b      	ldr	r3, [r7, #4]
 8013bac:	68db      	ldr	r3, [r3, #12]
}
 8013bae:	4618      	mov	r0, r3
 8013bb0:	370c      	adds	r7, #12
 8013bb2:	46bd      	mov	sp, r7
 8013bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013bb8:	4770      	bx	lr
	...

08013bbc <_ZN10XFBehavior17getCurrentTimeoutEv>:

const XFTimeout * XFBehavior::getCurrentTimeout()
{
 8013bbc:	b580      	push	{r7, lr}
 8013bbe:	b082      	sub	sp, #8
 8013bc0:	af00      	add	r7, sp, #0
 8013bc2:	6078      	str	r0, [r7, #4]
    assert(getCurrentEvent()->getEventType() == XFEvent::Timeout);
 8013bc4:	6878      	ldr	r0, [r7, #4]
 8013bc6:	f7ff ffec 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8013bca:	4603      	mov	r3, r0
 8013bcc:	4618      	mov	r0, r3
 8013bce:	f7fd fd2b 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 8013bd2:	4603      	mov	r3, r0
 8013bd4:	2b04      	cmp	r3, #4
 8013bd6:	d005      	beq.n	8013be4 <_ZN10XFBehavior17getCurrentTimeoutEv+0x28>
 8013bd8:	4b06      	ldr	r3, [pc, #24]	; (8013bf4 <_ZN10XFBehavior17getCurrentTimeoutEv+0x38>)
 8013bda:	4a07      	ldr	r2, [pc, #28]	; (8013bf8 <_ZN10XFBehavior17getCurrentTimeoutEv+0x3c>)
 8013bdc:	2165      	movs	r1, #101	; 0x65
 8013bde:	4807      	ldr	r0, [pc, #28]	; (8013bfc <_ZN10XFBehavior17getCurrentTimeoutEv+0x40>)
 8013be0:	f018 f982 	bl	802bee8 <__assert_func>

    return static_cast<const XFTimeout *>(getCurrentEvent());
 8013be4:	6878      	ldr	r0, [r7, #4]
 8013be6:	f7ff ffdc 	bl	8013ba2 <_ZNK10XFBehavior15getCurrentEventEv>
 8013bea:	4603      	mov	r3, r0
}
 8013bec:	4618      	mov	r0, r3
 8013bee:	3708      	adds	r7, #8
 8013bf0:	46bd      	mov	sp, r7
 8013bf2:	bd80      	pop	{r7, pc}
 8013bf4:	0802ea34 	.word	0x0802ea34
 8013bf8:	0802ea6c 	.word	0x0802ea6c
 8013bfc:	0802eaa0 	.word	0x0802eaa0

08013c00 <_ZN13XFCustomEventC1EiPN9interface10XFReactiveE>:
#include "xf/customevent.h"

XFCustomEvent::XFCustomEvent(int id, interface::XFReactive * pBehavior)
 8013c00:	b580      	push	{r7, lr}
 8013c02:	b084      	sub	sp, #16
 8013c04:	af00      	add	r7, sp, #0
 8013c06:	60f8      	str	r0, [r7, #12]
 8013c08:	60b9      	str	r1, [r7, #8]
 8013c0a:	607a      	str	r2, [r7, #4]
    : XFEvent(XFEvent::Event, id, pBehavior),
      bDeleteAfterConsume_(true)
 8013c0c:	68f8      	ldr	r0, [r7, #12]
 8013c0e:	687b      	ldr	r3, [r7, #4]
 8013c10:	68ba      	ldr	r2, [r7, #8]
 8013c12:	2103      	movs	r1, #3
 8013c14:	f7fe fa14 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 8013c18:	4a05      	ldr	r2, [pc, #20]	; (8013c30 <_ZN13XFCustomEventC1EiPN9interface10XFReactiveE+0x30>)
 8013c1a:	68fb      	ldr	r3, [r7, #12]
 8013c1c:	601a      	str	r2, [r3, #0]
 8013c1e:	68fb      	ldr	r3, [r7, #12]
 8013c20:	2201      	movs	r2, #1
 8013c22:	741a      	strb	r2, [r3, #16]
{

}
 8013c24:	68fb      	ldr	r3, [r7, #12]
 8013c26:	4618      	mov	r0, r3
 8013c28:	3710      	adds	r7, #16
 8013c2a:	46bd      	mov	sp, r7
 8013c2c:	bd80      	pop	{r7, pc}
 8013c2e:	bf00      	nop
 8013c30:	0802f7d4 	.word	0x0802f7d4

08013c34 <_ZN14XFInitialEventC1Ev>:
#include "xf/initialevent.h"

XFInitialEvent::XFInitialEvent()
 8013c34:	b580      	push	{r7, lr}
 8013c36:	b082      	sub	sp, #8
 8013c38:	af00      	add	r7, sp, #0
 8013c3a:	6078      	str	r0, [r7, #4]
    : XFEvent(XFEvent::Initial, 0, nullptr)
 8013c3c:	6878      	ldr	r0, [r7, #4]
 8013c3e:	2300      	movs	r3, #0
 8013c40:	2200      	movs	r2, #0
 8013c42:	2101      	movs	r1, #1
 8013c44:	f7fe f9fc 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 8013c48:	4a03      	ldr	r2, [pc, #12]	; (8013c58 <_ZN14XFInitialEventC1Ev+0x24>)
 8013c4a:	687b      	ldr	r3, [r7, #4]
 8013c4c:	601a      	str	r2, [r3, #0]
{
}
 8013c4e:	687b      	ldr	r3, [r7, #4]
 8013c50:	4618      	mov	r0, r3
 8013c52:	3708      	adds	r7, #8
 8013c54:	46bd      	mov	sp, r7
 8013c56:	bd80      	pop	{r7, pc}
 8013c58:	0802f8ec 	.word	0x0802f8ec

08013c5c <_ZNK14XFInitialEvent18deleteAfterConsumeEv>:

bool XFInitialEvent::deleteAfterConsume() const
{
 8013c5c:	b480      	push	{r7}
 8013c5e:	b083      	sub	sp, #12
 8013c60:	af00      	add	r7, sp, #0
 8013c62:	6078      	str	r0, [r7, #4]
    return true;
 8013c64:	2301      	movs	r3, #1
}
 8013c66:	4618      	mov	r0, r3
 8013c68:	370c      	adds	r7, #12
 8013c6a:	46bd      	mov	sp, r7
 8013c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013c70:	4770      	bx	lr
	...

08013c74 <_ZN14XFInitialEventD1Ev>:
 * @brief Initial event to start a behavior.
 *
 * Represents for example the first transition executed
 * in a state machine.
 */
class XFInitialEvent : public XFEvent
 8013c74:	b580      	push	{r7, lr}
 8013c76:	b082      	sub	sp, #8
 8013c78:	af00      	add	r7, sp, #0
 8013c7a:	6078      	str	r0, [r7, #4]
 8013c7c:	4a05      	ldr	r2, [pc, #20]	; (8013c94 <_ZN14XFInitialEventD1Ev+0x20>)
 8013c7e:	687b      	ldr	r3, [r7, #4]
 8013c80:	601a      	str	r2, [r3, #0]
 8013c82:	687b      	ldr	r3, [r7, #4]
 8013c84:	4618      	mov	r0, r3
 8013c86:	f7fe f9f9 	bl	801207c <_ZN7XFEventD1Ev>
 8013c8a:	687b      	ldr	r3, [r7, #4]
 8013c8c:	4618      	mov	r0, r3
 8013c8e:	3708      	adds	r7, #8
 8013c90:	46bd      	mov	sp, r7
 8013c92:	bd80      	pop	{r7, pc}
 8013c94:	0802f8ec 	.word	0x0802f8ec

08013c98 <_ZN14XFInitialEventD0Ev>:
 8013c98:	b580      	push	{r7, lr}
 8013c9a:	b082      	sub	sp, #8
 8013c9c:	af00      	add	r7, sp, #0
 8013c9e:	6078      	str	r0, [r7, #4]
 8013ca0:	6878      	ldr	r0, [r7, #4]
 8013ca2:	f7ff ffe7 	bl	8013c74 <_ZN14XFInitialEventD1Ev>
 8013ca6:	2110      	movs	r1, #16
 8013ca8:	6878      	ldr	r0, [r7, #4]
 8013caa:	f017 fedc 	bl	802ba66 <_ZdlPvj>
 8013cae:	687b      	ldr	r3, [r7, #4]
 8013cb0:	4618      	mov	r0, r3
 8013cb2:	3708      	adds	r7, #8
 8013cb4:	46bd      	mov	sp, r7
 8013cb6:	bd80      	pop	{r7, pc}

08013cb8 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE>:
#include "xf/nulltransition.h"

XFNullTransition::XFNullTransition(interface::XFReactive * pBehavior)
 8013cb8:	b580      	push	{r7, lr}
 8013cba:	b082      	sub	sp, #8
 8013cbc:	af00      	add	r7, sp, #0
 8013cbe:	6078      	str	r0, [r7, #4]
 8013cc0:	6039      	str	r1, [r7, #0]
 : XFEvent(XFEvent::NullTransition, 0, pBehavior)
 8013cc2:	6878      	ldr	r0, [r7, #4]
 8013cc4:	683b      	ldr	r3, [r7, #0]
 8013cc6:	2200      	movs	r2, #0
 8013cc8:	2102      	movs	r1, #2
 8013cca:	f7fe f9b9 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 8013cce:	4a04      	ldr	r2, [pc, #16]	; (8013ce0 <_ZN16XFNullTransitionC1EPN9interface10XFReactiveE+0x28>)
 8013cd0:	687b      	ldr	r3, [r7, #4]
 8013cd2:	601a      	str	r2, [r3, #0]
{
}
 8013cd4:	687b      	ldr	r3, [r7, #4]
 8013cd6:	4618      	mov	r0, r3
 8013cd8:	3708      	adds	r7, #8
 8013cda:	46bd      	mov	sp, r7
 8013cdc:	bd80      	pop	{r7, pc}
 8013cde:	bf00      	nop
 8013ce0:	0802f900 	.word	0x0802f900

08013ce4 <_ZNK16XFNullTransition18deleteAfterConsumeEv>:

bool XFNullTransition::deleteAfterConsume() const
{
 8013ce4:	b480      	push	{r7}
 8013ce6:	b083      	sub	sp, #12
 8013ce8:	af00      	add	r7, sp, #0
 8013cea:	6078      	str	r0, [r7, #4]
    return true;
 8013cec:	2301      	movs	r3, #1
}
 8013cee:	4618      	mov	r0, r3
 8013cf0:	370c      	adds	r7, #12
 8013cf2:	46bd      	mov	sp, r7
 8013cf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013cf8:	4770      	bx	lr
	...

08013cfc <_ZN16XFNullTransitionD1Ev>:
 * Represents a transition in a state machine having no trigger.
 *
 * In case one wants to directly transition from one state to
 * an other (without a trigger) a null transition must be pushed.
 */
class XFNullTransition : public XFEvent
 8013cfc:	b580      	push	{r7, lr}
 8013cfe:	b082      	sub	sp, #8
 8013d00:	af00      	add	r7, sp, #0
 8013d02:	6078      	str	r0, [r7, #4]
 8013d04:	4a05      	ldr	r2, [pc, #20]	; (8013d1c <_ZN16XFNullTransitionD1Ev+0x20>)
 8013d06:	687b      	ldr	r3, [r7, #4]
 8013d08:	601a      	str	r2, [r3, #0]
 8013d0a:	687b      	ldr	r3, [r7, #4]
 8013d0c:	4618      	mov	r0, r3
 8013d0e:	f7fe f9b5 	bl	801207c <_ZN7XFEventD1Ev>
 8013d12:	687b      	ldr	r3, [r7, #4]
 8013d14:	4618      	mov	r0, r3
 8013d16:	3708      	adds	r7, #8
 8013d18:	46bd      	mov	sp, r7
 8013d1a:	bd80      	pop	{r7, pc}
 8013d1c:	0802f900 	.word	0x0802f900

08013d20 <_ZN16XFNullTransitionD0Ev>:
 8013d20:	b580      	push	{r7, lr}
 8013d22:	b082      	sub	sp, #8
 8013d24:	af00      	add	r7, sp, #0
 8013d26:	6078      	str	r0, [r7, #4]
 8013d28:	6878      	ldr	r0, [r7, #4]
 8013d2a:	f7ff ffe7 	bl	8013cfc <_ZN16XFNullTransitionD1Ev>
 8013d2e:	2110      	movs	r1, #16
 8013d30:	6878      	ldr	r0, [r7, #4]
 8013d32:	f017 fe98 	bl	802ba66 <_ZdlPvj>
 8013d36:	687b      	ldr	r3, [r7, #4]
 8013d38:	4618      	mov	r0, r3
 8013d3a:	3708      	adds	r7, #8
 8013d3c:	46bd      	mov	sp, r7
 8013d3e:	bd80      	pop	{r7, pc}

08013d40 <_ZN9XFTimeoutC1EiiPN9interface10XFReactiveE>:
#include "xf/timeout.h"

XFTimeout::XFTimeout(int id, int interval, interface::XFReactive * pBehavior)
 8013d40:	b580      	push	{r7, lr}
 8013d42:	b084      	sub	sp, #16
 8013d44:	af00      	add	r7, sp, #0
 8013d46:	60f8      	str	r0, [r7, #12]
 8013d48:	60b9      	str	r1, [r7, #8]
 8013d4a:	607a      	str	r2, [r7, #4]
 8013d4c:	603b      	str	r3, [r7, #0]
 : XFEvent(XFEvent::Timeout, id, pBehavior),
   interval_(interval),
   relTicks_(interval)
 8013d4e:	68f8      	ldr	r0, [r7, #12]
 8013d50:	683b      	ldr	r3, [r7, #0]
 8013d52:	68ba      	ldr	r2, [r7, #8]
 8013d54:	2104      	movs	r1, #4
 8013d56:	f7fe f973 	bl	8012040 <_ZN7XFEventC1ENS_11XFEventTypeEiPN9interface10XFReactiveE>
 8013d5a:	4a07      	ldr	r2, [pc, #28]	; (8013d78 <_ZN9XFTimeoutC1EiiPN9interface10XFReactiveE+0x38>)
 8013d5c:	68fb      	ldr	r3, [r7, #12]
 8013d5e:	601a      	str	r2, [r3, #0]
 8013d60:	68fb      	ldr	r3, [r7, #12]
 8013d62:	687a      	ldr	r2, [r7, #4]
 8013d64:	611a      	str	r2, [r3, #16]
 8013d66:	68fb      	ldr	r3, [r7, #12]
 8013d68:	687a      	ldr	r2, [r7, #4]
 8013d6a:	615a      	str	r2, [r3, #20]
{
}
 8013d6c:	68fb      	ldr	r3, [r7, #12]
 8013d6e:	4618      	mov	r0, r3
 8013d70:	3710      	adds	r7, #16
 8013d72:	46bd      	mov	sp, r7
 8013d74:	bd80      	pop	{r7, pc}
 8013d76:	bf00      	nop
 8013d78:	0802f914 	.word	0x0802f914

08013d7c <_ZNK9XFTimeouteqERKS_>:

bool XFTimeout::operator ==(const XFTimeout & timeout) const
{
 8013d7c:	b590      	push	{r4, r7, lr}
 8013d7e:	b083      	sub	sp, #12
 8013d80:	af00      	add	r7, sp, #0
 8013d82:	6078      	str	r0, [r7, #4]
 8013d84:	6039      	str	r1, [r7, #0]
    // Check behavior and timeout id attributes, if there are equal
    return (pBehavior_ == timeout.pBehavior_ && getId() == timeout.getId()) ? true : false;
 8013d86:	687b      	ldr	r3, [r7, #4]
 8013d88:	68da      	ldr	r2, [r3, #12]
 8013d8a:	683b      	ldr	r3, [r7, #0]
 8013d8c:	68db      	ldr	r3, [r3, #12]
 8013d8e:	429a      	cmp	r2, r3
 8013d90:	d10d      	bne.n	8013dae <_ZNK9XFTimeouteqERKS_+0x32>
 8013d92:	687b      	ldr	r3, [r7, #4]
 8013d94:	4618      	mov	r0, r3
 8013d96:	f7fd fc54 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8013d9a:	4604      	mov	r4, r0
 8013d9c:	683b      	ldr	r3, [r7, #0]
 8013d9e:	4618      	mov	r0, r3
 8013da0:	f7fd fc4f 	bl	8011642 <_ZNK7XFEvent5getIdEv>
 8013da4:	4603      	mov	r3, r0
 8013da6:	429c      	cmp	r4, r3
 8013da8:	d101      	bne.n	8013dae <_ZNK9XFTimeouteqERKS_+0x32>
 8013daa:	2301      	movs	r3, #1
 8013dac:	e000      	b.n	8013db0 <_ZNK9XFTimeouteqERKS_+0x34>
 8013dae:	2300      	movs	r3, #0
}
 8013db0:	4618      	mov	r0, r3
 8013db2:	370c      	adds	r7, #12
 8013db4:	46bd      	mov	sp, r7
 8013db6:	bd90      	pop	{r4, r7, pc}

08013db8 <_ZNK9XFTimeout18deleteAfterConsumeEv>:

bool XFTimeout::deleteAfterConsume() const
{
 8013db8:	b480      	push	{r7}
 8013dba:	b083      	sub	sp, #12
 8013dbc:	af00      	add	r7, sp, #0
 8013dbe:	6078      	str	r0, [r7, #4]
    return true;
 8013dc0:	2301      	movs	r3, #1
}
 8013dc2:	4618      	mov	r0, r3
 8013dc4:	370c      	adds	r7, #12
 8013dc6:	46bd      	mov	sp, r7
 8013dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013dcc:	4770      	bx	lr
	...

08013dd0 <_ZN9XFTimeoutD1Ev>:
 * the `getEventType()` method.
 *
 * XFTimeout is inheriting from XFEvent, so every timeout is
 * also an event.
 */
class XFTimeout : public XFEvent
 8013dd0:	b580      	push	{r7, lr}
 8013dd2:	b082      	sub	sp, #8
 8013dd4:	af00      	add	r7, sp, #0
 8013dd6:	6078      	str	r0, [r7, #4]
 8013dd8:	4a05      	ldr	r2, [pc, #20]	; (8013df0 <_ZN9XFTimeoutD1Ev+0x20>)
 8013dda:	687b      	ldr	r3, [r7, #4]
 8013ddc:	601a      	str	r2, [r3, #0]
 8013dde:	687b      	ldr	r3, [r7, #4]
 8013de0:	4618      	mov	r0, r3
 8013de2:	f7fe f94b 	bl	801207c <_ZN7XFEventD1Ev>
 8013de6:	687b      	ldr	r3, [r7, #4]
 8013de8:	4618      	mov	r0, r3
 8013dea:	3708      	adds	r7, #8
 8013dec:	46bd      	mov	sp, r7
 8013dee:	bd80      	pop	{r7, pc}
 8013df0:	0802f914 	.word	0x0802f914

08013df4 <_ZN9XFTimeoutD0Ev>:
 8013df4:	b580      	push	{r7, lr}
 8013df6:	b082      	sub	sp, #8
 8013df8:	af00      	add	r7, sp, #0
 8013dfa:	6078      	str	r0, [r7, #4]
 8013dfc:	6878      	ldr	r0, [r7, #4]
 8013dfe:	f7ff ffe7 	bl	8013dd0 <_ZN9XFTimeoutD1Ev>
 8013e02:	2118      	movs	r1, #24
 8013e04:	6878      	ldr	r0, [r7, #4]
 8013e06:	f017 fe2e 	bl	802ba66 <_ZdlPvj>
 8013e0a:	687b      	ldr	r3, [r7, #4]
 8013e0c:	4618      	mov	r0, r3
 8013e0e:	3708      	adds	r7, #8
 8013e10:	46bd      	mov	sp, r7
 8013e12:	bd80      	pop	{r7, pc}

08013e14 <_ZNK7XFEvent11getBehaviorEv>:
    inline interface::XFReactive * getBehavior() const { return pBehavior_; }
 8013e14:	b480      	push	{r7}
 8013e16:	b083      	sub	sp, #12
 8013e18:	af00      	add	r7, sp, #0
 8013e1a:	6078      	str	r0, [r7, #4]
 8013e1c:	687b      	ldr	r3, [r7, #4]
 8013e1e:	68db      	ldr	r3, [r3, #12]
 8013e20:	4618      	mov	r0, r3
 8013e22:	370c      	adds	r7, #12
 8013e24:	46bd      	mov	sp, r7
 8013e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e2a:	4770      	bx	lr

08013e2c <_ZNK9interface12XFDispatcher9getThreadEv>:
     * @brief Returns pointer to thread executing the behavior.
     *
     * Within an IDF no threads are present and this method returns
     * always null.
     */
    virtual interface::XFThread * getThread() const { return nullptr; }
 8013e2c:	b480      	push	{r7}
 8013e2e:	b083      	sub	sp, #12
 8013e30:	af00      	add	r7, sp, #0
 8013e32:	6078      	str	r0, [r7, #4]
 8013e34:	2300      	movs	r3, #0
 8013e36:	4618      	mov	r0, r3
 8013e38:	370c      	adds	r7, #12
 8013e3a:	46bd      	mov	sp, r7
 8013e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e40:	4770      	bx	lr

08013e42 <_ZNK19XFDispatcherDefault8isActiveEv>:
{
public:
	XFDispatcherDefault();
	virtual  ~XFDispatcherDefault();

	virtual bool isActive() const { return false; }		///< Default dispatcher does not have a composite thread.
 8013e42:	b480      	push	{r7}
 8013e44:	b083      	sub	sp, #12
 8013e46:	af00      	add	r7, sp, #0
 8013e48:	6078      	str	r0, [r7, #4]
 8013e4a:	2300      	movs	r3, #0
 8013e4c:	4618      	mov	r0, r3
 8013e4e:	370c      	adds	r7, #12
 8013e50:	46bd      	mov	sp, r7
 8013e52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e56:	4770      	bx	lr

08013e58 <_ZN9interface12XFDispatcherC1Ev>:
    XFDispatcher() = default;
 8013e58:	b480      	push	{r7}
 8013e5a:	b083      	sub	sp, #12
 8013e5c:	af00      	add	r7, sp, #0
 8013e5e:	6078      	str	r0, [r7, #4]
 8013e60:	4a04      	ldr	r2, [pc, #16]	; (8013e74 <_ZN9interface12XFDispatcherC1Ev+0x1c>)
 8013e62:	687b      	ldr	r3, [r7, #4]
 8013e64:	601a      	str	r2, [r3, #0]
 8013e66:	687b      	ldr	r3, [r7, #4]
 8013e68:	4618      	mov	r0, r3
 8013e6a:	370c      	adds	r7, #12
 8013e6c:	46bd      	mov	sp, r7
 8013e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e72:	4770      	bx	lr
 8013e74:	0802f960 	.word	0x0802f960

08013e78 <_ZN9interface12XFDispatcherD1Ev>:
    virtual ~XFDispatcher() = default;
 8013e78:	b480      	push	{r7}
 8013e7a:	b083      	sub	sp, #12
 8013e7c:	af00      	add	r7, sp, #0
 8013e7e:	6078      	str	r0, [r7, #4]
 8013e80:	4a04      	ldr	r2, [pc, #16]	; (8013e94 <_ZN9interface12XFDispatcherD1Ev+0x1c>)
 8013e82:	687b      	ldr	r3, [r7, #4]
 8013e84:	601a      	str	r2, [r3, #0]
 8013e86:	687b      	ldr	r3, [r7, #4]
 8013e88:	4618      	mov	r0, r3
 8013e8a:	370c      	adds	r7, #12
 8013e8c:	46bd      	mov	sp, r7
 8013e8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013e92:	4770      	bx	lr
 8013e94:	0802f960 	.word	0x0802f960

08013e98 <_ZN9interface12XFDispatcherD0Ev>:
 8013e98:	b580      	push	{r7, lr}
 8013e9a:	b082      	sub	sp, #8
 8013e9c:	af00      	add	r7, sp, #0
 8013e9e:	6078      	str	r0, [r7, #4]
 8013ea0:	6878      	ldr	r0, [r7, #4]
 8013ea2:	f7ff ffe9 	bl	8013e78 <_ZN9interface12XFDispatcherD1Ev>
 8013ea6:	2104      	movs	r1, #4
 8013ea8:	6878      	ldr	r0, [r7, #4]
 8013eaa:	f017 fddc 	bl	802ba66 <_ZdlPvj>
 8013eae:	687b      	ldr	r3, [r7, #4]
 8013eb0:	4618      	mov	r0, r3
 8013eb2:	3708      	adds	r7, #8
 8013eb4:	46bd      	mov	sp, r7
 8013eb6:	bd80      	pop	{r7, pc}

08013eb8 <_ZN19XFDispatcherDefaultC1Ev>:
using interface::XFTimeoutManager;
using interface::XFResourceFactory;
using interface::XFReactive;
using interface::XFMutex;

XFDispatcherDefault::XFDispatcherDefault() :
 8013eb8:	b580      	push	{r7, lr}
 8013eba:	b082      	sub	sp, #8
 8013ebc:	af00      	add	r7, sp, #0
 8013ebe:	6078      	str	r0, [r7, #4]
	_bExecuting(false),
	_pMutex(nullptr)
 8013ec0:	687b      	ldr	r3, [r7, #4]
 8013ec2:	4618      	mov	r0, r3
 8013ec4:	f7ff ffc8 	bl	8013e58 <_ZN9interface12XFDispatcherC1Ev>
 8013ec8:	4a10      	ldr	r2, [pc, #64]	; (8013f0c <_ZN19XFDispatcherDefaultC1Ev+0x54>)
 8013eca:	687b      	ldr	r3, [r7, #4]
 8013ecc:	601a      	str	r2, [r3, #0]
 8013ece:	687b      	ldr	r3, [r7, #4]
 8013ed0:	2200      	movs	r2, #0
 8013ed2:	711a      	strb	r2, [r3, #4]
 8013ed4:	687b      	ldr	r3, [r7, #4]
 8013ed6:	3308      	adds	r3, #8
 8013ed8:	4618      	mov	r0, r3
 8013eda:	f001 fb45 	bl	8015568 <_ZN19XFEventQueueDefaultC1Ev>
 8013ede:	687b      	ldr	r3, [r7, #4]
 8013ee0:	2200      	movs	r2, #0
 8013ee2:	639a      	str	r2, [r3, #56]	; 0x38
{
	_pMutex = XFMutex::create();
 8013ee4:	f002 fb2a 	bl	801653c <_ZN9interface7XFMutex6createEv>
 8013ee8:	4602      	mov	r2, r0
 8013eea:	687b      	ldr	r3, [r7, #4]
 8013eec:	639a      	str	r2, [r3, #56]	; 0x38
	assert(_pMutex);
 8013eee:	687b      	ldr	r3, [r7, #4]
 8013ef0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ef2:	2b00      	cmp	r3, #0
 8013ef4:	d105      	bne.n	8013f02 <_ZN19XFDispatcherDefaultC1Ev+0x4a>
 8013ef6:	4b06      	ldr	r3, [pc, #24]	; (8013f10 <_ZN19XFDispatcherDefaultC1Ev+0x58>)
 8013ef8:	4a06      	ldr	r2, [pc, #24]	; (8013f14 <_ZN19XFDispatcherDefaultC1Ev+0x5c>)
 8013efa:	2118      	movs	r1, #24
 8013efc:	4806      	ldr	r0, [pc, #24]	; (8013f18 <_ZN19XFDispatcherDefaultC1Ev+0x60>)
 8013efe:	f017 fff3 	bl	802bee8 <__assert_func>
}
 8013f02:	687b      	ldr	r3, [r7, #4]
 8013f04:	4618      	mov	r0, r3
 8013f06:	3708      	adds	r7, #8
 8013f08:	46bd      	mov	sp, r7
 8013f0a:	bd80      	pop	{r7, pc}
 8013f0c:	0802f928 	.word	0x0802f928
 8013f10:	0802eafc 	.word	0x0802eafc
 8013f14:	0802eb04 	.word	0x0802eb04
 8013f18:	0802eb30 	.word	0x0802eb30

08013f1c <_ZN19XFDispatcherDefaultD1Ev>:

XFDispatcherDefault::~XFDispatcherDefault()
 8013f1c:	b580      	push	{r7, lr}
 8013f1e:	b082      	sub	sp, #8
 8013f20:	af00      	add	r7, sp, #0
 8013f22:	6078      	str	r0, [r7, #4]
 8013f24:	4a08      	ldr	r2, [pc, #32]	; (8013f48 <_ZN19XFDispatcherDefaultD1Ev+0x2c>)
 8013f26:	687b      	ldr	r3, [r7, #4]
 8013f28:	601a      	str	r2, [r3, #0]
 8013f2a:	687b      	ldr	r3, [r7, #4]
 8013f2c:	3308      	adds	r3, #8
 8013f2e:	4618      	mov	r0, r3
 8013f30:	f001 fb36 	bl	80155a0 <_ZN19XFEventQueueDefaultD1Ev>
 8013f34:	687b      	ldr	r3, [r7, #4]
 8013f36:	4618      	mov	r0, r3
 8013f38:	f7ff ff9e 	bl	8013e78 <_ZN9interface12XFDispatcherD1Ev>
{

}
 8013f3c:	687b      	ldr	r3, [r7, #4]
 8013f3e:	4618      	mov	r0, r3
 8013f40:	3708      	adds	r7, #8
 8013f42:	46bd      	mov	sp, r7
 8013f44:	bd80      	pop	{r7, pc}
 8013f46:	bf00      	nop
 8013f48:	0802f928 	.word	0x0802f928

08013f4c <_ZN19XFDispatcherDefaultD0Ev>:
XFDispatcherDefault::~XFDispatcherDefault()
 8013f4c:	b580      	push	{r7, lr}
 8013f4e:	b082      	sub	sp, #8
 8013f50:	af00      	add	r7, sp, #0
 8013f52:	6078      	str	r0, [r7, #4]
}
 8013f54:	6878      	ldr	r0, [r7, #4]
 8013f56:	f7ff ffe1 	bl	8013f1c <_ZN19XFDispatcherDefaultD1Ev>
 8013f5a:	213c      	movs	r1, #60	; 0x3c
 8013f5c:	6878      	ldr	r0, [r7, #4]
 8013f5e:	f017 fd82 	bl	802ba66 <_ZdlPvj>
 8013f62:	687b      	ldr	r3, [r7, #4]
 8013f64:	4618      	mov	r0, r3
 8013f66:	3708      	adds	r7, #8
 8013f68:	46bd      	mov	sp, r7
 8013f6a:	bd80      	pop	{r7, pc}

08013f6c <_ZN19XFDispatcherDefault5startEv>:

void XFDispatcherDefault::start()
{
 8013f6c:	b580      	push	{r7, lr}
 8013f6e:	b082      	sub	sp, #8
 8013f70:	af00      	add	r7, sp, #0
 8013f72:	6078      	str	r0, [r7, #4]
        assert(_pMutex);
 8013f74:	687b      	ldr	r3, [r7, #4]
 8013f76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013f78:	2b00      	cmp	r3, #0
 8013f7a:	d105      	bne.n	8013f88 <_ZN19XFDispatcherDefault5startEv+0x1c>
 8013f7c:	4b06      	ldr	r3, [pc, #24]	; (8013f98 <_ZN19XFDispatcherDefault5startEv+0x2c>)
 8013f7e:	4a07      	ldr	r2, [pc, #28]	; (8013f9c <_ZN19XFDispatcherDefault5startEv+0x30>)
 8013f80:	2122      	movs	r1, #34	; 0x22
 8013f82:	4807      	ldr	r0, [pc, #28]	; (8013fa0 <_ZN19XFDispatcherDefault5startEv+0x34>)
 8013f84:	f017 ffb0 	bl	802bee8 <__assert_func>
	_bExecuting = true;
 8013f88:	687b      	ldr	r3, [r7, #4]
 8013f8a:	2201      	movs	r2, #1
 8013f8c:	711a      	strb	r2, [r3, #4]
}
 8013f8e:	bf00      	nop
 8013f90:	3708      	adds	r7, #8
 8013f92:	46bd      	mov	sp, r7
 8013f94:	bd80      	pop	{r7, pc}
 8013f96:	bf00      	nop
 8013f98:	0802eafc 	.word	0x0802eafc
 8013f9c:	0802eba0 	.word	0x0802eba0
 8013fa0:	0802eb30 	.word	0x0802eb30

08013fa4 <_ZN19XFDispatcherDefault4stopEv>:

void XFDispatcherDefault::stop()
{
 8013fa4:	b480      	push	{r7}
 8013fa6:	b083      	sub	sp, #12
 8013fa8:	af00      	add	r7, sp, #0
 8013faa:	6078      	str	r0, [r7, #4]
	_bExecuting = false;
 8013fac:	687b      	ldr	r3, [r7, #4]
 8013fae:	2200      	movs	r2, #0
 8013fb0:	711a      	strb	r2, [r3, #4]
}
 8013fb2:	bf00      	nop
 8013fb4:	370c      	adds	r7, #12
 8013fb6:	46bd      	mov	sp, r7
 8013fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8013fbc:	4770      	bx	lr

08013fbe <_ZN19XFDispatcherDefault9pushEventEP7XFEventb>:

void XFDispatcherDefault::pushEvent(XFEvent * pEvent, bool fromISR)
{
 8013fbe:	b580      	push	{r7, lr}
 8013fc0:	b084      	sub	sp, #16
 8013fc2:	af00      	add	r7, sp, #0
 8013fc4:	60f8      	str	r0, [r7, #12]
 8013fc6:	60b9      	str	r1, [r7, #8]
 8013fc8:	4613      	mov	r3, r2
 8013fca:	71fb      	strb	r3, [r7, #7]
	(void)fromISR;
	_pMutex->lock();
 8013fcc:	68fb      	ldr	r3, [r7, #12]
 8013fce:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8013fd0:	68fb      	ldr	r3, [r7, #12]
 8013fd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013fd4:	681b      	ldr	r3, [r3, #0]
 8013fd6:	3308      	adds	r3, #8
 8013fd8:	681b      	ldr	r3, [r3, #0]
 8013fda:	4610      	mov	r0, r2
 8013fdc:	4798      	blx	r3
	{
#ifdef XF_TRACE_EVENT_PUSH_POP
	    Trace::out("Push event: 0x%x", pEvent);
#endif // XF_TRACE_EVENT_PUSH_POP
		_events.push(pEvent);
 8013fde:	68fb      	ldr	r3, [r7, #12]
 8013fe0:	3308      	adds	r3, #8
 8013fe2:	2200      	movs	r2, #0
 8013fe4:	68b9      	ldr	r1, [r7, #8]
 8013fe6:	4618      	mov	r0, r3
 8013fe8:	f001 fb14 	bl	8015614 <_ZN19XFEventQueueDefault4pushEPK7XFEventb>
	}
	_pMutex->unlock();
 8013fec:	68fb      	ldr	r3, [r7, #12]
 8013fee:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8013ff0:	68fb      	ldr	r3, [r7, #12]
 8013ff2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ff4:	681b      	ldr	r3, [r3, #0]
 8013ff6:	330c      	adds	r3, #12
 8013ff8:	681b      	ldr	r3, [r3, #0]
 8013ffa:	4610      	mov	r0, r2
 8013ffc:	4798      	blx	r3
}
 8013ffe:	bf00      	nop
 8014000:	3710      	adds	r7, #16
 8014002:	46bd      	mov	sp, r7
 8014004:	bd80      	pop	{r7, pc}

08014006 <_ZN19XFDispatcherDefault15scheduleTimeoutEiiPN9interface10XFReactiveE>:

void XFDispatcherDefault::scheduleTimeout(int timeoutId, int interval, interface::XFReactive * pReactive)
{
 8014006:	b590      	push	{r4, r7, lr}
 8014008:	b085      	sub	sp, #20
 801400a:	af00      	add	r7, sp, #0
 801400c:	60f8      	str	r0, [r7, #12]
 801400e:	60b9      	str	r1, [r7, #8]
 8014010:	607a      	str	r2, [r7, #4]
 8014012:	603b      	str	r3, [r7, #0]
	// Forward timeout to the timeout manager
	XFTimeoutManager::getInstance()->scheduleTimeout(timeoutId, interval, pReactive);
 8014014:	f000 fa6a 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 8014018:	6803      	ldr	r3, [r0, #0]
 801401a:	3314      	adds	r3, #20
 801401c:	681c      	ldr	r4, [r3, #0]
 801401e:	683b      	ldr	r3, [r7, #0]
 8014020:	687a      	ldr	r2, [r7, #4]
 8014022:	68b9      	ldr	r1, [r7, #8]
 8014024:	47a0      	blx	r4
}
 8014026:	bf00      	nop
 8014028:	3714      	adds	r7, #20
 801402a:	46bd      	mov	sp, r7
 801402c:	bd90      	pop	{r4, r7, pc}

0801402e <_ZN19XFDispatcherDefault17unscheduleTimeoutEiPN9interface10XFReactiveE>:

void XFDispatcherDefault::unscheduleTimeout(int timeoutId, interface::XFReactive * pReactive)
{
 801402e:	b590      	push	{r4, r7, lr}
 8014030:	b085      	sub	sp, #20
 8014032:	af00      	add	r7, sp, #0
 8014034:	60f8      	str	r0, [r7, #12]
 8014036:	60b9      	str	r1, [r7, #8]
 8014038:	607a      	str	r2, [r7, #4]
	// Forward timeout to the timeout manager
	XFTimeoutManager::getInstance()->unscheduleTimeout(timeoutId, pReactive);
 801403a:	f000 fa57 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 801403e:	4603      	mov	r3, r0
 8014040:	681a      	ldr	r2, [r3, #0]
 8014042:	3218      	adds	r2, #24
 8014044:	6814      	ldr	r4, [r2, #0]
 8014046:	687a      	ldr	r2, [r7, #4]
 8014048:	68b9      	ldr	r1, [r7, #8]
 801404a:	4618      	mov	r0, r3
 801404c:	47a0      	blx	r4
}
 801404e:	bf00      	nop
 8014050:	3714      	adds	r7, #20
 8014052:	46bd      	mov	sp, r7
 8014054:	bd90      	pop	{r4, r7, pc}

08014056 <_ZN19XFDispatcherDefault7executeEPKv>:

int XFDispatcherDefault::execute(const void * param /* = nullptr */)
{
 8014056:	b580      	push	{r7, lr}
 8014058:	b082      	sub	sp, #8
 801405a:	af00      	add	r7, sp, #0
 801405c:	6078      	str	r0, [r7, #4]
 801405e:	6039      	str	r1, [r7, #0]
	(void)param;	// Parameter not used at the method

	while(_bExecuting)
 8014060:	687b      	ldr	r3, [r7, #4]
 8014062:	791b      	ldrb	r3, [r3, #4]
 8014064:	2b00      	cmp	r3, #0
 8014066:	d019      	beq.n	801409c <_ZN19XFDispatcherDefault7executeEPKv+0x46>
	{
		while (_events.empty() && _bExecuting)
 8014068:	687b      	ldr	r3, [r7, #4]
 801406a:	3308      	adds	r3, #8
 801406c:	4618      	mov	r0, r3
 801406e:	f001 fac3 	bl	80155f8 <_ZNK19XFEventQueueDefault5emptyEv>
 8014072:	4603      	mov	r3, r0
 8014074:	2b00      	cmp	r3, #0
 8014076:	d005      	beq.n	8014084 <_ZN19XFDispatcherDefault7executeEPKv+0x2e>
 8014078:	687b      	ldr	r3, [r7, #4]
 801407a:	791b      	ldrb	r3, [r3, #4]
 801407c:	2b00      	cmp	r3, #0
 801407e:	d001      	beq.n	8014084 <_ZN19XFDispatcherDefault7executeEPKv+0x2e>
 8014080:	2301      	movs	r3, #1
 8014082:	e000      	b.n	8014086 <_ZN19XFDispatcherDefault7executeEPKv+0x30>
 8014084:	2300      	movs	r3, #0
 8014086:	2b00      	cmp	r3, #0
 8014088:	d001      	beq.n	801408e <_ZN19XFDispatcherDefault7executeEPKv+0x38>
		{
			continue;	// Wait until something to do
 801408a:	bf00      	nop
		while (_events.empty() && _bExecuting)
 801408c:	e7ec      	b.n	8014068 <_ZN19XFDispatcherDefault7executeEPKv+0x12>
		}

		executeOnce();  // Dispatch next event
 801408e:	687b      	ldr	r3, [r7, #4]
 8014090:	681b      	ldr	r3, [r3, #0]
 8014092:	3328      	adds	r3, #40	; 0x28
 8014094:	681b      	ldr	r3, [r3, #0]
 8014096:	6878      	ldr	r0, [r7, #4]
 8014098:	4798      	blx	r3
	while(_bExecuting)
 801409a:	e7e1      	b.n	8014060 <_ZN19XFDispatcherDefault7executeEPKv+0xa>
	}

	return 0;
 801409c:	2300      	movs	r3, #0
}
 801409e:	4618      	mov	r0, r3
 80140a0:	3708      	adds	r7, #8
 80140a2:	46bd      	mov	sp, r7
 80140a4:	bd80      	pop	{r7, pc}

080140a6 <_ZN19XFDispatcherDefault11executeOnceEv>:

int XFDispatcherDefault::executeOnce()
{
 80140a6:	b580      	push	{r7, lr}
 80140a8:	b084      	sub	sp, #16
 80140aa:	af00      	add	r7, sp, #0
 80140ac:	6078      	str	r0, [r7, #4]
    if (!_events.empty() and _bExecuting)
 80140ae:	687b      	ldr	r3, [r7, #4]
 80140b0:	3308      	adds	r3, #8
 80140b2:	4618      	mov	r0, r3
 80140b4:	f001 faa0 	bl	80155f8 <_ZNK19XFEventQueueDefault5emptyEv>
 80140b8:	4603      	mov	r3, r0
 80140ba:	f083 0301 	eor.w	r3, r3, #1
 80140be:	b2db      	uxtb	r3, r3
 80140c0:	2b00      	cmp	r3, #0
 80140c2:	d005      	beq.n	80140d0 <_ZN19XFDispatcherDefault11executeOnceEv+0x2a>
 80140c4:	687b      	ldr	r3, [r7, #4]
 80140c6:	791b      	ldrb	r3, [r3, #4]
 80140c8:	2b00      	cmp	r3, #0
 80140ca:	d001      	beq.n	80140d0 <_ZN19XFDispatcherDefault11executeOnceEv+0x2a>
 80140cc:	2301      	movs	r3, #1
 80140ce:	e000      	b.n	80140d2 <_ZN19XFDispatcherDefault11executeOnceEv+0x2c>
 80140d0:	2300      	movs	r3, #0
 80140d2:	2b00      	cmp	r3, #0
 80140d4:	d046      	beq.n	8014164 <_ZN19XFDispatcherDefault11executeOnceEv+0xbe>
    {
        const XFEvent * pEvent;

        _pMutex->lock();
 80140d6:	687b      	ldr	r3, [r7, #4]
 80140d8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80140da:	687b      	ldr	r3, [r7, #4]
 80140dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80140de:	681b      	ldr	r3, [r3, #0]
 80140e0:	3308      	adds	r3, #8
 80140e2:	681b      	ldr	r3, [r3, #0]
 80140e4:	4610      	mov	r0, r2
 80140e6:	4798      	blx	r3
        {
        	// Deque next event from queue
        	pEvent = _events.front(); _events.pop();
 80140e8:	687b      	ldr	r3, [r7, #4]
 80140ea:	3308      	adds	r3, #8
 80140ec:	4618      	mov	r0, r3
 80140ee:	f001 faaf 	bl	8015650 <_ZN19XFEventQueueDefault5frontEv>
 80140f2:	60f8      	str	r0, [r7, #12]
 80140f4:	687b      	ldr	r3, [r7, #4]
 80140f6:	3308      	adds	r3, #8
 80140f8:	4618      	mov	r0, r3
 80140fa:	f001 fac4 	bl	8015686 <_ZN19XFEventQueueDefault3popEv>
#ifdef XF_TRACE_EVENT_PUSH_POP
        	Trace::out("Pop event:  0x%x", pEvent);
#endif // XF_TRACE_EVENT_PUSH_POP
    	}
    	_pMutex->unlock();
 80140fe:	687b      	ldr	r3, [r7, #4]
 8014100:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8014102:	687b      	ldr	r3, [r7, #4]
 8014104:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014106:	681b      	ldr	r3, [r3, #0]
 8014108:	330c      	adds	r3, #12
 801410a:	681b      	ldr	r3, [r3, #0]
 801410c:	4610      	mov	r0, r2
 801410e:	4798      	blx	r3

        if (pEvent)
 8014110:	68fb      	ldr	r3, [r7, #12]
 8014112:	2b00      	cmp	r3, #0
 8014114:	d026      	beq.n	8014164 <_ZN19XFDispatcherDefault11executeOnceEv+0xbe>
        {
            // Forward the event to the behavioral class
            dispatchEvent(pEvent);
 8014116:	687b      	ldr	r3, [r7, #4]
 8014118:	681b      	ldr	r3, [r3, #0]
 801411a:	332c      	adds	r3, #44	; 0x2c
 801411c:	681b      	ldr	r3, [r3, #0]
 801411e:	68f9      	ldr	r1, [r7, #12]
 8014120:	6878      	ldr	r0, [r7, #4]
 8014122:	4798      	blx	r3

            if (pEvent->getEventType() == XFEvent::Terminate)
 8014124:	68f8      	ldr	r0, [r7, #12]
 8014126:	f7fd fa7f 	bl	8011628 <_ZNK7XFEvent12getEventTypeEv>
 801412a:	4603      	mov	r3, r0
 801412c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8014130:	bf0c      	ite	eq
 8014132:	2301      	moveq	r3, #1
 8014134:	2300      	movne	r3, #0
 8014136:	b2db      	uxtb	r3, r3
 8014138:	2b00      	cmp	r3, #0
 801413a:	d002      	beq.n	8014142 <_ZN19XFDispatcherDefault11executeOnceEv+0x9c>
            {
                // Exit the event loop
                _bExecuting = false;
 801413c:	687b      	ldr	r3, [r7, #4]
 801413e:	2200      	movs	r2, #0
 8014140:	711a      	strb	r2, [r3, #4]
            }

            if (pEvent->deleteAfterConsume())
 8014142:	68fb      	ldr	r3, [r7, #12]
 8014144:	681b      	ldr	r3, [r3, #0]
 8014146:	3308      	adds	r3, #8
 8014148:	681b      	ldr	r3, [r3, #0]
 801414a:	68f8      	ldr	r0, [r7, #12]
 801414c:	4798      	blx	r3
 801414e:	4603      	mov	r3, r0
 8014150:	2b00      	cmp	r3, #0
 8014152:	d007      	beq.n	8014164 <_ZN19XFDispatcherDefault11executeOnceEv+0xbe>
            {
                // Remove the consumed event
                delete pEvent;
 8014154:	68fb      	ldr	r3, [r7, #12]
 8014156:	2b00      	cmp	r3, #0
 8014158:	d004      	beq.n	8014164 <_ZN19XFDispatcherDefault11executeOnceEv+0xbe>
 801415a:	681a      	ldr	r2, [r3, #0]
 801415c:	3204      	adds	r2, #4
 801415e:	6812      	ldr	r2, [r2, #0]
 8014160:	4618      	mov	r0, r3
 8014162:	4790      	blx	r2
            }
        }
    }

    return _bExecuting;
 8014164:	687b      	ldr	r3, [r7, #4]
 8014166:	791b      	ldrb	r3, [r3, #4]
}
 8014168:	4618      	mov	r0, r3
 801416a:	3710      	adds	r7, #16
 801416c:	46bd      	mov	sp, r7
 801416e:	bd80      	pop	{r7, pc}

08014170 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent>:

void XFDispatcherDefault::dispatchEvent(const XFEvent * pEvent) const
{
 8014170:	b580      	push	{r7, lr}
 8014172:	b084      	sub	sp, #16
 8014174:	af00      	add	r7, sp, #0
 8014176:	6078      	str	r0, [r7, #4]
 8014178:	6039      	str	r1, [r7, #0]
    XFReactive::TerminateBehavior terminateBehavior;

	terminateBehavior = pEvent->getBehavior()->process(pEvent);
 801417a:	6838      	ldr	r0, [r7, #0]
 801417c:	f7ff fe4a 	bl	8013e14 <_ZNK7XFEvent11getBehaviorEv>
 8014180:	4603      	mov	r3, r0
 8014182:	681a      	ldr	r2, [r3, #0]
 8014184:	3218      	adds	r2, #24
 8014186:	6812      	ldr	r2, [r2, #0]
 8014188:	6839      	ldr	r1, [r7, #0]
 801418a:	4618      	mov	r0, r3
 801418c:	4790      	blx	r2
 801418e:	4603      	mov	r3, r0
 8014190:	73fb      	strb	r3, [r7, #15]

	// Check if behavior should be deleted
	if (terminateBehavior and pEvent->getBehavior()->deleteOnTerminate())
 8014192:	7bfb      	ldrb	r3, [r7, #15]
 8014194:	2b00      	cmp	r3, #0
 8014196:	d00d      	beq.n	80141b4 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent+0x44>
 8014198:	6838      	ldr	r0, [r7, #0]
 801419a:	f7ff fe3b 	bl	8013e14 <_ZNK7XFEvent11getBehaviorEv>
 801419e:	4603      	mov	r3, r0
 80141a0:	681a      	ldr	r2, [r3, #0]
 80141a2:	3210      	adds	r2, #16
 80141a4:	6812      	ldr	r2, [r2, #0]
 80141a6:	4618      	mov	r0, r3
 80141a8:	4790      	blx	r2
 80141aa:	4603      	mov	r3, r0
 80141ac:	2b00      	cmp	r3, #0
 80141ae:	d001      	beq.n	80141b4 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent+0x44>
 80141b0:	2301      	movs	r3, #1
 80141b2:	e000      	b.n	80141b6 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent+0x46>
 80141b4:	2300      	movs	r3, #0
 80141b6:	2b00      	cmp	r3, #0
 80141b8:	d00a      	beq.n	80141d0 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent+0x60>
	{
		delete pEvent->getBehavior();
 80141ba:	6838      	ldr	r0, [r7, #0]
 80141bc:	f7ff fe2a 	bl	8013e14 <_ZNK7XFEvent11getBehaviorEv>
 80141c0:	4603      	mov	r3, r0
 80141c2:	2b00      	cmp	r3, #0
 80141c4:	d004      	beq.n	80141d0 <_ZNK19XFDispatcherDefault13dispatchEventEPK7XFEvent+0x60>
 80141c6:	681a      	ldr	r2, [r3, #0]
 80141c8:	3204      	adds	r2, #4
 80141ca:	6812      	ldr	r2, [r2, #0]
 80141cc:	4618      	mov	r0, r3
 80141ce:	4790      	blx	r2
	}
}
 80141d0:	bf00      	nop
 80141d2:	3710      	adds	r7, #16
 80141d4:	46bd      	mov	sp, r7
 80141d6:	bd80      	pop	{r7, pc}

080141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>:
#include "resourcefactory-default.h"
#include "mutex-default.h"

//static
interface::XFResourceFactory * interface::XFResourceFactory::getInstance()
{
 80141d8:	b580      	push	{r7, lr}
 80141da:	af00      	add	r7, sp, #0
	return XFResourceFactoryDefault::getInstance();
 80141dc:	f000 f82c 	bl	8014238 <_ZN24XFResourceFactoryDefault11getInstanceEv>
 80141e0:	4603      	mov	r3, r0
}
 80141e2:	4618      	mov	r0, r3
 80141e4:	bd80      	pop	{r7, pc}
	...

080141e8 <_ZN9interface17XFResourceFactoryD1Ev>:
     * @brief Returns a new mutex.
     * @return Pointer to new mutex.
     */
    virtual interface::XFMutex * createMutex() = 0;

    virtual ~XFResourceFactory() = default;
 80141e8:	b480      	push	{r7}
 80141ea:	b083      	sub	sp, #12
 80141ec:	af00      	add	r7, sp, #0
 80141ee:	6078      	str	r0, [r7, #4]
 80141f0:	4a04      	ldr	r2, [pc, #16]	; (8014204 <_ZN9interface17XFResourceFactoryD1Ev+0x1c>)
 80141f2:	687b      	ldr	r3, [r7, #4]
 80141f4:	601a      	str	r2, [r3, #0]
 80141f6:	687b      	ldr	r3, [r7, #4]
 80141f8:	4618      	mov	r0, r3
 80141fa:	370c      	adds	r7, #12
 80141fc:	46bd      	mov	sp, r7
 80141fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014202:	4770      	bx	lr
 8014204:	0802f9b8 	.word	0x0802f9b8

08014208 <_ZN9interface17XFResourceFactoryD0Ev>:
 8014208:	b580      	push	{r7, lr}
 801420a:	b082      	sub	sp, #8
 801420c:	af00      	add	r7, sp, #0
 801420e:	6078      	str	r0, [r7, #4]
 8014210:	6878      	ldr	r0, [r7, #4]
 8014212:	f7ff ffe9 	bl	80141e8 <_ZN9interface17XFResourceFactoryD1Ev>
 8014216:	2104      	movs	r1, #4
 8014218:	6878      	ldr	r0, [r7, #4]
 801421a:	f017 fc24 	bl	802ba66 <_ZdlPvj>
 801421e:	687b      	ldr	r3, [r7, #4]
 8014220:	4618      	mov	r0, r3
 8014222:	3708      	adds	r7, #8
 8014224:	46bd      	mov	sp, r7
 8014226:	bd80      	pop	{r7, pc}

08014228 <__tcf_0>:

//static
interface::XFResourceFactory * XFResourceFactoryDefault::getInstance()
{
    static XFResourceFactoryDefault theResourceFactory;
 8014228:	b580      	push	{r7, lr}
 801422a:	af00      	add	r7, sp, #0
 801422c:	4801      	ldr	r0, [pc, #4]	; (8014234 <__tcf_0+0xc>)
 801422e:	f000 f8bf 	bl	80143b0 <_ZN24XFResourceFactoryDefaultD1Ev>
 8014232:	bd80      	pop	{r7, pc}
 8014234:	20000040 	.word	0x20000040

08014238 <_ZN24XFResourceFactoryDefault11getInstanceEv>:
{
 8014238:	b580      	push	{r7, lr}
 801423a:	af00      	add	r7, sp, #0
    static XFResourceFactoryDefault theResourceFactory;
 801423c:	4b10      	ldr	r3, [pc, #64]	; (8014280 <_ZN24XFResourceFactoryDefault11getInstanceEv+0x48>)
 801423e:	781b      	ldrb	r3, [r3, #0]
 8014240:	f3bf 8f5b 	dmb	ish
 8014244:	b2db      	uxtb	r3, r3
 8014246:	f003 0301 	and.w	r3, r3, #1
 801424a:	2b00      	cmp	r3, #0
 801424c:	bf0c      	ite	eq
 801424e:	2301      	moveq	r3, #1
 8014250:	2300      	movne	r3, #0
 8014252:	b2db      	uxtb	r3, r3
 8014254:	2b00      	cmp	r3, #0
 8014256:	d010      	beq.n	801427a <_ZN24XFResourceFactoryDefault11getInstanceEv+0x42>
 8014258:	4809      	ldr	r0, [pc, #36]	; (8014280 <_ZN24XFResourceFactoryDefault11getInstanceEv+0x48>)
 801425a:	f017 fc06 	bl	802ba6a <__cxa_guard_acquire>
 801425e:	4603      	mov	r3, r0
 8014260:	2b00      	cmp	r3, #0
 8014262:	bf14      	ite	ne
 8014264:	2301      	movne	r3, #1
 8014266:	2300      	moveq	r3, #0
 8014268:	b2db      	uxtb	r3, r3
 801426a:	2b00      	cmp	r3, #0
 801426c:	d005      	beq.n	801427a <_ZN24XFResourceFactoryDefault11getInstanceEv+0x42>
 801426e:	4805      	ldr	r0, [pc, #20]	; (8014284 <_ZN24XFResourceFactoryDefault11getInstanceEv+0x4c>)
 8014270:	f017 fe58 	bl	802bf24 <atexit>
 8014274:	4802      	ldr	r0, [pc, #8]	; (8014280 <_ZN24XFResourceFactoryDefault11getInstanceEv+0x48>)
 8014276:	f017 fc04 	bl	802ba82 <__cxa_guard_release>

	return &theResourceFactory;
 801427a:	4b03      	ldr	r3, [pc, #12]	; (8014288 <_ZN24XFResourceFactoryDefault11getInstanceEv+0x50>)
}
 801427c:	4618      	mov	r0, r3
 801427e:	bd80      	pop	{r7, pc}
 8014280:	200040f0 	.word	0x200040f0
 8014284:	08014229 	.word	0x08014229
 8014288:	20000040 	.word	0x20000040

0801428c <__tcf_1>:

interface::XFDispatcher * XFResourceFactoryDefault::getDefaultDispatcher()
{
	static XFDispatcherDefault mainDispatcher;
 801428c:	b580      	push	{r7, lr}
 801428e:	af00      	add	r7, sp, #0
 8014290:	4801      	ldr	r0, [pc, #4]	; (8014298 <__tcf_1+0xc>)
 8014292:	f7ff fe43 	bl	8013f1c <_ZN19XFDispatcherDefaultD1Ev>
 8014296:	bd80      	pop	{r7, pc}
 8014298:	200040f4 	.word	0x200040f4

0801429c <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv>:
{
 801429c:	b580      	push	{r7, lr}
 801429e:	b082      	sub	sp, #8
 80142a0:	af00      	add	r7, sp, #0
 80142a2:	6078      	str	r0, [r7, #4]
	static XFDispatcherDefault mainDispatcher;
 80142a4:	4b13      	ldr	r3, [pc, #76]	; (80142f4 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x58>)
 80142a6:	781b      	ldrb	r3, [r3, #0]
 80142a8:	f3bf 8f5b 	dmb	ish
 80142ac:	b2db      	uxtb	r3, r3
 80142ae:	f003 0301 	and.w	r3, r3, #1
 80142b2:	2b00      	cmp	r3, #0
 80142b4:	bf0c      	ite	eq
 80142b6:	2301      	moveq	r3, #1
 80142b8:	2300      	movne	r3, #0
 80142ba:	b2db      	uxtb	r3, r3
 80142bc:	2b00      	cmp	r3, #0
 80142be:	d013      	beq.n	80142e8 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x4c>
 80142c0:	480c      	ldr	r0, [pc, #48]	; (80142f4 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x58>)
 80142c2:	f017 fbd2 	bl	802ba6a <__cxa_guard_acquire>
 80142c6:	4603      	mov	r3, r0
 80142c8:	2b00      	cmp	r3, #0
 80142ca:	bf14      	ite	ne
 80142cc:	2301      	movne	r3, #1
 80142ce:	2300      	moveq	r3, #0
 80142d0:	b2db      	uxtb	r3, r3
 80142d2:	2b00      	cmp	r3, #0
 80142d4:	d008      	beq.n	80142e8 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x4c>
 80142d6:	4808      	ldr	r0, [pc, #32]	; (80142f8 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x5c>)
 80142d8:	f7ff fdee 	bl	8013eb8 <_ZN19XFDispatcherDefaultC1Ev>
 80142dc:	4807      	ldr	r0, [pc, #28]	; (80142fc <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x60>)
 80142de:	f017 fe21 	bl	802bf24 <atexit>
 80142e2:	4804      	ldr	r0, [pc, #16]	; (80142f4 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x58>)
 80142e4:	f017 fbcd 	bl	802ba82 <__cxa_guard_release>

	return &mainDispatcher;
 80142e8:	4b03      	ldr	r3, [pc, #12]	; (80142f8 <_ZN24XFResourceFactoryDefault20getDefaultDispatcherEv+0x5c>)
}
 80142ea:	4618      	mov	r0, r3
 80142ec:	3708      	adds	r7, #8
 80142ee:	46bd      	mov	sp, r7
 80142f0:	bd80      	pop	{r7, pc}
 80142f2:	bf00      	nop
 80142f4:	20004130 	.word	0x20004130
 80142f8:	200040f4 	.word	0x200040f4
 80142fc:	0801428d 	.word	0x0801428d

08014300 <_ZN24XFResourceFactoryDefault16createDispatcherEv>:

interface::XFDispatcher * XFResourceFactoryDefault::createDispatcher()
{
 8014300:	b580      	push	{r7, lr}
 8014302:	b082      	sub	sp, #8
 8014304:	af00      	add	r7, sp, #0
 8014306:	6078      	str	r0, [r7, #4]
	// Default implementation cannot create new dispatcher. Return the default dispatcher
	return getDefaultDispatcher();
 8014308:	687b      	ldr	r3, [r7, #4]
 801430a:	681b      	ldr	r3, [r3, #0]
 801430c:	681b      	ldr	r3, [r3, #0]
 801430e:	6878      	ldr	r0, [r7, #4]
 8014310:	4798      	blx	r3
 8014312:	4603      	mov	r3, r0
}
 8014314:	4618      	mov	r0, r3
 8014316:	3708      	adds	r7, #8
 8014318:	46bd      	mov	sp, r7
 801431a:	bd80      	pop	{r7, pc}

0801431c <_ZN24XFResourceFactoryDefault12createThreadEPN9interface26XFThreadEntryPointProviderEMS1_FvPKvEPKcm>:

interface::XFThread * XFResourceFactoryDefault::createThread(interface::XFThreadEntryPointProvider * pProvider,
												  	  	     interface::XFThread::EntryMethodBody entryMethod,
														     const char * threadName,
														     const uint32_t stackSize /* = 0 */)
{
 801431c:	b480      	push	{r7}
 801431e:	b085      	sub	sp, #20
 8014320:	af00      	add	r7, sp, #0
 8014322:	60f8      	str	r0, [r7, #12]
 8014324:	60b9      	str	r1, [r7, #8]
 8014326:	4639      	mov	r1, r7
 8014328:	e881 000c 	stmia.w	r1, {r2, r3}
	// Default implementation cannot create threads (no underlying OS present)
	return nullptr;
 801432c:	2300      	movs	r3, #0
}
 801432e:	4618      	mov	r0, r3
 8014330:	3714      	adds	r7, #20
 8014332:	46bd      	mov	sp, r7
 8014334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014338:	4770      	bx	lr
	...

0801433c <__tcf_2>:

interface::XFMutex * XFResourceFactoryDefault::createMutex()
{
	static XFMutexDefault mutex;
 801433c:	b580      	push	{r7, lr}
 801433e:	af00      	add	r7, sp, #0
 8014340:	4801      	ldr	r0, [pc, #4]	; (8014348 <__tcf_2+0xc>)
 8014342:	f002 f94b 	bl	80165dc <_ZN14XFMutexDefaultD1Ev>
 8014346:	bd80      	pop	{r7, pc}
 8014348:	20004134 	.word	0x20004134

0801434c <_ZN24XFResourceFactoryDefault11createMutexEv>:
{
 801434c:	b580      	push	{r7, lr}
 801434e:	b082      	sub	sp, #8
 8014350:	af00      	add	r7, sp, #0
 8014352:	6078      	str	r0, [r7, #4]
	static XFMutexDefault mutex;
 8014354:	4b13      	ldr	r3, [pc, #76]	; (80143a4 <_ZN24XFResourceFactoryDefault11createMutexEv+0x58>)
 8014356:	781b      	ldrb	r3, [r3, #0]
 8014358:	f3bf 8f5b 	dmb	ish
 801435c:	b2db      	uxtb	r3, r3
 801435e:	f003 0301 	and.w	r3, r3, #1
 8014362:	2b00      	cmp	r3, #0
 8014364:	bf0c      	ite	eq
 8014366:	2301      	moveq	r3, #1
 8014368:	2300      	movne	r3, #0
 801436a:	b2db      	uxtb	r3, r3
 801436c:	2b00      	cmp	r3, #0
 801436e:	d013      	beq.n	8014398 <_ZN24XFResourceFactoryDefault11createMutexEv+0x4c>
 8014370:	480c      	ldr	r0, [pc, #48]	; (80143a4 <_ZN24XFResourceFactoryDefault11createMutexEv+0x58>)
 8014372:	f017 fb7a 	bl	802ba6a <__cxa_guard_acquire>
 8014376:	4603      	mov	r3, r0
 8014378:	2b00      	cmp	r3, #0
 801437a:	bf14      	ite	ne
 801437c:	2301      	movne	r3, #1
 801437e:	2300      	moveq	r3, #0
 8014380:	b2db      	uxtb	r3, r3
 8014382:	2b00      	cmp	r3, #0
 8014384:	d008      	beq.n	8014398 <_ZN24XFResourceFactoryDefault11createMutexEv+0x4c>
 8014386:	4808      	ldr	r0, [pc, #32]	; (80143a8 <_ZN24XFResourceFactoryDefault11createMutexEv+0x5c>)
 8014388:	f002 f916 	bl	80165b8 <_ZN14XFMutexDefaultC1Ev>
 801438c:	4807      	ldr	r0, [pc, #28]	; (80143ac <_ZN24XFResourceFactoryDefault11createMutexEv+0x60>)
 801438e:	f017 fdc9 	bl	802bf24 <atexit>
 8014392:	4804      	ldr	r0, [pc, #16]	; (80143a4 <_ZN24XFResourceFactoryDefault11createMutexEv+0x58>)
 8014394:	f017 fb75 	bl	802ba82 <__cxa_guard_release>

	return &mutex;
 8014398:	4b03      	ldr	r3, [pc, #12]	; (80143a8 <_ZN24XFResourceFactoryDefault11createMutexEv+0x5c>)
}
 801439a:	4618      	mov	r0, r3
 801439c:	3708      	adds	r7, #8
 801439e:	46bd      	mov	sp, r7
 80143a0:	bd80      	pop	{r7, pc}
 80143a2:	bf00      	nop
 80143a4:	20004138 	.word	0x20004138
 80143a8:	20004134 	.word	0x20004134
 80143ac:	0801433d 	.word	0x0801433d

080143b0 <_ZN24XFResourceFactoryDefaultD1Ev>:
 * @brief Default implementation of the XF resource factory.
 */
class XFResourceFactoryDefault : public interface::XFResourceFactory
{
public:
	virtual ~XFResourceFactoryDefault() = default;
 80143b0:	b580      	push	{r7, lr}
 80143b2:	b082      	sub	sp, #8
 80143b4:	af00      	add	r7, sp, #0
 80143b6:	6078      	str	r0, [r7, #4]
 80143b8:	4a05      	ldr	r2, [pc, #20]	; (80143d0 <_ZN24XFResourceFactoryDefaultD1Ev+0x20>)
 80143ba:	687b      	ldr	r3, [r7, #4]
 80143bc:	601a      	str	r2, [r3, #0]
 80143be:	687b      	ldr	r3, [r7, #4]
 80143c0:	4618      	mov	r0, r3
 80143c2:	f7ff ff11 	bl	80141e8 <_ZN9interface17XFResourceFactoryD1Ev>
 80143c6:	687b      	ldr	r3, [r7, #4]
 80143c8:	4618      	mov	r0, r3
 80143ca:	3708      	adds	r7, #8
 80143cc:	46bd      	mov	sp, r7
 80143ce:	bd80      	pop	{r7, pc}
 80143d0:	0802f998 	.word	0x0802f998

080143d4 <_ZN24XFResourceFactoryDefaultD0Ev>:
 80143d4:	b580      	push	{r7, lr}
 80143d6:	b082      	sub	sp, #8
 80143d8:	af00      	add	r7, sp, #0
 80143da:	6078      	str	r0, [r7, #4]
 80143dc:	6878      	ldr	r0, [r7, #4]
 80143de:	f7ff ffe7 	bl	80143b0 <_ZN24XFResourceFactoryDefaultD1Ev>
 80143e2:	2104      	movs	r1, #4
 80143e4:	6878      	ldr	r0, [r7, #4]
 80143e6:	f017 fb3e 	bl	802ba66 <_ZdlPvj>
 80143ea:	687b      	ldr	r3, [r7, #4]
 80143ec:	4618      	mov	r0, r3
 80143ee:	3708      	adds	r7, #8
 80143f0:	46bd      	mov	sp, r7
 80143f2:	bd80      	pop	{r7, pc}

080143f4 <_ZNSt8__detail17_List_node_headerC1Ev>:
    {
#if _GLIBCXX_USE_CXX11_ABI
      std::size_t _M_size;
#endif

      _List_node_header() _GLIBCXX_NOEXCEPT
 80143f4:	b580      	push	{r7, lr}
 80143f6:	b082      	sub	sp, #8
 80143f8:	af00      	add	r7, sp, #0
 80143fa:	6078      	str	r0, [r7, #4]
      { _M_init(); }
 80143fc:	6878      	ldr	r0, [r7, #4]
 80143fe:	f000 f805 	bl	801440c <_ZNSt8__detail17_List_node_header7_M_initEv>
 8014402:	687b      	ldr	r3, [r7, #4]
 8014404:	4618      	mov	r0, r3
 8014406:	3708      	adds	r7, #8
 8014408:	46bd      	mov	sp, r7
 801440a:	bd80      	pop	{r7, pc}

0801440c <_ZNSt8__detail17_List_node_header7_M_initEv>:
	  }
      }
#endif

      void
      _M_init() _GLIBCXX_NOEXCEPT
 801440c:	b480      	push	{r7}
 801440e:	b083      	sub	sp, #12
 8014410:	af00      	add	r7, sp, #0
 8014412:	6078      	str	r0, [r7, #4]
      {
	this->_M_next = this->_M_prev = this;
 8014414:	687a      	ldr	r2, [r7, #4]
 8014416:	687b      	ldr	r3, [r7, #4]
 8014418:	605a      	str	r2, [r3, #4]
 801441a:	687b      	ldr	r3, [r7, #4]
 801441c:	685a      	ldr	r2, [r3, #4]
 801441e:	687b      	ldr	r3, [r7, #4]
 8014420:	601a      	str	r2, [r3, #0]
#if _GLIBCXX_USE_CXX11_ABI
	this->_M_size = 0;
 8014422:	687b      	ldr	r3, [r7, #4]
 8014424:	2200      	movs	r2, #0
 8014426:	609a      	str	r2, [r3, #8]
#endif
      }
 8014428:	bf00      	nop
 801442a:	370c      	adds	r7, #12
 801442c:	46bd      	mov	sp, r7
 801442e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014432:	4770      	bx	lr

08014434 <_ZN9interface16XFTimeoutManager10initializeEl>:

    /**
     * Sets the time interval in milliseconds in which the timeout manager
     * should handle the timeouts.
     */
    virtual void initialize(int32_t tickInterval)
 8014434:	b480      	push	{r7}
 8014436:	b083      	sub	sp, #12
 8014438:	af00      	add	r7, sp, #0
 801443a:	6078      	str	r0, [r7, #4]
 801443c:	6039      	str	r1, [r7, #0]
    {
        tickInterval_ = tickInterval;
 801443e:	687b      	ldr	r3, [r7, #4]
 8014440:	683a      	ldr	r2, [r7, #0]
 8014442:	605a      	str	r2, [r3, #4]
    }
 8014444:	bf00      	nop
 8014446:	370c      	adds	r7, #12
 8014448:	46bd      	mov	sp, r7
 801444a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801444e:	4770      	bx	lr

08014450 <_ZNK9interface16XFTimeoutManager15getTickIntervalEv>:

    /**
     * @brief Returns tick interval in milliseconds.
     */
    virtual int32_t getTickInterval() const
 8014450:	b480      	push	{r7}
 8014452:	b083      	sub	sp, #12
 8014454:	af00      	add	r7, sp, #0
 8014456:	6078      	str	r0, [r7, #4]
    {
        return tickInterval_;
 8014458:	687b      	ldr	r3, [r7, #4]
 801445a:	685b      	ldr	r3, [r3, #4]
    }
 801445c:	4618      	mov	r0, r3
 801445e:	370c      	adds	r7, #12
 8014460:	46bd      	mov	sp, r7
 8014462:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014466:	4770      	bx	lr

08014468 <_ZN9interface16XFTimeoutManagerC1Ev>:
     * belongs.
     */
    virtual void tick() = 0;

protected:
    XFTimeoutManager() :
 8014468:	b480      	push	{r7}
 801446a:	b083      	sub	sp, #12
 801446c:	af00      	add	r7, sp, #0
 801446e:	6078      	str	r0, [r7, #4]
        tickInterval_(0)
 8014470:	4a06      	ldr	r2, [pc, #24]	; (801448c <_ZN9interface16XFTimeoutManagerC1Ev+0x24>)
 8014472:	687b      	ldr	r3, [r7, #4]
 8014474:	601a      	str	r2, [r3, #0]
 8014476:	687b      	ldr	r3, [r7, #4]
 8014478:	2200      	movs	r2, #0
 801447a:	605a      	str	r2, [r3, #4]
    {}
 801447c:	687b      	ldr	r3, [r7, #4]
 801447e:	4618      	mov	r0, r3
 8014480:	370c      	adds	r7, #12
 8014482:	46bd      	mov	sp, r7
 8014484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014488:	4770      	bx	lr
 801448a:	bf00      	nop
 801448c:	0802fa04 	.word	0x0802fa04

08014490 <_ZNK9XFTimeout11getRelTicksEv>:
    bool operator ==(const XFTimeout & timeout) const;

    bool deleteAfterConsume() const override;                                                       ///< Tells the dispatcher if the event must be deleted or not.

    inline void setRelTicks(int relTicks) { relTicks_ = relTicks; }                                 ///< Sets remaining ticks.
    inline int getRelTicks() const { return relTicks_; }                                            ///< Returns remaining ticks.
 8014490:	b480      	push	{r7}
 8014492:	b083      	sub	sp, #12
 8014494:	af00      	add	r7, sp, #0
 8014496:	6078      	str	r0, [r7, #4]
 8014498:	687b      	ldr	r3, [r7, #4]
 801449a:	695b      	ldr	r3, [r3, #20]
 801449c:	4618      	mov	r0, r3
 801449e:	370c      	adds	r7, #12
 80144a0:	46bd      	mov	sp, r7
 80144a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144a6:	4770      	bx	lr

080144a8 <_ZN9XFTimeout21substractFromRelTicksEi>:
    inline void substractFromRelTicks(int ticksToSubstract) { relTicks_ -= ticksToSubstract; }      ///< Substracts `ticksToSubstract` from remaining ticks.
 80144a8:	b480      	push	{r7}
 80144aa:	b083      	sub	sp, #12
 80144ac:	af00      	add	r7, sp, #0
 80144ae:	6078      	str	r0, [r7, #4]
 80144b0:	6039      	str	r1, [r7, #0]
 80144b2:	687b      	ldr	r3, [r7, #4]
 80144b4:	695a      	ldr	r2, [r3, #20]
 80144b6:	683b      	ldr	r3, [r7, #0]
 80144b8:	1ad2      	subs	r2, r2, r3
 80144ba:	687b      	ldr	r3, [r7, #4]
 80144bc:	615a      	str	r2, [r3, #20]
 80144be:	bf00      	nop
 80144c0:	370c      	adds	r7, #12
 80144c2:	46bd      	mov	sp, r7
 80144c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144c8:	4770      	bx	lr

080144ca <_ZN9XFTimeout13addToRelTicksEi>:
    inline void addToRelTicks(int ticksToAdd) { relTicks_ += ticksToAdd; }                          ///< Adds `ticksToAdd` to remaining ticks.
 80144ca:	b480      	push	{r7}
 80144cc:	b083      	sub	sp, #12
 80144ce:	af00      	add	r7, sp, #0
 80144d0:	6078      	str	r0, [r7, #4]
 80144d2:	6039      	str	r1, [r7, #0]
 80144d4:	687b      	ldr	r3, [r7, #4]
 80144d6:	695a      	ldr	r2, [r3, #20]
 80144d8:	683b      	ldr	r3, [r7, #0]
 80144da:	441a      	add	r2, r3
 80144dc:	687b      	ldr	r3, [r7, #4]
 80144de:	615a      	str	r2, [r3, #20]
 80144e0:	bf00      	nop
 80144e2:	370c      	adds	r7, #12
 80144e4:	46bd      	mov	sp, r7
 80144e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80144ea:	4770      	bx	lr

080144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>:
#include "timeoutmanager-default.h"

using interface::XFMutex;

interface::XFTimeoutManager * interface::XFTimeoutManager::getInstance()
{
 80144ec:	b580      	push	{r7, lr}
 80144ee:	af00      	add	r7, sp, #0
    return XFTimeoutManagerDefault::getInstance();
 80144f0:	f000 f80c 	bl	801450c <_ZN23XFTimeoutManagerDefault11getInstanceEv>
 80144f4:	4603      	mov	r3, r0
}
 80144f6:	4618      	mov	r0, r3
 80144f8:	bd80      	pop	{r7, pc}
	...

080144fc <__tcf_0>:

interface::XFTimeoutManager * XFTimeoutManagerDefault::getInstance()
{
    static XFTimeoutManagerDefault timeoutManager;
 80144fc:	b580      	push	{r7, lr}
 80144fe:	af00      	add	r7, sp, #0
 8014500:	4801      	ldr	r0, [pc, #4]	; (8014508 <__tcf_0+0xc>)
 8014502:	f000 f8b5 	bl	8014670 <_ZN23XFTimeoutManagerDefaultD1Ev>
 8014506:	bd80      	pop	{r7, pc}
 8014508:	2000413c 	.word	0x2000413c

0801450c <_ZN23XFTimeoutManagerDefault11getInstanceEv>:
{
 801450c:	b580      	push	{r7, lr}
 801450e:	af00      	add	r7, sp, #0
    static XFTimeoutManagerDefault timeoutManager;
 8014510:	4b12      	ldr	r3, [pc, #72]	; (801455c <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x50>)
 8014512:	781b      	ldrb	r3, [r3, #0]
 8014514:	f3bf 8f5b 	dmb	ish
 8014518:	b2db      	uxtb	r3, r3
 801451a:	f003 0301 	and.w	r3, r3, #1
 801451e:	2b00      	cmp	r3, #0
 8014520:	bf0c      	ite	eq
 8014522:	2301      	moveq	r3, #1
 8014524:	2300      	movne	r3, #0
 8014526:	b2db      	uxtb	r3, r3
 8014528:	2b00      	cmp	r3, #0
 801452a:	d013      	beq.n	8014554 <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x48>
 801452c:	480b      	ldr	r0, [pc, #44]	; (801455c <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x50>)
 801452e:	f017 fa9c 	bl	802ba6a <__cxa_guard_acquire>
 8014532:	4603      	mov	r3, r0
 8014534:	2b00      	cmp	r3, #0
 8014536:	bf14      	ite	ne
 8014538:	2301      	movne	r3, #1
 801453a:	2300      	moveq	r3, #0
 801453c:	b2db      	uxtb	r3, r3
 801453e:	2b00      	cmp	r3, #0
 8014540:	d008      	beq.n	8014554 <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x48>
 8014542:	4807      	ldr	r0, [pc, #28]	; (8014560 <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x54>)
 8014544:	f000 f864 	bl	8014610 <_ZN23XFTimeoutManagerDefaultC1Ev>
 8014548:	4806      	ldr	r0, [pc, #24]	; (8014564 <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x58>)
 801454a:	f017 fceb 	bl	802bf24 <atexit>
 801454e:	4803      	ldr	r0, [pc, #12]	; (801455c <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x50>)
 8014550:	f017 fa97 	bl	802ba82 <__cxa_guard_release>
    return &timeoutManager;
 8014554:	4b02      	ldr	r3, [pc, #8]	; (8014560 <_ZN23XFTimeoutManagerDefault11getInstanceEv+0x54>)
}
 8014556:	4618      	mov	r0, r3
 8014558:	bd80      	pop	{r7, pc}
 801455a:	bf00      	nop
 801455c:	20004154 	.word	0x20004154
 8014560:	2000413c 	.word	0x2000413c
 8014564:	080144fd 	.word	0x080144fd

08014568 <_ZN9interface16XFTimeoutManagerD1Ev>:
    virtual ~XFTimeoutManager() = default;
 8014568:	b480      	push	{r7}
 801456a:	b083      	sub	sp, #12
 801456c:	af00      	add	r7, sp, #0
 801456e:	6078      	str	r0, [r7, #4]
 8014570:	4a04      	ldr	r2, [pc, #16]	; (8014584 <_ZN9interface16XFTimeoutManagerD1Ev+0x1c>)
 8014572:	687b      	ldr	r3, [r7, #4]
 8014574:	601a      	str	r2, [r3, #0]
 8014576:	687b      	ldr	r3, [r7, #4]
 8014578:	4618      	mov	r0, r3
 801457a:	370c      	adds	r7, #12
 801457c:	46bd      	mov	sp, r7
 801457e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014582:	4770      	bx	lr
 8014584:	0802fa04 	.word	0x0802fa04

08014588 <_ZN9interface16XFTimeoutManagerD0Ev>:
 8014588:	b580      	push	{r7, lr}
 801458a:	b082      	sub	sp, #8
 801458c:	af00      	add	r7, sp, #0
 801458e:	6078      	str	r0, [r7, #4]
 8014590:	6878      	ldr	r0, [r7, #4]
 8014592:	f7ff ffe9 	bl	8014568 <_ZN9interface16XFTimeoutManagerD1Ev>
 8014596:	2108      	movs	r1, #8
 8014598:	6878      	ldr	r0, [r7, #4]
 801459a:	f017 fa64 	bl	802ba66 <_ZdlPvj>
 801459e:	687b      	ldr	r3, [r7, #4]
 80145a0:	4618      	mov	r0, r3
 80145a2:	3708      	adds	r7, #8
 80145a4:	46bd      	mov	sp, r7
 80145a6:	bd80      	pop	{r7, pc}

080145a8 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE10_List_implD1Ev>:
	  }
	return __n;
      }
#endif

      struct _List_impl
 80145a8:	b580      	push	{r7, lr}
 80145aa:	b082      	sub	sp, #8
 80145ac:	af00      	add	r7, sp, #0
 80145ae:	6078      	str	r0, [r7, #4]
 80145b0:	6878      	ldr	r0, [r7, #4]
 80145b2:	f000 fb88 	bl	8014cc6 <_ZNSaISt10_List_nodeIP9XFTimeoutEED1Ev>
 80145b6:	687b      	ldr	r3, [r7, #4]
 80145b8:	4618      	mov	r0, r3
 80145ba:	3708      	adds	r7, #8
 80145bc:	46bd      	mov	sp, r7
 80145be:	bd80      	pop	{r7, pc}

080145c0 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EEC1Ev>:
      const _Node_alloc_type&
      _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
      { return _M_impl; }

#if __cplusplus >= 201103L
      _List_base() = default;
 80145c0:	b580      	push	{r7, lr}
 80145c2:	b082      	sub	sp, #8
 80145c4:	af00      	add	r7, sp, #0
 80145c6:	6078      	str	r0, [r7, #4]
 80145c8:	687b      	ldr	r3, [r7, #4]
 80145ca:	4618      	mov	r0, r3
 80145cc:	f000 fb6b 	bl	8014ca6 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE10_List_implC1Ev>
 80145d0:	687b      	ldr	r3, [r7, #4]
 80145d2:	4618      	mov	r0, r3
 80145d4:	3708      	adds	r7, #8
 80145d6:	46bd      	mov	sp, r7
 80145d8:	bd80      	pop	{r7, pc}

080145da <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %list with no elements.
       */
#if __cplusplus >= 201103L
      list() = default;
 80145da:	b580      	push	{r7, lr}
 80145dc:	b082      	sub	sp, #8
 80145de:	af00      	add	r7, sp, #0
 80145e0:	6078      	str	r0, [r7, #4]
 80145e2:	687b      	ldr	r3, [r7, #4]
 80145e4:	4618      	mov	r0, r3
 80145e6:	f7ff ffeb 	bl	80145c0 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EEC1Ev>
 80145ea:	687b      	ldr	r3, [r7, #4]
 80145ec:	4618      	mov	r0, r3
 80145ee:	3708      	adds	r7, #8
 80145f0:	46bd      	mov	sp, r7
 80145f2:	bd80      	pop	{r7, pc}

080145f4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EED1Ev>:
       *  things.  The _Base dtor only erases the elements, and note
       *  that if the elements themselves are pointers, the pointed-to
       *  memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      ~list() = default;
 80145f4:	b580      	push	{r7, lr}
 80145f6:	b082      	sub	sp, #8
 80145f8:	af00      	add	r7, sp, #0
 80145fa:	6078      	str	r0, [r7, #4]
 80145fc:	687b      	ldr	r3, [r7, #4]
 80145fe:	4618      	mov	r0, r3
 8014600:	f000 fb6d 	bl	8014cde <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EED1Ev>
 8014604:	687b      	ldr	r3, [r7, #4]
 8014606:	4618      	mov	r0, r3
 8014608:	3708      	adds	r7, #8
 801460a:	46bd      	mov	sp, r7
 801460c:	bd80      	pop	{r7, pc}
	...

08014610 <_ZN23XFTimeoutManagerDefaultC1Ev>:

XFTimeoutManagerDefault::XFTimeoutManagerDefault() :
 8014610:	b580      	push	{r7, lr}
 8014612:	b082      	sub	sp, #8
 8014614:	af00      	add	r7, sp, #0
 8014616:	6078      	str	r0, [r7, #4]
    pMutex_(nullptr)
 8014618:	687b      	ldr	r3, [r7, #4]
 801461a:	4618      	mov	r0, r3
 801461c:	f7ff ff24 	bl	8014468 <_ZN9interface16XFTimeoutManagerC1Ev>
 8014620:	4a0f      	ldr	r2, [pc, #60]	; (8014660 <_ZN23XFTimeoutManagerDefaultC1Ev+0x50>)
 8014622:	687b      	ldr	r3, [r7, #4]
 8014624:	601a      	str	r2, [r3, #0]
 8014626:	687b      	ldr	r3, [r7, #4]
 8014628:	3308      	adds	r3, #8
 801462a:	4618      	mov	r0, r3
 801462c:	f7ff ffd5 	bl	80145da <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EEC1Ev>
 8014630:	687b      	ldr	r3, [r7, #4]
 8014632:	2200      	movs	r2, #0
 8014634:	615a      	str	r2, [r3, #20]
{
    pMutex_ = XFMutex::create();
 8014636:	f001 ff81 	bl	801653c <_ZN9interface7XFMutex6createEv>
 801463a:	4602      	mov	r2, r0
 801463c:	687b      	ldr	r3, [r7, #4]
 801463e:	615a      	str	r2, [r3, #20]
    assert(pMutex_);
 8014640:	687b      	ldr	r3, [r7, #4]
 8014642:	695b      	ldr	r3, [r3, #20]
 8014644:	2b00      	cmp	r3, #0
 8014646:	d105      	bne.n	8014654 <_ZN23XFTimeoutManagerDefaultC1Ev+0x44>
 8014648:	4b06      	ldr	r3, [pc, #24]	; (8014664 <_ZN23XFTimeoutManagerDefaultC1Ev+0x54>)
 801464a:	4a07      	ldr	r2, [pc, #28]	; (8014668 <_ZN23XFTimeoutManagerDefaultC1Ev+0x58>)
 801464c:	211d      	movs	r1, #29
 801464e:	4807      	ldr	r0, [pc, #28]	; (801466c <_ZN23XFTimeoutManagerDefaultC1Ev+0x5c>)
 8014650:	f017 fc4a 	bl	802bee8 <__assert_func>
}
 8014654:	687b      	ldr	r3, [r7, #4]
 8014656:	4618      	mov	r0, r3
 8014658:	3708      	adds	r7, #8
 801465a:	46bd      	mov	sp, r7
 801465c:	bd80      	pop	{r7, pc}
 801465e:	bf00      	nop
 8014660:	0802f9d8 	.word	0x0802f9d8
 8014664:	0802ebcc 	.word	0x0802ebcc
 8014668:	0802ebd4 	.word	0x0802ebd4
 801466c:	0802ec08 	.word	0x0802ec08

08014670 <_ZN23XFTimeoutManagerDefaultD1Ev>:

XFTimeoutManagerDefault::~XFTimeoutManagerDefault()
 8014670:	b580      	push	{r7, lr}
 8014672:	b082      	sub	sp, #8
 8014674:	af00      	add	r7, sp, #0
 8014676:	6078      	str	r0, [r7, #4]
 8014678:	4a08      	ldr	r2, [pc, #32]	; (801469c <_ZN23XFTimeoutManagerDefaultD1Ev+0x2c>)
 801467a:	687b      	ldr	r3, [r7, #4]
 801467c:	601a      	str	r2, [r3, #0]
 801467e:	687b      	ldr	r3, [r7, #4]
 8014680:	3308      	adds	r3, #8
 8014682:	4618      	mov	r0, r3
 8014684:	f7ff ffb6 	bl	80145f4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EED1Ev>
 8014688:	687b      	ldr	r3, [r7, #4]
 801468a:	4618      	mov	r0, r3
 801468c:	f7ff ff6c 	bl	8014568 <_ZN9interface16XFTimeoutManagerD1Ev>
{
}
 8014690:	687b      	ldr	r3, [r7, #4]
 8014692:	4618      	mov	r0, r3
 8014694:	3708      	adds	r7, #8
 8014696:	46bd      	mov	sp, r7
 8014698:	bd80      	pop	{r7, pc}
 801469a:	bf00      	nop
 801469c:	0802f9d8 	.word	0x0802f9d8

080146a0 <_ZN23XFTimeoutManagerDefaultD0Ev>:
XFTimeoutManagerDefault::~XFTimeoutManagerDefault()
 80146a0:	b580      	push	{r7, lr}
 80146a2:	b082      	sub	sp, #8
 80146a4:	af00      	add	r7, sp, #0
 80146a6:	6078      	str	r0, [r7, #4]
}
 80146a8:	6878      	ldr	r0, [r7, #4]
 80146aa:	f7ff ffe1 	bl	8014670 <_ZN23XFTimeoutManagerDefaultD1Ev>
 80146ae:	2118      	movs	r1, #24
 80146b0:	6878      	ldr	r0, [r7, #4]
 80146b2:	f017 f9d8 	bl	802ba66 <_ZdlPvj>
 80146b6:	687b      	ldr	r3, [r7, #4]
 80146b8:	4618      	mov	r0, r3
 80146ba:	3708      	adds	r7, #8
 80146bc:	46bd      	mov	sp, r7
 80146be:	bd80      	pop	{r7, pc}

080146c0 <_ZN23XFTimeoutManagerDefault5startEv>:

void XFTimeoutManagerDefault::start()
{
 80146c0:	b580      	push	{r7, lr}
 80146c2:	b082      	sub	sp, #8
 80146c4:	af00      	add	r7, sp, #0
 80146c6:	6078      	str	r0, [r7, #4]
    // Check tickInterval. Set default value if not set
    if (tickInterval_ == 0)
 80146c8:	687b      	ldr	r3, [r7, #4]
 80146ca:	685b      	ldr	r3, [r3, #4]
 80146cc:	2b00      	cmp	r3, #0
 80146ce:	d102      	bne.n	80146d6 <_ZN23XFTimeoutManagerDefault5startEv+0x16>
    {
        tickInterval_ = 10;
 80146d0:	687b      	ldr	r3, [r7, #4]
 80146d2:	220a      	movs	r2, #10
 80146d4:	605a      	str	r2, [r3, #4]
    }

    XF_startTimeoutManagerTimer(uint32_t(tickInterval_));
 80146d6:	687b      	ldr	r3, [r7, #4]
 80146d8:	685b      	ldr	r3, [r3, #4]
 80146da:	4618      	mov	r0, r3
 80146dc:	f001 ffc0 	bl	8016660 <XF_startTimeoutManagerTimer>
}
 80146e0:	bf00      	nop
 80146e2:	3708      	adds	r7, #8
 80146e4:	46bd      	mov	sp, r7
 80146e6:	bd80      	pop	{r7, pc}

080146e8 <_ZN23XFTimeoutManagerDefault15scheduleTimeoutEllPN9interface10XFReactiveE>:

void XFTimeoutManagerDefault::scheduleTimeout(int32_t timeoutId, int32_t interval, interface::XFReactive * pReactive)
{
 80146e8:	b590      	push	{r4, r7, lr}
 80146ea:	b087      	sub	sp, #28
 80146ec:	af00      	add	r7, sp, #0
 80146ee:	60f8      	str	r0, [r7, #12]
 80146f0:	60b9      	str	r1, [r7, #8]
 80146f2:	607a      	str	r2, [r7, #4]
 80146f4:	603b      	str	r3, [r7, #0]
    XFTimeout * pTimeout = new XFTimeout(timeoutId, interval, pReactive);
 80146f6:	2018      	movs	r0, #24
 80146f8:	f017 f9c6 	bl	802ba88 <_Znwj>
 80146fc:	4603      	mov	r3, r0
 80146fe:	461c      	mov	r4, r3
 8014700:	683b      	ldr	r3, [r7, #0]
 8014702:	687a      	ldr	r2, [r7, #4]
 8014704:	68b9      	ldr	r1, [r7, #8]
 8014706:	4620      	mov	r0, r4
 8014708:	f7ff fb1a 	bl	8013d40 <_ZN9XFTimeoutC1EiiPN9interface10XFReactiveE>
 801470c:	617c      	str	r4, [r7, #20]

    if (pTimeout)
 801470e:	697b      	ldr	r3, [r7, #20]
 8014710:	2b00      	cmp	r3, #0
 8014712:	d006      	beq.n	8014722 <_ZN23XFTimeoutManagerDefault15scheduleTimeoutEllPN9interface10XFReactiveE+0x3a>
    {
        addTimeout(pTimeout);
 8014714:	68fb      	ldr	r3, [r7, #12]
 8014716:	681b      	ldr	r3, [r3, #0]
 8014718:	3320      	adds	r3, #32
 801471a:	681b      	ldr	r3, [r3, #0]
 801471c:	6979      	ldr	r1, [r7, #20]
 801471e:	68f8      	ldr	r0, [r7, #12]
 8014720:	4798      	blx	r3
    }
}
 8014722:	bf00      	nop
 8014724:	371c      	adds	r7, #28
 8014726:	46bd      	mov	sp, r7
 8014728:	bd90      	pop	{r4, r7, pc}

0801472a <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE>:

void XFTimeoutManagerDefault::unscheduleTimeout(int32_t timeoutId, interface::XFReactive * pReactive)
{
 801472a:	b590      	push	{r4, r7, lr}
 801472c:	b091      	sub	sp, #68	; 0x44
 801472e:	af00      	add	r7, sp, #0
 8014730:	60f8      	str	r0, [r7, #12]
 8014732:	60b9      	str	r1, [r7, #8]
 8014734:	607a      	str	r2, [r7, #4]
    const XFTimeout timeout(timeoutId, 0, pReactive);
 8014736:	f107 0018 	add.w	r0, r7, #24
 801473a:	687b      	ldr	r3, [r7, #4]
 801473c:	2200      	movs	r2, #0
 801473e:	68b9      	ldr	r1, [r7, #8]
 8014740:	f7ff fafe 	bl	8013d40 <_ZN9XFTimeoutC1EiiPN9interface10XFReactiveE>
    XFTimeout * pTimeout;

    pMutex_->lock();
 8014744:	68fb      	ldr	r3, [r7, #12]
 8014746:	695a      	ldr	r2, [r3, #20]
 8014748:	68fb      	ldr	r3, [r7, #12]
 801474a:	695b      	ldr	r3, [r3, #20]
 801474c:	681b      	ldr	r3, [r3, #0]
 801474e:	3308      	adds	r3, #8
 8014750:	681b      	ldr	r3, [r3, #0]
 8014752:	4610      	mov	r0, r2
 8014754:	4798      	blx	r3
    {
        for (TimeoutList::iterator i = timeouts_.begin();
 8014756:	68fb      	ldr	r3, [r7, #12]
 8014758:	3308      	adds	r3, #8
 801475a:	4618      	mov	r0, r3
 801475c:	f000 facf 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014760:	4603      	mov	r3, r0
 8014762:	617b      	str	r3, [r7, #20]
             i != timeouts_.end(); /*Do not increment here!*/)
 8014764:	68fb      	ldr	r3, [r7, #12]
 8014766:	3308      	adds	r3, #8
 8014768:	4618      	mov	r0, r3
 801476a:	f000 fad9 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 801476e:	4603      	mov	r3, r0
 8014770:	633b      	str	r3, [r7, #48]	; 0x30
 8014772:	f107 0230 	add.w	r2, r7, #48	; 0x30
 8014776:	f107 0314 	add.w	r3, r7, #20
 801477a:	4611      	mov	r1, r2
 801477c:	4618      	mov	r0, r3
 801477e:	f000 fadf 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 8014782:	4603      	mov	r3, r0
 8014784:	2b00      	cmp	r3, #0
 8014786:	d058      	beq.n	801483a <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0x110>
        {
            pTimeout = *i;
 8014788:	f107 0314 	add.w	r3, r7, #20
 801478c:	4618      	mov	r0, r3
 801478e:	f000 faeb 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014792:	4603      	mov	r3, r0
 8014794:	681b      	ldr	r3, [r3, #0]
 8014796:	63fb      	str	r3, [r7, #60]	; 0x3c

            // Check if behavior and timeout id are equal
            if (*pTimeout == timeout)
 8014798:	f107 0318 	add.w	r3, r7, #24
 801479c:	4619      	mov	r1, r3
 801479e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80147a0:	f7ff faec 	bl	8013d7c <_ZNK9XFTimeouteqERKS_>
 80147a4:	4603      	mov	r3, r0
 80147a6:	2b00      	cmp	r3, #0
 80147a8:	d040      	beq.n	801482c <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0x102>
            {
                TimeoutList::iterator next = i;
 80147aa:	697b      	ldr	r3, [r7, #20]
 80147ac:	613b      	str	r3, [r7, #16]

                // Check if remaining ticks can be given further
                if (++next != timeouts_.end())
 80147ae:	f107 0310 	add.w	r3, r7, #16
 80147b2:	4618      	mov	r0, r3
 80147b4:	f000 fae6 	bl	8014d84 <_ZNSt14_List_iteratorIP9XFTimeoutEppEv>
 80147b8:	4604      	mov	r4, r0
 80147ba:	68fb      	ldr	r3, [r7, #12]
 80147bc:	3308      	adds	r3, #8
 80147be:	4618      	mov	r0, r3
 80147c0:	f000 faae 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 80147c4:	4603      	mov	r3, r0
 80147c6:	637b      	str	r3, [r7, #52]	; 0x34
 80147c8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80147cc:	4619      	mov	r1, r3
 80147ce:	4620      	mov	r0, r4
 80147d0:	f000 fab6 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 80147d4:	4603      	mov	r3, r0
 80147d6:	2b00      	cmp	r3, #0
 80147d8:	d00e      	beq.n	80147f8 <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0xce>
                {
                    // Add (remaining) ticks to next timeout in list
                    (*next)->addToRelTicks(pTimeout->getRelTicks());
 80147da:	f107 0310 	add.w	r3, r7, #16
 80147de:	4618      	mov	r0, r3
 80147e0:	f000 fac2 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 80147e4:	4603      	mov	r3, r0
 80147e6:	681c      	ldr	r4, [r3, #0]
 80147e8:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 80147ea:	f7ff fe51 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 80147ee:	4603      	mov	r3, r0
 80147f0:	4619      	mov	r1, r3
 80147f2:	4620      	mov	r0, r4
 80147f4:	f7ff fe69 	bl	80144ca <_ZN9XFTimeout13addToRelTicksEi>
                }

                i = timeouts_.erase(i);
 80147f8:	68fb      	ldr	r3, [r7, #12]
 80147fa:	f103 0408 	add.w	r4, r3, #8
 80147fe:	f107 0214 	add.w	r2, r7, #20
 8014802:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8014806:	4611      	mov	r1, r2
 8014808:	4618      	mov	r0, r3
 801480a:	f000 facb 	bl	8014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>
 801480e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8014810:	4620      	mov	r0, r4
 8014812:	f000 fad7 	bl	8014dc4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5eraseESt20_List_const_iteratorIS2_E>
 8014816:	4603      	mov	r3, r0
 8014818:	617b      	str	r3, [r7, #20]
                // Iterator now points to the next element

                delete pTimeout;
 801481a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801481c:	2b00      	cmp	r3, #0
 801481e:	d0a1      	beq.n	8014764 <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0x3a>
 8014820:	681a      	ldr	r2, [r3, #0]
 8014822:	3204      	adds	r2, #4
 8014824:	6812      	ldr	r2, [r2, #0]
 8014826:	4618      	mov	r0, r3
 8014828:	4790      	blx	r2
 801482a:	e79b      	b.n	8014764 <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0x3a>
            }
            else
            {
                i++;
 801482c:	f107 0314 	add.w	r3, r7, #20
 8014830:	2100      	movs	r1, #0
 8014832:	4618      	mov	r0, r3
 8014834:	f000 fae1 	bl	8014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>
        for (TimeoutList::iterator i = timeouts_.begin();
 8014838:	e794      	b.n	8014764 <_ZN23XFTimeoutManagerDefault17unscheduleTimeoutElPN9interface10XFReactiveE+0x3a>
            }
        }
    }
    pMutex_->unlock();
 801483a:	68fb      	ldr	r3, [r7, #12]
 801483c:	695a      	ldr	r2, [r3, #20]
 801483e:	68fb      	ldr	r3, [r7, #12]
 8014840:	695b      	ldr	r3, [r3, #20]
 8014842:	681b      	ldr	r3, [r3, #0]
 8014844:	330c      	adds	r3, #12
 8014846:	681b      	ldr	r3, [r3, #0]
 8014848:	4610      	mov	r0, r2
 801484a:	4798      	blx	r3
    const XFTimeout timeout(timeoutId, 0, pReactive);
 801484c:	f107 0318 	add.w	r3, r7, #24
 8014850:	4618      	mov	r0, r3
 8014852:	f7ff fabd 	bl	8013dd0 <_ZN9XFTimeoutD1Ev>
}
 8014856:	bf00      	nop
 8014858:	3744      	adds	r7, #68	; 0x44
 801485a:	46bd      	mov	sp, r7
 801485c:	bd90      	pop	{r4, r7, pc}
	...

08014860 <_ZN23XFTimeoutManagerDefault4tickEv>:

void XFTimeoutManagerDefault::tick()
{
 8014860:	b590      	push	{r4, r7, lr}
 8014862:	b089      	sub	sp, #36	; 0x24
 8014864:	af00      	add	r7, sp, #0
 8014866:	6078      	str	r0, [r7, #4]
    assert(tickInterval_);      // Did you call start()?!
 8014868:	687b      	ldr	r3, [r7, #4]
 801486a:	685b      	ldr	r3, [r3, #4]
 801486c:	2b00      	cmp	r3, #0
 801486e:	d105      	bne.n	801487c <_ZN23XFTimeoutManagerDefault4tickEv+0x1c>
 8014870:	4b66      	ldr	r3, [pc, #408]	; (8014a0c <_ZN23XFTimeoutManagerDefault4tickEv+0x1ac>)
 8014872:	4a67      	ldr	r2, [pc, #412]	; (8014a10 <_ZN23XFTimeoutManagerDefault4tickEv+0x1b0>)
 8014874:	2161      	movs	r1, #97	; 0x61
 8014876:	4867      	ldr	r0, [pc, #412]	; (8014a14 <_ZN23XFTimeoutManagerDefault4tickEv+0x1b4>)
 8014878:	f017 fb36 	bl	802bee8 <__assert_func>
    int32_t intervalToSubtract = tickInterval_;
 801487c:	687b      	ldr	r3, [r7, #4]
 801487e:	685b      	ldr	r3, [r3, #4]
 8014880:	61fb      	str	r3, [r7, #28]

    while (!timeouts_.empty())
 8014882:	687b      	ldr	r3, [r7, #4]
 8014884:	3308      	adds	r3, #8
 8014886:	4618      	mov	r0, r3
 8014888:	f000 facb 	bl	8014e22 <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE5emptyEv>
 801488c:	4603      	mov	r3, r0
 801488e:	f083 0301 	eor.w	r3, r3, #1
 8014892:	b2db      	uxtb	r3, r3
 8014894:	2b00      	cmp	r3, #0
 8014896:	f000 80b5 	beq.w	8014a04 <_ZN23XFTimeoutManagerDefault4tickEv+0x1a4>
    {
        pMutex_->lock();
 801489a:	687b      	ldr	r3, [r7, #4]
 801489c:	695a      	ldr	r2, [r3, #20]
 801489e:	687b      	ldr	r3, [r7, #4]
 80148a0:	695b      	ldr	r3, [r3, #20]
 80148a2:	681b      	ldr	r3, [r3, #0]
 80148a4:	3308      	adds	r3, #8
 80148a6:	681b      	ldr	r3, [r3, #0]
 80148a8:	4610      	mov	r0, r2
 80148aa:	4798      	blx	r3
        {
            XFTimeout * pFirstTimeout = timeouts_.front();
 80148ac:	687b      	ldr	r3, [r7, #4]
 80148ae:	3308      	adds	r3, #8
 80148b0:	4618      	mov	r0, r3
 80148b2:	f000 fac8 	bl	8014e46 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5frontEv>
 80148b6:	4603      	mov	r3, r0
 80148b8:	681b      	ldr	r3, [r3, #0]
 80148ba:	61bb      	str	r3, [r7, #24]

            // Subtract time elapsed
            pFirstTimeout->substractFromRelTicks(intervalToSubtract);
 80148bc:	69f9      	ldr	r1, [r7, #28]
 80148be:	69b8      	ldr	r0, [r7, #24]
 80148c0:	f7ff fdf2 	bl	80144a8 <_ZN9XFTimeout21substractFromRelTicksEi>

            // From now on set it to zero.
            intervalToSubtract = 0;
 80148c4:	2300      	movs	r3, #0
 80148c6:	61fb      	str	r3, [r7, #28]

            // Check timeout timed out
            if (pFirstTimeout->getRelTicks() <= 0)
 80148c8:	69b8      	ldr	r0, [r7, #24]
 80148ca:	f7ff fde1 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 80148ce:	4603      	mov	r3, r0
 80148d0:	2b00      	cmp	r3, #0
 80148d2:	bfd4      	ite	le
 80148d4:	2301      	movle	r3, #1
 80148d6:	2300      	movgt	r3, #0
 80148d8:	b2db      	uxtb	r3, r3
 80148da:	2b00      	cmp	r3, #0
 80148dc:	d07c      	beq.n	80149d8 <_ZN23XFTimeoutManagerDefault4tickEv+0x178>
            {
                // Check remaining ticks can be given further
                if (timeouts_.size() > 1)
 80148de:	687b      	ldr	r3, [r7, #4]
 80148e0:	3308      	adds	r3, #8
 80148e2:	4618      	mov	r0, r3
 80148e4:	f000 fac2 	bl	8014e6c <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE4sizeEv>
 80148e8:	4603      	mov	r3, r0
 80148ea:	2b01      	cmp	r3, #1
 80148ec:	bf8c      	ite	hi
 80148ee:	2301      	movhi	r3, #1
 80148f0:	2300      	movls	r3, #0
 80148f2:	b2db      	uxtb	r3, r3
 80148f4:	2b00      	cmp	r3, #0
 80148f6:	d01e      	beq.n	8014936 <_ZN23XFTimeoutManagerDefault4tickEv+0xd6>
                {
                    TimeoutList::iterator i = timeouts_.begin();
 80148f8:	687b      	ldr	r3, [r7, #4]
 80148fa:	3308      	adds	r3, #8
 80148fc:	4618      	mov	r0, r3
 80148fe:	f000 f9fe 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014902:	4603      	mov	r3, r0
 8014904:	60fb      	str	r3, [r7, #12]

                    // Add ticks overrun to next timeout
                    i++;
 8014906:	f107 030c 	add.w	r3, r7, #12
 801490a:	2100      	movs	r1, #0
 801490c:	4618      	mov	r0, r3
 801490e:	f000 fa74 	bl	8014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>
                    (*i)->substractFromRelTicks(abs(pFirstTimeout->getRelTicks()));
 8014912:	f107 030c 	add.w	r3, r7, #12
 8014916:	4618      	mov	r0, r3
 8014918:	f000 fa26 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 801491c:	4603      	mov	r3, r0
 801491e:	681c      	ldr	r4, [r3, #0]
 8014920:	69b8      	ldr	r0, [r7, #24]
 8014922:	f7ff fdb5 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014926:	4603      	mov	r3, r0
 8014928:	2b00      	cmp	r3, #0
 801492a:	bfb8      	it	lt
 801492c:	425b      	neglt	r3, r3
 801492e:	4619      	mov	r1, r3
 8014930:	4620      	mov	r0, r4
 8014932:	f7ff fdb9 	bl	80144a8 <_ZN9XFTimeout21substractFromRelTicksEi>
                }

                // Inject the timeout back to the behavioral class
                returnTimeout(pFirstTimeout);
 8014936:	69b9      	ldr	r1, [r7, #24]
 8014938:	6878      	ldr	r0, [r7, #4]
 801493a:	f000 f99f 	bl	8014c7c <_ZN23XFTimeoutManagerDefault13returnTimeoutEP9XFTimeout>

                // Remove timeout
                timeouts_.pop_front();
 801493e:	687b      	ldr	r3, [r7, #4]
 8014940:	3308      	adds	r3, #8
 8014942:	4618      	mov	r0, r3
 8014944:	f000 fa9e 	bl	8014e84 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE9pop_frontEv>

                // Check if timeouts with same timeout value are present
                for (TimeoutList::iterator it = timeouts_.begin(); it != timeouts_.end(); /*Do not increment here!*/)
 8014948:	687b      	ldr	r3, [r7, #4]
 801494a:	3308      	adds	r3, #8
 801494c:	4618      	mov	r0, r3
 801494e:	f000 f9d6 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014952:	4603      	mov	r3, r0
 8014954:	60bb      	str	r3, [r7, #8]
 8014956:	687b      	ldr	r3, [r7, #4]
 8014958:	3308      	adds	r3, #8
 801495a:	4618      	mov	r0, r3
 801495c:	f000 f9e0 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 8014960:	4603      	mov	r3, r0
 8014962:	613b      	str	r3, [r7, #16]
 8014964:	f107 0210 	add.w	r2, r7, #16
 8014968:	f107 0308 	add.w	r3, r7, #8
 801496c:	4611      	mov	r1, r2
 801496e:	4618      	mov	r0, r3
 8014970:	f000 f9e6 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 8014974:	4603      	mov	r3, r0
 8014976:	2b00      	cmp	r3, #0
 8014978:	d03a      	beq.n	80149f0 <_ZN23XFTimeoutManagerDefault4tickEv+0x190>
                {
                    if ((*it)->getRelTicks() == 0)
 801497a:	f107 0308 	add.w	r3, r7, #8
 801497e:	4618      	mov	r0, r3
 8014980:	f000 f9f2 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014984:	4603      	mov	r3, r0
 8014986:	681b      	ldr	r3, [r3, #0]
 8014988:	4618      	mov	r0, r3
 801498a:	f7ff fd81 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 801498e:	4603      	mov	r3, r0
 8014990:	2b00      	cmp	r3, #0
 8014992:	bf0c      	ite	eq
 8014994:	2301      	moveq	r3, #1
 8014996:	2300      	movne	r3, #0
 8014998:	b2db      	uxtb	r3, r3
 801499a:	2b00      	cmp	r3, #0
 801499c:	d027      	beq.n	80149ee <_ZN23XFTimeoutManagerDefault4tickEv+0x18e>
                    {
                        returnTimeout(*it);			// Return them true
 801499e:	f107 0308 	add.w	r3, r7, #8
 80149a2:	4618      	mov	r0, r3
 80149a4:	f000 f9e0 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 80149a8:	4603      	mov	r3, r0
 80149aa:	681b      	ldr	r3, [r3, #0]
 80149ac:	4619      	mov	r1, r3
 80149ae:	6878      	ldr	r0, [r7, #4]
 80149b0:	f000 f964 	bl	8014c7c <_ZN23XFTimeoutManagerDefault13returnTimeoutEP9XFTimeout>
                        it = timeouts_.erase(it);	// Remove timeout and adjust iterator to next element
 80149b4:	687b      	ldr	r3, [r7, #4]
 80149b6:	f103 0408 	add.w	r4, r3, #8
 80149ba:	f107 0208 	add.w	r2, r7, #8
 80149be:	f107 0314 	add.w	r3, r7, #20
 80149c2:	4611      	mov	r1, r2
 80149c4:	4618      	mov	r0, r3
 80149c6:	f000 f9ed 	bl	8014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>
 80149ca:	6979      	ldr	r1, [r7, #20]
 80149cc:	4620      	mov	r0, r4
 80149ce:	f000 f9f9 	bl	8014dc4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5eraseESt20_List_const_iteratorIS2_E>
 80149d2:	4603      	mov	r3, r0
 80149d4:	60bb      	str	r3, [r7, #8]
                for (TimeoutList::iterator it = timeouts_.begin(); it != timeouts_.end(); /*Do not increment here!*/)
 80149d6:	e7be      	b.n	8014956 <_ZN23XFTimeoutManagerDefault4tickEv+0xf6>
                    }
                }
            }
            else
            {
                pMutex_->unlock();
 80149d8:	687b      	ldr	r3, [r7, #4]
 80149da:	695a      	ldr	r2, [r3, #20]
 80149dc:	687b      	ldr	r3, [r7, #4]
 80149de:	695b      	ldr	r3, [r3, #20]
 80149e0:	681b      	ldr	r3, [r3, #0]
 80149e2:	330c      	adds	r3, #12
 80149e4:	681b      	ldr	r3, [r3, #0]
 80149e6:	4610      	mov	r0, r2
 80149e8:	4798      	blx	r3
                // Done. Exit while loop
                break;
 80149ea:	bf00      	nop
            }
        }
        pMutex_->unlock();
    }
}
 80149ec:	e00a      	b.n	8014a04 <_ZN23XFTimeoutManagerDefault4tickEv+0x1a4>
                        break;
 80149ee:	bf00      	nop
        pMutex_->unlock();
 80149f0:	687b      	ldr	r3, [r7, #4]
 80149f2:	695a      	ldr	r2, [r3, #20]
 80149f4:	687b      	ldr	r3, [r7, #4]
 80149f6:	695b      	ldr	r3, [r3, #20]
 80149f8:	681b      	ldr	r3, [r3, #0]
 80149fa:	330c      	adds	r3, #12
 80149fc:	681b      	ldr	r3, [r3, #0]
 80149fe:	4610      	mov	r0, r2
 8014a00:	4798      	blx	r3
    while (!timeouts_.empty())
 8014a02:	e73e      	b.n	8014882 <_ZN23XFTimeoutManagerDefault4tickEv+0x22>
}
 8014a04:	bf00      	nop
 8014a06:	3724      	adds	r7, #36	; 0x24
 8014a08:	46bd      	mov	sp, r7
 8014a0a:	bd90      	pop	{r4, r7, pc}
 8014a0c:	0802ec7c 	.word	0x0802ec7c
 8014a10:	0802ec8c 	.word	0x0802ec8c
 8014a14:	0802ec08 	.word	0x0802ec08

08014a18 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout>:

void XFTimeoutManagerDefault::addTimeout(XFTimeout * pNewTimeout)
{
 8014a18:	b590      	push	{r4, r7, lr}
 8014a1a:	b08d      	sub	sp, #52	; 0x34
 8014a1c:	af00      	add	r7, sp, #0
 8014a1e:	6078      	str	r0, [r7, #4]
 8014a20:	6039      	str	r1, [r7, #0]
    if (!timeouts_.empty())
 8014a22:	687b      	ldr	r3, [r7, #4]
 8014a24:	3308      	adds	r3, #8
 8014a26:	4618      	mov	r0, r3
 8014a28:	f000 f9fb 	bl	8014e22 <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE5emptyEv>
 8014a2c:	4603      	mov	r3, r0
 8014a2e:	f083 0301 	eor.w	r3, r3, #1
 8014a32:	b2db      	uxtb	r3, r3
 8014a34:	2b00      	cmp	r3, #0
 8014a36:	f000 8116 	beq.w	8014c66 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x24e>
    {
        pMutex_->lock();
 8014a3a:	687b      	ldr	r3, [r7, #4]
 8014a3c:	695a      	ldr	r2, [r3, #20]
 8014a3e:	687b      	ldr	r3, [r7, #4]
 8014a40:	695b      	ldr	r3, [r3, #20]
 8014a42:	681b      	ldr	r3, [r3, #0]
 8014a44:	3308      	adds	r3, #8
 8014a46:	681b      	ldr	r3, [r3, #0]
 8014a48:	4610      	mov	r0, r2
 8014a4a:	4798      	blx	r3
        {
            // Insert timeout before timeout(s) triggering later
            TimeoutList::iterator i = timeouts_.begin();
 8014a4c:	687b      	ldr	r3, [r7, #4]
 8014a4e:	3308      	adds	r3, #8
 8014a50:	4618      	mov	r0, r3
 8014a52:	f000 f954 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014a56:	4603      	mov	r3, r0
 8014a58:	60bb      	str	r3, [r7, #8]

            unsigned int index = 0;
 8014a5a:	2300      	movs	r3, #0
 8014a5c:	62fb      	str	r3, [r7, #44]	; 0x2c

            // Find the right place to insert new timeout
            while (i != timeouts_.end() &&
 8014a5e:	687b      	ldr	r3, [r7, #4]
 8014a60:	3308      	adds	r3, #8
 8014a62:	4618      	mov	r0, r3
 8014a64:	f000 f95c 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 8014a68:	4603      	mov	r3, r0
 8014a6a:	60fb      	str	r3, [r7, #12]
 8014a6c:	f107 020c 	add.w	r2, r7, #12
 8014a70:	f107 0308 	add.w	r3, r7, #8
 8014a74:	4611      	mov	r1, r2
 8014a76:	4618      	mov	r0, r3
 8014a78:	f000 f962 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 8014a7c:	4603      	mov	r3, r0
 8014a7e:	2b00      	cmp	r3, #0
 8014a80:	d013      	beq.n	8014aaa <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x92>
                   (*i)->getRelTicks() < pNewTimeout->getRelTicks())
 8014a82:	f107 0308 	add.w	r3, r7, #8
 8014a86:	4618      	mov	r0, r3
 8014a88:	f000 f96e 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014a8c:	4603      	mov	r3, r0
 8014a8e:	681b      	ldr	r3, [r3, #0]
 8014a90:	4618      	mov	r0, r3
 8014a92:	f7ff fcfd 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014a96:	4604      	mov	r4, r0
 8014a98:	683b      	ldr	r3, [r7, #0]
 8014a9a:	4618      	mov	r0, r3
 8014a9c:	f7ff fcf8 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014aa0:	4603      	mov	r3, r0
            while (i != timeouts_.end() &&
 8014aa2:	429c      	cmp	r4, r3
 8014aa4:	da01      	bge.n	8014aaa <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x92>
 8014aa6:	2301      	movs	r3, #1
 8014aa8:	e000      	b.n	8014aac <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x94>
 8014aaa:	2300      	movs	r3, #0
 8014aac:	2b00      	cmp	r3, #0
 8014aae:	d019      	beq.n	8014ae4 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0xcc>
            {	// -> by: test4, test5
                pNewTimeout->substractFromRelTicks((*i)->getRelTicks());
 8014ab0:	683c      	ldr	r4, [r7, #0]
 8014ab2:	f107 0308 	add.w	r3, r7, #8
 8014ab6:	4618      	mov	r0, r3
 8014ab8:	f000 f956 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014abc:	4603      	mov	r3, r0
 8014abe:	681b      	ldr	r3, [r3, #0]
 8014ac0:	4618      	mov	r0, r3
 8014ac2:	f7ff fce5 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014ac6:	4603      	mov	r3, r0
 8014ac8:	4619      	mov	r1, r3
 8014aca:	4620      	mov	r0, r4
 8014acc:	f7ff fcec 	bl	80144a8 <_ZN9XFTimeout21substractFromRelTicksEi>
                i++; index++;
 8014ad0:	f107 0308 	add.w	r3, r7, #8
 8014ad4:	2100      	movs	r1, #0
 8014ad6:	4618      	mov	r0, r3
 8014ad8:	f000 f98f 	bl	8014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>
 8014adc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8014ade:	3301      	adds	r3, #1
 8014ae0:	62fb      	str	r3, [r7, #44]	; 0x2c
            while (i != timeouts_.end() &&
 8014ae2:	e7bc      	b.n	8014a5e <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x46>
            }

            if (i != timeouts_.end())
 8014ae4:	687b      	ldr	r3, [r7, #4]
 8014ae6:	3308      	adds	r3, #8
 8014ae8:	4618      	mov	r0, r3
 8014aea:	f000 f919 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 8014aee:	4603      	mov	r3, r0
 8014af0:	613b      	str	r3, [r7, #16]
 8014af2:	f107 0210 	add.w	r2, r7, #16
 8014af6:	f107 0308 	add.w	r3, r7, #8
 8014afa:	4611      	mov	r1, r2
 8014afc:	4618      	mov	r0, r3
 8014afe:	f000 f91f 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 8014b02:	4603      	mov	r3, r0
 8014b04:	2b00      	cmp	r3, #0
 8014b06:	f000 808c 	beq.w	8014c22 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x20a>
            {
                if ((*i)->getRelTicks() != pNewTimeout->getRelTicks())
 8014b0a:	f107 0308 	add.w	r3, r7, #8
 8014b0e:	4618      	mov	r0, r3
 8014b10:	f000 f92a 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014b14:	4603      	mov	r3, r0
 8014b16:	681b      	ldr	r3, [r3, #0]
 8014b18:	4618      	mov	r0, r3
 8014b1a:	f7ff fcb9 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014b1e:	4604      	mov	r4, r0
 8014b20:	683b      	ldr	r3, [r7, #0]
 8014b22:	4618      	mov	r0, r3
 8014b24:	f7ff fcb4 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014b28:	4603      	mov	r3, r0
 8014b2a:	429c      	cmp	r4, r3
 8014b2c:	bf14      	ite	ne
 8014b2e:	2301      	movne	r3, #1
 8014b30:	2300      	moveq	r3, #0
 8014b32:	b2db      	uxtb	r3, r3
 8014b34:	2b00      	cmp	r3, #0
 8014b36:	d021      	beq.n	8014b7c <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x164>
                {	// -> by: test1, test4, test5
                    // Timeout are going to timeout at different times

                    // Insert new timeout before
                    timeouts_.insert(i, pNewTimeout);
 8014b38:	687b      	ldr	r3, [r7, #4]
 8014b3a:	f103 0408 	add.w	r4, r3, #8
 8014b3e:	f107 0208 	add.w	r2, r7, #8
 8014b42:	f107 0314 	add.w	r3, r7, #20
 8014b46:	4611      	mov	r1, r2
 8014b48:	4618      	mov	r0, r3
 8014b4a:	f000 f92b 	bl	8014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>
 8014b4e:	463b      	mov	r3, r7
 8014b50:	461a      	mov	r2, r3
 8014b52:	6979      	ldr	r1, [r7, #20]
 8014b54:	4620      	mov	r0, r4
 8014b56:	f000 f9a5 	bl	8014ea4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE6insertESt20_List_const_iteratorIS2_ERKS2_>

                    // Remove time from following timeout
                    (*i)->substractFromRelTicks(pNewTimeout->getRelTicks());
 8014b5a:	f107 0308 	add.w	r3, r7, #8
 8014b5e:	4618      	mov	r0, r3
 8014b60:	f000 f902 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014b64:	4603      	mov	r3, r0
 8014b66:	681c      	ldr	r4, [r3, #0]
 8014b68:	683b      	ldr	r3, [r7, #0]
 8014b6a:	4618      	mov	r0, r3
 8014b6c:	f7ff fc90 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014b70:	4603      	mov	r3, r0
 8014b72:	4619      	mov	r1, r3
 8014b74:	4620      	mov	r0, r4
 8014b76:	f7ff fc97 	bl	80144a8 <_ZN9XFTimeout21substractFromRelTicksEi>
 8014b7a:	e06a      	b.n	8014c52 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x23a>

                }
                else
                {	// -> by: test1, test5
                    const int32_t relTicks = (*i)->getRelTicks();
 8014b7c:	f107 0308 	add.w	r3, r7, #8
 8014b80:	4618      	mov	r0, r3
 8014b82:	f000 f8f1 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014b86:	4603      	mov	r3, r0
 8014b88:	681b      	ldr	r3, [r3, #0]
 8014b8a:	4618      	mov	r0, r3
 8014b8c:	f7ff fc80 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014b90:	62b8      	str	r0, [r7, #40]	; 0x28
                    // Timeouts timeout at the same time. Put
                    // the new one behind the actual.
                    i++;
 8014b92:	f107 0308 	add.w	r3, r7, #8
 8014b96:	2100      	movs	r1, #0
 8014b98:	4618      	mov	r0, r3
 8014b9a:	f000 f92e 	bl	8014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>

                    // Check if even more timeouts with the same timeout
                    while(i != timeouts_.end() && (*i)->getRelTicks() == 0)
 8014b9e:	687b      	ldr	r3, [r7, #4]
 8014ba0:	3308      	adds	r3, #8
 8014ba2:	4618      	mov	r0, r3
 8014ba4:	f000 f8bc 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 8014ba8:	4603      	mov	r3, r0
 8014baa:	61bb      	str	r3, [r7, #24]
 8014bac:	f107 0218 	add.w	r2, r7, #24
 8014bb0:	f107 0308 	add.w	r3, r7, #8
 8014bb4:	4611      	mov	r1, r2
 8014bb6:	4618      	mov	r0, r3
 8014bb8:	f000 f8c2 	bl	8014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>
 8014bbc:	4603      	mov	r3, r0
 8014bbe:	2b00      	cmp	r3, #0
 8014bc0:	d00e      	beq.n	8014be0 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x1c8>
 8014bc2:	f107 0308 	add.w	r3, r7, #8
 8014bc6:	4618      	mov	r0, r3
 8014bc8:	f000 f8ce 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014bcc:	4603      	mov	r3, r0
 8014bce:	681b      	ldr	r3, [r3, #0]
 8014bd0:	4618      	mov	r0, r3
 8014bd2:	f7ff fc5d 	bl	8014490 <_ZNK9XFTimeout11getRelTicksEv>
 8014bd6:	4603      	mov	r3, r0
 8014bd8:	2b00      	cmp	r3, #0
 8014bda:	d101      	bne.n	8014be0 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x1c8>
 8014bdc:	2301      	movs	r3, #1
 8014bde:	e000      	b.n	8014be2 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x1ca>
 8014be0:	2300      	movs	r3, #0
 8014be2:	2b00      	cmp	r3, #0
 8014be4:	d006      	beq.n	8014bf4 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x1dc>
                    {	// -> by: test5
                        i++;
 8014be6:	f107 0308 	add.w	r3, r7, #8
 8014bea:	2100      	movs	r1, #0
 8014bec:	4618      	mov	r0, r3
 8014bee:	f000 f904 	bl	8014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>
                    while(i != timeouts_.end() && (*i)->getRelTicks() == 0)
 8014bf2:	e7d4      	b.n	8014b9e <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x186>
                    }

                    // Insert new timeout behind actual
                    timeouts_.insert(i, pNewTimeout);
 8014bf4:	687b      	ldr	r3, [r7, #4]
 8014bf6:	f103 0408 	add.w	r4, r3, #8
 8014bfa:	f107 0208 	add.w	r2, r7, #8
 8014bfe:	f107 031c 	add.w	r3, r7, #28
 8014c02:	4611      	mov	r1, r2
 8014c04:	4618      	mov	r0, r3
 8014c06:	f000 f8cd 	bl	8014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>
 8014c0a:	463b      	mov	r3, r7
 8014c0c:	461a      	mov	r2, r3
 8014c0e:	69f9      	ldr	r1, [r7, #28]
 8014c10:	4620      	mov	r0, r4
 8014c12:	f000 f947 	bl	8014ea4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE6insertESt20_List_const_iteratorIS2_ERKS2_>
                    // Remove time from actual timeout
                    pNewTimeout->substractFromRelTicks(relTicks);
 8014c16:	683b      	ldr	r3, [r7, #0]
 8014c18:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8014c1a:	4618      	mov	r0, r3
 8014c1c:	f7ff fc44 	bl	80144a8 <_ZN9XFTimeout21substractFromRelTicksEi>
 8014c20:	e017      	b.n	8014c52 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x23a>
                }
            }
            else
            {	// -> by: test4, test5
                // Add timeout at the end of the list
                timeouts_.insert(timeouts_.end(), pNewTimeout);
 8014c22:	687b      	ldr	r3, [r7, #4]
 8014c24:	f103 0408 	add.w	r4, r3, #8
 8014c28:	687b      	ldr	r3, [r7, #4]
 8014c2a:	3308      	adds	r3, #8
 8014c2c:	4618      	mov	r0, r3
 8014c2e:	f000 f877 	bl	8014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>
 8014c32:	4603      	mov	r3, r0
 8014c34:	627b      	str	r3, [r7, #36]	; 0x24
 8014c36:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8014c3a:	f107 0320 	add.w	r3, r7, #32
 8014c3e:	4611      	mov	r1, r2
 8014c40:	4618      	mov	r0, r3
 8014c42:	f000 f8af 	bl	8014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>
 8014c46:	463b      	mov	r3, r7
 8014c48:	461a      	mov	r2, r3
 8014c4a:	6a39      	ldr	r1, [r7, #32]
 8014c4c:	4620      	mov	r0, r4
 8014c4e:	f000 f929 	bl	8014ea4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE6insertESt20_List_const_iteratorIS2_ERKS2_>
            }
        }
        pMutex_->unlock();
 8014c52:	687b      	ldr	r3, [r7, #4]
 8014c54:	695a      	ldr	r2, [r3, #20]
 8014c56:	687b      	ldr	r3, [r7, #4]
 8014c58:	695b      	ldr	r3, [r3, #20]
 8014c5a:	681b      	ldr	r3, [r3, #0]
 8014c5c:	330c      	adds	r3, #12
 8014c5e:	681b      	ldr	r3, [r3, #0]
 8014c60:	4610      	mov	r0, r2
 8014c62:	4798      	blx	r3
    }
    else
    {	// -> by: test1, test2, test3, test4, test5
        timeouts_.push_front(pNewTimeout);
    }
}
 8014c64:	e006      	b.n	8014c74 <_ZN23XFTimeoutManagerDefault10addTimeoutEP9XFTimeout+0x25c>
        timeouts_.push_front(pNewTimeout);
 8014c66:	687b      	ldr	r3, [r7, #4]
 8014c68:	3308      	adds	r3, #8
 8014c6a:	463a      	mov	r2, r7
 8014c6c:	4611      	mov	r1, r2
 8014c6e:	4618      	mov	r0, r3
 8014c70:	f000 f93e 	bl	8014ef0 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE10push_frontERKS2_>
}
 8014c74:	bf00      	nop
 8014c76:	3734      	adds	r7, #52	; 0x34
 8014c78:	46bd      	mov	sp, r7
 8014c7a:	bd90      	pop	{r4, r7, pc}

08014c7c <_ZN23XFTimeoutManagerDefault13returnTimeoutEP9XFTimeout>:

void XFTimeoutManagerDefault::returnTimeout(XFTimeout * pTimeout)
{
 8014c7c:	b590      	push	{r4, r7, lr}
 8014c7e:	b083      	sub	sp, #12
 8014c80:	af00      	add	r7, sp, #0
 8014c82:	6078      	str	r0, [r7, #4]
 8014c84:	6039      	str	r1, [r7, #0]
    pTimeout->getBehavior()->pushEvent(pTimeout);
 8014c86:	683b      	ldr	r3, [r7, #0]
 8014c88:	4618      	mov	r0, r3
 8014c8a:	f7ff f8c3 	bl	8013e14 <_ZNK7XFEvent11getBehaviorEv>
 8014c8e:	4603      	mov	r3, r0
 8014c90:	681a      	ldr	r2, [r3, #0]
 8014c92:	320c      	adds	r2, #12
 8014c94:	6814      	ldr	r4, [r2, #0]
 8014c96:	2200      	movs	r2, #0
 8014c98:	6839      	ldr	r1, [r7, #0]
 8014c9a:	4618      	mov	r0, r3
 8014c9c:	47a0      	blx	r4
}
 8014c9e:	bf00      	nop
 8014ca0:	370c      	adds	r7, #12
 8014ca2:	46bd      	mov	sp, r7
 8014ca4:	bd90      	pop	{r4, r7, pc}

08014ca6 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE10_List_implC1Ev>:
	_List_impl() _GLIBCXX_NOEXCEPT_IF(
 8014ca6:	b580      	push	{r7, lr}
 8014ca8:	b082      	sub	sp, #8
 8014caa:	af00      	add	r7, sp, #0
 8014cac:	6078      	str	r0, [r7, #4]
	: _Node_alloc_type()
 8014cae:	6878      	ldr	r0, [r7, #4]
 8014cb0:	f000 f930 	bl	8014f14 <_ZNSaISt10_List_nodeIP9XFTimeoutEEC1Ev>
 8014cb4:	687b      	ldr	r3, [r7, #4]
 8014cb6:	4618      	mov	r0, r3
 8014cb8:	f7ff fb9c 	bl	80143f4 <_ZNSt8__detail17_List_node_headerC1Ev>
	{ }
 8014cbc:	687b      	ldr	r3, [r7, #4]
 8014cbe:	4618      	mov	r0, r3
 8014cc0:	3708      	adds	r7, #8
 8014cc2:	46bd      	mov	sp, r7
 8014cc4:	bd80      	pop	{r7, pc}

08014cc6 <_ZNSaISt10_List_nodeIP9XFTimeoutEED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
 8014cc6:	b580      	push	{r7, lr}
 8014cc8:	b082      	sub	sp, #8
 8014cca:	af00      	add	r7, sp, #0
 8014ccc:	6078      	str	r0, [r7, #4]
 8014cce:	6878      	ldr	r0, [r7, #4]
 8014cd0:	f000 f92c 	bl	8014f2c <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEED1Ev>
 8014cd4:	687b      	ldr	r3, [r7, #4]
 8014cd6:	4618      	mov	r0, r3
 8014cd8:	3708      	adds	r7, #8
 8014cda:	46bd      	mov	sp, r7
 8014cdc:	bd80      	pop	{r7, pc}

08014cde <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EED1Ev>:
      ~_List_base() _GLIBCXX_NOEXCEPT
 8014cde:	b580      	push	{r7, lr}
 8014ce0:	b082      	sub	sp, #8
 8014ce2:	af00      	add	r7, sp, #0
 8014ce4:	6078      	str	r0, [r7, #4]
      { _M_clear(); }
 8014ce6:	6878      	ldr	r0, [r7, #4]
 8014ce8:	f000 f92b 	bl	8014f42 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE8_M_clearEv>
 8014cec:	687b      	ldr	r3, [r7, #4]
 8014cee:	4618      	mov	r0, r3
 8014cf0:	f7ff fc5a 	bl	80145a8 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE10_List_implD1Ev>
 8014cf4:	687b      	ldr	r3, [r7, #4]
 8014cf6:	4618      	mov	r0, r3
 8014cf8:	3708      	adds	r7, #8
 8014cfa:	46bd      	mov	sp, r7
 8014cfc:	bd80      	pop	{r7, pc}

08014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>:
      /**
       *  Returns a read/write iterator that points to the first element in the
       *  %list.  Iteration is done in ordinary element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 8014cfe:	b580      	push	{r7, lr}
 8014d00:	b084      	sub	sp, #16
 8014d02:	af00      	add	r7, sp, #0
 8014d04:	6078      	str	r0, [r7, #4]
      { return iterator(this->_M_impl._M_node._M_next); }
 8014d06:	687b      	ldr	r3, [r7, #4]
 8014d08:	681a      	ldr	r2, [r3, #0]
 8014d0a:	f107 030c 	add.w	r3, r7, #12
 8014d0e:	4611      	mov	r1, r2
 8014d10:	4618      	mov	r0, r3
 8014d12:	f000 f93b 	bl	8014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>
 8014d16:	68fb      	ldr	r3, [r7, #12]
 8014d18:	4618      	mov	r0, r3
 8014d1a:	3710      	adds	r7, #16
 8014d1c:	46bd      	mov	sp, r7
 8014d1e:	bd80      	pop	{r7, pc}

08014d20 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %list.  Iteration is done in ordinary element
       *  order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 8014d20:	b580      	push	{r7, lr}
 8014d22:	b084      	sub	sp, #16
 8014d24:	af00      	add	r7, sp, #0
 8014d26:	6078      	str	r0, [r7, #4]
      { return iterator(&this->_M_impl._M_node); }
 8014d28:	687a      	ldr	r2, [r7, #4]
 8014d2a:	f107 030c 	add.w	r3, r7, #12
 8014d2e:	4611      	mov	r1, r2
 8014d30:	4618      	mov	r0, r3
 8014d32:	f000 f92b 	bl	8014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>
 8014d36:	68fb      	ldr	r3, [r7, #12]
 8014d38:	4618      	mov	r0, r3
 8014d3a:	3710      	adds	r7, #16
 8014d3c:	46bd      	mov	sp, r7
 8014d3e:	bd80      	pop	{r7, pc}

08014d40 <_ZStneRKSt14_List_iteratorIP9XFTimeoutES4_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8014d40:	b480      	push	{r7}
 8014d42:	b083      	sub	sp, #12
 8014d44:	af00      	add	r7, sp, #0
 8014d46:	6078      	str	r0, [r7, #4]
 8014d48:	6039      	str	r1, [r7, #0]
      { return __x._M_node != __y._M_node; }
 8014d4a:	687b      	ldr	r3, [r7, #4]
 8014d4c:	681a      	ldr	r2, [r3, #0]
 8014d4e:	683b      	ldr	r3, [r7, #0]
 8014d50:	681b      	ldr	r3, [r3, #0]
 8014d52:	429a      	cmp	r2, r3
 8014d54:	bf14      	ite	ne
 8014d56:	2301      	movne	r3, #1
 8014d58:	2300      	moveq	r3, #0
 8014d5a:	b2db      	uxtb	r3, r3
 8014d5c:	4618      	mov	r0, r3
 8014d5e:	370c      	adds	r7, #12
 8014d60:	46bd      	mov	sp, r7
 8014d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014d66:	4770      	bx	lr

08014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8014d68:	b580      	push	{r7, lr}
 8014d6a:	b082      	sub	sp, #8
 8014d6c:	af00      	add	r7, sp, #0
 8014d6e:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Node*>(_M_node)->_M_valptr(); }
 8014d70:	687b      	ldr	r3, [r7, #4]
 8014d72:	681b      	ldr	r3, [r3, #0]
 8014d74:	4618      	mov	r0, r3
 8014d76:	f000 f918 	bl	8014faa <_ZNSt10_List_nodeIP9XFTimeoutE9_M_valptrEv>
 8014d7a:	4603      	mov	r3, r0
 8014d7c:	4618      	mov	r0, r3
 8014d7e:	3708      	adds	r7, #8
 8014d80:	46bd      	mov	sp, r7
 8014d82:	bd80      	pop	{r7, pc}

08014d84 <_ZNSt14_List_iteratorIP9XFTimeoutEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
 8014d84:	b480      	push	{r7}
 8014d86:	b083      	sub	sp, #12
 8014d88:	af00      	add	r7, sp, #0
 8014d8a:	6078      	str	r0, [r7, #4]
	_M_node = _M_node->_M_next;
 8014d8c:	687b      	ldr	r3, [r7, #4]
 8014d8e:	681b      	ldr	r3, [r3, #0]
 8014d90:	681a      	ldr	r2, [r3, #0]
 8014d92:	687b      	ldr	r3, [r7, #4]
 8014d94:	601a      	str	r2, [r3, #0]
	return *this;
 8014d96:	687b      	ldr	r3, [r7, #4]
      }
 8014d98:	4618      	mov	r0, r3
 8014d9a:	370c      	adds	r7, #12
 8014d9c:	46bd      	mov	sp, r7
 8014d9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014da2:	4770      	bx	lr

08014da4 <_ZNSt20_List_const_iteratorIP9XFTimeoutEC1ERKSt14_List_iteratorIS1_E>:
      _List_const_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
 8014da4:	b480      	push	{r7}
 8014da6:	b083      	sub	sp, #12
 8014da8:	af00      	add	r7, sp, #0
 8014daa:	6078      	str	r0, [r7, #4]
 8014dac:	6039      	str	r1, [r7, #0]
      : _M_node(__x._M_node) { }
 8014dae:	683b      	ldr	r3, [r7, #0]
 8014db0:	681a      	ldr	r2, [r3, #0]
 8014db2:	687b      	ldr	r3, [r7, #4]
 8014db4:	601a      	str	r2, [r3, #0]
 8014db6:	687b      	ldr	r3, [r7, #4]
 8014db8:	4618      	mov	r0, r3
 8014dba:	370c      	adds	r7, #12
 8014dbc:	46bd      	mov	sp, r7
 8014dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014dc2:	4770      	bx	lr

08014dc4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5eraseESt20_List_const_iteratorIS2_E>:
      }
#endif

  template<typename _Tp, typename _Alloc>
    typename list<_Tp, _Alloc>::iterator
    list<_Tp, _Alloc>::
 8014dc4:	b580      	push	{r7, lr}
 8014dc6:	b084      	sub	sp, #16
 8014dc8:	af00      	add	r7, sp, #0
 8014dca:	6078      	str	r0, [r7, #4]
 8014dcc:	6039      	str	r1, [r7, #0]
    erase(const_iterator __position) noexcept
#else
    erase(iterator __position)
#endif
    {
      iterator __ret = iterator(__position._M_node->_M_next);
 8014dce:	683b      	ldr	r3, [r7, #0]
 8014dd0:	681a      	ldr	r2, [r3, #0]
 8014dd2:	f107 030c 	add.w	r3, r7, #12
 8014dd6:	4611      	mov	r1, r2
 8014dd8:	4618      	mov	r0, r3
 8014dda:	f000 f8d7 	bl	8014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>
      _M_erase(__position._M_const_cast());
 8014dde:	463b      	mov	r3, r7
 8014de0:	4618      	mov	r0, r3
 8014de2:	f000 f916 	bl	8015012 <_ZNKSt20_List_const_iteratorIP9XFTimeoutE13_M_const_castEv>
 8014de6:	4603      	mov	r3, r0
 8014de8:	4619      	mov	r1, r3
 8014dea:	6878      	ldr	r0, [r7, #4]
 8014dec:	f000 f8eb 	bl	8014fc6 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E>
      return __ret;
 8014df0:	68fb      	ldr	r3, [r7, #12]
    }
 8014df2:	4618      	mov	r0, r3
 8014df4:	3710      	adds	r7, #16
 8014df6:	46bd      	mov	sp, r7
 8014df8:	bd80      	pop	{r7, pc}

08014dfa <_ZNSt14_List_iteratorIP9XFTimeoutEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
 8014dfa:	b480      	push	{r7}
 8014dfc:	b085      	sub	sp, #20
 8014dfe:	af00      	add	r7, sp, #0
 8014e00:	6078      	str	r0, [r7, #4]
 8014e02:	6039      	str	r1, [r7, #0]
	_Self __tmp = *this;
 8014e04:	687b      	ldr	r3, [r7, #4]
 8014e06:	681b      	ldr	r3, [r3, #0]
 8014e08:	60fb      	str	r3, [r7, #12]
	_M_node = _M_node->_M_next;
 8014e0a:	687b      	ldr	r3, [r7, #4]
 8014e0c:	681b      	ldr	r3, [r3, #0]
 8014e0e:	681a      	ldr	r2, [r3, #0]
 8014e10:	687b      	ldr	r3, [r7, #4]
 8014e12:	601a      	str	r2, [r3, #0]
	return __tmp;
 8014e14:	68fb      	ldr	r3, [r7, #12]
      }
 8014e16:	4618      	mov	r0, r3
 8014e18:	3714      	adds	r7, #20
 8014e1a:	46bd      	mov	sp, r7
 8014e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e20:	4770      	bx	lr

08014e22 <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE5emptyEv>:
      /**
       *  Returns true if the %list is empty.  (Thus begin() would equal
       *  end().)
       */
      _GLIBCXX_NODISCARD bool
      empty() const _GLIBCXX_NOEXCEPT
 8014e22:	b480      	push	{r7}
 8014e24:	b083      	sub	sp, #12
 8014e26:	af00      	add	r7, sp, #0
 8014e28:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_node._M_next == &this->_M_impl._M_node; }
 8014e2a:	687b      	ldr	r3, [r7, #4]
 8014e2c:	681a      	ldr	r2, [r3, #0]
 8014e2e:	687b      	ldr	r3, [r7, #4]
 8014e30:	429a      	cmp	r2, r3
 8014e32:	bf0c      	ite	eq
 8014e34:	2301      	moveq	r3, #1
 8014e36:	2300      	movne	r3, #0
 8014e38:	b2db      	uxtb	r3, r3
 8014e3a:	4618      	mov	r0, r3
 8014e3c:	370c      	adds	r7, #12
 8014e3e:	46bd      	mov	sp, r7
 8014e40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014e44:	4770      	bx	lr

08014e46 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5frontEv>:
      /**
       *  Returns a read/write reference to the data at the first
       *  element of the %list.
       */
      reference
      front() _GLIBCXX_NOEXCEPT
 8014e46:	b580      	push	{r7, lr}
 8014e48:	b084      	sub	sp, #16
 8014e4a:	af00      	add	r7, sp, #0
 8014e4c:	6078      	str	r0, [r7, #4]
      { return *begin(); }
 8014e4e:	6878      	ldr	r0, [r7, #4]
 8014e50:	f7ff ff55 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014e54:	4603      	mov	r3, r0
 8014e56:	60fb      	str	r3, [r7, #12]
 8014e58:	f107 030c 	add.w	r3, r7, #12
 8014e5c:	4618      	mov	r0, r3
 8014e5e:	f7ff ff83 	bl	8014d68 <_ZNKSt14_List_iteratorIP9XFTimeoutEdeEv>
 8014e62:	4603      	mov	r3, r0
 8014e64:	4618      	mov	r0, r3
 8014e66:	3710      	adds	r7, #16
 8014e68:	46bd      	mov	sp, r7
 8014e6a:	bd80      	pop	{r7, pc}

08014e6c <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8014e6c:	b580      	push	{r7, lr}
 8014e6e:	b082      	sub	sp, #8
 8014e70:	af00      	add	r7, sp, #0
 8014e72:	6078      	str	r0, [r7, #4]
      { return _M_node_count(); }
 8014e74:	6878      	ldr	r0, [r7, #4]
 8014e76:	f000 f8dd 	bl	8015034 <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE13_M_node_countEv>
 8014e7a:	4603      	mov	r3, r0
 8014e7c:	4618      	mov	r0, r3
 8014e7e:	3708      	adds	r7, #8
 8014e80:	46bd      	mov	sp, r7
 8014e82:	bd80      	pop	{r7, pc}

08014e84 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE9pop_frontEv>:
       *  Note that no data is returned, and if the first element's data
       *  is needed, it should be retrieved before pop_front() is
       *  called.
       */
      void
      pop_front() _GLIBCXX_NOEXCEPT
 8014e84:	b580      	push	{r7, lr}
 8014e86:	b082      	sub	sp, #8
 8014e88:	af00      	add	r7, sp, #0
 8014e8a:	6078      	str	r0, [r7, #4]
      { this->_M_erase(begin()); }
 8014e8c:	6878      	ldr	r0, [r7, #4]
 8014e8e:	f7ff ff36 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014e92:	4603      	mov	r3, r0
 8014e94:	4619      	mov	r1, r3
 8014e96:	6878      	ldr	r0, [r7, #4]
 8014e98:	f000 f895 	bl	8014fc6 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E>
 8014e9c:	bf00      	nop
 8014e9e:	3708      	adds	r7, #8
 8014ea0:	46bd      	mov	sp, r7
 8014ea2:	bd80      	pop	{r7, pc}

08014ea4 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE6insertESt20_List_const_iteratorIS2_ERKS2_>:
    list<_Tp, _Alloc>::
 8014ea4:	b590      	push	{r4, r7, lr}
 8014ea6:	b087      	sub	sp, #28
 8014ea8:	af00      	add	r7, sp, #0
 8014eaa:	60f8      	str	r0, [r7, #12]
 8014eac:	60b9      	str	r1, [r7, #8]
 8014eae:	607a      	str	r2, [r7, #4]
      _Node* __tmp = _M_create_node(__x);
 8014eb0:	6879      	ldr	r1, [r7, #4]
 8014eb2:	68f8      	ldr	r0, [r7, #12]
 8014eb4:	f000 f8cb 	bl	801504e <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_>
 8014eb8:	6178      	str	r0, [r7, #20]
      __tmp->_M_hook(__position._M_const_cast()._M_node);
 8014eba:	697c      	ldr	r4, [r7, #20]
 8014ebc:	f107 0308 	add.w	r3, r7, #8
 8014ec0:	4618      	mov	r0, r3
 8014ec2:	f000 f8a6 	bl	8015012 <_ZNKSt20_List_const_iteratorIP9XFTimeoutE13_M_const_castEv>
 8014ec6:	4603      	mov	r3, r0
 8014ec8:	4619      	mov	r1, r3
 8014eca:	4620      	mov	r0, r4
 8014ecc:	f016 fdf2 	bl	802bab4 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>
      this->_M_inc_size(1);
 8014ed0:	68fb      	ldr	r3, [r7, #12]
 8014ed2:	2101      	movs	r1, #1
 8014ed4:	4618      	mov	r0, r3
 8014ed6:	f000 f8ee 	bl	80150b6 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_inc_sizeEj>
      return iterator(__tmp);
 8014eda:	f107 0310 	add.w	r3, r7, #16
 8014ede:	6979      	ldr	r1, [r7, #20]
 8014ee0:	4618      	mov	r0, r3
 8014ee2:	f000 f853 	bl	8014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>
 8014ee6:	693b      	ldr	r3, [r7, #16]
    }
 8014ee8:	4618      	mov	r0, r3
 8014eea:	371c      	adds	r7, #28
 8014eec:	46bd      	mov	sp, r7
 8014eee:	bd90      	pop	{r4, r7, pc}

08014ef0 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE10push_frontERKS2_>:
      push_front(const value_type& __x)
 8014ef0:	b580      	push	{r7, lr}
 8014ef2:	b082      	sub	sp, #8
 8014ef4:	af00      	add	r7, sp, #0
 8014ef6:	6078      	str	r0, [r7, #4]
 8014ef8:	6039      	str	r1, [r7, #0]
      { this->_M_insert(begin(), __x); }
 8014efa:	6878      	ldr	r0, [r7, #4]
 8014efc:	f7ff feff 	bl	8014cfe <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE5beginEv>
 8014f00:	4603      	mov	r3, r0
 8014f02:	683a      	ldr	r2, [r7, #0]
 8014f04:	4619      	mov	r1, r3
 8014f06:	6878      	ldr	r0, [r7, #4]
 8014f08:	f000 f8e6 	bl	80150d8 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_>
 8014f0c:	bf00      	nop
 8014f0e:	3708      	adds	r7, #8
 8014f10:	46bd      	mov	sp, r7
 8014f12:	bd80      	pop	{r7, pc}

08014f14 <_ZNSaISt10_List_nodeIP9XFTimeoutEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8014f14:	b580      	push	{r7, lr}
 8014f16:	b082      	sub	sp, #8
 8014f18:	af00      	add	r7, sp, #0
 8014f1a:	6078      	str	r0, [r7, #4]
 8014f1c:	6878      	ldr	r0, [r7, #4]
 8014f1e:	f000 f8f9 	bl	8015114 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEEC1Ev>
 8014f22:	687b      	ldr	r3, [r7, #4]
 8014f24:	4618      	mov	r0, r3
 8014f26:	3708      	adds	r7, #8
 8014f28:	46bd      	mov	sp, r7
 8014f2a:	bd80      	pop	{r7, pc}

08014f2c <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8014f2c:	b480      	push	{r7}
 8014f2e:	b083      	sub	sp, #12
 8014f30:	af00      	add	r7, sp, #0
 8014f32:	6078      	str	r0, [r7, #4]
 8014f34:	687b      	ldr	r3, [r7, #4]
 8014f36:	4618      	mov	r0, r3
 8014f38:	370c      	adds	r7, #12
 8014f3a:	46bd      	mov	sp, r7
 8014f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014f40:	4770      	bx	lr

08014f42 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE8_M_clearEv>:
    _List_base<_Tp, _Alloc>::
 8014f42:	b580      	push	{r7, lr}
 8014f44:	b086      	sub	sp, #24
 8014f46:	af00      	add	r7, sp, #0
 8014f48:	6078      	str	r0, [r7, #4]
      __detail::_List_node_base* __cur = _M_impl._M_node._M_next;
 8014f4a:	687b      	ldr	r3, [r7, #4]
 8014f4c:	681b      	ldr	r3, [r3, #0]
 8014f4e:	617b      	str	r3, [r7, #20]
      while (__cur != &_M_impl._M_node)
 8014f50:	687b      	ldr	r3, [r7, #4]
 8014f52:	697a      	ldr	r2, [r7, #20]
 8014f54:	429a      	cmp	r2, r3
 8014f56:	d015      	beq.n	8014f84 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE8_M_clearEv+0x42>
	  _Node* __tmp = static_cast<_Node*>(__cur);
 8014f58:	697b      	ldr	r3, [r7, #20]
 8014f5a:	613b      	str	r3, [r7, #16]
	  __cur = __tmp->_M_next;
 8014f5c:	693b      	ldr	r3, [r7, #16]
 8014f5e:	681b      	ldr	r3, [r3, #0]
 8014f60:	617b      	str	r3, [r7, #20]
	  _Tp* __val = __tmp->_M_valptr();
 8014f62:	6938      	ldr	r0, [r7, #16]
 8014f64:	f000 f821 	bl	8014faa <_ZNSt10_List_nodeIP9XFTimeoutE9_M_valptrEv>
 8014f68:	60f8      	str	r0, [r7, #12]
	  _Node_alloc_traits::destroy(_M_get_Node_allocator(), __val);
 8014f6a:	6878      	ldr	r0, [r7, #4]
 8014f6c:	f000 f8dd 	bl	801512a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE21_M_get_Node_allocatorEv>
 8014f70:	4603      	mov	r3, r0
 8014f72:	68f9      	ldr	r1, [r7, #12]
 8014f74:	4618      	mov	r0, r3
 8014f76:	f000 f8e3 	bl	8015140 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE7destroyIS2_EEvRS4_PT_>
	  _M_put_node(__tmp);
 8014f7a:	6939      	ldr	r1, [r7, #16]
 8014f7c:	6878      	ldr	r0, [r7, #4]
 8014f7e:	f000 f8ec 	bl	801515a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E>
      while (__cur != &_M_impl._M_node)
 8014f82:	e7e5      	b.n	8014f50 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE8_M_clearEv+0xe>
    }
 8014f84:	bf00      	nop
 8014f86:	3718      	adds	r7, #24
 8014f88:	46bd      	mov	sp, r7
 8014f8a:	bd80      	pop	{r7, pc}

08014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>:
      _List_iterator(__detail::_List_node_base* __x) _GLIBCXX_NOEXCEPT
 8014f8c:	b480      	push	{r7}
 8014f8e:	b083      	sub	sp, #12
 8014f90:	af00      	add	r7, sp, #0
 8014f92:	6078      	str	r0, [r7, #4]
 8014f94:	6039      	str	r1, [r7, #0]
      : _M_node(__x) { }
 8014f96:	687b      	ldr	r3, [r7, #4]
 8014f98:	683a      	ldr	r2, [r7, #0]
 8014f9a:	601a      	str	r2, [r3, #0]
 8014f9c:	687b      	ldr	r3, [r7, #4]
 8014f9e:	4618      	mov	r0, r3
 8014fa0:	370c      	adds	r7, #12
 8014fa2:	46bd      	mov	sp, r7
 8014fa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8014fa8:	4770      	bx	lr

08014faa <_ZNSt10_List_nodeIP9XFTimeoutE9_M_valptrEv>:
      _Tp*       _M_valptr()       { return _M_storage._M_ptr(); }
 8014faa:	b580      	push	{r7, lr}
 8014fac:	b082      	sub	sp, #8
 8014fae:	af00      	add	r7, sp, #0
 8014fb0:	6078      	str	r0, [r7, #4]
 8014fb2:	687b      	ldr	r3, [r7, #4]
 8014fb4:	3308      	adds	r3, #8
 8014fb6:	4618      	mov	r0, r3
 8014fb8:	f000 f8de 	bl	8015178 <_ZN9__gnu_cxx16__aligned_membufIP9XFTimeoutE6_M_ptrEv>
 8014fbc:	4603      	mov	r3, r0
 8014fbe:	4618      	mov	r0, r3
 8014fc0:	3708      	adds	r7, #8
 8014fc2:	46bd      	mov	sp, r7
 8014fc4:	bd80      	pop	{r7, pc}

08014fc6 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE8_M_eraseESt14_List_iteratorIS2_E>:
       }
#endif

      // Erases element at position given.
      void
      _M_erase(iterator __position) _GLIBCXX_NOEXCEPT
 8014fc6:	b590      	push	{r4, r7, lr}
 8014fc8:	b085      	sub	sp, #20
 8014fca:	af00      	add	r7, sp, #0
 8014fcc:	6078      	str	r0, [r7, #4]
 8014fce:	6039      	str	r1, [r7, #0]
      {
	this->_M_dec_size(1);
 8014fd0:	687b      	ldr	r3, [r7, #4]
 8014fd2:	2101      	movs	r1, #1
 8014fd4:	4618      	mov	r0, r3
 8014fd6:	f000 f8db 	bl	8015190 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_dec_sizeEj>
	__position._M_node->_M_unhook();
 8014fda:	683b      	ldr	r3, [r7, #0]
 8014fdc:	4618      	mov	r0, r3
 8014fde:	f016 fd70 	bl	802bac2 <_ZNSt8__detail15_List_node_base9_M_unhookEv>
	_Node* __n = static_cast<_Node*>(__position._M_node);
 8014fe2:	683b      	ldr	r3, [r7, #0]
 8014fe4:	60fb      	str	r3, [r7, #12]
#if __cplusplus >= 201103L
	_Node_alloc_traits::destroy(_M_get_Node_allocator(), __n->_M_valptr());
 8014fe6:	687b      	ldr	r3, [r7, #4]
 8014fe8:	4618      	mov	r0, r3
 8014fea:	f000 f89e 	bl	801512a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE21_M_get_Node_allocatorEv>
 8014fee:	4604      	mov	r4, r0
 8014ff0:	68f8      	ldr	r0, [r7, #12]
 8014ff2:	f7ff ffda 	bl	8014faa <_ZNSt10_List_nodeIP9XFTimeoutE9_M_valptrEv>
 8014ff6:	4603      	mov	r3, r0
 8014ff8:	4619      	mov	r1, r3
 8014ffa:	4620      	mov	r0, r4
 8014ffc:	f000 f8a0 	bl	8015140 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE7destroyIS2_EEvRS4_PT_>
#else
	_Tp_alloc_type(_M_get_Node_allocator()).destroy(__n->_M_valptr());
#endif

	_M_put_node(__n);
 8015000:	687b      	ldr	r3, [r7, #4]
 8015002:	68f9      	ldr	r1, [r7, #12]
 8015004:	4618      	mov	r0, r3
 8015006:	f000 f8a8 	bl	801515a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E>
      }
 801500a:	bf00      	nop
 801500c:	3714      	adds	r7, #20
 801500e:	46bd      	mov	sp, r7
 8015010:	bd90      	pop	{r4, r7, pc}

08015012 <_ZNKSt20_List_const_iteratorIP9XFTimeoutE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
 8015012:	b580      	push	{r7, lr}
 8015014:	b084      	sub	sp, #16
 8015016:	af00      	add	r7, sp, #0
 8015018:	6078      	str	r0, [r7, #4]
      { return iterator(const_cast<__detail::_List_node_base*>(_M_node)); }
 801501a:	687b      	ldr	r3, [r7, #4]
 801501c:	681a      	ldr	r2, [r3, #0]
 801501e:	f107 030c 	add.w	r3, r7, #12
 8015022:	4611      	mov	r1, r2
 8015024:	4618      	mov	r0, r3
 8015026:	f7ff ffb1 	bl	8014f8c <_ZNSt14_List_iteratorIP9XFTimeoutEC1EPNSt8__detail15_List_node_baseE>
 801502a:	68fb      	ldr	r3, [r7, #12]
 801502c:	4618      	mov	r0, r3
 801502e:	3710      	adds	r7, #16
 8015030:	46bd      	mov	sp, r7
 8015032:	bd80      	pop	{r7, pc}

08015034 <_ZNKSt7__cxx114listIP9XFTimeoutSaIS2_EE13_M_node_countEv>:
      _M_node_count() const
 8015034:	b580      	push	{r7, lr}
 8015036:	b082      	sub	sp, #8
 8015038:	af00      	add	r7, sp, #0
 801503a:	6078      	str	r0, [r7, #4]
      { return this->_M_get_size(); }
 801503c:	687b      	ldr	r3, [r7, #4]
 801503e:	4618      	mov	r0, r3
 8015040:	f000 f8b7 	bl	80151b2 <_ZNKSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_get_sizeEv>
 8015044:	4603      	mov	r3, r0
 8015046:	4618      	mov	r0, r3
 8015048:	3708      	adds	r7, #8
 801504a:	46bd      	mov	sp, r7
 801504c:	bd80      	pop	{r7, pc}

0801504e <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_>:
	_M_create_node(_Args&&... __args)
 801504e:	b590      	push	{r4, r7, lr}
 8015050:	b087      	sub	sp, #28
 8015052:	af00      	add	r7, sp, #0
 8015054:	6078      	str	r0, [r7, #4]
 8015056:	6039      	str	r1, [r7, #0]
	  auto __p = this->_M_get_node();
 8015058:	687b      	ldr	r3, [r7, #4]
 801505a:	4618      	mov	r0, r3
 801505c:	f000 f8b5 	bl	80151ca <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_get_nodeEv>
 8015060:	6178      	str	r0, [r7, #20]
	  auto& __alloc = _M_get_Node_allocator();
 8015062:	687b      	ldr	r3, [r7, #4]
 8015064:	4618      	mov	r0, r3
 8015066:	f000 f860 	bl	801512a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE21_M_get_Node_allocatorEv>
 801506a:	6138      	str	r0, [r7, #16]
	  __allocated_ptr<_Node_alloc_type> __guard{__alloc, __p};
 801506c:	f107 0308 	add.w	r3, r7, #8
 8015070:	697a      	ldr	r2, [r7, #20]
 8015072:	6939      	ldr	r1, [r7, #16]
 8015074:	4618      	mov	r0, r3
 8015076:	f000 f8b6 	bl	80151e6 <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEEC1ERS4_PS3_>
	  _Node_alloc_traits::construct(__alloc, __p->_M_valptr(),
 801507a:	6978      	ldr	r0, [r7, #20]
 801507c:	f7ff ff95 	bl	8014faa <_ZNSt10_List_nodeIP9XFTimeoutE9_M_valptrEv>
 8015080:	4604      	mov	r4, r0
 8015082:	6838      	ldr	r0, [r7, #0]
 8015084:	f000 f8d8 	bl	8015238 <_ZSt7forwardIRKP9XFTimeoutEOT_RNSt16remove_referenceIS4_E4typeE>
 8015088:	4603      	mov	r3, r0
 801508a:	461a      	mov	r2, r3
 801508c:	4621      	mov	r1, r4
 801508e:	6938      	ldr	r0, [r7, #16]
 8015090:	f000 f8dd 	bl	801524e <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_>
	  __guard = nullptr;
 8015094:	f107 0308 	add.w	r3, r7, #8
 8015098:	2100      	movs	r1, #0
 801509a:	4618      	mov	r0, r3
 801509c:	f000 f8ea 	bl	8015274 <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEEaSEDn>
	  return __p;
 80150a0:	697c      	ldr	r4, [r7, #20]
	  __allocated_ptr<_Node_alloc_type> __guard{__alloc, __p};
 80150a2:	f107 0308 	add.w	r3, r7, #8
 80150a6:	4618      	mov	r0, r3
 80150a8:	f000 f8b1 	bl	801520e <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEED1Ev>
	  return __p;
 80150ac:	4623      	mov	r3, r4
	}
 80150ae:	4618      	mov	r0, r3
 80150b0:	371c      	adds	r7, #28
 80150b2:	46bd      	mov	sp, r7
 80150b4:	bd90      	pop	{r4, r7, pc}

080150b6 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_inc_sizeEj>:
      void _M_inc_size(size_t __n) { _M_impl._M_node._M_size += __n; }
 80150b6:	b480      	push	{r7}
 80150b8:	b083      	sub	sp, #12
 80150ba:	af00      	add	r7, sp, #0
 80150bc:	6078      	str	r0, [r7, #4]
 80150be:	6039      	str	r1, [r7, #0]
 80150c0:	687b      	ldr	r3, [r7, #4]
 80150c2:	689a      	ldr	r2, [r3, #8]
 80150c4:	683b      	ldr	r3, [r7, #0]
 80150c6:	441a      	add	r2, r3
 80150c8:	687b      	ldr	r3, [r7, #4]
 80150ca:	609a      	str	r2, [r3, #8]
 80150cc:	bf00      	nop
 80150ce:	370c      	adds	r7, #12
 80150d0:	46bd      	mov	sp, r7
 80150d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80150d6:	4770      	bx	lr

080150d8 <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE9_M_insertIJRKS2_EEEvSt14_List_iteratorIS2_EDpOT_>:
       _M_insert(iterator __position, _Args&&... __args)
 80150d8:	b580      	push	{r7, lr}
 80150da:	b086      	sub	sp, #24
 80150dc:	af00      	add	r7, sp, #0
 80150de:	60f8      	str	r0, [r7, #12]
 80150e0:	60b9      	str	r1, [r7, #8]
 80150e2:	607a      	str	r2, [r7, #4]
	 _Node* __tmp = _M_create_node(std::forward<_Args>(__args)...);
 80150e4:	6878      	ldr	r0, [r7, #4]
 80150e6:	f000 f8a7 	bl	8015238 <_ZSt7forwardIRKP9XFTimeoutEOT_RNSt16remove_referenceIS4_E4typeE>
 80150ea:	4603      	mov	r3, r0
 80150ec:	4619      	mov	r1, r3
 80150ee:	68f8      	ldr	r0, [r7, #12]
 80150f0:	f7ff ffad 	bl	801504e <_ZNSt7__cxx114listIP9XFTimeoutSaIS2_EE14_M_create_nodeIJRKS2_EEEPSt10_List_nodeIS2_EDpOT_>
 80150f4:	6178      	str	r0, [r7, #20]
	 __tmp->_M_hook(__position._M_node);
 80150f6:	697b      	ldr	r3, [r7, #20]
 80150f8:	68ba      	ldr	r2, [r7, #8]
 80150fa:	4611      	mov	r1, r2
 80150fc:	4618      	mov	r0, r3
 80150fe:	f016 fcd9 	bl	802bab4 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>
	 this->_M_inc_size(1);
 8015102:	68fb      	ldr	r3, [r7, #12]
 8015104:	2101      	movs	r1, #1
 8015106:	4618      	mov	r0, r3
 8015108:	f7ff ffd5 	bl	80150b6 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_inc_sizeEj>
       }
 801510c:	bf00      	nop
 801510e:	3718      	adds	r7, #24
 8015110:	46bd      	mov	sp, r7
 8015112:	bd80      	pop	{r7, pc}

08015114 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015114:	b480      	push	{r7}
 8015116:	b083      	sub	sp, #12
 8015118:	af00      	add	r7, sp, #0
 801511a:	6078      	str	r0, [r7, #4]
 801511c:	687b      	ldr	r3, [r7, #4]
 801511e:	4618      	mov	r0, r3
 8015120:	370c      	adds	r7, #12
 8015122:	46bd      	mov	sp, r7
 8015124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015128:	4770      	bx	lr

0801512a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
 801512a:	b480      	push	{r7}
 801512c:	b083      	sub	sp, #12
 801512e:	af00      	add	r7, sp, #0
 8015130:	6078      	str	r0, [r7, #4]
      { return _M_impl; }
 8015132:	687b      	ldr	r3, [r7, #4]
 8015134:	4618      	mov	r0, r3
 8015136:	370c      	adds	r7, #12
 8015138:	46bd      	mov	sp, r7
 801513a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801513e:	4770      	bx	lr

08015140 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE7destroyIS2_EEvRS4_PT_>:
       *
       *  Calls @c __a.destroy(__p).
      */
      template<typename _Up>
	static _GLIBCXX20_CONSTEXPR void
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 8015140:	b580      	push	{r7, lr}
 8015142:	b082      	sub	sp, #8
 8015144:	af00      	add	r7, sp, #0
 8015146:	6078      	str	r0, [r7, #4]
 8015148:	6039      	str	r1, [r7, #0]
	noexcept(is_nothrow_destructible<_Up>::value)
	{
#if __cplusplus <= 201703L
	  __a.destroy(__p);
 801514a:	6839      	ldr	r1, [r7, #0]
 801514c:	6878      	ldr	r0, [r7, #4]
 801514e:	f000 f8a0 	bl	8015292 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE7destroyIS3_EEvPT_>
#else
	  std::destroy_at(__p);
#endif
	}
 8015152:	bf00      	nop
 8015154:	3708      	adds	r7, #8
 8015156:	46bd      	mov	sp, r7
 8015158:	bd80      	pop	{r7, pc}

0801515a <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E>:
      _M_put_node(typename _Node_alloc_traits::pointer __p) _GLIBCXX_NOEXCEPT
 801515a:	b580      	push	{r7, lr}
 801515c:	b082      	sub	sp, #8
 801515e:	af00      	add	r7, sp, #0
 8015160:	6078      	str	r0, [r7, #4]
 8015162:	6039      	str	r1, [r7, #0]
      { _Node_alloc_traits::deallocate(_M_impl, __p, 1); }
 8015164:	687b      	ldr	r3, [r7, #4]
 8015166:	2201      	movs	r2, #1
 8015168:	6839      	ldr	r1, [r7, #0]
 801516a:	4618      	mov	r0, r3
 801516c:	f000 f89c 	bl	80152a8 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE10deallocateERS4_PS3_j>
 8015170:	bf00      	nop
 8015172:	3708      	adds	r7, #8
 8015174:	46bd      	mov	sp, r7
 8015176:	bd80      	pop	{r7, pc}

08015178 <_ZN9__gnu_cxx16__aligned_membufIP9XFTimeoutE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
 8015178:	b580      	push	{r7, lr}
 801517a:	b082      	sub	sp, #8
 801517c:	af00      	add	r7, sp, #0
 801517e:	6078      	str	r0, [r7, #4]
      { return static_cast<_Tp*>(_M_addr()); }
 8015180:	6878      	ldr	r0, [r7, #4]
 8015182:	f000 f8a0 	bl	80152c6 <_ZN9__gnu_cxx16__aligned_membufIP9XFTimeoutE7_M_addrEv>
 8015186:	4603      	mov	r3, r0
 8015188:	4618      	mov	r0, r3
 801518a:	3708      	adds	r7, #8
 801518c:	46bd      	mov	sp, r7
 801518e:	bd80      	pop	{r7, pc}

08015190 <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_dec_sizeEj>:
      void _M_dec_size(size_t __n) { _M_impl._M_node._M_size -= __n; }
 8015190:	b480      	push	{r7}
 8015192:	b083      	sub	sp, #12
 8015194:	af00      	add	r7, sp, #0
 8015196:	6078      	str	r0, [r7, #4]
 8015198:	6039      	str	r1, [r7, #0]
 801519a:	687b      	ldr	r3, [r7, #4]
 801519c:	689a      	ldr	r2, [r3, #8]
 801519e:	683b      	ldr	r3, [r7, #0]
 80151a0:	1ad2      	subs	r2, r2, r3
 80151a2:	687b      	ldr	r3, [r7, #4]
 80151a4:	609a      	str	r2, [r3, #8]
 80151a6:	bf00      	nop
 80151a8:	370c      	adds	r7, #12
 80151aa:	46bd      	mov	sp, r7
 80151ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151b0:	4770      	bx	lr

080151b2 <_ZNKSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_get_sizeEv>:
      size_t _M_get_size() const { return _M_impl._M_node._M_size; }
 80151b2:	b480      	push	{r7}
 80151b4:	b083      	sub	sp, #12
 80151b6:	af00      	add	r7, sp, #0
 80151b8:	6078      	str	r0, [r7, #4]
 80151ba:	687b      	ldr	r3, [r7, #4]
 80151bc:	689b      	ldr	r3, [r3, #8]
 80151be:	4618      	mov	r0, r3
 80151c0:	370c      	adds	r7, #12
 80151c2:	46bd      	mov	sp, r7
 80151c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80151c8:	4770      	bx	lr

080151ca <_ZNSt7__cxx1110_List_baseIP9XFTimeoutSaIS2_EE11_M_get_nodeEv>:
      _M_get_node()
 80151ca:	b580      	push	{r7, lr}
 80151cc:	b082      	sub	sp, #8
 80151ce:	af00      	add	r7, sp, #0
 80151d0:	6078      	str	r0, [r7, #4]
      { return _Node_alloc_traits::allocate(_M_impl, 1); }
 80151d2:	687b      	ldr	r3, [r7, #4]
 80151d4:	2101      	movs	r1, #1
 80151d6:	4618      	mov	r0, r3
 80151d8:	f000 f880 	bl	80152dc <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE8allocateERS4_j>
 80151dc:	4603      	mov	r3, r0
 80151de:	4618      	mov	r0, r3
 80151e0:	3708      	adds	r7, #8
 80151e2:	46bd      	mov	sp, r7
 80151e4:	bd80      	pop	{r7, pc}

080151e6 <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEEC1ERS4_PS3_>:
    {
      using pointer = typename allocator_traits<_Alloc>::pointer;
      using value_type = typename allocator_traits<_Alloc>::value_type;

      /// Take ownership of __ptr
      __allocated_ptr(_Alloc& __a, pointer __ptr) noexcept
 80151e6:	b580      	push	{r7, lr}
 80151e8:	b084      	sub	sp, #16
 80151ea:	af00      	add	r7, sp, #0
 80151ec:	60f8      	str	r0, [r7, #12]
 80151ee:	60b9      	str	r1, [r7, #8]
 80151f0:	607a      	str	r2, [r7, #4]
      : _M_alloc(std::__addressof(__a)), _M_ptr(__ptr)
 80151f2:	68b8      	ldr	r0, [r7, #8]
 80151f4:	f000 f881 	bl	80152fa <_ZSt11__addressofISaISt10_List_nodeIP9XFTimeoutEEEPT_RS5_>
 80151f8:	4602      	mov	r2, r0
 80151fa:	68fb      	ldr	r3, [r7, #12]
 80151fc:	601a      	str	r2, [r3, #0]
 80151fe:	68fb      	ldr	r3, [r7, #12]
 8015200:	687a      	ldr	r2, [r7, #4]
 8015202:	605a      	str	r2, [r3, #4]
      { }
 8015204:	68fb      	ldr	r3, [r7, #12]
 8015206:	4618      	mov	r0, r3
 8015208:	3710      	adds	r7, #16
 801520a:	46bd      	mov	sp, r7
 801520c:	bd80      	pop	{r7, pc}

0801520e <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEED1Ev>:
      __allocated_ptr(__allocated_ptr&& __gd) noexcept
      : _M_alloc(__gd._M_alloc), _M_ptr(__gd._M_ptr)
      { __gd._M_ptr = nullptr; }

      /// Deallocate the owned pointer
      ~__allocated_ptr()
 801520e:	b580      	push	{r7, lr}
 8015210:	b082      	sub	sp, #8
 8015212:	af00      	add	r7, sp, #0
 8015214:	6078      	str	r0, [r7, #4]
      {
	if (_M_ptr != nullptr)
 8015216:	687b      	ldr	r3, [r7, #4]
 8015218:	685b      	ldr	r3, [r3, #4]
 801521a:	2b00      	cmp	r3, #0
 801521c:	d007      	beq.n	801522e <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEED1Ev+0x20>
	  std::allocator_traits<_Alloc>::deallocate(*_M_alloc, _M_ptr, 1);
 801521e:	687b      	ldr	r3, [r7, #4]
 8015220:	6818      	ldr	r0, [r3, #0]
 8015222:	687b      	ldr	r3, [r7, #4]
 8015224:	685b      	ldr	r3, [r3, #4]
 8015226:	2201      	movs	r2, #1
 8015228:	4619      	mov	r1, r3
 801522a:	f000 f83d 	bl	80152a8 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE10deallocateERS4_PS3_j>
      }
 801522e:	687b      	ldr	r3, [r7, #4]
 8015230:	4618      	mov	r0, r3
 8015232:	3708      	adds	r7, #8
 8015234:	46bd      	mov	sp, r7
 8015236:	bd80      	pop	{r7, pc}

08015238 <_ZSt7forwardIRKP9XFTimeoutEOT_RNSt16remove_referenceIS4_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015238:	b480      	push	{r7}
 801523a:	b083      	sub	sp, #12
 801523c:	af00      	add	r7, sp, #0
 801523e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015240:	687b      	ldr	r3, [r7, #4]
 8015242:	4618      	mov	r0, r3
 8015244:	370c      	adds	r7, #12
 8015246:	46bd      	mov	sp, r7
 8015248:	f85d 7b04 	ldr.w	r7, [sp], #4
 801524c:	4770      	bx	lr

0801524e <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE9constructIS2_JRKS2_EEEvRS4_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 801524e:	b580      	push	{r7, lr}
 8015250:	b084      	sub	sp, #16
 8015252:	af00      	add	r7, sp, #0
 8015254:	60f8      	str	r0, [r7, #12]
 8015256:	60b9      	str	r1, [r7, #8]
 8015258:	607a      	str	r2, [r7, #4]
	  __a.construct(__p, std::forward<_Args>(__args)...);
 801525a:	6878      	ldr	r0, [r7, #4]
 801525c:	f7ff ffec 	bl	8015238 <_ZSt7forwardIRKP9XFTimeoutEOT_RNSt16remove_referenceIS4_E4typeE>
 8015260:	4603      	mov	r3, r0
 8015262:	461a      	mov	r2, r3
 8015264:	68b9      	ldr	r1, [r7, #8]
 8015266:	68f8      	ldr	r0, [r7, #12]
 8015268:	f000 f852 	bl	8015310 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE9constructIS3_JRKS3_EEEvPT_DpOT0_>
	}
 801526c:	bf00      	nop
 801526e:	3710      	adds	r7, #16
 8015270:	46bd      	mov	sp, r7
 8015272:	bd80      	pop	{r7, pc}

08015274 <_ZNSt15__allocated_ptrISaISt10_List_nodeIP9XFTimeoutEEEaSEDn>:

      /// Release ownership of the owned pointer
      __allocated_ptr&
      operator=(std::nullptr_t) noexcept
 8015274:	b480      	push	{r7}
 8015276:	b083      	sub	sp, #12
 8015278:	af00      	add	r7, sp, #0
 801527a:	6078      	str	r0, [r7, #4]
 801527c:	6039      	str	r1, [r7, #0]
      {
	_M_ptr = nullptr;
 801527e:	687b      	ldr	r3, [r7, #4]
 8015280:	2200      	movs	r2, #0
 8015282:	605a      	str	r2, [r3, #4]
	return *this;
 8015284:	687b      	ldr	r3, [r7, #4]
      }
 8015286:	4618      	mov	r0, r3
 8015288:	370c      	adds	r7, #12
 801528a:	46bd      	mov	sp, r7
 801528c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015290:	4770      	bx	lr

08015292 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE7destroyIS3_EEvPT_>:
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }

      template<typename _Up>
	void
	destroy(_Up* __p)
 8015292:	b480      	push	{r7}
 8015294:	b083      	sub	sp, #12
 8015296:	af00      	add	r7, sp, #0
 8015298:	6078      	str	r0, [r7, #4]
 801529a:	6039      	str	r1, [r7, #0]
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
 801529c:	bf00      	nop
 801529e:	370c      	adds	r7, #12
 80152a0:	46bd      	mov	sp, r7
 80152a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152a6:	4770      	bx	lr

080152a8 <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE10deallocateERS4_PS3_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 80152a8:	b580      	push	{r7, lr}
 80152aa:	b084      	sub	sp, #16
 80152ac:	af00      	add	r7, sp, #0
 80152ae:	60f8      	str	r0, [r7, #12]
 80152b0:	60b9      	str	r1, [r7, #8]
 80152b2:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 80152b4:	687a      	ldr	r2, [r7, #4]
 80152b6:	68b9      	ldr	r1, [r7, #8]
 80152b8:	68f8      	ldr	r0, [r7, #12]
 80152ba:	f000 f83f 	bl	801533c <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE10deallocateEPS4_j>
 80152be:	bf00      	nop
 80152c0:	3710      	adds	r7, #16
 80152c2:	46bd      	mov	sp, r7
 80152c4:	bd80      	pop	{r7, pc}

080152c6 <_ZN9__gnu_cxx16__aligned_membufIP9XFTimeoutE7_M_addrEv>:
      _M_addr() noexcept
 80152c6:	b480      	push	{r7}
 80152c8:	b083      	sub	sp, #12
 80152ca:	af00      	add	r7, sp, #0
 80152cc:	6078      	str	r0, [r7, #4]
      { return static_cast<void*>(&_M_storage); }
 80152ce:	687b      	ldr	r3, [r7, #4]
 80152d0:	4618      	mov	r0, r3
 80152d2:	370c      	adds	r7, #12
 80152d4:	46bd      	mov	sp, r7
 80152d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80152da:	4770      	bx	lr

080152dc <_ZNSt16allocator_traitsISaISt10_List_nodeIP9XFTimeoutEEE8allocateERS4_j>:
      allocate(allocator_type& __a, size_type __n)
 80152dc:	b580      	push	{r7, lr}
 80152de:	b082      	sub	sp, #8
 80152e0:	af00      	add	r7, sp, #0
 80152e2:	6078      	str	r0, [r7, #4]
 80152e4:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80152e6:	2200      	movs	r2, #0
 80152e8:	6839      	ldr	r1, [r7, #0]
 80152ea:	6878      	ldr	r0, [r7, #4]
 80152ec:	f000 f839 	bl	8015362 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE8allocateEjPKv>
 80152f0:	4603      	mov	r3, r0
 80152f2:	4618      	mov	r0, r3
 80152f4:	3708      	adds	r7, #8
 80152f6:	46bd      	mov	sp, r7
 80152f8:	bd80      	pop	{r7, pc}

080152fa <_ZSt11__addressofISaISt10_List_nodeIP9XFTimeoutEEEPT_RS5_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
 80152fa:	b480      	push	{r7}
 80152fc:	b083      	sub	sp, #12
 80152fe:	af00      	add	r7, sp, #0
 8015300:	6078      	str	r0, [r7, #4]
    { return __builtin_addressof(__r); }
 8015302:	687b      	ldr	r3, [r7, #4]
 8015304:	4618      	mov	r0, r3
 8015306:	370c      	adds	r7, #12
 8015308:	46bd      	mov	sp, r7
 801530a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801530e:	4770      	bx	lr

08015310 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE9constructIS3_JRKS3_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015310:	b590      	push	{r4, r7, lr}
 8015312:	b085      	sub	sp, #20
 8015314:	af00      	add	r7, sp, #0
 8015316:	60f8      	str	r0, [r7, #12]
 8015318:	60b9      	str	r1, [r7, #8]
 801531a:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 801531c:	6878      	ldr	r0, [r7, #4]
 801531e:	f7ff ff8b 	bl	8015238 <_ZSt7forwardIRKP9XFTimeoutEOT_RNSt16remove_referenceIS4_E4typeE>
 8015322:	4603      	mov	r3, r0
 8015324:	681c      	ldr	r4, [r3, #0]
 8015326:	68bb      	ldr	r3, [r7, #8]
 8015328:	4619      	mov	r1, r3
 801532a:	2004      	movs	r0, #4
 801532c:	f7f4 f90a 	bl	8009544 <_ZnwjPv>
 8015330:	4603      	mov	r3, r0
 8015332:	601c      	str	r4, [r3, #0]
 8015334:	bf00      	nop
 8015336:	3714      	adds	r7, #20
 8015338:	46bd      	mov	sp, r7
 801533a:	bd90      	pop	{r4, r7, pc}

0801533c <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE10deallocateEPS4_j>:
      deallocate(_Tp* __p, size_type __t)
 801533c:	b580      	push	{r7, lr}
 801533e:	b084      	sub	sp, #16
 8015340:	af00      	add	r7, sp, #0
 8015342:	60f8      	str	r0, [r7, #12]
 8015344:	60b9      	str	r1, [r7, #8]
 8015346:	607a      	str	r2, [r7, #4]
	::operator delete(__p
 8015348:	687a      	ldr	r2, [r7, #4]
 801534a:	4613      	mov	r3, r2
 801534c:	005b      	lsls	r3, r3, #1
 801534e:	4413      	add	r3, r2
 8015350:	009b      	lsls	r3, r3, #2
 8015352:	4619      	mov	r1, r3
 8015354:	68b8      	ldr	r0, [r7, #8]
 8015356:	f016 fb86 	bl	802ba66 <_ZdlPvj>
      }
 801535a:	bf00      	nop
 801535c:	3710      	adds	r7, #16
 801535e:	46bd      	mov	sp, r7
 8015360:	bd80      	pop	{r7, pc}

08015362 <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 8015362:	b580      	push	{r7, lr}
 8015364:	b084      	sub	sp, #16
 8015366:	af00      	add	r7, sp, #0
 8015368:	60f8      	str	r0, [r7, #12]
 801536a:	60b9      	str	r1, [r7, #8]
 801536c:	607a      	str	r2, [r7, #4]
	if (__n > this->_M_max_size())
 801536e:	68f8      	ldr	r0, [r7, #12]
 8015370:	f000 f818 	bl	80153a4 <_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE11_M_max_sizeEv>
 8015374:	4602      	mov	r2, r0
 8015376:	68bb      	ldr	r3, [r7, #8]
 8015378:	4293      	cmp	r3, r2
 801537a:	bf8c      	ite	hi
 801537c:	2301      	movhi	r3, #1
 801537e:	2300      	movls	r3, #0
 8015380:	b2db      	uxtb	r3, r3
 8015382:	2b00      	cmp	r3, #0
 8015384:	d001      	beq.n	801538a <_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 8015386:	f016 fba1 	bl	802bacc <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 801538a:	68ba      	ldr	r2, [r7, #8]
 801538c:	4613      	mov	r3, r2
 801538e:	005b      	lsls	r3, r3, #1
 8015390:	4413      	add	r3, r2
 8015392:	009b      	lsls	r3, r3, #2
 8015394:	4618      	mov	r0, r3
 8015396:	f016 fb77 	bl	802ba88 <_Znwj>
 801539a:	4603      	mov	r3, r0
      }
 801539c:	4618      	mov	r0, r3
 801539e:	3710      	adds	r7, #16
 80153a0:	46bd      	mov	sp, r7
 80153a2:	bd80      	pop	{r7, pc}

080153a4 <_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
 80153a4:	b480      	push	{r7}
 80153a6:	b083      	sub	sp, #12
 80153a8:	af00      	add	r7, sp, #0
 80153aa:	6078      	str	r0, [r7, #4]
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 80153ac:	4b03      	ldr	r3, [pc, #12]	; (80153bc <_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIP9XFTimeoutEE11_M_max_sizeEv+0x18>)
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
 80153ae:	4618      	mov	r0, r3
 80153b0:	370c      	adds	r7, #12
 80153b2:	46bd      	mov	sp, r7
 80153b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80153b8:	4770      	bx	lr
 80153ba:	bf00      	nop
 80153bc:	0aaaaaaa 	.word	0x0aaaaaaa

080153c0 <XF_initialize>:

bool XF::isInitialized_ = false;
bool XF::isRunning_ = false;

void XF_initialize(int timeInterval)
{
 80153c0:	b580      	push	{r7, lr}
 80153c2:	b082      	sub	sp, #8
 80153c4:	af00      	add	r7, sp, #0
 80153c6:	6078      	str	r0, [r7, #4]
    XF::initialize(timeInterval);
 80153c8:	2200      	movs	r2, #0
 80153ca:	2100      	movs	r1, #0
 80153cc:	6878      	ldr	r0, [r7, #4]
 80153ce:	f000 f80b 	bl	80153e8 <_ZN2XF10initializeEiiPPc>
}
 80153d2:	bf00      	nop
 80153d4:	3708      	adds	r7, #8
 80153d6:	46bd      	mov	sp, r7
 80153d8:	bd80      	pop	{r7, pc}

080153da <XF_exec>:

void XF_exec()
{
 80153da:	b580      	push	{r7, lr}
 80153dc:	af00      	add	r7, sp, #0
    XF::exec();
 80153de:	f000 f823 	bl	8015428 <_ZN2XF4execEv>
}
 80153e2:	bf00      	nop
 80153e4:	bd80      	pop	{r7, pc}
	...

080153e8 <_ZN2XF10initializeEiiPPc>:
{
    XF::execOnce();
}

void XF::initialize(int timeInterval /* = 10 */, int argc /* = 0 */, char * argv[] /* = nullptr */)
{
 80153e8:	b580      	push	{r7, lr}
 80153ea:	b084      	sub	sp, #16
 80153ec:	af00      	add	r7, sp, #0
 80153ee:	60f8      	str	r0, [r7, #12]
 80153f0:	60b9      	str	r1, [r7, #8]
 80153f2:	607a      	str	r2, [r7, #4]
    if (!isInitialized_)
 80153f4:	4b0b      	ldr	r3, [pc, #44]	; (8015424 <_ZN2XF10initializeEiiPPc+0x3c>)
 80153f6:	781b      	ldrb	r3, [r3, #0]
 80153f8:	f083 0301 	eor.w	r3, r3, #1
 80153fc:	b2db      	uxtb	r3, r3
 80153fe:	2b00      	cmp	r3, #0
 8015400:	d00b      	beq.n	801541a <_ZN2XF10initializeEiiPPc+0x32>
    {
        // Create and initialize TimeoutManager
        XFTimeoutManager::getInstance()->initialize(timeInterval);
 8015402:	f7ff f873 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 8015406:	4603      	mov	r3, r0
 8015408:	681a      	ldr	r2, [r3, #0]
 801540a:	3208      	adds	r2, #8
 801540c:	6812      	ldr	r2, [r2, #0]
 801540e:	68f9      	ldr	r1, [r7, #12]
 8015410:	4618      	mov	r0, r3
 8015412:	4790      	blx	r2

        isInitialized_ = true;
 8015414:	4b03      	ldr	r3, [pc, #12]	; (8015424 <_ZN2XF10initializeEiiPPc+0x3c>)
 8015416:	2201      	movs	r2, #1
 8015418:	701a      	strb	r2, [r3, #0]
    }
}
 801541a:	bf00      	nop
 801541c:	3710      	adds	r7, #16
 801541e:	46bd      	mov	sp, r7
 8015420:	bd80      	pop	{r7, pc}
 8015422:	bf00      	nop
 8015424:	20004158 	.word	0x20004158

08015428 <_ZN2XF4execEv>:

int XF::exec()
{
 8015428:	b580      	push	{r7, lr}
 801542a:	af00      	add	r7, sp, #0
	// Start timeout manager
	XFTimeoutManager::getInstance()->start();
 801542c:	f7ff f85e 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 8015430:	4603      	mov	r3, r0
 8015432:	681a      	ldr	r2, [r3, #0]
 8015434:	3210      	adds	r2, #16
 8015436:	6812      	ldr	r2, [r2, #0]
 8015438:	4618      	mov	r0, r3
 801543a:	4790      	blx	r2

	// Start default dispatcher
	XFResourceFactory::getInstance()->getDefaultDispatcher()->start();
 801543c:	f7fe fecc 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 8015440:	4603      	mov	r3, r0
 8015442:	681a      	ldr	r2, [r3, #0]
 8015444:	6812      	ldr	r2, [r2, #0]
 8015446:	4618      	mov	r0, r3
 8015448:	4790      	blx	r2
 801544a:	4603      	mov	r3, r0
 801544c:	681a      	ldr	r2, [r3, #0]
 801544e:	320c      	adds	r2, #12
 8015450:	6812      	ldr	r2, [r2, #0]
 8015452:	4618      	mov	r0, r3
 8015454:	4790      	blx	r2

	isRunning_ = true;     // From here the XF is running
 8015456:	4b13      	ldr	r3, [pc, #76]	; (80154a4 <_ZN2XF4execEv+0x7c>)
 8015458:	2201      	movs	r2, #1
 801545a:	701a      	strb	r2, [r3, #0]

	// In case default dispatcher does not have a thread executing it,
	// call it with this thread
	if (!XFResourceFactory::getInstance()->getDefaultDispatcher()->isActive())
 801545c:	f7fe febc 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 8015460:	4603      	mov	r3, r0
 8015462:	681a      	ldr	r2, [r3, #0]
 8015464:	6812      	ldr	r2, [r2, #0]
 8015466:	4618      	mov	r0, r3
 8015468:	4790      	blx	r2
 801546a:	4603      	mov	r3, r0
 801546c:	681a      	ldr	r2, [r3, #0]
 801546e:	3208      	adds	r2, #8
 8015470:	6812      	ldr	r2, [r2, #0]
 8015472:	4618      	mov	r0, r3
 8015474:	4790      	blx	r2
 8015476:	4603      	mov	r3, r0
 8015478:	f083 0301 	eor.w	r3, r3, #1
 801547c:	b2db      	uxtb	r3, r3
 801547e:	2b00      	cmp	r3, #0
 8015480:	d00d      	beq.n	801549e <_ZN2XF4execEv+0x76>
	{
		XFResourceFactory::getInstance()->getDefaultDispatcher()->execute();
 8015482:	f7fe fea9 	bl	80141d8 <_ZN9interface17XFResourceFactory11getInstanceEv>
 8015486:	4603      	mov	r3, r0
 8015488:	681a      	ldr	r2, [r3, #0]
 801548a:	6812      	ldr	r2, [r2, #0]
 801548c:	4618      	mov	r0, r3
 801548e:	4790      	blx	r2
 8015490:	4603      	mov	r3, r0
 8015492:	681a      	ldr	r2, [r3, #0]
 8015494:	3224      	adds	r2, #36	; 0x24
 8015496:	6812      	ldr	r2, [r2, #0]
 8015498:	2100      	movs	r1, #0
 801549a:	4618      	mov	r0, r3
 801549c:	4790      	blx	r2
	}
    return 0;
 801549e:	2300      	movs	r3, #0
}
 80154a0:	4618      	mov	r0, r3
 80154a2:	bd80      	pop	{r7, pc}
 80154a4:	20004159 	.word	0x20004159

080154a8 <_ZN2XF9isRunningEv>:
    // Execute once the default dispatcher
    return XFResourceFactory::getInstance()->getDefaultDispatcher()->executeOnce();
}

bool XF::isRunning()
{
 80154a8:	b480      	push	{r7}
 80154aa:	af00      	add	r7, sp, #0
    return isRunning_;
 80154ac:	4b03      	ldr	r3, [pc, #12]	; (80154bc <_ZN2XF9isRunningEv+0x14>)
 80154ae:	781b      	ldrb	r3, [r3, #0]
}
 80154b0:	4618      	mov	r0, r3
 80154b2:	46bd      	mov	sp, r7
 80154b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80154b8:	4770      	bx	lr
 80154ba:	bf00      	nop
 80154bc:	20004159 	.word	0x20004159

080154c0 <_ZSt16__deque_buf_sizej>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
 80154c0:	b480      	push	{r7}
 80154c2:	b083      	sub	sp, #12
 80154c4:	af00      	add	r7, sp, #0
 80154c6:	6078      	str	r0, [r7, #4]
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
 80154c8:	687b      	ldr	r3, [r7, #4]
 80154ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80154ce:	d205      	bcs.n	80154dc <_ZSt16__deque_buf_sizej+0x1c>
 80154d0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80154d4:	687b      	ldr	r3, [r7, #4]
 80154d6:	fbb2 f3f3 	udiv	r3, r2, r3
 80154da:	e000      	b.n	80154de <_ZSt16__deque_buf_sizej+0x1e>
 80154dc:	2301      	movs	r3, #1
 80154de:	4618      	mov	r0, r3
 80154e0:	370c      	adds	r7, #12
 80154e2:	46bd      	mov	sp, r7
 80154e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80154e8:	4770      	bx	lr
	...

080154ec <_ZN9interface12XFEventQueueC1Ev>:
    virtual const XFEvent * front() = 0;			///< Returns pointer to next event to pop.
    virtual void pop() = 0;							///< Pops the next event from the queue.
    virtual bool pend() = 0;						///< Wait for the next event to arrive. Returns true if an event is in the queue.

public:
    XFEventQueue() = default;
 80154ec:	b480      	push	{r7}
 80154ee:	b083      	sub	sp, #12
 80154f0:	af00      	add	r7, sp, #0
 80154f2:	6078      	str	r0, [r7, #4]
 80154f4:	4a04      	ldr	r2, [pc, #16]	; (8015508 <_ZN9interface12XFEventQueueC1Ev+0x1c>)
 80154f6:	687b      	ldr	r3, [r7, #4]
 80154f8:	601a      	str	r2, [r3, #0]
 80154fa:	687b      	ldr	r3, [r7, #4]
 80154fc:	4618      	mov	r0, r3
 80154fe:	370c      	adds	r7, #12
 8015500:	46bd      	mov	sp, r7
 8015502:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015506:	4770      	bx	lr
 8015508:	0802fa54 	.word	0x0802fa54

0801550c <_ZN9interface12XFEventQueueD1Ev>:
    virtual ~XFEventQueue() = default;
 801550c:	b480      	push	{r7}
 801550e:	b083      	sub	sp, #12
 8015510:	af00      	add	r7, sp, #0
 8015512:	6078      	str	r0, [r7, #4]
 8015514:	4a04      	ldr	r2, [pc, #16]	; (8015528 <_ZN9interface12XFEventQueueD1Ev+0x1c>)
 8015516:	687b      	ldr	r3, [r7, #4]
 8015518:	601a      	str	r2, [r3, #0]
 801551a:	687b      	ldr	r3, [r7, #4]
 801551c:	4618      	mov	r0, r3
 801551e:	370c      	adds	r7, #12
 8015520:	46bd      	mov	sp, r7
 8015522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015526:	4770      	bx	lr
 8015528:	0802fa54 	.word	0x0802fa54

0801552c <_ZN9interface12XFEventQueueD0Ev>:
 801552c:	b580      	push	{r7, lr}
 801552e:	b082      	sub	sp, #8
 8015530:	af00      	add	r7, sp, #0
 8015532:	6078      	str	r0, [r7, #4]
 8015534:	6878      	ldr	r0, [r7, #4]
 8015536:	f7ff ffe9 	bl	801550c <_ZN9interface12XFEventQueueD1Ev>
 801553a:	2104      	movs	r1, #4
 801553c:	6878      	ldr	r0, [r7, #4]
 801553e:	f016 fa92 	bl	802ba66 <_ZdlPvj>
 8015542:	687b      	ldr	r3, [r7, #4]
 8015544:	4618      	mov	r0, r3
 8015546:	3708      	adds	r7, #8
 8015548:	46bd      	mov	sp, r7
 801554a:	bd80      	pop	{r7, pc}

0801554c <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
 801554c:	b580      	push	{r7, lr}
 801554e:	b082      	sub	sp, #8
 8015550:	af00      	add	r7, sp, #0
 8015552:	6078      	str	r0, [r7, #4]
 8015554:	687b      	ldr	r3, [r7, #4]
 8015556:	4618      	mov	r0, r3
 8015558:	f000 f8d8 	bl	801570c <_ZNSt5dequeIPK7XFEventSaIS2_EED1Ev>
 801555c:	687b      	ldr	r3, [r7, #4]
 801555e:	4618      	mov	r0, r3
 8015560:	3708      	adds	r7, #8
 8015562:	46bd      	mov	sp, r7
 8015564:	bd80      	pop	{r7, pc}
	...

08015568 <_ZN19XFEventQueueDefaultC1Ev>:
#if (USE_XF_EVENT_QUEUE_DEFAULT_IDF_IMPLEMENTATION != 0)

#include <cassert>
#include "eventqueue-default.h"

XFEventQueueDefault::XFEventQueueDefault()
 8015568:	b580      	push	{r7, lr}
 801556a:	b082      	sub	sp, #8
 801556c:	af00      	add	r7, sp, #0
 801556e:	6078      	str	r0, [r7, #4]
 8015570:	687b      	ldr	r3, [r7, #4]
 8015572:	4618      	mov	r0, r3
 8015574:	f7ff ffba 	bl	80154ec <_ZN9interface12XFEventQueueC1Ev>
 8015578:	4a08      	ldr	r2, [pc, #32]	; (801559c <_ZN19XFEventQueueDefaultC1Ev+0x34>)
 801557a:	687b      	ldr	r3, [r7, #4]
 801557c:	601a      	str	r2, [r3, #0]
 801557e:	687b      	ldr	r3, [r7, #4]
 8015580:	3304      	adds	r3, #4
 8015582:	4618      	mov	r0, r3
 8015584:	f001 f818 	bl	80165b8 <_ZN14XFMutexDefaultC1Ev>
 8015588:	687b      	ldr	r3, [r7, #4]
 801558a:	3308      	adds	r3, #8
 801558c:	4618      	mov	r0, r3
 801558e:	f000 f8a9 	bl	80156e4 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEEC1IS5_vEEv>
{

}
 8015592:	687b      	ldr	r3, [r7, #4]
 8015594:	4618      	mov	r0, r3
 8015596:	3708      	adds	r7, #8
 8015598:	46bd      	mov	sp, r7
 801559a:	bd80      	pop	{r7, pc}
 801559c:	0802fa30 	.word	0x0802fa30

080155a0 <_ZN19XFEventQueueDefaultD1Ev>:

XFEventQueueDefault::~XFEventQueueDefault()
 80155a0:	b580      	push	{r7, lr}
 80155a2:	b082      	sub	sp, #8
 80155a4:	af00      	add	r7, sp, #0
 80155a6:	6078      	str	r0, [r7, #4]
 80155a8:	4a0a      	ldr	r2, [pc, #40]	; (80155d4 <_ZN19XFEventQueueDefaultD1Ev+0x34>)
 80155aa:	687b      	ldr	r3, [r7, #4]
 80155ac:	601a      	str	r2, [r3, #0]
 80155ae:	687b      	ldr	r3, [r7, #4]
 80155b0:	3308      	adds	r3, #8
 80155b2:	4618      	mov	r0, r3
 80155b4:	f7ff ffca 	bl	801554c <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEED1Ev>
 80155b8:	687b      	ldr	r3, [r7, #4]
 80155ba:	3304      	adds	r3, #4
 80155bc:	4618      	mov	r0, r3
 80155be:	f001 f80d 	bl	80165dc <_ZN14XFMutexDefaultD1Ev>
 80155c2:	687b      	ldr	r3, [r7, #4]
 80155c4:	4618      	mov	r0, r3
 80155c6:	f7ff ffa1 	bl	801550c <_ZN9interface12XFEventQueueD1Ev>
{

}
 80155ca:	687b      	ldr	r3, [r7, #4]
 80155cc:	4618      	mov	r0, r3
 80155ce:	3708      	adds	r7, #8
 80155d0:	46bd      	mov	sp, r7
 80155d2:	bd80      	pop	{r7, pc}
 80155d4:	0802fa30 	.word	0x0802fa30

080155d8 <_ZN19XFEventQueueDefaultD0Ev>:
XFEventQueueDefault::~XFEventQueueDefault()
 80155d8:	b580      	push	{r7, lr}
 80155da:	b082      	sub	sp, #8
 80155dc:	af00      	add	r7, sp, #0
 80155de:	6078      	str	r0, [r7, #4]
}
 80155e0:	6878      	ldr	r0, [r7, #4]
 80155e2:	f7ff ffdd 	bl	80155a0 <_ZN19XFEventQueueDefaultD1Ev>
 80155e6:	2130      	movs	r1, #48	; 0x30
 80155e8:	6878      	ldr	r0, [r7, #4]
 80155ea:	f016 fa3c 	bl	802ba66 <_ZdlPvj>
 80155ee:	687b      	ldr	r3, [r7, #4]
 80155f0:	4618      	mov	r0, r3
 80155f2:	3708      	adds	r7, #8
 80155f4:	46bd      	mov	sp, r7
 80155f6:	bd80      	pop	{r7, pc}

080155f8 <_ZNK19XFEventQueueDefault5emptyEv>:

bool XFEventQueueDefault::empty() const
{
 80155f8:	b580      	push	{r7, lr}
 80155fa:	b082      	sub	sp, #8
 80155fc:	af00      	add	r7, sp, #0
 80155fe:	6078      	str	r0, [r7, #4]
    return _queue.empty();
 8015600:	687b      	ldr	r3, [r7, #4]
 8015602:	3308      	adds	r3, #8
 8015604:	4618      	mov	r0, r3
 8015606:	f000 f8a6 	bl	8015756 <_ZNKSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE5emptyEv>
 801560a:	4603      	mov	r3, r0
}
 801560c:	4618      	mov	r0, r3
 801560e:	3708      	adds	r7, #8
 8015610:	46bd      	mov	sp, r7
 8015612:	bd80      	pop	{r7, pc}

08015614 <_ZN19XFEventQueueDefault4pushEPK7XFEventb>:

bool XFEventQueueDefault::push(const XFEvent * pEvent, bool fromISR)
{
 8015614:	b580      	push	{r7, lr}
 8015616:	b084      	sub	sp, #16
 8015618:	af00      	add	r7, sp, #0
 801561a:	60f8      	str	r0, [r7, #12]
 801561c:	60b9      	str	r1, [r7, #8]
 801561e:	4613      	mov	r3, r2
 8015620:	71fb      	strb	r3, [r7, #7]
    _mutex.lock();
 8015622:	68fb      	ldr	r3, [r7, #12]
 8015624:	3304      	adds	r3, #4
 8015626:	4618      	mov	r0, r3
 8015628:	f000 fffa 	bl	8016620 <_ZN14XFMutexDefault4lockEv>
    {
        _queue.push(pEvent);
 801562c:	68fb      	ldr	r3, [r7, #12]
 801562e:	3308      	adds	r3, #8
 8015630:	f107 0208 	add.w	r2, r7, #8
 8015634:	4611      	mov	r1, r2
 8015636:	4618      	mov	r0, r3
 8015638:	f000 f89a 	bl	8015770 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE4pushERKS2_>
    }
    _mutex.unlock();
 801563c:	68fb      	ldr	r3, [r7, #12]
 801563e:	3304      	adds	r3, #4
 8015640:	4618      	mov	r0, r3
 8015642:	f000 fff7 	bl	8016634 <_ZN14XFMutexDefault6unlockEv>

    return true;
 8015646:	2301      	movs	r3, #1
}
 8015648:	4618      	mov	r0, r3
 801564a:	3710      	adds	r7, #16
 801564c:	46bd      	mov	sp, r7
 801564e:	bd80      	pop	{r7, pc}

08015650 <_ZN19XFEventQueueDefault5frontEv>:

const XFEvent * XFEventQueueDefault::front()
{
 8015650:	b580      	push	{r7, lr}
 8015652:	b084      	sub	sp, #16
 8015654:	af00      	add	r7, sp, #0
 8015656:	6078      	str	r0, [r7, #4]
    const XFEvent * event;
    _mutex.lock();
 8015658:	687b      	ldr	r3, [r7, #4]
 801565a:	3304      	adds	r3, #4
 801565c:	4618      	mov	r0, r3
 801565e:	f000 ffdf 	bl	8016620 <_ZN14XFMutexDefault4lockEv>
    {
        event =  _queue.front();
 8015662:	687b      	ldr	r3, [r7, #4]
 8015664:	3308      	adds	r3, #8
 8015666:	4618      	mov	r0, r3
 8015668:	f000 f890 	bl	801578c <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE5frontEv>
 801566c:	4603      	mov	r3, r0
 801566e:	681b      	ldr	r3, [r3, #0]
 8015670:	60fb      	str	r3, [r7, #12]
    }
    _mutex.unlock();
 8015672:	687b      	ldr	r3, [r7, #4]
 8015674:	3304      	adds	r3, #4
 8015676:	4618      	mov	r0, r3
 8015678:	f000 ffdc 	bl	8016634 <_ZN14XFMutexDefault6unlockEv>
    return event;
 801567c:	68fb      	ldr	r3, [r7, #12]
}
 801567e:	4618      	mov	r0, r3
 8015680:	3710      	adds	r7, #16
 8015682:	46bd      	mov	sp, r7
 8015684:	bd80      	pop	{r7, pc}

08015686 <_ZN19XFEventQueueDefault3popEv>:

void XFEventQueueDefault::pop()
{
 8015686:	b580      	push	{r7, lr}
 8015688:	b082      	sub	sp, #8
 801568a:	af00      	add	r7, sp, #0
 801568c:	6078      	str	r0, [r7, #4]
    _mutex.lock();
 801568e:	687b      	ldr	r3, [r7, #4]
 8015690:	3304      	adds	r3, #4
 8015692:	4618      	mov	r0, r3
 8015694:	f000 ffc4 	bl	8016620 <_ZN14XFMutexDefault4lockEv>
    {
        _queue.pop();
 8015698:	687b      	ldr	r3, [r7, #4]
 801569a:	3308      	adds	r3, #8
 801569c:	4618      	mov	r0, r3
 801569e:	f000 f882 	bl	80157a6 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE3popEv>
    }
    _mutex.unlock();
 80156a2:	687b      	ldr	r3, [r7, #4]
 80156a4:	3304      	adds	r3, #4
 80156a6:	4618      	mov	r0, r3
 80156a8:	f000 ffc4 	bl	8016634 <_ZN14XFMutexDefault6unlockEv>
}
 80156ac:	bf00      	nop
 80156ae:	3708      	adds	r7, #8
 80156b0:	46bd      	mov	sp, r7
 80156b2:	bd80      	pop	{r7, pc}

080156b4 <_ZN19XFEventQueueDefault4pendEv>:

bool XFEventQueueDefault::pend()
{
 80156b4:	b480      	push	{r7}
 80156b6:	b083      	sub	sp, #12
 80156b8:	af00      	add	r7, sp, #0
 80156ba:	6078      	str	r0, [r7, #4]
    // Method cannot be used in an IDF! Waiting within
    // this method would block the whole XF
    return false;
 80156bc:	2300      	movs	r3, #0
}
 80156be:	4618      	mov	r0, r3
 80156c0:	370c      	adds	r7, #12
 80156c2:	46bd      	mov	sp, r7
 80156c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80156c8:	4770      	bx	lr

080156ca <_ZNSt5dequeIPK7XFEventSaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
 80156ca:	b580      	push	{r7, lr}
 80156cc:	b082      	sub	sp, #8
 80156ce:	af00      	add	r7, sp, #0
 80156d0:	6078      	str	r0, [r7, #4]
 80156d2:	687b      	ldr	r3, [r7, #4]
 80156d4:	4618      	mov	r0, r3
 80156d6:	f000 f87e 	bl	80157d6 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EEC1Ev>
 80156da:	687b      	ldr	r3, [r7, #4]
 80156dc:	4618      	mov	r0, r3
 80156de:	3708      	adds	r7, #8
 80156e0:	46bd      	mov	sp, r7
 80156e2:	bd80      	pop	{r7, pc}

080156e4 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEEC1IS5_vEEv>:
      queue(const _Sequence& __c = _Sequence())
      : c(__c) { }
#else
      template<typename _Seq = _Sequence, typename _Requires = typename
	       enable_if<is_default_constructible<_Seq>::value>::type>
	queue()
 80156e4:	b580      	push	{r7, lr}
 80156e6:	b082      	sub	sp, #8
 80156e8:	af00      	add	r7, sp, #0
 80156ea:	6078      	str	r0, [r7, #4]
	: c() { }
 80156ec:	687b      	ldr	r3, [r7, #4]
 80156ee:	4618      	mov	r0, r3
 80156f0:	2328      	movs	r3, #40	; 0x28
 80156f2:	461a      	mov	r2, r3
 80156f4:	2100      	movs	r1, #0
 80156f6:	f016 fc9d 	bl	802c034 <memset>
 80156fa:	687b      	ldr	r3, [r7, #4]
 80156fc:	4618      	mov	r0, r3
 80156fe:	f7ff ffe4 	bl	80156ca <_ZNSt5dequeIPK7XFEventSaIS2_EEC1Ev>
 8015702:	687b      	ldr	r3, [r7, #4]
 8015704:	4618      	mov	r0, r3
 8015706:	3708      	adds	r7, #8
 8015708:	46bd      	mov	sp, r7
 801570a:	bd80      	pop	{r7, pc}

0801570c <_ZNSt5dequeIPK7XFEventSaIS2_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~deque()
 801570c:	b580      	push	{r7, lr}
 801570e:	b08a      	sub	sp, #40	; 0x28
 8015710:	af00      	add	r7, sp, #0
 8015712:	6078      	str	r0, [r7, #4]
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
 8015714:	f107 0308 	add.w	r3, r7, #8
 8015718:	6879      	ldr	r1, [r7, #4]
 801571a:	4618      	mov	r0, r3
 801571c:	f000 f88e 	bl	801583c <_ZNSt5dequeIPK7XFEventSaIS2_EE5beginEv>
 8015720:	f107 0318 	add.w	r3, r7, #24
 8015724:	6879      	ldr	r1, [r7, #4]
 8015726:	4618      	mov	r0, r3
 8015728:	f000 f897 	bl	801585a <_ZNSt5dequeIPK7XFEventSaIS2_EE3endEv>
 801572c:	687b      	ldr	r3, [r7, #4]
 801572e:	4618      	mov	r0, r3
 8015730:	f000 f8a2 	bl	8015878 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>
 8015734:	4603      	mov	r3, r0
 8015736:	f107 0218 	add.w	r2, r7, #24
 801573a:	f107 0108 	add.w	r1, r7, #8
 801573e:	6878      	ldr	r0, [r7, #4]
 8015740:	f000 f8c1 	bl	80158c6 <_ZNSt5dequeIPK7XFEventSaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>
 8015744:	687b      	ldr	r3, [r7, #4]
 8015746:	4618      	mov	r0, r3
 8015748:	f000 f856 	bl	80157f8 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EED1Ev>
 801574c:	687b      	ldr	r3, [r7, #4]
 801574e:	4618      	mov	r0, r3
 8015750:	3728      	adds	r7, #40	; 0x28
 8015752:	46bd      	mov	sp, r7
 8015754:	bd80      	pop	{r7, pc}

08015756 <_ZNKSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE5emptyEv>:

      /**
       *  Returns true if the %queue is empty.
       */
      _GLIBCXX_NODISCARD bool
      empty() const
 8015756:	b580      	push	{r7, lr}
 8015758:	b082      	sub	sp, #8
 801575a:	af00      	add	r7, sp, #0
 801575c:	6078      	str	r0, [r7, #4]
      { return c.empty(); }
 801575e:	687b      	ldr	r3, [r7, #4]
 8015760:	4618      	mov	r0, r3
 8015762:	f000 f8bd 	bl	80158e0 <_ZNKSt5dequeIPK7XFEventSaIS2_EE5emptyEv>
 8015766:	4603      	mov	r3, r0
 8015768:	4618      	mov	r0, r3
 801576a:	3708      	adds	r7, #8
 801576c:	46bd      	mov	sp, r7
 801576e:	bd80      	pop	{r7, pc}

08015770 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE4pushERKS2_>:
       *  element at the end of the %queue and assigns the given data
       *  to it.  The time complexity of the operation depends on the
       *  underlying sequence.
       */
      void
      push(const value_type& __x)
 8015770:	b580      	push	{r7, lr}
 8015772:	b082      	sub	sp, #8
 8015774:	af00      	add	r7, sp, #0
 8015776:	6078      	str	r0, [r7, #4]
 8015778:	6039      	str	r1, [r7, #0]
      { c.push_back(__x); }
 801577a:	687b      	ldr	r3, [r7, #4]
 801577c:	6839      	ldr	r1, [r7, #0]
 801577e:	4618      	mov	r0, r3
 8015780:	f000 f8c0 	bl	8015904 <_ZNSt5dequeIPK7XFEventSaIS2_EE9push_backERKS2_>
 8015784:	bf00      	nop
 8015786:	3708      	adds	r7, #8
 8015788:	46bd      	mov	sp, r7
 801578a:	bd80      	pop	{r7, pc}

0801578c <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE5frontEv>:
      front()
 801578c:	b580      	push	{r7, lr}
 801578e:	b082      	sub	sp, #8
 8015790:	af00      	add	r7, sp, #0
 8015792:	6078      	str	r0, [r7, #4]
	return c.front();
 8015794:	687b      	ldr	r3, [r7, #4]
 8015796:	4618      	mov	r0, r3
 8015798:	f000 f8d5 	bl	8015946 <_ZNSt5dequeIPK7XFEventSaIS2_EE5frontEv>
 801579c:	4603      	mov	r3, r0
      }
 801579e:	4618      	mov	r0, r3
 80157a0:	3708      	adds	r7, #8
 80157a2:	46bd      	mov	sp, r7
 80157a4:	bd80      	pop	{r7, pc}

080157a6 <_ZNSt5queueIPK7XFEventSt5dequeIS2_SaIS2_EEE3popEv>:
       *  Note that no data is returned, and if the first element's
       *  data is needed, it should be retrieved before pop() is
       *  called.
       */
      void
      pop()
 80157a6:	b580      	push	{r7, lr}
 80157a8:	b082      	sub	sp, #8
 80157aa:	af00      	add	r7, sp, #0
 80157ac:	6078      	str	r0, [r7, #4]
      {
	__glibcxx_requires_nonempty();
	c.pop_front();
 80157ae:	687b      	ldr	r3, [r7, #4]
 80157b0:	4618      	mov	r0, r3
 80157b2:	f000 f8dc 	bl	801596e <_ZNSt5dequeIPK7XFEventSaIS2_EE9pop_frontEv>
      }
 80157b6:	bf00      	nop
 80157b8:	3708      	adds	r7, #8
 80157ba:	46bd      	mov	sp, r7
 80157bc:	bd80      	pop	{r7, pc}

080157be <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE11_Deque_implD1Ev>:
      struct _Deque_impl
 80157be:	b580      	push	{r7, lr}
 80157c0:	b082      	sub	sp, #8
 80157c2:	af00      	add	r7, sp, #0
 80157c4:	6078      	str	r0, [r7, #4]
 80157c6:	6878      	ldr	r0, [r7, #4]
 80157c8:	f000 f904 	bl	80159d4 <_ZNSaIPK7XFEventED1Ev>
 80157cc:	687b      	ldr	r3, [r7, #4]
 80157ce:	4618      	mov	r0, r3
 80157d0:	3708      	adds	r7, #8
 80157d2:	46bd      	mov	sp, r7
 80157d4:	bd80      	pop	{r7, pc}

080157d6 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EEC1Ev>:
      _Deque_base()
 80157d6:	b580      	push	{r7, lr}
 80157d8:	b082      	sub	sp, #8
 80157da:	af00      	add	r7, sp, #0
 80157dc:	6078      	str	r0, [r7, #4]
      : _M_impl()
 80157de:	687b      	ldr	r3, [r7, #4]
 80157e0:	4618      	mov	r0, r3
 80157e2:	f000 f8e7 	bl	80159b4 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
 80157e6:	2100      	movs	r1, #0
 80157e8:	6878      	ldr	r0, [r7, #4]
 80157ea:	f000 f8ff 	bl	80159ec <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE17_M_initialize_mapEj>
 80157ee:	687b      	ldr	r3, [r7, #4]
 80157f0:	4618      	mov	r0, r3
 80157f2:	3708      	adds	r7, #8
 80157f4:	46bd      	mov	sp, r7
 80157f6:	bd80      	pop	{r7, pc}

080157f8 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EED1Ev>:
    _Deque_base<_Tp, _Alloc>::
 80157f8:	b580      	push	{r7, lr}
 80157fa:	b082      	sub	sp, #8
 80157fc:	af00      	add	r7, sp, #0
 80157fe:	6078      	str	r0, [r7, #4]
      if (this->_M_impl._M_map)
 8015800:	687b      	ldr	r3, [r7, #4]
 8015802:	681b      	ldr	r3, [r3, #0]
 8015804:	2b00      	cmp	r3, #0
 8015806:	d010      	beq.n	801582a <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EED1Ev+0x32>
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 8015808:	687b      	ldr	r3, [r7, #4]
 801580a:	6959      	ldr	r1, [r3, #20]
			   this->_M_impl._M_finish._M_node + 1);
 801580c:	687b      	ldr	r3, [r7, #4]
 801580e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
 8015810:	3304      	adds	r3, #4
 8015812:	461a      	mov	r2, r3
 8015814:	6878      	ldr	r0, [r7, #4]
 8015816:	f000 f94c 	bl	8015ab2 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 801581a:	687b      	ldr	r3, [r7, #4]
 801581c:	6819      	ldr	r1, [r3, #0]
 801581e:	687b      	ldr	r3, [r7, #4]
 8015820:	685b      	ldr	r3, [r3, #4]
 8015822:	461a      	mov	r2, r3
 8015824:	6878      	ldr	r0, [r7, #4]
 8015826:	f000 f95e 	bl	8015ae6 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE17_M_deallocate_mapEPPS2_j>
    }
 801582a:	687b      	ldr	r3, [r7, #4]
 801582c:	4618      	mov	r0, r3
 801582e:	f7ff ffc6 	bl	80157be <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE11_Deque_implD1Ev>
 8015832:	687b      	ldr	r3, [r7, #4]
 8015834:	4618      	mov	r0, r3
 8015836:	3708      	adds	r7, #8
 8015838:	46bd      	mov	sp, r7
 801583a:	bd80      	pop	{r7, pc}

0801583c <_ZNSt5dequeIPK7XFEventSaIS2_EE5beginEv>:
      /**
       *  Returns a read/write iterator that points to the first element in the
       *  %deque.  Iteration is done in ordinary element order.
       */
      iterator
      begin() _GLIBCXX_NOEXCEPT
 801583c:	b580      	push	{r7, lr}
 801583e:	b082      	sub	sp, #8
 8015840:	af00      	add	r7, sp, #0
 8015842:	6078      	str	r0, [r7, #4]
 8015844:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_start; }
 8015846:	683b      	ldr	r3, [r7, #0]
 8015848:	3308      	adds	r3, #8
 801584a:	4619      	mov	r1, r3
 801584c:	6878      	ldr	r0, [r7, #4]
 801584e:	f000 f81e 	bl	801588e <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1ERKS5_>
 8015852:	6878      	ldr	r0, [r7, #4]
 8015854:	3708      	adds	r7, #8
 8015856:	46bd      	mov	sp, r7
 8015858:	bd80      	pop	{r7, pc}

0801585a <_ZNSt5dequeIPK7XFEventSaIS2_EE3endEv>:
       *  Returns a read/write iterator that points one past the last
       *  element in the %deque.  Iteration is done in ordinary
       *  element order.
       */
      iterator
      end() _GLIBCXX_NOEXCEPT
 801585a:	b580      	push	{r7, lr}
 801585c:	b082      	sub	sp, #8
 801585e:	af00      	add	r7, sp, #0
 8015860:	6078      	str	r0, [r7, #4]
 8015862:	6039      	str	r1, [r7, #0]
      { return this->_M_impl._M_finish; }
 8015864:	683b      	ldr	r3, [r7, #0]
 8015866:	3318      	adds	r3, #24
 8015868:	4619      	mov	r1, r3
 801586a:	6878      	ldr	r0, [r7, #4]
 801586c:	f000 f80f 	bl	801588e <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1ERKS5_>
 8015870:	6878      	ldr	r0, [r7, #4]
 8015872:	3708      	adds	r7, #8
 8015874:	46bd      	mov	sp, r7
 8015876:	bd80      	pop	{r7, pc}

08015878 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 8015878:	b480      	push	{r7}
 801587a:	b083      	sub	sp, #12
 801587c:	af00      	add	r7, sp, #0
 801587e:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015880:	687b      	ldr	r3, [r7, #4]
 8015882:	4618      	mov	r0, r3
 8015884:	370c      	adds	r7, #12
 8015886:	46bd      	mov	sp, r7
 8015888:	f85d 7b04 	ldr.w	r7, [sp], #4
 801588c:	4770      	bx	lr

0801588e <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1ERKS5_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
 801588e:	b480      	push	{r7}
 8015890:	b083      	sub	sp, #12
 8015892:	af00      	add	r7, sp, #0
 8015894:	6078      	str	r0, [r7, #4]
 8015896:	6039      	str	r1, [r7, #0]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 8015898:	683b      	ldr	r3, [r7, #0]
 801589a:	681a      	ldr	r2, [r3, #0]
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 801589c:	687b      	ldr	r3, [r7, #4]
 801589e:	601a      	str	r2, [r3, #0]
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
 80158a0:	683b      	ldr	r3, [r7, #0]
 80158a2:	685a      	ldr	r2, [r3, #4]
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
 80158a4:	687b      	ldr	r3, [r7, #4]
 80158a6:	605a      	str	r2, [r3, #4]
 80158a8:	683b      	ldr	r3, [r7, #0]
 80158aa:	689a      	ldr	r2, [r3, #8]
 80158ac:	687b      	ldr	r3, [r7, #4]
 80158ae:	609a      	str	r2, [r3, #8]
 80158b0:	683b      	ldr	r3, [r7, #0]
 80158b2:	68da      	ldr	r2, [r3, #12]
 80158b4:	687b      	ldr	r3, [r7, #4]
 80158b6:	60da      	str	r2, [r3, #12]
 80158b8:	687b      	ldr	r3, [r7, #4]
 80158ba:	4618      	mov	r0, r3
 80158bc:	370c      	adds	r7, #12
 80158be:	46bd      	mov	sp, r7
 80158c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158c4:	4770      	bx	lr

080158c6 <_ZNSt5dequeIPK7XFEventSaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
 80158c6:	b480      	push	{r7}
 80158c8:	b08d      	sub	sp, #52	; 0x34
 80158ca:	af00      	add	r7, sp, #0
 80158cc:	60f8      	str	r0, [r7, #12]
 80158ce:	60b9      	str	r1, [r7, #8]
 80158d0:	607a      	str	r2, [r7, #4]
 80158d2:	603b      	str	r3, [r7, #0]
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
      }
 80158d4:	bf00      	nop
 80158d6:	3734      	adds	r7, #52	; 0x34
 80158d8:	46bd      	mov	sp, r7
 80158da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80158de:	4770      	bx	lr

080158e0 <_ZNKSt5dequeIPK7XFEventSaIS2_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
 80158e0:	b580      	push	{r7, lr}
 80158e2:	b082      	sub	sp, #8
 80158e4:	af00      	add	r7, sp, #0
 80158e6:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
 80158e8:	687b      	ldr	r3, [r7, #4]
 80158ea:	f103 0218 	add.w	r2, r3, #24
 80158ee:	687b      	ldr	r3, [r7, #4]
 80158f0:	3308      	adds	r3, #8
 80158f2:	4619      	mov	r1, r3
 80158f4:	4610      	mov	r0, r2
 80158f6:	f000 f912 	bl	8015b1e <_ZSteqRKSt15_Deque_iteratorIPK7XFEventRS2_PS2_ES7_>
 80158fa:	4603      	mov	r3, r0
 80158fc:	4618      	mov	r0, r3
 80158fe:	3708      	adds	r7, #8
 8015900:	46bd      	mov	sp, r7
 8015902:	bd80      	pop	{r7, pc}

08015904 <_ZNSt5dequeIPK7XFEventSaIS2_EE9push_backERKS2_>:
      push_back(const value_type& __x)
 8015904:	b580      	push	{r7, lr}
 8015906:	b082      	sub	sp, #8
 8015908:	af00      	add	r7, sp, #0
 801590a:	6078      	str	r0, [r7, #4]
 801590c:	6039      	str	r1, [r7, #0]
	if (this->_M_impl._M_finish._M_cur
 801590e:	687b      	ldr	r3, [r7, #4]
 8015910:	699a      	ldr	r2, [r3, #24]
	    != this->_M_impl._M_finish._M_last - 1)
 8015912:	687b      	ldr	r3, [r7, #4]
 8015914:	6a1b      	ldr	r3, [r3, #32]
 8015916:	3b04      	subs	r3, #4
	if (this->_M_impl._M_finish._M_cur
 8015918:	429a      	cmp	r2, r3
 801591a:	d00c      	beq.n	8015936 <_ZNSt5dequeIPK7XFEventSaIS2_EE9push_backERKS2_+0x32>
	    _Alloc_traits::construct(this->_M_impl,
 801591c:	6878      	ldr	r0, [r7, #4]
 801591e:	687b      	ldr	r3, [r7, #4]
 8015920:	699b      	ldr	r3, [r3, #24]
 8015922:	683a      	ldr	r2, [r7, #0]
 8015924:	4619      	mov	r1, r3
 8015926:	f000 f90e 	bl	8015b46 <_ZNSt16allocator_traitsISaIPK7XFEventEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
 801592a:	687b      	ldr	r3, [r7, #4]
 801592c:	699b      	ldr	r3, [r3, #24]
 801592e:	1d1a      	adds	r2, r3, #4
 8015930:	687b      	ldr	r3, [r7, #4]
 8015932:	619a      	str	r2, [r3, #24]
      }
 8015934:	e003      	b.n	801593e <_ZNSt5dequeIPK7XFEventSaIS2_EE9push_backERKS2_+0x3a>
	  _M_push_back_aux(__x);
 8015936:	6839      	ldr	r1, [r7, #0]
 8015938:	6878      	ldr	r0, [r7, #4]
 801593a:	f000 f917 	bl	8015b6c <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>
      }
 801593e:	bf00      	nop
 8015940:	3708      	adds	r7, #8
 8015942:	46bd      	mov	sp, r7
 8015944:	bd80      	pop	{r7, pc}

08015946 <_ZNSt5dequeIPK7XFEventSaIS2_EE5frontEv>:
      front() _GLIBCXX_NOEXCEPT
 8015946:	b580      	push	{r7, lr}
 8015948:	b086      	sub	sp, #24
 801594a:	af00      	add	r7, sp, #0
 801594c:	6078      	str	r0, [r7, #4]
	return *begin();
 801594e:	f107 0308 	add.w	r3, r7, #8
 8015952:	6879      	ldr	r1, [r7, #4]
 8015954:	4618      	mov	r0, r3
 8015956:	f7ff ff71 	bl	801583c <_ZNSt5dequeIPK7XFEventSaIS2_EE5beginEv>
 801595a:	f107 0308 	add.w	r3, r7, #8
 801595e:	4618      	mov	r0, r3
 8015960:	f000 f948 	bl	8015bf4 <_ZNKSt15_Deque_iteratorIPK7XFEventRS2_PS2_EdeEv>
 8015964:	4603      	mov	r3, r0
      }
 8015966:	4618      	mov	r0, r3
 8015968:	3718      	adds	r7, #24
 801596a:	46bd      	mov	sp, r7
 801596c:	bd80      	pop	{r7, pc}

0801596e <_ZNSt5dequeIPK7XFEventSaIS2_EE9pop_frontEv>:
      pop_front() _GLIBCXX_NOEXCEPT
 801596e:	b580      	push	{r7, lr}
 8015970:	b082      	sub	sp, #8
 8015972:	af00      	add	r7, sp, #0
 8015974:	6078      	str	r0, [r7, #4]
	if (this->_M_impl._M_start._M_cur
 8015976:	687b      	ldr	r3, [r7, #4]
 8015978:	689a      	ldr	r2, [r3, #8]
	    != this->_M_impl._M_start._M_last - 1)
 801597a:	687b      	ldr	r3, [r7, #4]
 801597c:	691b      	ldr	r3, [r3, #16]
 801597e:	3b04      	subs	r3, #4
	if (this->_M_impl._M_start._M_cur
 8015980:	429a      	cmp	r2, r3
 8015982:	d010      	beq.n	80159a6 <_ZNSt5dequeIPK7XFEventSaIS2_EE9pop_frontEv+0x38>
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
 8015984:	687b      	ldr	r3, [r7, #4]
 8015986:	4618      	mov	r0, r3
 8015988:	f7ff ff76 	bl	8015878 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>
 801598c:	4602      	mov	r2, r0
 801598e:	687b      	ldr	r3, [r7, #4]
 8015990:	689b      	ldr	r3, [r3, #8]
 8015992:	4619      	mov	r1, r3
 8015994:	4610      	mov	r0, r2
 8015996:	f000 f939 	bl	8015c0c <_ZNSt16allocator_traitsISaIPK7XFEventEE7destroyIS2_EEvRS3_PT_>
	    ++this->_M_impl._M_start._M_cur;
 801599a:	687b      	ldr	r3, [r7, #4]
 801599c:	689b      	ldr	r3, [r3, #8]
 801599e:	1d1a      	adds	r2, r3, #4
 80159a0:	687b      	ldr	r3, [r7, #4]
 80159a2:	609a      	str	r2, [r3, #8]
      }
 80159a4:	e002      	b.n	80159ac <_ZNSt5dequeIPK7XFEventSaIS2_EE9pop_frontEv+0x3e>
	  _M_pop_front_aux();
 80159a6:	6878      	ldr	r0, [r7, #4]
 80159a8:	f000 f93d 	bl	8015c26 <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_pop_front_auxEv>
      }
 80159ac:	bf00      	nop
 80159ae:	3708      	adds	r7, #8
 80159b0:	46bd      	mov	sp, r7
 80159b2:	bd80      	pop	{r7, pc}

080159b4 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
 80159b4:	b580      	push	{r7, lr}
 80159b6:	b082      	sub	sp, #8
 80159b8:	af00      	add	r7, sp, #0
 80159ba:	6078      	str	r0, [r7, #4]
	: _Tp_alloc_type()
 80159bc:	6878      	ldr	r0, [r7, #4]
 80159be:	f000 f95a 	bl	8015c76 <_ZNSaIPK7XFEventEC1Ev>
 80159c2:	687b      	ldr	r3, [r7, #4]
 80159c4:	4618      	mov	r0, r3
 80159c6:	f000 f962 	bl	8015c8e <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_Deque_impl_dataC1Ev>
	{ }
 80159ca:	687b      	ldr	r3, [r7, #4]
 80159cc:	4618      	mov	r0, r3
 80159ce:	3708      	adds	r7, #8
 80159d0:	46bd      	mov	sp, r7
 80159d2:	bd80      	pop	{r7, pc}

080159d4 <_ZNSaIPK7XFEventED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 80159d4:	b580      	push	{r7, lr}
 80159d6:	b082      	sub	sp, #8
 80159d8:	af00      	add	r7, sp, #0
 80159da:	6078      	str	r0, [r7, #4]
 80159dc:	6878      	ldr	r0, [r7, #4]
 80159de:	f000 f96f 	bl	8015cc0 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventED1Ev>
 80159e2:	687b      	ldr	r3, [r7, #4]
 80159e4:	4618      	mov	r0, r3
 80159e6:	3708      	adds	r7, #8
 80159e8:	46bd      	mov	sp, r7
 80159ea:	bd80      	pop	{r7, pc}

080159ec <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE17_M_initialize_mapEj>:
    _Deque_base<_Tp, _Alloc>::
 80159ec:	b590      	push	{r4, r7, lr}
 80159ee:	b089      	sub	sp, #36	; 0x24
 80159f0:	af00      	add	r7, sp, #0
 80159f2:	6078      	str	r0, [r7, #4]
 80159f4:	6039      	str	r1, [r7, #0]
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
 80159f6:	2004      	movs	r0, #4
 80159f8:	f7ff fd62 	bl	80154c0 <_ZSt16__deque_buf_sizej>
 80159fc:	4602      	mov	r2, r0
 80159fe:	683b      	ldr	r3, [r7, #0]
 8015a00:	fbb3 f3f2 	udiv	r3, r3, r2
 8015a04:	3301      	adds	r3, #1
 8015a06:	61fb      	str	r3, [r7, #28]
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 8015a08:	2308      	movs	r3, #8
 8015a0a:	60fb      	str	r3, [r7, #12]
					   size_t(__num_nodes + 2));
 8015a0c:	69fb      	ldr	r3, [r7, #28]
 8015a0e:	3302      	adds	r3, #2
 8015a10:	613b      	str	r3, [r7, #16]
 8015a12:	f107 0210 	add.w	r2, r7, #16
 8015a16:	f107 030c 	add.w	r3, r7, #12
 8015a1a:	4611      	mov	r1, r2
 8015a1c:	4618      	mov	r0, r3
 8015a1e:	f000 f95a 	bl	8015cd6 <_ZSt3maxIjERKT_S2_S2_>
 8015a22:	4603      	mov	r3, r0
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 8015a24:	681a      	ldr	r2, [r3, #0]
 8015a26:	687b      	ldr	r3, [r7, #4]
 8015a28:	605a      	str	r2, [r3, #4]
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
 8015a2a:	687b      	ldr	r3, [r7, #4]
 8015a2c:	685b      	ldr	r3, [r3, #4]
 8015a2e:	4619      	mov	r1, r3
 8015a30:	6878      	ldr	r0, [r7, #4]
 8015a32:	f000 f964 	bl	8015cfe <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_allocate_mapEj>
 8015a36:	4602      	mov	r2, r0
 8015a38:	687b      	ldr	r3, [r7, #4]
 8015a3a:	601a      	str	r2, [r3, #0]
      _Map_pointer __nstart = (this->_M_impl._M_map
 8015a3c:	687b      	ldr	r3, [r7, #4]
 8015a3e:	681a      	ldr	r2, [r3, #0]
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
 8015a40:	687b      	ldr	r3, [r7, #4]
 8015a42:	6859      	ldr	r1, [r3, #4]
 8015a44:	69fb      	ldr	r3, [r7, #28]
 8015a46:	1acb      	subs	r3, r1, r3
 8015a48:	085b      	lsrs	r3, r3, #1
 8015a4a:	009b      	lsls	r3, r3, #2
      _Map_pointer __nstart = (this->_M_impl._M_map
 8015a4c:	4413      	add	r3, r2
 8015a4e:	61bb      	str	r3, [r7, #24]
      _Map_pointer __nfinish = __nstart + __num_nodes;
 8015a50:	69fb      	ldr	r3, [r7, #28]
 8015a52:	009b      	lsls	r3, r3, #2
 8015a54:	69ba      	ldr	r2, [r7, #24]
 8015a56:	4413      	add	r3, r2
 8015a58:	617b      	str	r3, [r7, #20]
	{ _M_create_nodes(__nstart, __nfinish); }
 8015a5a:	697a      	ldr	r2, [r7, #20]
 8015a5c:	69b9      	ldr	r1, [r7, #24]
 8015a5e:	6878      	ldr	r0, [r7, #4]
 8015a60:	f000 f96a 	bl	8015d38 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_create_nodesEPPS2_S6_>
      this->_M_impl._M_start._M_set_node(__nstart);
 8015a64:	687b      	ldr	r3, [r7, #4]
 8015a66:	3308      	adds	r3, #8
 8015a68:	69b9      	ldr	r1, [r7, #24]
 8015a6a:	4618      	mov	r0, r3
 8015a6c:	f000 f97e 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
 8015a70:	687b      	ldr	r3, [r7, #4]
 8015a72:	f103 0218 	add.w	r2, r3, #24
 8015a76:	697b      	ldr	r3, [r7, #20]
 8015a78:	3b04      	subs	r3, #4
 8015a7a:	4619      	mov	r1, r3
 8015a7c:	4610      	mov	r0, r2
 8015a7e:	f000 f975 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
 8015a82:	687b      	ldr	r3, [r7, #4]
 8015a84:	68da      	ldr	r2, [r3, #12]
 8015a86:	687b      	ldr	r3, [r7, #4]
 8015a88:	609a      	str	r2, [r3, #8]
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 8015a8a:	687b      	ldr	r3, [r7, #4]
 8015a8c:	69dc      	ldr	r4, [r3, #28]
					% __deque_buf_size(sizeof(_Tp)));
 8015a8e:	2004      	movs	r0, #4
 8015a90:	f7ff fd16 	bl	80154c0 <_ZSt16__deque_buf_sizej>
 8015a94:	4602      	mov	r2, r0
 8015a96:	683b      	ldr	r3, [r7, #0]
 8015a98:	fbb3 f1f2 	udiv	r1, r3, r2
 8015a9c:	fb01 f202 	mul.w	r2, r1, r2
 8015aa0:	1a9b      	subs	r3, r3, r2
					+ __num_elements
 8015aa2:	009b      	lsls	r3, r3, #2
 8015aa4:	18e2      	adds	r2, r4, r3
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
 8015aa6:	687b      	ldr	r3, [r7, #4]
 8015aa8:	619a      	str	r2, [r3, #24]
    }
 8015aaa:	bf00      	nop
 8015aac:	3724      	adds	r7, #36	; 0x24
 8015aae:	46bd      	mov	sp, r7
 8015ab0:	bd90      	pop	{r4, r7, pc}

08015ab2 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_destroy_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
 8015ab2:	b580      	push	{r7, lr}
 8015ab4:	b086      	sub	sp, #24
 8015ab6:	af00      	add	r7, sp, #0
 8015ab8:	60f8      	str	r0, [r7, #12]
 8015aba:	60b9      	str	r1, [r7, #8]
 8015abc:	607a      	str	r2, [r7, #4]
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 8015abe:	68bb      	ldr	r3, [r7, #8]
 8015ac0:	617b      	str	r3, [r7, #20]
 8015ac2:	697a      	ldr	r2, [r7, #20]
 8015ac4:	687b      	ldr	r3, [r7, #4]
 8015ac6:	429a      	cmp	r2, r3
 8015ac8:	d209      	bcs.n	8015ade <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x2c>
	_M_deallocate_node(*__n);
 8015aca:	697b      	ldr	r3, [r7, #20]
 8015acc:	681b      	ldr	r3, [r3, #0]
 8015ace:	4619      	mov	r1, r3
 8015ad0:	68f8      	ldr	r0, [r7, #12]
 8015ad2:	f000 f964 	bl	8015d9e <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE18_M_deallocate_nodeEPS2_>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
 8015ad6:	697b      	ldr	r3, [r7, #20]
 8015ad8:	3304      	adds	r3, #4
 8015ada:	617b      	str	r3, [r7, #20]
 8015adc:	e7f1      	b.n	8015ac2 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x10>
    }
 8015ade:	bf00      	nop
 8015ae0:	3718      	adds	r7, #24
 8015ae2:	46bd      	mov	sp, r7
 8015ae4:	bd80      	pop	{r7, pc}

08015ae6 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE17_M_deallocate_mapEPPS2_j>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
 8015ae6:	b580      	push	{r7, lr}
 8015ae8:	b086      	sub	sp, #24
 8015aea:	af00      	add	r7, sp, #0
 8015aec:	60f8      	str	r0, [r7, #12]
 8015aee:	60b9      	str	r1, [r7, #8]
 8015af0:	607a      	str	r2, [r7, #4]
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 8015af2:	f107 0314 	add.w	r3, r7, #20
 8015af6:	68f9      	ldr	r1, [r7, #12]
 8015af8:	4618      	mov	r0, r3
 8015afa:	f000 f963 	bl	8015dc4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE20_M_get_map_allocatorEv>
	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
 8015afe:	f107 0314 	add.w	r3, r7, #20
 8015b02:	687a      	ldr	r2, [r7, #4]
 8015b04:	68b9      	ldr	r1, [r7, #8]
 8015b06:	4618      	mov	r0, r3
 8015b08:	f000 f979 	bl	8015dfe <_ZNSt16allocator_traitsISaIPPK7XFEventEE10deallocateERS4_PS3_j>
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 8015b0c:	f107 0314 	add.w	r3, r7, #20
 8015b10:	4618      	mov	r0, r3
 8015b12:	f000 f968 	bl	8015de6 <_ZNSaIPPK7XFEventED1Ev>
      }
 8015b16:	bf00      	nop
 8015b18:	3718      	adds	r7, #24
 8015b1a:	46bd      	mov	sp, r7
 8015b1c:	bd80      	pop	{r7, pc}

08015b1e <_ZSteqRKSt15_Deque_iteratorIPK7XFEventRS2_PS2_ES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 8015b1e:	b480      	push	{r7}
 8015b20:	b083      	sub	sp, #12
 8015b22:	af00      	add	r7, sp, #0
 8015b24:	6078      	str	r0, [r7, #4]
 8015b26:	6039      	str	r1, [r7, #0]
      { return __x._M_cur == __y._M_cur; }
 8015b28:	687b      	ldr	r3, [r7, #4]
 8015b2a:	681a      	ldr	r2, [r3, #0]
 8015b2c:	683b      	ldr	r3, [r7, #0]
 8015b2e:	681b      	ldr	r3, [r3, #0]
 8015b30:	429a      	cmp	r2, r3
 8015b32:	bf0c      	ite	eq
 8015b34:	2301      	moveq	r3, #1
 8015b36:	2300      	movne	r3, #0
 8015b38:	b2db      	uxtb	r3, r3
 8015b3a:	4618      	mov	r0, r3
 8015b3c:	370c      	adds	r7, #12
 8015b3e:	46bd      	mov	sp, r7
 8015b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015b44:	4770      	bx	lr

08015b46 <_ZNSt16allocator_traitsISaIPK7XFEventEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
 8015b46:	b580      	push	{r7, lr}
 8015b48:	b084      	sub	sp, #16
 8015b4a:	af00      	add	r7, sp, #0
 8015b4c:	60f8      	str	r0, [r7, #12]
 8015b4e:	60b9      	str	r1, [r7, #8]
 8015b50:	607a      	str	r2, [r7, #4]
	  __a.construct(__p, std::forward<_Args>(__args)...);
 8015b52:	6878      	ldr	r0, [r7, #4]
 8015b54:	f000 f962 	bl	8015e1c <_ZSt7forwardIRKPK7XFEventEOT_RNSt16remove_referenceIS5_E4typeE>
 8015b58:	4603      	mov	r3, r0
 8015b5a:	461a      	mov	r2, r3
 8015b5c:	68b9      	ldr	r1, [r7, #8]
 8015b5e:	68f8      	ldr	r0, [r7, #12]
 8015b60:	f000 f967 	bl	8015e32 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE9constructIS3_JRKS3_EEEvPT_DpOT0_>
	}
 8015b64:	bf00      	nop
 8015b66:	3710      	adds	r7, #16
 8015b68:	46bd      	mov	sp, r7
 8015b6a:	bd80      	pop	{r7, pc}

08015b6c <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>:
  // Called only if _M_impl._M_finish._M_cur == _M_impl._M_finish._M_last - 1.
  template<typename _Tp, typename _Alloc>
#if __cplusplus >= 201103L
    template<typename... _Args>
      void
      deque<_Tp, _Alloc>::
 8015b6c:	b5b0      	push	{r4, r5, r7, lr}
 8015b6e:	b082      	sub	sp, #8
 8015b70:	af00      	add	r7, sp, #0
 8015b72:	6078      	str	r0, [r7, #4]
 8015b74:	6039      	str	r1, [r7, #0]
      void
      deque<_Tp, _Alloc>::
      _M_push_back_aux(const value_type& __t)
#endif
      {
	if (size() == max_size())
 8015b76:	6878      	ldr	r0, [r7, #4]
 8015b78:	f000 f971 	bl	8015e5e <_ZNKSt5dequeIPK7XFEventSaIS2_EE4sizeEv>
 8015b7c:	4604      	mov	r4, r0
 8015b7e:	6878      	ldr	r0, [r7, #4]
 8015b80:	f000 f97f 	bl	8015e82 <_ZNKSt5dequeIPK7XFEventSaIS2_EE8max_sizeEv>
 8015b84:	4603      	mov	r3, r0
 8015b86:	429c      	cmp	r4, r3
 8015b88:	bf0c      	ite	eq
 8015b8a:	2301      	moveq	r3, #1
 8015b8c:	2300      	movne	r3, #0
 8015b8e:	b2db      	uxtb	r3, r3
 8015b90:	2b00      	cmp	r3, #0
 8015b92:	d002      	beq.n	8015b9a <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x2e>
	  __throw_length_error(
 8015b94:	4816      	ldr	r0, [pc, #88]	; (8015bf0 <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x84>)
 8015b96:	f015 ff9f 	bl	802bad8 <_ZSt20__throw_length_errorPKc>
	      __N("cannot create std::deque larger than max_size()"));

	_M_reserve_map_at_back();
 8015b9a:	2101      	movs	r1, #1
 8015b9c:	6878      	ldr	r0, [r7, #4]
 8015b9e:	f000 f981 	bl	8015ea4 <_ZNSt5dequeIPK7XFEventSaIS2_EE22_M_reserve_map_at_backEj>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
 8015ba2:	687a      	ldr	r2, [r7, #4]
 8015ba4:	687b      	ldr	r3, [r7, #4]
 8015ba6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015ba8:	1d1c      	adds	r4, r3, #4
 8015baa:	4610      	mov	r0, r2
 8015bac:	f000 f995 	bl	8015eda <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_allocate_nodeEv>
 8015bb0:	4603      	mov	r3, r0
 8015bb2:	6023      	str	r3, [r4, #0]
	__try
	  {
#if __cplusplus >= 201103L
	    _Alloc_traits::construct(this->_M_impl,
 8015bb4:	687c      	ldr	r4, [r7, #4]
 8015bb6:	687b      	ldr	r3, [r7, #4]
 8015bb8:	699d      	ldr	r5, [r3, #24]
 8015bba:	6838      	ldr	r0, [r7, #0]
 8015bbc:	f000 f92e 	bl	8015e1c <_ZSt7forwardIRKPK7XFEventEOT_RNSt16remove_referenceIS5_E4typeE>
 8015bc0:	4603      	mov	r3, r0
 8015bc2:	461a      	mov	r2, r3
 8015bc4:	4629      	mov	r1, r5
 8015bc6:	4620      	mov	r0, r4
 8015bc8:	f7ff ffbd 	bl	8015b46 <_ZNSt16allocator_traitsISaIPK7XFEventEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
				     this->_M_impl._M_finish._M_cur,
				     std::forward<_Args>(__args)...);
#else
	    this->_M_impl.construct(this->_M_impl._M_finish._M_cur, __t);
#endif
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
 8015bcc:	687b      	ldr	r3, [r7, #4]
 8015bce:	f103 0218 	add.w	r2, r3, #24
 8015bd2:	687b      	ldr	r3, [r7, #4]
 8015bd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015bd6:	3304      	adds	r3, #4
 8015bd8:	4619      	mov	r1, r3
 8015bda:	4610      	mov	r0, r2
 8015bdc:	f000 f8c6 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
						+ 1);
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
 8015be0:	687b      	ldr	r3, [r7, #4]
 8015be2:	69da      	ldr	r2, [r3, #28]
 8015be4:	687b      	ldr	r3, [r7, #4]
 8015be6:	619a      	str	r2, [r3, #24]
	__catch(...)
	  {
	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
	    __throw_exception_again;
	  }
      }
 8015be8:	bf00      	nop
 8015bea:	3708      	adds	r7, #8
 8015bec:	46bd      	mov	sp, r7
 8015bee:	bdb0      	pop	{r4, r5, r7, pc}
 8015bf0:	0802ecbc 	.word	0x0802ecbc

08015bf4 <_ZNKSt15_Deque_iteratorIPK7XFEventRS2_PS2_EdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
 8015bf4:	b480      	push	{r7}
 8015bf6:	b083      	sub	sp, #12
 8015bf8:	af00      	add	r7, sp, #0
 8015bfa:	6078      	str	r0, [r7, #4]
      { return *_M_cur; }
 8015bfc:	687b      	ldr	r3, [r7, #4]
 8015bfe:	681b      	ldr	r3, [r3, #0]
 8015c00:	4618      	mov	r0, r3
 8015c02:	370c      	adds	r7, #12
 8015c04:	46bd      	mov	sp, r7
 8015c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015c0a:	4770      	bx	lr

08015c0c <_ZNSt16allocator_traitsISaIPK7XFEventEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
 8015c0c:	b580      	push	{r7, lr}
 8015c0e:	b082      	sub	sp, #8
 8015c10:	af00      	add	r7, sp, #0
 8015c12:	6078      	str	r0, [r7, #4]
 8015c14:	6039      	str	r1, [r7, #0]
	  __a.destroy(__p);
 8015c16:	6839      	ldr	r1, [r7, #0]
 8015c18:	6878      	ldr	r0, [r7, #4]
 8015c1a:	f000 f970 	bl	8015efe <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE7destroyIS3_EEvPT_>
	}
 8015c1e:	bf00      	nop
 8015c20:	3708      	adds	r7, #8
 8015c22:	46bd      	mov	sp, r7
 8015c24:	bd80      	pop	{r7, pc}

08015c26 <_ZNSt5dequeIPK7XFEventSaIS2_EE16_M_pop_front_auxEv>:
  // Note that if the deque has at least one element (a precondition for this
  // member function), and if
  //   _M_impl._M_start._M_cur == _M_impl._M_start._M_last,
  // then the deque must have at least two nodes.
  template <typename _Tp, typename _Alloc>
    void deque<_Tp, _Alloc>::
 8015c26:	b580      	push	{r7, lr}
 8015c28:	b082      	sub	sp, #8
 8015c2a:	af00      	add	r7, sp, #0
 8015c2c:	6078      	str	r0, [r7, #4]
    _M_pop_front_aux()
    {
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
 8015c2e:	687b      	ldr	r3, [r7, #4]
 8015c30:	4618      	mov	r0, r3
 8015c32:	f7ff fe21 	bl	8015878 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>
 8015c36:	4602      	mov	r2, r0
 8015c38:	687b      	ldr	r3, [r7, #4]
 8015c3a:	689b      	ldr	r3, [r3, #8]
 8015c3c:	4619      	mov	r1, r3
 8015c3e:	4610      	mov	r0, r2
 8015c40:	f7ff ffe4 	bl	8015c0c <_ZNSt16allocator_traitsISaIPK7XFEventEE7destroyIS2_EEvRS3_PT_>
			     this->_M_impl._M_start._M_cur);
      _M_deallocate_node(this->_M_impl._M_start._M_first);
 8015c44:	687a      	ldr	r2, [r7, #4]
 8015c46:	687b      	ldr	r3, [r7, #4]
 8015c48:	68db      	ldr	r3, [r3, #12]
 8015c4a:	4619      	mov	r1, r3
 8015c4c:	4610      	mov	r0, r2
 8015c4e:	f000 f8a6 	bl	8015d9e <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE18_M_deallocate_nodeEPS2_>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
 8015c52:	687b      	ldr	r3, [r7, #4]
 8015c54:	f103 0208 	add.w	r2, r3, #8
 8015c58:	687b      	ldr	r3, [r7, #4]
 8015c5a:	695b      	ldr	r3, [r3, #20]
 8015c5c:	3304      	adds	r3, #4
 8015c5e:	4619      	mov	r1, r3
 8015c60:	4610      	mov	r0, r2
 8015c62:	f000 f883 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
 8015c66:	687b      	ldr	r3, [r7, #4]
 8015c68:	68da      	ldr	r2, [r3, #12]
 8015c6a:	687b      	ldr	r3, [r7, #4]
 8015c6c:	609a      	str	r2, [r3, #8]
    }
 8015c6e:	bf00      	nop
 8015c70:	3708      	adds	r7, #8
 8015c72:	46bd      	mov	sp, r7
 8015c74:	bd80      	pop	{r7, pc}

08015c76 <_ZNSaIPK7XFEventEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
 8015c76:	b580      	push	{r7, lr}
 8015c78:	b082      	sub	sp, #8
 8015c7a:	af00      	add	r7, sp, #0
 8015c7c:	6078      	str	r0, [r7, #4]
 8015c7e:	6878      	ldr	r0, [r7, #4]
 8015c80:	f000 f948 	bl	8015f14 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventEC1Ev>
 8015c84:	687b      	ldr	r3, [r7, #4]
 8015c86:	4618      	mov	r0, r3
 8015c88:	3708      	adds	r7, #8
 8015c8a:	46bd      	mov	sp, r7
 8015c8c:	bd80      	pop	{r7, pc}

08015c8e <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
 8015c8e:	b580      	push	{r7, lr}
 8015c90:	b082      	sub	sp, #8
 8015c92:	af00      	add	r7, sp, #0
 8015c94:	6078      	str	r0, [r7, #4]
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
 8015c96:	687b      	ldr	r3, [r7, #4]
 8015c98:	2200      	movs	r2, #0
 8015c9a:	601a      	str	r2, [r3, #0]
 8015c9c:	687b      	ldr	r3, [r7, #4]
 8015c9e:	2200      	movs	r2, #0
 8015ca0:	605a      	str	r2, [r3, #4]
 8015ca2:	687b      	ldr	r3, [r7, #4]
 8015ca4:	3308      	adds	r3, #8
 8015ca6:	4618      	mov	r0, r3
 8015ca8:	f000 f93f 	bl	8015f2a <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1Ev>
 8015cac:	687b      	ldr	r3, [r7, #4]
 8015cae:	3318      	adds	r3, #24
 8015cb0:	4618      	mov	r0, r3
 8015cb2:	f000 f93a 	bl	8015f2a <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1Ev>
	{ }
 8015cb6:	687b      	ldr	r3, [r7, #4]
 8015cb8:	4618      	mov	r0, r3
 8015cba:	3708      	adds	r7, #8
 8015cbc:	46bd      	mov	sp, r7
 8015cbe:	bd80      	pop	{r7, pc}

08015cc0 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015cc0:	b480      	push	{r7}
 8015cc2:	b083      	sub	sp, #12
 8015cc4:	af00      	add	r7, sp, #0
 8015cc6:	6078      	str	r0, [r7, #4]
 8015cc8:	687b      	ldr	r3, [r7, #4]
 8015cca:	4618      	mov	r0, r3
 8015ccc:	370c      	adds	r7, #12
 8015cce:	46bd      	mov	sp, r7
 8015cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015cd4:	4770      	bx	lr

08015cd6 <_ZSt3maxIjERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
 8015cd6:	b480      	push	{r7}
 8015cd8:	b083      	sub	sp, #12
 8015cda:	af00      	add	r7, sp, #0
 8015cdc:	6078      	str	r0, [r7, #4]
 8015cde:	6039      	str	r1, [r7, #0]
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
 8015ce0:	687b      	ldr	r3, [r7, #4]
 8015ce2:	681a      	ldr	r2, [r3, #0]
 8015ce4:	683b      	ldr	r3, [r7, #0]
 8015ce6:	681b      	ldr	r3, [r3, #0]
 8015ce8:	429a      	cmp	r2, r3
 8015cea:	d201      	bcs.n	8015cf0 <_ZSt3maxIjERKT_S2_S2_+0x1a>
	return __b;
 8015cec:	683b      	ldr	r3, [r7, #0]
 8015cee:	e000      	b.n	8015cf2 <_ZSt3maxIjERKT_S2_S2_+0x1c>
      return __a;
 8015cf0:	687b      	ldr	r3, [r7, #4]
    }
 8015cf2:	4618      	mov	r0, r3
 8015cf4:	370c      	adds	r7, #12
 8015cf6:	46bd      	mov	sp, r7
 8015cf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015cfc:	4770      	bx	lr

08015cfe <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_allocate_mapEj>:
      _M_allocate_map(size_t __n)
 8015cfe:	b590      	push	{r4, r7, lr}
 8015d00:	b085      	sub	sp, #20
 8015d02:	af00      	add	r7, sp, #0
 8015d04:	6078      	str	r0, [r7, #4]
 8015d06:	6039      	str	r1, [r7, #0]
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 8015d08:	f107 030c 	add.w	r3, r7, #12
 8015d0c:	6879      	ldr	r1, [r7, #4]
 8015d0e:	4618      	mov	r0, r3
 8015d10:	f000 f858 	bl	8015dc4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE20_M_get_map_allocatorEv>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
 8015d14:	f107 030c 	add.w	r3, r7, #12
 8015d18:	6839      	ldr	r1, [r7, #0]
 8015d1a:	4618      	mov	r0, r3
 8015d1c:	f000 f91c 	bl	8015f58 <_ZNSt16allocator_traitsISaIPPK7XFEventEE8allocateERS4_j>
 8015d20:	4604      	mov	r4, r0
 8015d22:	bf00      	nop
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
 8015d24:	f107 030c 	add.w	r3, r7, #12
 8015d28:	4618      	mov	r0, r3
 8015d2a:	f000 f85c 	bl	8015de6 <_ZNSaIPPK7XFEventED1Ev>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
 8015d2e:	4623      	mov	r3, r4
      }
 8015d30:	4618      	mov	r0, r3
 8015d32:	3714      	adds	r7, #20
 8015d34:	46bd      	mov	sp, r7
 8015d36:	bd90      	pop	{r4, r7, pc}

08015d38 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_create_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
 8015d38:	b580      	push	{r7, lr}
 8015d3a:	b086      	sub	sp, #24
 8015d3c:	af00      	add	r7, sp, #0
 8015d3e:	60f8      	str	r0, [r7, #12]
 8015d40:	60b9      	str	r1, [r7, #8]
 8015d42:	607a      	str	r2, [r7, #4]
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 8015d44:	68bb      	ldr	r3, [r7, #8]
 8015d46:	617b      	str	r3, [r7, #20]
 8015d48:	697a      	ldr	r2, [r7, #20]
 8015d4a:	687b      	ldr	r3, [r7, #4]
 8015d4c:	429a      	cmp	r2, r3
 8015d4e:	d209      	bcs.n	8015d64 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_create_nodesEPPS2_S6_+0x2c>
	    *__cur = this->_M_allocate_node();
 8015d50:	68f8      	ldr	r0, [r7, #12]
 8015d52:	f000 f8c2 	bl	8015eda <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_allocate_nodeEv>
 8015d56:	4602      	mov	r2, r0
 8015d58:	697b      	ldr	r3, [r7, #20]
 8015d5a:	601a      	str	r2, [r3, #0]
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
 8015d5c:	697b      	ldr	r3, [r7, #20]
 8015d5e:	3304      	adds	r3, #4
 8015d60:	617b      	str	r3, [r7, #20]
 8015d62:	e7f1      	b.n	8015d48 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_create_nodesEPPS2_S6_+0x10>
    }
 8015d64:	bf00      	nop
 8015d66:	3718      	adds	r7, #24
 8015d68:	46bd      	mov	sp, r7
 8015d6a:	bd80      	pop	{r7, pc}

08015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
 8015d6c:	b590      	push	{r4, r7, lr}
 8015d6e:	b083      	sub	sp, #12
 8015d70:	af00      	add	r7, sp, #0
 8015d72:	6078      	str	r0, [r7, #4]
 8015d74:	6039      	str	r1, [r7, #0]
	_M_node = __new_node;
 8015d76:	687b      	ldr	r3, [r7, #4]
 8015d78:	683a      	ldr	r2, [r7, #0]
 8015d7a:	60da      	str	r2, [r3, #12]
	_M_first = *__new_node;
 8015d7c:	683b      	ldr	r3, [r7, #0]
 8015d7e:	681a      	ldr	r2, [r3, #0]
 8015d80:	687b      	ldr	r3, [r7, #4]
 8015d82:	605a      	str	r2, [r3, #4]
	_M_last = _M_first + difference_type(_S_buffer_size());
 8015d84:	687b      	ldr	r3, [r7, #4]
 8015d86:	685c      	ldr	r4, [r3, #4]
 8015d88:	f000 f8f5 	bl	8015f76 <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E14_S_buffer_sizeEv>
 8015d8c:	4603      	mov	r3, r0
 8015d8e:	009b      	lsls	r3, r3, #2
 8015d90:	18e2      	adds	r2, r4, r3
 8015d92:	687b      	ldr	r3, [r7, #4]
 8015d94:	609a      	str	r2, [r3, #8]
      }
 8015d96:	bf00      	nop
 8015d98:	370c      	adds	r7, #12
 8015d9a:	46bd      	mov	sp, r7
 8015d9c:	bd90      	pop	{r4, r7, pc}

08015d9e <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE18_M_deallocate_nodeEPS2_>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
 8015d9e:	b590      	push	{r4, r7, lr}
 8015da0:	b083      	sub	sp, #12
 8015da2:	af00      	add	r7, sp, #0
 8015da4:	6078      	str	r0, [r7, #4]
 8015da6:	6039      	str	r1, [r7, #0]
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
 8015da8:	687c      	ldr	r4, [r7, #4]
 8015daa:	2004      	movs	r0, #4
 8015dac:	f7ff fb88 	bl	80154c0 <_ZSt16__deque_buf_sizej>
 8015db0:	4603      	mov	r3, r0
 8015db2:	461a      	mov	r2, r3
 8015db4:	6839      	ldr	r1, [r7, #0]
 8015db6:	4620      	mov	r0, r4
 8015db8:	f000 f8e5 	bl	8015f86 <_ZNSt16allocator_traitsISaIPK7XFEventEE10deallocateERS3_PS2_j>
      }
 8015dbc:	bf00      	nop
 8015dbe:	370c      	adds	r7, #12
 8015dc0:	46bd      	mov	sp, r7
 8015dc2:	bd90      	pop	{r4, r7, pc}

08015dc4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 8015dc4:	b580      	push	{r7, lr}
 8015dc6:	b082      	sub	sp, #8
 8015dc8:	af00      	add	r7, sp, #0
 8015dca:	6078      	str	r0, [r7, #4]
 8015dcc:	6039      	str	r1, [r7, #0]
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
 8015dce:	6838      	ldr	r0, [r7, #0]
 8015dd0:	f000 f8e8 	bl	8015fa4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>
 8015dd4:	4603      	mov	r3, r0
 8015dd6:	4619      	mov	r1, r3
 8015dd8:	6878      	ldr	r0, [r7, #4]
 8015dda:	f000 f8ee 	bl	8015fba <_ZNSaIPPK7XFEventEC1IS1_EERKSaIT_E>
 8015dde:	6878      	ldr	r0, [r7, #4]
 8015de0:	3708      	adds	r7, #8
 8015de2:	46bd      	mov	sp, r7
 8015de4:	bd80      	pop	{r7, pc}

08015de6 <_ZNSaIPPK7XFEventED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
 8015de6:	b580      	push	{r7, lr}
 8015de8:	b082      	sub	sp, #8
 8015dea:	af00      	add	r7, sp, #0
 8015dec:	6078      	str	r0, [r7, #4]
 8015dee:	6878      	ldr	r0, [r7, #4]
 8015df0:	f000 f8f0 	bl	8015fd4 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventED1Ev>
 8015df4:	687b      	ldr	r3, [r7, #4]
 8015df6:	4618      	mov	r0, r3
 8015df8:	3708      	adds	r7, #8
 8015dfa:	46bd      	mov	sp, r7
 8015dfc:	bd80      	pop	{r7, pc}

08015dfe <_ZNSt16allocator_traitsISaIPPK7XFEventEE10deallocateERS4_PS3_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015dfe:	b580      	push	{r7, lr}
 8015e00:	b084      	sub	sp, #16
 8015e02:	af00      	add	r7, sp, #0
 8015e04:	60f8      	str	r0, [r7, #12]
 8015e06:	60b9      	str	r1, [r7, #8]
 8015e08:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015e0a:	687a      	ldr	r2, [r7, #4]
 8015e0c:	68b9      	ldr	r1, [r7, #8]
 8015e0e:	68f8      	ldr	r0, [r7, #12]
 8015e10:	f000 f8eb 	bl	8015fea <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventE10deallocateEPS4_j>
 8015e14:	bf00      	nop
 8015e16:	3710      	adds	r7, #16
 8015e18:	46bd      	mov	sp, r7
 8015e1a:	bd80      	pop	{r7, pc}

08015e1c <_ZSt7forwardIRKPK7XFEventEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8015e1c:	b480      	push	{r7}
 8015e1e:	b083      	sub	sp, #12
 8015e20:	af00      	add	r7, sp, #0
 8015e22:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8015e24:	687b      	ldr	r3, [r7, #4]
 8015e26:	4618      	mov	r0, r3
 8015e28:	370c      	adds	r7, #12
 8015e2a:	46bd      	mov	sp, r7
 8015e2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015e30:	4770      	bx	lr

08015e32 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE9constructIS3_JRKS3_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
 8015e32:	b590      	push	{r4, r7, lr}
 8015e34:	b085      	sub	sp, #20
 8015e36:	af00      	add	r7, sp, #0
 8015e38:	60f8      	str	r0, [r7, #12]
 8015e3a:	60b9      	str	r1, [r7, #8]
 8015e3c:	607a      	str	r2, [r7, #4]
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 8015e3e:	6878      	ldr	r0, [r7, #4]
 8015e40:	f7ff ffec 	bl	8015e1c <_ZSt7forwardIRKPK7XFEventEOT_RNSt16remove_referenceIS5_E4typeE>
 8015e44:	4603      	mov	r3, r0
 8015e46:	681c      	ldr	r4, [r3, #0]
 8015e48:	68bb      	ldr	r3, [r7, #8]
 8015e4a:	4619      	mov	r1, r3
 8015e4c:	2004      	movs	r0, #4
 8015e4e:	f7f3 fb79 	bl	8009544 <_ZnwjPv>
 8015e52:	4603      	mov	r3, r0
 8015e54:	601c      	str	r4, [r3, #0]
 8015e56:	bf00      	nop
 8015e58:	3714      	adds	r7, #20
 8015e5a:	46bd      	mov	sp, r7
 8015e5c:	bd90      	pop	{r4, r7, pc}

08015e5e <_ZNKSt5dequeIPK7XFEventSaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
 8015e5e:	b580      	push	{r7, lr}
 8015e60:	b082      	sub	sp, #8
 8015e62:	af00      	add	r7, sp, #0
 8015e64:	6078      	str	r0, [r7, #4]
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
 8015e66:	687b      	ldr	r3, [r7, #4]
 8015e68:	f103 0218 	add.w	r2, r3, #24
 8015e6c:	687b      	ldr	r3, [r7, #4]
 8015e6e:	3308      	adds	r3, #8
 8015e70:	4619      	mov	r1, r3
 8015e72:	4610      	mov	r0, r2
 8015e74:	f000 f8c9 	bl	801600a <_ZStmiRKSt15_Deque_iteratorIPK7XFEventRS2_PS2_ES7_>
 8015e78:	4603      	mov	r3, r0
 8015e7a:	4618      	mov	r0, r3
 8015e7c:	3708      	adds	r7, #8
 8015e7e:	46bd      	mov	sp, r7
 8015e80:	bd80      	pop	{r7, pc}

08015e82 <_ZNKSt5dequeIPK7XFEventSaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
 8015e82:	b580      	push	{r7, lr}
 8015e84:	b082      	sub	sp, #8
 8015e86:	af00      	add	r7, sp, #0
 8015e88:	6078      	str	r0, [r7, #4]
      { return _S_max_size(_M_get_Tp_allocator()); }
 8015e8a:	687b      	ldr	r3, [r7, #4]
 8015e8c:	4618      	mov	r0, r3
 8015e8e:	f000 f889 	bl	8015fa4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>
 8015e92:	4603      	mov	r3, r0
 8015e94:	4618      	mov	r0, r3
 8015e96:	f000 f8dc 	bl	8016052 <_ZNSt5dequeIPK7XFEventSaIS2_EE11_S_max_sizeERKS3_>
 8015e9a:	4603      	mov	r3, r0
 8015e9c:	4618      	mov	r0, r3
 8015e9e:	3708      	adds	r7, #8
 8015ea0:	46bd      	mov	sp, r7
 8015ea2:	bd80      	pop	{r7, pc}

08015ea4 <_ZNSt5dequeIPK7XFEventSaIS2_EE22_M_reserve_map_at_backEj>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
 8015ea4:	b580      	push	{r7, lr}
 8015ea6:	b082      	sub	sp, #8
 8015ea8:	af00      	add	r7, sp, #0
 8015eaa:	6078      	str	r0, [r7, #4]
 8015eac:	6039      	str	r1, [r7, #0]
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8015eae:	683b      	ldr	r3, [r7, #0]
 8015eb0:	1c5a      	adds	r2, r3, #1
 8015eb2:	687b      	ldr	r3, [r7, #4]
 8015eb4:	685b      	ldr	r3, [r3, #4]
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
 8015eb6:	6879      	ldr	r1, [r7, #4]
 8015eb8:	6a48      	ldr	r0, [r1, #36]	; 0x24
 8015eba:	6879      	ldr	r1, [r7, #4]
 8015ebc:	6809      	ldr	r1, [r1, #0]
 8015ebe:	1a41      	subs	r1, r0, r1
 8015ec0:	1089      	asrs	r1, r1, #2
 8015ec2:	1a5b      	subs	r3, r3, r1
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
 8015ec4:	429a      	cmp	r2, r3
 8015ec6:	d904      	bls.n	8015ed2 <_ZNSt5dequeIPK7XFEventSaIS2_EE22_M_reserve_map_at_backEj+0x2e>
	  _M_reallocate_map(__nodes_to_add, false);
 8015ec8:	2200      	movs	r2, #0
 8015eca:	6839      	ldr	r1, [r7, #0]
 8015ecc:	6878      	ldr	r0, [r7, #4]
 8015ece:	f000 f8da 	bl	8016086 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb>
      }
 8015ed2:	bf00      	nop
 8015ed4:	3708      	adds	r7, #8
 8015ed6:	46bd      	mov	sp, r7
 8015ed8:	bd80      	pop	{r7, pc}

08015eda <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE16_M_allocate_nodeEv>:
      _M_allocate_node()
 8015eda:	b590      	push	{r4, r7, lr}
 8015edc:	b083      	sub	sp, #12
 8015ede:	af00      	add	r7, sp, #0
 8015ee0:	6078      	str	r0, [r7, #4]
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
 8015ee2:	687c      	ldr	r4, [r7, #4]
 8015ee4:	2004      	movs	r0, #4
 8015ee6:	f7ff faeb 	bl	80154c0 <_ZSt16__deque_buf_sizej>
 8015eea:	4603      	mov	r3, r0
 8015eec:	4619      	mov	r1, r3
 8015eee:	4620      	mov	r0, r4
 8015ef0:	f000 f963 	bl	80161ba <_ZNSt16allocator_traitsISaIPK7XFEventEE8allocateERS3_j>
 8015ef4:	4603      	mov	r3, r0
      }
 8015ef6:	4618      	mov	r0, r3
 8015ef8:	370c      	adds	r7, #12
 8015efa:	46bd      	mov	sp, r7
 8015efc:	bd90      	pop	{r4, r7, pc}

08015efe <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE7destroyIS3_EEvPT_>:
	destroy(_Up* __p)
 8015efe:	b480      	push	{r7}
 8015f00:	b083      	sub	sp, #12
 8015f02:	af00      	add	r7, sp, #0
 8015f04:	6078      	str	r0, [r7, #4]
 8015f06:	6039      	str	r1, [r7, #0]
	{ __p->~_Up(); }
 8015f08:	bf00      	nop
 8015f0a:	370c      	adds	r7, #12
 8015f0c:	46bd      	mov	sp, r7
 8015f0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f12:	4770      	bx	lr

08015f14 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015f14:	b480      	push	{r7}
 8015f16:	b083      	sub	sp, #12
 8015f18:	af00      	add	r7, sp, #0
 8015f1a:	6078      	str	r0, [r7, #4]
 8015f1c:	687b      	ldr	r3, [r7, #4]
 8015f1e:	4618      	mov	r0, r3
 8015f20:	370c      	adds	r7, #12
 8015f22:	46bd      	mov	sp, r7
 8015f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f28:	4770      	bx	lr

08015f2a <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_EC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
 8015f2a:	b480      	push	{r7}
 8015f2c:	b083      	sub	sp, #12
 8015f2e:	af00      	add	r7, sp, #0
 8015f30:	6078      	str	r0, [r7, #4]
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
 8015f32:	687b      	ldr	r3, [r7, #4]
 8015f34:	2200      	movs	r2, #0
 8015f36:	601a      	str	r2, [r3, #0]
 8015f38:	687b      	ldr	r3, [r7, #4]
 8015f3a:	2200      	movs	r2, #0
 8015f3c:	605a      	str	r2, [r3, #4]
 8015f3e:	687b      	ldr	r3, [r7, #4]
 8015f40:	2200      	movs	r2, #0
 8015f42:	609a      	str	r2, [r3, #8]
 8015f44:	687b      	ldr	r3, [r7, #4]
 8015f46:	2200      	movs	r2, #0
 8015f48:	60da      	str	r2, [r3, #12]
 8015f4a:	687b      	ldr	r3, [r7, #4]
 8015f4c:	4618      	mov	r0, r3
 8015f4e:	370c      	adds	r7, #12
 8015f50:	46bd      	mov	sp, r7
 8015f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015f56:	4770      	bx	lr

08015f58 <_ZNSt16allocator_traitsISaIPPK7XFEventEE8allocateERS4_j>:
      allocate(allocator_type& __a, size_type __n)
 8015f58:	b580      	push	{r7, lr}
 8015f5a:	b082      	sub	sp, #8
 8015f5c:	af00      	add	r7, sp, #0
 8015f5e:	6078      	str	r0, [r7, #4]
 8015f60:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 8015f62:	2200      	movs	r2, #0
 8015f64:	6839      	ldr	r1, [r7, #0]
 8015f66:	6878      	ldr	r0, [r7, #4]
 8015f68:	f000 f936 	bl	80161d8 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventE8allocateEjPKv>
 8015f6c:	4603      	mov	r3, r0
 8015f6e:	4618      	mov	r0, r3
 8015f70:	3708      	adds	r7, #8
 8015f72:	46bd      	mov	sp, r7
 8015f74:	bd80      	pop	{r7, pc}

08015f76 <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 8015f76:	b580      	push	{r7, lr}
 8015f78:	af00      	add	r7, sp, #0
      { return __deque_buf_size(sizeof(_Tp)); }
 8015f7a:	2004      	movs	r0, #4
 8015f7c:	f7ff faa0 	bl	80154c0 <_ZSt16__deque_buf_sizej>
 8015f80:	4603      	mov	r3, r0
 8015f82:	4618      	mov	r0, r3
 8015f84:	bd80      	pop	{r7, pc}

08015f86 <_ZNSt16allocator_traitsISaIPK7XFEventEE10deallocateERS3_PS2_j>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
 8015f86:	b580      	push	{r7, lr}
 8015f88:	b084      	sub	sp, #16
 8015f8a:	af00      	add	r7, sp, #0
 8015f8c:	60f8      	str	r0, [r7, #12]
 8015f8e:	60b9      	str	r1, [r7, #8]
 8015f90:	607a      	str	r2, [r7, #4]
      { __a.deallocate(__p, __n); }
 8015f92:	687a      	ldr	r2, [r7, #4]
 8015f94:	68b9      	ldr	r1, [r7, #8]
 8015f96:	68f8      	ldr	r0, [r7, #12]
 8015f98:	f000 f93c 	bl	8016214 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE10deallocateEPS3_j>
 8015f9c:	bf00      	nop
 8015f9e:	3710      	adds	r7, #16
 8015fa0:	46bd      	mov	sp, r7
 8015fa2:	bd80      	pop	{r7, pc}

08015fa4 <_ZNKSt11_Deque_baseIPK7XFEventSaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 8015fa4:	b480      	push	{r7}
 8015fa6:	b083      	sub	sp, #12
 8015fa8:	af00      	add	r7, sp, #0
 8015faa:	6078      	str	r0, [r7, #4]
      { return this->_M_impl; }
 8015fac:	687b      	ldr	r3, [r7, #4]
 8015fae:	4618      	mov	r0, r3
 8015fb0:	370c      	adds	r7, #12
 8015fb2:	46bd      	mov	sp, r7
 8015fb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fb8:	4770      	bx	lr

08015fba <_ZNSaIPPK7XFEventEC1IS1_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 8015fba:	b580      	push	{r7, lr}
 8015fbc:	b082      	sub	sp, #8
 8015fbe:	af00      	add	r7, sp, #0
 8015fc0:	6078      	str	r0, [r7, #4]
 8015fc2:	6039      	str	r1, [r7, #0]
 8015fc4:	6878      	ldr	r0, [r7, #4]
 8015fc6:	f000 f935 	bl	8016234 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventEC1Ev>
 8015fca:	687b      	ldr	r3, [r7, #4]
 8015fcc:	4618      	mov	r0, r3
 8015fce:	3708      	adds	r7, #8
 8015fd0:	46bd      	mov	sp, r7
 8015fd2:	bd80      	pop	{r7, pc}

08015fd4 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventED1Ev>:
      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8015fd4:	b480      	push	{r7}
 8015fd6:	b083      	sub	sp, #12
 8015fd8:	af00      	add	r7, sp, #0
 8015fda:	6078      	str	r0, [r7, #4]
 8015fdc:	687b      	ldr	r3, [r7, #4]
 8015fde:	4618      	mov	r0, r3
 8015fe0:	370c      	adds	r7, #12
 8015fe2:	46bd      	mov	sp, r7
 8015fe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8015fe8:	4770      	bx	lr

08015fea <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventE10deallocateEPS4_j>:
      deallocate(_Tp* __p, size_type __t)
 8015fea:	b580      	push	{r7, lr}
 8015fec:	b084      	sub	sp, #16
 8015fee:	af00      	add	r7, sp, #0
 8015ff0:	60f8      	str	r0, [r7, #12]
 8015ff2:	60b9      	str	r1, [r7, #8]
 8015ff4:	607a      	str	r2, [r7, #4]
	::operator delete(__p
 8015ff6:	687b      	ldr	r3, [r7, #4]
 8015ff8:	009b      	lsls	r3, r3, #2
 8015ffa:	4619      	mov	r1, r3
 8015ffc:	68b8      	ldr	r0, [r7, #8]
 8015ffe:	f015 fd32 	bl	802ba66 <_ZdlPvj>
      }
 8016002:	bf00      	nop
 8016004:	3710      	adds	r7, #16
 8016006:	46bd      	mov	sp, r7
 8016008:	bd80      	pop	{r7, pc}

0801600a <_ZStmiRKSt15_Deque_iteratorIPK7XFEventRS2_PS2_ES7_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
 801600a:	b580      	push	{r7, lr}
 801600c:	b082      	sub	sp, #8
 801600e:	af00      	add	r7, sp, #0
 8016010:	6078      	str	r0, [r7, #4]
 8016012:	6039      	str	r1, [r7, #0]
	return difference_type(_S_buffer_size())
 8016014:	f7ff ffaf 	bl	8015f76 <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E14_S_buffer_sizeEv>
 8016018:	4603      	mov	r3, r0
 801601a:	4619      	mov	r1, r3
	  * (__x._M_node - __y._M_node - 1) + (__x._M_cur - __x._M_first)
 801601c:	687b      	ldr	r3, [r7, #4]
 801601e:	68da      	ldr	r2, [r3, #12]
 8016020:	683b      	ldr	r3, [r7, #0]
 8016022:	68db      	ldr	r3, [r3, #12]
 8016024:	1ad3      	subs	r3, r2, r3
 8016026:	109b      	asrs	r3, r3, #2
 8016028:	3b01      	subs	r3, #1
 801602a:	fb01 f303 	mul.w	r3, r1, r3
 801602e:	687a      	ldr	r2, [r7, #4]
 8016030:	6811      	ldr	r1, [r2, #0]
 8016032:	687a      	ldr	r2, [r7, #4]
 8016034:	6852      	ldr	r2, [r2, #4]
 8016036:	1a8a      	subs	r2, r1, r2
 8016038:	1092      	asrs	r2, r2, #2
 801603a:	4413      	add	r3, r2
	  + (__y._M_last - __y._M_cur);
 801603c:	683a      	ldr	r2, [r7, #0]
 801603e:	6891      	ldr	r1, [r2, #8]
 8016040:	683a      	ldr	r2, [r7, #0]
 8016042:	6812      	ldr	r2, [r2, #0]
 8016044:	1a8a      	subs	r2, r1, r2
 8016046:	1092      	asrs	r2, r2, #2
 8016048:	4413      	add	r3, r2
      }
 801604a:	4618      	mov	r0, r3
 801604c:	3708      	adds	r7, #8
 801604e:	46bd      	mov	sp, r7
 8016050:	bd80      	pop	{r7, pc}

08016052 <_ZNSt5dequeIPK7XFEventSaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
 8016052:	b580      	push	{r7, lr}
 8016054:	b084      	sub	sp, #16
 8016056:	af00      	add	r7, sp, #0
 8016058:	6078      	str	r0, [r7, #4]
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
 801605a:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801605e:	60fb      	str	r3, [r7, #12]
	const size_t __allocmax = _Alloc_traits::max_size(__a);
 8016060:	6878      	ldr	r0, [r7, #4]
 8016062:	f000 f8f2 	bl	801624a <_ZNSt16allocator_traitsISaIPK7XFEventEE8max_sizeERKS3_>
 8016066:	4603      	mov	r3, r0
 8016068:	60bb      	str	r3, [r7, #8]
	return (std::min)(__diffmax, __allocmax);
 801606a:	f107 0208 	add.w	r2, r7, #8
 801606e:	f107 030c 	add.w	r3, r7, #12
 8016072:	4611      	mov	r1, r2
 8016074:	4618      	mov	r0, r3
 8016076:	f000 f8f4 	bl	8016262 <_ZSt3minIjERKT_S2_S2_>
 801607a:	4603      	mov	r3, r0
 801607c:	681b      	ldr	r3, [r3, #0]
      }
 801607e:	4618      	mov	r0, r3
 8016080:	3710      	adds	r7, #16
 8016082:	46bd      	mov	sp, r7
 8016084:	bd80      	pop	{r7, pc}

08016086 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb>:
	}
    }

  template <typename _Tp, typename _Alloc>
    void
    deque<_Tp, _Alloc>::
 8016086:	b590      	push	{r4, r7, lr}
 8016088:	b08b      	sub	sp, #44	; 0x2c
 801608a:	af00      	add	r7, sp, #0
 801608c:	60f8      	str	r0, [r7, #12]
 801608e:	60b9      	str	r1, [r7, #8]
 8016090:	4613      	mov	r3, r2
 8016092:	71fb      	strb	r3, [r7, #7]
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
 8016094:	68fb      	ldr	r3, [r7, #12]
 8016096:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8016098:	68fb      	ldr	r3, [r7, #12]
 801609a:	695b      	ldr	r3, [r3, #20]
 801609c:	1ad3      	subs	r3, r2, r3
 801609e:	109b      	asrs	r3, r3, #2
 80160a0:	3301      	adds	r3, #1
      const size_type __old_num_nodes
 80160a2:	623b      	str	r3, [r7, #32]
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
 80160a4:	68bb      	ldr	r3, [r7, #8]
 80160a6:	6a3a      	ldr	r2, [r7, #32]
 80160a8:	4413      	add	r3, r2
 80160aa:	61fb      	str	r3, [r7, #28]

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
 80160ac:	68fb      	ldr	r3, [r7, #12]
 80160ae:	685a      	ldr	r2, [r3, #4]
 80160b0:	69fb      	ldr	r3, [r7, #28]
 80160b2:	005b      	lsls	r3, r3, #1
 80160b4:	429a      	cmp	r2, r3
 80160b6:	d92d      	bls.n	8016114 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x8e>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 80160b8:	68fb      	ldr	r3, [r7, #12]
 80160ba:	681a      	ldr	r2, [r3, #0]
 80160bc:	68fb      	ldr	r3, [r7, #12]
 80160be:	6859      	ldr	r1, [r3, #4]
					 - __new_num_nodes) / 2
 80160c0:	69fb      	ldr	r3, [r7, #28]
 80160c2:	1acb      	subs	r3, r1, r3
 80160c4:	085b      	lsrs	r3, r3, #1
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 80160c6:	0099      	lsls	r1, r3, #2
			 + (__add_at_front ? __nodes_to_add : 0);
 80160c8:	79fb      	ldrb	r3, [r7, #7]
 80160ca:	2b00      	cmp	r3, #0
 80160cc:	d002      	beq.n	80160d4 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x4e>
 80160ce:	68bb      	ldr	r3, [r7, #8]
 80160d0:	009b      	lsls	r3, r3, #2
 80160d2:	e000      	b.n	80160d6 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x50>
 80160d4:	2300      	movs	r3, #0
 80160d6:	440b      	add	r3, r1
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
 80160d8:	4413      	add	r3, r2
 80160da:	627b      	str	r3, [r7, #36]	; 0x24
	  if (__new_nstart < this->_M_impl._M_start._M_node)
 80160dc:	68fb      	ldr	r3, [r7, #12]
 80160de:	695b      	ldr	r3, [r3, #20]
 80160e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80160e2:	429a      	cmp	r2, r3
 80160e4:	d209      	bcs.n	80160fa <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x74>
	    std::copy(this->_M_impl._M_start._M_node,
 80160e6:	68fb      	ldr	r3, [r7, #12]
 80160e8:	6958      	ldr	r0, [r3, #20]
		      this->_M_impl._M_finish._M_node + 1,
 80160ea:	68fb      	ldr	r3, [r7, #12]
 80160ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
	    std::copy(this->_M_impl._M_start._M_node,
 80160ee:	3304      	adds	r3, #4
 80160f0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80160f2:	4619      	mov	r1, r3
 80160f4:	f000 f8c9 	bl	801628a <_ZSt4copyIPPPK7XFEventS4_ET0_T_S6_S5_>
 80160f8:	e048      	b.n	801618c <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x106>
		      __new_nstart);
	  else
	    std::copy_backward(this->_M_impl._M_start._M_node,
 80160fa:	68fb      	ldr	r3, [r7, #12]
 80160fc:	6958      	ldr	r0, [r3, #20]
			       this->_M_impl._M_finish._M_node + 1,
 80160fe:	68fb      	ldr	r3, [r7, #12]
 8016100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
	    std::copy_backward(this->_M_impl._M_start._M_node,
 8016102:	1d19      	adds	r1, r3, #4
			       __new_nstart + __old_num_nodes);
 8016104:	6a3b      	ldr	r3, [r7, #32]
 8016106:	009b      	lsls	r3, r3, #2
	    std::copy_backward(this->_M_impl._M_start._M_node,
 8016108:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801610a:	4413      	add	r3, r2
 801610c:	461a      	mov	r2, r3
 801610e:	f000 f8d4 	bl	80162ba <_ZSt13copy_backwardIPPPK7XFEventS4_ET0_T_S6_S5_>
 8016112:	e03b      	b.n	801618c <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0x106>
	}
      else
	{
	  size_type __new_map_size = this->_M_impl._M_map_size
 8016114:	68fb      	ldr	r3, [r7, #12]
 8016116:	685c      	ldr	r4, [r3, #4]
				     + std::max(this->_M_impl._M_map_size,
 8016118:	68fb      	ldr	r3, [r7, #12]
 801611a:	3304      	adds	r3, #4
 801611c:	f107 0208 	add.w	r2, r7, #8
 8016120:	4611      	mov	r1, r2
 8016122:	4618      	mov	r0, r3
 8016124:	f7ff fdd7 	bl	8015cd6 <_ZSt3maxIjERKT_S2_S2_>
 8016128:	4603      	mov	r3, r0
 801612a:	681b      	ldr	r3, [r3, #0]
 801612c:	4423      	add	r3, r4
	  size_type __new_map_size = this->_M_impl._M_map_size
 801612e:	3302      	adds	r3, #2
 8016130:	61bb      	str	r3, [r7, #24]
						__nodes_to_add) + 2;

	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
 8016132:	68fb      	ldr	r3, [r7, #12]
 8016134:	69b9      	ldr	r1, [r7, #24]
 8016136:	4618      	mov	r0, r3
 8016138:	f7ff fde1 	bl	8015cfe <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE15_M_allocate_mapEj>
 801613c:	6178      	str	r0, [r7, #20]
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 801613e:	69ba      	ldr	r2, [r7, #24]
 8016140:	69fb      	ldr	r3, [r7, #28]
 8016142:	1ad3      	subs	r3, r2, r3
 8016144:	085b      	lsrs	r3, r3, #1
 8016146:	009a      	lsls	r2, r3, #2
			 + (__add_at_front ? __nodes_to_add : 0);
 8016148:	79fb      	ldrb	r3, [r7, #7]
 801614a:	2b00      	cmp	r3, #0
 801614c:	d002      	beq.n	8016154 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0xce>
 801614e:	68bb      	ldr	r3, [r7, #8]
 8016150:	009b      	lsls	r3, r3, #2
 8016152:	e000      	b.n	8016156 <_ZNSt5dequeIPK7XFEventSaIS2_EE17_M_reallocate_mapEjb+0xd0>
 8016154:	2300      	movs	r3, #0
 8016156:	4413      	add	r3, r2
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
 8016158:	697a      	ldr	r2, [r7, #20]
 801615a:	4413      	add	r3, r2
 801615c:	627b      	str	r3, [r7, #36]	; 0x24
	  std::copy(this->_M_impl._M_start._M_node,
 801615e:	68fb      	ldr	r3, [r7, #12]
 8016160:	6958      	ldr	r0, [r3, #20]
		    this->_M_impl._M_finish._M_node + 1,
 8016162:	68fb      	ldr	r3, [r7, #12]
 8016164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
	  std::copy(this->_M_impl._M_start._M_node,
 8016166:	3304      	adds	r3, #4
 8016168:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 801616a:	4619      	mov	r1, r3
 801616c:	f000 f88d 	bl	801628a <_ZSt4copyIPPPK7XFEventS4_ET0_T_S6_S5_>
		    __new_nstart);
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
 8016170:	68f8      	ldr	r0, [r7, #12]
 8016172:	68fb      	ldr	r3, [r7, #12]
 8016174:	6819      	ldr	r1, [r3, #0]
 8016176:	68fb      	ldr	r3, [r7, #12]
 8016178:	685b      	ldr	r3, [r3, #4]
 801617a:	461a      	mov	r2, r3
 801617c:	f7ff fcb3 	bl	8015ae6 <_ZNSt11_Deque_baseIPK7XFEventSaIS2_EE17_M_deallocate_mapEPPS2_j>

	  this->_M_impl._M_map = __new_map;
 8016180:	68fb      	ldr	r3, [r7, #12]
 8016182:	697a      	ldr	r2, [r7, #20]
 8016184:	601a      	str	r2, [r3, #0]
	  this->_M_impl._M_map_size = __new_map_size;
 8016186:	68fb      	ldr	r3, [r7, #12]
 8016188:	69ba      	ldr	r2, [r7, #24]
 801618a:	605a      	str	r2, [r3, #4]
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
 801618c:	68fb      	ldr	r3, [r7, #12]
 801618e:	3308      	adds	r3, #8
 8016190:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8016192:	4618      	mov	r0, r3
 8016194:	f7ff fdea 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
 8016198:	68fb      	ldr	r3, [r7, #12]
 801619a:	f103 0018 	add.w	r0, r3, #24
 801619e:	6a3a      	ldr	r2, [r7, #32]
 80161a0:	f06f 4340 	mvn.w	r3, #3221225472	; 0xc0000000
 80161a4:	4413      	add	r3, r2
 80161a6:	009b      	lsls	r3, r3, #2
 80161a8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80161aa:	4413      	add	r3, r2
 80161ac:	4619      	mov	r1, r3
 80161ae:	f7ff fddd 	bl	8015d6c <_ZNSt15_Deque_iteratorIPK7XFEventRS2_PS2_E11_M_set_nodeEPS4_>
    }
 80161b2:	bf00      	nop
 80161b4:	372c      	adds	r7, #44	; 0x2c
 80161b6:	46bd      	mov	sp, r7
 80161b8:	bd90      	pop	{r4, r7, pc}

080161ba <_ZNSt16allocator_traitsISaIPK7XFEventEE8allocateERS3_j>:
      allocate(allocator_type& __a, size_type __n)
 80161ba:	b580      	push	{r7, lr}
 80161bc:	b082      	sub	sp, #8
 80161be:	af00      	add	r7, sp, #0
 80161c0:	6078      	str	r0, [r7, #4]
 80161c2:	6039      	str	r1, [r7, #0]
      { return __a.allocate(__n); }
 80161c4:	2200      	movs	r2, #0
 80161c6:	6839      	ldr	r1, [r7, #0]
 80161c8:	6878      	ldr	r0, [r7, #4]
 80161ca:	f000 f88e 	bl	80162ea <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE8allocateEjPKv>
 80161ce:	4603      	mov	r3, r0
 80161d0:	4618      	mov	r0, r3
 80161d2:	3708      	adds	r7, #8
 80161d4:	46bd      	mov	sp, r7
 80161d6:	bd80      	pop	{r7, pc}

080161d8 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80161d8:	b580      	push	{r7, lr}
 80161da:	b084      	sub	sp, #16
 80161dc:	af00      	add	r7, sp, #0
 80161de:	60f8      	str	r0, [r7, #12]
 80161e0:	60b9      	str	r1, [r7, #8]
 80161e2:	607a      	str	r2, [r7, #4]
	if (__n > this->_M_max_size())
 80161e4:	68f8      	ldr	r0, [r7, #12]
 80161e6:	f000 f89e 	bl	8016326 <_ZNK9__gnu_cxx13new_allocatorIPPK7XFEventE11_M_max_sizeEv>
 80161ea:	4602      	mov	r2, r0
 80161ec:	68bb      	ldr	r3, [r7, #8]
 80161ee:	4293      	cmp	r3, r2
 80161f0:	bf8c      	ite	hi
 80161f2:	2301      	movhi	r3, #1
 80161f4:	2300      	movls	r3, #0
 80161f6:	b2db      	uxtb	r3, r3
 80161f8:	2b00      	cmp	r3, #0
 80161fa:	d001      	beq.n	8016200 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 80161fc:	f015 fc66 	bl	802bacc <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8016200:	68bb      	ldr	r3, [r7, #8]
 8016202:	009b      	lsls	r3, r3, #2
 8016204:	4618      	mov	r0, r3
 8016206:	f015 fc3f 	bl	802ba88 <_Znwj>
 801620a:	4603      	mov	r3, r0
      }
 801620c:	4618      	mov	r0, r3
 801620e:	3710      	adds	r7, #16
 8016210:	46bd      	mov	sp, r7
 8016212:	bd80      	pop	{r7, pc}

08016214 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE10deallocateEPS3_j>:
      deallocate(_Tp* __p, size_type __t)
 8016214:	b580      	push	{r7, lr}
 8016216:	b084      	sub	sp, #16
 8016218:	af00      	add	r7, sp, #0
 801621a:	60f8      	str	r0, [r7, #12]
 801621c:	60b9      	str	r1, [r7, #8]
 801621e:	607a      	str	r2, [r7, #4]
	::operator delete(__p
 8016220:	687b      	ldr	r3, [r7, #4]
 8016222:	009b      	lsls	r3, r3, #2
 8016224:	4619      	mov	r1, r3
 8016226:	68b8      	ldr	r0, [r7, #8]
 8016228:	f015 fc1d 	bl	802ba66 <_ZdlPvj>
      }
 801622c:	bf00      	nop
 801622e:	3710      	adds	r7, #16
 8016230:	46bd      	mov	sp, r7
 8016232:	bd80      	pop	{r7, pc}

08016234 <_ZN9__gnu_cxx13new_allocatorIPPK7XFEventEC1Ev>:
      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 8016234:	b480      	push	{r7}
 8016236:	b083      	sub	sp, #12
 8016238:	af00      	add	r7, sp, #0
 801623a:	6078      	str	r0, [r7, #4]
 801623c:	687b      	ldr	r3, [r7, #4]
 801623e:	4618      	mov	r0, r3
 8016240:	370c      	adds	r7, #12
 8016242:	46bd      	mov	sp, r7
 8016244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016248:	4770      	bx	lr

0801624a <_ZNSt16allocator_traitsISaIPK7XFEventEE8max_sizeERKS3_>:
       *  @brief  The maximum supported allocation size
       *  @param  __a  An allocator.
       *  @return @c __a.max_size()
      */
      static _GLIBCXX20_CONSTEXPR size_type
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
 801624a:	b580      	push	{r7, lr}
 801624c:	b082      	sub	sp, #8
 801624e:	af00      	add	r7, sp, #0
 8016250:	6078      	str	r0, [r7, #4]
      {
#if __cplusplus <= 201703L
	return __a.max_size();
 8016252:	6878      	ldr	r0, [r7, #4]
 8016254:	f000 f873 	bl	801633e <_ZNK9__gnu_cxx13new_allocatorIPK7XFEventE8max_sizeEv>
 8016258:	4603      	mov	r3, r0
#else
	return size_t(-1) / sizeof(value_type);
#endif
      }
 801625a:	4618      	mov	r0, r3
 801625c:	3708      	adds	r7, #8
 801625e:	46bd      	mov	sp, r7
 8016260:	bd80      	pop	{r7, pc}

08016262 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
 8016262:	b480      	push	{r7}
 8016264:	b083      	sub	sp, #12
 8016266:	af00      	add	r7, sp, #0
 8016268:	6078      	str	r0, [r7, #4]
 801626a:	6039      	str	r1, [r7, #0]
      if (__b < __a)
 801626c:	683b      	ldr	r3, [r7, #0]
 801626e:	681a      	ldr	r2, [r3, #0]
 8016270:	687b      	ldr	r3, [r7, #4]
 8016272:	681b      	ldr	r3, [r3, #0]
 8016274:	429a      	cmp	r2, r3
 8016276:	d201      	bcs.n	801627c <_ZSt3minIjERKT_S2_S2_+0x1a>
	return __b;
 8016278:	683b      	ldr	r3, [r7, #0]
 801627a:	e000      	b.n	801627e <_ZSt3minIjERKT_S2_S2_+0x1c>
      return __a;
 801627c:	687b      	ldr	r3, [r7, #4]
    }
 801627e:	4618      	mov	r0, r3
 8016280:	370c      	adds	r7, #12
 8016282:	46bd      	mov	sp, r7
 8016284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016288:	4770      	bx	lr

0801628a <_ZSt4copyIPPPK7XFEventS4_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
 801628a:	b590      	push	{r4, r7, lr}
 801628c:	b085      	sub	sp, #20
 801628e:	af00      	add	r7, sp, #0
 8016290:	60f8      	str	r0, [r7, #12]
 8016292:	60b9      	str	r1, [r7, #8]
 8016294:	607a      	str	r2, [r7, #4]
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::value_type>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 8016296:	68f8      	ldr	r0, [r7, #12]
 8016298:	f000 f85d 	bl	8016356 <_ZSt12__miter_baseIPPPK7XFEventET_S5_>
 801629c:	4604      	mov	r4, r0
 801629e:	68b8      	ldr	r0, [r7, #8]
 80162a0:	f000 f859 	bl	8016356 <_ZSt12__miter_baseIPPPK7XFEventET_S5_>
 80162a4:	4603      	mov	r3, r0
 80162a6:	687a      	ldr	r2, [r7, #4]
 80162a8:	4619      	mov	r1, r3
 80162aa:	4620      	mov	r0, r4
 80162ac:	f000 f85e 	bl	801636c <_ZSt13__copy_move_aILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 80162b0:	4603      	mov	r3, r0
    }
 80162b2:	4618      	mov	r0, r3
 80162b4:	3714      	adds	r7, #20
 80162b6:	46bd      	mov	sp, r7
 80162b8:	bd90      	pop	{r4, r7, pc}

080162ba <_ZSt13copy_backwardIPPPK7XFEventS4_ET0_T_S6_S5_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 80162ba:	b590      	push	{r4, r7, lr}
 80162bc:	b085      	sub	sp, #20
 80162be:	af00      	add	r7, sp, #0
 80162c0:	60f8      	str	r0, [r7, #12]
 80162c2:	60b9      	str	r1, [r7, #8]
 80162c4:	607a      	str	r2, [r7, #4]
	    typename iterator_traits<_BI1>::value_type,
	    typename iterator_traits<_BI2>::value_type>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 80162c6:	68f8      	ldr	r0, [r7, #12]
 80162c8:	f000 f845 	bl	8016356 <_ZSt12__miter_baseIPPPK7XFEventET_S5_>
 80162cc:	4604      	mov	r4, r0
 80162ce:	68b8      	ldr	r0, [r7, #8]
 80162d0:	f000 f841 	bl	8016356 <_ZSt12__miter_baseIPPPK7XFEventET_S5_>
 80162d4:	4603      	mov	r3, r0
 80162d6:	687a      	ldr	r2, [r7, #4]
 80162d8:	4619      	mov	r1, r3
 80162da:	4620      	mov	r0, r4
 80162dc:	f000 f869 	bl	80163b2 <_ZSt22__copy_move_backward_aILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 80162e0:	4603      	mov	r3, r0
    }
 80162e2:	4618      	mov	r0, r3
 80162e4:	3714      	adds	r7, #20
 80162e6:	46bd      	mov	sp, r7
 80162e8:	bd90      	pop	{r4, r7, pc}

080162ea <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE8allocateEjPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
 80162ea:	b580      	push	{r7, lr}
 80162ec:	b084      	sub	sp, #16
 80162ee:	af00      	add	r7, sp, #0
 80162f0:	60f8      	str	r0, [r7, #12]
 80162f2:	60b9      	str	r1, [r7, #8]
 80162f4:	607a      	str	r2, [r7, #4]
	if (__n > this->_M_max_size())
 80162f6:	68f8      	ldr	r0, [r7, #12]
 80162f8:	f000 f87e 	bl	80163f8 <_ZNK9__gnu_cxx13new_allocatorIPK7XFEventE11_M_max_sizeEv>
 80162fc:	4602      	mov	r2, r0
 80162fe:	68bb      	ldr	r3, [r7, #8]
 8016300:	4293      	cmp	r3, r2
 8016302:	bf8c      	ite	hi
 8016304:	2301      	movhi	r3, #1
 8016306:	2300      	movls	r3, #0
 8016308:	b2db      	uxtb	r3, r3
 801630a:	2b00      	cmp	r3, #0
 801630c:	d001      	beq.n	8016312 <_ZN9__gnu_cxx13new_allocatorIPK7XFEventE8allocateEjPKv+0x28>
	  std::__throw_bad_alloc();
 801630e:	f015 fbdd 	bl	802bacc <_ZSt17__throw_bad_allocv>
	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 8016312:	68bb      	ldr	r3, [r7, #8]
 8016314:	009b      	lsls	r3, r3, #2
 8016316:	4618      	mov	r0, r3
 8016318:	f015 fbb6 	bl	802ba88 <_Znwj>
 801631c:	4603      	mov	r3, r0
      }
 801631e:	4618      	mov	r0, r3
 8016320:	3710      	adds	r7, #16
 8016322:	46bd      	mov	sp, r7
 8016324:	bd80      	pop	{r7, pc}

08016326 <_ZNK9__gnu_cxx13new_allocatorIPPK7XFEventE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
 8016326:	b480      	push	{r7}
 8016328:	b083      	sub	sp, #12
 801632a:	af00      	add	r7, sp, #0
 801632c:	6078      	str	r0, [r7, #4]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 801632e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8016332:	4618      	mov	r0, r3
 8016334:	370c      	adds	r7, #12
 8016336:	46bd      	mov	sp, r7
 8016338:	f85d 7b04 	ldr.w	r7, [sp], #4
 801633c:	4770      	bx	lr

0801633e <_ZNK9__gnu_cxx13new_allocatorIPK7XFEventE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
 801633e:	b580      	push	{r7, lr}
 8016340:	b082      	sub	sp, #8
 8016342:	af00      	add	r7, sp, #0
 8016344:	6078      	str	r0, [r7, #4]
      { return _M_max_size(); }
 8016346:	6878      	ldr	r0, [r7, #4]
 8016348:	f000 f856 	bl	80163f8 <_ZNK9__gnu_cxx13new_allocatorIPK7XFEventE11_M_max_sizeEv>
 801634c:	4603      	mov	r3, r0
 801634e:	4618      	mov	r0, r3
 8016350:	3708      	adds	r7, #8
 8016352:	46bd      	mov	sp, r7
 8016354:	bd80      	pop	{r7, pc}

08016356 <_ZSt12__miter_baseIPPPK7XFEventET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
 8016356:	b480      	push	{r7}
 8016358:	b083      	sub	sp, #12
 801635a:	af00      	add	r7, sp, #0
 801635c:	6078      	str	r0, [r7, #4]
    { return __it; }
 801635e:	687b      	ldr	r3, [r7, #4]
 8016360:	4618      	mov	r0, r3
 8016362:	370c      	adds	r7, #12
 8016364:	46bd      	mov	sp, r7
 8016366:	f85d 7b04 	ldr.w	r7, [sp], #4
 801636a:	4770      	bx	lr

0801636c <_ZSt13__copy_move_aILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
 801636c:	b5b0      	push	{r4, r5, r7, lr}
 801636e:	b084      	sub	sp, #16
 8016370:	af00      	add	r7, sp, #0
 8016372:	60f8      	str	r0, [r7, #12]
 8016374:	60b9      	str	r1, [r7, #8]
 8016376:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 8016378:	68f8      	ldr	r0, [r7, #12]
 801637a:	f000 f849 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 801637e:	4604      	mov	r4, r0
 8016380:	68b8      	ldr	r0, [r7, #8]
 8016382:	f000 f845 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 8016386:	4605      	mov	r5, r0
 8016388:	687b      	ldr	r3, [r7, #4]
 801638a:	4618      	mov	r0, r3
 801638c:	f000 f840 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 8016390:	4603      	mov	r3, r0
 8016392:	461a      	mov	r2, r3
 8016394:	4629      	mov	r1, r5
 8016396:	4620      	mov	r0, r4
 8016398:	f000 f845 	bl	8016426 <_ZSt14__copy_move_a1ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 801639c:	4602      	mov	r2, r0
 801639e:	1d3b      	adds	r3, r7, #4
 80163a0:	4611      	mov	r1, r2
 80163a2:	4618      	mov	r0, r3
 80163a4:	f000 f84f 	bl	8016446 <_ZSt12__niter_wrapIPPPK7XFEventET_RKS5_S5_>
 80163a8:	4603      	mov	r3, r0
    }
 80163aa:	4618      	mov	r0, r3
 80163ac:	3710      	adds	r7, #16
 80163ae:	46bd      	mov	sp, r7
 80163b0:	bdb0      	pop	{r4, r5, r7, pc}

080163b2 <_ZSt22__copy_move_backward_aILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
 80163b2:	b5b0      	push	{r4, r5, r7, lr}
 80163b4:	b084      	sub	sp, #16
 80163b6:	af00      	add	r7, sp, #0
 80163b8:	60f8      	str	r0, [r7, #12]
 80163ba:	60b9      	str	r1, [r7, #8]
 80163bc:	607a      	str	r2, [r7, #4]
      return std::__niter_wrap(__result,
 80163be:	68f8      	ldr	r0, [r7, #12]
 80163c0:	f000 f826 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 80163c4:	4604      	mov	r4, r0
 80163c6:	68b8      	ldr	r0, [r7, #8]
 80163c8:	f000 f822 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 80163cc:	4605      	mov	r5, r0
 80163ce:	687b      	ldr	r3, [r7, #4]
 80163d0:	4618      	mov	r0, r3
 80163d2:	f000 f81d 	bl	8016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>
 80163d6:	4603      	mov	r3, r0
 80163d8:	461a      	mov	r2, r3
 80163da:	4629      	mov	r1, r5
 80163dc:	4620      	mov	r0, r4
 80163de:	f000 f83e 	bl	801645e <_ZSt23__copy_move_backward_a1ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 80163e2:	4602      	mov	r2, r0
 80163e4:	1d3b      	adds	r3, r7, #4
 80163e6:	4611      	mov	r1, r2
 80163e8:	4618      	mov	r0, r3
 80163ea:	f000 f82c 	bl	8016446 <_ZSt12__niter_wrapIPPPK7XFEventET_RKS5_S5_>
 80163ee:	4603      	mov	r3, r0
    }
 80163f0:	4618      	mov	r0, r3
 80163f2:	3710      	adds	r7, #16
 80163f4:	46bd      	mov	sp, r7
 80163f6:	bdb0      	pop	{r4, r5, r7, pc}

080163f8 <_ZNK9__gnu_cxx13new_allocatorIPK7XFEventE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
 80163f8:	b480      	push	{r7}
 80163fa:	b083      	sub	sp, #12
 80163fc:	af00      	add	r7, sp, #0
 80163fe:	6078      	str	r0, [r7, #4]
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 8016400:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
      }
 8016404:	4618      	mov	r0, r3
 8016406:	370c      	adds	r7, #12
 8016408:	46bd      	mov	sp, r7
 801640a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801640e:	4770      	bx	lr

08016410 <_ZSt12__niter_baseIPPPK7XFEventET_S5_>:
    __niter_base(_Iterator __it)
 8016410:	b480      	push	{r7}
 8016412:	b083      	sub	sp, #12
 8016414:	af00      	add	r7, sp, #0
 8016416:	6078      	str	r0, [r7, #4]
    { return __it; }
 8016418:	687b      	ldr	r3, [r7, #4]
 801641a:	4618      	mov	r0, r3
 801641c:	370c      	adds	r7, #12
 801641e:	46bd      	mov	sp, r7
 8016420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016424:	4770      	bx	lr

08016426 <_ZSt14__copy_move_a1ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
 8016426:	b580      	push	{r7, lr}
 8016428:	b084      	sub	sp, #16
 801642a:	af00      	add	r7, sp, #0
 801642c:	60f8      	str	r0, [r7, #12]
 801642e:	60b9      	str	r1, [r7, #8]
 8016430:	607a      	str	r2, [r7, #4]
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 8016432:	687a      	ldr	r2, [r7, #4]
 8016434:	68b9      	ldr	r1, [r7, #8]
 8016436:	68f8      	ldr	r0, [r7, #12]
 8016438:	f000 f821 	bl	801647e <_ZSt14__copy_move_a2ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 801643c:	4603      	mov	r3, r0
 801643e:	4618      	mov	r0, r3
 8016440:	3710      	adds	r7, #16
 8016442:	46bd      	mov	sp, r7
 8016444:	bd80      	pop	{r7, pc}

08016446 <_ZSt12__niter_wrapIPPPK7XFEventET_RKS5_S5_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
 8016446:	b480      	push	{r7}
 8016448:	b083      	sub	sp, #12
 801644a:	af00      	add	r7, sp, #0
 801644c:	6078      	str	r0, [r7, #4]
 801644e:	6039      	str	r1, [r7, #0]
    { return __res; }
 8016450:	683b      	ldr	r3, [r7, #0]
 8016452:	4618      	mov	r0, r3
 8016454:	370c      	adds	r7, #12
 8016456:	46bd      	mov	sp, r7
 8016458:	f85d 7b04 	ldr.w	r7, [sp], #4
 801645c:	4770      	bx	lr

0801645e <_ZSt23__copy_move_backward_a1ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 801645e:	b580      	push	{r7, lr}
 8016460:	b084      	sub	sp, #16
 8016462:	af00      	add	r7, sp, #0
 8016464:	60f8      	str	r0, [r7, #12]
 8016466:	60b9      	str	r1, [r7, #8]
 8016468:	607a      	str	r2, [r7, #4]
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 801646a:	687a      	ldr	r2, [r7, #4]
 801646c:	68b9      	ldr	r1, [r7, #8]
 801646e:	68f8      	ldr	r0, [r7, #12]
 8016470:	f000 f815 	bl	801649e <_ZSt23__copy_move_backward_a2ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>
 8016474:	4603      	mov	r3, r0
 8016476:	4618      	mov	r0, r3
 8016478:	3710      	adds	r7, #16
 801647a:	46bd      	mov	sp, r7
 801647c:	bd80      	pop	{r7, pc}

0801647e <_ZSt14__copy_move_a2ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
 801647e:	b580      	push	{r7, lr}
 8016480:	b084      	sub	sp, #16
 8016482:	af00      	add	r7, sp, #0
 8016484:	60f8      	str	r0, [r7, #12]
 8016486:	60b9      	str	r1, [r7, #8]
 8016488:	607a      	str	r2, [r7, #4]
			      _Category>::__copy_m(__first, __last, __result);
 801648a:	687a      	ldr	r2, [r7, #4]
 801648c:	68b9      	ldr	r1, [r7, #8]
 801648e:	68f8      	ldr	r0, [r7, #12]
 8016490:	f000 f815 	bl	80164be <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPK7XFEventEEPT_PKS7_SA_S8_>
 8016494:	4603      	mov	r3, r0
    }
 8016496:	4618      	mov	r0, r3
 8016498:	3710      	adds	r7, #16
 801649a:	46bd      	mov	sp, r7
 801649c:	bd80      	pop	{r7, pc}

0801649e <_ZSt23__copy_move_backward_a2ILb0EPPPK7XFEventS4_ET1_T0_S6_S5_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 801649e:	b580      	push	{r7, lr}
 80164a0:	b084      	sub	sp, #16
 80164a2:	af00      	add	r7, sp, #0
 80164a4:	60f8      	str	r0, [r7, #12]
 80164a6:	60b9      	str	r1, [r7, #8]
 80164a8:	607a      	str	r2, [r7, #4]
				       _Category>::__copy_move_b(__first,
 80164aa:	687a      	ldr	r2, [r7, #4]
 80164ac:	68b9      	ldr	r1, [r7, #8]
 80164ae:	68f8      	ldr	r0, [r7, #12]
 80164b0:	f000 f822 	bl	80164f8 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPK7XFEventEEPT_PKS7_SA_S8_>
 80164b4:	4603      	mov	r3, r0
    }
 80164b6:	4618      	mov	r0, r3
 80164b8:	3710      	adds	r7, #16
 80164ba:	46bd      	mov	sp, r7
 80164bc:	bd80      	pop	{r7, pc}

080164be <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPK7XFEventEEPT_PKS7_SA_S8_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 80164be:	b580      	push	{r7, lr}
 80164c0:	b086      	sub	sp, #24
 80164c2:	af00      	add	r7, sp, #0
 80164c4:	60f8      	str	r0, [r7, #12]
 80164c6:	60b9      	str	r1, [r7, #8]
 80164c8:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 80164ca:	68ba      	ldr	r2, [r7, #8]
 80164cc:	68fb      	ldr	r3, [r7, #12]
 80164ce:	1ad3      	subs	r3, r2, r3
 80164d0:	109b      	asrs	r3, r3, #2
 80164d2:	617b      	str	r3, [r7, #20]
	  if (_Num)
 80164d4:	697b      	ldr	r3, [r7, #20]
 80164d6:	2b00      	cmp	r3, #0
 80164d8:	d006      	beq.n	80164e8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPPK7XFEventEEPT_PKS7_SA_S8_+0x2a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 80164da:	697b      	ldr	r3, [r7, #20]
 80164dc:	009b      	lsls	r3, r3, #2
 80164de:	461a      	mov	r2, r3
 80164e0:	68f9      	ldr	r1, [r7, #12]
 80164e2:	6878      	ldr	r0, [r7, #4]
 80164e4:	f015 fd8c 	bl	802c000 <memmove>
	  return __result + _Num;
 80164e8:	697b      	ldr	r3, [r7, #20]
 80164ea:	009b      	lsls	r3, r3, #2
 80164ec:	687a      	ldr	r2, [r7, #4]
 80164ee:	4413      	add	r3, r2
	}
 80164f0:	4618      	mov	r0, r3
 80164f2:	3718      	adds	r7, #24
 80164f4:	46bd      	mov	sp, r7
 80164f6:	bd80      	pop	{r7, pc}

080164f8 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPK7XFEventEEPT_PKS7_SA_S8_>:
	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 80164f8:	b580      	push	{r7, lr}
 80164fa:	b086      	sub	sp, #24
 80164fc:	af00      	add	r7, sp, #0
 80164fe:	60f8      	str	r0, [r7, #12]
 8016500:	60b9      	str	r1, [r7, #8]
 8016502:	607a      	str	r2, [r7, #4]
	  const ptrdiff_t _Num = __last - __first;
 8016504:	68ba      	ldr	r2, [r7, #8]
 8016506:	68fb      	ldr	r3, [r7, #12]
 8016508:	1ad3      	subs	r3, r2, r3
 801650a:	109b      	asrs	r3, r3, #2
 801650c:	617b      	str	r3, [r7, #20]
	  if (_Num)
 801650e:	697b      	ldr	r3, [r7, #20]
 8016510:	2b00      	cmp	r3, #0
 8016512:	d00a      	beq.n	801652a <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPPK7XFEventEEPT_PKS7_SA_S8_+0x32>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 8016514:	697b      	ldr	r3, [r7, #20]
 8016516:	009b      	lsls	r3, r3, #2
 8016518:	425b      	negs	r3, r3
 801651a:	687a      	ldr	r2, [r7, #4]
 801651c:	18d0      	adds	r0, r2, r3
 801651e:	697b      	ldr	r3, [r7, #20]
 8016520:	009b      	lsls	r3, r3, #2
 8016522:	461a      	mov	r2, r3
 8016524:	68f9      	ldr	r1, [r7, #12]
 8016526:	f015 fd6b 	bl	802c000 <memmove>
	  return __result - _Num;
 801652a:	697b      	ldr	r3, [r7, #20]
 801652c:	009b      	lsls	r3, r3, #2
 801652e:	425b      	negs	r3, r3
 8016530:	687a      	ldr	r2, [r7, #4]
 8016532:	4413      	add	r3, r2
	}
 8016534:	4618      	mov	r0, r3
 8016536:	3718      	adds	r7, #24
 8016538:	46bd      	mov	sp, r7
 801653a:	bd80      	pop	{r7, pc}

0801653c <_ZN9interface7XFMutex6createEv>:

/**
 * @brief Implementation of interface::XFMutex::create method.
 */
interface::XFMutex * interface::XFMutex::create()
{
 801653c:	b598      	push	{r3, r4, r7, lr}
 801653e:	af00      	add	r7, sp, #0
    return new XFMutexDefault;
 8016540:	2004      	movs	r0, #4
 8016542:	f015 faa1 	bl	802ba88 <_Znwj>
 8016546:	4603      	mov	r3, r0
 8016548:	461c      	mov	r4, r3
 801654a:	4620      	mov	r0, r4
 801654c:	f000 f834 	bl	80165b8 <_ZN14XFMutexDefaultC1Ev>
 8016550:	4623      	mov	r3, r4
}
 8016552:	4618      	mov	r0, r3
 8016554:	bd98      	pop	{r3, r4, r7, pc}
	...

08016558 <_ZN9interface7XFMutexC1Ev>:
     *   You cannot instanciate an object of an abstract class!
     */
    static XFMutex * create();

protected:
    XFMutex() = default;
 8016558:	b480      	push	{r7}
 801655a:	b083      	sub	sp, #12
 801655c:	af00      	add	r7, sp, #0
 801655e:	6078      	str	r0, [r7, #4]
 8016560:	4a04      	ldr	r2, [pc, #16]	; (8016574 <_ZN9interface7XFMutexC1Ev+0x1c>)
 8016562:	687b      	ldr	r3, [r7, #4]
 8016564:	601a      	str	r2, [r3, #0]
 8016566:	687b      	ldr	r3, [r7, #4]
 8016568:	4618      	mov	r0, r3
 801656a:	370c      	adds	r7, #12
 801656c:	46bd      	mov	sp, r7
 801656e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016572:	4770      	bx	lr
 8016574:	0802fa94 	.word	0x0802fa94

08016578 <_ZN9interface7XFMutexD1Ev>:
    virtual ~XFMutex() = default;
 8016578:	b480      	push	{r7}
 801657a:	b083      	sub	sp, #12
 801657c:	af00      	add	r7, sp, #0
 801657e:	6078      	str	r0, [r7, #4]
 8016580:	4a04      	ldr	r2, [pc, #16]	; (8016594 <_ZN9interface7XFMutexD1Ev+0x1c>)
 8016582:	687b      	ldr	r3, [r7, #4]
 8016584:	601a      	str	r2, [r3, #0]
 8016586:	687b      	ldr	r3, [r7, #4]
 8016588:	4618      	mov	r0, r3
 801658a:	370c      	adds	r7, #12
 801658c:	46bd      	mov	sp, r7
 801658e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016592:	4770      	bx	lr
 8016594:	0802fa94 	.word	0x0802fa94

08016598 <_ZN9interface7XFMutexD0Ev>:
 8016598:	b580      	push	{r7, lr}
 801659a:	b082      	sub	sp, #8
 801659c:	af00      	add	r7, sp, #0
 801659e:	6078      	str	r0, [r7, #4]
 80165a0:	6878      	ldr	r0, [r7, #4]
 80165a2:	f7ff ffe9 	bl	8016578 <_ZN9interface7XFMutexD1Ev>
 80165a6:	2104      	movs	r1, #4
 80165a8:	6878      	ldr	r0, [r7, #4]
 80165aa:	f015 fa5c 	bl	802ba66 <_ZdlPvj>
 80165ae:	687b      	ldr	r3, [r7, #4]
 80165b0:	4618      	mov	r0, r3
 80165b2:	3708      	adds	r7, #8
 80165b4:	46bd      	mov	sp, r7
 80165b6:	bd80      	pop	{r7, pc}

080165b8 <_ZN14XFMutexDefaultC1Ev>:

XFMutexDefault::XFMutexDefault()
 80165b8:	b580      	push	{r7, lr}
 80165ba:	b082      	sub	sp, #8
 80165bc:	af00      	add	r7, sp, #0
 80165be:	6078      	str	r0, [r7, #4]
 80165c0:	687b      	ldr	r3, [r7, #4]
 80165c2:	4618      	mov	r0, r3
 80165c4:	f7ff ffc8 	bl	8016558 <_ZN9interface7XFMutexC1Ev>
 80165c8:	4a03      	ldr	r2, [pc, #12]	; (80165d8 <_ZN14XFMutexDefaultC1Ev+0x20>)
 80165ca:	687b      	ldr	r3, [r7, #4]
 80165cc:	601a      	str	r2, [r3, #0]
{
}
 80165ce:	687b      	ldr	r3, [r7, #4]
 80165d0:	4618      	mov	r0, r3
 80165d2:	3708      	adds	r7, #8
 80165d4:	46bd      	mov	sp, r7
 80165d6:	bd80      	pop	{r7, pc}
 80165d8:	0802fa78 	.word	0x0802fa78

080165dc <_ZN14XFMutexDefaultD1Ev>:

XFMutexDefault::~XFMutexDefault()
 80165dc:	b580      	push	{r7, lr}
 80165de:	b082      	sub	sp, #8
 80165e0:	af00      	add	r7, sp, #0
 80165e2:	6078      	str	r0, [r7, #4]
 80165e4:	4a05      	ldr	r2, [pc, #20]	; (80165fc <_ZN14XFMutexDefaultD1Ev+0x20>)
 80165e6:	687b      	ldr	r3, [r7, #4]
 80165e8:	601a      	str	r2, [r3, #0]
 80165ea:	687b      	ldr	r3, [r7, #4]
 80165ec:	4618      	mov	r0, r3
 80165ee:	f7ff ffc3 	bl	8016578 <_ZN9interface7XFMutexD1Ev>
{
}
 80165f2:	687b      	ldr	r3, [r7, #4]
 80165f4:	4618      	mov	r0, r3
 80165f6:	3708      	adds	r7, #8
 80165f8:	46bd      	mov	sp, r7
 80165fa:	bd80      	pop	{r7, pc}
 80165fc:	0802fa78 	.word	0x0802fa78

08016600 <_ZN14XFMutexDefaultD0Ev>:
XFMutexDefault::~XFMutexDefault()
 8016600:	b580      	push	{r7, lr}
 8016602:	b082      	sub	sp, #8
 8016604:	af00      	add	r7, sp, #0
 8016606:	6078      	str	r0, [r7, #4]
}
 8016608:	6878      	ldr	r0, [r7, #4]
 801660a:	f7ff ffe7 	bl	80165dc <_ZN14XFMutexDefaultD1Ev>
 801660e:	2104      	movs	r1, #4
 8016610:	6878      	ldr	r0, [r7, #4]
 8016612:	f015 fa28 	bl	802ba66 <_ZdlPvj>
 8016616:	687b      	ldr	r3, [r7, #4]
 8016618:	4618      	mov	r0, r3
 801661a:	3708      	adds	r7, #8
 801661c:	46bd      	mov	sp, r7
 801661e:	bd80      	pop	{r7, pc}

08016620 <_ZN14XFMutexDefault4lockEv>:

void XFMutexDefault::lock()
{
 8016620:	b580      	push	{r7, lr}
 8016622:	b082      	sub	sp, #8
 8016624:	af00      	add	r7, sp, #0
 8016626:	6078      	str	r0, [r7, #4]
	critical_enter();
 8016628:	f7fd f838 	bl	801369c <critical_enter>
}
 801662c:	bf00      	nop
 801662e:	3708      	adds	r7, #8
 8016630:	46bd      	mov	sp, r7
 8016632:	bd80      	pop	{r7, pc}

08016634 <_ZN14XFMutexDefault6unlockEv>:


void XFMutexDefault::unlock()
{
 8016634:	b580      	push	{r7, lr}
 8016636:	b082      	sub	sp, #8
 8016638:	af00      	add	r7, sp, #0
 801663a:	6078      	str	r0, [r7, #4]
	critical_exit();
 801663c:	f7fd f84e 	bl	80136dc <critical_exit>
}
 8016640:	bf00      	nop
 8016642:	3708      	adds	r7, #8
 8016644:	46bd      	mov	sp, r7
 8016646:	bd80      	pop	{r7, pc}

08016648 <_ZN14XFMutexDefault7tryLockEl>:

bool XFMutexDefault::tryLock(int32_t timeout /* = 0 */)
{
 8016648:	b480      	push	{r7}
 801664a:	b083      	sub	sp, #12
 801664c:	af00      	add	r7, sp, #0
 801664e:	6078      	str	r0, [r7, #4]
 8016650:	6039      	str	r1, [r7, #0]
	return true;	// Always allow
 8016652:	2301      	movs	r3, #1
}
 8016654:	4618      	mov	r0, r3
 8016656:	370c      	adds	r7, #12
 8016658:	46bd      	mov	sp, r7
 801665a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801665e:	4770      	bx	lr

08016660 <XF_startTimeoutManagerTimer>:
 * This means that changes in 'tickInterval' needs to be handled elsewhere
 * using the XF_tickIntervalInMilliseconds() function.
 */

void XF_startTimeoutManagerTimer(uint32_t tickInterval)
{
 8016660:	b480      	push	{r7}
 8016662:	b083      	sub	sp, #12
 8016664:	af00      	add	r7, sp, #0
 8016666:	6078      	str	r0, [r7, #4]
    (void)tickInterval;

    // SysTick gets already started by the STM32CubeMX HAL.
    // So nothing to do here.
}
 8016668:	bf00      	nop
 801666a:	370c      	adds	r7, #12
 801666c:	46bd      	mov	sp, r7
 801666e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8016672:	4770      	bx	lr

08016674 <XF_tick>:
 * SysTick_Handler() function is already implemented in the STM32CubeMX generated
 * code (see Src/stm32fxxx_it.c file). Therefore, we must provide here a function
 * which can be explicitly called in SysTick_Handler() to tick the XF.
 */
void XF_tick()
{
 8016674:	b580      	push	{r7, lr}
 8016676:	af00      	add	r7, sp, #0
    critical_setInIsr(true);                        // Tell critical section we are in an ISR
 8016678:	2001      	movs	r0, #1
 801667a:	f7fd f85b 	bl	8013734 <critical_setInIsr>
	if (XF::isRunning())                            // Call tick only if XF is running
 801667e:	f7fe ff13 	bl	80154a8 <_ZN2XF9isRunningEv>
 8016682:	4603      	mov	r3, r0
 8016684:	2b00      	cmp	r3, #0
 8016686:	d007      	beq.n	8016698 <XF_tick+0x24>
	{
	    XFTimeoutManager::getInstance()->tick();    // Call framework hook tick function
 8016688:	f7fd ff30 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 801668c:	4603      	mov	r3, r0
 801668e:	681a      	ldr	r2, [r3, #0]
 8016690:	321c      	adds	r2, #28
 8016692:	6812      	ldr	r2, [r2, #0]
 8016694:	4618      	mov	r0, r3
 8016696:	4790      	blx	r2
	}
	critical_setInIsr(false);                       // Tell critical section we are leaving the ISR
 8016698:	2000      	movs	r0, #0
 801669a:	f7fd f84b 	bl	8013734 <critical_setInIsr>
}
 801669e:	bf00      	nop
 80166a0:	bd80      	pop	{r7, pc}

080166a2 <XF_tickIntervalInMilliseconds>:

/**
 * C function wrapping getTickInterval() method of XFTimeoutManager.
 */
int32_t XF_tickIntervalInMilliseconds()
{
 80166a2:	b580      	push	{r7, lr}
 80166a4:	af00      	add	r7, sp, #0
    return XFTimeoutManager::getInstance()->getTickInterval();
 80166a6:	f7fd ff21 	bl	80144ec <_ZN9interface16XFTimeoutManager11getInstanceEv>
 80166aa:	4603      	mov	r3, r0
 80166ac:	681a      	ldr	r2, [r3, #0]
 80166ae:	320c      	adds	r2, #12
 80166b0:	6812      	ldr	r2, [r2, #0]
 80166b2:	4618      	mov	r0, r3
 80166b4:	4790      	blx	r2
 80166b6:	4603      	mov	r3, r0
}
 80166b8:	4618      	mov	r0, r3
 80166ba:	bd80      	pop	{r7, pc}

080166bc <XF_isRunning>:

bool XF_isRunning()
{
 80166bc:	b580      	push	{r7, lr}
 80166be:	af00      	add	r7, sp, #0
    return XF::isRunning();
 80166c0:	f7fe fef2 	bl	80154a8 <_ZN2XF9isRunningEv>
 80166c4:	4603      	mov	r3, r0
}
 80166c6:	4618      	mov	r0, r3
 80166c8:	bd80      	pop	{r7, pc}

080166ca <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80166ca:	8880      	ldrh	r0, [r0, #4]
 80166cc:	4770      	bx	lr

080166ce <_ZN8touchgfx17AbstractPartition5clearEv>:
 80166ce:	2300      	movs	r3, #0
 80166d0:	8083      	strh	r3, [r0, #4]
 80166d2:	4770      	bx	lr

080166d4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80166d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80166d6:	6803      	ldr	r3, [r0, #0]
 80166d8:	460e      	mov	r6, r1
 80166da:	2100      	movs	r1, #0
 80166dc:	4605      	mov	r5, r0
 80166de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80166e0:	4798      	blx	r3
 80166e2:	4604      	mov	r4, r0
 80166e4:	682b      	ldr	r3, [r5, #0]
 80166e6:	4628      	mov	r0, r5
 80166e8:	1b34      	subs	r4, r6, r4
 80166ea:	6a1b      	ldr	r3, [r3, #32]
 80166ec:	b2a4      	uxth	r4, r4
 80166ee:	4798      	blx	r3
 80166f0:	88ab      	ldrh	r3, [r5, #4]
 80166f2:	fbb4 f4f0 	udiv	r4, r4, r0
 80166f6:	42a3      	cmp	r3, r4
 80166f8:	d805      	bhi.n	8016706 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80166fa:	4b0e      	ldr	r3, [pc, #56]	; (8016734 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80166fc:	2120      	movs	r1, #32
 80166fe:	4a0e      	ldr	r2, [pc, #56]	; (8016738 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8016700:	480e      	ldr	r0, [pc, #56]	; (801673c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8016702:	f015 fbf1 	bl	802bee8 <__assert_func>
 8016706:	682b      	ldr	r3, [r5, #0]
 8016708:	2100      	movs	r1, #0
 801670a:	4628      	mov	r0, r5
 801670c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801670e:	4798      	blx	r3
 8016710:	682b      	ldr	r3, [r5, #0]
 8016712:	4607      	mov	r7, r0
 8016714:	4628      	mov	r0, r5
 8016716:	6a1b      	ldr	r3, [r3, #32]
 8016718:	4798      	blx	r3
 801671a:	1bf3      	subs	r3, r6, r7
 801671c:	b29b      	uxth	r3, r3
 801671e:	fbb3 f2f0 	udiv	r2, r3, r0
 8016722:	fb02 3010 	mls	r0, r2, r0, r3
 8016726:	b118      	cbz	r0, 8016730 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8016728:	4b05      	ldr	r3, [pc, #20]	; (8016740 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 801672a:	2121      	movs	r1, #33	; 0x21
 801672c:	4a02      	ldr	r2, [pc, #8]	; (8016738 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 801672e:	e7e7      	b.n	8016700 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8016730:	4620      	mov	r0, r4
 8016732:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016734:	0802faa8 	.word	0x0802faa8
 8016738:	0802fc16 	.word	0x0802fc16
 801673c:	0802fabd 	.word	0x0802fabd
 8016740:	0802faeb 	.word	0x0802faeb

08016744 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8016744:	b538      	push	{r3, r4, r5, lr}
 8016746:	6803      	ldr	r3, [r0, #0]
 8016748:	460d      	mov	r5, r1
 801674a:	4604      	mov	r4, r0
 801674c:	6a1b      	ldr	r3, [r3, #32]
 801674e:	4798      	blx	r3
 8016750:	4285      	cmp	r5, r0
 8016752:	d905      	bls.n	8016760 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8016754:	4b0c      	ldr	r3, [pc, #48]	; (8016788 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8016756:	2132      	movs	r1, #50	; 0x32
 8016758:	4a0c      	ldr	r2, [pc, #48]	; (801678c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 801675a:	480d      	ldr	r0, [pc, #52]	; (8016790 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 801675c:	f015 fbc4 	bl	802bee8 <__assert_func>
 8016760:	6823      	ldr	r3, [r4, #0]
 8016762:	4620      	mov	r0, r4
 8016764:	88a5      	ldrh	r5, [r4, #4]
 8016766:	69db      	ldr	r3, [r3, #28]
 8016768:	4798      	blx	r3
 801676a:	4285      	cmp	r5, r0
 801676c:	d303      	bcc.n	8016776 <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 801676e:	4b09      	ldr	r3, [pc, #36]	; (8016794 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8016770:	2133      	movs	r1, #51	; 0x33
 8016772:	4a06      	ldr	r2, [pc, #24]	; (801678c <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8016774:	e7f1      	b.n	801675a <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8016776:	6823      	ldr	r3, [r4, #0]
 8016778:	4620      	mov	r0, r4
 801677a:	88a1      	ldrh	r1, [r4, #4]
 801677c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801677e:	4798      	blx	r3
 8016780:	88a3      	ldrh	r3, [r4, #4]
 8016782:	3301      	adds	r3, #1
 8016784:	80a3      	strh	r3, [r4, #4]
 8016786:	bd38      	pop	{r3, r4, r5, pc}
 8016788:	0802fb65 	.word	0x0802fb65
 801678c:	0802fc59 	.word	0x0802fc59
 8016790:	0802fabd 	.word	0x0802fabd
 8016794:	0802fb7c 	.word	0x0802fb7c

08016798 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8016798:	b570      	push	{r4, r5, r6, lr}
 801679a:	6803      	ldr	r3, [r0, #0]
 801679c:	4616      	mov	r6, r2
 801679e:	4604      	mov	r4, r0
 80167a0:	460d      	mov	r5, r1
 80167a2:	6a1b      	ldr	r3, [r3, #32]
 80167a4:	4798      	blx	r3
 80167a6:	4286      	cmp	r6, r0
 80167a8:	d905      	bls.n	80167b6 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 80167aa:	4b06      	ldr	r3, [pc, #24]	; (80167c4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 80167ac:	213c      	movs	r1, #60	; 0x3c
 80167ae:	4a06      	ldr	r2, [pc, #24]	; (80167c8 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 80167b0:	4806      	ldr	r0, [pc, #24]	; (80167cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 80167b2:	f015 fb99 	bl	802bee8 <__assert_func>
 80167b6:	6823      	ldr	r3, [r4, #0]
 80167b8:	4629      	mov	r1, r5
 80167ba:	4620      	mov	r0, r4
 80167bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80167be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80167c2:	4718      	bx	r3
 80167c4:	0802fb65 	.word	0x0802fb65
 80167c8:	0802fbcc 	.word	0x0802fbcc
 80167cc:	0802fabd 	.word	0x0802fabd

080167d0 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80167d0:	4770      	bx	lr
	...

080167d4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80167d4:	4a02      	ldr	r2, [pc, #8]	; (80167e0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80167d6:	6002      	str	r2, [r0, #0]
 80167d8:	2200      	movs	r2, #0
 80167da:	8082      	strh	r2, [r0, #4]
 80167dc:	4770      	bx	lr
 80167de:	bf00      	nop
 80167e0:	0802fba0 	.word	0x0802fba0

080167e4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80167e4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80167e6:	2000      	movs	r0, #0
 80167e8:	b12b      	cbz	r3, 80167f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80167ea:	b920      	cbnz	r0, 80167f6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80167ec:	1a5a      	subs	r2, r3, r1
 80167ee:	699b      	ldr	r3, [r3, #24]
 80167f0:	4250      	negs	r0, r2
 80167f2:	4150      	adcs	r0, r2
 80167f4:	e7f8      	b.n	80167e8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80167f6:	4770      	bx	lr

080167f8 <_ZN8touchgfx9Container9removeAllEv>:
 80167f8:	2200      	movs	r2, #0
 80167fa:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80167fc:	b123      	cbz	r3, 8016808 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80167fe:	6999      	ldr	r1, [r3, #24]
 8016800:	6281      	str	r1, [r0, #40]	; 0x28
 8016802:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8016806:	e7f8      	b.n	80167fa <_ZN8touchgfx9Container9removeAllEv+0x2>
 8016808:	4770      	bx	lr

0801680a <_ZN8touchgfx9Container6unlinkEv>:
 801680a:	2300      	movs	r3, #0
 801680c:	6283      	str	r3, [r0, #40]	; 0x28
 801680e:	4770      	bx	lr

08016810 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8016810:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016814:	461f      	mov	r7, r3
 8016816:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801681a:	460d      	mov	r5, r1
 801681c:	4616      	mov	r6, r2
 801681e:	b103      	cbz	r3, 8016822 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8016820:	6038      	str	r0, [r7, #0]
 8016822:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8016824:	b314      	cbz	r4, 801686c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8016826:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801682a:	b1eb      	cbz	r3, 8016868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801682c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016830:	428d      	cmp	r5, r1
 8016832:	db19      	blt.n	8016868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8016834:	b289      	uxth	r1, r1
 8016836:	8923      	ldrh	r3, [r4, #8]
 8016838:	440b      	add	r3, r1
 801683a:	b21b      	sxth	r3, r3
 801683c:	429d      	cmp	r5, r3
 801683e:	da13      	bge.n	8016868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8016840:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016844:	4296      	cmp	r6, r2
 8016846:	db0f      	blt.n	8016868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8016848:	b292      	uxth	r2, r2
 801684a:	8963      	ldrh	r3, [r4, #10]
 801684c:	4413      	add	r3, r2
 801684e:	b21b      	sxth	r3, r3
 8016850:	429e      	cmp	r6, r3
 8016852:	da09      	bge.n	8016868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8016854:	6823      	ldr	r3, [r4, #0]
 8016856:	1ab2      	subs	r2, r6, r2
 8016858:	1a69      	subs	r1, r5, r1
 801685a:	4620      	mov	r0, r4
 801685c:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8016860:	b212      	sxth	r2, r2
 8016862:	463b      	mov	r3, r7
 8016864:	b209      	sxth	r1, r1
 8016866:	47c0      	blx	r8
 8016868:	69a4      	ldr	r4, [r4, #24]
 801686a:	e7db      	b.n	8016824 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 801686c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016870 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8016870:	2200      	movs	r2, #0
 8016872:	8002      	strh	r2, [r0, #0]
 8016874:	8042      	strh	r2, [r0, #2]
 8016876:	8082      	strh	r2, [r0, #4]
 8016878:	80c2      	strh	r2, [r0, #6]
 801687a:	4770      	bx	lr

0801687c <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801687c:	b570      	push	{r4, r5, r6, lr}
 801687e:	460d      	mov	r5, r1
 8016880:	4616      	mov	r6, r2
 8016882:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8016884:	b13c      	cbz	r4, 8016896 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8016886:	6823      	ldr	r3, [r4, #0]
 8016888:	4620      	mov	r0, r4
 801688a:	4632      	mov	r2, r6
 801688c:	4629      	mov	r1, r5
 801688e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8016890:	4798      	blx	r3
 8016892:	69a4      	ldr	r4, [r4, #24]
 8016894:	e7f6      	b.n	8016884 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8016896:	bd70      	pop	{r4, r5, r6, pc}

08016898 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8016898:	b538      	push	{r3, r4, r5, lr}
 801689a:	460d      	mov	r5, r1
 801689c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801689e:	b134      	cbz	r4, 80168ae <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80168a0:	682b      	ldr	r3, [r5, #0]
 80168a2:	4621      	mov	r1, r4
 80168a4:	4628      	mov	r0, r5
 80168a6:	689b      	ldr	r3, [r3, #8]
 80168a8:	4798      	blx	r3
 80168aa:	69a4      	ldr	r4, [r4, #24]
 80168ac:	e7f7      	b.n	801689e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80168ae:	bd38      	pop	{r3, r4, r5, pc}

080168b0 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80168b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80168b2:	b19b      	cbz	r3, 80168dc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80168b4:	428b      	cmp	r3, r1
 80168b6:	d109      	bne.n	80168cc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80168b8:	699a      	ldr	r2, [r3, #24]
 80168ba:	2100      	movs	r1, #0
 80168bc:	6159      	str	r1, [r3, #20]
 80168be:	6282      	str	r2, [r0, #40]	; 0x28
 80168c0:	b902      	cbnz	r2, 80168c4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80168c2:	4770      	bx	lr
 80168c4:	6199      	str	r1, [r3, #24]
 80168c6:	4770      	bx	lr
 80168c8:	4613      	mov	r3, r2
 80168ca:	b13a      	cbz	r2, 80168dc <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80168cc:	699a      	ldr	r2, [r3, #24]
 80168ce:	428a      	cmp	r2, r1
 80168d0:	d1fa      	bne.n	80168c8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80168d2:	698a      	ldr	r2, [r1, #24]
 80168d4:	619a      	str	r2, [r3, #24]
 80168d6:	2300      	movs	r3, #0
 80168d8:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80168dc:	4770      	bx	lr

080168de <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80168de:	b410      	push	{r4}
 80168e0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80168e2:	4604      	mov	r4, r0
 80168e4:	b92b      	cbnz	r3, 80168f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80168e6:	6803      	ldr	r3, [r0, #0]
 80168e8:	4611      	mov	r1, r2
 80168ea:	f85d 4b04 	ldr.w	r4, [sp], #4
 80168ee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80168f0:	4718      	bx	r3
 80168f2:	b941      	cbnz	r1, 8016906 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80168f4:	6193      	str	r3, [r2, #24]
 80168f6:	6282      	str	r2, [r0, #40]	; 0x28
 80168f8:	6154      	str	r4, [r2, #20]
 80168fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80168fe:	4770      	bx	lr
 8016900:	4603      	mov	r3, r0
 8016902:	2800      	cmp	r0, #0
 8016904:	d0f9      	beq.n	80168fa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8016906:	4299      	cmp	r1, r3
 8016908:	6998      	ldr	r0, [r3, #24]
 801690a:	d1f9      	bne.n	8016900 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801690c:	6190      	str	r0, [r2, #24]
 801690e:	618a      	str	r2, [r1, #24]
 8016910:	e7f2      	b.n	80168f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8016914:	4288      	cmp	r0, r1
 8016916:	b508      	push	{r3, lr}
 8016918:	d105      	bne.n	8016926 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 801691a:	4b11      	ldr	r3, [pc, #68]	; (8016960 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 801691c:	2123      	movs	r1, #35	; 0x23
 801691e:	4a11      	ldr	r2, [pc, #68]	; (8016964 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8016920:	4811      	ldr	r0, [pc, #68]	; (8016968 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8016922:	f015 fae1 	bl	802bee8 <__assert_func>
 8016926:	694b      	ldr	r3, [r1, #20]
 8016928:	b11b      	cbz	r3, 8016932 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 801692a:	4b10      	ldr	r3, [pc, #64]	; (801696c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 801692c:	2124      	movs	r1, #36	; 0x24
 801692e:	4a0d      	ldr	r2, [pc, #52]	; (8016964 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8016930:	e7f6      	b.n	8016920 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8016932:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8016936:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8016938:	b913      	cbnz	r3, 8016940 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 801693a:	6281      	str	r1, [r0, #40]	; 0x28
 801693c:	bd08      	pop	{r3, pc}
 801693e:	4613      	mov	r3, r2
 8016940:	699a      	ldr	r2, [r3, #24]
 8016942:	b12a      	cbz	r2, 8016950 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8016944:	428b      	cmp	r3, r1
 8016946:	d1fa      	bne.n	801693e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8016948:	4b09      	ldr	r3, [pc, #36]	; (8016970 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 801694a:	2135      	movs	r1, #53	; 0x35
 801694c:	4a05      	ldr	r2, [pc, #20]	; (8016964 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801694e:	e7e7      	b.n	8016920 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8016950:	428b      	cmp	r3, r1
 8016952:	d103      	bne.n	801695c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8016954:	4b06      	ldr	r3, [pc, #24]	; (8016970 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8016956:	2138      	movs	r1, #56	; 0x38
 8016958:	4a02      	ldr	r2, [pc, #8]	; (8016964 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 801695a:	e7e1      	b.n	8016920 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 801695c:	6199      	str	r1, [r3, #24]
 801695e:	e7ed      	b.n	801693c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8016960:	0802fc97 	.word	0x0802fc97
 8016964:	0802fde8 	.word	0x0802fde8
 8016968:	0802fcc3 	.word	0x0802fcc3
 801696c:	0802fcf6 	.word	0x0802fcf6
 8016970:	0802fd2c 	.word	0x0802fd2c

08016974 <_ZN8touchgfx4RectaNERKS0_>:
 8016974:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016978:	f9b1 7000 	ldrsh.w	r7, [r1]
 801697c:	888c      	ldrh	r4, [r1, #4]
 801697e:	f9b0 9000 	ldrsh.w	r9, [r0]
 8016982:	443c      	add	r4, r7
 8016984:	b2a4      	uxth	r4, r4
 8016986:	fa0f f884 	sxth.w	r8, r4
 801698a:	45c1      	cmp	r9, r8
 801698c:	da2f      	bge.n	80169ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801698e:	8882      	ldrh	r2, [r0, #4]
 8016990:	444a      	add	r2, r9
 8016992:	b292      	uxth	r2, r2
 8016994:	fa0f fe82 	sxth.w	lr, r2
 8016998:	4577      	cmp	r7, lr
 801699a:	da28      	bge.n	80169ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801699c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80169a0:	88cb      	ldrh	r3, [r1, #6]
 80169a2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 80169a6:	442b      	add	r3, r5
 80169a8:	b21b      	sxth	r3, r3
 80169aa:	429e      	cmp	r6, r3
 80169ac:	da1f      	bge.n	80169ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80169ae:	88c3      	ldrh	r3, [r0, #6]
 80169b0:	4433      	add	r3, r6
 80169b2:	b29b      	uxth	r3, r3
 80169b4:	fa0f fc83 	sxth.w	ip, r3
 80169b8:	4565      	cmp	r5, ip
 80169ba:	da18      	bge.n	80169ee <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80169bc:	454f      	cmp	r7, r9
 80169be:	bfb8      	it	lt
 80169c0:	464f      	movlt	r7, r9
 80169c2:	42b5      	cmp	r5, r6
 80169c4:	bfb8      	it	lt
 80169c6:	4635      	movlt	r5, r6
 80169c8:	45f0      	cmp	r8, lr
 80169ca:	bfd8      	it	le
 80169cc:	4622      	movle	r2, r4
 80169ce:	1bd2      	subs	r2, r2, r7
 80169d0:	8082      	strh	r2, [r0, #4]
 80169d2:	884a      	ldrh	r2, [r1, #2]
 80169d4:	88c9      	ldrh	r1, [r1, #6]
 80169d6:	8007      	strh	r7, [r0, #0]
 80169d8:	440a      	add	r2, r1
 80169da:	8045      	strh	r5, [r0, #2]
 80169dc:	b292      	uxth	r2, r2
 80169de:	b211      	sxth	r1, r2
 80169e0:	458c      	cmp	ip, r1
 80169e2:	bfa8      	it	ge
 80169e4:	4613      	movge	r3, r2
 80169e6:	1b5b      	subs	r3, r3, r5
 80169e8:	80c3      	strh	r3, [r0, #6]
 80169ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80169ee:	2300      	movs	r3, #0
 80169f0:	8003      	strh	r3, [r0, #0]
 80169f2:	8043      	strh	r3, [r0, #2]
 80169f4:	8083      	strh	r3, [r0, #4]
 80169f6:	80c3      	strh	r3, [r0, #6]
 80169f8:	e7f7      	b.n	80169ea <_ZN8touchgfx4RectaNERKS0_+0x76>

080169fa <_ZNK8touchgfx4Rect7isEmptyEv>:
 80169fa:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80169fe:	2b00      	cmp	r3, #0
 8016a00:	dd06      	ble.n	8016a10 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8016a02:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8016a06:	2800      	cmp	r0, #0
 8016a08:	bfcc      	ite	gt
 8016a0a:	2000      	movgt	r0, #0
 8016a0c:	2001      	movle	r0, #1
 8016a0e:	4770      	bx	lr
 8016a10:	2001      	movs	r0, #1
 8016a12:	4770      	bx	lr

08016a14 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8016a14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016a18:	2300      	movs	r3, #0
 8016a1a:	4604      	mov	r4, r0
 8016a1c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8016a1e:	8003      	strh	r3, [r0, #0]
 8016a20:	8043      	strh	r3, [r0, #2]
 8016a22:	8083      	strh	r3, [r0, #4]
 8016a24:	80c3      	strh	r3, [r0, #6]
 8016a26:	2d00      	cmp	r5, #0
 8016a28:	d040      	beq.n	8016aac <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8016a2a:	1d28      	adds	r0, r5, #4
 8016a2c:	f7ff ffe5 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a30:	b988      	cbnz	r0, 8016a56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8016a32:	4620      	mov	r0, r4
 8016a34:	f7ff ffe1 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8016a38:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8016a3c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016a40:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8016a44:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8016a48:	b138      	cbz	r0, 8016a5a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8016a4a:	8022      	strh	r2, [r4, #0]
 8016a4c:	8063      	strh	r3, [r4, #2]
 8016a4e:	f8a4 e004 	strh.w	lr, [r4, #4]
 8016a52:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016a56:	69ad      	ldr	r5, [r5, #24]
 8016a58:	e7e5      	b.n	8016a26 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8016a5a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016a5e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016a62:	4290      	cmp	r0, r2
 8016a64:	4607      	mov	r7, r0
 8016a66:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8016a6a:	460e      	mov	r6, r1
 8016a6c:	bfa8      	it	ge
 8016a6e:	4617      	movge	r7, r2
 8016a70:	4299      	cmp	r1, r3
 8016a72:	4472      	add	r2, lr
 8016a74:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8016a78:	bfa8      	it	ge
 8016a7a:	461e      	movge	r6, r3
 8016a7c:	4440      	add	r0, r8
 8016a7e:	4471      	add	r1, lr
 8016a80:	4463      	add	r3, ip
 8016a82:	b200      	sxth	r0, r0
 8016a84:	8027      	strh	r7, [r4, #0]
 8016a86:	b212      	sxth	r2, r2
 8016a88:	8066      	strh	r6, [r4, #2]
 8016a8a:	b209      	sxth	r1, r1
 8016a8c:	b21b      	sxth	r3, r3
 8016a8e:	4290      	cmp	r0, r2
 8016a90:	bfac      	ite	ge
 8016a92:	ebc7 0200 	rsbge	r2, r7, r0
 8016a96:	ebc7 0202 	rsblt	r2, r7, r2
 8016a9a:	4299      	cmp	r1, r3
 8016a9c:	bfac      	ite	ge
 8016a9e:	ebc6 0301 	rsbge	r3, r6, r1
 8016aa2:	ebc6 0303 	rsblt	r3, r6, r3
 8016aa6:	80a2      	strh	r2, [r4, #4]
 8016aa8:	80e3      	strh	r3, [r4, #6]
 8016aaa:	e7d4      	b.n	8016a56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8016aac:	4620      	mov	r0, r4
 8016aae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016ab2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8016ab2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8016ab6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8016aba:	b383      	cbz	r3, 8016b1e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8016abc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8016abe:	b374      	cbz	r4, 8016b1e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8016ac0:	f9b1 5000 	ldrsh.w	r5, [r1]
 8016ac4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8016ac8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8016acc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8016ad0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8016ad4:	b303      	cbz	r3, 8016b18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8016ad6:	4668      	mov	r0, sp
 8016ad8:	1d21      	adds	r1, r4, #4
 8016ada:	f8ad 5000 	strh.w	r5, [sp]
 8016ade:	f8ad 6002 	strh.w	r6, [sp, #2]
 8016ae2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8016ae6:	f8ad 8006 	strh.w	r8, [sp, #6]
 8016aea:	f7ff ff43 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8016aee:	4668      	mov	r0, sp
 8016af0:	f7ff ff83 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8016af4:	b980      	cbnz	r0, 8016b18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8016af6:	f8bd 3000 	ldrh.w	r3, [sp]
 8016afa:	4669      	mov	r1, sp
 8016afc:	88a2      	ldrh	r2, [r4, #4]
 8016afe:	4620      	mov	r0, r4
 8016b00:	1a9b      	subs	r3, r3, r2
 8016b02:	88e2      	ldrh	r2, [r4, #6]
 8016b04:	f8ad 3000 	strh.w	r3, [sp]
 8016b08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b0c:	1a9b      	subs	r3, r3, r2
 8016b0e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016b12:	6823      	ldr	r3, [r4, #0]
 8016b14:	689b      	ldr	r3, [r3, #8]
 8016b16:	4798      	blx	r3
 8016b18:	69a4      	ldr	r4, [r4, #24]
 8016b1a:	2c00      	cmp	r4, #0
 8016b1c:	d1d8      	bne.n	8016ad0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8016b1e:	b002      	add	sp, #8
 8016b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08016b24 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8016b24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016b26:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8016b2a:	460d      	mov	r5, r1
 8016b2c:	4616      	mov	r6, r2
 8016b2e:	b323      	cbz	r3, 8016b7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8016b30:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8016b32:	b314      	cbz	r4, 8016b7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8016b34:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8016b38:	b1eb      	cbz	r3, 8016b76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8016b3a:	6828      	ldr	r0, [r5, #0]
 8016b3c:	466b      	mov	r3, sp
 8016b3e:	6869      	ldr	r1, [r5, #4]
 8016b40:	c303      	stmia	r3!, {r0, r1}
 8016b42:	4668      	mov	r0, sp
 8016b44:	1d21      	adds	r1, r4, #4
 8016b46:	f7ff ff15 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8016b4a:	4668      	mov	r0, sp
 8016b4c:	f7ff ff55 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b50:	b988      	cbnz	r0, 8016b76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8016b52:	f8bd 3000 	ldrh.w	r3, [sp]
 8016b56:	4669      	mov	r1, sp
 8016b58:	88a2      	ldrh	r2, [r4, #4]
 8016b5a:	4620      	mov	r0, r4
 8016b5c:	1a9b      	subs	r3, r3, r2
 8016b5e:	88e2      	ldrh	r2, [r4, #6]
 8016b60:	f8ad 3000 	strh.w	r3, [sp]
 8016b64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016b68:	1a9b      	subs	r3, r3, r2
 8016b6a:	4632      	mov	r2, r6
 8016b6c:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016b70:	6823      	ldr	r3, [r4, #0]
 8016b72:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016b74:	4798      	blx	r3
 8016b76:	69a4      	ldr	r4, [r4, #24]
 8016b78:	e7db      	b.n	8016b32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8016b7a:	b002      	add	sp, #8
 8016b7c:	bd70      	pop	{r4, r5, r6, pc}

08016b7e <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8016b7e:	4770      	bx	lr

08016b80 <_ZN8touchgfx3HAL10FlushCacheEv>:
 8016b80:	4770      	bx	lr

08016b82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8016b82:	6803      	ldr	r3, [r0, #0]
 8016b84:	b513      	push	{r0, r1, r4, lr}
 8016b86:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8016b8a:	2300      	movs	r3, #0
 8016b8c:	e9cd 3300 	strd	r3, r3, [sp]
 8016b90:	466b      	mov	r3, sp
 8016b92:	47a0      	blx	r4
 8016b94:	b002      	add	sp, #8
 8016b96:	bd10      	pop	{r4, pc}

08016b98 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8016b98:	2301      	movs	r3, #1
 8016b9a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8016b9e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8016ba2:	4770      	bx	lr

08016ba4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8016ba4:	2301      	movs	r3, #1
 8016ba6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8016baa:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8016bae:	4770      	bx	lr

08016bb0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8016bb0:	6843      	ldr	r3, [r0, #4]
 8016bb2:	2201      	movs	r2, #1
 8016bb4:	725a      	strb	r2, [r3, #9]
 8016bb6:	6840      	ldr	r0, [r0, #4]
 8016bb8:	6803      	ldr	r3, [r0, #0]
 8016bba:	691b      	ldr	r3, [r3, #16]
 8016bbc:	4718      	bx	r3

08016bbe <_ZN8touchgfx3HAL8flushDMAEv>:
 8016bbe:	6840      	ldr	r0, [r0, #4]
 8016bc0:	6803      	ldr	r3, [r0, #0]
 8016bc2:	689b      	ldr	r3, [r3, #8]
 8016bc4:	4718      	bx	r3
	...

08016bc8 <_ZN8touchgfx3HAL10beginFrameEv>:
 8016bc8:	4b04      	ldr	r3, [pc, #16]	; (8016bdc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8016bca:	781b      	ldrb	r3, [r3, #0]
 8016bcc:	b123      	cbz	r3, 8016bd8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8016bce:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8016bd2:	f080 0001 	eor.w	r0, r0, #1
 8016bd6:	4770      	bx	lr
 8016bd8:	2001      	movs	r0, #1
 8016bda:	4770      	bx	lr
 8016bdc:	20004164 	.word	0x20004164

08016be0 <_ZN8touchgfx3HAL8endFrameEv>:
 8016be0:	b510      	push	{r4, lr}
 8016be2:	4604      	mov	r4, r0
 8016be4:	6840      	ldr	r0, [r0, #4]
 8016be6:	6803      	ldr	r3, [r0, #0]
 8016be8:	689b      	ldr	r3, [r3, #8]
 8016bea:	4798      	blx	r3
 8016bec:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8016bf0:	b113      	cbz	r3, 8016bf8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8016bf2:	2301      	movs	r3, #1
 8016bf4:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8016bf8:	bd10      	pop	{r4, pc}

08016bfa <_ZN8touchgfx3HAL9taskEntryEv>:
 8016bfa:	b508      	push	{r3, lr}
 8016bfc:	6803      	ldr	r3, [r0, #0]
 8016bfe:	4604      	mov	r4, r0
 8016c00:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8016c02:	4798      	blx	r3
 8016c04:	6823      	ldr	r3, [r4, #0]
 8016c06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8016c08:	4620      	mov	r0, r4
 8016c0a:	4798      	blx	r3
 8016c0c:	f7f8 ff76 	bl	800fafc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8016c10:	6823      	ldr	r3, [r4, #0]
 8016c12:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8016c14:	e7f8      	b.n	8016c08 <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

08016c18 <_ZN8touchgfx3HAL4tickEv>:
 8016c18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8016c1a:	6803      	ldr	r3, [r0, #0]
 8016c1c:	4604      	mov	r4, r0
 8016c1e:	4d5c      	ldr	r5, [pc, #368]	; (8016d90 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8016c20:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8016c24:	4798      	blx	r3
 8016c26:	2800      	cmp	r0, #0
 8016c28:	f000 8097 	beq.w	8016d5a <_ZN8touchgfx3HAL4tickEv+0x142>
 8016c2c:	2001      	movs	r0, #1
 8016c2e:	2600      	movs	r6, #0
 8016c30:	f7f8 fbca 	bl	800f3c8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8016c34:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8016c38:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8016c3c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8016c40:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8016c44:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8016c48:	b133      	cbz	r3, 8016c58 <_ZN8touchgfx3HAL4tickEv+0x40>
 8016c4a:	6823      	ldr	r3, [r4, #0]
 8016c4c:	4620      	mov	r0, r4
 8016c4e:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8016c52:	4798      	blx	r3
 8016c54:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8016c58:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8016c5c:	2601      	movs	r6, #1
 8016c5e:	6862      	ldr	r2, [r4, #4]
 8016c60:	f083 0301 	eor.w	r3, r3, #1
 8016c64:	702e      	strb	r6, [r5, #0]
 8016c66:	7253      	strb	r3, [r2, #9]
 8016c68:	f004 fc1c 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 8016c6c:	6803      	ldr	r3, [r0, #0]
 8016c6e:	4631      	mov	r1, r6
 8016c70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016c72:	4798      	blx	r3
 8016c74:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8016c78:	b90b      	cbnz	r3, 8016c7e <_ZN8touchgfx3HAL4tickEv+0x66>
 8016c7a:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8016c7e:	f004 fc11 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 8016c82:	6803      	ldr	r3, [r0, #0]
 8016c84:	695b      	ldr	r3, [r3, #20]
 8016c86:	4798      	blx	r3
 8016c88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8016c8a:	6803      	ldr	r3, [r0, #0]
 8016c8c:	691b      	ldr	r3, [r3, #16]
 8016c8e:	4798      	blx	r3
 8016c90:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8016c94:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8016c98:	3b01      	subs	r3, #1
 8016c9a:	b2db      	uxtb	r3, r3
 8016c9c:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8016ca0:	b10a      	cbz	r2, 8016ca6 <_ZN8touchgfx3HAL4tickEv+0x8e>
 8016ca2:	2b00      	cmp	r3, #0
 8016ca4:	d1eb      	bne.n	8016c7e <_ZN8touchgfx3HAL4tickEv+0x66>
 8016ca6:	4a3b      	ldr	r2, [pc, #236]	; (8016d94 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8016ca8:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8016cac:	7813      	ldrb	r3, [r2, #0]
 8016cae:	3301      	adds	r3, #1
 8016cb0:	b25b      	sxtb	r3, r3
 8016cb2:	4299      	cmp	r1, r3
 8016cb4:	7013      	strb	r3, [r2, #0]
 8016cb6:	dc10      	bgt.n	8016cda <_ZN8touchgfx3HAL4tickEv+0xc2>
 8016cb8:	2300      	movs	r3, #0
 8016cba:	68e0      	ldr	r0, [r4, #12]
 8016cbc:	a902      	add	r1, sp, #8
 8016cbe:	7013      	strb	r3, [r2, #0]
 8016cc0:	aa03      	add	r2, sp, #12
 8016cc2:	6803      	ldr	r3, [r0, #0]
 8016cc4:	68db      	ldr	r3, [r3, #12]
 8016cc6:	4798      	blx	r3
 8016cc8:	6823      	ldr	r3, [r4, #0]
 8016cca:	2800      	cmp	r0, #0
 8016ccc:	d051      	beq.n	8016d72 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8016cce:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8016cd2:	4620      	mov	r0, r4
 8016cd4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8016cd8:	4798      	blx	r3
 8016cda:	2300      	movs	r3, #0
 8016cdc:	6960      	ldr	r0, [r4, #20]
 8016cde:	f88d 3007 	strb.w	r3, [sp, #7]
 8016ce2:	b158      	cbz	r0, 8016cfc <_ZN8touchgfx3HAL4tickEv+0xe4>
 8016ce4:	6803      	ldr	r3, [r0, #0]
 8016ce6:	f10d 0107 	add.w	r1, sp, #7
 8016cea:	68db      	ldr	r3, [r3, #12]
 8016cec:	4798      	blx	r3
 8016cee:	b128      	cbz	r0, 8016cfc <_ZN8touchgfx3HAL4tickEv+0xe4>
 8016cf0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8016cf2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8016cf6:	6803      	ldr	r3, [r0, #0]
 8016cf8:	68db      	ldr	r3, [r3, #12]
 8016cfa:	4798      	blx	r3
 8016cfc:	f104 001c 	add.w	r0, r4, #28
 8016d00:	f013 fa04 	bl	802a10c <_ZN8touchgfx8Gestures4tickEv>
 8016d04:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8016d08:	b30b      	cbz	r3, 8016d4e <_ZN8touchgfx3HAL4tickEv+0x136>
 8016d0a:	6920      	ldr	r0, [r4, #16]
 8016d0c:	6803      	ldr	r3, [r0, #0]
 8016d0e:	691b      	ldr	r3, [r3, #16]
 8016d10:	4798      	blx	r3
 8016d12:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8016d14:	4606      	mov	r6, r0
 8016d16:	b903      	cbnz	r3, 8016d1a <_ZN8touchgfx3HAL4tickEv+0x102>
 8016d18:	6720      	str	r0, [r4, #112]	; 0x70
 8016d1a:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8016d1c:	4a1e      	ldr	r2, [pc, #120]	; (8016d98 <_ZN8touchgfx3HAL4tickEv+0x180>)
 8016d1e:	1af3      	subs	r3, r6, r3
 8016d20:	4293      	cmp	r3, r2
 8016d22:	d914      	bls.n	8016d4e <_ZN8touchgfx3HAL4tickEv+0x136>
 8016d24:	6920      	ldr	r0, [r4, #16]
 8016d26:	6803      	ldr	r3, [r0, #0]
 8016d28:	699b      	ldr	r3, [r3, #24]
 8016d2a:	4798      	blx	r3
 8016d2c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8016d2e:	2264      	movs	r2, #100	; 0x64
 8016d30:	1af3      	subs	r3, r6, r3
 8016d32:	fbb3 f3f2 	udiv	r3, r3, r2
 8016d36:	fbb0 f0f3 	udiv	r0, r0, r3
 8016d3a:	2800      	cmp	r0, #0
 8016d3c:	dc1e      	bgt.n	8016d7c <_ZN8touchgfx3HAL4tickEv+0x164>
 8016d3e:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8016d42:	6920      	ldr	r0, [r4, #16]
 8016d44:	2100      	movs	r1, #0
 8016d46:	6803      	ldr	r3, [r0, #0]
 8016d48:	69db      	ldr	r3, [r3, #28]
 8016d4a:	4798      	blx	r3
 8016d4c:	6726      	str	r6, [r4, #112]	; 0x70
 8016d4e:	f004 fba9 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 8016d52:	6803      	ldr	r3, [r0, #0]
 8016d54:	2100      	movs	r1, #0
 8016d56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016d58:	4798      	blx	r3
 8016d5a:	6823      	ldr	r3, [r4, #0]
 8016d5c:	4620      	mov	r0, r4
 8016d5e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8016d62:	4798      	blx	r3
 8016d64:	2001      	movs	r0, #1
 8016d66:	f7f8 fb3a 	bl	800f3de <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8016d6a:	2300      	movs	r3, #0
 8016d6c:	702b      	strb	r3, [r5, #0]
 8016d6e:	b004      	add	sp, #16
 8016d70:	bd70      	pop	{r4, r5, r6, pc}
 8016d72:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8016d76:	4620      	mov	r0, r4
 8016d78:	4798      	blx	r3
 8016d7a:	e7ae      	b.n	8016cda <_ZN8touchgfx3HAL4tickEv+0xc2>
 8016d7c:	2863      	cmp	r0, #99	; 0x63
 8016d7e:	bfcb      	itete	gt
 8016d80:	2300      	movgt	r3, #0
 8016d82:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8016d86:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8016d8a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8016d8e:	e7d8      	b.n	8016d42 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8016d90:	2000416c 	.word	0x2000416c
 8016d94:	2000416d 	.word	0x2000416d
 8016d98:	05f5e100 	.word	0x05f5e100

08016d9c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8016d9c:	f7f8 be7e 	b.w	800fa9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08016da0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8016da0:	6581      	str	r1, [r0, #88]	; 0x58
 8016da2:	301c      	adds	r0, #28
 8016da4:	f013 b9b0 	b.w	802a108 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08016da8 <_ZN8touchgfx3HAL5touchEll>:
 8016da8:	b530      	push	{r4, r5, lr}
 8016daa:	b087      	sub	sp, #28
 8016dac:	4604      	mov	r4, r0
 8016dae:	a804      	add	r0, sp, #16
 8016db0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8016db4:	f004 f986 	bl	801b0c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8016db8:	9b04      	ldr	r3, [sp, #16]
 8016dba:	a906      	add	r1, sp, #24
 8016dbc:	a803      	add	r0, sp, #12
 8016dbe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8016dc2:	9b05      	ldr	r3, [sp, #20]
 8016dc4:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8016dc8:	f004 f9ba 	bl	801b140 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8016dcc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8016dd0:	f104 001c 	add.w	r0, r4, #28
 8016dd4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8016dd8:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8016ddc:	b189      	cbz	r1, 8016e02 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8016dde:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8016de2:	9300      	str	r3, [sp, #0]
 8016de4:	4613      	mov	r3, r2
 8016de6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016dea:	462a      	mov	r2, r5
 8016dec:	f013 f99c 	bl	802a128 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8016df0:	b128      	cbz	r0, 8016dfe <_ZN8touchgfx3HAL5touchEll+0x56>
 8016df2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8016df6:	65e3      	str	r3, [r4, #92]	; 0x5c
 8016df8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016dfc:	6623      	str	r3, [r4, #96]	; 0x60
 8016dfe:	b007      	add	sp, #28
 8016e00:	bd30      	pop	{r4, r5, pc}
 8016e02:	f013 f9d5 	bl	802a1b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8016e06:	2301      	movs	r3, #1
 8016e08:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8016e0c:	e7f1      	b.n	8016df2 <_ZN8touchgfx3HAL5touchEll+0x4a>

08016e0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8016e0e:	b570      	push	{r4, r5, r6, lr}
 8016e10:	2b00      	cmp	r3, #0
 8016e12:	d050      	beq.n	8016eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8016e14:	ea81 0002 	eor.w	r0, r1, r2
 8016e18:	07c6      	lsls	r6, r0, #31
 8016e1a:	d508      	bpl.n	8016e2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8016e1c:	3a01      	subs	r2, #1
 8016e1e:	18cc      	adds	r4, r1, r3
 8016e20:	42a1      	cmp	r1, r4
 8016e22:	d048      	beq.n	8016eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8016e24:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8016e28:	f801 0b01 	strb.w	r0, [r1], #1
 8016e2c:	e7f8      	b.n	8016e20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8016e2e:	07d5      	lsls	r5, r2, #31
 8016e30:	bf42      	ittt	mi
 8016e32:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8016e36:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8016e3a:	f801 0b01 	strbmi.w	r0, [r1], #1
 8016e3e:	2b01      	cmp	r3, #1
 8016e40:	d915      	bls.n	8016e6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8016e42:	ea82 0001 	eor.w	r0, r2, r1
 8016e46:	0784      	lsls	r4, r0, #30
 8016e48:	d02d      	beq.n	8016ea6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 8016e4a:	1e94      	subs	r4, r2, #2
 8016e4c:	4608      	mov	r0, r1
 8016e4e:	18ce      	adds	r6, r1, r3
 8016e50:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8016e54:	f820 5b02 	strh.w	r5, [r0], #2
 8016e58:	1a35      	subs	r5, r6, r0
 8016e5a:	2d01      	cmp	r5, #1
 8016e5c:	d8f8      	bhi.n	8016e50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 8016e5e:	1e98      	subs	r0, r3, #2
 8016e60:	f003 0301 	and.w	r3, r3, #1
 8016e64:	f020 0001 	bic.w	r0, r0, #1
 8016e68:	3002      	adds	r0, #2
 8016e6a:	4401      	add	r1, r0
 8016e6c:	4402      	add	r2, r0
 8016e6e:	1f14      	subs	r4, r2, #4
 8016e70:	4608      	mov	r0, r1
 8016e72:	18ce      	adds	r6, r1, r3
 8016e74:	1a35      	subs	r5, r6, r0
 8016e76:	2d03      	cmp	r5, #3
 8016e78:	d810      	bhi.n	8016e9c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 8016e7a:	089c      	lsrs	r4, r3, #2
 8016e7c:	00a0      	lsls	r0, r4, #2
 8016e7e:	4401      	add	r1, r0
 8016e80:	3801      	subs	r0, #1
 8016e82:	4402      	add	r2, r0
 8016e84:	f06f 0003 	mvn.w	r0, #3
 8016e88:	fb00 3404 	mla	r4, r0, r4, r3
 8016e8c:	440c      	add	r4, r1
 8016e8e:	42a1      	cmp	r1, r4
 8016e90:	d011      	beq.n	8016eb6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8016e92:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8016e96:	f801 3b01 	strb.w	r3, [r1], #1
 8016e9a:	e7f8      	b.n	8016e8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 8016e9c:	f854 5f04 	ldr.w	r5, [r4, #4]!
 8016ea0:	f840 5b04 	str.w	r5, [r0], #4
 8016ea4:	e7e6      	b.n	8016e74 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 8016ea6:	0790      	lsls	r0, r2, #30
 8016ea8:	d0e1      	beq.n	8016e6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8016eaa:	f832 0b02 	ldrh.w	r0, [r2], #2
 8016eae:	3b02      	subs	r3, #2
 8016eb0:	f821 0b02 	strh.w	r0, [r1], #2
 8016eb4:	e7db      	b.n	8016e6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8016eb6:	2001      	movs	r0, #1
 8016eb8:	bd70      	pop	{r4, r5, r6, pc}

08016eba <_ZN8touchgfx3HAL7noTouchEv>:
 8016eba:	b510      	push	{r4, lr}
 8016ebc:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8016ec0:	4604      	mov	r4, r0
 8016ec2:	b153      	cbz	r3, 8016eda <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8016ec4:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8016ec8:	2101      	movs	r1, #1
 8016eca:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8016ece:	301c      	adds	r0, #28
 8016ed0:	f013 f96e 	bl	802a1b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8016ed4:	2300      	movs	r3, #0
 8016ed6:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8016eda:	bd10      	pop	{r4, pc}

08016edc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8016edc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ee0:	4604      	mov	r4, r0
 8016ee2:	6980      	ldr	r0, [r0, #24]
 8016ee4:	b085      	sub	sp, #20
 8016ee6:	460f      	mov	r7, r1
 8016ee8:	4690      	mov	r8, r2
 8016eea:	4699      	mov	r9, r3
 8016eec:	b930      	cbnz	r0, 8016efc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8016eee:	4b1c      	ldr	r3, [pc, #112]	; (8016f60 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8016ef0:	f44f 71a1 	mov.w	r1, #322	; 0x142
 8016ef4:	4a1b      	ldr	r2, [pc, #108]	; (8016f64 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8016ef6:	481c      	ldr	r0, [pc, #112]	; (8016f68 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8016ef8:	f014 fff6 	bl	802bee8 <__assert_func>
 8016efc:	ad04      	add	r5, sp, #16
 8016efe:	2600      	movs	r6, #0
 8016f00:	f845 6d04 	str.w	r6, [r5, #-4]!
 8016f04:	6806      	ldr	r6, [r0, #0]
 8016f06:	9501      	str	r5, [sp, #4]
 8016f08:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8016f0c:	9500      	str	r5, [sp, #0]
 8016f0e:	6835      	ldr	r5, [r6, #0]
 8016f10:	47a8      	blx	r5
 8016f12:	4d16      	ldr	r5, [pc, #88]	; (8016f6c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 8016f14:	4606      	mov	r6, r0
 8016f16:	f8a5 9000 	strh.w	r9, [r5]
 8016f1a:	f7f2 fbcb 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8016f1e:	6803      	ldr	r3, [r0, #0]
 8016f20:	6a1b      	ldr	r3, [r3, #32]
 8016f22:	4798      	blx	r3
 8016f24:	2801      	cmp	r0, #1
 8016f26:	d012      	beq.n	8016f4e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 8016f28:	d306      	bcc.n	8016f38 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 8016f2a:	280d      	cmp	r0, #13
 8016f2c:	d80b      	bhi.n	8016f46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8016f2e:	4b10      	ldr	r3, [pc, #64]	; (8016f70 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 8016f30:	f44f 71b0 	mov.w	r1, #352	; 0x160
 8016f34:	4a0b      	ldr	r2, [pc, #44]	; (8016f64 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 8016f36:	e7de      	b.n	8016ef6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 8016f38:	882b      	ldrh	r3, [r5, #0]
 8016f3a:	fb08 7203 	mla	r2, r8, r3, r7
 8016f3e:	9b03      	ldr	r3, [sp, #12]
 8016f40:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8016f44:	63e3      	str	r3, [r4, #60]	; 0x3c
 8016f46:	4630      	mov	r0, r6
 8016f48:	b005      	add	sp, #20
 8016f4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016f4e:	882a      	ldrh	r2, [r5, #0]
 8016f50:	9b03      	ldr	r3, [sp, #12]
 8016f52:	fb08 7202 	mla	r2, r8, r2, r7
 8016f56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f5a:	1a9a      	subs	r2, r3, r2
 8016f5c:	63e2      	str	r2, [r4, #60]	; 0x3c
 8016f5e:	e7f2      	b.n	8016f46 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 8016f60:	0802fe91 	.word	0x0802fe91
 8016f64:	080301aa 	.word	0x080301aa
 8016f68:	0802fed6 	.word	0x0802fed6
 8016f6c:	20004160 	.word	0x20004160
 8016f70:	0802fefc 	.word	0x0802fefc

08016f74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 8016f74:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016f78:	4698      	mov	r8, r3
 8016f7a:	6803      	ldr	r3, [r0, #0]
 8016f7c:	b087      	sub	sp, #28
 8016f7e:	460e      	mov	r6, r1
 8016f80:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 8016f82:	4617      	mov	r7, r2
 8016f84:	4b0d      	ldr	r3, [pc, #52]	; (8016fbc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 8016f86:	4604      	mov	r4, r0
 8016f88:	f8b3 9000 	ldrh.w	r9, [r3]
 8016f8c:	f7f2 fb92 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8016f90:	6803      	ldr	r3, [r0, #0]
 8016f92:	6a1b      	ldr	r3, [r3, #32]
 8016f94:	4798      	blx	r3
 8016f96:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8016f9a:	463a      	mov	r2, r7
 8016f9c:	4631      	mov	r1, r6
 8016f9e:	9302      	str	r3, [sp, #8]
 8016fa0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8016fa4:	9301      	str	r3, [sp, #4]
 8016fa6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016faa:	e9cd 9003 	strd	r9, r0, [sp, #12]
 8016fae:	9300      	str	r3, [sp, #0]
 8016fb0:	4620      	mov	r0, r4
 8016fb2:	4643      	mov	r3, r8
 8016fb4:	47a8      	blx	r5
 8016fb6:	b007      	add	sp, #28
 8016fb8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016fbc:	20004160 	.word	0x20004160

08016fc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8016fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016fc4:	4604      	mov	r4, r0
 8016fc6:	b08b      	sub	sp, #44	; 0x2c
 8016fc8:	4610      	mov	r0, r2
 8016fca:	460d      	mov	r5, r1
 8016fcc:	4691      	mov	r9, r2
 8016fce:	461e      	mov	r6, r3
 8016fd0:	f007 faa0 	bl	801e514 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8016fd4:	2800      	cmp	r0, #0
 8016fd6:	f000 80a0 	beq.w	801711a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8016fda:	6823      	ldr	r3, [r4, #0]
 8016fdc:	4620      	mov	r0, r4
 8016fde:	f8df b170 	ldr.w	fp, [pc, #368]	; 8017150 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>
 8016fe2:	af0a      	add	r7, sp, #40	; 0x28
 8016fe4:	6a1b      	ldr	r3, [r3, #32]
 8016fe6:	4798      	blx	r3
 8016fe8:	6823      	ldr	r3, [r4, #0]
 8016fea:	4620      	mov	r0, r4
 8016fec:	f8df a164 	ldr.w	sl, [pc, #356]	; 8017154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>
 8016ff0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8016ff2:	4798      	blx	r3
 8016ff4:	f8bb 3000 	ldrh.w	r3, [fp]
 8016ff8:	f827 9d0c 	strh.w	r9, [r7, #-12]!
 8016ffc:	4638      	mov	r0, r7
 8016ffe:	9301      	str	r3, [sp, #4]
 8017000:	f8ba 3000 	ldrh.w	r3, [sl]
 8017004:	9302      	str	r3, [sp, #8]
 8017006:	4b4f      	ldr	r3, [pc, #316]	; (8017144 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8017008:	881a      	ldrh	r2, [r3, #0]
 801700a:	4698      	mov	r8, r3
 801700c:	9203      	str	r2, [sp, #12]
 801700e:	4a4e      	ldr	r2, [pc, #312]	; (8017148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8017010:	8812      	ldrh	r2, [r2, #0]
 8017012:	9204      	str	r2, [sp, #16]
 8017014:	4a4d      	ldr	r2, [pc, #308]	; (801714c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x18c>)
 8017016:	7812      	ldrb	r2, [r2, #0]
 8017018:	2a00      	cmp	r2, #0
 801701a:	f040 8081 	bne.w	8017120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x160>
 801701e:	f007 fb33 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017022:	f8ab 0000 	strh.w	r0, [fp]
 8017026:	4638      	mov	r0, r7
 8017028:	f007 fb68 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801702c:	f8aa 0000 	strh.w	r0, [sl]
 8017030:	4638      	mov	r0, r7
 8017032:	f007 fb29 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017036:	f8a8 0000 	strh.w	r0, [r8]
 801703a:	4638      	mov	r0, r7
 801703c:	f007 fb5e 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017040:	4b41      	ldr	r3, [pc, #260]	; (8017148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8017042:	8018      	strh	r0, [r3, #0]
 8017044:	4648      	mov	r0, r9
 8017046:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 801704a:	f007 fa63 	bl	801e514 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801704e:	2200      	movs	r2, #0
 8017050:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8017054:	4611      	mov	r1, r2
 8017056:	4628      	mov	r0, r5
 8017058:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801705c:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8017060:	f7f3 f892 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
 8017064:	2301      	movs	r3, #1
 8017066:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 801706a:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801706e:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8017072:	2b00      	cmp	r3, #0
 8017074:	dd5c      	ble.n	8017130 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 8017076:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801707a:	2b00      	cmp	r3, #0
 801707c:	dd58      	ble.n	8017130 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x170>
 801707e:	462a      	mov	r2, r5
 8017080:	ab08      	add	r3, sp, #32
 8017082:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8017086:	6851      	ldr	r1, [r2, #4]
 8017088:	c303      	stmia	r3!, {r0, r1}
 801708a:	4631      	mov	r1, r6
 801708c:	a808      	add	r0, sp, #32
 801708e:	f7ff fc71 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8017092:	a807      	add	r0, sp, #28
 8017094:	f007 fc8a 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017098:	4606      	mov	r6, r0
 801709a:	f7f2 fb0b 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 801709e:	6803      	ldr	r3, [r0, #0]
 80170a0:	6a1b      	ldr	r3, [r3, #32]
 80170a2:	4798      	blx	r3
 80170a4:	4286      	cmp	r6, r0
 80170a6:	d04a      	beq.n	801713e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x17e>
 80170a8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80170aa:	b150      	cbz	r0, 80170c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 80170ac:	a807      	add	r0, sp, #28
 80170ae:	f007 fc7d 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 80170b2:	4606      	mov	r6, r0
 80170b4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80170b6:	6803      	ldr	r3, [r0, #0]
 80170b8:	6a1b      	ldr	r3, [r3, #32]
 80170ba:	4798      	blx	r3
 80170bc:	1a33      	subs	r3, r6, r0
 80170be:	4258      	negs	r0, r3
 80170c0:	4158      	adcs	r0, r3
 80170c2:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 80170c6:	2600      	movs	r6, #0
 80170c8:	696b      	ldr	r3, [r5, #20]
 80170ca:	a908      	add	r1, sp, #32
 80170cc:	682a      	ldr	r2, [r5, #0]
 80170ce:	4628      	mov	r0, r5
 80170d0:	9305      	str	r3, [sp, #20]
 80170d2:	616e      	str	r6, [r5, #20]
 80170d4:	6892      	ldr	r2, [r2, #8]
 80170d6:	4790      	blx	r2
 80170d8:	9b05      	ldr	r3, [sp, #20]
 80170da:	4652      	mov	r2, sl
 80170dc:	4649      	mov	r1, r9
 80170de:	616b      	str	r3, [r5, #20]
 80170e0:	4628      	mov	r0, r5
 80170e2:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 80170e6:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80170ea:	f7f3 f84d 	bl	800a188 <_ZN8touchgfx8Drawable5setXYEss>
 80170ee:	9a01      	ldr	r2, [sp, #4]
 80170f0:	4b17      	ldr	r3, [pc, #92]	; (8017150 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x190>)
 80170f2:	4620      	mov	r0, r4
 80170f4:	801a      	strh	r2, [r3, #0]
 80170f6:	9a02      	ldr	r2, [sp, #8]
 80170f8:	4b16      	ldr	r3, [pc, #88]	; (8017154 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x194>)
 80170fa:	801a      	strh	r2, [r3, #0]
 80170fc:	9a03      	ldr	r2, [sp, #12]
 80170fe:	4b11      	ldr	r3, [pc, #68]	; (8017144 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x184>)
 8017100:	801a      	strh	r2, [r3, #0]
 8017102:	4b11      	ldr	r3, [pc, #68]	; (8017148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x188>)
 8017104:	9a04      	ldr	r2, [sp, #16]
 8017106:	801a      	strh	r2, [r3, #0]
 8017108:	6823      	ldr	r3, [r4, #0]
 801710a:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801710e:	6a1b      	ldr	r3, [r3, #32]
 8017110:	4798      	blx	r3
 8017112:	6823      	ldr	r3, [r4, #0]
 8017114:	4620      	mov	r0, r4
 8017116:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8017118:	4798      	blx	r3
 801711a:	b00b      	add	sp, #44	; 0x2c
 801711c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017120:	f007 faec 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8017124:	f8ab 0000 	strh.w	r0, [fp]
 8017128:	4638      	mov	r0, r7
 801712a:	f007 faad 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801712e:	e77d      	b.n	801702c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x6c>
 8017130:	462a      	mov	r2, r5
 8017132:	ab08      	add	r3, sp, #32
 8017134:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8017138:	6851      	ldr	r1, [r2, #4]
 801713a:	c303      	stmia	r3!, {r0, r1}
 801713c:	e7a9      	b.n	8017092 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xd2>
 801713e:	2000      	movs	r0, #0
 8017140:	e7bf      	b.n	80170c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x102>
 8017142:	bf00      	nop
 8017144:	2000415a 	.word	0x2000415a
 8017148:	2000415c 	.word	0x2000415c
 801714c:	2000415e 	.word	0x2000415e
 8017150:	20004160 	.word	0x20004160
 8017154:	20004162 	.word	0x20004162

08017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8017158:	4b07      	ldr	r3, [pc, #28]	; (8017178 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801715a:	b510      	push	{r4, lr}
 801715c:	781b      	ldrb	r3, [r3, #0]
 801715e:	4604      	mov	r4, r0
 8017160:	b13b      	cbz	r3, 8017172 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8017162:	6803      	ldr	r3, [r0, #0]
 8017164:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017166:	4798      	blx	r3
 8017168:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801716a:	4283      	cmp	r3, r0
 801716c:	d101      	bne.n	8017172 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801716e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8017170:	bd10      	pop	{r4, pc}
 8017172:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8017174:	e7fc      	b.n	8017170 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8017176:	bf00      	nop
 8017178:	20004164 	.word	0x20004164

0801717c <_ZN8touchgfx3HAL10initializeEv>:
 801717c:	b510      	push	{r4, lr}
 801717e:	4604      	mov	r4, r0
 8017180:	f7f8 fc64 	bl	800fa4c <_ZN8touchgfx10OSWrappers10initializeEv>
 8017184:	6860      	ldr	r0, [r4, #4]
 8017186:	6803      	ldr	r3, [r0, #0]
 8017188:	68db      	ldr	r3, [r3, #12]
 801718a:	4798      	blx	r3
 801718c:	68e0      	ldr	r0, [r4, #12]
 801718e:	6803      	ldr	r3, [r0, #0]
 8017190:	689b      	ldr	r3, [r3, #8]
 8017192:	4798      	blx	r3
 8017194:	6823      	ldr	r3, [r4, #0]
 8017196:	4620      	mov	r0, r4
 8017198:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801719a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801719e:	4718      	bx	r3

080171a0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 80171a0:	b508      	push	{r3, lr}
 80171a2:	290d      	cmp	r1, #13
 80171a4:	d817      	bhi.n	80171d6 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 80171a6:	e8df f001 	tbb	[pc, r1]
 80171aa:	090b      	.short	0x090b
 80171ac:	0d0d0d07 	.word	0x0d0d0d07
 80171b0:	1414140d 	.word	0x1414140d
 80171b4:	0d0d1414 	.word	0x0d0d1414
 80171b8:	2020      	movs	r0, #32
 80171ba:	bd08      	pop	{r3, pc}
 80171bc:	2018      	movs	r0, #24
 80171be:	e7fc      	b.n	80171ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80171c0:	2010      	movs	r0, #16
 80171c2:	e7fa      	b.n	80171ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80171c4:	4b05      	ldr	r3, [pc, #20]	; (80171dc <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 80171c6:	f44f 7111 	mov.w	r1, #580	; 0x244
 80171ca:	4a05      	ldr	r2, [pc, #20]	; (80171e0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 80171cc:	4805      	ldr	r0, [pc, #20]	; (80171e4 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 80171ce:	f014 fe8b 	bl	802bee8 <__assert_func>
 80171d2:	2008      	movs	r0, #8
 80171d4:	e7f1      	b.n	80171ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80171d6:	2000      	movs	r0, #0
 80171d8:	e7ef      	b.n	80171ba <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 80171da:	bf00      	nop
 80171dc:	0802ffcf 	.word	0x0802ffcf
 80171e0:	0803036c 	.word	0x0803036c
 80171e4:	0802fed6 	.word	0x0802fed6

080171e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 80171e8:	b570      	push	{r4, r5, r6, lr}
 80171ea:	460d      	mov	r5, r1
 80171ec:	f89d 1014 	ldrb.w	r1, [sp, #20]
 80171f0:	4616      	mov	r6, r2
 80171f2:	461c      	mov	r4, r3
 80171f4:	f7ff ffd4 	bl	80171a0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 80171f8:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 80171fc:	10c0      	asrs	r0, r0, #3
 80171fe:	fb06 5101 	mla	r1, r6, r1, r5
 8017202:	fb00 4001 	mla	r0, r0, r1, r4
 8017206:	bd70      	pop	{r4, r5, r6, pc}

08017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 8017208:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801720c:	b08a      	sub	sp, #40	; 0x28
 801720e:	f04f 0c00 	mov.w	ip, #0
 8017212:	4604      	mov	r4, r0
 8017214:	469a      	mov	sl, r3
 8017216:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 801721a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 801721e:	f1b8 0f02 	cmp.w	r8, #2
 8017222:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8017226:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801722a:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 801722e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 8017232:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8017236:	f8cd c020 	str.w	ip, [sp, #32]
 801723a:	d030      	beq.n	801729e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 801723c:	2bff      	cmp	r3, #255	; 0xff
 801723e:	d12c      	bne.n	801729a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 8017240:	4560      	cmp	r0, ip
 8017242:	bf14      	ite	ne
 8017244:	2004      	movne	r0, #4
 8017246:	2001      	moveq	r0, #1
 8017248:	9204      	str	r2, [sp, #16]
 801724a:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801724e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8017252:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017256:	f8ad 6018 	strh.w	r6, [sp, #24]
 801725a:	f8ad 501a 	strh.w	r5, [sp, #26]
 801725e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8017262:	4620      	mov	r0, r4
 8017264:	f7ff ff78 	bl	8017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8017268:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 801726c:	4603      	mov	r3, r0
 801726e:	4651      	mov	r1, sl
 8017270:	4620      	mov	r0, r4
 8017272:	e9cd 9700 	strd	r9, r7, [sp]
 8017276:	f7ff ffb7 	bl	80171e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 801727a:	f8ad 901e 	strh.w	r9, [sp, #30]
 801727e:	9005      	str	r0, [sp, #20]
 8017280:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 8017284:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 8017288:	b106      	cbz	r6, 801728c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 801728a:	b98d      	cbnz	r5, 80172b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 801728c:	4b12      	ldr	r3, [pc, #72]	; (80172d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 801728e:	f240 11c3 	movw	r1, #451	; 0x1c3
 8017292:	4a12      	ldr	r2, [pc, #72]	; (80172dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 8017294:	4812      	ldr	r0, [pc, #72]	; (80172e0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 8017296:	f014 fe27 	bl	802bee8 <__assert_func>
 801729a:	2004      	movs	r0, #4
 801729c:	e7d4      	b.n	8017248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 801729e:	2bff      	cmp	r3, #255	; 0xff
 80172a0:	d104      	bne.n	80172ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 80172a2:	2800      	cmp	r0, #0
 80172a4:	bf14      	ite	ne
 80172a6:	2040      	movne	r0, #64	; 0x40
 80172a8:	2020      	moveq	r0, #32
 80172aa:	e7cd      	b.n	8017248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 80172ac:	2040      	movs	r0, #64	; 0x40
 80172ae:	e7cb      	b.n	8017248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 80172b0:	6823      	ldr	r3, [r4, #0]
 80172b2:	4620      	mov	r0, r4
 80172b4:	9d02      	ldr	r5, [sp, #8]
 80172b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80172b8:	4798      	blx	r3
 80172ba:	4228      	tst	r0, r5
 80172bc:	d104      	bne.n	80172c8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 80172be:	4b09      	ldr	r3, [pc, #36]	; (80172e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 80172c0:	f44f 71e2 	mov.w	r1, #452	; 0x1c4
 80172c4:	4a05      	ldr	r2, [pc, #20]	; (80172dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 80172c6:	e7e5      	b.n	8017294 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 80172c8:	6860      	ldr	r0, [r4, #4]
 80172ca:	a902      	add	r1, sp, #8
 80172cc:	6803      	ldr	r3, [r0, #0]
 80172ce:	685b      	ldr	r3, [r3, #4]
 80172d0:	4798      	blx	r3
 80172d2:	b00a      	add	sp, #40	; 0x28
 80172d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80172d8:	0802ff52 	.word	0x0802ff52
 80172dc:	0803020e 	.word	0x0803020e
 80172e0:	0802fed6 	.word	0x0802fed6
 80172e4:	0802ff8a 	.word	0x0802ff8a

080172e8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 80172e8:	b510      	push	{r4, lr}
 80172ea:	b08a      	sub	sp, #40	; 0x28
 80172ec:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80172f0:	9408      	str	r4, [sp, #32]
 80172f2:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 80172f6:	9407      	str	r4, [sp, #28]
 80172f8:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 80172fc:	9406      	str	r4, [sp, #24]
 80172fe:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 8017302:	9405      	str	r4, [sp, #20]
 8017304:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 8017308:	9404      	str	r4, [sp, #16]
 801730a:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 801730e:	9403      	str	r4, [sp, #12]
 8017310:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 8017314:	9402      	str	r4, [sp, #8]
 8017316:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 801731a:	e9cd 3400 	strd	r3, r4, [sp]
 801731e:	4613      	mov	r3, r2
 8017320:	2200      	movs	r2, #0
 8017322:	f7ff ff71 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8017326:	b00a      	add	sp, #40	; 0x28
 8017328:	bd10      	pop	{r4, pc}
	...

0801732c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 801732c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801732e:	b08b      	sub	sp, #44	; 0x2c
 8017330:	4616      	mov	r6, r2
 8017332:	460d      	mov	r5, r1
 8017334:	461f      	mov	r7, r3
 8017336:	4604      	mov	r4, r0
 8017338:	f7f2 f9bc 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 801733c:	6803      	ldr	r3, [r0, #0]
 801733e:	6a1b      	ldr	r3, [r3, #32]
 8017340:	4798      	blx	r3
 8017342:	4b0e      	ldr	r3, [pc, #56]	; (801737c <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 8017344:	2200      	movs	r2, #0
 8017346:	4629      	mov	r1, r5
 8017348:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801734c:	881b      	ldrh	r3, [r3, #0]
 801734e:	4620      	mov	r0, r4
 8017350:	9306      	str	r3, [sp, #24]
 8017352:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8017356:	9305      	str	r3, [sp, #20]
 8017358:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801735c:	9304      	str	r3, [sp, #16]
 801735e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8017362:	9303      	str	r3, [sp, #12]
 8017364:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017368:	9302      	str	r3, [sp, #8]
 801736a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801736e:	e9cd 7300 	strd	r7, r3, [sp]
 8017372:	4633      	mov	r3, r6
 8017374:	f7ff ff48 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8017378:	b00b      	add	sp, #44	; 0x2c
 801737a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801737c:	20004160 	.word	0x20004160

08017380 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8017380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017384:	461f      	mov	r7, r3
 8017386:	4b14      	ldr	r3, [pc, #80]	; (80173d8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8017388:	b08a      	sub	sp, #40	; 0x28
 801738a:	4616      	mov	r6, r2
 801738c:	f8b3 8000 	ldrh.w	r8, [r3]
 8017390:	460d      	mov	r5, r1
 8017392:	4604      	mov	r4, r0
 8017394:	f7f2 f98e 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8017398:	6803      	ldr	r3, [r0, #0]
 801739a:	6a1b      	ldr	r3, [r3, #32]
 801739c:	4798      	blx	r3
 801739e:	2302      	movs	r3, #2
 80173a0:	9008      	str	r0, [sp, #32]
 80173a2:	2200      	movs	r2, #0
 80173a4:	4629      	mov	r1, r5
 80173a6:	4620      	mov	r0, r4
 80173a8:	e9cd 8306 	strd	r8, r3, [sp, #24]
 80173ac:	2301      	movs	r3, #1
 80173ae:	9305      	str	r3, [sp, #20]
 80173b0:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80173b4:	9304      	str	r3, [sp, #16]
 80173b6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80173ba:	9303      	str	r3, [sp, #12]
 80173bc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80173c0:	9302      	str	r3, [sp, #8]
 80173c2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80173c6:	e9cd 7300 	strd	r7, r3, [sp]
 80173ca:	4633      	mov	r3, r6
 80173cc:	f7ff ff1c 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80173d0:	b00a      	add	sp, #40	; 0x28
 80173d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80173d6:	bf00      	nop
 80173d8:	20004160 	.word	0x20004160

080173dc <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 80173dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173e0:	b08b      	sub	sp, #44	; 0x2c
 80173e2:	469b      	mov	fp, r3
 80173e4:	4604      	mov	r4, r0
 80173e6:	4692      	mov	sl, r2
 80173e8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80173ec:	2600      	movs	r6, #0
 80173ee:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 80173f2:	4689      	mov	r9, r1
 80173f4:	2fff      	cmp	r7, #255	; 0xff
 80173f6:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 80173fa:	9608      	str	r6, [sp, #32]
 80173fc:	bf14      	ite	ne
 80173fe:	2308      	movne	r3, #8
 8017400:	2302      	moveq	r3, #2
 8017402:	e9cd 3602 	strd	r3, r6, [sp, #8]
 8017406:	f7ff fea7 	bl	8017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801740a:	465a      	mov	r2, fp
 801740c:	4603      	mov	r3, r0
 801740e:	4651      	mov	r1, sl
 8017410:	4620      	mov	r0, r4
 8017412:	e9cd 8500 	strd	r8, r5, [sp]
 8017416:	f7ff fee7 	bl	80171e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 801741a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801741e:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8017422:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017426:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801742a:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 801742e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017432:	6823      	ldr	r3, [r4, #0]
 8017434:	9d02      	ldr	r5, [sp, #8]
 8017436:	9005      	str	r0, [sp, #20]
 8017438:	4620      	mov	r0, r4
 801743a:	f8ad 601c 	strh.w	r6, [sp, #28]
 801743e:	f8ad 801e 	strh.w	r8, [sp, #30]
 8017442:	f8cd 9020 	str.w	r9, [sp, #32]
 8017446:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 801744a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801744c:	4798      	blx	r3
 801744e:	4228      	tst	r0, r5
 8017450:	d106      	bne.n	8017460 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8017452:	4b07      	ldr	r3, [pc, #28]	; (8017470 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8017454:	f240 11fb 	movw	r1, #507	; 0x1fb
 8017458:	4a06      	ldr	r2, [pc, #24]	; (8017474 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 801745a:	4807      	ldr	r0, [pc, #28]	; (8017478 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 801745c:	f014 fd44 	bl	802bee8 <__assert_func>
 8017460:	6860      	ldr	r0, [r4, #4]
 8017462:	a902      	add	r1, sp, #8
 8017464:	6803      	ldr	r3, [r0, #0]
 8017466:	685b      	ldr	r3, [r3, #4]
 8017468:	4798      	blx	r3
 801746a:	b00b      	add	sp, #44	; 0x2c
 801746c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017470:	0802ff8a 	.word	0x0802ff8a
 8017474:	080302d7 	.word	0x080302d7
 8017478:	0802fed6 	.word	0x0802fed6

0801747c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 801747c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8017480:	461f      	mov	r7, r3
 8017482:	4b0b      	ldr	r3, [pc, #44]	; (80174b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8017484:	460d      	mov	r5, r1
 8017486:	4616      	mov	r6, r2
 8017488:	f8b3 8000 	ldrh.w	r8, [r3]
 801748c:	4604      	mov	r4, r0
 801748e:	f7f2 f911 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8017492:	6803      	ldr	r3, [r0, #0]
 8017494:	6a1b      	ldr	r3, [r3, #32]
 8017496:	4798      	blx	r3
 8017498:	463b      	mov	r3, r7
 801749a:	4632      	mov	r2, r6
 801749c:	4629      	mov	r1, r5
 801749e:	e9cd 8000 	strd	r8, r0, [sp]
 80174a2:	4620      	mov	r0, r4
 80174a4:	f7ff fea0 	bl	80171e8 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80174a8:	b002      	add	sp, #8
 80174aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80174ae:	bf00      	nop
 80174b0:	20004160 	.word	0x20004160

080174b4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 80174b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80174b8:	4698      	mov	r8, r3
 80174ba:	b088      	sub	sp, #32
 80174bc:	2300      	movs	r3, #0
 80174be:	4617      	mov	r7, r2
 80174c0:	4604      	mov	r4, r0
 80174c2:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 80174c6:	9306      	str	r3, [sp, #24]
 80174c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80174cc:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 80174d0:	f8ad 6010 	strh.w	r6, [sp, #16]
 80174d4:	f8ad 5012 	strh.w	r5, [sp, #18]
 80174d8:	e9cd 3100 	strd	r3, r1, [sp]
 80174dc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80174e0:	f8ad 3014 	strh.w	r3, [sp, #20]
 80174e4:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80174e8:	f88d 301c 	strb.w	r3, [sp, #28]
 80174ec:	f7ff fe34 	bl	8017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80174f0:	4642      	mov	r2, r8
 80174f2:	4603      	mov	r3, r0
 80174f4:	4639      	mov	r1, r7
 80174f6:	4620      	mov	r0, r4
 80174f8:	f7ff ffc0 	bl	801747c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80174fc:	4b16      	ldr	r3, [pc, #88]	; (8017558 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 80174fe:	9003      	str	r0, [sp, #12]
 8017500:	881b      	ldrh	r3, [r3, #0]
 8017502:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017506:	f7f2 f8d5 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 801750a:	6803      	ldr	r3, [r0, #0]
 801750c:	6a1b      	ldr	r3, [r3, #32]
 801750e:	4798      	blx	r3
 8017510:	f88d 001e 	strb.w	r0, [sp, #30]
 8017514:	f88d 001d 	strb.w	r0, [sp, #29]
 8017518:	b106      	cbz	r6, 801751c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 801751a:	b935      	cbnz	r5, 801752a <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 801751c:	4b0f      	ldr	r3, [pc, #60]	; (801755c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 801751e:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8017522:	4a0f      	ldr	r2, [pc, #60]	; (8017560 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8017524:	480f      	ldr	r0, [pc, #60]	; (8017564 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 8017526:	f014 fcdf 	bl	802bee8 <__assert_func>
 801752a:	6823      	ldr	r3, [r4, #0]
 801752c:	4620      	mov	r0, r4
 801752e:	9d00      	ldr	r5, [sp, #0]
 8017530:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017532:	4798      	blx	r3
 8017534:	4228      	tst	r0, r5
 8017536:	d104      	bne.n	8017542 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 8017538:	4b0b      	ldr	r3, [pc, #44]	; (8017568 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 801753a:	f240 11e1 	movw	r1, #481	; 0x1e1
 801753e:	4a08      	ldr	r2, [pc, #32]	; (8017560 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 8017540:	e7f0      	b.n	8017524 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 8017542:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017544:	4669      	mov	r1, sp
 8017546:	6860      	ldr	r0, [r4, #4]
 8017548:	9306      	str	r3, [sp, #24]
 801754a:	6803      	ldr	r3, [r0, #0]
 801754c:	685b      	ldr	r3, [r3, #4]
 801754e:	4798      	blx	r3
 8017550:	b008      	add	sp, #32
 8017552:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017556:	bf00      	nop
 8017558:	20004160 	.word	0x20004160
 801755c:	0802ff52 	.word	0x0802ff52
 8017560:	080300c0 	.word	0x080300c0
 8017564:	0802fed6 	.word	0x0802fed6
 8017568:	0802ff8a 	.word	0x0802ff8a

0801756c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 801756c:	b570      	push	{r4, r5, r6, lr}
 801756e:	b08a      	sub	sp, #40	; 0x28
 8017570:	4604      	mov	r4, r0
 8017572:	466b      	mov	r3, sp
 8017574:	e883 0006 	stmia.w	r3, {r1, r2}
 8017578:	4b1f      	ldr	r3, [pc, #124]	; (80175f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 801757a:	781b      	ldrb	r3, [r3, #0]
 801757c:	b933      	cbnz	r3, 801758c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 801757e:	4b1f      	ldr	r3, [pc, #124]	; (80175fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8017580:	f44f 7103 	mov.w	r1, #524	; 0x20c
 8017584:	4a1e      	ldr	r2, [pc, #120]	; (8017600 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8017586:	481f      	ldr	r0, [pc, #124]	; (8017604 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8017588:	f014 fcae 	bl	802bee8 <__assert_func>
 801758c:	2300      	movs	r3, #0
 801758e:	f8bd 5000 	ldrh.w	r5, [sp]
 8017592:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8017596:	9308      	str	r3, [sp, #32]
 8017598:	2301      	movs	r3, #1
 801759a:	9302      	str	r3, [sp, #8]
 801759c:	6803      	ldr	r3, [r0, #0]
 801759e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175a0:	4798      	blx	r3
 80175a2:	4632      	mov	r2, r6
 80175a4:	4629      	mov	r1, r5
 80175a6:	4603      	mov	r3, r0
 80175a8:	4620      	mov	r0, r4
 80175aa:	f7ff ff67 	bl	801747c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80175ae:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80175b0:	9003      	str	r0, [sp, #12]
 80175b2:	9305      	str	r3, [sp, #20]
 80175b4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80175b8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80175bc:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80175c0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80175c4:	4b10      	ldr	r3, [pc, #64]	; (8017608 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 80175c6:	881b      	ldrh	r3, [r3, #0]
 80175c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80175cc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80175d0:	f7f2 f870 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 80175d4:	6803      	ldr	r3, [r0, #0]
 80175d6:	6a1b      	ldr	r3, [r3, #32]
 80175d8:	4798      	blx	r3
 80175da:	23ff      	movs	r3, #255	; 0xff
 80175dc:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 80175e0:	a902      	add	r1, sp, #8
 80175e2:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 80175e6:	6860      	ldr	r0, [r4, #4]
 80175e8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80175ec:	6803      	ldr	r3, [r0, #0]
 80175ee:	685b      	ldr	r3, [r3, #4]
 80175f0:	4798      	blx	r3
 80175f2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80175f4:	b00a      	add	sp, #40	; 0x28
 80175f6:	bd70      	pop	{r4, r5, r6, pc}
 80175f8:	20004165 	.word	0x20004165
 80175fc:	0802fe23 	.word	0x0802fe23
 8017600:	08030164 	.word	0x08030164
 8017604:	0802fed6 	.word	0x0802fed6
 8017608:	20004160 	.word	0x20004160

0801760c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 801760c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801760e:	b08b      	sub	sp, #44	; 0x2c
 8017610:	4604      	mov	r4, r0
 8017612:	466d      	mov	r5, sp
 8017614:	e885 0006 	stmia.w	r5, {r1, r2}
 8017618:	461d      	mov	r5, r3
 801761a:	2300      	movs	r3, #0
 801761c:	f8bd 6000 	ldrh.w	r6, [sp]
 8017620:	9308      	str	r3, [sp, #32]
 8017622:	2301      	movs	r3, #1
 8017624:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8017628:	9302      	str	r3, [sp, #8]
 801762a:	6803      	ldr	r3, [r0, #0]
 801762c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801762e:	4798      	blx	r3
 8017630:	463a      	mov	r2, r7
 8017632:	4631      	mov	r1, r6
 8017634:	4603      	mov	r3, r0
 8017636:	4620      	mov	r0, r4
 8017638:	f7ff ff20 	bl	801747c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801763c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017640:	9003      	str	r0, [sp, #12]
 8017642:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017646:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801764a:	9505      	str	r5, [sp, #20]
 801764c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017650:	4b0d      	ldr	r3, [pc, #52]	; (8017688 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 8017652:	881b      	ldrh	r3, [r3, #0]
 8017654:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017658:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801765a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801765e:	f7f2 f829 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8017662:	6803      	ldr	r3, [r0, #0]
 8017664:	6a1b      	ldr	r3, [r3, #32]
 8017666:	4798      	blx	r3
 8017668:	23ff      	movs	r3, #255	; 0xff
 801766a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 801766e:	a902      	add	r1, sp, #8
 8017670:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8017674:	6860      	ldr	r0, [r4, #4]
 8017676:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801767a:	6803      	ldr	r3, [r0, #0]
 801767c:	685b      	ldr	r3, [r3, #4]
 801767e:	4798      	blx	r3
 8017680:	4628      	mov	r0, r5
 8017682:	b00b      	add	sp, #44	; 0x2c
 8017684:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017686:	bf00      	nop
 8017688:	20004160 	.word	0x20004160

0801768c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 801768c:	b570      	push	{r4, r5, r6, lr}
 801768e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8017692:	4604      	mov	r4, r0
 8017694:	b19b      	cbz	r3, 80176be <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8017696:	2002      	movs	r0, #2
 8017698:	f7f7 feac 	bl	800f3f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 801769c:	2300      	movs	r3, #0
 801769e:	4620      	mov	r0, r4
 80176a0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80176a4:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 80176a8:	6823      	ldr	r3, [r4, #0]
 80176aa:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 80176ae:	f7ff fd53 	bl	8017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80176b2:	4601      	mov	r1, r0
 80176b4:	4620      	mov	r0, r4
 80176b6:	462b      	mov	r3, r5
 80176b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80176bc:	4718      	bx	r3
 80176be:	bd70      	pop	{r4, r5, r6, pc}

080176c0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>:
 80176c0:	b538      	push	{r3, r4, r5, lr}
 80176c2:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
 80176c6:	4604      	mov	r4, r0
 80176c8:	460d      	mov	r5, r1
 80176ca:	428a      	cmp	r2, r1
 80176cc:	d008      	beq.n	80176e0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x20>
 80176ce:	2a01      	cmp	r2, #1
 80176d0:	6803      	ldr	r3, [r0, #0]
 80176d2:	d106      	bne.n	80176e2 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
 80176d4:	b929      	cbnz	r1, 80176e2 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x22>
 80176d6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80176da:	4798      	blx	r3
 80176dc:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 80176e0:	bd38      	pop	{r3, r4, r5, pc}
 80176e2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80176e6:	4620      	mov	r0, r4
 80176e8:	e7f7      	b.n	80176da <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE+0x1a>
	...

080176ec <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80176ec:	4b0d      	ldr	r3, [pc, #52]	; (8017724 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80176ee:	b510      	push	{r4, lr}
 80176f0:	781b      	ldrb	r3, [r3, #0]
 80176f2:	4604      	mov	r4, r0
 80176f4:	b95b      	cbnz	r3, 801770e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80176f6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80176fa:	2b02      	cmp	r3, #2
 80176fc:	d007      	beq.n	801770e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80176fe:	6840      	ldr	r0, [r0, #4]
 8017700:	f000 f930 	bl	8017964 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8017704:	b118      	cbz	r0, 801770e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8017706:	6862      	ldr	r2, [r4, #4]
 8017708:	7a53      	ldrb	r3, [r2, #9]
 801770a:	2b00      	cmp	r3, #0
 801770c:	d0fc      	beq.n	8017708 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801770e:	f7f8 f9af 	bl	800fa70 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8017712:	4620      	mov	r0, r4
 8017714:	2100      	movs	r1, #0
 8017716:	f7ff ffd3 	bl	80176c0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 801771a:	4620      	mov	r0, r4
 801771c:	f7ff fd1c 	bl	8017158 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8017720:	bd10      	pop	{r4, pc}
 8017722:	bf00      	nop
 8017724:	20004164 	.word	0x20004164

08017728 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 8017728:	4770      	bx	lr

0801772a <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 801772a:	2000      	movs	r0, #0
 801772c:	4770      	bx	lr

0801772e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801772e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8017732:	1a13      	subs	r3, r2, r0
 8017734:	4258      	negs	r0, r3
 8017736:	4158      	adcs	r0, r3
 8017738:	4770      	bx	lr

0801773a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801773a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801773e:	1a9b      	subs	r3, r3, r2
 8017740:	2b00      	cmp	r3, #0
 8017742:	bfdc      	itt	le
 8017744:	6882      	ldrle	r2, [r0, #8]
 8017746:	189b      	addle	r3, r3, r2
 8017748:	2b01      	cmp	r3, #1
 801774a:	bfcc      	ite	gt
 801774c:	2000      	movgt	r0, #0
 801774e:	2001      	movle	r0, #1
 8017750:	4770      	bx	lr

08017752 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8017752:	6902      	ldr	r2, [r0, #16]
 8017754:	6840      	ldr	r0, [r0, #4]
 8017756:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 801775a:	4770      	bx	lr

0801775c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801775c:	6803      	ldr	r3, [r0, #0]
 801775e:	691b      	ldr	r3, [r3, #16]
 8017760:	4718      	bx	r3

08017762 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8017762:	4770      	bx	lr

08017764 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8017764:	4770      	bx	lr
	...

08017768 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8017768:	2301      	movs	r3, #1
 801776a:	b570      	push	{r4, r5, r6, lr}
 801776c:	7203      	strb	r3, [r0, #8]
 801776e:	4604      	mov	r4, r0
 8017770:	6840      	ldr	r0, [r0, #4]
 8017772:	6803      	ldr	r3, [r0, #0]
 8017774:	699b      	ldr	r3, [r3, #24]
 8017776:	4798      	blx	r3
 8017778:	6803      	ldr	r3, [r0, #0]
 801777a:	4605      	mov	r5, r0
 801777c:	2b08      	cmp	r3, #8
 801777e:	d01e      	beq.n	80177be <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 8017780:	d80b      	bhi.n	801779a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8017782:	2b02      	cmp	r3, #2
 8017784:	d027      	beq.n	80177d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8017786:	2b04      	cmp	r3, #4
 8017788:	d011      	beq.n	80177ae <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 801778a:	2b01      	cmp	r3, #1
 801778c:	d028      	beq.n	80177e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801778e:	4b17      	ldr	r3, [pc, #92]	; (80177ec <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 8017790:	218c      	movs	r1, #140	; 0x8c
 8017792:	4a17      	ldr	r2, [pc, #92]	; (80177f0 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 8017794:	4817      	ldr	r0, [pc, #92]	; (80177f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 8017796:	f014 fba7 	bl	802bee8 <__assert_func>
 801779a:	2b40      	cmp	r3, #64	; 0x40
 801779c:	d020      	beq.n	80177e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801779e:	d801      	bhi.n	80177a4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80177a0:	2b20      	cmp	r3, #32
 80177a2:	e7f3      	b.n	801778c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 80177a4:	2b80      	cmp	r3, #128	; 0x80
 80177a6:	d01b      	beq.n	80177e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80177a8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80177ac:	e7ee      	b.n	801778c <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 80177ae:	6823      	ldr	r3, [r4, #0]
 80177b0:	7f01      	ldrb	r1, [r0, #28]
 80177b2:	4620      	mov	r0, r4
 80177b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80177b6:	4798      	blx	r3
 80177b8:	6823      	ldr	r3, [r4, #0]
 80177ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80177bc:	e006      	b.n	80177cc <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80177be:	6823      	ldr	r3, [r4, #0]
 80177c0:	7f01      	ldrb	r1, [r0, #28]
 80177c2:	4620      	mov	r0, r4
 80177c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80177c6:	4798      	blx	r3
 80177c8:	6823      	ldr	r3, [r4, #0]
 80177ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80177cc:	4629      	mov	r1, r5
 80177ce:	4620      	mov	r0, r4
 80177d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80177d4:	4718      	bx	r3
 80177d6:	6823      	ldr	r3, [r4, #0]
 80177d8:	4620      	mov	r0, r4
 80177da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80177dc:	4798      	blx	r3
 80177de:	e7f3      	b.n	80177c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 80177e0:	6823      	ldr	r3, [r4, #0]
 80177e2:	4620      	mov	r0, r4
 80177e4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80177e6:	4798      	blx	r3
 80177e8:	e7e6      	b.n	80177b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 80177ea:	bf00      	nop
 80177ec:	080303b5 	.word	0x080303b5
 80177f0:	080304c4 	.word	0x080304c4
 80177f4:	080303da 	.word	0x080303da

080177f8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80177f8:	b570      	push	{r4, r5, r6, lr}
 80177fa:	4604      	mov	r4, r0
 80177fc:	460e      	mov	r6, r1
 80177fe:	6860      	ldr	r0, [r4, #4]
 8017800:	6803      	ldr	r3, [r0, #0]
 8017802:	685b      	ldr	r3, [r3, #4]
 8017804:	4798      	blx	r3
 8017806:	2800      	cmp	r0, #0
 8017808:	d1f9      	bne.n	80177fe <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801780a:	4d0d      	ldr	r5, [pc, #52]	; (8017840 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 801780c:	6828      	ldr	r0, [r5, #0]
 801780e:	6803      	ldr	r3, [r0, #0]
 8017810:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8017812:	4798      	blx	r3
 8017814:	f7f8 f94e 	bl	800fab4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8017818:	6828      	ldr	r0, [r5, #0]
 801781a:	2101      	movs	r1, #1
 801781c:	f7ff ff50 	bl	80176c0 <_ZN8touchgfx3HAL19setRenderingVariantENS0_16RenderingVariantE>
 8017820:	6860      	ldr	r0, [r4, #4]
 8017822:	4631      	mov	r1, r6
 8017824:	6803      	ldr	r3, [r0, #0]
 8017826:	689b      	ldr	r3, [r3, #8]
 8017828:	4798      	blx	r3
 801782a:	6823      	ldr	r3, [r4, #0]
 801782c:	4620      	mov	r0, r4
 801782e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017830:	4798      	blx	r3
 8017832:	6828      	ldr	r0, [r5, #0]
 8017834:	6803      	ldr	r3, [r0, #0]
 8017836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801783a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801783c:	4718      	bx	r3
 801783e:	bf00      	nop
 8017840:	20004168 	.word	0x20004168

08017844 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8017844:	b508      	push	{r3, lr}
 8017846:	f7f8 f913 	bl	800fa70 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801784a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801784e:	f7f8 b925 	b.w	800fa9c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08017852 <_ZN8touchgfx13DMA_Interface5startEv>:
 8017852:	b510      	push	{r4, lr}
 8017854:	4604      	mov	r4, r0
 8017856:	6840      	ldr	r0, [r0, #4]
 8017858:	6803      	ldr	r3, [r0, #0]
 801785a:	681b      	ldr	r3, [r3, #0]
 801785c:	4798      	blx	r3
 801785e:	b948      	cbnz	r0, 8017874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8017860:	7a63      	ldrb	r3, [r4, #9]
 8017862:	b13b      	cbz	r3, 8017874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8017864:	7a23      	ldrb	r3, [r4, #8]
 8017866:	b92b      	cbnz	r3, 8017874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8017868:	6823      	ldr	r3, [r4, #0]
 801786a:	4620      	mov	r0, r4
 801786c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801786e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017872:	4718      	bx	r3
 8017874:	bd10      	pop	{r4, pc}
	...

08017878 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8017878:	b510      	push	{r4, lr}
 801787a:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 801787e:	1b12      	subs	r2, r2, r4
 8017880:	2a00      	cmp	r2, #0
 8017882:	bfdc      	itt	le
 8017884:	6883      	ldrle	r3, [r0, #8]
 8017886:	18d2      	addle	r2, r2, r3
 8017888:	2a01      	cmp	r2, #1
 801788a:	dd18      	ble.n	80178be <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 801788c:	6843      	ldr	r3, [r0, #4]
 801788e:	f101 021c 	add.w	r2, r1, #28
 8017892:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 8017896:	f851 4b04 	ldr.w	r4, [r1], #4
 801789a:	4291      	cmp	r1, r2
 801789c:	f843 4b04 	str.w	r4, [r3], #4
 80178a0:	d1f9      	bne.n	8017896 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 80178a2:	880a      	ldrh	r2, [r1, #0]
 80178a4:	801a      	strh	r2, [r3, #0]
 80178a6:	788a      	ldrb	r2, [r1, #2]
 80178a8:	709a      	strb	r2, [r3, #2]
 80178aa:	68c3      	ldr	r3, [r0, #12]
 80178ac:	6882      	ldr	r2, [r0, #8]
 80178ae:	f3bf 8f5b 	dmb	ish
 80178b2:	3301      	adds	r3, #1
 80178b4:	429a      	cmp	r2, r3
 80178b6:	bfd8      	it	le
 80178b8:	1a9b      	suble	r3, r3, r2
 80178ba:	60c3      	str	r3, [r0, #12]
 80178bc:	bd10      	pop	{r4, pc}
 80178be:	4b03      	ldr	r3, [pc, #12]	; (80178cc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 80178c0:	2139      	movs	r1, #57	; 0x39
 80178c2:	4a03      	ldr	r2, [pc, #12]	; (80178d0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 80178c4:	4803      	ldr	r0, [pc, #12]	; (80178d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 80178c6:	f014 fb0f 	bl	802bee8 <__assert_func>
 80178ca:	bf00      	nop
 80178cc:	08030400 	.word	0x08030400
 80178d0:	080304f4 	.word	0x080304f4
 80178d4:	080303da 	.word	0x080303da

080178d8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80178d8:	b510      	push	{r4, lr}
 80178da:	6803      	ldr	r3, [r0, #0]
 80178dc:	4604      	mov	r4, r0
 80178de:	681b      	ldr	r3, [r3, #0]
 80178e0:	4798      	blx	r3
 80178e2:	b128      	cbz	r0, 80178f0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 80178e4:	4b07      	ldr	r3, [pc, #28]	; (8017904 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 80178e6:	213f      	movs	r1, #63	; 0x3f
 80178e8:	4a07      	ldr	r2, [pc, #28]	; (8017908 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 80178ea:	4808      	ldr	r0, [pc, #32]	; (801790c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 80178ec:	f014 fafc 	bl	802bee8 <__assert_func>
 80178f0:	6923      	ldr	r3, [r4, #16]
 80178f2:	68a2      	ldr	r2, [r4, #8]
 80178f4:	f3bf 8f5b 	dmb	ish
 80178f8:	3301      	adds	r3, #1
 80178fa:	429a      	cmp	r2, r3
 80178fc:	bfd8      	it	le
 80178fe:	1a9b      	suble	r3, r3, r2
 8017900:	6123      	str	r3, [r4, #16]
 8017902:	bd10      	pop	{r4, pc}
 8017904:	08030423 	.word	0x08030423
 8017908:	08030542 	.word	0x08030542
 801790c:	080303da 	.word	0x080303da

08017910 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8017910:	b570      	push	{r4, r5, r6, lr}
 8017912:	4604      	mov	r4, r0
 8017914:	6840      	ldr	r0, [r0, #4]
 8017916:	6803      	ldr	r3, [r0, #0]
 8017918:	681b      	ldr	r3, [r3, #0]
 801791a:	4798      	blx	r3
 801791c:	4605      	mov	r5, r0
 801791e:	b930      	cbnz	r0, 801792e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8017920:	7a23      	ldrb	r3, [r4, #8]
 8017922:	b123      	cbz	r3, 801792e <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8017924:	6860      	ldr	r0, [r4, #4]
 8017926:	6803      	ldr	r3, [r0, #0]
 8017928:	695b      	ldr	r3, [r3, #20]
 801792a:	4798      	blx	r3
 801792c:	7225      	strb	r5, [r4, #8]
 801792e:	6860      	ldr	r0, [r4, #4]
 8017930:	6803      	ldr	r3, [r0, #0]
 8017932:	681b      	ldr	r3, [r3, #0]
 8017934:	4798      	blx	r3
 8017936:	b928      	cbnz	r0, 8017944 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8017938:	6823      	ldr	r3, [r4, #0]
 801793a:	4620      	mov	r0, r4
 801793c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801793e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017942:	4718      	bx	r3
 8017944:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017948:	f7f8 b8c0 	b.w	800facc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801794c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801794c:	b510      	push	{r4, lr}
 801794e:	6082      	str	r2, [r0, #8]
 8017950:	2200      	movs	r2, #0
 8017952:	4c03      	ldr	r4, [pc, #12]	; (8017960 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8017954:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8017958:	e9c0 4100 	strd	r4, r1, [r0]
 801795c:	bd10      	pop	{r4, pc}
 801795e:	bf00      	nop
 8017960:	080304a8 	.word	0x080304a8

08017964 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8017964:	6840      	ldr	r0, [r0, #4]
 8017966:	6803      	ldr	r3, [r0, #0]
 8017968:	681b      	ldr	r3, [r3, #0]
 801796a:	4718      	bx	r3

0801796c <_ZN8touchgfx21AbstractPainterRGB56510renderInitEv>:
 801796c:	2001      	movs	r0, #1
 801796e:	4770      	bx	lr

08017970 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh>:
 8017970:	4413      	add	r3, r2
 8017972:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017976:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 801797a:	7a45      	ldrb	r5, [r0, #9]
 801797c:	7a03      	ldrb	r3, [r0, #8]
 801797e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8017980:	436b      	muls	r3, r5
 8017982:	1c5d      	adds	r5, r3, #1
 8017984:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8017988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801798a:	122d      	asrs	r5, r5, #8
 801798c:	eb06 0c03 	add.w	ip, r6, r3
 8017990:	2dff      	cmp	r5, #255	; 0xff
 8017992:	d136      	bne.n	8017a02 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x92>
 8017994:	4f3a      	ldr	r7, [pc, #232]	; (8017a80 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x110>)
 8017996:	f816 eb01 	ldrb.w	lr, [r6], #1
 801799a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801799e:	d107      	bne.n	80179b0 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x40>
 80179a0:	8a83      	ldrh	r3, [r0, #20]
 80179a2:	800b      	strh	r3, [r1, #0]
 80179a4:	45b4      	cmp	ip, r6
 80179a6:	f101 0102 	add.w	r1, r1, #2
 80179aa:	d1f4      	bne.n	8017996 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x26>
 80179ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80179b0:	f8b1 8000 	ldrh.w	r8, [r1]
 80179b4:	ea6f 020e 	mvn.w	r2, lr
 80179b8:	8ac4      	ldrh	r4, [r0, #22]
 80179ba:	b2d2      	uxtb	r2, r2
 80179bc:	ea08 0307 	and.w	r3, r8, r7
 80179c0:	f408 69fc 	and.w	r9, r8, #2016	; 0x7e0
 80179c4:	f008 081f 	and.w	r8, r8, #31
 80179c8:	4353      	muls	r3, r2
 80179ca:	fb02 f909 	mul.w	r9, r2, r9
 80179ce:	fb0e 3404 	mla	r4, lr, r4, r3
 80179d2:	fb02 f208 	mul.w	r2, r2, r8
 80179d6:	fb94 f4f5 	sdiv	r4, r4, r5
 80179da:	ea04 0307 	and.w	r3, r4, r7
 80179de:	8b04      	ldrh	r4, [r0, #24]
 80179e0:	fb0e 9404 	mla	r4, lr, r4, r9
 80179e4:	fb94 f4f5 	sdiv	r4, r4, r5
 80179e8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80179ec:	431c      	orrs	r4, r3
 80179ee:	8b43      	ldrh	r3, [r0, #26]
 80179f0:	fb0e 2303 	mla	r3, lr, r3, r2
 80179f4:	fb93 f3f5 	sdiv	r3, r3, r5
 80179f8:	f003 031f 	and.w	r3, r3, #31
 80179fc:	431c      	orrs	r4, r3
 80179fe:	800c      	strh	r4, [r1, #0]
 8017a00:	e7d0      	b.n	80179a4 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x34>
 8017a02:	f8df 807c 	ldr.w	r8, [pc, #124]	; 8017a80 <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x110>
 8017a06:	f04f 0eff 	mov.w	lr, #255	; 0xff
 8017a0a:	f816 3b01 	ldrb.w	r3, [r6], #1
 8017a0e:	f8b1 9000 	ldrh.w	r9, [r1]
 8017a12:	fb13 f305 	smulbb	r3, r3, r5
 8017a16:	8ac4      	ldrh	r4, [r0, #22]
 8017a18:	f409 6afc 	and.w	sl, r9, #2016	; 0x7e0
 8017a1c:	4566      	cmp	r6, ip
 8017a1e:	b29b      	uxth	r3, r3
 8017a20:	f103 0201 	add.w	r2, r3, #1
 8017a24:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017a28:	ea09 0208 	and.w	r2, r9, r8
 8017a2c:	f009 091f 	and.w	r9, r9, #31
 8017a30:	ea4f 2323 	mov.w	r3, r3, asr #8
 8017a34:	ea6f 0703 	mvn.w	r7, r3
 8017a38:	b2ff      	uxtb	r7, r7
 8017a3a:	fb07 f202 	mul.w	r2, r7, r2
 8017a3e:	fb07 fa0a 	mul.w	sl, r7, sl
 8017a42:	fb03 2404 	mla	r4, r3, r4, r2
 8017a46:	8b02      	ldrh	r2, [r0, #24]
 8017a48:	fb07 f709 	mul.w	r7, r7, r9
 8017a4c:	fb03 a202 	mla	r2, r3, r2, sl
 8017a50:	fb94 f4fe 	sdiv	r4, r4, lr
 8017a54:	fb92 f2fe 	sdiv	r2, r2, lr
 8017a58:	ea04 0408 	and.w	r4, r4, r8
 8017a5c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a60:	ea44 0402 	orr.w	r4, r4, r2
 8017a64:	8b42      	ldrh	r2, [r0, #26]
 8017a66:	fb03 7302 	mla	r3, r3, r2, r7
 8017a6a:	fb93 f3fe 	sdiv	r3, r3, lr
 8017a6e:	f003 031f 	and.w	r3, r3, #31
 8017a72:	ea44 0403 	orr.w	r4, r4, r3
 8017a76:	f821 4b02 	strh.w	r4, [r1], #2
 8017a7a:	d1c6      	bne.n	8017a0a <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x9a>
 8017a7c:	e796      	b.n	80179ac <_ZN8touchgfx13PainterRGB5656renderEPhiiijPKh+0x3c>
 8017a7e:	bf00      	nop
 8017a80:	fffff800 	.word	0xfffff800

08017a84 <_ZN8touchgfx13PainterRGB56510renderNextERhS1_S1_S1_>:
 8017a84:	b510      	push	{r4, lr}
 8017a86:	8ac4      	ldrh	r4, [r0, #22]
 8017a88:	1224      	asrs	r4, r4, #8
 8017a8a:	700c      	strb	r4, [r1, #0]
 8017a8c:	8b01      	ldrh	r1, [r0, #24]
 8017a8e:	10c9      	asrs	r1, r1, #3
 8017a90:	7011      	strb	r1, [r2, #0]
 8017a92:	7e82      	ldrb	r2, [r0, #26]
 8017a94:	00d2      	lsls	r2, r2, #3
 8017a96:	701a      	strb	r2, [r3, #0]
 8017a98:	9b02      	ldr	r3, [sp, #8]
 8017a9a:	7a42      	ldrb	r2, [r0, #9]
 8017a9c:	2001      	movs	r0, #1
 8017a9e:	701a      	strb	r2, [r3, #0]
 8017aa0:	bd10      	pop	{r4, pc}

08017aa2 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh>:
 8017aa2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017aa6:	4617      	mov	r7, r2
 8017aa8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8017aac:	b085      	sub	sp, #20
 8017aae:	4698      	mov	r8, r3
 8017ab0:	443a      	add	r2, r7
 8017ab2:	4604      	mov	r4, r0
 8017ab4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017ab6:	460d      	mov	r5, r1
 8017ab8:	60c2      	str	r2, [r0, #12]
 8017aba:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8017abe:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8017ac0:	441a      	add	r2, r3
 8017ac2:	6803      	ldr	r3, [r0, #0]
 8017ac4:	6102      	str	r2, [r0, #16]
 8017ac6:	695b      	ldr	r3, [r3, #20]
 8017ac8:	4798      	blx	r3
 8017aca:	2800      	cmp	r0, #0
 8017acc:	d039      	beq.n	8017b42 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa0>
 8017ace:	4447      	add	r7, r8
 8017ad0:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 8017ad4:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8017ad6:	4437      	add	r7, r6
 8017ad8:	6823      	ldr	r3, [r4, #0]
 8017ada:	f10d 020f 	add.w	r2, sp, #15
 8017ade:	a903      	add	r1, sp, #12
 8017ae0:	4620      	mov	r0, r4
 8017ae2:	9200      	str	r2, [sp, #0]
 8017ae4:	f10d 020d 	add.w	r2, sp, #13
 8017ae8:	f8d3 8018 	ldr.w	r8, [r3, #24]
 8017aec:	f10d 030e 	add.w	r3, sp, #14
 8017af0:	47c0      	blx	r8
 8017af2:	b1f8      	cbz	r0, 8017b34 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x92>
 8017af4:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8017af8:	7a20      	ldrb	r0, [r4, #8]
 8017afa:	f89d 200c 	ldrb.w	r2, [sp, #12]
 8017afe:	4358      	muls	r0, r3
 8017b00:	f89d c00e 	ldrb.w	ip, [sp, #14]
 8017b04:	1c43      	adds	r3, r0, #1
 8017b06:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017b0a:	7830      	ldrb	r0, [r6, #0]
 8017b0c:	121b      	asrs	r3, r3, #8
 8017b0e:	fb10 f003 	smulbb	r0, r0, r3
 8017b12:	b283      	uxth	r3, r0
 8017b14:	1c58      	adds	r0, r3, #1
 8017b16:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017b1a:	6823      	ldr	r3, [r4, #0]
 8017b1c:	1200      	asrs	r0, r0, #8
 8017b1e:	f8d3 801c 	ldr.w	r8, [r3, #28]
 8017b22:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8017b26:	28ff      	cmp	r0, #255	; 0xff
 8017b28:	d10e      	bne.n	8017b48 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0xa6>
 8017b2a:	f8cd c000 	str.w	ip, [sp]
 8017b2e:	4629      	mov	r1, r5
 8017b30:	4620      	mov	r0, r4
 8017b32:	47c0      	blx	r8
 8017b34:	68e3      	ldr	r3, [r4, #12]
 8017b36:	3601      	adds	r6, #1
 8017b38:	3502      	adds	r5, #2
 8017b3a:	3301      	adds	r3, #1
 8017b3c:	42b7      	cmp	r7, r6
 8017b3e:	60e3      	str	r3, [r4, #12]
 8017b40:	d1ca      	bne.n	8017ad8 <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x36>
 8017b42:	b005      	add	sp, #20
 8017b44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017b48:	8829      	ldrh	r1, [r5, #0]
 8017b4a:	fa1f fe80 	uxth.w	lr, r0
 8017b4e:	43c0      	mvns	r0, r0
 8017b50:	fb12 f20e 	smulbb	r2, r2, lr
 8017b54:	ea4f 2921 	mov.w	r9, r1, asr #8
 8017b58:	fb13 f30e 	smulbb	r3, r3, lr
 8017b5c:	b2c0      	uxtb	r0, r0
 8017b5e:	fb1c fc0e 	smulbb	ip, ip, lr
 8017b62:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8017b66:	fb09 2200 	mla	r2, r9, r0, r2
 8017b6a:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8017b6e:	00c9      	lsls	r1, r1, #3
 8017b70:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017b74:	b292      	uxth	r2, r2
 8017b76:	b2c9      	uxtb	r1, r1
 8017b78:	fb09 3300 	mla	r3, r9, r0, r3
 8017b7c:	fb01 c000 	mla	r0, r1, r0, ip
 8017b80:	b29b      	uxth	r3, r3
 8017b82:	b280      	uxth	r0, r0
 8017b84:	1c59      	adds	r1, r3, #1
 8017b86:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017b8a:	1c51      	adds	r1, r2, #1
 8017b8c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017b90:	1c41      	adds	r1, r0, #1
 8017b92:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017b96:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8017b9a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8017b9e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017ba2:	9000      	str	r0, [sp, #0]
 8017ba4:	e7c3      	b.n	8017b2e <_ZN8touchgfx21AbstractPainterRGB5656renderEPhiiijPKh+0x8c>
	...

08017ba8 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh>:
 8017ba8:	00db      	lsls	r3, r3, #3
 8017baa:	f89d 0000 	ldrb.w	r0, [sp]
 8017bae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017bb2:	ea43 03d0 	orr.w	r3, r3, r0, lsr #3
 8017bb6:	4803      	ldr	r0, [pc, #12]	; (8017bc4 <_ZN8touchgfx21AbstractPainterRGB56511renderPixelEPthhh+0x1c>)
 8017bb8:	ea00 2202 	and.w	r2, r0, r2, lsl #8
 8017bbc:	4313      	orrs	r3, r2
 8017bbe:	800b      	strh	r3, [r1, #0]
 8017bc0:	4770      	bx	lr
 8017bc2:	bf00      	nop
 8017bc4:	fffff800 	.word	0xfffff800

08017bc8 <_ZN8touchgfx12CanvasWidget10setPainterERNS_15AbstractPainterE>:
 8017bc8:	6281      	str	r1, [r0, #40]	; 0x28
 8017bca:	4770      	bx	lr

08017bcc <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8017bcc:	b513      	push	{r0, r1, r4, lr}
 8017bce:	6803      	ldr	r3, [r0, #0]
 8017bd0:	4604      	mov	r4, r0
 8017bd2:	4601      	mov	r1, r0
 8017bd4:	4668      	mov	r0, sp
 8017bd6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8017bd8:	4798      	blx	r3
 8017bda:	6823      	ldr	r3, [r4, #0]
 8017bdc:	4669      	mov	r1, sp
 8017bde:	4620      	mov	r0, r4
 8017be0:	691b      	ldr	r3, [r3, #16]
 8017be2:	4798      	blx	r3
 8017be4:	b002      	add	sp, #8
 8017be6:	bd10      	pop	{r4, pc}

08017be8 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8017be8:	b510      	push	{r4, lr}
 8017bea:	2200      	movs	r2, #0
 8017bec:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8017bf0:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8017bf4:	8002      	strh	r2, [r0, #0]
 8017bf6:	8042      	strh	r2, [r0, #2]
 8017bf8:	8084      	strh	r4, [r0, #4]
 8017bfa:	80c1      	strh	r1, [r0, #6]
 8017bfc:	bd10      	pop	{r4, pc}

08017bfe <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 8017bfe:	2200      	movs	r2, #0
 8017c00:	8002      	strh	r2, [r0, #0]
 8017c02:	8042      	strh	r2, [r0, #2]
 8017c04:	8082      	strh	r2, [r0, #4]
 8017c06:	80c2      	strh	r2, [r0, #6]
 8017c08:	4770      	bx	lr
	...

08017c0c <_ZNK8touchgfx12CanvasWidget10getPainterEv>:
 8017c0c:	b508      	push	{r3, lr}
 8017c0e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8017c10:	b928      	cbnz	r0, 8017c1e <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x12>
 8017c12:	4b03      	ldr	r3, [pc, #12]	; (8017c20 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x14>)
 8017c14:	2123      	movs	r1, #35	; 0x23
 8017c16:	4a03      	ldr	r2, [pc, #12]	; (8017c24 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x18>)
 8017c18:	4803      	ldr	r0, [pc, #12]	; (8017c28 <_ZNK8touchgfx12CanvasWidget10getPainterEv+0x1c>)
 8017c1a:	f014 f965 	bl	802bee8 <__assert_func>
 8017c1e:	bd08      	pop	{r3, pc}
 8017c20:	080305c4 	.word	0x080305c4
 8017c24:	080306a4 	.word	0x080306a4
 8017c28:	080305eb 	.word	0x080305eb

08017c2c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8017c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c30:	b089      	sub	sp, #36	; 0x24
 8017c32:	4604      	mov	r4, r0
 8017c34:	6808      	ldr	r0, [r1, #0]
 8017c36:	f04f 0a00 	mov.w	sl, #0
 8017c3a:	6849      	ldr	r1, [r1, #4]
 8017c3c:	ab02      	add	r3, sp, #8
 8017c3e:	f04f 0b01 	mov.w	fp, #1
 8017c42:	c303      	stmia	r3!, {r0, r1}
 8017c44:	4b3f      	ldr	r3, [pc, #252]	; (8017d44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x118>)
 8017c46:	4621      	mov	r1, r4
 8017c48:	a804      	add	r0, sp, #16
 8017c4a:	781b      	ldrb	r3, [r3, #0]
 8017c4c:	2b01      	cmp	r3, #1
 8017c4e:	6823      	ldr	r3, [r4, #0]
 8017c50:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8017c52:	bf1f      	itttt	ne
 8017c54:	f10d 0906 	addne.w	r9, sp, #6
 8017c58:	ae03      	addne	r6, sp, #12
 8017c5a:	f10d 050e 	addne.w	r5, sp, #14
 8017c5e:	f10d 080a 	addne.w	r8, sp, #10
 8017c62:	bf01      	itttt	eq
 8017c64:	f10d 090e 	addeq.w	r9, sp, #14
 8017c68:	f10d 0606 	addeq.w	r6, sp, #6
 8017c6c:	ad03      	addeq	r5, sp, #12
 8017c6e:	f10d 0808 	addeq.w	r8, sp, #8
 8017c72:	4798      	blx	r3
 8017c74:	f9b5 3000 	ldrsh.w	r3, [r5]
 8017c78:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8017c7c:	2b00      	cmp	r3, #0
 8017c7e:	d056      	beq.n	8017d2e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x102>
 8017c80:	4293      	cmp	r3, r2
 8017c82:	bfa8      	it	ge
 8017c84:	4613      	movge	r3, r2
 8017c86:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017c8a:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8017c8e:	2f00      	cmp	r7, #0
 8017c90:	dd34      	ble.n	8017cfc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd0>
 8017c92:	f9bd 0010 	ldrsh.w	r0, [sp, #16]
 8017c96:	f8bd c014 	ldrh.w	ip, [sp, #20]
 8017c9a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017c9e:	4484      	add	ip, r0
 8017ca0:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017ca4:	f9b6 e000 	ldrsh.w	lr, [r6]
 8017ca8:	fa0f fc8c 	sxth.w	ip, ip
 8017cac:	f9b9 1000 	ldrsh.w	r1, [r9]
 8017cb0:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017cb4:	4562      	cmp	r2, ip
 8017cb6:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017cba:	f8ad e01c 	strh.w	lr, [sp, #28]
 8017cbe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8017cc2:	da29      	bge.n	8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017cc4:	4472      	add	r2, lr
 8017cc6:	b212      	sxth	r2, r2
 8017cc8:	4290      	cmp	r0, r2
 8017cca:	da25      	bge.n	8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017ccc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8017cd0:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017cd4:	4402      	add	r2, r0
 8017cd6:	b212      	sxth	r2, r2
 8017cd8:	4293      	cmp	r3, r2
 8017cda:	da1d      	bge.n	8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017cdc:	440b      	add	r3, r1
 8017cde:	b21b      	sxth	r3, r3
 8017ce0:	4298      	cmp	r0, r3
 8017ce2:	da19      	bge.n	8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017ce4:	6823      	ldr	r3, [r4, #0]
 8017ce6:	a906      	add	r1, sp, #24
 8017ce8:	4620      	mov	r0, r4
 8017cea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8017cec:	4798      	blx	r3
 8017cee:	b998      	cbnz	r0, 8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017cf0:	107f      	asrs	r7, r7, #1
 8017cf2:	f04f 0a01 	mov.w	sl, #1
 8017cf6:	f8ad 7006 	strh.w	r7, [sp, #6]
 8017cfa:	e7c6      	b.n	8017c8a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8017cfc:	d10c      	bne.n	8017d18 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>
 8017cfe:	f8ad b006 	strh.w	fp, [sp, #6]
 8017d02:	f8b8 2000 	ldrh.w	r2, [r8]
 8017d06:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8017d0a:	440a      	add	r2, r1
 8017d0c:	f8a8 2000 	strh.w	r2, [r8]
 8017d10:	882b      	ldrh	r3, [r5, #0]
 8017d12:	1a5b      	subs	r3, r3, r1
 8017d14:	802b      	strh	r3, [r5, #0]
 8017d16:	e7ad      	b.n	8017c74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8017d18:	f1ba 0f00 	cmp.w	sl, #0
 8017d1c:	d0f1      	beq.n	8017d02 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 8017d1e:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8017d22:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017d26:	429a      	cmp	r2, r3
 8017d28:	bf08      	it	eq
 8017d2a:	85a7      	strheq	r7, [r4, #44]	; 0x2c
 8017d2c:	e7e9      	b.n	8017d02 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd6>
 8017d2e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017d32:	429a      	cmp	r2, r3
 8017d34:	bf04      	itt	eq
 8017d36:	f647 73fe 	movweq	r3, #32766	; 0x7ffe
 8017d3a:	85a3      	strheq	r3, [r4, #44]	; 0x2c
 8017d3c:	b009      	add	sp, #36	; 0x24
 8017d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d42:	bf00      	nop
 8017d44:	2000415e 	.word	0x2000415e

08017d48 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8017d48:	2200      	movs	r2, #0
 8017d4a:	2101      	movs	r1, #1
 8017d4c:	8082      	strh	r2, [r0, #4]
 8017d4e:	80c2      	strh	r2, [r0, #6]
 8017d50:	8102      	strh	r2, [r0, #8]
 8017d52:	8142      	strh	r2, [r0, #10]
 8017d54:	8182      	strh	r2, [r0, #12]
 8017d56:	81c2      	strh	r2, [r0, #14]
 8017d58:	8202      	strh	r2, [r0, #16]
 8017d5a:	8242      	strh	r2, [r0, #18]
 8017d5c:	61c2      	str	r2, [r0, #28]
 8017d5e:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8017d62:	6282      	str	r2, [r0, #40]	; 0x28
 8017d64:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8017d68:	4905      	ldr	r1, [pc, #20]	; (8017d80 <_ZN8touchgfx12CanvasWidgetC1Ev+0x38>)
 8017d6a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017d6e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8017d72:	6001      	str	r1, [r0, #0]
 8017d74:	8582      	strh	r2, [r0, #44]	; 0x2c
 8017d76:	22ff      	movs	r2, #255	; 0xff
 8017d78:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 8017d7c:	4770      	bx	lr
 8017d7e:	bf00      	nop
 8017d80:	08030630 	.word	0x08030630

08017d84 <_ZN8touchgfx17AbstractDataGraph8setScaleEi>:
 8017d84:	62c1      	str	r1, [r0, #44]	; 0x2c
 8017d86:	4770      	bx	lr

08017d88 <_ZNK8touchgfx17AbstractDataGraph19getXAxisScaleScaledEv>:
 8017d88:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8017d8a:	4770      	bx	lr

08017d8c <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 8017d8c:	2300      	movs	r3, #0
 8017d8e:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8017d92:	4770      	bx	lr

08017d94 <_ZNK8touchgfx17AbstractDataGraph18indexToGlobalIndexEs>:
 8017d94:	4608      	mov	r0, r1
 8017d96:	4770      	bx	lr

08017d98 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 8017d98:	b530      	push	{r4, r5, lr}
 8017d9a:	460d      	mov	r5, r1
 8017d9c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8017d9e:	8949      	ldrh	r1, [r1, #10]
 8017da0:	b085      	sub	sp, #20
 8017da2:	4604      	mov	r4, r0
 8017da4:	1ac9      	subs	r1, r1, r3
 8017da6:	6803      	ldr	r3, [r0, #0]
 8017da8:	f10d 0206 	add.w	r2, sp, #6
 8017dac:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8017db0:	b209      	sxth	r1, r1
 8017db2:	4798      	blx	r3
 8017db4:	b1a0      	cbz	r0, 8017de0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8017db6:	792b      	ldrb	r3, [r5, #4]
 8017db8:	b993      	cbnz	r3, 8017de0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8017dba:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8017dbe:	b178      	cbz	r0, 8017de0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8017dc0:	6803      	ldr	r3, [r0, #0]
 8017dc2:	68db      	ldr	r3, [r3, #12]
 8017dc4:	4798      	blx	r3
 8017dc6:	b158      	cbz	r0, 8017de0 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 8017dc8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8017dcc:	aa02      	add	r2, sp, #8
 8017dce:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8017dd2:	4621      	mov	r1, r4
 8017dd4:	f8ad 3008 	strh.w	r3, [sp, #8]
 8017dd8:	9503      	str	r5, [sp, #12]
 8017dda:	6803      	ldr	r3, [r0, #0]
 8017ddc:	689b      	ldr	r3, [r3, #8]
 8017dde:	4798      	blx	r3
 8017de0:	b005      	add	sp, #20
 8017de2:	bd30      	pop	{r4, r5, pc}

08017de4 <_ZNK8touchgfx17AbstractDataGraph20getXAxisOffsetScaledEv>:
 8017de4:	2000      	movs	r0, #0
 8017de6:	4770      	bx	lr

08017de8 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEii>:
 8017de8:	b410      	push	{r4}
 8017dea:	6804      	ldr	r4, [r0, #0]
 8017dec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017dee:	f8d4 40b8 	ldr.w	r4, [r4, #184]	; 0xb8
 8017df2:	435a      	muls	r2, r3
 8017df4:	4359      	muls	r1, r3
 8017df6:	4623      	mov	r3, r4
 8017df8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017dfc:	4718      	bx	r3

08017dfe <_ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMinEv>:
 8017dfe:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8017e02:	4770      	bx	lr

08017e04 <_ZNK8touchgfx22AbstractDataGraphWithY17getGraphRangeXMaxEv>:
 8017e04:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8017e08:	4770      	bx	lr

08017e0a <_ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMinAsFloatEv>:
 8017e0a:	edd0 7a50 	vldr	s15, [r0, #320]	; 0x140
 8017e0e:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8017e12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e16:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8017e1a:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8017e1e:	4770      	bx	lr

08017e20 <_ZNK8touchgfx22AbstractDataGraphWithY24getGraphRangeYMaxAsFloatEv>:
 8017e20:	edd0 7a51 	vldr	s15, [r0, #324]	; 0x144
 8017e24:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8017e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e2c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8017e30:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8017e34:	4770      	bx	lr

08017e36 <_ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEi>:
 8017e36:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8017e38:	6803      	ldr	r3, [r0, #0]
 8017e3a:	4351      	muls	r1, r2
 8017e3c:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8017e40:	4718      	bx	r3

08017e42 <_ZNK8touchgfx22AbstractDataGraphWithY20getXAxisScaleAsFloatEv>:
 8017e42:	b510      	push	{r4, lr}
 8017e44:	6803      	ldr	r3, [r0, #0]
 8017e46:	4604      	mov	r4, r0
 8017e48:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8017e4c:	4798      	blx	r3
 8017e4e:	ed94 0a0b 	vldr	s0, [r4, #44]	; 0x2c
 8017e52:	ee07 0a90 	vmov	s15, r0
 8017e56:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8017e5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e5e:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8017e62:	bd10      	pop	{r4, pc}

08017e64 <_ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEi>:
 8017e64:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8017e66:	6803      	ldr	r3, [r0, #0]
 8017e68:	4351      	muls	r1, r2
 8017e6a:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8017e6e:	4718      	bx	r3

08017e70 <_ZNK8touchgfx22AbstractDataGraphWithY21getXAxisOffsetAsFloatEv>:
 8017e70:	b510      	push	{r4, lr}
 8017e72:	6803      	ldr	r3, [r0, #0]
 8017e74:	4604      	mov	r4, r0
 8017e76:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8017e7a:	4798      	blx	r3
 8017e7c:	ed94 0a0b 	vldr	s0, [r4, #44]	; 0x2c
 8017e80:	ee07 0a90 	vmov	s15, r0
 8017e84:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
 8017e88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017e8c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8017e90:	bd10      	pop	{r4, pc}

08017e92 <_ZN8touchgfx22AbstractDataGraphWithY14beforeAddValueEv>:
 8017e92:	4770      	bx	lr

08017e94 <_ZNK8touchgfx22AbstractDataGraphWithY9realIndexEs>:
 8017e94:	4608      	mov	r0, r1
 8017e96:	4770      	bx	lr

08017e98 <_ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointXScaledEs>:
 8017e98:	b538      	push	{r3, r4, r5, lr}
 8017e9a:	6803      	ldr	r3, [r0, #0]
 8017e9c:	4604      	mov	r4, r0
 8017e9e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8017ea2:	4798      	blx	r3
 8017ea4:	6823      	ldr	r3, [r4, #0]
 8017ea6:	4605      	mov	r5, r0
 8017ea8:	4620      	mov	r0, r4
 8017eaa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8017eae:	4798      	blx	r3
 8017eb0:	6823      	ldr	r3, [r4, #0]
 8017eb2:	4345      	muls	r5, r0
 8017eb4:	4620      	mov	r0, r4
 8017eb6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 8017eba:	4798      	blx	r3
 8017ebc:	4428      	add	r0, r5
 8017ebe:	bd38      	pop	{r3, r4, r5, pc}

08017ec0 <_ZNK8touchgfx22AbstractDataGraphWithY23indexToDataPointYScaledEs>:
 8017ec0:	b510      	push	{r4, lr}
 8017ec2:	6803      	ldr	r3, [r0, #0]
 8017ec4:	f8d0 4128 	ldr.w	r4, [r0, #296]	; 0x128
 8017ec8:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8017ecc:	4798      	blx	r3
 8017ece:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8017ed2:	bd10      	pop	{r4, pc}

08017ed4 <_ZN8touchgfx22AbstractDataGraphWithY19setXAxisScaleScaledEi>:
 8017ed4:	f8c0 1134 	str.w	r1, [r0, #308]	; 0x134
 8017ed8:	4770      	bx	lr

08017eda <_ZNK8touchgfx22AbstractDataGraphWithY19getXAxisScaleScaledEv>:
 8017eda:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8017ede:	4770      	bx	lr

08017ee0 <_ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMinScaledEv>:
 8017ee0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8017ee4:	4770      	bx	lr

08017ee6 <_ZNK8touchgfx22AbstractDataGraphWithY23getGraphRangeYMaxScaledEv>:
 8017ee6:	f8d0 0144 	ldr.w	r0, [r0, #324]	; 0x144
 8017eea:	4770      	bx	lr

08017eec <_ZN8touchgfx22AbstractDataGraphWithY20setXAxisOffsetScaledEi>:
 8017eec:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8017ef0:	4770      	bx	lr

08017ef2 <_ZNK8touchgfx22AbstractDataGraphWithY20getXAxisOffsetScaledEv>:
 8017ef2:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8017ef6:	4770      	bx	lr

08017ef8 <_ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenXQ5Es>:
 8017ef8:	6803      	ldr	r3, [r0, #0]
 8017efa:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8017efe:	4718      	bx	r3

08017f00 <_ZNK8touchgfx22AbstractDataGraphWithY16indexToScreenYQ5Es>:
 8017f00:	b570      	push	{r4, r5, r6, lr}
 8017f02:	6803      	ldr	r3, [r0, #0]
 8017f04:	4604      	mov	r4, r0
 8017f06:	f8d0 6128 	ldr.w	r6, [r0, #296]	; 0x128
 8017f0a:	f8d3 50d0 	ldr.w	r5, [r3, #208]	; 0xd0
 8017f0e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8017f12:	4798      	blx	r3
 8017f14:	462b      	mov	r3, r5
 8017f16:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8017f1a:	4620      	mov	r0, r4
 8017f1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017f20:	4718      	bx	r3
	...

08017f24 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>:
 8017f24:	4291      	cmp	r1, r2
 8017f26:	b510      	push	{r4, lr}
 8017f28:	4604      	mov	r4, r0
 8017f2a:	d106      	bne.n	8017f3a <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x16>
 8017f2c:	4b12      	ldr	r3, [pc, #72]	; (8017f78 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x54>)
 8017f2e:	f240 11dd 	movw	r1, #477	; 0x1dd
 8017f32:	4a12      	ldr	r2, [pc, #72]	; (8017f7c <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x58>)
 8017f34:	4812      	ldr	r0, [pc, #72]	; (8017f80 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x5c>)
 8017f36:	f013 ffd7 	bl	802bee8 <__assert_func>
 8017f3a:	bfc2      	ittt	gt
 8017f3c:	460b      	movgt	r3, r1
 8017f3e:	4611      	movgt	r1, r2
 8017f40:	461a      	movgt	r2, r3
 8017f42:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8017f46:	428b      	cmp	r3, r1
 8017f48:	d103      	bne.n	8017f52 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x2e>
 8017f4a:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
 8017f4e:	4293      	cmp	r3, r2
 8017f50:	d011      	beq.n	8017f76 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii+0x52>
 8017f52:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
 8017f56:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 8017f5a:	f8c4 213c 	str.w	r2, [r4, #316]	; 0x13c
 8017f5e:	f004 f9ff 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017f62:	f104 0034 	add.w	r0, r4, #52	; 0x34
 8017f66:	f004 f9fb 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017f6a:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8017f6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017f72:	f004 b9f5 	b.w	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017f76:	bd10      	pop	{r4, pc}
 8017f78:	080306f2 	.word	0x080306f2
 8017f7c:	0803095c 	.word	0x0803095c
 8017f80:	080306fd 	.word	0x080306fd

08017f84 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii>:
 8017f84:	4291      	cmp	r1, r2
 8017f86:	b510      	push	{r4, lr}
 8017f88:	4604      	mov	r4, r0
 8017f8a:	d106      	bne.n	8017f9a <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x16>
 8017f8c:	4b12      	ldr	r3, [pc, #72]	; (8017fd8 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x54>)
 8017f8e:	f44f 712f 	mov.w	r1, #700	; 0x2bc
 8017f92:	4a12      	ldr	r2, [pc, #72]	; (8017fdc <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x58>)
 8017f94:	4812      	ldr	r0, [pc, #72]	; (8017fe0 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x5c>)
 8017f96:	f013 ffa7 	bl	802bee8 <__assert_func>
 8017f9a:	bfc2      	ittt	gt
 8017f9c:	460b      	movgt	r3, r1
 8017f9e:	4611      	movgt	r1, r2
 8017fa0:	461a      	movgt	r2, r3
 8017fa2:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
 8017fa6:	428b      	cmp	r3, r1
 8017fa8:	d103      	bne.n	8017fb2 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x2e>
 8017faa:	f8d0 3144 	ldr.w	r3, [r0, #324]	; 0x144
 8017fae:	4293      	cmp	r3, r2
 8017fb0:	d011      	beq.n	8017fd6 <_ZN8touchgfx22AbstractDataGraphWithY20setGraphRangeYScaledEii+0x52>
 8017fb2:	f8c4 1140 	str.w	r1, [r4, #320]	; 0x140
 8017fb6:	f104 0060 	add.w	r0, r4, #96	; 0x60
 8017fba:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
 8017fbe:	f004 f9cf 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017fc2:	f104 0034 	add.w	r0, r4, #52	; 0x34
 8017fc6:	f004 f9cb 	bl	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017fca:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 8017fce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017fd2:	f004 b9c5 	b.w	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>
 8017fd6:	bd10      	pop	{r4, pc}
 8017fd8:	080306f2 	.word	0x080306f2
 8017fdc:	080309a4 	.word	0x080309a4
 8017fe0:	080306fd 	.word	0x080306fd

08017fe4 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 8017fe4:	b530      	push	{r4, r5, lr}
 8017fe6:	790b      	ldrb	r3, [r1, #4]
 8017fe8:	b085      	sub	sp, #20
 8017fea:	4604      	mov	r4, r0
 8017fec:	460d      	mov	r5, r1
 8017fee:	2b02      	cmp	r3, #2
 8017ff0:	d020      	beq.n	8018034 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8017ff2:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8017ff4:	f10d 0206 	add.w	r2, sp, #6
 8017ff8:	88c9      	ldrh	r1, [r1, #6]
 8017ffa:	1ac9      	subs	r1, r1, r3
 8017ffc:	6803      	ldr	r3, [r0, #0]
 8017ffe:	b209      	sxth	r1, r1
 8018000:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8018004:	4798      	blx	r3
 8018006:	b1a8      	cbz	r0, 8018034 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8018008:	792b      	ldrb	r3, [r5, #4]
 801800a:	2b01      	cmp	r3, #1
 801800c:	d812      	bhi.n	8018034 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801800e:	f8d4 0120 	ldr.w	r0, [r4, #288]	; 0x120
 8018012:	b178      	cbz	r0, 8018034 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8018014:	6803      	ldr	r3, [r0, #0]
 8018016:	68db      	ldr	r3, [r3, #12]
 8018018:	4798      	blx	r3
 801801a:	b158      	cbz	r0, 8018034 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801801c:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8018020:	aa02      	add	r2, sp, #8
 8018022:	f8d4 0120 	ldr.w	r0, [r4, #288]	; 0x120
 8018026:	4621      	mov	r1, r4
 8018028:	f8ad 3008 	strh.w	r3, [sp, #8]
 801802c:	9503      	str	r5, [sp, #12]
 801802e:	6803      	ldr	r3, [r0, #0]
 8018030:	689b      	ldr	r3, [r3, #8]
 8018032:	4798      	blx	r3
 8018034:	b005      	add	sp, #20
 8018036:	bd30      	pop	{r4, r5, pc}

08018038 <_ZN8touchgfx9ContainerC1Ev>:
 8018038:	2101      	movs	r1, #1
 801803a:	2200      	movs	r2, #0
 801803c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8018040:	4908      	ldr	r1, [pc, #32]	; (8018064 <_ZN8touchgfx9ContainerC1Ev+0x2c>)
 8018042:	8082      	strh	r2, [r0, #4]
 8018044:	80c2      	strh	r2, [r0, #6]
 8018046:	8102      	strh	r2, [r0, #8]
 8018048:	8142      	strh	r2, [r0, #10]
 801804a:	8182      	strh	r2, [r0, #12]
 801804c:	81c2      	strh	r2, [r0, #14]
 801804e:	8202      	strh	r2, [r0, #16]
 8018050:	8242      	strh	r2, [r0, #18]
 8018052:	61c2      	str	r2, [r0, #28]
 8018054:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8018058:	6001      	str	r1, [r0, #0]
 801805a:	6282      	str	r2, [r0, #40]	; 0x28
 801805c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018060:	4770      	bx	lr
 8018062:	bf00      	nop
 8018064:	0802fd68 	.word	0x0802fd68

08018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 8018068:	6800      	ldr	r0, [r0, #0]
 801806a:	2800      	cmp	r0, #0
 801806c:	bfbd      	ittte	lt
 801806e:	380f      	sublt	r0, #15
 8018070:	2320      	movlt	r3, #32
 8018072:	fb90 f0f3 	sdivlt	r0, r0, r3
 8018076:	3010      	addge	r0, #16
 8018078:	bfa8      	it	ge
 801807a:	1140      	asrge	r0, r0, #5
 801807c:	4770      	bx	lr

0801807e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
 801807e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018080:	ab01      	add	r3, sp, #4
 8018082:	4615      	mov	r5, r2
 8018084:	f004 fb28 	bl	801c6d8 <_ZN8touchgfx6muldivElllRl>
 8018088:	2800      	cmp	r0, #0
 801808a:	462a      	mov	r2, r5
 801808c:	9901      	ldr	r1, [sp, #4]
 801808e:	ea4f 1440 	mov.w	r4, r0, lsl #5
 8018092:	f04f 0020 	mov.w	r0, #32
 8018096:	db04      	blt.n	80180a2 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
 8018098:	f004 fb3d 	bl	801c716 <_ZN8touchgfx6muldivElll>
 801809c:	4420      	add	r0, r4
 801809e:	b003      	add	sp, #12
 80180a0:	bd30      	pop	{r4, r5, pc}
 80180a2:	f004 fb38 	bl	801c716 <_ZN8touchgfx6muldivElll>
 80180a6:	1a20      	subs	r0, r4, r0
 80180a8:	e7f9      	b.n	801809e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

080180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>:
 80180aa:	ee07 0a90 	vmov	s15, r0
 80180ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80180b2:	ee27 0a80 	vmul.f32	s0, s15, s0
 80180b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80180ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180be:	db08      	blt.n	80180d2 <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi+0x28>
 80180c0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80180c4:	ee30 0a27 	vadd.f32	s0, s0, s15
 80180c8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80180cc:	ee17 0a90 	vmov	r0, s15
 80180d0:	4770      	bx	lr
 80180d2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80180d6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80180da:	ee17 3a90 	vmov	r3, s15
 80180de:	1e58      	subs	r0, r3, #1
 80180e0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80180e4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80180e8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80180ec:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80180f0:	ee10 3a10 	vmov	r3, s0
 80180f4:	4403      	add	r3, r0
 80180f6:	4618      	mov	r0, r3
 80180f8:	4770      	bx	lr

080180fa <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeYEff>:
 80180fa:	b570      	push	{r4, r5, r6, lr}
 80180fc:	ed2d 8b02 	vpush	{d8}
 8018100:	eeb0 8a60 	vmov.f32	s16, s1
 8018104:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 8018106:	4604      	mov	r4, r0
 8018108:	4628      	mov	r0, r5
 801810a:	f7ff ffce 	bl	80180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 801810e:	eeb0 0a48 	vmov.f32	s0, s16
 8018112:	4606      	mov	r6, r0
 8018114:	4628      	mov	r0, r5
 8018116:	f7ff ffc8 	bl	80180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 801811a:	6823      	ldr	r3, [r4, #0]
 801811c:	4602      	mov	r2, r0
 801811e:	4631      	mov	r1, r6
 8018120:	4620      	mov	r0, r4
 8018122:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8018126:	ecbd 8b02 	vpop	{d8}
 801812a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801812e:	4718      	bx	r3

08018130 <_ZN8touchgfx22AbstractDataGraphWithY13setXAxisScaleEf>:
 8018130:	b510      	push	{r4, lr}
 8018132:	4604      	mov	r4, r0
 8018134:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018136:	f7ff ffb8 	bl	80180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 801813a:	4601      	mov	r1, r0
 801813c:	6823      	ldr	r3, [r4, #0]
 801813e:	4620      	mov	r0, r4
 8018140:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8018144:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018148:	4718      	bx	r3

0801814a <_ZN8touchgfx22AbstractDataGraphWithY14setXAxisOffsetEf>:
 801814a:	b510      	push	{r4, lr}
 801814c:	4604      	mov	r4, r0
 801814e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018150:	f7ff ffab 	bl	80180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 8018154:	4601      	mov	r1, r0
 8018156:	6823      	ldr	r3, [r4, #0]
 8018158:	4620      	mov	r0, r4
 801815a:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 801815e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018162:	4718      	bx	r3

08018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>:
 8018164:	2800      	cmp	r0, #0
 8018166:	db07      	blt.n	8018178 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii+0x14>
 8018168:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 801816c:	fb90 f0f1 	sdiv	r0, r0, r1
 8018170:	2102      	movs	r1, #2
 8018172:	fb90 f0f1 	sdiv	r0, r0, r1
 8018176:	4770      	bx	lr
 8018178:	f06f 0301 	mvn.w	r3, #1
 801817c:	fb03 1000 	mla	r0, r3, r0, r1
 8018180:	3801      	subs	r0, #1
 8018182:	fb90 f0f1 	sdiv	r0, r0, r1
 8018186:	2102      	movs	r1, #2
 8018188:	fb90 f0f1 	sdiv	r0, r0, r1
 801818c:	4240      	negs	r0, r0
 801818e:	4770      	bx	lr

08018190 <_ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMinAsIntEv>:
 8018190:	b508      	push	{r3, lr}
 8018192:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8018194:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8018198:	f7ff ffe4 	bl	8018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 801819c:	bd08      	pop	{r3, pc}

0801819e <_ZNK8touchgfx22AbstractDataGraphWithY22getGraphRangeYMaxAsIntEv>:
 801819e:	b508      	push	{r3, lr}
 80181a0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80181a2:	f8d0 0144 	ldr.w	r0, [r0, #324]	; 0x144
 80181a6:	f7ff ffdd 	bl	8018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 80181aa:	bd08      	pop	{r3, pc}

080181ac <_ZNK8touchgfx22AbstractDataGraphWithY18getXAxisScaleAsIntEv>:
 80181ac:	b510      	push	{r4, lr}
 80181ae:	6803      	ldr	r3, [r0, #0]
 80181b0:	4604      	mov	r4, r0
 80181b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80181b6:	4798      	blx	r3
 80181b8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80181ba:	f7ff ffd3 	bl	8018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 80181be:	bd10      	pop	{r4, pc}

080181c0 <_ZNK8touchgfx22AbstractDataGraphWithY19getXAxisOffsetAsIntEv>:
 80181c0:	b510      	push	{r4, lr}
 80181c2:	6803      	ldr	r3, [r0, #0]
 80181c4:	4604      	mov	r4, r0
 80181c6:	f8d3 30e4 	ldr.w	r3, [r3, #228]	; 0xe4
 80181ca:	4798      	blx	r3
 80181cc:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80181ce:	f7ff ffc9 	bl	8018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 80181d2:	bd10      	pop	{r4, pc}

080181d4 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>:
 80181d4:	f890 0030 	ldrb.w	r0, [r0, #48]	; 0x30
 80181d8:	4770      	bx	lr

080181da <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 80181da:	f8a0 3114 	strh.w	r3, [r0, #276]	; 0x114
 80181de:	f9bd 3000 	ldrsh.w	r3, [sp]
 80181e2:	f8a0 1110 	strh.w	r1, [r0, #272]	; 0x110
 80181e6:	f8a0 2112 	strh.w	r2, [r0, #274]	; 0x112
 80181ea:	f8a0 3116 	strh.w	r3, [r0, #278]	; 0x116
 80181ee:	4770      	bx	lr

080181f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>:
 80181f0:	f9b0 0110 	ldrsh.w	r0, [r0, #272]	; 0x110
 80181f4:	4770      	bx	lr

080181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>:
 80181f6:	f9b0 0112 	ldrsh.w	r0, [r0, #274]	; 0x112
 80181fa:	4770      	bx	lr

080181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>:
 80181fc:	f8b0 3112 	ldrh.w	r3, [r0, #274]	; 0x112
 8018200:	f8b0 2114 	ldrh.w	r2, [r0, #276]	; 0x114
 8018204:	8f80      	ldrh	r0, [r0, #60]	; 0x3c
 8018206:	4413      	add	r3, r2
 8018208:	1ac0      	subs	r0, r0, r3
 801820a:	b200      	sxth	r0, r0
 801820c:	4770      	bx	lr

0801820e <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_>:
 801820e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018212:	4690      	mov	r8, r2
 8018214:	f9b0 211a 	ldrsh.w	r2, [r0, #282]	; 0x11a
 8018218:	4604      	mov	r4, r0
 801821a:	461e      	mov	r6, r3
 801821c:	9d06      	ldr	r5, [sp, #24]
 801821e:	b92a      	cbnz	r2, 801822c <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8018220:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8018224:	802b      	strh	r3, [r5, #0]
 8018226:	8033      	strh	r3, [r6, #0]
 8018228:	2000      	movs	r0, #0
 801822a:	e009      	b.n	8018240 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>
 801822c:	f7ff ffe6 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 8018230:	2801      	cmp	r0, #1
 8018232:	d107      	bne.n	8018244 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x36>
 8018234:	2300      	movs	r3, #0
 8018236:	8033      	strh	r3, [r6, #0]
 8018238:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801823c:	3b01      	subs	r3, #1
 801823e:	802b      	strh	r3, [r5, #0]
 8018240:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018244:	f9b4 c112 	ldrsh.w	ip, [r4, #274]	; 0x112
 8018248:	1e42      	subs	r2, r0, #1
 801824a:	f8d4 713c 	ldr.w	r7, [r4, #316]	; 0x13c
 801824e:	eba1 0c0c 	sub.w	ip, r1, ip
 8018252:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8018256:	ea4f 104c 	mov.w	r0, ip, lsl #5
 801825a:	1af9      	subs	r1, r7, r3
 801825c:	f004 fa5b 	bl	801c716 <_ZN8touchgfx6muldivElll>
 8018260:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 8018264:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 8018268:	eb00 1743 	add.w	r7, r0, r3, lsl #5
 801826c:	4620      	mov	r0, r4
 801826e:	1ac9      	subs	r1, r1, r3
 8018270:	f7ff ffc4 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 8018274:	f9b4 3112 	ldrsh.w	r3, [r4, #274]	; 0x112
 8018278:	1e42      	subs	r2, r0, #1
 801827a:	eba8 0803 	sub.w	r8, r8, r3
 801827e:	ea4f 1048 	mov.w	r0, r8, lsl #5
 8018282:	f004 fa48 	bl	801c716 <_ZN8touchgfx6muldivElll>
 8018286:	f8d4 2138 	ldr.w	r2, [r4, #312]	; 0x138
 801828a:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 801828e:	4287      	cmp	r7, r0
 8018290:	bfc2      	ittt	gt
 8018292:	463b      	movgt	r3, r7
 8018294:	4607      	movgt	r7, r0
 8018296:	4618      	movgt	r0, r3
 8018298:	2800      	cmp	r0, #0
 801829a:	bfb5      	itete	lt
 801829c:	2320      	movlt	r3, #32
 801829e:	301f      	addge	r0, #31
 80182a0:	fb90 f0f3 	sdivlt	r0, r0, r3
 80182a4:	1140      	asrge	r0, r0, #5
 80182a6:	2800      	cmp	r0, #0
 80182a8:	da03      	bge.n	80182b2 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0xa4>
 80182aa:	2000      	movs	r0, #0
 80182ac:	8028      	strh	r0, [r5, #0]
 80182ae:	8030      	strh	r0, [r6, #0]
 80182b0:	e7c6      	b.n	8018240 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>
 80182b2:	2320      	movs	r3, #32
 80182b4:	fb97 f7f3 	sdiv	r7, r7, r3
 80182b8:	f9b4 311a 	ldrsh.w	r3, [r4, #282]	; 0x11a
 80182bc:	3b01      	subs	r3, #1
 80182be:	429f      	cmp	r7, r3
 80182c0:	dd03      	ble.n	80182ca <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0xbc>
 80182c2:	b218      	sxth	r0, r3
 80182c4:	8028      	strh	r0, [r5, #0]
 80182c6:	8030      	strh	r0, [r6, #0]
 80182c8:	e7ae      	b.n	8018228 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80182ca:	4283      	cmp	r3, r0
 80182cc:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 80182d0:	bfb8      	it	lt
 80182d2:	b218      	sxthlt	r0, r3
 80182d4:	8037      	strh	r7, [r6, #0]
 80182d6:	bfa8      	it	ge
 80182d8:	b200      	sxthge	r0, r0
 80182da:	8028      	strh	r0, [r5, #0]
 80182dc:	2001      	movs	r0, #1
 80182de:	e7af      	b.n	8018240 <_ZNK8touchgfx22AbstractDataGraphWithY24xScreenRangeToIndexRangeEssRsS1_+0x32>

080182e0 <_ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenXQ5Ei>:
 80182e0:	b570      	push	{r4, r5, r6, lr}
 80182e2:	4604      	mov	r4, r0
 80182e4:	f8d0 5138 	ldr.w	r5, [r0, #312]	; 0x138
 80182e8:	1b4e      	subs	r6, r1, r5
 80182ea:	f7ff ff87 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 80182ee:	f8d4 213c 	ldr.w	r2, [r4, #316]	; 0x13c
 80182f2:	1e41      	subs	r1, r0, #1
 80182f4:	4630      	mov	r0, r6
 80182f6:	1b52      	subs	r2, r2, r5
 80182f8:	f7ff fec1 	bl	801807e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 80182fc:	f9b4 3112 	ldrsh.w	r3, [r4, #274]	; 0x112
 8018300:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8018304:	bd70      	pop	{r4, r5, r6, pc}

08018306 <_ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv>:
 8018306:	f9b0 003c 	ldrsh.w	r0, [r0, #60]	; 0x3c
 801830a:	4770      	bx	lr

0801830c <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>:
 801830c:	f8b0 3110 	ldrh.w	r3, [r0, #272]	; 0x110
 8018310:	f8b0 2116 	ldrh.w	r2, [r0, #278]	; 0x116
 8018314:	8fc0      	ldrh	r0, [r0, #62]	; 0x3e
 8018316:	4413      	add	r3, r2
 8018318:	1ac0      	subs	r0, r0, r3
 801831a:	b200      	sxth	r0, r0
 801831c:	4770      	bx	lr

0801831e <_ZNK8touchgfx22AbstractDataGraphWithY16valueToScreenYQ5Ei>:
 801831e:	b570      	push	{r4, r5, r6, lr}
 8018320:	4605      	mov	r5, r0
 8018322:	460e      	mov	r6, r1
 8018324:	f7ff fff2 	bl	801830c <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 8018328:	1e41      	subs	r1, r0, #1
 801832a:	f9b5 4110 	ldrsh.w	r4, [r5, #272]	; 0x110
 801832e:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 8018332:	4404      	add	r4, r0
 8018334:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 8018338:	1af0      	subs	r0, r6, r3
 801833a:	3c01      	subs	r4, #1
 801833c:	1ad2      	subs	r2, r2, r3
 801833e:	f7ff fe9e 	bl	801807e <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8018342:	0164      	lsls	r4, r4, #5
 8018344:	1a20      	subs	r0, r4, r0
 8018346:	bd70      	pop	{r4, r5, r6, pc}

08018348 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8018348:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801834a:	4604      	mov	r4, r0
 801834c:	3034      	adds	r0, #52	; 0x34
 801834e:	460d      	mov	r5, r1
 8018350:	f7fe fae0 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8018354:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 8018358:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 801835c:	4628      	mov	r0, r5
 801835e:	9200      	str	r2, [sp, #0]
 8018360:	2200      	movs	r2, #0
 8018362:	4611      	mov	r1, r2
 8018364:	f7f1 fed1 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018368:	b003      	add	sp, #12
 801836a:	bd30      	pop	{r4, r5, pc}

0801836c <_ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv>:
 801836c:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 8018370:	4770      	bx	lr

08018372 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>:
 8018372:	b507      	push	{r0, r1, r2, lr}
 8018374:	6803      	ldr	r3, [r0, #0]
 8018376:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 801837a:	4798      	blx	r3
 801837c:	ab02      	add	r3, sp, #8
 801837e:	f843 0d04 	str.w	r0, [r3, #-4]!
 8018382:	4618      	mov	r0, r3
 8018384:	f7ff fe70 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018388:	b200      	sxth	r0, r0
 801838a:	b003      	add	sp, #12
 801838c:	f85d fb04 	ldr.w	pc, [sp], #4

08018390 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 8018390:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018392:	f9b0 311a 	ldrsh.w	r3, [r0, #282]	; 0x11a
 8018396:	b085      	sub	sp, #20
 8018398:	4605      	mov	r5, r0
 801839a:	460f      	mov	r7, r1
 801839c:	4616      	mov	r6, r2
 801839e:	b333      	cbz	r3, 80183ee <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x5e>
 80183a0:	6803      	ldr	r3, [r0, #0]
 80183a2:	f10d 020e 	add.w	r2, sp, #14
 80183a6:	9200      	str	r2, [sp, #0]
 80183a8:	460a      	mov	r2, r1
 80183aa:	f8d3 40dc 	ldr.w	r4, [r3, #220]	; 0xdc
 80183ae:	ab03      	add	r3, sp, #12
 80183b0:	47a0      	blx	r4
 80183b2:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
 80183b6:	4628      	mov	r0, r5
 80183b8:	f7ff ffdb 	bl	8018372 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 80183bc:	f9bd 100e 	ldrsh.w	r1, [sp, #14]
 80183c0:	4604      	mov	r4, r0
 80183c2:	4628      	mov	r0, r5
 80183c4:	f7ff ffd5 	bl	8018372 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 80183c8:	1bc0      	subs	r0, r0, r7
 80183ca:	1be4      	subs	r4, r4, r7
 80183cc:	2800      	cmp	r0, #0
 80183ce:	bfb8      	it	lt
 80183d0:	4240      	neglt	r0, r0
 80183d2:	2c00      	cmp	r4, #0
 80183d4:	bfb8      	it	lt
 80183d6:	4264      	neglt	r4, r4
 80183d8:	42a0      	cmp	r0, r4
 80183da:	f04f 0001 	mov.w	r0, #1
 80183de:	bfac      	ite	ge
 80183e0:	f9bd 300c 	ldrshge.w	r3, [sp, #12]
 80183e4:	f9bd 300e 	ldrshlt.w	r3, [sp, #14]
 80183e8:	8033      	strh	r3, [r6, #0]
 80183ea:	b005      	add	sp, #20
 80183ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80183ee:	4618      	mov	r0, r3
 80183f0:	e7fb      	b.n	80183ea <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x5a>

080183f2 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs>:
 80183f2:	b507      	push	{r0, r1, r2, lr}
 80183f4:	6803      	ldr	r3, [r0, #0]
 80183f6:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 80183fa:	4798      	blx	r3
 80183fc:	ab02      	add	r3, sp, #8
 80183fe:	f843 0d04 	str.w	r0, [r3, #-4]!
 8018402:	4618      	mov	r0, r3
 8018404:	f7ff fe30 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018408:	b200      	sxth	r0, r0
 801840a:	b003      	add	sp, #12
 801840c:	f85d fb04 	ldr.w	pc, [sp], #4

08018410 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8018410:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018414:	4605      	mov	r5, r0
 8018416:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 801841a:	4689      	mov	r9, r1
 801841c:	4692      	mov	sl, r2
 801841e:	469b      	mov	fp, r3
 8018420:	b338      	cbz	r0, 8018472 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x62>
 8018422:	2700      	movs	r7, #0
 8018424:	f06f 4800 	mvn.w	r8, #2147483648	; 0x80000000
 8018428:	b23e      	sxth	r6, r7
 801842a:	f9b5 311a 	ldrsh.w	r3, [r5, #282]	; 0x11a
 801842e:	42b3      	cmp	r3, r6
 8018430:	dd1e      	ble.n	8018470 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x60>
 8018432:	4631      	mov	r1, r6
 8018434:	4628      	mov	r0, r5
 8018436:	f7ff ff9c 	bl	8018372 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs>
 801843a:	eba0 0409 	sub.w	r4, r0, r9
 801843e:	4631      	mov	r1, r6
 8018440:	4628      	mov	r0, r5
 8018442:	2c00      	cmp	r4, #0
 8018444:	f107 0701 	add.w	r7, r7, #1
 8018448:	bfb8      	it	lt
 801844a:	4264      	neglt	r4, r4
 801844c:	f7ff ffd1 	bl	80183f2 <_ZNK8touchgfx17AbstractDataGraph14indexToScreenYEs>
 8018450:	eba0 000a 	sub.w	r0, r0, sl
 8018454:	b224      	sxth	r4, r4
 8018456:	2800      	cmp	r0, #0
 8018458:	bfb8      	it	lt
 801845a:	4240      	neglt	r0, r0
 801845c:	fb10 f000 	smulbb	r0, r0, r0
 8018460:	fb04 0004 	mla	r0, r4, r4, r0
 8018464:	4540      	cmp	r0, r8
 8018466:	bfbc      	itt	lt
 8018468:	f8ab 6000 	strhlt.w	r6, [fp]
 801846c:	4680      	movlt	r8, r0
 801846e:	e7db      	b.n	8018428 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 8018470:	2001      	movs	r0, #1
 8018472:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018476 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8018476:	b538      	push	{r3, r4, r5, lr}
 8018478:	f9b0 311a 	ldrsh.w	r3, [r0, #282]	; 0x11a
 801847c:	460d      	mov	r5, r1
 801847e:	428b      	cmp	r3, r1
 8018480:	dd08      	ble.n	8018494 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8018482:	6dc4      	ldr	r4, [r0, #92]	; 0x5c
 8018484:	b134      	cbz	r4, 8018494 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8018486:	6823      	ldr	r3, [r4, #0]
 8018488:	4620      	mov	r0, r4
 801848a:	4629      	mov	r1, r5
 801848c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801848e:	4798      	blx	r3
 8018490:	69a4      	ldr	r4, [r4, #24]
 8018492:	e7f7      	b.n	8018484 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8018494:	bd38      	pop	{r3, r4, r5, pc}

08018496 <_ZN8touchgfx17AbstractDataGraph19invalidateGraphAreaEv>:
 8018496:	3034      	adds	r0, #52	; 0x34
 8018498:	f003 bf62 	b.w	801c360 <_ZNK8touchgfx8Drawable10invalidateEv>

0801849c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 801849c:	b570      	push	{r4, r5, r6, lr}
 801849e:	4606      	mov	r6, r0
 80184a0:	460d      	mov	r5, r1
 80184a2:	f8d0 40e0 	ldr.w	r4, [r0, #224]	; 0xe0
 80184a6:	b134      	cbz	r4, 80184b6 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 80184a8:	6823      	ldr	r3, [r4, #0]
 80184aa:	4620      	mov	r0, r4
 80184ac:	4629      	mov	r1, r5
 80184ae:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80184b0:	4798      	blx	r3
 80184b2:	69a4      	ldr	r4, [r4, #24]
 80184b4:	e7f7      	b.n	80184a6 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 80184b6:	f8d6 410c 	ldr.w	r4, [r6, #268]	; 0x10c
 80184ba:	b134      	cbz	r4, 80184ca <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 80184bc:	6823      	ldr	r3, [r4, #0]
 80184be:	4620      	mov	r0, r4
 80184c0:	4629      	mov	r1, r5
 80184c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80184c4:	4798      	blx	r3
 80184c6:	69a4      	ldr	r4, [r4, #24]
 80184c8:	e7f7      	b.n	80184ba <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 80184ca:	bd70      	pop	{r4, r5, r6, pc}

080184cc <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 80184cc:	b570      	push	{r4, r5, r6, lr}
 80184ce:	6803      	ldr	r3, [r0, #0]
 80184d0:	4605      	mov	r5, r0
 80184d2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80184d6:	4798      	blx	r3
 80184d8:	682b      	ldr	r3, [r5, #0]
 80184da:	4604      	mov	r4, r0
 80184dc:	4628      	mov	r0, r5
 80184de:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80184e2:	4798      	blx	r3
 80184e4:	4284      	cmp	r4, r0
 80184e6:	4606      	mov	r6, r0
 80184e8:	bfc2      	ittt	gt
 80184ea:	b223      	sxthgt	r3, r4
 80184ec:	4604      	movgt	r4, r0
 80184ee:	461e      	movgt	r6, r3
 80184f0:	42a6      	cmp	r6, r4
 80184f2:	db05      	blt.n	8018500 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x34>
 80184f4:	b221      	sxth	r1, r4
 80184f6:	4628      	mov	r0, r5
 80184f8:	f7ff ffd0 	bl	801849c <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 80184fc:	3401      	adds	r4, #1
 80184fe:	e7f7      	b.n	80184f0 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x24>
 8018500:	bd70      	pop	{r4, r5, r6, pc}

08018502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8018502:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8018504:	4604      	mov	r4, r0
 8018506:	6dc5      	ldr	r5, [r0, #92]	; 0x5c
 8018508:	b15d      	cbz	r5, 8018522 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 801850a:	f9b4 203e 	ldrsh.w	r2, [r4, #62]	; 0x3e
 801850e:	4628      	mov	r0, r5
 8018510:	f9b4 303c 	ldrsh.w	r3, [r4, #60]	; 0x3c
 8018514:	9200      	str	r2, [sp, #0]
 8018516:	2200      	movs	r2, #0
 8018518:	4611      	mov	r1, r2
 801851a:	f7f1 fdf6 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 801851e:	69ad      	ldr	r5, [r5, #24]
 8018520:	e7f2      	b.n	8018508 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8018522:	f8d4 50e0 	ldr.w	r5, [r4, #224]	; 0xe0
 8018526:	b15d      	cbz	r5, 8018540 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8018528:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 801852c:	4628      	mov	r0, r5
 801852e:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 8018532:	9200      	str	r2, [sp, #0]
 8018534:	2200      	movs	r2, #0
 8018536:	4611      	mov	r1, r2
 8018538:	f7f1 fde7 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 801853c:	69ad      	ldr	r5, [r5, #24]
 801853e:	e7f2      	b.n	8018526 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8018540:	f8d4 5088 	ldr.w	r5, [r4, #136]	; 0x88
 8018544:	b15d      	cbz	r5, 801855e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8018546:	f9b4 206a 	ldrsh.w	r2, [r4, #106]	; 0x6a
 801854a:	4628      	mov	r0, r5
 801854c:	f9b4 3068 	ldrsh.w	r3, [r4, #104]	; 0x68
 8018550:	9200      	str	r2, [sp, #0]
 8018552:	2200      	movs	r2, #0
 8018554:	4611      	mov	r1, r2
 8018556:	f7f1 fdd8 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 801855a:	69ad      	ldr	r5, [r5, #24]
 801855c:	e7f2      	b.n	8018544 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 801855e:	f8d4 50b4 	ldr.w	r5, [r4, #180]	; 0xb4
 8018562:	b15d      	cbz	r5, 801857c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8018564:	f9b4 2096 	ldrsh.w	r2, [r4, #150]	; 0x96
 8018568:	4628      	mov	r0, r5
 801856a:	f9b4 3094 	ldrsh.w	r3, [r4, #148]	; 0x94
 801856e:	9200      	str	r2, [sp, #0]
 8018570:	2200      	movs	r2, #0
 8018572:	4611      	mov	r1, r2
 8018574:	f7f1 fdc9 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018578:	69ad      	ldr	r5, [r5, #24]
 801857a:	e7f2      	b.n	8018562 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 801857c:	f8d4 510c 	ldr.w	r5, [r4, #268]	; 0x10c
 8018580:	b15d      	cbz	r5, 801859a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8018582:	f9b4 20ee 	ldrsh.w	r2, [r4, #238]	; 0xee
 8018586:	4628      	mov	r0, r5
 8018588:	f9b4 30ec 	ldrsh.w	r3, [r4, #236]	; 0xec
 801858c:	9200      	str	r2, [sp, #0]
 801858e:	2200      	movs	r2, #0
 8018590:	4611      	mov	r1, r2
 8018592:	f7f1 fdba 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018596:	69ad      	ldr	r5, [r5, #24]
 8018598:	e7f2      	b.n	8018580 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 801859a:	6823      	ldr	r3, [r4, #0]
 801859c:	4620      	mov	r0, r4
 801859e:	695b      	ldr	r3, [r3, #20]
 80185a0:	b003      	add	sp, #12
 80185a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80185a6:	4718      	bx	r3

080185a8 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 80185a8:	b430      	push	{r4, r5}
 80185aa:	b28a      	uxth	r2, r1
 80185ac:	f8b0 4094 	ldrh.w	r4, [r0, #148]	; 0x94
 80185b0:	f8a0 10c0 	strh.w	r1, [r0, #192]	; 0xc0
 80185b4:	1b15      	subs	r5, r2, r4
 80185b6:	f8a0 10ec 	strh.w	r1, [r0, #236]	; 0xec
 80185ba:	8101      	strh	r1, [r0, #8]
 80185bc:	f8a0 5090 	strh.w	r5, [r0, #144]	; 0x90
 80185c0:	f8b0 5068 	ldrh.w	r5, [r0, #104]	; 0x68
 80185c4:	442c      	add	r4, r5
 80185c6:	1b12      	subs	r2, r2, r4
 80185c8:	bc30      	pop	{r4, r5}
 80185ca:	8782      	strh	r2, [r0, #60]	; 0x3c
 80185cc:	f7ff bf99 	b.w	8018502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

080185d0 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 80185d0:	b430      	push	{r4, r5}
 80185d2:	b28a      	uxth	r2, r1
 80185d4:	f8b0 40ee 	ldrh.w	r4, [r0, #238]	; 0xee
 80185d8:	f8a0 106a 	strh.w	r1, [r0, #106]	; 0x6a
 80185dc:	1b15      	subs	r5, r2, r4
 80185de:	f8a0 1096 	strh.w	r1, [r0, #150]	; 0x96
 80185e2:	8141      	strh	r1, [r0, #10]
 80185e4:	f8a0 50ea 	strh.w	r5, [r0, #234]	; 0xea
 80185e8:	f8b0 50c2 	ldrh.w	r5, [r0, #194]	; 0xc2
 80185ec:	442c      	add	r4, r5
 80185ee:	1b12      	subs	r2, r2, r4
 80185f0:	bc30      	pop	{r4, r5}
 80185f2:	87c2      	strh	r2, [r0, #62]	; 0x3e
 80185f4:	f7ff bf85 	b.w	8018502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

080185f8 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 80185f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80185fc:	fa1f fa83 	uxth.w	sl, r3
 8018600:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 8018604:	4615      	mov	r5, r2
 8018606:	4699      	mov	r9, r3
 8018608:	fa1f f887 	uxth.w	r8, r7
 801860c:	8903      	ldrh	r3, [r0, #8]
 801860e:	4452      	add	r2, sl
 8018610:	4604      	mov	r4, r0
 8018612:	8940      	ldrh	r0, [r0, #10]
 8018614:	460e      	mov	r6, r1
 8018616:	1a9b      	subs	r3, r3, r2
 8018618:	eb08 0201 	add.w	r2, r8, r1
 801861c:	1a80      	subs	r0, r0, r2
 801861e:	b21b      	sxth	r3, r3
 8018620:	460a      	mov	r2, r1
 8018622:	4629      	mov	r1, r5
 8018624:	b200      	sxth	r0, r0
 8018626:	9000      	str	r0, [sp, #0]
 8018628:	f104 0034 	add.w	r0, r4, #52	; 0x34
 801862c:	f7f1 fd6d 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018630:	2200      	movs	r2, #0
 8018632:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8018636:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 801863a:	4611      	mov	r1, r2
 801863c:	9600      	str	r6, [sp, #0]
 801863e:	f7f1 fd64 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018642:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8018646:	2200      	movs	r2, #0
 8018648:	f104 0060 	add.w	r0, r4, #96	; 0x60
 801864c:	9300      	str	r3, [sp, #0]
 801864e:	462b      	mov	r3, r5
 8018650:	4611      	mov	r1, r2
 8018652:	f7f1 fd5a 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018656:	8921      	ldrh	r1, [r4, #8]
 8018658:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801865c:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 8018660:	eba1 010a 	sub.w	r1, r1, sl
 8018664:	2200      	movs	r2, #0
 8018666:	9300      	str	r3, [sp, #0]
 8018668:	464b      	mov	r3, r9
 801866a:	b209      	sxth	r1, r1
 801866c:	f7f1 fd4d 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018670:	8962      	ldrh	r2, [r4, #10]
 8018672:	f104 00e4 	add.w	r0, r4, #228	; 0xe4
 8018676:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801867a:	eba2 0208 	sub.w	r2, r2, r8
 801867e:	9700      	str	r7, [sp, #0]
 8018680:	2100      	movs	r1, #0
 8018682:	b212      	sxth	r2, r2
 8018684:	f7f1 fd41 	bl	800a10a <_ZN8touchgfx8Drawable11setPositionEssss>
 8018688:	4620      	mov	r0, r4
 801868a:	b002      	add	sp, #8
 801868c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018690:	f7ff bf37 	b.w	8018502 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08018694 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8018694:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018698:	b085      	sub	sp, #20
 801869a:	4604      	mov	r4, r0
 801869c:	2601      	movs	r6, #1
 801869e:	2500      	movs	r5, #0
 80186a0:	9103      	str	r1, [sp, #12]
 80186a2:	f7ff fcc9 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186a6:	4b27      	ldr	r3, [pc, #156]	; (8018744 <_ZN8touchgfx17AbstractDataGraphC1Es+0xb0>)
 80186a8:	f104 0b34 	add.w	fp, r4, #52	; 0x34
 80186ac:	f104 0960 	add.w	r9, r4, #96	; 0x60
 80186b0:	f104 088c 	add.w	r8, r4, #140	; 0x8c
 80186b4:	6023      	str	r3, [r4, #0]
 80186b6:	23ff      	movs	r3, #255	; 0xff
 80186b8:	62e6      	str	r6, [r4, #44]	; 0x2c
 80186ba:	4658      	mov	r0, fp
 80186bc:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
 80186c0:	f104 0ab8 	add.w	sl, r4, #184	; 0xb8
 80186c4:	f7ff fcb8 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186c8:	4648      	mov	r0, r9
 80186ca:	f7ff fcb5 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186ce:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
 80186d2:	4640      	mov	r0, r8
 80186d4:	f7ff fcb0 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186d8:	4650      	mov	r0, sl
 80186da:	f7ff fcad 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186de:	4638      	mov	r0, r7
 80186e0:	f7ff fcaa 	bl	8018038 <_ZN8touchgfx9ContainerC1Ev>
 80186e4:	9903      	ldr	r1, [sp, #12]
 80186e6:	4620      	mov	r0, r4
 80186e8:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 80186ec:	f8a4 1118 	strh.w	r1, [r4, #280]	; 0x118
 80186f0:	4659      	mov	r1, fp
 80186f2:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 80186f6:	f8a4 511a 	strh.w	r5, [r4, #282]	; 0x11a
 80186fa:	f8a4 511c 	strh.w	r5, [r4, #284]	; 0x11c
 80186fe:	f8c4 5120 	str.w	r5, [r4, #288]	; 0x120
 8018702:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8018706:	f7fe f905 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801870a:	4651      	mov	r1, sl
 801870c:	4620      	mov	r0, r4
 801870e:	f7fe f901 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8018712:	4649      	mov	r1, r9
 8018714:	4620      	mov	r0, r4
 8018716:	f7fe f8fd 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801871a:	4641      	mov	r1, r8
 801871c:	4620      	mov	r0, r4
 801871e:	f7fe f8f9 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8018722:	4639      	mov	r1, r7
 8018724:	4620      	mov	r0, r4
 8018726:	f7fe f8f5 	bl	8016914 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801872a:	4620      	mov	r0, r4
 801872c:	9500      	str	r5, [sp, #0]
 801872e:	462b      	mov	r3, r5
 8018730:	462a      	mov	r2, r5
 8018732:	4629      	mov	r1, r5
 8018734:	f7ff ff60 	bl	80185f8 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8018738:	4620      	mov	r0, r4
 801873a:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 801873e:	b005      	add	sp, #20
 8018740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018744:	08030750 	.word	0x08030750

08018748 <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>:
 8018748:	460b      	mov	r3, r1
 801874a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801874c:	4291      	cmp	r1, r2
 801874e:	4618      	mov	r0, r3
 8018750:	d001      	beq.n	8018756 <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii+0xe>
 8018752:	f003 bfe0 	b.w	801c716 <_ZN8touchgfx6muldivElll>
 8018756:	4770      	bx	lr

08018758 <_ZN8touchgfx22AbstractDataGraphWithY8setScaleEi>:
 8018758:	b538      	push	{r3, r4, r5, lr}
 801875a:	6ac5      	ldr	r5, [r0, #44]	; 0x2c
 801875c:	4604      	mov	r4, r0
 801875e:	62c1      	str	r1, [r0, #44]	; 0x2c
 8018760:	462a      	mov	r2, r5
 8018762:	f8d0 1134 	ldr.w	r1, [r0, #308]	; 0x134
 8018766:	f7ff ffef 	bl	8018748 <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 801876a:	462a      	mov	r2, r5
 801876c:	f8c4 0134 	str.w	r0, [r4, #308]	; 0x134
 8018770:	4620      	mov	r0, r4
 8018772:	f8d4 1130 	ldr.w	r1, [r4, #304]	; 0x130
 8018776:	f7ff ffe7 	bl	8018748 <_ZNK8touchgfx17AbstractDataGraph19convertToGraphScaleEii>
 801877a:	f8c4 0130 	str.w	r0, [r4, #304]	; 0x130
 801877e:	bd38      	pop	{r3, r4, r5, pc}

08018780 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi>:
 8018780:	b570      	push	{r4, r5, r6, lr}
 8018782:	4604      	mov	r4, r0
 8018784:	460d      	mov	r5, r1
 8018786:	4616      	mov	r6, r2
 8018788:	f7ff ff84 	bl	8018694 <_ZN8touchgfx17AbstractDataGraphC1Es>
 801878c:	2100      	movs	r1, #0
 801878e:	4b11      	ldr	r3, [pc, #68]	; (80187d4 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x54>)
 8018790:	f8c4 6128 	str.w	r6, [r4, #296]	; 0x128
 8018794:	6023      	str	r3, [r4, #0]
 8018796:	428d      	cmp	r5, r1
 8018798:	f04f 0301 	mov.w	r3, #1
 801879c:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 80187a0:	f8c4 1130 	str.w	r1, [r4, #304]	; 0x130
 80187a4:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 80187a8:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
 80187ac:	f8c4 113c 	str.w	r1, [r4, #316]	; 0x13c
 80187b0:	f8c4 1140 	str.w	r1, [r4, #320]	; 0x140
 80187b4:	f8c4 1144 	str.w	r1, [r4, #324]	; 0x144
 80187b8:	dc06      	bgt.n	80187c8 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x48>
 80187ba:	4b07      	ldr	r3, [pc, #28]	; (80187d8 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x58>)
 80187bc:	f240 11cd 	movw	r1, #461	; 0x1cd
 80187c0:	4a06      	ldr	r2, [pc, #24]	; (80187dc <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x5c>)
 80187c2:	4807      	ldr	r0, [pc, #28]	; (80187e0 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi+0x60>)
 80187c4:	f013 fb90 	bl	802bee8 <__assert_func>
 80187c8:	4620      	mov	r0, r4
 80187ca:	1e6a      	subs	r2, r5, #1
 80187cc:	f7ff fbaa 	bl	8017f24 <_ZN8touchgfx22AbstractDataGraphWithY14setGraphRangeXEii>
 80187d0:	4620      	mov	r0, r4
 80187d2:	bd70      	pop	{r4, r5, r6, pc}
 80187d4:	08030840 	.word	0x08030840
 80187d8:	0803073b 	.word	0x0803073b
 80187dc:	080309f2 	.word	0x080309f2
 80187e0:	080306fd 	.word	0x080306fd

080187e4 <_ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi>:
 80187e4:	b570      	push	{r4, r5, r6, lr}
 80187e6:	6803      	ldr	r3, [r0, #0]
 80187e8:	4604      	mov	r4, r0
 80187ea:	460d      	mov	r5, r1
 80187ec:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 80187f0:	4798      	blx	r3
 80187f2:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 80187f6:	4629      	mov	r1, r5
 80187f8:	4620      	mov	r0, r4
 80187fa:	3301      	adds	r3, #1
 80187fc:	f8c4 312c 	str.w	r3, [r4, #300]	; 0x12c
 8018800:	6823      	ldr	r3, [r4, #0]
 8018802:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8018806:	f8d3 310c 	ldr.w	r3, [r3, #268]	; 0x10c
 801880a:	4718      	bx	r3

0801880c <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEi>:
 801880c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801880e:	4359      	muls	r1, r3
 8018810:	f7ff bfe8 	b.w	80187e4 <_ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi>

08018814 <_ZN8touchgfx22AbstractDataGraphWithY12addDataPointEf>:
 8018814:	b510      	push	{r4, lr}
 8018816:	4604      	mov	r4, r0
 8018818:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801881a:	f7ff fc46 	bl	80180aa <_ZN8touchgfx17AbstractDataGraph12float2scaledEfi>
 801881e:	4601      	mov	r1, r0
 8018820:	4620      	mov	r0, r4
 8018822:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018826:	f7ff bfdd 	b.w	80187e4 <_ZN8touchgfx22AbstractDataGraphWithY18addDataPointScaledEi>

0801882a <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
 801882a:	4770      	bx	lr

0801882c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
 801882c:	6341      	str	r1, [r0, #52]	; 0x34
 801882e:	4770      	bx	lr

08018830 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
 8018830:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018832:	4770      	bx	lr

08018834 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:
 8018834:	2001      	movs	r0, #1
 8018836:	4770      	bx	lr

08018838 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
 8018838:	4770      	bx	lr

0801883a <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>:
 801883a:	6803      	ldr	r3, [r0, #0]
 801883c:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8018840:	4718      	bx	r3

08018842 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>:
 8018842:	6803      	ldr	r3, [r0, #0]
 8018844:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8018848:	4718      	bx	r3

0801884a <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801884a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801884c:	4604      	mov	r4, r0
 801884e:	4608      	mov	r0, r1
 8018850:	460d      	mov	r5, r1
 8018852:	f7fe f8d2 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8018856:	b978      	cbnz	r0, 8018878 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8018858:	4620      	mov	r0, r4
 801885a:	f7fe f8ce 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801885e:	f9b5 6000 	ldrsh.w	r6, [r5]
 8018862:	b150      	cbz	r0, 801887a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8018864:	8026      	strh	r6, [r4, #0]
 8018866:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801886a:	8063      	strh	r3, [r4, #2]
 801886c:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8018870:	80a3      	strh	r3, [r4, #4]
 8018872:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8018876:	80e3      	strh	r3, [r4, #6]
 8018878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801887a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801887e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8018882:	42b1      	cmp	r1, r6
 8018884:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8018888:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801888c:	460f      	mov	r7, r1
 801888e:	88ed      	ldrh	r5, [r5, #6]
 8018890:	bfa8      	it	ge
 8018892:	4637      	movge	r7, r6
 8018894:	4293      	cmp	r3, r2
 8018896:	4618      	mov	r0, r3
 8018898:	4466      	add	r6, ip
 801889a:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801889e:	bfa8      	it	ge
 80188a0:	4610      	movge	r0, r2
 80188a2:	442a      	add	r2, r5
 80188a4:	88e5      	ldrh	r5, [r4, #6]
 80188a6:	4461      	add	r1, ip
 80188a8:	b236      	sxth	r6, r6
 80188aa:	8027      	strh	r7, [r4, #0]
 80188ac:	442b      	add	r3, r5
 80188ae:	b209      	sxth	r1, r1
 80188b0:	b212      	sxth	r2, r2
 80188b2:	8060      	strh	r0, [r4, #2]
 80188b4:	b21b      	sxth	r3, r3
 80188b6:	428e      	cmp	r6, r1
 80188b8:	bfac      	ite	ge
 80188ba:	ebc7 0106 	rsbge	r1, r7, r6
 80188be:	ebc7 0101 	rsblt	r1, r7, r1
 80188c2:	429a      	cmp	r2, r3
 80188c4:	bfac      	ite	ge
 80188c6:	ebc0 0202 	rsbge	r2, r0, r2
 80188ca:	ebc0 0203 	rsblt	r2, r0, r3
 80188ce:	80a1      	strh	r1, [r4, #4]
 80188d0:	80e2      	strh	r2, [r4, #6]
 80188d2:	e7d1      	b.n	8018878 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

080188d4 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 80188d4:	6800      	ldr	r0, [r0, #0]
 80188d6:	2800      	cmp	r0, #0
 80188d8:	bfb9      	ittee	lt
 80188da:	2320      	movlt	r3, #32
 80188dc:	fb90 f0f3 	sdivlt	r0, r0, r3
 80188e0:	301f      	addge	r0, #31
 80188e2:	1140      	asrge	r0, r0, #5
 80188e4:	4770      	bx	lr

080188e6 <_ZNK8touchgfx20AbstractGraphElement7roundQ5ENS_7CWRUtil2Q5E.constprop.9>:
 80188e6:	b507      	push	{r0, r1, r2, lr}
 80188e8:	ab02      	add	r3, sp, #8
 80188ea:	f843 0d04 	str.w	r0, [r3, #-4]!
 80188ee:	4618      	mov	r0, r3
 80188f0:	f7ff fbba 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80188f4:	0140      	lsls	r0, r0, #5
 80188f6:	b003      	add	sp, #12
 80188f8:	f85d fb04 	ldr.w	pc, [sp], #4

080188fc <_ZN8touchgfx20AbstractGraphElementC1Ev>:
 80188fc:	b510      	push	{r4, lr}
 80188fe:	4604      	mov	r4, r0
 8018900:	f7ff fa22 	bl	8017d48 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8018904:	4b02      	ldr	r3, [pc, #8]	; (8018910 <_ZN8touchgfx20AbstractGraphElementC1Ev+0x14>)
 8018906:	4620      	mov	r0, r4
 8018908:	6023      	str	r3, [r4, #0]
 801890a:	2301      	movs	r3, #1
 801890c:	6323      	str	r3, [r4, #48]	; 0x30
 801890e:	bd10      	pop	{r4, pc}
 8018910:	0802f0c4 	.word	0x0802f0c4

08018914 <_ZN8touchgfx20AbstractGraphElement8setScaleEi>:
 8018914:	6301      	str	r1, [r0, #48]	; 0x30
 8018916:	4770      	bx	lr

08018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>:
 8018918:	680b      	ldr	r3, [r1, #0]
 801891a:	4608      	mov	r0, r1
 801891c:	4611      	mov	r1, r2
 801891e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8018922:	4718      	bx	r3

08018924 <_ZNK8touchgfx20AbstractGraphElement24xScreenRangeToIndexRangeEssRsS1_>:
 8018924:	b410      	push	{r4}
 8018926:	6940      	ldr	r0, [r0, #20]
 8018928:	6940      	ldr	r0, [r0, #20]
 801892a:	6804      	ldr	r4, [r0, #0]
 801892c:	f8d4 40dc 	ldr.w	r4, [r4, #220]	; 0xdc
 8018930:	46a4      	mov	ip, r4
 8018932:	f85d 4b04 	ldr.w	r4, [sp], #4
 8018936:	4760      	bx	ip

08018938 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 8018938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801893a:	9906      	ldr	r1, [sp, #24]
 801893c:	4606      	mov	r6, r0
 801893e:	461c      	mov	r4, r3
 8018940:	2020      	movs	r0, #32
 8018942:	4291      	cmp	r1, r2
 8018944:	bfbc      	itt	lt
 8018946:	9206      	strlt	r2, [sp, #24]
 8018948:	460a      	movlt	r2, r1
 801894a:	9907      	ldr	r1, [sp, #28]
 801894c:	428b      	cmp	r3, r1
 801894e:	bfc4      	itt	gt
 8018950:	460c      	movgt	r4, r1
 8018952:	9307      	strgt	r3, [sp, #28]
 8018954:	fb92 f5f0 	sdiv	r5, r2, r0
 8018958:	fb94 f4f0 	sdiv	r4, r4, r0
 801895c:	a806      	add	r0, sp, #24
 801895e:	f7ff ffb9 	bl	80188d4 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8018962:	4607      	mov	r7, r0
 8018964:	a807      	add	r0, sp, #28
 8018966:	f7ff ffb5 	bl	80188d4 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801896a:	1b7a      	subs	r2, r7, r5
 801896c:	1b00      	subs	r0, r0, r4
 801896e:	8035      	strh	r5, [r6, #0]
 8018970:	8074      	strh	r4, [r6, #2]
 8018972:	80f0      	strh	r0, [r6, #6]
 8018974:	4630      	mov	r0, r6
 8018976:	80b2      	strh	r2, [r6, #4]
 8018978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801897a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 801897a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801897c:	9c08      	ldr	r4, [sp, #32]
 801897e:	2602      	movs	r6, #2
 8018980:	4605      	mov	r5, r0
 8018982:	3401      	adds	r4, #1
 8018984:	fb94 f4f6 	sdiv	r4, r4, r6
 8018988:	18a6      	adds	r6, r4, r2
 801898a:	191f      	adds	r7, r3, r4
 801898c:	1b12      	subs	r2, r2, r4
 801898e:	1b1b      	subs	r3, r3, r4
 8018990:	e9cd 6700 	strd	r6, r7, [sp]
 8018994:	f7ff ffd0 	bl	8018938 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 8018998:	4628      	mov	r0, r5
 801899a:	b003      	add	sp, #12
 801899c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801899e <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>:
 801899e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80189a0:	460c      	mov	r4, r1
 80189a2:	ad02      	add	r5, sp, #8
 80189a4:	4616      	mov	r6, r2
 80189a6:	4611      	mov	r1, r2
 80189a8:	4620      	mov	r0, r4
 80189aa:	f7ff ff4a 	bl	8018842 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 80189ae:	f845 0d04 	str.w	r0, [r5, #-4]!
 80189b2:	4628      	mov	r0, r5
 80189b4:	f7ff fb58 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80189b8:	4631      	mov	r1, r6
 80189ba:	b207      	sxth	r7, r0
 80189bc:	4620      	mov	r0, r4
 80189be:	f7ff ff3c 	bl	801883a <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 80189c2:	9001      	str	r0, [sp, #4]
 80189c4:	4628      	mov	r0, r5
 80189c6:	f7ff fb4f 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80189ca:	4605      	mov	r5, r0
 80189cc:	4620      	mov	r0, r4
 80189ce:	f7ff fc12 	bl	80181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 80189d2:	42b8      	cmp	r0, r7
 80189d4:	dd02      	ble.n	80189dc <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x3e>
 80189d6:	2001      	movs	r0, #1
 80189d8:	b003      	add	sp, #12
 80189da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80189dc:	4620      	mov	r0, r4
 80189de:	f7ff fc0a 	bl	80181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 80189e2:	4606      	mov	r6, r0
 80189e4:	4620      	mov	r0, r4
 80189e6:	f7ff fc09 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 80189ea:	4430      	add	r0, r6
 80189ec:	4287      	cmp	r7, r0
 80189ee:	daf2      	bge.n	80189d6 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x38>
 80189f0:	b22d      	sxth	r5, r5
 80189f2:	4620      	mov	r0, r4
 80189f4:	f7ff fbfc 	bl	80181f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 80189f8:	42a8      	cmp	r0, r5
 80189fa:	dcec      	bgt.n	80189d6 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x38>
 80189fc:	4620      	mov	r0, r4
 80189fe:	f7ff fbf7 	bl	80181f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 8018a02:	4606      	mov	r6, r0
 8018a04:	4620      	mov	r0, r4
 8018a06:	f7ff fc81 	bl	801830c <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 8018a0a:	4430      	add	r0, r6
 8018a0c:	4285      	cmp	r5, r0
 8018a0e:	bfb4      	ite	lt
 8018a10:	2000      	movlt	r0, #0
 8018a12:	2001      	movge	r0, #1
 8018a14:	e7e0      	b.n	80189d8 <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs+0x3a>

08018a16 <_ZN8touchgfx20GraphElementDiamonds22invalidateGraphPointAtEs>:
 8018a16:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018a18:	6943      	ldr	r3, [r0, #20]
 8018a1a:	b085      	sub	sp, #20
 8018a1c:	460e      	mov	r6, r1
 8018a1e:	460a      	mov	r2, r1
 8018a20:	695d      	ldr	r5, [r3, #20]
 8018a22:	4604      	mov	r4, r0
 8018a24:	4629      	mov	r1, r5
 8018a26:	f7ff ffba 	bl	801899e <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>
 8018a2a:	b9b8      	cbnz	r0, 8018a5c <_ZN8touchgfx20GraphElementDiamonds22invalidateGraphPointAtEs+0x46>
 8018a2c:	4631      	mov	r1, r6
 8018a2e:	4628      	mov	r0, r5
 8018a30:	f7ff ff07 	bl	8018842 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 8018a34:	4631      	mov	r1, r6
 8018a36:	4607      	mov	r7, r0
 8018a38:	4628      	mov	r0, r5
 8018a3a:	f7ff fefe 	bl	801883a <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 8018a3e:	f894 3034 	ldrb.w	r3, [r4, #52]	; 0x34
 8018a42:	4621      	mov	r1, r4
 8018a44:	463a      	mov	r2, r7
 8018a46:	015b      	lsls	r3, r3, #5
 8018a48:	9300      	str	r3, [sp, #0]
 8018a4a:	4603      	mov	r3, r0
 8018a4c:	a802      	add	r0, sp, #8
 8018a4e:	f7ff ff94 	bl	801897a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8018a52:	6823      	ldr	r3, [r4, #0]
 8018a54:	a902      	add	r1, sp, #8
 8018a56:	4620      	mov	r0, r4
 8018a58:	691b      	ldr	r3, [r3, #16]
 8018a5a:	4798      	blx	r3
 8018a5c:	b005      	add	sp, #20
 8018a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018a60 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>:
 8018a60:	b510      	push	{r4, lr}
 8018a62:	4604      	mov	r4, r0
 8018a64:	f7ff ff4a 	bl	80188fc <_ZN8touchgfx20AbstractGraphElementC1Ev>
 8018a68:	4b02      	ldr	r3, [pc, #8]	; (8018a74 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev+0x14>)
 8018a6a:	4620      	mov	r0, r4
 8018a6c:	6023      	str	r3, [r4, #0]
 8018a6e:	2300      	movs	r3, #0
 8018a70:	6363      	str	r3, [r4, #52]	; 0x34
 8018a72:	bd10      	pop	{r4, pc}
 8018a74:	08030bd4 	.word	0x08030bd4

08018a78 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 8018a78:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018a7c:	2b00      	cmp	r3, #0
 8018a7e:	da05      	bge.n	8018a8c <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 8018a80:	b29b      	uxth	r3, r3
 8018a82:	880a      	ldrh	r2, [r1, #0]
 8018a84:	441a      	add	r2, r3
 8018a86:	425b      	negs	r3, r3
 8018a88:	800a      	strh	r2, [r1, #0]
 8018a8a:	808b      	strh	r3, [r1, #4]
 8018a8c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018a90:	2b00      	cmp	r3, #0
 8018a92:	da05      	bge.n	8018aa0 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 8018a94:	b29b      	uxth	r3, r3
 8018a96:	884a      	ldrh	r2, [r1, #2]
 8018a98:	441a      	add	r2, r3
 8018a9a:	425b      	negs	r3, r3
 8018a9c:	804a      	strh	r2, [r1, #2]
 8018a9e:	80cb      	strh	r3, [r1, #6]
 8018aa0:	4770      	bx	lr
	...

08018aa4 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
 8018aa4:	b510      	push	{r4, lr}
 8018aa6:	4604      	mov	r4, r0
 8018aa8:	f7ff ffda 	bl	8018a60 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 8018aac:	4b05      	ldr	r3, [pc, #20]	; (8018ac4 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x20>)
 8018aae:	4620      	mov	r0, r4
 8018ab0:	6023      	str	r3, [r4, #0]
 8018ab2:	230a      	movs	r3, #10
 8018ab4:	63a3      	str	r3, [r4, #56]	; 0x38
 8018ab6:	2301      	movs	r3, #1
 8018ab8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 8018abc:	2300      	movs	r3, #0
 8018abe:	6423      	str	r3, [r4, #64]	; 0x40
 8018ac0:	bd10      	pop	{r4, pc}
 8018ac2:	bf00      	nop
 8018ac4:	08030b4c 	.word	0x08030b4c

08018ac8 <_ZN8touchgfx20GraphElementGridBase17setIntervalScaledEi>:
 8018ac8:	2900      	cmp	r1, #0
 8018aca:	bfb8      	it	lt
 8018acc:	4249      	neglt	r1, r1
 8018ace:	6381      	str	r1, [r0, #56]	; 0x38
 8018ad0:	4770      	bx	lr

08018ad2 <_ZN8touchgfx20GraphElementGridBase11setIntervalEi>:
 8018ad2:	2900      	cmp	r1, #0
 8018ad4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8018ad6:	bfb8      	it	lt
 8018ad8:	4249      	neglt	r1, r1
 8018ada:	4359      	muls	r1, r3
 8018adc:	f7ff bff4 	b.w	8018ac8 <_ZN8touchgfx20GraphElementGridBase17setIntervalScaledEi>

08018ae0 <_ZNK8touchgfx20GraphElementGridBase16getIntervalAsIntEv>:
 8018ae0:	b508      	push	{r3, lr}
 8018ae2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8018ae4:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018ae6:	f7ff fb3d 	bl	8018164 <_ZN8touchgfx17AbstractDataGraph10scaled2intEii>
 8018aea:	bd08      	pop	{r3, pc}

08018aec <_ZN8touchgfx20GraphElementGridBase12setLineWidthEh>:
 8018aec:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 8018af0:	4770      	bx	lr

08018af2 <_ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh>:
 8018af2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018af4:	b085      	sub	sp, #20
 8018af6:	460f      	mov	r7, r1
 8018af8:	4606      	mov	r6, r0
 8018afa:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018afe:	466c      	mov	r4, sp
 8018b00:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8018b04:	ad02      	add	r5, sp, #8
 8018b06:	4621      	mov	r1, r4
 8018b08:	f8ad 2000 	strh.w	r2, [sp]
 8018b0c:	f8ad 3004 	strh.w	r3, [sp, #4]
 8018b10:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8018b14:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018b18:	f7ff ffae 	bl	8018a78 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 8018b1c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8018b20:	e885 0003 	stmia.w	r5, {r0, r1}
 8018b24:	4639      	mov	r1, r7
 8018b26:	4628      	mov	r0, r5
 8018b28:	f7fd ff24 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8018b2c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018b30:	e884 0003 	stmia.w	r4, {r0, r1}
 8018b34:	4620      	mov	r0, r4
 8018b36:	f7fd ff60 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8018b3a:	b968      	cbnz	r0, 8018b58 <_ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh+0x66>
 8018b3c:	6833      	ldr	r3, [r6, #0]
 8018b3e:	4621      	mov	r1, r4
 8018b40:	4630      	mov	r0, r6
 8018b42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018b44:	4798      	blx	r3
 8018b46:	f7f0 fdb5 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 8018b4a:	6803      	ldr	r3, [r0, #0]
 8018b4c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018b4e:	4621      	mov	r1, r4
 8018b50:	699d      	ldr	r5, [r3, #24]
 8018b52:	f89d 3034 	ldrb.w	r3, [sp, #52]	; 0x34
 8018b56:	47a8      	blx	r5
 8018b58:	b005      	add	sp, #20
 8018b5a:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018b5c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE>:
 8018b5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b60:	6943      	ldr	r3, [r0, #20]
 8018b62:	b093      	sub	sp, #76	; 0x4c
 8018b64:	4604      	mov	r4, r0
 8018b66:	460f      	mov	r7, r1
 8018b68:	695d      	ldr	r5, [r3, #20]
 8018b6a:	6803      	ldr	r3, [r0, #0]
 8018b6c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8018b6e:	4798      	blx	r3
 8018b70:	4606      	mov	r6, r0
 8018b72:	4628      	mov	r0, r5
 8018b74:	f7ff fb2e 	bl	80181d4 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 8018b78:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8018b7c:	2b00      	cmp	r3, #0
 8018b7e:	d065      	beq.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018b80:	fb16 f000 	smulbb	r0, r6, r0
 8018b84:	b280      	uxth	r0, r0
 8018b86:	1c43      	adds	r3, r0, #1
 8018b88:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018b8c:	1206      	asrs	r6, r0, #8
 8018b8e:	d05d      	beq.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018b90:	4628      	mov	r0, r5
 8018b92:	f7ff fb2d 	bl	80181f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 8018b96:	4681      	mov	r9, r0
 8018b98:	4628      	mov	r0, r5
 8018b9a:	f7ff fbb4 	bl	8018306 <_ZNK8touchgfx17AbstractDataGraph33getGraphAreaWidthIncludingPaddingEv>
 8018b9e:	4680      	mov	r8, r0
 8018ba0:	4628      	mov	r0, r5
 8018ba2:	f7ff fbb3 	bl	801830c <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 8018ba6:	2300      	movs	r3, #0
 8018ba8:	4639      	mov	r1, r7
 8018baa:	f8ad 0046 	strh.w	r0, [sp, #70]	; 0x46
 8018bae:	a810      	add	r0, sp, #64	; 0x40
 8018bb0:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8018bb4:	f8ad 9042 	strh.w	r9, [sp, #66]	; 0x42
 8018bb8:	f8ad 8044 	strh.w	r8, [sp, #68]	; 0x44
 8018bbc:	f7fd feda 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8018bc0:	4620      	mov	r0, r4
 8018bc2:	f7ff ff8d 	bl	8018ae0 <_ZNK8touchgfx20GraphElementGridBase16getIntervalAsIntEv>
 8018bc6:	4607      	mov	r7, r0
 8018bc8:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8018bca:	b108      	cbz	r0, 8018bd0 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x74>
 8018bcc:	f7ff ff88 	bl	8018ae0 <_ZNK8touchgfx20GraphElementGridBase16getIntervalAsIntEv>
 8018bd0:	b2f3      	uxtb	r3, r6
 8018bd2:	4680      	mov	r8, r0
 8018bd4:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
 8018bd8:	9309      	str	r3, [sp, #36]	; 0x24
 8018bda:	0103      	lsls	r3, r0, #4
 8018bdc:	4628      	mov	r0, r5
 8018bde:	9306      	str	r3, [sp, #24]
 8018be0:	f7ff fb06 	bl	80181f0 <_ZNK8touchgfx17AbstractDataGraph22getGraphAreaPaddingTopEv>
 8018be4:	9007      	str	r0, [sp, #28]
 8018be6:	4628      	mov	r0, r5
 8018be8:	f7ff fb90 	bl	801830c <_ZNK8touchgfx17AbstractDataGraph18getGraphAreaHeightEv>
 8018bec:	2f00      	cmp	r7, #0
 8018bee:	9008      	str	r0, [sp, #32]
 8018bf0:	d12f      	bne.n	8018c52 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf6>
 8018bf2:	f1b8 0f00 	cmp.w	r8, #0
 8018bf6:	d129      	bne.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018bf8:	4642      	mov	r2, r8
 8018bfa:	4629      	mov	r1, r5
 8018bfc:	4620      	mov	r0, r4
 8018bfe:	f7ff fe8b 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018c02:	9b06      	ldr	r3, [sp, #24]
 8018c04:	1ac3      	subs	r3, r0, r3
 8018c06:	a812      	add	r0, sp, #72	; 0x48
 8018c08:	f840 3d0c 	str.w	r3, [r0, #-12]!
 8018c0c:	f7ff fa2c 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018c10:	4607      	mov	r7, r0
 8018c12:	4628      	mov	r0, r5
 8018c14:	f7ff faef 	bl	80181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 8018c18:	1a38      	subs	r0, r7, r0
 8018c1a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8018c1e:	b206      	sxth	r6, r0
 8018c20:	42f3      	cmn	r3, r6
 8018c22:	d413      	bmi.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018c24:	4628      	mov	r0, r5
 8018c26:	f7ff fae9 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 8018c2a:	42b0      	cmp	r0, r6
 8018c2c:	dd0e      	ble.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018c2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c30:	b23a      	sxth	r2, r7
 8018c32:	a910      	add	r1, sp, #64	; 0x40
 8018c34:	4620      	mov	r0, r4
 8018c36:	9303      	str	r3, [sp, #12]
 8018c38:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8018c3a:	9302      	str	r3, [sp, #8]
 8018c3c:	9b08      	ldr	r3, [sp, #32]
 8018c3e:	9301      	str	r3, [sp, #4]
 8018c40:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8018c44:	9300      	str	r3, [sp, #0]
 8018c46:	9b07      	ldr	r3, [sp, #28]
 8018c48:	f7ff ff53 	bl	8018af2 <_ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh>
 8018c4c:	b013      	add	sp, #76	; 0x4c
 8018c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c52:	ddfb      	ble.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018c54:	682b      	ldr	r3, [r5, #0]
 8018c56:	4628      	mov	r0, r5
 8018c58:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8018c5c:	4798      	blx	r3
 8018c5e:	682b      	ldr	r3, [r5, #0]
 8018c60:	4683      	mov	fp, r0
 8018c62:	4628      	mov	r0, r5
 8018c64:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8018c68:	4798      	blx	r3
 8018c6a:	eba0 030b 	sub.w	r3, r0, fp
 8018c6e:	4681      	mov	r9, r0
 8018c70:	2b00      	cmp	r3, #0
 8018c72:	bfb8      	it	lt
 8018c74:	425b      	neglt	r3, r3
 8018c76:	fb93 f3f7 	sdiv	r3, r3, r7
 8018c7a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8018c7e:	dce5      	bgt.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018c80:	465a      	mov	r2, fp
 8018c82:	4629      	mov	r1, r5
 8018c84:	4620      	mov	r0, r4
 8018c86:	f7ff fe47 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018c8a:	4606      	mov	r6, r0
 8018c8c:	464a      	mov	r2, r9
 8018c8e:	4629      	mov	r1, r5
 8018c90:	4620      	mov	r0, r4
 8018c92:	f7ff fe41 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018c96:	42b0      	cmp	r0, r6
 8018c98:	bfbe      	ittt	lt
 8018c9a:	465b      	movlt	r3, fp
 8018c9c:	46cb      	movlt	fp, r9
 8018c9e:	4699      	movlt	r9, r3
 8018ca0:	fb9b f6f7 	sdiv	r6, fp, r7
 8018ca4:	fb99 f3f7 	sdiv	r3, r9, r7
 8018ca8:	45cb      	cmp	fp, r9
 8018caa:	bfb4      	ite	lt
 8018cac:	2201      	movlt	r2, #1
 8018cae:	f04f 32ff 	movge.w	r2, #4294967295
 8018cb2:	1ab6      	subs	r6, r6, r2
 8018cb4:	4413      	add	r3, r2
 8018cb6:	429e      	cmp	r6, r3
 8018cb8:	bfb4      	ite	lt
 8018cba:	f04f 0a01 	movlt.w	sl, #1
 8018cbe:	f04f 3aff 	movge.w	sl, #4294967295
 8018cc2:	f1b8 0f00 	cmp.w	r8, #0
 8018cc6:	d136      	bne.n	8018d36 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x1da>
 8018cc8:	fb07 f90a 	mul.w	r9, r7, sl
 8018ccc:	eb0a 0803 	add.w	r8, sl, r3
 8018cd0:	4377      	muls	r7, r6
 8018cd2:	45b0      	cmp	r8, r6
 8018cd4:	d0ba      	beq.n	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018cd6:	463a      	mov	r2, r7
 8018cd8:	4629      	mov	r1, r5
 8018cda:	4620      	mov	r0, r4
 8018cdc:	f7ff fe1c 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018ce0:	9b06      	ldr	r3, [sp, #24]
 8018ce2:	1ac0      	subs	r0, r0, r3
 8018ce4:	900f      	str	r0, [sp, #60]	; 0x3c
 8018ce6:	a80f      	add	r0, sp, #60	; 0x3c
 8018ce8:	f7ff f9be 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018cec:	4683      	mov	fp, r0
 8018cee:	4628      	mov	r0, r5
 8018cf0:	f7ff fa81 	bl	80181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 8018cf4:	ebab 0000 	sub.w	r0, fp, r0
 8018cf8:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8018cfc:	b203      	sxth	r3, r0
 8018cfe:	42da      	cmn	r2, r3
 8018d00:	9304      	str	r3, [sp, #16]
 8018d02:	d415      	bmi.n	8018d30 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x1d4>
 8018d04:	4628      	mov	r0, r5
 8018d06:	f7ff fa79 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 8018d0a:	9b04      	ldr	r3, [sp, #16]
 8018d0c:	4298      	cmp	r0, r3
 8018d0e:	dd0f      	ble.n	8018d30 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x1d4>
 8018d10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d12:	fa0f f28b 	sxth.w	r2, fp
 8018d16:	a910      	add	r1, sp, #64	; 0x40
 8018d18:	4620      	mov	r0, r4
 8018d1a:	9303      	str	r3, [sp, #12]
 8018d1c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8018d1e:	9302      	str	r3, [sp, #8]
 8018d20:	9b08      	ldr	r3, [sp, #32]
 8018d22:	9301      	str	r3, [sp, #4]
 8018d24:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8018d28:	9300      	str	r3, [sp, #0]
 8018d2a:	9b07      	ldr	r3, [sp, #28]
 8018d2c:	f7ff fee1 	bl	8018af2 <_ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh>
 8018d30:	4456      	add	r6, sl
 8018d32:	444f      	add	r7, r9
 8018d34:	e7cd      	b.n	8018cd2 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x176>
 8018d36:	fb9b fbf8 	sdiv	fp, fp, r8
 8018d3a:	fb99 f9f8 	sdiv	r9, r9, r8
 8018d3e:	ebab 0302 	sub.w	r3, fp, r2
 8018d42:	4491      	add	r9, r2
 8018d44:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 8018d48:	4629      	mov	r1, r5
 8018d4a:	9304      	str	r3, [sp, #16]
 8018d4c:	454b      	cmp	r3, r9
 8018d4e:	bfb4      	ite	lt
 8018d50:	2301      	movlt	r3, #1
 8018d52:	f04f 33ff 	movge.w	r3, #4294967295
 8018d56:	4620      	mov	r0, r4
 8018d58:	930a      	str	r3, [sp, #40]	; 0x28
 8018d5a:	9b04      	ldr	r3, [sp, #16]
 8018d5c:	fb03 f208 	mul.w	r2, r3, r8
 8018d60:	f7ff fdda 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018d64:	f84b 0d0c 	str.w	r0, [fp, #-12]!
 8018d68:	4658      	mov	r0, fp
 8018d6a:	f7ff f97d 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018d6e:	fb06 f207 	mul.w	r2, r6, r7
 8018d72:	b203      	sxth	r3, r0
 8018d74:	4629      	mov	r1, r5
 8018d76:	4620      	mov	r0, r4
 8018d78:	9305      	str	r3, [sp, #20]
 8018d7a:	f7ff fdcd 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018d7e:	900f      	str	r0, [sp, #60]	; 0x3c
 8018d80:	4658      	mov	r0, fp
 8018d82:	f7ff f971 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018d86:	fb0a f207 	mul.w	r2, sl, r7
 8018d8a:	b203      	sxth	r3, r0
 8018d8c:	920b      	str	r2, [sp, #44]	; 0x2c
 8018d8e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018d90:	444a      	add	r2, r9
 8018d92:	920c      	str	r2, [sp, #48]	; 0x30
 8018d94:	9a05      	ldr	r2, [sp, #20]
 8018d96:	429a      	cmp	r2, r3
 8018d98:	dc14      	bgt.n	8018dc4 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x268>
 8018d9a:	eb06 090a 	add.w	r9, r6, sl
 8018d9e:	fb07 f909 	mul.w	r9, r7, r9
 8018da2:	9a05      	ldr	r2, [sp, #20]
 8018da4:	429a      	cmp	r2, r3
 8018da6:	db48      	blt.n	8018e3a <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x2de>
 8018da8:	464a      	mov	r2, r9
 8018daa:	4629      	mov	r1, r5
 8018dac:	4620      	mov	r0, r4
 8018dae:	4456      	add	r6, sl
 8018db0:	f7ff fdb2 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018db4:	900f      	str	r0, [sp, #60]	; 0x3c
 8018db6:	4658      	mov	r0, fp
 8018db8:	f7ff f956 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018dbc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8018dbe:	b203      	sxth	r3, r0
 8018dc0:	4491      	add	r9, r2
 8018dc2:	e7ee      	b.n	8018da2 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x246>
 8018dc4:	fb07 f206 	mul.w	r2, r7, r6
 8018dc8:	4629      	mov	r1, r5
 8018dca:	4620      	mov	r0, r4
 8018dcc:	f7ff fda4 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018dd0:	9b06      	ldr	r3, [sp, #24]
 8018dd2:	1ac0      	subs	r0, r0, r3
 8018dd4:	900f      	str	r0, [sp, #60]	; 0x3c
 8018dd6:	4658      	mov	r0, fp
 8018dd8:	f7ff f946 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018ddc:	4681      	mov	r9, r0
 8018dde:	4628      	mov	r0, r5
 8018de0:	f7ff fa09 	bl	80181f6 <_ZNK8touchgfx17AbstractDataGraph23getGraphAreaPaddingLeftEv>
 8018de4:	eba9 0000 	sub.w	r0, r9, r0
 8018de8:	f894 203c 	ldrb.w	r2, [r4, #60]	; 0x3c
 8018dec:	b203      	sxth	r3, r0
 8018dee:	42da      	cmn	r2, r3
 8018df0:	930d      	str	r3, [sp, #52]	; 0x34
 8018df2:	d415      	bmi.n	8018e20 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x2c4>
 8018df4:	4628      	mov	r0, r5
 8018df6:	f7ff fa01 	bl	80181fc <_ZNK8touchgfx17AbstractDataGraph17getGraphAreaWidthEv>
 8018dfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018dfc:	4298      	cmp	r0, r3
 8018dfe:	dd0f      	ble.n	8018e20 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x2c4>
 8018e00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018e02:	fa0f f289 	sxth.w	r2, r9
 8018e06:	a910      	add	r1, sp, #64	; 0x40
 8018e08:	4620      	mov	r0, r4
 8018e0a:	9303      	str	r3, [sp, #12]
 8018e0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8018e0e:	9302      	str	r3, [sp, #8]
 8018e10:	9b08      	ldr	r3, [sp, #32]
 8018e12:	9301      	str	r3, [sp, #4]
 8018e14:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8018e18:	9300      	str	r3, [sp, #0]
 8018e1a:	9b07      	ldr	r3, [sp, #28]
 8018e1c:	f7ff fe69 	bl	8018af2 <_ZNK8touchgfx17GraphElementGridX8drawLineERKNS_4RectEssssNS_9colortypeEh>
 8018e20:	4456      	add	r6, sl
 8018e22:	4629      	mov	r1, r5
 8018e24:	4620      	mov	r0, r4
 8018e26:	fb06 f207 	mul.w	r2, r6, r7
 8018e2a:	f7ff fd75 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018e2e:	900f      	str	r0, [sp, #60]	; 0x3c
 8018e30:	4658      	mov	r0, fp
 8018e32:	f7ff f919 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018e36:	b203      	sxth	r3, r0
 8018e38:	e7ac      	b.n	8018d94 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x238>
 8018e3a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018e3c:	930d      	str	r3, [sp, #52]	; 0x34
 8018e3e:	9b04      	ldr	r3, [sp, #16]
 8018e40:	4413      	add	r3, r2
 8018e42:	9304      	str	r3, [sp, #16]
 8018e44:	9a04      	ldr	r2, [sp, #16]
 8018e46:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018e48:	4293      	cmp	r3, r2
 8018e4a:	f43f aeff 	beq.w	8018c4c <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0xf0>
 8018e4e:	fb02 f208 	mul.w	r2, r2, r8
 8018e52:	4629      	mov	r1, r5
 8018e54:	4620      	mov	r0, r4
 8018e56:	f7ff fd5f 	bl	8018918 <_ZNK8touchgfx20AbstractGraphElement16valueToScreenXQ5EPKNS_17AbstractDataGraphEi>
 8018e5a:	900f      	str	r0, [sp, #60]	; 0x3c
 8018e5c:	4658      	mov	r0, fp
 8018e5e:	f7ff f903 	bl	8018068 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8018e62:	b203      	sxth	r3, r0
 8018e64:	9305      	str	r3, [sp, #20]
 8018e66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018e68:	e794      	b.n	8018d94 <_ZNK8touchgfx17GraphElementGridX4drawERKNS_4RectE+0x238>
	...

08018e6c <_ZN8touchgfx20GraphElementDiamondsC1Ev>:
 8018e6c:	b510      	push	{r4, lr}
 8018e6e:	4604      	mov	r4, r0
 8018e70:	f7ff fd44 	bl	80188fc <_ZN8touchgfx20AbstractGraphElementC1Ev>
 8018e74:	4b03      	ldr	r3, [pc, #12]	; (8018e84 <_ZN8touchgfx20GraphElementDiamondsC1Ev+0x18>)
 8018e76:	4620      	mov	r0, r4
 8018e78:	6023      	str	r3, [r4, #0]
 8018e7a:	2302      	movs	r3, #2
 8018e7c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
 8018e80:	bd10      	pop	{r4, pc}
 8018e82:	bf00      	nop
 8018e84:	08030acc 	.word	0x08030acc

08018e88 <_ZN8touchgfx20GraphElementDiamonds15setDiamondWidthEh>:
 8018e88:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 8018e8c:	4770      	bx	lr

08018e8e <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE>:
 8018e8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e92:	6943      	ldr	r3, [r0, #20]
 8018e94:	b0b9      	sub	sp, #228	; 0xe4
 8018e96:	4606      	mov	r6, r0
 8018e98:	468b      	mov	fp, r1
 8018e9a:	695f      	ldr	r7, [r3, #20]
 8018e9c:	4638      	mov	r0, r7
 8018e9e:	f7ff fa65 	bl	801836c <_ZNK8touchgfx17AbstractDataGraph15getUsedCapacityEv>
 8018ea2:	b920      	cbnz	r0, 8018eae <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x20>
 8018ea4:	2501      	movs	r5, #1
 8018ea6:	4628      	mov	r0, r5
 8018ea8:	b039      	add	sp, #228	; 0xe4
 8018eaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018eae:	f896 3034 	ldrb.w	r3, [r6, #52]	; 0x34
 8018eb2:	ac38      	add	r4, sp, #224	; 0xe0
 8018eb4:	015b      	lsls	r3, r3, #5
 8018eb6:	9303      	str	r3, [sp, #12]
 8018eb8:	085b      	lsrs	r3, r3, #1
 8018eba:	f844 3dbc 	str.w	r3, [r4, #-188]!
 8018ebe:	4620      	mov	r0, r4
 8018ec0:	f7ff fd08 	bl	80188d4 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8018ec4:	f8bb 1000 	ldrh.w	r1, [fp]
 8018ec8:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 8018ecc:	b280      	uxth	r0, r0
 8018ece:	f10d 0312 	add.w	r3, sp, #18
 8018ed2:	440a      	add	r2, r1
 8018ed4:	1a09      	subs	r1, r1, r0
 8018ed6:	9300      	str	r3, [sp, #0]
 8018ed8:	ab04      	add	r3, sp, #16
 8018eda:	4402      	add	r2, r0
 8018edc:	b209      	sxth	r1, r1
 8018ede:	4630      	mov	r0, r6
 8018ee0:	b212      	sxth	r2, r2
 8018ee2:	f7ff fd1f 	bl	8018924 <_ZNK8touchgfx20AbstractGraphElement24xScreenRangeToIndexRangeEssRsS1_>
 8018ee6:	2800      	cmp	r0, #0
 8018ee8:	d0dc      	beq.n	8018ea4 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x16>
 8018eea:	9b03      	ldr	r3, [sp, #12]
 8018eec:	465a      	mov	r2, fp
 8018eee:	4631      	mov	r1, r6
 8018ef0:	4620      	mov	r0, r4
 8018ef2:	ea4f 0a63 	mov.w	sl, r3, asr #1
 8018ef6:	f011 fa0d 	bl	802a314 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8018efa:	f9bd 5010 	ldrsh.w	r5, [sp, #16]
 8018efe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018f02:	42ab      	cmp	r3, r5
 8018f04:	db46      	blt.n	8018f94 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x106>
 8018f06:	462a      	mov	r2, r5
 8018f08:	4639      	mov	r1, r7
 8018f0a:	4630      	mov	r0, r6
 8018f0c:	f7ff fd47 	bl	801899e <_ZNK8touchgfx20AbstractGraphElement17isCenterInvisibleEPKNS_17AbstractDataGraphEs>
 8018f10:	b110      	cbz	r0, 8018f18 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x8a>
 8018f12:	3501      	adds	r5, #1
 8018f14:	b22d      	sxth	r5, r5
 8018f16:	e7f2      	b.n	8018efe <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x70>
 8018f18:	4629      	mov	r1, r5
 8018f1a:	4638      	mov	r0, r7
 8018f1c:	f7ff fc91 	bl	8018842 <_ZNK8touchgfx20AbstractGraphElement16indexToScreenXQ5EPKNS_17AbstractDataGraphEs.constprop.10>
 8018f20:	f7ff fce1 	bl	80188e6 <_ZNK8touchgfx20AbstractGraphElement7roundQ5ENS_7CWRUtil2Q5E.constprop.9>
 8018f24:	4629      	mov	r1, r5
 8018f26:	4680      	mov	r8, r0
 8018f28:	4638      	mov	r0, r7
 8018f2a:	f7ff fc86 	bl	801883a <_ZNK8touchgfx20AbstractGraphElement16indexToScreenYQ5EPKNS_17AbstractDataGraphEs.constprop.8>
 8018f2e:	f7ff fcda 	bl	80188e6 <_ZNK8touchgfx20AbstractGraphElement7roundQ5ENS_7CWRUtil2Q5E.constprop.9>
 8018f32:	9b03      	ldr	r3, [sp, #12]
 8018f34:	4642      	mov	r2, r8
 8018f36:	4631      	mov	r1, r6
 8018f38:	9300      	str	r3, [sp, #0]
 8018f3a:	4681      	mov	r9, r0
 8018f3c:	4603      	mov	r3, r0
 8018f3e:	a807      	add	r0, sp, #28
 8018f40:	f7ff fd1b 	bl	801897a <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 8018f44:	ab07      	add	r3, sp, #28
 8018f46:	e893 0003 	ldmia.w	r3, {r0, r1}
 8018f4a:	ab05      	add	r3, sp, #20
 8018f4c:	e883 0003 	stmia.w	r3, {r0, r1}
 8018f50:	4618      	mov	r0, r3
 8018f52:	4659      	mov	r1, fp
 8018f54:	f7fd fd0e 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8018f58:	a805      	add	r0, sp, #20
 8018f5a:	f7fd fd4e 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8018f5e:	2800      	cmp	r0, #0
 8018f60:	d1d7      	bne.n	8018f12 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x84>
 8018f62:	464a      	mov	r2, r9
 8018f64:	eba8 010a 	sub.w	r1, r8, sl
 8018f68:	4620      	mov	r0, r4
 8018f6a:	f011 fb9c 	bl	802a6a6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8018f6e:	eba9 020a 	sub.w	r2, r9, sl
 8018f72:	4641      	mov	r1, r8
 8018f74:	4620      	mov	r0, r4
 8018f76:	f011 fb25 	bl	802a5c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8018f7a:	464a      	mov	r2, r9
 8018f7c:	eb0a 0108 	add.w	r1, sl, r8
 8018f80:	4620      	mov	r0, r4
 8018f82:	f011 fb1f 	bl	802a5c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8018f86:	eb09 020a 	add.w	r2, r9, sl
 8018f8a:	4641      	mov	r1, r8
 8018f8c:	4620      	mov	r0, r4
 8018f8e:	f011 fb19 	bl	802a5c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8018f92:	e7be      	b.n	8018f12 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x84>
 8018f94:	4638      	mov	r0, r7
 8018f96:	f7ff f91d 	bl	80181d4 <_ZNK8touchgfx17AbstractDataGraph8getAlphaEv>
 8018f9a:	4601      	mov	r1, r0
 8018f9c:	4620      	mov	r0, r4
 8018f9e:	f011 fc86 	bl	802a8ae <_ZN8touchgfx6Canvas6renderEh>
 8018fa2:	4605      	mov	r5, r0
 8018fa4:	4620      	mov	r0, r4
 8018fa6:	f011 fcc1 	bl	802a92c <_ZN8touchgfx6CanvasD1Ev>
 8018faa:	e77c      	b.n	8018ea6 <_ZNK8touchgfx20GraphElementDiamonds16drawCanvasWidgetERKNS_4RectE+0x18>

08018fac <_ZNK8touchgfx21DataGraphWrapAndClear18indexToGlobalIndexEs>:
 8018fac:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 8018fb0:	f9b0 011a 	ldrsh.w	r0, [r0, #282]	; 0x11a
 8018fb4:	4419      	add	r1, r3
 8018fb6:	1a08      	subs	r0, r1, r0
 8018fb8:	4770      	bx	lr

08018fba <_ZN8touchgfx21DataGraphWrapAndClear8addValueEi>:
 8018fba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8018fbc:	f9b0 511a 	ldrsh.w	r5, [r0, #282]	; 0x11a
 8018fc0:	460f      	mov	r7, r1
 8018fc2:	f8d0 6128 	ldr.w	r6, [r0, #296]	; 0x128
 8018fc6:	4604      	mov	r4, r0
 8018fc8:	1c6b      	adds	r3, r5, #1
 8018fca:	4629      	mov	r1, r5
 8018fcc:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8018fd0:	6803      	ldr	r3, [r0, #0]
 8018fd2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 8018fd6:	4798      	blx	r3
 8018fd8:	f846 7020 	str.w	r7, [r6, r0, lsl #2]
 8018fdc:	b915      	cbnz	r5, 8018fe4 <_ZN8touchgfx21DataGraphWrapAndClear8addValueEi+0x2a>
 8018fde:	4620      	mov	r0, r4
 8018fe0:	f7ff fa74 	bl	80184cc <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 8018fe4:	4620      	mov	r0, r4
 8018fe6:	4629      	mov	r1, r5
 8018fe8:	f7ff fa45 	bl	8018476 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 8018fec:	4628      	mov	r0, r5
 8018fee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08018ff0 <_ZN8touchgfx21DataGraphWrapAndClear14beforeAddValueEv>:
 8018ff0:	b510      	push	{r4, lr}
 8018ff2:	f9b0 211a 	ldrsh.w	r2, [r0, #282]	; 0x11a
 8018ff6:	4604      	mov	r4, r0
 8018ff8:	f9b0 3118 	ldrsh.w	r3, [r0, #280]	; 0x118
 8018ffc:	429a      	cmp	r2, r3
 8018ffe:	db0b      	blt.n	8019018 <_ZN8touchgfx21DataGraphWrapAndClear14beforeAddValueEv+0x28>
 8019000:	f7ff fa64 	bl	80184cc <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 8019004:	6823      	ldr	r3, [r4, #0]
 8019006:	4620      	mov	r0, r4
 8019008:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 801900c:	4798      	blx	r3
 801900e:	4620      	mov	r0, r4
 8019010:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019014:	f7ff ba3f 	b.w	8018496 <_ZN8touchgfx17AbstractDataGraph19invalidateGraphAreaEv>
 8019018:	bd10      	pop	{r4, pc}
	...

0801901c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi>:
 801901c:	b510      	push	{r4, lr}
 801901e:	4604      	mov	r4, r0
 8019020:	f7ff fbae 	bl	8018780 <_ZN8touchgfx22AbstractDataGraphWithYC1EsPi>
 8019024:	4b01      	ldr	r3, [pc, #4]	; (801902c <_ZN8touchgfx21DataGraphWrapAndClearC1EsPi+0x10>)
 8019026:	4620      	mov	r0, r4
 8019028:	6023      	str	r3, [r4, #0]
 801902a:	bd10      	pop	{r4, pc}
 801902c:	08030c5c 	.word	0x08030c5c

08019030 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8019030:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8019034:	4770      	bx	lr

08019036 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8019036:	b510      	push	{r4, lr}
 8019038:	4604      	mov	r4, r0
 801903a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801903c:	b150      	cbz	r0, 8019054 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801903e:	6803      	ldr	r3, [r0, #0]
 8019040:	68db      	ldr	r3, [r3, #12]
 8019042:	4798      	blx	r3
 8019044:	b130      	cbz	r0, 8019054 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8019046:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8019048:	4621      	mov	r1, r4
 801904a:	6803      	ldr	r3, [r0, #0]
 801904c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019050:	689b      	ldr	r3, [r3, #8]
 8019052:	4718      	bx	r3
 8019054:	bd10      	pop	{r4, pc}

08019056 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8019056:	790b      	ldrb	r3, [r1, #4]
 8019058:	2b00      	cmp	r3, #0
 801905a:	bf0c      	ite	eq
 801905c:	2301      	moveq	r3, #1
 801905e:	2300      	movne	r3, #0
 8019060:	b570      	push	{r4, r5, r6, lr}
 8019062:	4604      	mov	r4, r0
 8019064:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8019068:	460e      	mov	r6, r1
 801906a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801906e:	d109      	bne.n	8019084 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8019070:	b14d      	cbz	r5, 8019086 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8019072:	7933      	ldrb	r3, [r6, #4]
 8019074:	2b01      	cmp	r3, #1
 8019076:	d10c      	bne.n	8019092 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8019078:	6823      	ldr	r3, [r4, #0]
 801907a:	4620      	mov	r0, r4
 801907c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801907e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019082:	4718      	bx	r3
 8019084:	b12d      	cbz	r5, 8019092 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8019086:	6823      	ldr	r3, [r4, #0]
 8019088:	4620      	mov	r0, r4
 801908a:	695b      	ldr	r3, [r3, #20]
 801908c:	4798      	blx	r3
 801908e:	2d00      	cmp	r5, #0
 8019090:	d1ef      	bne.n	8019072 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8019092:	bd70      	pop	{r4, r5, r6, pc}

08019094 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8019094:	2200      	movs	r2, #0
 8019096:	8002      	strh	r2, [r0, #0]
 8019098:	8042      	strh	r2, [r0, #2]
 801909a:	8082      	strh	r2, [r0, #4]
 801909c:	80c2      	strh	r2, [r0, #6]
 801909e:	4770      	bx	lr

080190a0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 80190a0:	b570      	push	{r4, r5, r6, lr}
 80190a2:	6803      	ldr	r3, [r0, #0]
 80190a4:	4604      	mov	r4, r0
 80190a6:	4615      	mov	r5, r2
 80190a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80190aa:	4798      	blx	r3
 80190ac:	6823      	ldr	r3, [r4, #0]
 80190ae:	4629      	mov	r1, r5
 80190b0:	4620      	mov	r0, r4
 80190b2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80190b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80190b8:	4718      	bx	r3
	...

080190bc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80190bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80190be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80190c2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80190c4:	4299      	cmp	r1, r3
 80190c6:	d029      	beq.n	801911c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x60>
 80190c8:	4b15      	ldr	r3, [pc, #84]	; (8019120 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80190ca:	681b      	ldr	r3, [r3, #0]
 80190cc:	b92b      	cbnz	r3, 80190da <_ZNK8touchgfx8TextArea12getTextWidthEv+0x1e>
 80190ce:	4b15      	ldr	r3, [pc, #84]	; (8019124 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80190d0:	21b1      	movs	r1, #177	; 0xb1
 80190d2:	4a15      	ldr	r2, [pc, #84]	; (8019128 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80190d4:	4815      	ldr	r0, [pc, #84]	; (801912c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 80190d6:	f012 ff07 	bl	802bee8 <__assert_func>
 80190da:	4a15      	ldr	r2, [pc, #84]	; (8019130 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x74>)
 80190dc:	8812      	ldrh	r2, [r2, #0]
 80190de:	428a      	cmp	r2, r1
 80190e0:	d803      	bhi.n	80190ea <_ZNK8touchgfx8TextArea12getTextWidthEv+0x2e>
 80190e2:	4b14      	ldr	r3, [pc, #80]	; (8019134 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x78>)
 80190e4:	21b2      	movs	r1, #178	; 0xb2
 80190e6:	4a10      	ldr	r2, [pc, #64]	; (8019128 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80190e8:	e7f4      	b.n	80190d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x18>
 80190ea:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80190ee:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80190f2:	4b11      	ldr	r3, [pc, #68]	; (8019138 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x7c>)
 80190f4:	7854      	ldrb	r4, [r2, #1]
 80190f6:	681b      	ldr	r3, [r3, #0]
 80190f8:	f3c4 0481 	ubfx	r4, r4, #2, #2
 80190fc:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8019100:	682b      	ldr	r3, [r5, #0]
 8019102:	69de      	ldr	r6, [r3, #28]
 8019104:	4b0d      	ldr	r3, [pc, #52]	; (801913c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x80>)
 8019106:	6818      	ldr	r0, [r3, #0]
 8019108:	f7f5 fab2 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 801910c:	2300      	movs	r3, #0
 801910e:	4602      	mov	r2, r0
 8019110:	4621      	mov	r1, r4
 8019112:	9300      	str	r3, [sp, #0]
 8019114:	4628      	mov	r0, r5
 8019116:	47b0      	blx	r6
 8019118:	b002      	add	sp, #8
 801911a:	bd70      	pop	{r4, r5, r6, pc}
 801911c:	2000      	movs	r0, #0
 801911e:	e7fb      	b.n	8019118 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5c>
 8019120:	200041d8 	.word	0x200041d8
 8019124:	08030de4 	.word	0x08030de4
 8019128:	08030f1c 	.word	0x08030f1c
 801912c:	08030e26 	.word	0x08030e26
 8019130:	200041dc 	.word	0x200041dc
 8019134:	08030e4f 	.word	0x08030e4f
 8019138:	200041e0 	.word	0x200041e0
 801913c:	200041e4 	.word	0x200041e4

08019140 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 8019140:	b570      	push	{r4, r5, r6, lr}
 8019142:	6803      	ldr	r3, [r0, #0]
 8019144:	4604      	mov	r4, r0
 8019146:	b28d      	uxth	r5, r1
 8019148:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801914a:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 801914c:	4b10      	ldr	r3, [pc, #64]	; (8019190 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 801914e:	681b      	ldr	r3, [r3, #0]
 8019150:	b92b      	cbnz	r3, 801915e <_ZN8touchgfx8TextArea12setBaselineYEs+0x1e>
 8019152:	4b10      	ldr	r3, [pc, #64]	; (8019194 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8019154:	21b1      	movs	r1, #177	; 0xb1
 8019156:	4a10      	ldr	r2, [pc, #64]	; (8019198 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8019158:	4810      	ldr	r0, [pc, #64]	; (801919c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 801915a:	f012 fec5 	bl	802bee8 <__assert_func>
 801915e:	4910      	ldr	r1, [pc, #64]	; (80191a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8019160:	8809      	ldrh	r1, [r1, #0]
 8019162:	4291      	cmp	r1, r2
 8019164:	d803      	bhi.n	801916e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8019166:	4b0f      	ldr	r3, [pc, #60]	; (80191a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8019168:	21b2      	movs	r1, #178	; 0xb2
 801916a:	4a0b      	ldr	r2, [pc, #44]	; (8019198 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 801916c:	e7f4      	b.n	8019158 <_ZN8touchgfx8TextArea12setBaselineYEs+0x18>
 801916e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8019172:	4b0d      	ldr	r3, [pc, #52]	; (80191a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8019174:	681b      	ldr	r3, [r3, #0]
 8019176:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801917a:	6803      	ldr	r3, [r0, #0]
 801917c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801917e:	4798      	blx	r3
 8019180:	1a29      	subs	r1, r5, r0
 8019182:	4633      	mov	r3, r6
 8019184:	4620      	mov	r0, r4
 8019186:	b209      	sxth	r1, r1
 8019188:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801918c:	4718      	bx	r3
 801918e:	bf00      	nop
 8019190:	200041d8 	.word	0x200041d8
 8019194:	08030de4 	.word	0x08030de4
 8019198:	08030f1c 	.word	0x08030f1c
 801919c:	08030e26 	.word	0x08030e26
 80191a0:	200041dc 	.word	0x200041dc
 80191a4:	08030e4f 	.word	0x08030e4f
 80191a8:	200041e0 	.word	0x200041e0

080191ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80191ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80191b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80191b4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80191b6:	b08c      	sub	sp, #48	; 0x30
 80191b8:	4604      	mov	r4, r0
 80191ba:	4293      	cmp	r3, r2
 80191bc:	4688      	mov	r8, r1
 80191be:	d05f      	beq.n	8019280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 80191c0:	4e31      	ldr	r6, [pc, #196]	; (8019288 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xdc>)
 80191c2:	6832      	ldr	r2, [r6, #0]
 80191c4:	b92a      	cbnz	r2, 80191d2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x26>
 80191c6:	4b31      	ldr	r3, [pc, #196]	; (801928c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe0>)
 80191c8:	21b1      	movs	r1, #177	; 0xb1
 80191ca:	4a31      	ldr	r2, [pc, #196]	; (8019290 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 80191cc:	4831      	ldr	r0, [pc, #196]	; (8019294 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe8>)
 80191ce:	f012 fe8b 	bl	802bee8 <__assert_func>
 80191d2:	4d31      	ldr	r5, [pc, #196]	; (8019298 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xec>)
 80191d4:	8829      	ldrh	r1, [r5, #0]
 80191d6:	4299      	cmp	r1, r3
 80191d8:	d803      	bhi.n	80191e2 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x36>
 80191da:	4b30      	ldr	r3, [pc, #192]	; (801929c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf0>)
 80191dc:	21b2      	movs	r1, #178	; 0xb2
 80191de:	4a2c      	ldr	r2, [pc, #176]	; (8019290 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xe4>)
 80191e0:	e7f4      	b.n	80191cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x20>
 80191e2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80191e6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80191ea:	4b2d      	ldr	r3, [pc, #180]	; (80192a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf4>)
 80191ec:	681b      	ldr	r3, [r3, #0]
 80191ee:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80191f2:	2a00      	cmp	r2, #0
 80191f4:	d044      	beq.n	8019280 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd4>
 80191f6:	784b      	ldrb	r3, [r1, #1]
 80191f8:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 80191fc:	f3c3 0901 	ubfx	r9, r3, #0, #2
 8019200:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8019204:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8019208:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801920c:	4b25      	ldr	r3, [pc, #148]	; (80192a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xf8>)
 801920e:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8019212:	681b      	ldr	r3, [r3, #0]
 8019214:	f890 7037 	ldrb.w	r7, [r0, #55]	; 0x37
 8019218:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 801921c:	9207      	str	r2, [sp, #28]
 801921e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019220:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8019224:	9009      	str	r0, [sp, #36]	; 0x24
 8019226:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 801922a:	f88d 9020 	strb.w	r9, [sp, #32]
 801922e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8019232:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8019236:	f88d 702b 	strb.w	r7, [sp, #43]	; 0x2b
 801923a:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 801923e:	b10a      	cbz	r2, 8019244 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x98>
 8019240:	6cdf      	ldr	r7, [r3, #76]	; 0x4c
 8019242:	b907      	cbnz	r7, 8019246 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x9a>
 8019244:	689f      	ldr	r7, [r3, #8]
 8019246:	f10d 0914 	add.w	r9, sp, #20
 801924a:	4621      	mov	r1, r4
 801924c:	4648      	mov	r0, r9
 801924e:	f003 f935 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8019252:	6833      	ldr	r3, [r6, #0]
 8019254:	2b00      	cmp	r3, #0
 8019256:	d0b6      	beq.n	80191c6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x1a>
 8019258:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801925a:	882b      	ldrh	r3, [r5, #0]
 801925c:	428b      	cmp	r3, r1
 801925e:	d9bc      	bls.n	80191da <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x2e>
 8019260:	4b11      	ldr	r3, [pc, #68]	; (80192a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xfc>)
 8019262:	6818      	ldr	r0, [r3, #0]
 8019264:	f7f5 fa04 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 8019268:	2300      	movs	r3, #0
 801926a:	9001      	str	r0, [sp, #4]
 801926c:	4638      	mov	r0, r7
 801926e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8019272:	ab07      	add	r3, sp, #28
 8019274:	9300      	str	r3, [sp, #0]
 8019276:	4643      	mov	r3, r8
 8019278:	e899 0006 	ldmia.w	r9, {r1, r2}
 801927c:	f7f5 f989 	bl	800e592 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8019280:	b00c      	add	sp, #48	; 0x30
 8019282:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019286:	bf00      	nop
 8019288:	200041d8 	.word	0x200041d8
 801928c:	08030de4 	.word	0x08030de4
 8019290:	08030f1c 	.word	0x08030f1c
 8019294:	08030e26 	.word	0x08030e26
 8019298:	200041dc 	.word	0x200041dc
 801929c:	08030e4f 	.word	0x08030e4f
 80192a0:	200041e0 	.word	0x200041e0
 80192a4:	20004168 	.word	0x20004168
 80192a8:	200041e4 	.word	0x200041e4

080192ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 80192ac:	b40e      	push	{r1, r2, r3}
 80192ae:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80192b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80192b6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80192b8:	b09b      	sub	sp, #108	; 0x6c
 80192ba:	4604      	mov	r4, r0
 80192bc:	4293      	cmp	r3, r2
 80192be:	d061      	beq.n	8019384 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd8>
 80192c0:	aa24      	add	r2, sp, #144	; 0x90
 80192c2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8019398 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xec>
 80192c6:	9203      	str	r2, [sp, #12]
 80192c8:	f8da 2000 	ldr.w	r2, [sl]
 80192cc:	b92a      	cbnz	r2, 80192da <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x2e>
 80192ce:	4b2e      	ldr	r3, [pc, #184]	; (8019388 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xdc>)
 80192d0:	21b1      	movs	r1, #177	; 0xb1
 80192d2:	4a2e      	ldr	r2, [pc, #184]	; (801938c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 80192d4:	482e      	ldr	r0, [pc, #184]	; (8019390 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe4>)
 80192d6:	f012 fe07 	bl	802bee8 <__assert_func>
 80192da:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 801939c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf0>
 80192de:	f8b8 1000 	ldrh.w	r1, [r8]
 80192e2:	4299      	cmp	r1, r3
 80192e4:	d803      	bhi.n	80192ee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x42>
 80192e6:	4b2b      	ldr	r3, [pc, #172]	; (8019394 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe8>)
 80192e8:	21b2      	movs	r1, #178	; 0xb2
 80192ea:	4a28      	ldr	r2, [pc, #160]	; (801938c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xe0>)
 80192ec:	e7f2      	b.n	80192d4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x28>
 80192ee:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80193a0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xf4>
 80192f2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80192f6:	f8d9 3000 	ldr.w	r3, [r9]
 80192fa:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 80192fe:	683b      	ldr	r3, [r7, #0]
 8019300:	4638      	mov	r0, r7
 8019302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019304:	4798      	blx	r3
 8019306:	4606      	mov	r6, r0
 8019308:	b205      	sxth	r5, r0
 801930a:	a804      	add	r0, sp, #16
 801930c:	f003 fd93 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 8019310:	683b      	ldr	r3, [r7, #0]
 8019312:	4638      	mov	r0, r7
 8019314:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8019316:	4798      	blx	r3
 8019318:	9923      	ldr	r1, [sp, #140]	; 0x8c
 801931a:	4603      	mov	r3, r0
 801931c:	9a03      	ldr	r2, [sp, #12]
 801931e:	a804      	add	r0, sp, #16
 8019320:	f003 fdce 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 8019324:	f8da 3000 	ldr.w	r3, [sl]
 8019328:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 801932c:	2b00      	cmp	r3, #0
 801932e:	d0ce      	beq.n	80192ce <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x22>
 8019330:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8019332:	f8b8 0000 	ldrh.w	r0, [r8]
 8019336:	4290      	cmp	r0, r2
 8019338:	d9d5      	bls.n	80192e6 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0x3a>
 801933a:	eb03 0742 	add.w	r7, r3, r2, lsl #1
 801933e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8019342:	f8d9 3000 	ldr.w	r3, [r9]
 8019346:	787a      	ldrb	r2, [r7, #1]
 8019348:	f9b4 7008 	ldrsh.w	r7, [r4, #8]
 801934c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8019350:	9700      	str	r7, [sp, #0]
 8019352:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8019356:	a804      	add	r0, sp, #16
 8019358:	f001 fc5f 	bl	801ac1a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801935c:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8019360:	b203      	sxth	r3, r0
 8019362:	18a9      	adds	r1, r5, r2
 8019364:	2900      	cmp	r1, #0
 8019366:	dd0b      	ble.n	8019380 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xd4>
 8019368:	3b01      	subs	r3, #1
 801936a:	fb13 f302 	smulbb	r3, r3, r2
 801936e:	fb16 3300 	smlabb	r3, r6, r0, r3
 8019372:	b21d      	sxth	r5, r3
 8019374:	4628      	mov	r0, r5
 8019376:	b01b      	add	sp, #108	; 0x6c
 8019378:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801937c:	b003      	add	sp, #12
 801937e:	4770      	bx	lr
 8019380:	2b00      	cmp	r3, #0
 8019382:	dcf7      	bgt.n	8019374 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8019384:	2500      	movs	r5, #0
 8019386:	e7f5      	b.n	8019374 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8019388:	08030de4 	.word	0x08030de4
 801938c:	08030f1c 	.word	0x08030f1c
 8019390:	08030e26 	.word	0x08030e26
 8019394:	08030e4f 	.word	0x08030e4f
 8019398:	200041d8 	.word	0x200041d8
 801939c:	200041dc 	.word	0x200041dc
 80193a0:	200041e0 	.word	0x200041e0

080193a4 <_ZN8touchgfx8TextArea13getTextHeightEv>:
 80193a4:	b570      	push	{r4, r5, r6, lr}
 80193a6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80193aa:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80193ac:	4604      	mov	r4, r0
 80193ae:	4299      	cmp	r1, r3
 80193b0:	d01e      	beq.n	80193f0 <_ZN8touchgfx8TextArea13getTextHeightEv+0x4c>
 80193b2:	6803      	ldr	r3, [r0, #0]
 80193b4:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80193b6:	4b0f      	ldr	r3, [pc, #60]	; (80193f4 <_ZN8touchgfx8TextArea13getTextHeightEv+0x50>)
 80193b8:	681b      	ldr	r3, [r3, #0]
 80193ba:	b92b      	cbnz	r3, 80193c8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x24>
 80193bc:	4b0e      	ldr	r3, [pc, #56]	; (80193f8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x54>)
 80193be:	21b1      	movs	r1, #177	; 0xb1
 80193c0:	4a0e      	ldr	r2, [pc, #56]	; (80193fc <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 80193c2:	480f      	ldr	r0, [pc, #60]	; (8019400 <_ZN8touchgfx8TextArea13getTextHeightEv+0x5c>)
 80193c4:	f012 fd90 	bl	802bee8 <__assert_func>
 80193c8:	4b0e      	ldr	r3, [pc, #56]	; (8019404 <_ZN8touchgfx8TextArea13getTextHeightEv+0x60>)
 80193ca:	881b      	ldrh	r3, [r3, #0]
 80193cc:	428b      	cmp	r3, r1
 80193ce:	d803      	bhi.n	80193d8 <_ZN8touchgfx8TextArea13getTextHeightEv+0x34>
 80193d0:	4b0d      	ldr	r3, [pc, #52]	; (8019408 <_ZN8touchgfx8TextArea13getTextHeightEv+0x64>)
 80193d2:	21b2      	movs	r1, #178	; 0xb2
 80193d4:	4a09      	ldr	r2, [pc, #36]	; (80193fc <_ZN8touchgfx8TextArea13getTextHeightEv+0x58>)
 80193d6:	e7f4      	b.n	80193c2 <_ZN8touchgfx8TextArea13getTextHeightEv+0x1e>
 80193d8:	4b0c      	ldr	r3, [pc, #48]	; (801940c <_ZN8touchgfx8TextArea13getTextHeightEv+0x68>)
 80193da:	6818      	ldr	r0, [r3, #0]
 80193dc:	f7f5 f948 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 80193e0:	2300      	movs	r3, #0
 80193e2:	4601      	mov	r1, r0
 80193e4:	46ac      	mov	ip, r5
 80193e6:	4620      	mov	r0, r4
 80193e8:	461a      	mov	r2, r3
 80193ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80193ee:	4760      	bx	ip
 80193f0:	2000      	movs	r0, #0
 80193f2:	bd70      	pop	{r4, r5, r6, pc}
 80193f4:	200041d8 	.word	0x200041d8
 80193f8:	08030de4 	.word	0x08030de4
 80193fc:	08030f1c 	.word	0x08030f1c
 8019400:	08030e26 	.word	0x08030e26
 8019404:	200041dc 	.word	0x200041dc
 8019408:	08030e4f 	.word	0x08030e4f
 801940c:	200041e4 	.word	0x200041e4

08019410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8019410:	b538      	push	{r3, r4, r5, lr}
 8019412:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8019416:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8019418:	4604      	mov	r4, r0
 801941a:	429a      	cmp	r2, r3
 801941c:	d014      	beq.n	8019448 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801941e:	6803      	ldr	r3, [r0, #0]
 8019420:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8019422:	4798      	blx	r3
 8019424:	6823      	ldr	r3, [r4, #0]
 8019426:	4605      	mov	r5, r0
 8019428:	4620      	mov	r0, r4
 801942a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801942c:	4798      	blx	r3
 801942e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8019432:	b22d      	sxth	r5, r5
 8019434:	4601      	mov	r1, r0
 8019436:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801943a:	bf06      	itte	eq
 801943c:	4602      	moveq	r2, r0
 801943e:	4629      	moveq	r1, r5
 8019440:	462a      	movne	r2, r5
 8019442:	4620      	mov	r0, r4
 8019444:	f7f0 fefc 	bl	800a240 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8019448:	bd38      	pop	{r3, r4, r5, pc}

0801944a <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE>:
 801944a:	888a      	ldrh	r2, [r1, #4]
 801944c:	8582      	strh	r2, [r0, #44]	; 0x2c
 801944e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8019452:	b922      	cbnz	r2, 801945e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 8019454:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8019458:	b90b      	cbnz	r3, 801945e <_ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE+0x14>
 801945a:	f7ff bfd9 	b.w	8019410 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801945e:	4770      	bx	lr

08019460 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8019460:	2300      	movs	r3, #0
 8019462:	8083      	strh	r3, [r0, #4]
 8019464:	80c3      	strh	r3, [r0, #6]
 8019466:	8003      	strh	r3, [r0, #0]
 8019468:	8043      	strh	r3, [r0, #2]
 801946a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801946e:	2bff      	cmp	r3, #255	; 0xff
 8019470:	bf01      	itttt	eq
 8019472:	890b      	ldrheq	r3, [r1, #8]
 8019474:	8083      	strheq	r3, [r0, #4]
 8019476:	894b      	ldrheq	r3, [r1, #10]
 8019478:	80c3      	strheq	r3, [r0, #6]
 801947a:	4770      	bx	lr

0801947c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801947c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801947e:	4604      	mov	r4, r0
 8019480:	466b      	mov	r3, sp
 8019482:	6808      	ldr	r0, [r1, #0]
 8019484:	6849      	ldr	r1, [r1, #4]
 8019486:	c303      	stmia	r3!, {r0, r1}
 8019488:	6823      	ldr	r3, [r4, #0]
 801948a:	4669      	mov	r1, sp
 801948c:	4620      	mov	r0, r4
 801948e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019490:	4798      	blx	r3
 8019492:	4b08      	ldr	r3, [pc, #32]	; (80194b4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8019494:	681b      	ldr	r3, [r3, #0]
 8019496:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801949a:	b10a      	cbz	r2, 80194a0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801949c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801949e:	b900      	cbnz	r0, 80194a2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80194a0:	6898      	ldr	r0, [r3, #8]
 80194a2:	6803      	ldr	r3, [r0, #0]
 80194a4:	4669      	mov	r1, sp
 80194a6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80194a8:	699d      	ldr	r5, [r3, #24]
 80194aa:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80194ae:	47a8      	blx	r5
 80194b0:	b003      	add	sp, #12
 80194b2:	bd30      	pop	{r4, r5, pc}
 80194b4:	20004168 	.word	0x20004168

080194b8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80194b8:	b570      	push	{r4, r5, r6, lr}
 80194ba:	880b      	ldrh	r3, [r1, #0]
 80194bc:	4605      	mov	r5, r0
 80194be:	4604      	mov	r4, r0
 80194c0:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80194c2:	8813      	ldrh	r3, [r2, #0]
 80194c4:	f825 3f30 	strh.w	r3, [r5, #48]!
 80194c8:	4628      	mov	r0, r5
 80194ca:	f005 f8dd 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80194ce:	4606      	mov	r6, r0
 80194d0:	4628      	mov	r0, r5
 80194d2:	f005 f913 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80194d6:	6823      	ldr	r3, [r4, #0]
 80194d8:	4605      	mov	r5, r0
 80194da:	b231      	sxth	r1, r6
 80194dc:	4620      	mov	r0, r4
 80194de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80194e0:	4798      	blx	r3
 80194e2:	6823      	ldr	r3, [r4, #0]
 80194e4:	b229      	sxth	r1, r5
 80194e6:	4620      	mov	r0, r4
 80194e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80194ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80194ee:	4718      	bx	r3

080194f0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 80194f0:	b510      	push	{r4, lr}
 80194f2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 80194f6:	4604      	mov	r4, r0
 80194f8:	2bff      	cmp	r3, #255	; 0xff
 80194fa:	d006      	beq.n	801950a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80194fc:	2300      	movs	r3, #0
 80194fe:	8003      	strh	r3, [r0, #0]
 8019500:	8043      	strh	r3, [r0, #2]
 8019502:	8083      	strh	r3, [r0, #4]
 8019504:	80c3      	strh	r3, [r0, #6]
 8019506:	4620      	mov	r0, r4
 8019508:	bd10      	pop	{r4, pc}
 801950a:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 801950e:	b11b      	cbz	r3, 8019518 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8019510:	3130      	adds	r1, #48	; 0x30
 8019512:	f005 f92d 	bl	801e770 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019516:	e7f6      	b.n	8019506 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8019518:	312e      	adds	r1, #46	; 0x2e
 801951a:	e7fa      	b.n	8019512 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801951c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801951c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019520:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8019524:	b08a      	sub	sp, #40	; 0x28
 8019526:	4604      	mov	r4, r0
 8019528:	4688      	mov	r8, r1
 801952a:	2b00      	cmp	r3, #0
 801952c:	d044      	beq.n	80195b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x9c>
 801952e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8019530:	a805      	add	r0, sp, #20
 8019532:	f8ad 3014 	strh.w	r3, [sp, #20]
 8019536:	f005 f8a7 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801953a:	4605      	mov	r5, r0
 801953c:	b206      	sxth	r6, r0
 801953e:	a805      	add	r0, sp, #20
 8019540:	f005 f8dc 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019544:	f9b8 2000 	ldrsh.w	r2, [r8]
 8019548:	f8b8 7004 	ldrh.w	r7, [r8, #4]
 801954c:	2300      	movs	r3, #0
 801954e:	fa0f fc80 	sxth.w	ip, r0
 8019552:	4417      	add	r7, r2
 8019554:	9306      	str	r3, [sp, #24]
 8019556:	b2bf      	uxth	r7, r7
 8019558:	fa0f fe87 	sxth.w	lr, r7
 801955c:	459e      	cmp	lr, r3
 801955e:	dd2d      	ble.n	80195bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8019560:	4296      	cmp	r6, r2
 8019562:	dd2b      	ble.n	80195bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 8019564:	f9b8 3002 	ldrsh.w	r3, [r8, #2]
 8019568:	f8b8 1006 	ldrh.w	r1, [r8, #6]
 801956c:	4419      	add	r1, r3
 801956e:	b289      	uxth	r1, r1
 8019570:	fa0f f881 	sxth.w	r8, r1
 8019574:	f1b8 0f00 	cmp.w	r8, #0
 8019578:	dd20      	ble.n	80195bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801957a:	459c      	cmp	ip, r3
 801957c:	dd1e      	ble.n	80195bc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa0>
 801957e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8019582:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019586:	4576      	cmp	r6, lr
 8019588:	bfa8      	it	ge
 801958a:	463d      	movge	r5, r7
 801958c:	45c4      	cmp	ip, r8
 801958e:	bfa8      	it	ge
 8019590:	4608      	movge	r0, r1
 8019592:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019596:	1aad      	subs	r5, r5, r2
 8019598:	1ac0      	subs	r0, r0, r3
 801959a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801959e:	f8ad 501c 	strh.w	r5, [sp, #28]
 80195a2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80195a6:	4b1f      	ldr	r3, [pc, #124]	; (8019624 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x108>)
 80195a8:	681b      	ldr	r3, [r3, #0]
 80195aa:	b953      	cbnz	r3, 80195c2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xa6>
 80195ac:	4b1e      	ldr	r3, [pc, #120]	; (8019628 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x10c>)
 80195ae:	218b      	movs	r1, #139	; 0x8b
 80195b0:	4a1e      	ldr	r2, [pc, #120]	; (801962c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x110>)
 80195b2:	481f      	ldr	r0, [pc, #124]	; (8019630 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x114>)
 80195b4:	f012 fc98 	bl	802bee8 <__assert_func>
 80195b8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80195ba:	e7b9      	b.n	8019530 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 80195bc:	2300      	movs	r3, #0
 80195be:	9307      	str	r3, [sp, #28]
 80195c0:	e7f1      	b.n	80195a6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x8a>
 80195c2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80195c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80195ca:	429a      	cmp	r2, r3
 80195cc:	d026      	beq.n	801961c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80195ce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80195d2:	2b00      	cmp	r3, #0
 80195d4:	dd22      	ble.n	801961c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80195d6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80195da:	2b00      	cmp	r3, #0
 80195dc:	dd1e      	ble.n	801961c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x100>
 80195de:	2300      	movs	r3, #0
 80195e0:	a908      	add	r1, sp, #32
 80195e2:	4620      	mov	r0, r4
 80195e4:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80195e8:	6823      	ldr	r3, [r4, #0]
 80195ea:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80195ec:	4798      	blx	r3
 80195ee:	4b11      	ldr	r3, [pc, #68]	; (8019634 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x118>)
 80195f0:	681b      	ldr	r3, [r3, #0]
 80195f2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80195f6:	b10a      	cbz	r2, 80195fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80195f8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80195fa:	b900      	cbnz	r0, 80195fe <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe2>
 80195fc:	6898      	ldr	r0, [r3, #8]
 80195fe:	2501      	movs	r5, #1
 8019600:	6801      	ldr	r1, [r0, #0]
 8019602:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8019606:	9502      	str	r5, [sp, #8]
 8019608:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801960c:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019610:	9401      	str	r4, [sp, #4]
 8019612:	ac06      	add	r4, sp, #24
 8019614:	9400      	str	r4, [sp, #0]
 8019616:	688c      	ldr	r4, [r1, #8]
 8019618:	a905      	add	r1, sp, #20
 801961a:	47a0      	blx	r4
 801961c:	b00a      	add	sp, #40	; 0x28
 801961e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019622:	bf00      	nop
 8019624:	20004210 	.word	0x20004210
 8019628:	08030fb0 	.word	0x08030fb0
 801962c:	08031084 	.word	0x08031084
 8019630:	08030fec 	.word	0x08030fec
 8019634:	20004168 	.word	0x20004168

08019638 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv>:
 8019638:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801963a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801963e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8019640:	4605      	mov	r5, r0
 8019642:	4299      	cmp	r1, r3
 8019644:	d02a      	beq.n	801969c <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x64>
 8019646:	4b16      	ldr	r3, [pc, #88]	; (80196a0 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x68>)
 8019648:	681b      	ldr	r3, [r3, #0]
 801964a:	b92b      	cbnz	r3, 8019658 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x20>
 801964c:	4b15      	ldr	r3, [pc, #84]	; (80196a4 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x6c>)
 801964e:	21b1      	movs	r1, #177	; 0xb1
 8019650:	4a15      	ldr	r2, [pc, #84]	; (80196a8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 8019652:	4816      	ldr	r0, [pc, #88]	; (80196ac <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x74>)
 8019654:	f012 fc48 	bl	802bee8 <__assert_func>
 8019658:	4a15      	ldr	r2, [pc, #84]	; (80196b0 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x78>)
 801965a:	8812      	ldrh	r2, [r2, #0]
 801965c:	428a      	cmp	r2, r1
 801965e:	d803      	bhi.n	8019668 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x30>
 8019660:	4b14      	ldr	r3, [pc, #80]	; (80196b4 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x7c>)
 8019662:	21b2      	movs	r1, #178	; 0xb2
 8019664:	4a10      	ldr	r2, [pc, #64]	; (80196a8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x70>)
 8019666:	e7f4      	b.n	8019652 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x1a>
 8019668:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801966c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8019670:	4b11      	ldr	r3, [pc, #68]	; (80196b8 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x80>)
 8019672:	7854      	ldrb	r4, [r2, #1]
 8019674:	681b      	ldr	r3, [r3, #0]
 8019676:	f3c4 0481 	ubfx	r4, r4, #2, #2
 801967a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801967e:	6833      	ldr	r3, [r6, #0]
 8019680:	69df      	ldr	r7, [r3, #28]
 8019682:	4b0e      	ldr	r3, [pc, #56]	; (80196bc <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x84>)
 8019684:	6818      	ldr	r0, [r3, #0]
 8019686:	f7f4 fff3 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 801968a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 801968c:	4602      	mov	r2, r0
 801968e:	4621      	mov	r1, r4
 8019690:	9300      	str	r3, [sp, #0]
 8019692:	4630      	mov	r0, r6
 8019694:	6beb      	ldr	r3, [r5, #60]	; 0x3c
 8019696:	47b8      	blx	r7
 8019698:	b003      	add	sp, #12
 801969a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801969c:	2000      	movs	r0, #0
 801969e:	e7fb      	b.n	8019698 <_ZNK8touchgfx24TextAreaWithTwoWildcards12getTextWidthEv+0x60>
 80196a0:	200041d8 	.word	0x200041d8
 80196a4:	08030de4 	.word	0x08030de4
 80196a8:	080311a8 	.word	0x080311a8
 80196ac:	08030e26 	.word	0x08030e26
 80196b0:	200041dc 	.word	0x200041dc
 80196b4:	08030e4f 	.word	0x08030e4f
 80196b8:	200041e0 	.word	0x200041e0
 80196bc:	200041e4 	.word	0x200041e4

080196c0 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv>:
 80196c0:	b570      	push	{r4, r5, r6, lr}
 80196c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80196c6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80196c8:	4604      	mov	r4, r0
 80196ca:	4299      	cmp	r1, r3
 80196cc:	d01e      	beq.n	801970c <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x4c>
 80196ce:	6803      	ldr	r3, [r0, #0]
 80196d0:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80196d2:	4b0f      	ldr	r3, [pc, #60]	; (8019710 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x50>)
 80196d4:	681b      	ldr	r3, [r3, #0]
 80196d6:	b92b      	cbnz	r3, 80196e4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x24>
 80196d8:	4b0e      	ldr	r3, [pc, #56]	; (8019714 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x54>)
 80196da:	21b1      	movs	r1, #177	; 0xb1
 80196dc:	4a0e      	ldr	r2, [pc, #56]	; (8019718 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 80196de:	480f      	ldr	r0, [pc, #60]	; (801971c <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x5c>)
 80196e0:	f012 fc02 	bl	802bee8 <__assert_func>
 80196e4:	4b0e      	ldr	r3, [pc, #56]	; (8019720 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x60>)
 80196e6:	881b      	ldrh	r3, [r3, #0]
 80196e8:	428b      	cmp	r3, r1
 80196ea:	d803      	bhi.n	80196f4 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x34>
 80196ec:	4b0d      	ldr	r3, [pc, #52]	; (8019724 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x64>)
 80196ee:	21b2      	movs	r1, #178	; 0xb2
 80196f0:	4a09      	ldr	r2, [pc, #36]	; (8019718 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x58>)
 80196f2:	e7f4      	b.n	80196de <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x1e>
 80196f4:	4b0c      	ldr	r3, [pc, #48]	; (8019728 <_ZN8touchgfx24TextAreaWithTwoWildcards13getTextHeightEv+0x68>)
 80196f6:	6818      	ldr	r0, [r3, #0]
 80196f8:	f7f4 ffba 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 80196fc:	46ac      	mov	ip, r5
 80196fe:	4601      	mov	r1, r0
 8019700:	4620      	mov	r0, r4
 8019702:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 8019706:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801970a:	4760      	bx	ip
 801970c:	2000      	movs	r0, #0
 801970e:	bd70      	pop	{r4, r5, r6, pc}
 8019710:	200041d8 	.word	0x200041d8
 8019714:	08030de4 	.word	0x08030de4
 8019718:	080311a8 	.word	0x080311a8
 801971c:	08030e26 	.word	0x08030e26
 8019720:	200041dc 	.word	0x200041dc
 8019724:	08030e4f 	.word	0x08030e4f
 8019728:	200041e4 	.word	0x200041e4

0801972c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv>:
 801972c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801972e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8019732:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8019734:	4606      	mov	r6, r0
 8019736:	4299      	cmp	r1, r3
 8019738:	d02a      	beq.n	8019790 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x64>
 801973a:	4b16      	ldr	r3, [pc, #88]	; (8019794 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x68>)
 801973c:	681b      	ldr	r3, [r3, #0]
 801973e:	b92b      	cbnz	r3, 801974c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x20>
 8019740:	4b15      	ldr	r3, [pc, #84]	; (8019798 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x6c>)
 8019742:	21b1      	movs	r1, #177	; 0xb1
 8019744:	4a15      	ldr	r2, [pc, #84]	; (801979c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 8019746:	4816      	ldr	r0, [pc, #88]	; (80197a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x74>)
 8019748:	f012 fbce 	bl	802bee8 <__assert_func>
 801974c:	4a15      	ldr	r2, [pc, #84]	; (80197a4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x78>)
 801974e:	8812      	ldrh	r2, [r2, #0]
 8019750:	428a      	cmp	r2, r1
 8019752:	d803      	bhi.n	801975c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x30>
 8019754:	4b14      	ldr	r3, [pc, #80]	; (80197a8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x7c>)
 8019756:	21b2      	movs	r1, #178	; 0xb2
 8019758:	4a10      	ldr	r2, [pc, #64]	; (801979c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x70>)
 801975a:	e7f4      	b.n	8019746 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x1a>
 801975c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8019760:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8019764:	4b11      	ldr	r3, [pc, #68]	; (80197ac <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x80>)
 8019766:	7854      	ldrb	r4, [r2, #1]
 8019768:	681b      	ldr	r3, [r3, #0]
 801976a:	f3c4 0481 	ubfx	r4, r4, #2, #2
 801976e:	f853 5020 	ldr.w	r5, [r3, r0, lsl #2]
 8019772:	682b      	ldr	r3, [r5, #0]
 8019774:	69df      	ldr	r7, [r3, #28]
 8019776:	4b0e      	ldr	r3, [pc, #56]	; (80197b0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x84>)
 8019778:	6818      	ldr	r0, [r3, #0]
 801977a:	f7f4 ff79 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 801977e:	2300      	movs	r3, #0
 8019780:	4602      	mov	r2, r0
 8019782:	4621      	mov	r1, r4
 8019784:	9300      	str	r3, [sp, #0]
 8019786:	4628      	mov	r0, r5
 8019788:	6bf3      	ldr	r3, [r6, #60]	; 0x3c
 801978a:	47b8      	blx	r7
 801978c:	b003      	add	sp, #12
 801978e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019790:	2000      	movs	r0, #0
 8019792:	e7fb      	b.n	801978c <_ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv+0x60>
 8019794:	200041d8 	.word	0x200041d8
 8019798:	08030de4 	.word	0x08030de4
 801979c:	080311a8 	.word	0x080311a8
 80197a0:	08030e26 	.word	0x08030e26
 80197a4:	200041dc 	.word	0x200041dc
 80197a8:	08030e4f 	.word	0x08030e4f
 80197ac:	200041e0 	.word	0x200041e0
 80197b0:	200041e4 	.word	0x200041e4

080197b4 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv>:
 80197b4:	b570      	push	{r4, r5, r6, lr}
 80197b6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80197ba:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80197bc:	4604      	mov	r4, r0
 80197be:	4299      	cmp	r1, r3
 80197c0:	d01e      	beq.n	8019800 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x4c>
 80197c2:	6803      	ldr	r3, [r0, #0]
 80197c4:	6edd      	ldr	r5, [r3, #108]	; 0x6c
 80197c6:	4b0f      	ldr	r3, [pc, #60]	; (8019804 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x50>)
 80197c8:	681b      	ldr	r3, [r3, #0]
 80197ca:	b92b      	cbnz	r3, 80197d8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x24>
 80197cc:	4b0e      	ldr	r3, [pc, #56]	; (8019808 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x54>)
 80197ce:	21b1      	movs	r1, #177	; 0xb1
 80197d0:	4a0e      	ldr	r2, [pc, #56]	; (801980c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80197d2:	480f      	ldr	r0, [pc, #60]	; (8019810 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x5c>)
 80197d4:	f012 fb88 	bl	802bee8 <__assert_func>
 80197d8:	4b0e      	ldr	r3, [pc, #56]	; (8019814 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x60>)
 80197da:	881b      	ldrh	r3, [r3, #0]
 80197dc:	428b      	cmp	r3, r1
 80197de:	d803      	bhi.n	80197e8 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x34>
 80197e0:	4b0d      	ldr	r3, [pc, #52]	; (8019818 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x64>)
 80197e2:	21b2      	movs	r1, #178	; 0xb2
 80197e4:	4a09      	ldr	r2, [pc, #36]	; (801980c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x58>)
 80197e6:	e7f4      	b.n	80197d2 <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x1e>
 80197e8:	4b0c      	ldr	r3, [pc, #48]	; (801981c <_ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv+0x68>)
 80197ea:	6818      	ldr	r0, [r3, #0]
 80197ec:	f7f4 ff40 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 80197f0:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 80197f2:	4601      	mov	r1, r0
 80197f4:	46ac      	mov	ip, r5
 80197f6:	4620      	mov	r0, r4
 80197f8:	2300      	movs	r3, #0
 80197fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80197fe:	4760      	bx	ip
 8019800:	2000      	movs	r0, #0
 8019802:	bd70      	pop	{r4, r5, r6, pc}
 8019804:	200041d8 	.word	0x200041d8
 8019808:	08030de4 	.word	0x08030de4
 801980c:	080311a8 	.word	0x080311a8
 8019810:	08030e26 	.word	0x08030e26
 8019814:	200041dc 	.word	0x200041dc
 8019818:	08030e4f 	.word	0x08030e4f
 801981c:	200041e4 	.word	0x200041e4

08019820 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE>:
 8019820:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019824:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019828:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801982a:	b08c      	sub	sp, #48	; 0x30
 801982c:	4604      	mov	r4, r0
 801982e:	4293      	cmp	r3, r2
 8019830:	460e      	mov	r6, r1
 8019832:	d05d      	beq.n	80198f0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 8019834:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 8019914 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf4>
 8019838:	f8d8 2000 	ldr.w	r2, [r8]
 801983c:	b92a      	cbnz	r2, 801984a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x2a>
 801983e:	4b2e      	ldr	r3, [pc, #184]	; (80198f8 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd8>)
 8019840:	21b1      	movs	r1, #177	; 0xb1
 8019842:	4a2e      	ldr	r2, [pc, #184]	; (80198fc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 8019844:	482e      	ldr	r0, [pc, #184]	; (8019900 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe0>)
 8019846:	f012 fb4f 	bl	802bee8 <__assert_func>
 801984a:	4f2e      	ldr	r7, [pc, #184]	; (8019904 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe4>)
 801984c:	8839      	ldrh	r1, [r7, #0]
 801984e:	4299      	cmp	r1, r3
 8019850:	d803      	bhi.n	801985a <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x3a>
 8019852:	4b2d      	ldr	r3, [pc, #180]	; (8019908 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xe8>)
 8019854:	21b2      	movs	r1, #178	; 0xb2
 8019856:	4a29      	ldr	r2, [pc, #164]	; (80198fc <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xdc>)
 8019858:	e7f4      	b.n	8019844 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x24>
 801985a:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801985e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8019862:	4b2a      	ldr	r3, [pc, #168]	; (801990c <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xec>)
 8019864:	681b      	ldr	r3, [r3, #0]
 8019866:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801986a:	2a00      	cmp	r2, #0
 801986c:	d040      	beq.n	80198f0 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xd0>
 801986e:	784b      	ldrb	r3, [r1, #1]
 8019870:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 8019874:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8019878:	f3c3 0901 	ubfx	r9, r3, #0, #2
 801987c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8019880:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8019884:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8019888:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 801988c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8019890:	ad05      	add	r5, sp, #20
 8019892:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8019894:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8019898:	9207      	str	r2, [sp, #28]
 801989a:	f88d 9020 	strb.w	r9, [sp, #32]
 801989e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 80198a2:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 80198a6:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 80198aa:	9009      	str	r0, [sp, #36]	; 0x24
 80198ac:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 80198b0:	f7ef ff00 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 80198b4:	4621      	mov	r1, r4
 80198b6:	4681      	mov	r9, r0
 80198b8:	4628      	mov	r0, r5
 80198ba:	f002 fdff 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80198be:	f8d8 3000 	ldr.w	r3, [r8]
 80198c2:	2b00      	cmp	r3, #0
 80198c4:	d0bb      	beq.n	801983e <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x1e>
 80198c6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80198c8:	883b      	ldrh	r3, [r7, #0]
 80198ca:	428b      	cmp	r3, r1
 80198cc:	d9c1      	bls.n	8019852 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0x32>
 80198ce:	4b10      	ldr	r3, [pc, #64]	; (8019910 <_ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE+0xf0>)
 80198d0:	6818      	ldr	r0, [r3, #0]
 80198d2:	f7f4 fecd 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 80198d6:	2300      	movs	r3, #0
 80198d8:	9303      	str	r3, [sp, #12]
 80198da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80198dc:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80198e0:	ab07      	add	r3, sp, #28
 80198e2:	4648      	mov	r0, r9
 80198e4:	9300      	str	r3, [sp, #0]
 80198e6:	4633      	mov	r3, r6
 80198e8:	e895 0006 	ldmia.w	r5, {r1, r2}
 80198ec:	f7f4 fe51 	bl	800e592 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80198f0:	b00c      	add	sp, #48	; 0x30
 80198f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80198f6:	bf00      	nop
 80198f8:	08030de4 	.word	0x08030de4
 80198fc:	080311a8 	.word	0x080311a8
 8019900:	08030e26 	.word	0x08030e26
 8019904:	200041dc 	.word	0x200041dc
 8019908:	08030e4f 	.word	0x08030e4f
 801990c:	200041e0 	.word	0x200041e0
 8019910:	200041e4 	.word	0x200041e4
 8019914:	200041d8 	.word	0x200041d8

08019918 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE>:
 8019918:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801991c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8019920:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8019922:	b08c      	sub	sp, #48	; 0x30
 8019924:	4604      	mov	r4, r0
 8019926:	4293      	cmp	r3, r2
 8019928:	460e      	mov	r6, r1
 801992a:	d05d      	beq.n	80199e8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 801992c:	f8df 80dc 	ldr.w	r8, [pc, #220]	; 8019a0c <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf4>
 8019930:	f8d8 2000 	ldr.w	r2, [r8]
 8019934:	b92a      	cbnz	r2, 8019942 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x2a>
 8019936:	4b2e      	ldr	r3, [pc, #184]	; (80199f0 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd8>)
 8019938:	21b1      	movs	r1, #177	; 0xb1
 801993a:	4a2e      	ldr	r2, [pc, #184]	; (80199f4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 801993c:	482e      	ldr	r0, [pc, #184]	; (80199f8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe0>)
 801993e:	f012 fad3 	bl	802bee8 <__assert_func>
 8019942:	4f2e      	ldr	r7, [pc, #184]	; (80199fc <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe4>)
 8019944:	8839      	ldrh	r1, [r7, #0]
 8019946:	4299      	cmp	r1, r3
 8019948:	d803      	bhi.n	8019952 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x3a>
 801994a:	4b2d      	ldr	r3, [pc, #180]	; (8019a00 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xe8>)
 801994c:	21b2      	movs	r1, #178	; 0xb2
 801994e:	4a29      	ldr	r2, [pc, #164]	; (80199f4 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xdc>)
 8019950:	e7f4      	b.n	801993c <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x24>
 8019952:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019956:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801995a:	4b2a      	ldr	r3, [pc, #168]	; (8019a04 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xec>)
 801995c:	681b      	ldr	r3, [r3, #0]
 801995e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8019962:	2a00      	cmp	r2, #0
 8019964:	d040      	beq.n	80199e8 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xd0>
 8019966:	784b      	ldrb	r3, [r1, #1]
 8019968:	f890 5037 	ldrb.w	r5, [r0, #55]	; 0x37
 801996c:	f890 1039 	ldrb.w	r1, [r0, #57]	; 0x39
 8019970:	f3c3 0901 	ubfx	r9, r3, #0, #2
 8019974:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8019978:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801997c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8019980:	f890 a036 	ldrb.w	sl, [r0, #54]	; 0x36
 8019984:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8019988:	ad05      	add	r5, sp, #20
 801998a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801998c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8019990:	9207      	str	r2, [sp, #28]
 8019992:	f88d 9020 	strb.w	r9, [sp, #32]
 8019996:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801999a:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801999e:	f88d 102c 	strb.w	r1, [sp, #44]	; 0x2c
 80199a2:	9009      	str	r0, [sp, #36]	; 0x24
 80199a4:	f88d a02a 	strb.w	sl, [sp, #42]	; 0x2a
 80199a8:	f7ef fe84 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 80199ac:	4621      	mov	r1, r4
 80199ae:	4681      	mov	r9, r0
 80199b0:	4628      	mov	r0, r5
 80199b2:	f002 fd83 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80199b6:	f8d8 3000 	ldr.w	r3, [r8]
 80199ba:	2b00      	cmp	r3, #0
 80199bc:	d0bb      	beq.n	8019936 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x1e>
 80199be:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80199c0:	883b      	ldrh	r3, [r7, #0]
 80199c2:	428b      	cmp	r3, r1
 80199c4:	d9c1      	bls.n	801994a <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0x32>
 80199c6:	4b10      	ldr	r3, [pc, #64]	; (8019a08 <_ZNK8touchgfx24TextAreaWithTwoWildcards4drawERKNS_4RectE+0xf0>)
 80199c8:	6818      	ldr	r0, [r3, #0]
 80199ca:	f7f4 fe51 	bl	800e670 <_ZNK8touchgfx5Texts7getTextEt>
 80199ce:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80199d0:	9303      	str	r3, [sp, #12]
 80199d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80199d4:	e9cd 0301 	strd	r0, r3, [sp, #4]
 80199d8:	ab07      	add	r3, sp, #28
 80199da:	4648      	mov	r0, r9
 80199dc:	9300      	str	r3, [sp, #0]
 80199de:	4633      	mov	r3, r6
 80199e0:	e895 0006 	ldmia.w	r5, {r1, r2}
 80199e4:	f7f4 fdd5 	bl	800e592 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80199e8:	b00c      	add	sp, #48	; 0x30
 80199ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80199ee:	bf00      	nop
 80199f0:	08030de4 	.word	0x08030de4
 80199f4:	080311a8 	.word	0x080311a8
 80199f8:	08030e26 	.word	0x08030e26
 80199fc:	200041dc 	.word	0x200041dc
 8019a00:	08030e4f 	.word	0x08030e4f
 8019a04:	200041e0 	.word	0x200041e0
 8019a08:	200041e4 	.word	0x200041e4
 8019a0c:	200041d8 	.word	0x200041d8

08019a10 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8019a10:	b570      	push	{r4, r5, r6, lr}
 8019a12:	880b      	ldrh	r3, [r1, #0]
 8019a14:	460d      	mov	r5, r1
 8019a16:	4604      	mov	r4, r0
 8019a18:	84c3      	strh	r3, [r0, #38]	; 0x26
 8019a1a:	4608      	mov	r0, r1
 8019a1c:	f004 fe34 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019a20:	4606      	mov	r6, r0
 8019a22:	4628      	mov	r0, r5
 8019a24:	f004 fe6a 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019a28:	6823      	ldr	r3, [r4, #0]
 8019a2a:	4605      	mov	r5, r0
 8019a2c:	b231      	sxth	r1, r6
 8019a2e:	4620      	mov	r0, r4
 8019a30:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8019a32:	4798      	blx	r3
 8019a34:	6823      	ldr	r3, [r4, #0]
 8019a36:	b229      	sxth	r1, r5
 8019a38:	4620      	mov	r0, r4
 8019a3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019a3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019a40:	4718      	bx	r3

08019a42 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8019a42:	b510      	push	{r4, lr}
 8019a44:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8019a48:	4604      	mov	r4, r0
 8019a4a:	2bff      	cmp	r3, #255	; 0xff
 8019a4c:	d006      	beq.n	8019a5c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8019a4e:	2300      	movs	r3, #0
 8019a50:	8003      	strh	r3, [r0, #0]
 8019a52:	8043      	strh	r3, [r0, #2]
 8019a54:	8083      	strh	r3, [r0, #4]
 8019a56:	80c3      	strh	r3, [r0, #6]
 8019a58:	4620      	mov	r0, r4
 8019a5a:	bd10      	pop	{r4, pc}
 8019a5c:	3126      	adds	r1, #38	; 0x26
 8019a5e:	f004 fe87 	bl	801e770 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019a62:	e7f9      	b.n	8019a58 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08019a64 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8019a64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019a68:	4604      	mov	r4, r0
 8019a6a:	b088      	sub	sp, #32
 8019a6c:	2500      	movs	r5, #0
 8019a6e:	460f      	mov	r7, r1
 8019a70:	f854 3b26 	ldr.w	r3, [r4], #38
 8019a74:	a904      	add	r1, sp, #16
 8019a76:	4606      	mov	r6, r0
 8019a78:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8019a7a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8019a7e:	4798      	blx	r3
 8019a80:	4620      	mov	r0, r4
 8019a82:	f004 fe01 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019a86:	4680      	mov	r8, r0
 8019a88:	4620      	mov	r0, r4
 8019a8a:	f004 fe37 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019a8e:	9506      	str	r5, [sp, #24]
 8019a90:	ad06      	add	r5, sp, #24
 8019a92:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019a96:	4639      	mov	r1, r7
 8019a98:	f8ad 801c 	strh.w	r8, [sp, #28]
 8019a9c:	4628      	mov	r0, r5
 8019a9e:	f7fc ff69 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 8019aa2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019aa6:	2b00      	cmp	r3, #0
 8019aa8:	dd19      	ble.n	8019ade <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8019aaa:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8019aae:	2b00      	cmp	r3, #0
 8019ab0:	dd15      	ble.n	8019ade <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8019ab2:	4b0c      	ldr	r3, [pc, #48]	; (8019ae4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8019ab4:	681b      	ldr	r3, [r3, #0]
 8019ab6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8019aba:	b10a      	cbz	r2, 8019ac0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8019abc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8019abe:	b900      	cbnz	r0, 8019ac2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8019ac0:	6898      	ldr	r0, [r3, #8]
 8019ac2:	2701      	movs	r7, #1
 8019ac4:	6801      	ldr	r1, [r0, #0]
 8019ac6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019aca:	9702      	str	r7, [sp, #8]
 8019acc:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8019ad0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019ad4:	e9cd 5600 	strd	r5, r6, [sp]
 8019ad8:	688d      	ldr	r5, [r1, #8]
 8019ada:	4621      	mov	r1, r4
 8019adc:	47a8      	blx	r5
 8019ade:	b008      	add	sp, #32
 8019ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8019ae4:	20004168 	.word	0x20004168

08019ae8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8019ae8:	4b02      	ldr	r3, [pc, #8]	; (8019af4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8019aea:	6018      	str	r0, [r3, #0]
 8019aec:	4b02      	ldr	r3, [pc, #8]	; (8019af8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8019aee:	6019      	str	r1, [r3, #0]
 8019af0:	4770      	bx	lr
 8019af2:	bf00      	nop
 8019af4:	20004170 	.word	0x20004170
 8019af8:	20004184 	.word	0x20004184

08019afc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>:
 8019afc:	b538      	push	{r3, r4, r5, lr}
 8019afe:	4c2b      	ldr	r4, [pc, #172]	; (8019bac <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb0>)
 8019b00:	4b2b      	ldr	r3, [pc, #172]	; (8019bb0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb4>)
 8019b02:	6821      	ldr	r1, [r4, #0]
 8019b04:	681a      	ldr	r2, [r3, #0]
 8019b06:	4281      	cmp	r1, r0
 8019b08:	4d2a      	ldr	r5, [pc, #168]	; (8019bb4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xb8>)
 8019b0a:	492b      	ldr	r1, [pc, #172]	; (8019bb8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xbc>)
 8019b0c:	d108      	bne.n	8019b20 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 8019b0e:	682b      	ldr	r3, [r5, #0]
 8019b10:	4293      	cmp	r3, r2
 8019b12:	d105      	bne.n	8019b20 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x24>
 8019b14:	6808      	ldr	r0, [r1, #0]
 8019b16:	280f      	cmp	r0, #15
 8019b18:	bf94      	ite	ls
 8019b1a:	2000      	movls	r0, #0
 8019b1c:	2001      	movhi	r0, #1
 8019b1e:	bd38      	pop	{r3, r4, r5, pc}
 8019b20:	4b26      	ldr	r3, [pc, #152]	; (8019bbc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc0>)
 8019b22:	6020      	str	r0, [r4, #0]
 8019b24:	681b      	ldr	r3, [r3, #0]
 8019b26:	602a      	str	r2, [r5, #0]
 8019b28:	4298      	cmp	r0, r3
 8019b2a:	d905      	bls.n	8019b38 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x3c>
 8019b2c:	4b24      	ldr	r3, [pc, #144]	; (8019bc0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8019b2e:	2137      	movs	r1, #55	; 0x37
 8019b30:	4a24      	ldr	r2, [pc, #144]	; (8019bc4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8019b32:	4825      	ldr	r0, [pc, #148]	; (8019bc8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xcc>)
 8019b34:	f012 f9d8 	bl	802bee8 <__assert_func>
 8019b38:	f010 0403 	ands.w	r4, r0, #3
 8019b3c:	bf1f      	itttt	ne
 8019b3e:	f1c4 0504 	rsbne	r5, r4, #4
 8019b42:	3b04      	subne	r3, #4
 8019b44:	1952      	addne	r2, r2, r5
 8019b46:	191b      	addne	r3, r3, r4
 8019b48:	4d20      	ldr	r5, [pc, #128]	; (8019bcc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd0>)
 8019b4a:	4402      	add	r2, r0
 8019b4c:	1a1b      	subs	r3, r3, r0
 8019b4e:	3001      	adds	r0, #1
 8019b50:	602a      	str	r2, [r5, #0]
 8019b52:	f020 0401 	bic.w	r4, r0, #1
 8019b56:	42a3      	cmp	r3, r4
 8019b58:	d203      	bcs.n	8019b62 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x66>
 8019b5a:	4b19      	ldr	r3, [pc, #100]	; (8019bc0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8019b5c:	214a      	movs	r1, #74	; 0x4a
 8019b5e:	4a19      	ldr	r2, [pc, #100]	; (8019bc4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8019b60:	e7e7      	b.n	8019b32 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8019b62:	f010 0002 	ands.w	r0, r0, #2
 8019b66:	bf1f      	itttt	ne
 8019b68:	f1c0 0504 	rsbne	r5, r0, #4
 8019b6c:	1952      	addne	r2, r2, r5
 8019b6e:	1f05      	subne	r5, r0, #4
 8019b70:	195b      	addne	r3, r3, r5
 8019b72:	4422      	add	r2, r4
 8019b74:	4d16      	ldr	r5, [pc, #88]	; (8019bd0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd4>)
 8019b76:	1b1b      	subs	r3, r3, r4
 8019b78:	602a      	str	r2, [r5, #0]
 8019b7a:	429c      	cmp	r4, r3
 8019b7c:	d903      	bls.n	8019b86 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x8a>
 8019b7e:	4b10      	ldr	r3, [pc, #64]	; (8019bc0 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc4>)
 8019b80:	215d      	movs	r1, #93	; 0x5d
 8019b82:	4a10      	ldr	r2, [pc, #64]	; (8019bc4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8019b84:	e7d5      	b.n	8019b32 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8019b86:	b120      	cbz	r0, 8019b92 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x96>
 8019b88:	f1c0 0504 	rsb	r5, r0, #4
 8019b8c:	3804      	subs	r0, #4
 8019b8e:	442a      	add	r2, r5
 8019b90:	4403      	add	r3, r0
 8019b92:	1b1b      	subs	r3, r3, r4
 8019b94:	4422      	add	r2, r4
 8019b96:	480f      	ldr	r0, [pc, #60]	; (8019bd4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xd8>)
 8019b98:	2b0f      	cmp	r3, #15
 8019b9a:	600b      	str	r3, [r1, #0]
 8019b9c:	6002      	str	r2, [r0, #0]
 8019b9e:	d803      	bhi.n	8019ba8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xac>
 8019ba0:	4b0d      	ldr	r3, [pc, #52]	; (8019bd8 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xdc>)
 8019ba2:	2170      	movs	r1, #112	; 0x70
 8019ba4:	4a07      	ldr	r2, [pc, #28]	; (8019bc4 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0xc8>)
 8019ba6:	e7c4      	b.n	8019b32 <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x36>
 8019ba8:	2001      	movs	r0, #1
 8019baa:	e7b8      	b.n	8019b1e <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj+0x22>
 8019bac:	20004178 	.word	0x20004178
 8019bb0:	20004170 	.word	0x20004170
 8019bb4:	20004180 	.word	0x20004180
 8019bb8:	20004188 	.word	0x20004188
 8019bbc:	20004184 	.word	0x20004184
 8019bc0:	08031240 	.word	0x08031240
 8019bc4:	08031308 	.word	0x08031308
 8019bc8:	08031279 	.word	0x08031279
 8019bcc:	2000418c 	.word	0x2000418c
 8019bd0:	2000417c 	.word	0x2000417c
 8019bd4:	20004174 	.word	0x20004174
 8019bd8:	080312c3 	.word	0x080312c3

08019bdc <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>:
 8019bdc:	4b04      	ldr	r3, [pc, #16]	; (8019bf0 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x14>)
 8019bde:	6818      	ldr	r0, [r3, #0]
 8019be0:	b120      	cbz	r0, 8019bec <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x10>
 8019be2:	4b04      	ldr	r3, [pc, #16]	; (8019bf4 <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv+0x18>)
 8019be4:	6818      	ldr	r0, [r3, #0]
 8019be6:	3000      	adds	r0, #0
 8019be8:	bf18      	it	ne
 8019bea:	2001      	movne	r0, #1
 8019bec:	4770      	bx	lr
 8019bee:	bf00      	nop
 8019bf0:	20004170 	.word	0x20004170
 8019bf4:	20004184 	.word	0x20004184

08019bf8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>:
 8019bf8:	4b01      	ldr	r3, [pc, #4]	; (8019c00 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv+0x8>)
 8019bfa:	6818      	ldr	r0, [r3, #0]
 8019bfc:	4770      	bx	lr
 8019bfe:	bf00      	nop
 8019c00:	20004178 	.word	0x20004178

08019c04 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>:
 8019c04:	4b01      	ldr	r3, [pc, #4]	; (8019c0c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv+0x8>)
 8019c06:	6818      	ldr	r0, [r3, #0]
 8019c08:	4770      	bx	lr
 8019c0a:	bf00      	nop
 8019c0c:	20004180 	.word	0x20004180

08019c10 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>:
 8019c10:	4b01      	ldr	r3, [pc, #4]	; (8019c18 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv+0x8>)
 8019c12:	6818      	ldr	r0, [r3, #0]
 8019c14:	4770      	bx	lr
 8019c16:	bf00      	nop
 8019c18:	2000418c 	.word	0x2000418c

08019c1c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>:
 8019c1c:	4b01      	ldr	r3, [pc, #4]	; (8019c24 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv+0x8>)
 8019c1e:	6818      	ldr	r0, [r3, #0]
 8019c20:	4770      	bx	lr
 8019c22:	bf00      	nop
 8019c24:	2000417c 	.word	0x2000417c

08019c28 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8019c28:	4b01      	ldr	r3, [pc, #4]	; (8019c30 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8019c2a:	6818      	ldr	r0, [r3, #0]
 8019c2c:	4770      	bx	lr
 8019c2e:	bf00      	nop
 8019c30:	20004174 	.word	0x20004174

08019c34 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8019c34:	4b01      	ldr	r3, [pc, #4]	; (8019c3c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8019c36:	6818      	ldr	r0, [r3, #0]
 8019c38:	4770      	bx	lr
 8019c3a:	bf00      	nop
 8019c3c:	20004188 	.word	0x20004188

08019c40 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c44:	4696      	mov	lr, r2
 8019c46:	b097      	sub	sp, #92	; 0x5c
 8019c48:	4605      	mov	r5, r0
 8019c4a:	4614      	mov	r4, r2
 8019c4c:	460e      	mov	r6, r1
 8019c4e:	461f      	mov	r7, r3
 8019c50:	f10d 0c1c 	add.w	ip, sp, #28
 8019c54:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8019c58:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8019c5c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8019c60:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019c64:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019c68:	f8de 3000 	ldr.w	r3, [lr]
 8019c6c:	f104 0e14 	add.w	lr, r4, #20
 8019c70:	f8cc 3000 	str.w	r3, [ip]
 8019c74:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019c78:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019c7c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019c80:	f8de 3000 	ldr.w	r3, [lr]
 8019c84:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8019c88:	f8cc 3000 	str.w	r3, [ip]
 8019c8c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8019c90:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019c94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019c98:	f8de 3000 	ldr.w	r3, [lr]
 8019c9c:	4631      	mov	r1, r6
 8019c9e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019ca0:	4628      	mov	r0, r5
 8019ca2:	f8cc 3000 	str.w	r3, [ip]
 8019ca6:	682b      	ldr	r3, [r5, #0]
 8019ca8:	9201      	str	r2, [sp, #4]
 8019caa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019cac:	f8cd 8008 	str.w	r8, [sp, #8]
 8019cb0:	9200      	str	r2, [sp, #0]
 8019cb2:	aa07      	add	r2, sp, #28
 8019cb4:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8019cb8:	f8d3 b038 	ldr.w	fp, [r3, #56]	; 0x38
 8019cbc:	463b      	mov	r3, r7
 8019cbe:	47d8      	blx	fp
 8019cc0:	46a6      	mov	lr, r4
 8019cc2:	f10d 0c1c 	add.w	ip, sp, #28
 8019cc6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019cca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019cce:	f8de 3000 	ldr.w	r3, [lr]
 8019cd2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8019cd6:	343c      	adds	r4, #60	; 0x3c
 8019cd8:	f8cc 3000 	str.w	r3, [ip]
 8019cdc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8019ce0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8019ce4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019ce8:	f8de 3000 	ldr.w	r3, [lr]
 8019cec:	f8cc 3000 	str.w	r3, [ip]
 8019cf0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8019cf4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019cf6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8019cfa:	6823      	ldr	r3, [r4, #0]
 8019cfc:	4631      	mov	r1, r6
 8019cfe:	4628      	mov	r0, r5
 8019d00:	f8cc 3000 	str.w	r3, [ip]
 8019d04:	682b      	ldr	r3, [r5, #0]
 8019d06:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8019d0a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019d0c:	f8cd 8008 	str.w	r8, [sp, #8]
 8019d10:	9201      	str	r2, [sp, #4]
 8019d12:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8019d14:	9200      	str	r2, [sp, #0]
 8019d16:	aa07      	add	r2, sp, #28
 8019d18:	6b9c      	ldr	r4, [r3, #56]	; 0x38
 8019d1a:	463b      	mov	r3, r7
 8019d1c:	47a0      	blx	r4
 8019d1e:	b017      	add	sp, #92	; 0x5c
 8019d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d24 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019d24:	2000      	movs	r0, #0
 8019d26:	4770      	bx	lr

08019d28 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8019d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d2c:	b08d      	sub	sp, #52	; 0x34
 8019d2e:	4688      	mov	r8, r1
 8019d30:	f8d3 c000 	ldr.w	ip, [r3]
 8019d34:	9916      	ldr	r1, [sp, #88]	; 0x58
 8019d36:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8019d3a:	680f      	ldr	r7, [r1, #0]
 8019d3c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8019d40:	eba7 070c 	sub.w	r7, r7, ip
 8019d44:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8019d48:	edd3 6a07 	vldr	s13, [r3, #28]
 8019d4c:	42bc      	cmp	r4, r7
 8019d4e:	9918      	ldr	r1, [sp, #96]	; 0x60
 8019d50:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8019d54:	bfa8      	it	ge
 8019d56:	463c      	movge	r4, r7
 8019d58:	f9b1 9000 	ldrsh.w	r9, [r1]
 8019d5c:	f9ba 1000 	ldrsh.w	r1, [sl]
 8019d60:	ee07 4a90 	vmov	s15, r4
 8019d64:	eb09 0e0c 	add.w	lr, r9, ip
 8019d68:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8019d6c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8019d70:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8019d74:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8019d78:	4571      	cmp	r1, lr
 8019d7a:	ee25 4a04 	vmul.f32	s8, s10, s8
 8019d7e:	ee65 4a24 	vmul.f32	s9, s10, s9
 8019d82:	ee25 5a27 	vmul.f32	s10, s10, s15
 8019d86:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8019d8a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8019d8e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8019d92:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019d96:	ee36 0a84 	vadd.f32	s0, s13, s8
 8019d9a:	ee61 1a87 	vmul.f32	s3, s3, s14
 8019d9e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019da2:	f340 808c 	ble.w	8019ebe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8019da6:	eba1 060e 	sub.w	r6, r1, lr
 8019daa:	fb96 f5f4 	sdiv	r5, r6, r4
 8019dae:	ee07 5a10 	vmov	s14, r5
 8019db2:	2d00      	cmp	r5, #0
 8019db4:	fb04 6615 	mls	r6, r4, r5, r6
 8019db8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019dbc:	eea7 0a04 	vfma.f32	s0, s14, s8
 8019dc0:	eee7 0a24 	vfma.f32	s1, s14, s9
 8019dc4:	eea7 1a05 	vfma.f32	s2, s14, s10
 8019dc8:	dd12      	ble.n	8019df0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8019dca:	ee70 6a44 	vsub.f32	s13, s0, s8
 8019dce:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8019dd2:	ee31 2a45 	vsub.f32	s4, s2, s10
 8019dd6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8019dda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dde:	bf14      	ite	ne
 8019de0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8019de4:	eeb0 7a67 	vmoveq.f32	s14, s15
 8019de8:	ee61 1a87 	vmul.f32	s3, s3, s14
 8019dec:	ee22 2a07 	vmul.f32	s4, s4, s14
 8019df0:	fb05 f204 	mul.w	r2, r5, r4
 8019df4:	1abf      	subs	r7, r7, r2
 8019df6:	4494      	add	ip, r2
 8019df8:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8019dfc:	4411      	add	r1, r2
 8019dfe:	eb09 020c 	add.w	r2, r9, ip
 8019e02:	b209      	sxth	r1, r1
 8019e04:	443a      	add	r2, r7
 8019e06:	428a      	cmp	r2, r1
 8019e08:	bfc4      	itt	gt
 8019e0a:	eba1 0209 	subgt.w	r2, r1, r9
 8019e0e:	eba2 070c 	subgt.w	r7, r2, ip
 8019e12:	2f00      	cmp	r7, #0
 8019e14:	dd50      	ble.n	8019eb8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8019e16:	fb97 f1f4 	sdiv	r1, r7, r4
 8019e1a:	fb04 7211 	mls	r2, r4, r1, r7
 8019e1e:	b90a      	cbnz	r2, 8019e24 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8019e20:	3901      	subs	r1, #1
 8019e22:	4622      	mov	r2, r4
 8019e24:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8019e28:	6840      	ldr	r0, [r0, #4]
 8019e2a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8019e2e:	44b6      	add	lr, r6
 8019e30:	f8d0 a000 	ldr.w	sl, [r0]
 8019e34:	2900      	cmp	r1, #0
 8019e36:	bfcc      	ite	gt
 8019e38:	46a1      	movgt	r9, r4
 8019e3a:	4691      	movle	r9, r2
 8019e3c:	900b      	str	r0, [sp, #44]	; 0x2c
 8019e3e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8019e40:	fb04 e505 	mla	r5, r4, r5, lr
 8019e44:	eef0 6a42 	vmov.f32	s13, s4
 8019e48:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8019e4c:	9008      	str	r0, [sp, #32]
 8019e4e:	eeb0 7a61 	vmov.f32	s14, s3
 8019e52:	9818      	ldr	r0, [sp, #96]	; 0x60
 8019e54:	695b      	ldr	r3, [r3, #20]
 8019e56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e5a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8019e5e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8019e62:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019e64:	445b      	add	r3, fp
 8019e66:	9307      	str	r3, [sp, #28]
 8019e68:	ee16 3a90 	vmov	r3, s13
 8019e6c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8019e70:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8019e74:	ee21 3a23 	vmul.f32	s6, s2, s7
 8019e78:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8019e7c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019e80:	ee17 7a90 	vmov	r7, s15
 8019e84:	ee73 7a42 	vsub.f32	s15, s6, s4
 8019e88:	fb97 f7f4 	sdiv	r7, r7, r4
 8019e8c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8019e90:	ee17 ca90 	vmov	ip, s15
 8019e94:	fb9c fcf4 	sdiv	ip, ip, r4
 8019e98:	fb0c 3306 	mla	r3, ip, r6, r3
 8019e9c:	9302      	str	r3, [sp, #8]
 8019e9e:	ee17 3a10 	vmov	r3, s14
 8019ea2:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8019ea6:	fb07 3706 	mla	r7, r7, r6, r3
 8019eaa:	eba9 0306 	sub.w	r3, r9, r6
 8019eae:	e9cd 4700 	strd	r4, r7, [sp]
 8019eb2:	f8da 4008 	ldr.w	r4, [sl, #8]
 8019eb6:	47a0      	blx	r4
 8019eb8:	b00d      	add	sp, #52	; 0x34
 8019eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ebe:	2500      	movs	r5, #0
 8019ec0:	462e      	mov	r6, r5
 8019ec2:	e799      	b.n	8019df8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08019ec4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8019ec4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ec8:	b0db      	sub	sp, #364	; 0x16c
 8019eca:	461d      	mov	r5, r3
 8019ecc:	4614      	mov	r4, r2
 8019ece:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8019ed2:	910f      	str	r1, [sp, #60]	; 0x3c
 8019ed4:	4629      	mov	r1, r5
 8019ed6:	930a      	str	r3, [sp, #40]	; 0x28
 8019ed8:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8019edc:	9009      	str	r0, [sp, #36]	; 0x24
 8019ede:	930b      	str	r3, [sp, #44]	; 0x2c
 8019ee0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8019ee4:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8019ee8:	9310      	str	r3, [sp, #64]	; 0x40
 8019eea:	6803      	ldr	r3, [r0, #0]
 8019eec:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8019eee:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8019ef2:	47b8      	blx	r7
 8019ef4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ef6:	6058      	str	r0, [r3, #4]
 8019ef8:	2800      	cmp	r0, #0
 8019efa:	f000 83a1 	beq.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019efe:	682b      	ldr	r3, [r5, #0]
 8019f00:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8019f04:	ed94 7a02 	vldr	s14, [r4, #8]
 8019f08:	9314      	str	r3, [sp, #80]	; 0x50
 8019f0a:	686b      	ldr	r3, [r5, #4]
 8019f0c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019f10:	9315      	str	r3, [sp, #84]	; 0x54
 8019f12:	4bc1      	ldr	r3, [pc, #772]	; (801a218 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8019f14:	7819      	ldrb	r1, [r3, #0]
 8019f16:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8019f1a:	2900      	cmp	r1, #0
 8019f1c:	bf16      	itet	ne
 8019f1e:	4619      	movne	r1, r3
 8019f20:	4611      	moveq	r1, r2
 8019f22:	4613      	movne	r3, r2
 8019f24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f28:	9116      	str	r1, [sp, #88]	; 0x58
 8019f2a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8019f2e:	f240 8387 	bls.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f32:	ed94 7a07 	vldr	s14, [r4, #28]
 8019f36:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019f3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f3e:	f240 837f 	bls.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f42:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8019f46:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8019f4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019f4e:	f240 8377 	bls.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f52:	6822      	ldr	r2, [r4, #0]
 8019f54:	4bb1      	ldr	r3, [pc, #708]	; (801a21c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8019f56:	429a      	cmp	r2, r3
 8019f58:	f2c0 8372 	blt.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f5c:	49b0      	ldr	r1, [pc, #704]	; (801a220 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8019f5e:	6963      	ldr	r3, [r4, #20]
 8019f60:	428a      	cmp	r2, r1
 8019f62:	f300 836d 	bgt.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f66:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8019f6a:	48ae      	ldr	r0, [pc, #696]	; (801a224 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8019f6c:	33ff      	adds	r3, #255	; 0xff
 8019f6e:	4283      	cmp	r3, r0
 8019f70:	f200 8366 	bhi.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f74:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8019f76:	4dac      	ldr	r5, [pc, #688]	; (801a228 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8019f78:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8019f7c:	33ff      	adds	r3, #255	; 0xff
 8019f7e:	42ab      	cmp	r3, r5
 8019f80:	f200 835e 	bhi.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f84:	6862      	ldr	r2, [r4, #4]
 8019f86:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8019f8a:	33ff      	adds	r3, #255	; 0xff
 8019f8c:	4283      	cmp	r3, r0
 8019f8e:	f200 8357 	bhi.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019f92:	69a1      	ldr	r1, [r4, #24]
 8019f94:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8019f98:	33ff      	adds	r3, #255	; 0xff
 8019f9a:	4283      	cmp	r3, r0
 8019f9c:	f200 8350 	bhi.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019fa0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8019fa2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8019fa6:	30ff      	adds	r0, #255	; 0xff
 8019fa8:	42a8      	cmp	r0, r5
 8019faa:	f200 8349 	bhi.w	801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8019fae:	428a      	cmp	r2, r1
 8019fb0:	f280 8110 	bge.w	801a1d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8019fb4:	429a      	cmp	r2, r3
 8019fb6:	f300 8119 	bgt.w	801a1ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8019fba:	4299      	cmp	r1, r3
 8019fbc:	f280 811d 	bge.w	801a1fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8019fc0:	2502      	movs	r5, #2
 8019fc2:	2701      	movs	r7, #1
 8019fc4:	46a9      	mov	r9, r5
 8019fc6:	46b8      	mov	r8, r7
 8019fc8:	f04f 0a00 	mov.w	sl, #0
 8019fcc:	4621      	mov	r1, r4
 8019fce:	a849      	add	r0, sp, #292	; 0x124
 8019fd0:	f003 fcea 	bl	801d9a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8019fd4:	4622      	mov	r2, r4
 8019fd6:	4653      	mov	r3, sl
 8019fd8:	a949      	add	r1, sp, #292	; 0x124
 8019fda:	f8cd 9000 	str.w	r9, [sp]
 8019fde:	a819      	add	r0, sp, #100	; 0x64
 8019fe0:	f003 fe12 	bl	801dc08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019fe4:	4622      	mov	r2, r4
 8019fe6:	4653      	mov	r3, sl
 8019fe8:	a949      	add	r1, sp, #292	; 0x124
 8019fea:	f8cd 8000 	str.w	r8, [sp]
 8019fee:	a829      	add	r0, sp, #164	; 0xa4
 8019ff0:	f003 fe0a 	bl	801dc08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8019ff4:	4643      	mov	r3, r8
 8019ff6:	4622      	mov	r2, r4
 8019ff8:	a949      	add	r1, sp, #292	; 0x124
 8019ffa:	f8cd 9000 	str.w	r9, [sp]
 8019ffe:	a839      	add	r0, sp, #228	; 0xe4
 801a000:	f003 fe02 	bl	801dc08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801a004:	42af      	cmp	r7, r5
 801a006:	af12      	add	r7, sp, #72	; 0x48
 801a008:	bfb7      	itett	lt
 801a00a:	2300      	movlt	r3, #0
 801a00c:	2301      	movge	r3, #1
 801a00e:	ad29      	addlt	r5, sp, #164	; 0xa4
 801a010:	ac19      	addlt	r4, sp, #100	; 0x64
 801a012:	bfb1      	iteee	lt
 801a014:	930e      	strlt	r3, [sp, #56]	; 0x38
 801a016:	ad19      	addge	r5, sp, #100	; 0x64
 801a018:	930e      	strge	r3, [sp, #56]	; 0x38
 801a01a:	ac29      	addge	r4, sp, #164	; 0xa4
 801a01c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a01e:	e893 0003 	ldmia.w	r3, {r0, r1}
 801a022:	e887 0003 	stmia.w	r7, {r0, r1}
 801a026:	b928      	cbnz	r0, 801a034 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801a028:	4b80      	ldr	r3, [pc, #512]	; (801a22c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801a02a:	6818      	ldr	r0, [r3, #0]
 801a02c:	6803      	ldr	r3, [r0, #0]
 801a02e:	6a1b      	ldr	r3, [r3, #32]
 801a030:	4798      	blx	r3
 801a032:	6038      	str	r0, [r7, #0]
 801a034:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801a036:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801a03a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a03e:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801a040:	930c      	str	r3, [sp, #48]	; 0x30
 801a042:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a044:	6963      	ldr	r3, [r4, #20]
 801a046:	440b      	add	r3, r1
 801a048:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801a04c:	4408      	add	r0, r1
 801a04e:	b200      	sxth	r0, r0
 801a050:	4283      	cmp	r3, r0
 801a052:	900d      	str	r0, [sp, #52]	; 0x34
 801a054:	f280 80dd 	bge.w	801a212 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801a058:	428b      	cmp	r3, r1
 801a05a:	da08      	bge.n	801a06e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801a05c:	2a00      	cmp	r2, #0
 801a05e:	dd06      	ble.n	801a06e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801a060:	1acb      	subs	r3, r1, r3
 801a062:	429a      	cmp	r2, r3
 801a064:	f2c0 80e4 	blt.w	801a230 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801a068:	2b00      	cmp	r3, #0
 801a06a:	f300 80e2 	bgt.w	801a232 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801a06e:	6967      	ldr	r7, [r4, #20]
 801a070:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801a074:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a076:	443b      	add	r3, r7
 801a078:	461f      	mov	r7, r3
 801a07a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a07c:	1bdf      	subs	r7, r3, r7
 801a07e:	4297      	cmp	r7, r2
 801a080:	bfa8      	it	ge
 801a082:	4617      	movge	r7, r2
 801a084:	2f00      	cmp	r7, #0
 801a086:	f340 8166 	ble.w	801a356 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801a08a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801a08c:	6829      	ldr	r1, [r5, #0]
 801a08e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a092:	f9bb 3000 	ldrsh.w	r3, [fp]
 801a096:	4411      	add	r1, r2
 801a098:	6820      	ldr	r0, [r4, #0]
 801a09a:	4299      	cmp	r1, r3
 801a09c:	dd1a      	ble.n	801a0d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801a09e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801a0a2:	4402      	add	r2, r0
 801a0a4:	440b      	add	r3, r1
 801a0a6:	b21b      	sxth	r3, r3
 801a0a8:	429a      	cmp	r2, r3
 801a0aa:	dc13      	bgt.n	801a0d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801a0ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a0ae:	a912      	add	r1, sp, #72	; 0x48
 801a0b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0b2:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a0b4:	681b      	ldr	r3, [r3, #0]
 801a0b6:	9206      	str	r2, [sp, #24]
 801a0b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a0ba:	9500      	str	r5, [sp, #0]
 801a0bc:	9205      	str	r2, [sp, #20]
 801a0be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a0c0:	e9cd b203 	strd	fp, r2, [sp, #12]
 801a0c4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801a0c6:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801a0ca:	aa49      	add	r2, sp, #292	; 0x124
 801a0cc:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
 801a0d0:	4623      	mov	r3, r4
 801a0d2:	47c8      	blx	r9
 801a0d4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801a0d8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801a0dc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801a0e0:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a0e4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801a0e8:	68a1      	ldr	r1, [r4, #8]
 801a0ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a0ee:	ed94 6a08 	vldr	s12, [r4, #32]
 801a0f2:	edd4 6a07 	vldr	s13, [r4, #28]
 801a0f6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801a0fa:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a0fe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801a102:	e9d4 2300 	ldrd	r2, r3, [r4]
 801a106:	edc4 6a07 	vstr	s13, [r4, #28]
 801a10a:	441a      	add	r2, r3
 801a10c:	6963      	ldr	r3, [r4, #20]
 801a10e:	3301      	adds	r3, #1
 801a110:	6022      	str	r2, [r4, #0]
 801a112:	6163      	str	r3, [r4, #20]
 801a114:	69a3      	ldr	r3, [r4, #24]
 801a116:	3b01      	subs	r3, #1
 801a118:	61a3      	str	r3, [r4, #24]
 801a11a:	6923      	ldr	r3, [r4, #16]
 801a11c:	440b      	add	r3, r1
 801a11e:	68e1      	ldr	r1, [r4, #12]
 801a120:	428b      	cmp	r3, r1
 801a122:	6123      	str	r3, [r4, #16]
 801a124:	db15      	blt.n	801a152 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801a126:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801a12a:	3201      	adds	r2, #1
 801a12c:	1a5b      	subs	r3, r3, r1
 801a12e:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a132:	6022      	str	r2, [r4, #0]
 801a134:	6123      	str	r3, [r4, #16]
 801a136:	edc4 6a07 	vstr	s13, [r4, #28]
 801a13a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801a13e:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a142:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801a146:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801a14a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a14e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801a152:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801a156:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801a15a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801a15e:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a162:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801a166:	68a9      	ldr	r1, [r5, #8]
 801a168:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a16c:	ed95 6a08 	vldr	s12, [r5, #32]
 801a170:	edd5 6a07 	vldr	s13, [r5, #28]
 801a174:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801a178:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a17c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801a180:	e9d5 2300 	ldrd	r2, r3, [r5]
 801a184:	edc5 6a07 	vstr	s13, [r5, #28]
 801a188:	441a      	add	r2, r3
 801a18a:	696b      	ldr	r3, [r5, #20]
 801a18c:	3301      	adds	r3, #1
 801a18e:	602a      	str	r2, [r5, #0]
 801a190:	616b      	str	r3, [r5, #20]
 801a192:	69ab      	ldr	r3, [r5, #24]
 801a194:	3b01      	subs	r3, #1
 801a196:	61ab      	str	r3, [r5, #24]
 801a198:	692b      	ldr	r3, [r5, #16]
 801a19a:	440b      	add	r3, r1
 801a19c:	68e9      	ldr	r1, [r5, #12]
 801a19e:	428b      	cmp	r3, r1
 801a1a0:	612b      	str	r3, [r5, #16]
 801a1a2:	db15      	blt.n	801a1d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801a1a4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801a1a8:	3201      	adds	r2, #1
 801a1aa:	1a5b      	subs	r3, r3, r1
 801a1ac:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a1b0:	602a      	str	r2, [r5, #0]
 801a1b2:	612b      	str	r3, [r5, #16]
 801a1b4:	edc5 6a07 	vstr	s13, [r5, #28]
 801a1b8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801a1bc:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a1c0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801a1c4:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801a1c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a1cc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801a1d0:	3f01      	subs	r7, #1
 801a1d2:	e757      	b.n	801a084 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801a1d4:	4299      	cmp	r1, r3
 801a1d6:	dc13      	bgt.n	801a200 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801a1d8:	429a      	cmp	r2, r3
 801a1da:	da14      	bge.n	801a206 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801a1dc:	2502      	movs	r5, #2
 801a1de:	2703      	movs	r7, #3
 801a1e0:	f04f 0800 	mov.w	r8, #0
 801a1e4:	46a9      	mov	r9, r5
 801a1e6:	f04f 0a01 	mov.w	sl, #1
 801a1ea:	e6ef      	b.n	8019fcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801a1ec:	2501      	movs	r5, #1
 801a1ee:	2700      	movs	r7, #0
 801a1f0:	46a9      	mov	r9, r5
 801a1f2:	46b8      	mov	r8, r7
 801a1f4:	f04f 0a02 	mov.w	sl, #2
 801a1f8:	e6e8      	b.n	8019fcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801a1fa:	2501      	movs	r5, #1
 801a1fc:	2702      	movs	r7, #2
 801a1fe:	e6e1      	b.n	8019fc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801a200:	2500      	movs	r5, #0
 801a202:	2701      	movs	r7, #1
 801a204:	e7f4      	b.n	801a1f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801a206:	2702      	movs	r7, #2
 801a208:	2503      	movs	r5, #3
 801a20a:	f04f 0900 	mov.w	r9, #0
 801a20e:	46b8      	mov	r8, r7
 801a210:	e7e9      	b.n	801a1e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801a212:	4613      	mov	r3, r2
 801a214:	e728      	b.n	801a068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801a216:	bf00      	nop
 801a218:	2000415e 	.word	0x2000415e
 801a21c:	fffd8f01 	.word	0xfffd8f01
 801a220:	00027100 	.word	0x00027100
 801a224:	0004e1ff 	.word	0x0004e1ff
 801a228:	0004e1fe 	.word	0x0004e1fe
 801a22c:	20004168 	.word	0x20004168
 801a230:	4613      	mov	r3, r2
 801a232:	992b      	ldr	r1, [sp, #172]	; 0xac
 801a234:	469e      	mov	lr, r3
 801a236:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801a238:	469c      	mov	ip, r3
 801a23a:	9111      	str	r1, [sp, #68]	; 0x44
 801a23c:	f04f 0900 	mov.w	r9, #0
 801a240:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801a244:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801a248:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 801a24c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801a250:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801a254:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801a258:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 801a25c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801a260:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801a264:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801a268:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801a26c:	f1bc 0f00 	cmp.w	ip, #0
 801a270:	d147      	bne.n	801a302 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801a272:	eb03 0c07 	add.w	ip, r3, r7
 801a276:	1ad7      	subs	r7, r2, r3
 801a278:	f1b9 0f00 	cmp.w	r9, #0
 801a27c:	d009      	beq.n	801a292 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801a27e:	9029      	str	r0, [sp, #164]	; 0xa4
 801a280:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 801a284:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801a288:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801a28c:	912d      	str	r1, [sp, #180]	; 0xb4
 801a28e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801a292:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801a294:	f04f 0800 	mov.w	r8, #0
 801a298:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801a29c:	9111      	str	r1, [sp, #68]	; 0x44
 801a29e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801a2a2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801a2a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801a2aa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801a2ae:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801a2b2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801a2b6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801a2ba:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801a2be:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801a2c2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801a2c6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801a2ca:	f1be 0f00 	cmp.w	lr, #0
 801a2ce:	d031      	beq.n	801a334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801a2d0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801a2d2:	4450      	add	r0, sl
 801a2d4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801a2d8:	4431      	add	r1, r6
 801a2da:	ee37 7a04 	vadd.f32	s14, s14, s8
 801a2de:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801a2e2:	4549      	cmp	r1, r9
 801a2e4:	db08      	blt.n	801a2f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801a2e6:	ee77 7a85 	vadd.f32	s15, s15, s10
 801a2ea:	3001      	adds	r0, #1
 801a2ec:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801a2f0:	eba1 0109 	sub.w	r1, r1, r9
 801a2f4:	ee37 7a06 	vadd.f32	s14, s14, s12
 801a2f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a2fc:	f04f 0801 	mov.w	r8, #1
 801a300:	e7e3      	b.n	801a2ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801a302:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801a304:	4450      	add	r0, sl
 801a306:	ee37 7a24 	vadd.f32	s14, s14, s9
 801a30a:	4431      	add	r1, r6
 801a30c:	ee77 7a84 	vadd.f32	s15, s15, s8
 801a310:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801a314:	4541      	cmp	r1, r8
 801a316:	db08      	blt.n	801a32a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801a318:	ee76 6a85 	vadd.f32	s13, s13, s10
 801a31c:	3001      	adds	r0, #1
 801a31e:	ee37 7a25 	vadd.f32	s14, s14, s11
 801a322:	eba1 0108 	sub.w	r1, r1, r8
 801a326:	ee77 7a86 	vadd.f32	s15, s15, s12
 801a32a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801a32e:	f04f 0901 	mov.w	r9, #1
 801a332:	e79b      	b.n	801a26c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801a334:	449c      	add	ip, r3
 801a336:	1aff      	subs	r7, r7, r3
 801a338:	f1b8 0f00 	cmp.w	r8, #0
 801a33c:	d009      	beq.n	801a352 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801a33e:	9019      	str	r0, [sp, #100]	; 0x64
 801a340:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801a344:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801a348:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801a34c:	911d      	str	r1, [sp, #116]	; 0x74
 801a34e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801a352:	1ad2      	subs	r2, r2, r3
 801a354:	e68b      	b.n	801a06e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801a356:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a358:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801a35a:	2b00      	cmp	r3, #0
 801a35c:	f000 80d1 	beq.w	801a502 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801a360:	ad19      	add	r5, sp, #100	; 0x64
 801a362:	ac39      	add	r4, sp, #228	; 0xe4
 801a364:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801a366:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801a36a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a36e:	930c      	str	r3, [sp, #48]	; 0x30
 801a370:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a372:	6963      	ldr	r3, [r4, #20]
 801a374:	440b      	add	r3, r1
 801a376:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801a37a:	4408      	add	r0, r1
 801a37c:	b200      	sxth	r0, r0
 801a37e:	4283      	cmp	r3, r0
 801a380:	900d      	str	r0, [sp, #52]	; 0x34
 801a382:	f280 80c1 	bge.w	801a508 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801a386:	428b      	cmp	r3, r1
 801a388:	da08      	bge.n	801a39c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a38a:	2a00      	cmp	r2, #0
 801a38c:	dd06      	ble.n	801a39c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a38e:	1acb      	subs	r3, r1, r3
 801a390:	429a      	cmp	r2, r3
 801a392:	f2c0 80bb 	blt.w	801a50c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801a396:	2b00      	cmp	r3, #0
 801a398:	f300 80b9 	bgt.w	801a50e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801a39c:	6967      	ldr	r7, [r4, #20]
 801a39e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801a3a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a3a4:	443b      	add	r3, r7
 801a3a6:	461f      	mov	r7, r3
 801a3a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a3aa:	1bdf      	subs	r7, r3, r7
 801a3ac:	4297      	cmp	r7, r2
 801a3ae:	bfa8      	it	ge
 801a3b0:	4617      	movge	r7, r2
 801a3b2:	2f00      	cmp	r7, #0
 801a3b4:	f340 813c 	ble.w	801a630 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801a3b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801a3ba:	6829      	ldr	r1, [r5, #0]
 801a3bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a3c0:	f9bb 3000 	ldrsh.w	r3, [fp]
 801a3c4:	4411      	add	r1, r2
 801a3c6:	6820      	ldr	r0, [r4, #0]
 801a3c8:	4299      	cmp	r1, r3
 801a3ca:	dd1a      	ble.n	801a402 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801a3cc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801a3d0:	4402      	add	r2, r0
 801a3d2:	440b      	add	r3, r1
 801a3d4:	b21b      	sxth	r3, r3
 801a3d6:	429a      	cmp	r2, r3
 801a3d8:	dc13      	bgt.n	801a402 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801a3da:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a3dc:	a912      	add	r1, sp, #72	; 0x48
 801a3de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a3e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a3e2:	681b      	ldr	r3, [r3, #0]
 801a3e4:	9206      	str	r2, [sp, #24]
 801a3e6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a3e8:	9500      	str	r5, [sp, #0]
 801a3ea:	9205      	str	r2, [sp, #20]
 801a3ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a3ee:	e9cd b203 	strd	fp, r2, [sp, #12]
 801a3f2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801a3f4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801a3f8:	aa49      	add	r2, sp, #292	; 0x124
 801a3fa:	f8d3 9044 	ldr.w	r9, [r3, #68]	; 0x44
 801a3fe:	4623      	mov	r3, r4
 801a400:	47c8      	blx	r9
 801a402:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801a406:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801a40a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801a40e:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a412:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801a416:	68a1      	ldr	r1, [r4, #8]
 801a418:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a41c:	ed94 6a08 	vldr	s12, [r4, #32]
 801a420:	edd4 6a07 	vldr	s13, [r4, #28]
 801a424:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801a428:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a42c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801a430:	e9d4 2300 	ldrd	r2, r3, [r4]
 801a434:	edc4 6a07 	vstr	s13, [r4, #28]
 801a438:	441a      	add	r2, r3
 801a43a:	6963      	ldr	r3, [r4, #20]
 801a43c:	3301      	adds	r3, #1
 801a43e:	6022      	str	r2, [r4, #0]
 801a440:	6163      	str	r3, [r4, #20]
 801a442:	69a3      	ldr	r3, [r4, #24]
 801a444:	3b01      	subs	r3, #1
 801a446:	61a3      	str	r3, [r4, #24]
 801a448:	6923      	ldr	r3, [r4, #16]
 801a44a:	440b      	add	r3, r1
 801a44c:	68e1      	ldr	r1, [r4, #12]
 801a44e:	428b      	cmp	r3, r1
 801a450:	6123      	str	r3, [r4, #16]
 801a452:	db15      	blt.n	801a480 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801a454:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801a458:	3201      	adds	r2, #1
 801a45a:	1a5b      	subs	r3, r3, r1
 801a45c:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a460:	6022      	str	r2, [r4, #0]
 801a462:	6123      	str	r3, [r4, #16]
 801a464:	edc4 6a07 	vstr	s13, [r4, #28]
 801a468:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801a46c:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a470:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801a474:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801a478:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a47c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801a480:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801a484:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801a488:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801a48c:	ee37 7a27 	vadd.f32	s14, s14, s15
 801a490:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801a494:	68a9      	ldr	r1, [r5, #8]
 801a496:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801a49a:	ed95 6a08 	vldr	s12, [r5, #32]
 801a49e:	edd5 6a07 	vldr	s13, [r5, #28]
 801a4a2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801a4a6:	ee76 6a86 	vadd.f32	s13, s13, s12
 801a4aa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801a4ae:	e9d5 2300 	ldrd	r2, r3, [r5]
 801a4b2:	edc5 6a07 	vstr	s13, [r5, #28]
 801a4b6:	441a      	add	r2, r3
 801a4b8:	696b      	ldr	r3, [r5, #20]
 801a4ba:	3301      	adds	r3, #1
 801a4bc:	602a      	str	r2, [r5, #0]
 801a4be:	616b      	str	r3, [r5, #20]
 801a4c0:	69ab      	ldr	r3, [r5, #24]
 801a4c2:	3b01      	subs	r3, #1
 801a4c4:	61ab      	str	r3, [r5, #24]
 801a4c6:	692b      	ldr	r3, [r5, #16]
 801a4c8:	440b      	add	r3, r1
 801a4ca:	68e9      	ldr	r1, [r5, #12]
 801a4cc:	428b      	cmp	r3, r1
 801a4ce:	612b      	str	r3, [r5, #16]
 801a4d0:	db15      	blt.n	801a4fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801a4d2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801a4d6:	3201      	adds	r2, #1
 801a4d8:	1a5b      	subs	r3, r3, r1
 801a4da:	ee76 6a26 	vadd.f32	s13, s12, s13
 801a4de:	602a      	str	r2, [r5, #0]
 801a4e0:	612b      	str	r3, [r5, #16]
 801a4e2:	edc5 6a07 	vstr	s13, [r5, #28]
 801a4e6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801a4ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 801a4ee:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801a4f2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801a4f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 801a4fa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801a4fe:	3f01      	subs	r7, #1
 801a500:	e757      	b.n	801a3b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801a502:	ad39      	add	r5, sp, #228	; 0xe4
 801a504:	ac19      	add	r4, sp, #100	; 0x64
 801a506:	e72d      	b.n	801a364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801a508:	4613      	mov	r3, r2
 801a50a:	e744      	b.n	801a396 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801a50c:	4613      	mov	r3, r2
 801a50e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801a510:	469e      	mov	lr, r3
 801a512:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 801a516:	461f      	mov	r7, r3
 801a518:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801a51c:	f04f 0900 	mov.w	r9, #0
 801a520:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801a524:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801a528:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 801a52c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801a530:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801a534:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801a536:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801a53a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801a53e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801a542:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801a546:	960e      	str	r6, [sp, #56]	; 0x38
 801a548:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801a54c:	2f00      	cmp	r7, #0
 801a54e:	d146      	bne.n	801a5de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801a550:	449c      	add	ip, r3
 801a552:	1ad7      	subs	r7, r2, r3
 801a554:	f1b9 0f00 	cmp.w	r9, #0
 801a558:	d009      	beq.n	801a56e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801a55a:	9039      	str	r0, [sp, #228]	; 0xe4
 801a55c:	913d      	str	r1, [sp, #244]	; 0xf4
 801a55e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801a562:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801a566:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801a56a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801a56e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801a570:	f04f 0800 	mov.w	r8, #0
 801a574:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801a578:	910e      	str	r1, [sp, #56]	; 0x38
 801a57a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801a57e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801a582:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801a586:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801a58a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801a58e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801a592:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801a596:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801a59a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801a59e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801a5a2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801a5a6:	f1be 0f00 	cmp.w	lr, #0
 801a5aa:	d030      	beq.n	801a60e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801a5ac:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801a5ae:	4450      	add	r0, sl
 801a5b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801a5b4:	4431      	add	r1, r6
 801a5b6:	ee37 7a04 	vadd.f32	s14, s14, s8
 801a5ba:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801a5be:	4549      	cmp	r1, r9
 801a5c0:	db08      	blt.n	801a5d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801a5c2:	ee77 7a85 	vadd.f32	s15, s15, s10
 801a5c6:	3001      	adds	r0, #1
 801a5c8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801a5cc:	eba1 0109 	sub.w	r1, r1, r9
 801a5d0:	ee37 7a06 	vadd.f32	s14, s14, s12
 801a5d4:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a5d8:	f04f 0801 	mov.w	r8, #1
 801a5dc:	e7e3      	b.n	801a5a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801a5de:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801a5e0:	4450      	add	r0, sl
 801a5e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 801a5e6:	4431      	add	r1, r6
 801a5e8:	ee77 7a84 	vadd.f32	s15, s15, s8
 801a5ec:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801a5f0:	4541      	cmp	r1, r8
 801a5f2:	db08      	blt.n	801a606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801a5f4:	ee76 6a85 	vadd.f32	s13, s13, s10
 801a5f8:	3001      	adds	r0, #1
 801a5fa:	ee37 7a25 	vadd.f32	s14, s14, s11
 801a5fe:	eba1 0108 	sub.w	r1, r1, r8
 801a602:	ee77 7a86 	vadd.f32	s15, s15, s12
 801a606:	3f01      	subs	r7, #1
 801a608:	f04f 0901 	mov.w	r9, #1
 801a60c:	e79e      	b.n	801a54c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801a60e:	449c      	add	ip, r3
 801a610:	1aff      	subs	r7, r7, r3
 801a612:	f1b8 0f00 	cmp.w	r8, #0
 801a616:	d009      	beq.n	801a62c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 801a618:	9019      	str	r0, [sp, #100]	; 0x64
 801a61a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801a61e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801a622:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801a626:	911d      	str	r1, [sp, #116]	; 0x74
 801a628:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801a62c:	1ad2      	subs	r2, r2, r3
 801a62e:	e6b5      	b.n	801a39c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801a630:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a632:	681b      	ldr	r3, [r3, #0]
 801a634:	b923      	cbnz	r3, 801a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801a636:	4b04      	ldr	r3, [pc, #16]	; (801a648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801a638:	6818      	ldr	r0, [r3, #0]
 801a63a:	6803      	ldr	r3, [r0, #0]
 801a63c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801a63e:	4798      	blx	r3
 801a640:	b05b      	add	sp, #364	; 0x16c
 801a642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a646:	bf00      	nop
 801a648:	20004168 	.word	0x20004168

0801a64c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 801a64c:	b570      	push	{r4, r5, r6, lr}
 801a64e:	4604      	mov	r4, r0
 801a650:	2500      	movs	r5, #0
 801a652:	9804      	ldr	r0, [sp, #16]
 801a654:	7223      	strb	r3, [r4, #8]
 801a656:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801a65a:	8025      	strh	r5, [r4, #0]
 801a65c:	6061      	str	r1, [r4, #4]
 801a65e:	7263      	strb	r3, [r4, #9]
 801a660:	60e0      	str	r0, [r4, #12]
 801a662:	8222      	strh	r2, [r4, #16]
 801a664:	8265      	strh	r5, [r4, #18]
 801a666:	82a5      	strh	r5, [r4, #20]
 801a668:	82e5      	strh	r5, [r4, #22]
 801a66a:	8325      	strh	r5, [r4, #24]
 801a66c:	8365      	strh	r5, [r4, #26]
 801a66e:	83a5      	strh	r5, [r4, #28]
 801a670:	77a5      	strb	r5, [r4, #30]
 801a672:	6803      	ldr	r3, [r0, #0]
 801a674:	695b      	ldr	r3, [r3, #20]
 801a676:	4798      	blx	r3
 801a678:	4606      	mov	r6, r0
 801a67a:	b1f8      	cbz	r0, 801a6bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 801a67c:	68e0      	ldr	r0, [r4, #12]
 801a67e:	4631      	mov	r1, r6
 801a680:	6803      	ldr	r3, [r0, #0]
 801a682:	68db      	ldr	r3, [r3, #12]
 801a684:	4798      	blx	r3
 801a686:	7b43      	ldrb	r3, [r0, #13]
 801a688:	7a82      	ldrb	r2, [r0, #10]
 801a68a:	4605      	mov	r5, r0
 801a68c:	005b      	lsls	r3, r3, #1
 801a68e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801a692:	4313      	orrs	r3, r2
 801a694:	83a3      	strh	r3, [r4, #28]
 801a696:	7a63      	ldrb	r3, [r4, #9]
 801a698:	2b04      	cmp	r3, #4
 801a69a:	d10f      	bne.n	801a6bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x70>
 801a69c:	68e0      	ldr	r0, [r4, #12]
 801a69e:	462a      	mov	r2, r5
 801a6a0:	4631      	mov	r1, r6
 801a6a2:	6803      	ldr	r3, [r0, #0]
 801a6a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a6a6:	4798      	blx	r3
 801a6a8:	7b6b      	ldrb	r3, [r5, #13]
 801a6aa:	005b      	lsls	r3, r3, #1
 801a6ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a6b0:	7aab      	ldrb	r3, [r5, #10]
 801a6b2:	4313      	orrs	r3, r2
 801a6b4:	4418      	add	r0, r3
 801a6b6:	8ba3      	ldrh	r3, [r4, #28]
 801a6b8:	4418      	add	r0, r3
 801a6ba:	83a0      	strh	r0, [r4, #28]
 801a6bc:	4620      	mov	r0, r4
 801a6be:	bd70      	pop	{r4, r5, r6, pc}

0801a6c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801a6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6c4:	2400      	movs	r4, #0
 801a6c6:	b085      	sub	sp, #20
 801a6c8:	4681      	mov	r9, r0
 801a6ca:	4688      	mov	r8, r1
 801a6cc:	4692      	mov	sl, r2
 801a6ce:	469b      	mov	fp, r3
 801a6d0:	4627      	mov	r7, r4
 801a6d2:	4625      	mov	r5, r4
 801a6d4:	4626      	mov	r6, r4
 801a6d6:	4554      	cmp	r4, sl
 801a6d8:	da2a      	bge.n	801a730 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a6da:	2300      	movs	r3, #0
 801a6dc:	9303      	str	r3, [sp, #12]
 801a6de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a6e2:	429d      	cmp	r5, r3
 801a6e4:	d004      	beq.n	801a6f0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801a6e6:	f242 030b 	movw	r3, #8203	; 0x200b
 801a6ea:	429d      	cmp	r5, r3
 801a6ec:	bf18      	it	ne
 801a6ee:	462f      	movne	r7, r5
 801a6f0:	ab03      	add	r3, sp, #12
 801a6f2:	4642      	mov	r2, r8
 801a6f4:	4659      	mov	r1, fp
 801a6f6:	4648      	mov	r0, r9
 801a6f8:	f002 fedc 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801a6fc:	4605      	mov	r5, r0
 801a6fe:	b1b8      	cbz	r0, 801a730 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a700:	280a      	cmp	r0, #10
 801a702:	d015      	beq.n	801a730 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801a704:	9a03      	ldr	r2, [sp, #12]
 801a706:	b18a      	cbz	r2, 801a72c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801a708:	7b50      	ldrb	r0, [r2, #13]
 801a70a:	4639      	mov	r1, r7
 801a70c:	7a93      	ldrb	r3, [r2, #10]
 801a70e:	0040      	lsls	r0, r0, #1
 801a710:	8895      	ldrh	r5, [r2, #4]
 801a712:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801a716:	4303      	orrs	r3, r0
 801a718:	4640      	mov	r0, r8
 801a71a:	9301      	str	r3, [sp, #4]
 801a71c:	f8d8 3000 	ldr.w	r3, [r8]
 801a720:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a722:	4798      	blx	r3
 801a724:	9b01      	ldr	r3, [sp, #4]
 801a726:	4418      	add	r0, r3
 801a728:	4406      	add	r6, r0
 801a72a:	b2b6      	uxth	r6, r6
 801a72c:	3401      	adds	r4, #1
 801a72e:	e7d2      	b.n	801a6d6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801a730:	4630      	mov	r0, r6
 801a732:	b005      	add	sp, #20
 801a734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a738 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801a738:	2a02      	cmp	r2, #2
 801a73a:	b530      	push	{r4, r5, lr}
 801a73c:	d011      	beq.n	801a762 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801a73e:	2a03      	cmp	r2, #3
 801a740:	d01c      	beq.n	801a77c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801a742:	2a01      	cmp	r2, #1
 801a744:	d10c      	bne.n	801a760 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801a746:	888b      	ldrh	r3, [r1, #4]
 801a748:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801a74c:	8801      	ldrh	r1, [r0, #0]
 801a74e:	1a9b      	subs	r3, r3, r2
 801a750:	8844      	ldrh	r4, [r0, #2]
 801a752:	1a5b      	subs	r3, r3, r1
 801a754:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801a758:	8004      	strh	r4, [r0, #0]
 801a75a:	8043      	strh	r3, [r0, #2]
 801a75c:	8081      	strh	r1, [r0, #4]
 801a75e:	80c2      	strh	r2, [r0, #6]
 801a760:	bd30      	pop	{r4, r5, pc}
 801a762:	88cb      	ldrh	r3, [r1, #6]
 801a764:	88c2      	ldrh	r2, [r0, #6]
 801a766:	1a9b      	subs	r3, r3, r2
 801a768:	8842      	ldrh	r2, [r0, #2]
 801a76a:	1a9b      	subs	r3, r3, r2
 801a76c:	888a      	ldrh	r2, [r1, #4]
 801a76e:	8881      	ldrh	r1, [r0, #4]
 801a770:	8043      	strh	r3, [r0, #2]
 801a772:	1a52      	subs	r2, r2, r1
 801a774:	8801      	ldrh	r1, [r0, #0]
 801a776:	1a52      	subs	r2, r2, r1
 801a778:	8002      	strh	r2, [r0, #0]
 801a77a:	e7f1      	b.n	801a760 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801a77c:	88cb      	ldrh	r3, [r1, #6]
 801a77e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801a782:	8841      	ldrh	r1, [r0, #2]
 801a784:	1a9b      	subs	r3, r3, r2
 801a786:	f9b0 5000 	ldrsh.w	r5, [r0]
 801a78a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801a78e:	1a5b      	subs	r3, r3, r1
 801a790:	8045      	strh	r5, [r0, #2]
 801a792:	8082      	strh	r2, [r0, #4]
 801a794:	8003      	strh	r3, [r0, #0]
 801a796:	80c4      	strh	r4, [r0, #6]
 801a798:	e7e2      	b.n	801a760 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801a79a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801a79a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a79e:	b09f      	sub	sp, #124	; 0x7c
 801a7a0:	9116      	str	r1, [sp, #88]	; 0x58
 801a7a2:	9317      	str	r3, [sp, #92]	; 0x5c
 801a7a4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a7a6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a7a8:	8809      	ldrh	r1, [r1, #0]
 801a7aa:	889b      	ldrh	r3, [r3, #4]
 801a7ac:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801a7b0:	440b      	add	r3, r1
 801a7b2:	9212      	str	r2, [sp, #72]	; 0x48
 801a7b4:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801a7b8:	b21b      	sxth	r3, r3
 801a7ba:	9011      	str	r0, [sp, #68]	; 0x44
 801a7bc:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801a7c0:	9310      	str	r3, [sp, #64]	; 0x40
 801a7c2:	f8d8 3000 	ldr.w	r3, [r8]
 801a7c6:	7a59      	ldrb	r1, [r3, #9]
 801a7c8:	7a1b      	ldrb	r3, [r3, #8]
 801a7ca:	9114      	str	r1, [sp, #80]	; 0x50
 801a7cc:	9315      	str	r3, [sp, #84]	; 0x54
 801a7ce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801a7d0:	f9b3 5000 	ldrsh.w	r5, [r3]
 801a7d4:	2a00      	cmp	r2, #0
 801a7d6:	d067      	beq.n	801a8a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x10e>
 801a7d8:	f898 3010 	ldrb.w	r3, [r8, #16]
 801a7dc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801a7de:	2b04      	cmp	r3, #4
 801a7e0:	bf14      	ite	ne
 801a7e2:	2301      	movne	r3, #1
 801a7e4:	2302      	moveq	r3, #2
 801a7e6:	4413      	add	r3, r2
 801a7e8:	f04f 0900 	mov.w	r9, #0
 801a7ec:	930f      	str	r3, [sp, #60]	; 0x3c
 801a7ee:	464c      	mov	r4, r9
 801a7f0:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801a7f4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801a7f8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801a7fc:	4293      	cmp	r3, r2
 801a7fe:	f280 808c 	bge.w	801a91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801a802:	2300      	movs	r3, #0
 801a804:	931c      	str	r3, [sp, #112]	; 0x70
 801a806:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a80a:	429c      	cmp	r4, r3
 801a80c:	d006      	beq.n	801a81c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x82>
 801a80e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a810:	f242 020b 	movw	r2, #8203	; 0x200b
 801a814:	4294      	cmp	r4, r2
 801a816:	bf18      	it	ne
 801a818:	4623      	movne	r3, r4
 801a81a:	930d      	str	r3, [sp, #52]	; 0x34
 801a81c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a81e:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801a820:	f8d8 2000 	ldr.w	r2, [r8]
 801a824:	428b      	cmp	r3, r1
 801a826:	db41      	blt.n	801a8ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801a828:	6813      	ldr	r3, [r2, #0]
 801a82a:	4610      	mov	r0, r2
 801a82c:	695b      	ldr	r3, [r3, #20]
 801a82e:	4798      	blx	r3
 801a830:	4604      	mov	r4, r0
 801a832:	f8d8 0000 	ldr.w	r0, [r8]
 801a836:	aa1d      	add	r2, sp, #116	; 0x74
 801a838:	4621      	mov	r1, r4
 801a83a:	6803      	ldr	r3, [r0, #0]
 801a83c:	689e      	ldr	r6, [r3, #8]
 801a83e:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801a842:	47b0      	blx	r6
 801a844:	901c      	str	r0, [sp, #112]	; 0x70
 801a846:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a84a:	429c      	cmp	r4, r3
 801a84c:	f000 80ea 	beq.w	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a850:	f242 030b 	movw	r3, #8203	; 0x200b
 801a854:	429c      	cmp	r4, r3
 801a856:	f000 80e5 	beq.w	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a85a:	2c00      	cmp	r4, #0
 801a85c:	f000 80f7 	beq.w	801aa4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 801a860:	2c0a      	cmp	r4, #10
 801a862:	d060      	beq.n	801a926 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801a864:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801a866:	b36a      	cbz	r2, 801a8c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12a>
 801a868:	8894      	ldrh	r4, [r2, #4]
 801a86a:	f1bb 0f00 	cmp.w	fp, #0
 801a86e:	d03b      	beq.n	801a8e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x14e>
 801a870:	f892 900d 	ldrb.w	r9, [r2, #13]
 801a874:	f1bb 0f01 	cmp.w	fp, #1
 801a878:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a87c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801a880:	f892 900a 	ldrb.w	r9, [r2, #10]
 801a884:	ea49 0903 	orr.w	r9, r9, r3
 801a888:	d134      	bne.n	801a8f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15a>
 801a88a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a88c:	eba5 0509 	sub.w	r5, r5, r9
 801a890:	2b00      	cmp	r3, #0
 801a892:	d14f      	bne.n	801a934 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801a894:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a896:	eb09 0305 	add.w	r3, r9, r5
 801a89a:	4413      	add	r3, r2
 801a89c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a89e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a8a2:	4293      	cmp	r3, r2
 801a8a4:	da51      	bge.n	801a94a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 801a8a6:	e038      	b.n	801a91a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801a8a8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a8aa:	e79d      	b.n	801a7e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4e>
 801a8ac:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801a8b0:	4659      	mov	r1, fp
 801a8b2:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801a8b4:	9301      	str	r3, [sp, #4]
 801a8b6:	ab1d      	add	r3, sp, #116	; 0x74
 801a8b8:	9300      	str	r3, [sp, #0]
 801a8ba:	ab1c      	add	r3, sp, #112	; 0x70
 801a8bc:	f002 fe52 	bl	801d564 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801a8c0:	4604      	mov	r4, r0
 801a8c2:	e7c0      	b.n	801a846 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xac>
 801a8c4:	f8d8 0000 	ldr.w	r0, [r8]
 801a8c8:	6803      	ldr	r3, [r0, #0]
 801a8ca:	691b      	ldr	r3, [r3, #16]
 801a8cc:	4798      	blx	r3
 801a8ce:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801a8d2:	4298      	cmp	r0, r3
 801a8d4:	f000 80a6 	beq.w	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a8d8:	f242 030b 	movw	r3, #8203	; 0x200b
 801a8dc:	4298      	cmp	r0, r3
 801a8de:	f000 80a1 	beq.w	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a8e2:	f1bb 0f00 	cmp.w	fp, #0
 801a8e6:	d100      	bne.n	801a8ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 801a8e8:	444d      	add	r5, r9
 801a8ea:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801a8ec:	2a00      	cmp	r2, #0
 801a8ee:	d1bf      	bne.n	801a870 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xd6>
 801a8f0:	4691      	mov	r9, r2
 801a8f2:	e097      	b.n	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a8f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a8f6:	2b00      	cmp	r3, #0
 801a8f8:	f000 80ab 	beq.w	801aa52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
 801a8fc:	f1bb 0f00 	cmp.w	fp, #0
 801a900:	d118      	bne.n	801a934 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 801a902:	f8d8 0000 	ldr.w	r0, [r8]
 801a906:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a908:	6803      	ldr	r3, [r0, #0]
 801a90a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a90c:	4798      	blx	r3
 801a90e:	4405      	add	r5, r0
 801a910:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801a912:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a914:	1aeb      	subs	r3, r5, r3
 801a916:	4293      	cmp	r3, r2
 801a918:	dd17      	ble.n	801a94a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>
 801a91a:	2c00      	cmp	r4, #0
 801a91c:	f000 8097 	beq.w	801aa4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 801a920:	2c0a      	cmp	r4, #10
 801a922:	f040 8085 	bne.w	801aa30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 801a926:	240a      	movs	r4, #10
 801a928:	fab4 f084 	clz	r0, r4
 801a92c:	0940      	lsrs	r0, r0, #5
 801a92e:	b01f      	add	sp, #124	; 0x7c
 801a930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a934:	f8d8 0000 	ldr.w	r0, [r8]
 801a938:	990d      	ldr	r1, [sp, #52]	; 0x34
 801a93a:	6803      	ldr	r3, [r0, #0]
 801a93c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801a93e:	4798      	blx	r3
 801a940:	f1bb 0f01 	cmp.w	fp, #1
 801a944:	eba5 0500 	sub.w	r5, r5, r0
 801a948:	d0a4      	beq.n	801a894 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfa>
 801a94a:	981c      	ldr	r0, [sp, #112]	; 0x70
 801a94c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a94e:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801a952:	f9b3 6000 	ldrsh.w	r6, [r3]
 801a956:	7b43      	ldrb	r3, [r0, #13]
 801a958:	4429      	add	r1, r5
 801a95a:	015b      	lsls	r3, r3, #5
 801a95c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801a960:	7983      	ldrb	r3, [r0, #6]
 801a962:	4313      	orrs	r3, r2
 801a964:	440b      	add	r3, r1
 801a966:	42b3      	cmp	r3, r6
 801a968:	db5c      	blt.n	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a96a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a96c:	4299      	cmp	r1, r3
 801a96e:	da59      	bge.n	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a970:	f8d8 0000 	ldr.w	r0, [r8]
 801a974:	42ae      	cmp	r6, r5
 801a976:	6803      	ldr	r3, [r0, #0]
 801a978:	bfcc      	ite	gt
 801a97a:	1b76      	subgt	r6, r6, r5
 801a97c:	2600      	movle	r6, #0
 801a97e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a980:	bfc8      	it	gt
 801a982:	b2b6      	uxthgt	r6, r6
 801a984:	4798      	blx	r3
 801a986:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a988:	7b5a      	ldrb	r2, [r3, #13]
 801a98a:	00d1      	lsls	r1, r2, #3
 801a98c:	f401 7780 	and.w	r7, r1, #256	; 0x100
 801a990:	7a19      	ldrb	r1, [r3, #8]
 801a992:	4339      	orrs	r1, r7
 801a994:	0657      	lsls	r7, r2, #25
 801a996:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801a998:	bf48      	it	mi
 801a99a:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801a99e:	4407      	add	r7, r0
 801a9a0:	bf48      	it	mi
 801a9a2:	b209      	sxthmi	r1, r1
 801a9a4:	1a7f      	subs	r7, r7, r1
 801a9a6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801a9a8:	b2bf      	uxth	r7, r7
 801a9aa:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801a9ae:	fa0f fa87 	sxth.w	sl, r7
 801a9b2:	4551      	cmp	r1, sl
 801a9b4:	dd3a      	ble.n	801aa2c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x292>
 801a9b6:	0112      	lsls	r2, r2, #4
 801a9b8:	79d8      	ldrb	r0, [r3, #7]
 801a9ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801a9be:	4302      	orrs	r2, r0
 801a9c0:	4492      	add	sl, r2
 801a9c2:	4551      	cmp	r1, sl
 801a9c4:	dc2e      	bgt.n	801aa24 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28a>
 801a9c6:	1bcf      	subs	r7, r1, r7
 801a9c8:	468a      	mov	sl, r1
 801a9ca:	b2bf      	uxth	r7, r7
 801a9cc:	9319      	str	r3, [sp, #100]	; 0x64
 801a9ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a9d0:	f8d8 0000 	ldr.w	r0, [r8]
 801a9d4:	681a      	ldr	r2, [r3, #0]
 801a9d6:	6801      	ldr	r1, [r0, #0]
 801a9d8:	6c93      	ldr	r3, [r2, #72]	; 0x48
 801a9da:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a9dc:	9313      	str	r3, [sp, #76]	; 0x4c
 801a9de:	9218      	str	r2, [sp, #96]	; 0x60
 801a9e0:	6b89      	ldr	r1, [r1, #56]	; 0x38
 801a9e2:	4788      	blx	r1
 801a9e4:	f898 1006 	ldrb.w	r1, [r8, #6]
 801a9e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801a9ea:	910b      	str	r1, [sp, #44]	; 0x2c
 801a9ec:	f898 100e 	ldrb.w	r1, [r8, #14]
 801a9f0:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801a9f2:	910a      	str	r1, [sp, #40]	; 0x28
 801a9f4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 801a9f8:	9109      	str	r1, [sp, #36]	; 0x24
 801a9fa:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801a9fe:	9305      	str	r3, [sp, #20]
 801aa00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801aa02:	9206      	str	r2, [sp, #24]
 801aa04:	e9cd a601 	strd	sl, r6, [sp, #4]
 801aa08:	442e      	add	r6, r5
 801aa0a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801aa0e:	b236      	sxth	r6, r6
 801aa10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801aa12:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801aa16:	9600      	str	r6, [sp, #0]
 801aa18:	9916      	ldr	r1, [sp, #88]	; 0x58
 801aa1a:	681a      	ldr	r2, [r3, #0]
 801aa1c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801aa1e:	685b      	ldr	r3, [r3, #4]
 801aa20:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801aa22:	47b0      	blx	r6
 801aa24:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aa26:	3301      	adds	r3, #1
 801aa28:	930e      	str	r3, [sp, #56]	; 0x38
 801aa2a:	e6e5      	b.n	801a7f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5e>
 801aa2c:	2700      	movs	r7, #0
 801aa2e:	e7cd      	b.n	801a9cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 801aa30:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801aa32:	3501      	adds	r5, #1
 801aa34:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801aa36:	429d      	cmp	r5, r3
 801aa38:	f6bf af76 	bge.w	801a928 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801aa3c:	4659      	mov	r1, fp
 801aa3e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801aa40:	f7f3 fcf6 	bl	800e430 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801aa44:	4604      	mov	r4, r0
 801aa46:	b110      	cbz	r0, 801aa4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b4>
 801aa48:	280a      	cmp	r0, #10
 801aa4a:	d1f2      	bne.n	801aa32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801aa4c:	e76b      	b.n	801a926 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801aa4e:	2400      	movs	r4, #0
 801aa50:	e76a      	b.n	801a928 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801aa52:	f1bb 0f00 	cmp.w	fp, #0
 801aa56:	f43f af5b 	beq.w	801a910 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 801aa5a:	e776      	b.n	801a94a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b0>

0801aa5c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801aa5c:	b530      	push	{r4, r5, lr}
 801aa5e:	8a44      	ldrh	r4, [r0, #18]
 801aa60:	8ac5      	ldrh	r5, [r0, #22]
 801aa62:	82c3      	strh	r3, [r0, #22]
 801aa64:	442c      	add	r4, r5
 801aa66:	1ae4      	subs	r4, r4, r3
 801aa68:	8b03      	ldrh	r3, [r0, #24]
 801aa6a:	8244      	strh	r4, [r0, #18]
 801aa6c:	8a84      	ldrh	r4, [r0, #20]
 801aa6e:	4422      	add	r2, r4
 801aa70:	440c      	add	r4, r1
 801aa72:	1a59      	subs	r1, r3, r1
 801aa74:	8342      	strh	r2, [r0, #26]
 801aa76:	8284      	strh	r4, [r0, #20]
 801aa78:	8301      	strh	r1, [r0, #24]
 801aa7a:	bd30      	pop	{r4, r5, pc}

0801aa7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801aa7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa80:	7a43      	ldrb	r3, [r0, #9]
 801aa82:	b087      	sub	sp, #28
 801aa84:	4604      	mov	r4, r0
 801aa86:	460f      	mov	r7, r1
 801aa88:	1eda      	subs	r2, r3, #3
 801aa8a:	b2d2      	uxtb	r2, r2
 801aa8c:	2900      	cmp	r1, #0
 801aa8e:	d036      	beq.n	801aafe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801aa90:	2a01      	cmp	r2, #1
 801aa92:	d932      	bls.n	801aafa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 801aa94:	1e58      	subs	r0, r3, #1
 801aa96:	f1d0 0b00 	rsbs	fp, r0, #0
 801aa9a:	eb4b 0b00 	adc.w	fp, fp, r0
 801aa9e:	1e99      	subs	r1, r3, #2
 801aaa0:	424b      	negs	r3, r1
 801aaa2:	414b      	adcs	r3, r1
 801aaa4:	9303      	str	r3, [sp, #12]
 801aaa6:	2300      	movs	r3, #0
 801aaa8:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801aaac:	2500      	movs	r5, #0
 801aaae:	f242 0a0b 	movw	sl, #8203	; 0x200b
 801aab2:	46a9      	mov	r9, r5
 801aab4:	8265      	strh	r5, [r4, #18]
 801aab6:	82a5      	strh	r5, [r4, #20]
 801aab8:	2300      	movs	r3, #0
 801aaba:	9305      	str	r3, [sp, #20]
 801aabc:	8823      	ldrh	r3, [r4, #0]
 801aabe:	2b20      	cmp	r3, #32
 801aac0:	d02b      	beq.n	801ab1a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 801aac2:	eba3 020a 	sub.w	r2, r3, sl
 801aac6:	4256      	negs	r6, r2
 801aac8:	4156      	adcs	r6, r2
 801aaca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801aace:	4293      	cmp	r3, r2
 801aad0:	d004      	beq.n	801aadc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801aad2:	4553      	cmp	r3, sl
 801aad4:	bf16      	itet	ne
 801aad6:	4699      	movne	r9, r3
 801aad8:	2601      	moveq	r6, #1
 801aada:	2600      	movne	r6, #0
 801aadc:	ab05      	add	r3, sp, #20
 801aade:	68e2      	ldr	r2, [r4, #12]
 801aae0:	7a21      	ldrb	r1, [r4, #8]
 801aae2:	6860      	ldr	r0, [r4, #4]
 801aae4:	f002 fce6 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801aae8:	8020      	strh	r0, [r4, #0]
 801aaea:	b9c8      	cbnz	r0, 801ab20 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801aaec:	8b22      	ldrh	r2, [r4, #24]
 801aaee:	2300      	movs	r3, #0
 801aaf0:	4611      	mov	r1, r2
 801aaf2:	4620      	mov	r0, r4
 801aaf4:	f7ff ffb2 	bl	801aa5c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801aaf8:	e066      	b.n	801abc8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801aafa:	468b      	mov	fp, r1
 801aafc:	e7cf      	b.n	801aa9e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 801aafe:	3b01      	subs	r3, #1
 801ab00:	2a01      	cmp	r2, #1
 801ab02:	9103      	str	r1, [sp, #12]
 801ab04:	468b      	mov	fp, r1
 801ab06:	bf8c      	ite	hi
 801ab08:	2200      	movhi	r2, #0
 801ab0a:	2201      	movls	r2, #1
 801ab0c:	2b01      	cmp	r3, #1
 801ab0e:	9202      	str	r2, [sp, #8]
 801ab10:	bf8c      	ite	hi
 801ab12:	2300      	movhi	r3, #0
 801ab14:	2301      	movls	r3, #1
 801ab16:	9301      	str	r3, [sp, #4]
 801ab18:	e7c8      	b.n	801aaac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801ab1a:	4699      	mov	r9, r3
 801ab1c:	2601      	movs	r6, #1
 801ab1e:	e7dd      	b.n	801aadc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801ab20:	8ae3      	ldrh	r3, [r4, #22]
 801ab22:	280a      	cmp	r0, #10
 801ab24:	f103 0301 	add.w	r3, r3, #1
 801ab28:	82e3      	strh	r3, [r4, #22]
 801ab2a:	d0df      	beq.n	801aaec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801ab2c:	9a05      	ldr	r2, [sp, #20]
 801ab2e:	bb42      	cbnz	r2, 801ab82 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 801ab30:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801ab34:	4298      	cmp	r0, r3
 801ab36:	d001      	beq.n	801ab3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801ab38:	4550      	cmp	r0, sl
 801ab3a:	d1bd      	bne.n	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801ab3c:	8823      	ldrh	r3, [r4, #0]
 801ab3e:	8b21      	ldrh	r1, [r4, #24]
 801ab40:	2b20      	cmp	r3, #32
 801ab42:	d001      	beq.n	801ab48 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 801ab44:	4553      	cmp	r3, sl
 801ab46:	d131      	bne.n	801abac <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801ab48:	2e00      	cmp	r6, #0
 801ab4a:	bf0a      	itet	eq
 801ab4c:	460d      	moveq	r5, r1
 801ab4e:	4630      	movne	r0, r6
 801ab50:	2001      	moveq	r0, #1
 801ab52:	440a      	add	r2, r1
 801ab54:	8aa3      	ldrh	r3, [r4, #20]
 801ab56:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801ab5a:	b292      	uxth	r2, r2
 801ab5c:	8322      	strh	r2, [r4, #24]
 801ab5e:	4413      	add	r3, r2
 801ab60:	2f00      	cmp	r7, #0
 801ab62:	d03a      	beq.n	801abda <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 801ab64:	f1bb 0f00 	cmp.w	fp, #0
 801ab68:	d102      	bne.n	801ab70 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801ab6a:	9903      	ldr	r1, [sp, #12]
 801ab6c:	b301      	cbz	r1, 801abb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801ab6e:	b1f8      	cbz	r0, 801abb0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801ab70:	8ba1      	ldrh	r1, [r4, #28]
 801ab72:	4419      	add	r1, r3
 801ab74:	458c      	cmp	ip, r1
 801ab76:	da2a      	bge.n	801abce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801ab78:	8a61      	ldrh	r1, [r4, #18]
 801ab7a:	b341      	cbz	r1, 801abce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801ab7c:	4563      	cmp	r3, ip
 801ab7e:	dd9b      	ble.n	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801ab80:	e01c      	b.n	801abbc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 801ab82:	8893      	ldrh	r3, [r2, #4]
 801ab84:	4649      	mov	r1, r9
 801ab86:	8023      	strh	r3, [r4, #0]
 801ab88:	f892 800d 	ldrb.w	r8, [r2, #13]
 801ab8c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ab90:	f408 7080 	and.w	r0, r8, #256	; 0x100
 801ab94:	f892 800a 	ldrb.w	r8, [r2, #10]
 801ab98:	ea48 0800 	orr.w	r8, r8, r0
 801ab9c:	68e0      	ldr	r0, [r4, #12]
 801ab9e:	6803      	ldr	r3, [r0, #0]
 801aba0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801aba2:	4798      	blx	r3
 801aba4:	eb08 0200 	add.w	r2, r8, r0
 801aba8:	b292      	uxth	r2, r2
 801abaa:	e7c7      	b.n	801ab3c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801abac:	2000      	movs	r0, #0
 801abae:	e7d0      	b.n	801ab52 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801abb0:	4563      	cmp	r3, ip
 801abb2:	dd81      	ble.n	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801abb4:	8a63      	ldrh	r3, [r4, #18]
 801abb6:	2b00      	cmp	r3, #0
 801abb8:	f43f af7e 	beq.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801abbc:	2301      	movs	r3, #1
 801abbe:	8ba2      	ldrh	r2, [r4, #28]
 801abc0:	77a3      	strb	r3, [r4, #30]
 801abc2:	8b63      	ldrh	r3, [r4, #26]
 801abc4:	4413      	add	r3, r2
 801abc6:	8363      	strh	r3, [r4, #26]
 801abc8:	b007      	add	sp, #28
 801abca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801abce:	2300      	movs	r3, #0
 801abd0:	4611      	mov	r1, r2
 801abd2:	4620      	mov	r0, r4
 801abd4:	f7ff ff42 	bl	801aa5c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801abd8:	e76e      	b.n	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801abda:	4563      	cmp	r3, ip
 801abdc:	dd14      	ble.n	801ac08 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 801abde:	9b02      	ldr	r3, [sp, #8]
 801abe0:	b113      	cbz	r3, 801abe8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 801abe2:	2301      	movs	r3, #1
 801abe4:	460a      	mov	r2, r1
 801abe6:	e783      	b.n	801aaf0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801abe8:	9b01      	ldr	r3, [sp, #4]
 801abea:	2b00      	cmp	r3, #0
 801abec:	f43f af64 	beq.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801abf0:	2800      	cmp	r0, #0
 801abf2:	f47f af61 	bne.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801abf6:	b116      	cbz	r6, 801abfe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801abf8:	2301      	movs	r3, #1
 801abfa:	462a      	mov	r2, r5
 801abfc:	e779      	b.n	801aaf2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 801abfe:	8a63      	ldrh	r3, [r4, #18]
 801ac00:	2b00      	cmp	r3, #0
 801ac02:	f43f af59 	beq.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801ac06:	e7df      	b.n	801abc8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801ac08:	2800      	cmp	r0, #0
 801ac0a:	f47f af55 	bne.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801ac0e:	2e00      	cmp	r6, #0
 801ac10:	f43f af52 	beq.w	801aab8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801ac14:	2301      	movs	r3, #1
 801ac16:	462a      	mov	r2, r5
 801ac18:	e7db      	b.n	801abd2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801ac1a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801ac1a:	b530      	push	{r4, r5, lr}
 801ac1c:	4605      	mov	r5, r0
 801ac1e:	b08b      	sub	sp, #44	; 0x2c
 801ac20:	b191      	cbz	r1, 801ac48 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 801ac22:	2401      	movs	r4, #1
 801ac24:	e9cd 3100 	strd	r3, r1, [sp]
 801ac28:	4613      	mov	r3, r2
 801ac2a:	4601      	mov	r1, r0
 801ac2c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 801ac30:	a802      	add	r0, sp, #8
 801ac32:	f7ff fd0b 	bl	801a64c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 801ac36:	2100      	movs	r1, #0
 801ac38:	a802      	add	r0, sp, #8
 801ac3a:	f7ff ff1f 	bl	801aa7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801ac3e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ac42:	b163      	cbz	r3, 801ac5e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801ac44:	3401      	adds	r4, #1
 801ac46:	e7f6      	b.n	801ac36 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801ac48:	2401      	movs	r4, #1
 801ac4a:	f002 fd2b 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801ac4e:	280a      	cmp	r0, #10
 801ac50:	4628      	mov	r0, r5
 801ac52:	bf08      	it	eq
 801ac54:	3401      	addeq	r4, #1
 801ac56:	f002 fd25 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801ac5a:	2800      	cmp	r0, #0
 801ac5c:	d1f7      	bne.n	801ac4e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801ac5e:	b2a0      	uxth	r0, r4
 801ac60:	b00b      	add	sp, #44	; 0x2c
 801ac62:	bd30      	pop	{r4, r5, pc}

0801ac64 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801ac64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac68:	b0db      	sub	sp, #364	; 0x16c
 801ac6a:	4689      	mov	r9, r1
 801ac6c:	461c      	mov	r4, r3
 801ac6e:	f8dd a190 	ldr.w	sl, [sp, #400]	; 0x190
 801ac72:	900a      	str	r0, [sp, #40]	; 0x28
 801ac74:	f1ba 0f00 	cmp.w	sl, #0
 801ac78:	f000 80a5 	beq.w	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ac7c:	681b      	ldr	r3, [r3, #0]
 801ac7e:	2b00      	cmp	r3, #0
 801ac80:	f000 80a1 	beq.w	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ac84:	7ba3      	ldrb	r3, [r4, #14]
 801ac86:	2b00      	cmp	r3, #0
 801ac88:	f000 809d 	beq.w	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ac8c:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 801ac90:	6810      	ldr	r0, [r2, #0]
 801ac92:	6851      	ldr	r1, [r2, #4]
 801ac94:	2500      	movs	r5, #0
 801ac96:	4643      	mov	r3, r8
 801ac98:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 801ac9c:	950e      	str	r5, [sp, #56]	; 0x38
 801ac9e:	af18      	add	r7, sp, #96	; 0x60
 801aca0:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 801aca4:	79a2      	ldrb	r2, [r4, #6]
 801aca6:	c303      	stmia	r3!, {r0, r1}
 801aca8:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 801acac:	a90e      	add	r1, sp, #56	; 0x38
 801acae:	4640      	mov	r0, r8
 801acb0:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801acb4:	f7ff fd40 	bl	801a738 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801acb8:	a90e      	add	r1, sp, #56	; 0x38
 801acba:	79a2      	ldrb	r2, [r4, #6]
 801acbc:	4608      	mov	r0, r1
 801acbe:	f7ff fd3b 	bl	801a738 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801acc2:	4638      	mov	r0, r7
 801acc4:	f002 f8b7 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801acc8:	6820      	ldr	r0, [r4, #0]
 801acca:	6803      	ldr	r3, [r0, #0]
 801accc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801acce:	4798      	blx	r3
 801acd0:	9a65      	ldr	r2, [sp, #404]	; 0x194
 801acd2:	4603      	mov	r3, r0
 801acd4:	4651      	mov	r1, sl
 801acd6:	4638      	mov	r0, r7
 801acd8:	f002 f8f2 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801acdc:	7923      	ldrb	r3, [r4, #4]
 801acde:	6820      	ldr	r0, [r4, #0]
 801ace0:	9308      	str	r3, [sp, #32]
 801ace2:	6803      	ldr	r3, [r0, #0]
 801ace4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ace6:	4798      	blx	r3
 801ace8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801acec:	181e      	adds	r6, r3, r0
 801acee:	42ae      	cmp	r6, r5
 801acf0:	dd06      	ble.n	801ad00 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x9c>
 801acf2:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 801acf6:	4282      	cmp	r2, r0
 801acf8:	bfa4      	itt	ge
 801acfa:	189d      	addge	r5, r3, r2
 801acfc:	fb95 f5f6 	sdivge	r5, r5, r6
 801ad00:	a82e      	add	r0, sp, #184	; 0xb8
 801ad02:	f002 f898 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801ad06:	7c23      	ldrb	r3, [r4, #16]
 801ad08:	b14b      	cbz	r3, 801ad1e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xba>
 801ad0a:	6820      	ldr	r0, [r4, #0]
 801ad0c:	6803      	ldr	r3, [r0, #0]
 801ad0e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801ad10:	4798      	blx	r3
 801ad12:	9a65      	ldr	r2, [sp, #404]	; 0x194
 801ad14:	4603      	mov	r3, r0
 801ad16:	4651      	mov	r1, sl
 801ad18:	a82e      	add	r0, sp, #184	; 0xb8
 801ad1a:	f002 f8d1 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801ad1e:	7c21      	ldrb	r1, [r4, #16]
 801ad20:	a810      	add	r0, sp, #64	; 0x40
 801ad22:	7963      	ldrb	r3, [r4, #5]
 801ad24:	9101      	str	r1, [sp, #4]
 801ad26:	6821      	ldr	r1, [r4, #0]
 801ad28:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801ad2c:	9100      	str	r1, [sp, #0]
 801ad2e:	a92e      	add	r1, sp, #184	; 0xb8
 801ad30:	f7ff fc8c 	bl	801a64c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 801ad34:	7c23      	ldrb	r3, [r4, #16]
 801ad36:	b9bb      	cbnz	r3, 801ad68 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x104>
 801ad38:	fa1f fa86 	uxth.w	sl, r6
 801ad3c:	2d00      	cmp	r5, #0
 801ad3e:	dd45      	ble.n	801adcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 801ad40:	4638      	mov	r0, r7
 801ad42:	f002 fcaf 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801ad46:	2800      	cmp	r0, #0
 801ad48:	d03d      	beq.n	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ad4a:	280a      	cmp	r0, #10
 801ad4c:	d1f6      	bne.n	801ad3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 801ad4e:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ad52:	3d01      	subs	r5, #1
 801ad54:	4453      	add	r3, sl
 801ad56:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801ad5a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801ad5e:	eba3 030a 	sub.w	r3, r3, sl
 801ad62:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801ad66:	e7e9      	b.n	801ad3c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd8>
 801ad68:	0073      	lsls	r3, r6, #1
 801ad6a:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801ad6e:	fa1f fa86 	uxth.w	sl, r6
 801ad72:	9309      	str	r3, [sp, #36]	; 0x24
 801ad74:	2d00      	cmp	r5, #0
 801ad76:	dd29      	ble.n	801adcc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x168>
 801ad78:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 801ad7c:	a810      	add	r0, sp, #64	; 0x40
 801ad7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad80:	428b      	cmp	r3, r1
 801ad82:	bfd4      	ite	le
 801ad84:	2100      	movle	r1, #0
 801ad86:	2101      	movgt	r1, #1
 801ad88:	f7ff fe78 	bl	801aa7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801ad8c:	f8bd 3052 	ldrh.w	r3, [sp, #82]	; 0x52
 801ad90:	3b01      	subs	r3, #1
 801ad92:	b29b      	uxth	r3, r3
 801ad94:	455b      	cmp	r3, fp
 801ad96:	930b      	str	r3, [sp, #44]	; 0x2c
 801ad98:	d005      	beq.n	801ada6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x142>
 801ad9a:	7961      	ldrb	r1, [r4, #5]
 801ad9c:	4638      	mov	r0, r7
 801ad9e:	f7f3 fb47 	bl	800e430 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801ada2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ada4:	e7f4      	b.n	801ad90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12c>
 801ada6:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801adaa:	3d01      	subs	r5, #1
 801adac:	4453      	add	r3, sl
 801adae:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801adb2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801adb6:	eba3 030a 	sub.w	r3, r3, sl
 801adba:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801adbe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801adc2:	2b00      	cmp	r3, #0
 801adc4:	d1d6      	bne.n	801ad74 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x110>
 801adc6:	b05b      	add	sp, #364	; 0x16c
 801adc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adcc:	ea4f 0a46 	mov.w	sl, r6, lsl #1
 801add0:	ad44      	add	r5, sp, #272	; 0x110
 801add2:	f04f 0b00 	mov.w	fp, #0
 801add6:	7c23      	ldrb	r3, [r4, #16]
 801add8:	2b00      	cmp	r3, #0
 801adda:	d067      	beq.n	801aeac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 801addc:	f9bd 103e 	ldrsh.w	r1, [sp, #62]	; 0x3e
 801ade0:	a810      	add	r0, sp, #64	; 0x40
 801ade2:	458a      	cmp	sl, r1
 801ade4:	bfd4      	ite	le
 801ade6:	2100      	movle	r1, #0
 801ade8:	2101      	movgt	r1, #1
 801adea:	f7ff fe47 	bl	801aa7c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801adee:	9b08      	ldr	r3, [sp, #32]
 801adf0:	2b00      	cmp	r3, #0
 801adf2:	d056      	beq.n	801aea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801adf4:	7c23      	ldrb	r3, [r4, #16]
 801adf6:	2258      	movs	r2, #88	; 0x58
 801adf8:	4639      	mov	r1, r7
 801adfa:	4628      	mov	r0, r5
 801adfc:	9309      	str	r3, [sp, #36]	; 0x24
 801adfe:	f011 f8f1 	bl	802bfe4 <memcpy>
 801ae02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae04:	2b00      	cmp	r3, #0
 801ae06:	d059      	beq.n	801aebc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x258>
 801ae08:	f9bd 305a 	ldrsh.w	r3, [sp, #90]	; 0x5a
 801ae0c:	7922      	ldrb	r2, [r4, #4]
 801ae0e:	2a01      	cmp	r2, #1
 801ae10:	d13d      	bne.n	801ae8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x22a>
 801ae12:	f9bd 003c 	ldrsh.w	r0, [sp, #60]	; 0x3c
 801ae16:	1ac0      	subs	r0, r0, r3
 801ae18:	2302      	movs	r3, #2
 801ae1a:	fb90 f0f3 	sdiv	r0, r0, r3
 801ae1e:	b200      	sxth	r0, r0
 801ae20:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801ae24:	4418      	add	r0, r3
 801ae26:	7c23      	ldrb	r3, [r4, #16]
 801ae28:	f8ad 0110 	strh.w	r0, [sp, #272]	; 0x110
 801ae2c:	2b00      	cmp	r3, #0
 801ae2e:	d03a      	beq.n	801aea6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801ae30:	f8bd 2052 	ldrh.w	r2, [sp, #82]	; 0x52
 801ae34:	f89d 105e 	ldrb.w	r1, [sp, #94]	; 0x5e
 801ae38:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ae3c:	9500      	str	r5, [sp, #0]
 801ae3e:	980a      	ldr	r0, [sp, #40]	; 0x28
 801ae40:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801ae44:	e9cd b703 	strd	fp, r7, [sp, #12]
 801ae48:	e9cd 8401 	strd	r8, r4, [sp, #4]
 801ae4c:	464a      	mov	r2, r9
 801ae4e:	2100      	movs	r1, #0
 801ae50:	f7ff fca3 	bl	801a79a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801ae54:	2800      	cmp	r0, #0
 801ae56:	d1b6      	bne.n	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ae58:	b2b2      	uxth	r2, r6
 801ae5a:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801ae5e:	4611      	mov	r1, r2
 801ae60:	4413      	add	r3, r2
 801ae62:	f8bd 203e 	ldrh.w	r2, [sp, #62]	; 0x3e
 801ae66:	b21b      	sxth	r3, r3
 801ae68:	1a52      	subs	r2, r2, r1
 801ae6a:	7c21      	ldrb	r1, [r4, #16]
 801ae6c:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801ae70:	b212      	sxth	r2, r2
 801ae72:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 801ae76:	b109      	cbz	r1, 801ae7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x218>
 801ae78:	42b2      	cmp	r2, r6
 801ae7a:	dba4      	blt.n	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ae7c:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 801ae80:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801ae84:	440a      	add	r2, r1
 801ae86:	b212      	sxth	r2, r2
 801ae88:	4293      	cmp	r3, r2
 801ae8a:	dda4      	ble.n	801add6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x172>
 801ae8c:	e79b      	b.n	801adc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x162>
 801ae8e:	2a02      	cmp	r2, #2
 801ae90:	d105      	bne.n	801ae9e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23a>
 801ae92:	7be2      	ldrb	r2, [r4, #15]
 801ae94:	f8bd 003c 	ldrh.w	r0, [sp, #60]	; 0x3c
 801ae98:	1a80      	subs	r0, r0, r2
 801ae9a:	1ac0      	subs	r0, r0, r3
 801ae9c:	e7bf      	b.n	801ae1e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ba>
 801ae9e:	2000      	movs	r0, #0
 801aea0:	e7be      	b.n	801ae20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 801aea2:	7be0      	ldrb	r0, [r4, #15]
 801aea4:	e7bc      	b.n	801ae20 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1bc>
 801aea6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801aeaa:	e7c3      	b.n	801ae34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d0>
 801aeac:	9b08      	ldr	r3, [sp, #32]
 801aeae:	2b00      	cmp	r3, #0
 801aeb0:	d0f7      	beq.n	801aea2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801aeb2:	2258      	movs	r2, #88	; 0x58
 801aeb4:	4639      	mov	r1, r7
 801aeb6:	4628      	mov	r0, r5
 801aeb8:	f011 f894 	bl	802bfe4 <memcpy>
 801aebc:	2300      	movs	r3, #0
 801aebe:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801aec2:	6821      	ldr	r1, [r4, #0]
 801aec4:	4628      	mov	r0, r5
 801aec6:	f7ff fbfb 	bl	801a6c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801aeca:	b203      	sxth	r3, r0
 801aecc:	e79e      	b.n	801ae0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a8>

0801aece <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801aece:	2b02      	cmp	r3, #2
 801aed0:	b510      	push	{r4, lr}
 801aed2:	f9b0 4000 	ldrsh.w	r4, [r0]
 801aed6:	d00b      	beq.n	801aef0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 801aed8:	2b03      	cmp	r3, #3
 801aeda:	d00e      	beq.n	801aefa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 801aedc:	2b01      	cmp	r3, #1
 801aede:	d001      	beq.n	801aee4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 801aee0:	1860      	adds	r0, r4, r1
 801aee2:	bd10      	pop	{r4, pc}
 801aee4:	8880      	ldrh	r0, [r0, #4]
 801aee6:	4420      	add	r0, r4
 801aee8:	b200      	sxth	r0, r0
 801aeea:	1a80      	subs	r0, r0, r2
 801aeec:	3801      	subs	r0, #1
 801aeee:	e7f8      	b.n	801aee2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 801aef0:	8880      	ldrh	r0, [r0, #4]
 801aef2:	4420      	add	r0, r4
 801aef4:	b200      	sxth	r0, r0
 801aef6:	1a40      	subs	r0, r0, r1
 801aef8:	e7f8      	b.n	801aeec <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801aefa:	18a0      	adds	r0, r4, r2
 801aefc:	e7f1      	b.n	801aee2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0801aefe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801aefe:	2b02      	cmp	r3, #2
 801af00:	b510      	push	{r4, lr}
 801af02:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 801af06:	d006      	beq.n	801af16 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 801af08:	2b03      	cmp	r3, #3
 801af0a:	d00a      	beq.n	801af22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801af0c:	2b01      	cmp	r3, #1
 801af0e:	bf14      	ite	ne
 801af10:	18a0      	addne	r0, r4, r2
 801af12:	1860      	addeq	r0, r4, r1
 801af14:	bd10      	pop	{r4, pc}
 801af16:	88c0      	ldrh	r0, [r0, #6]
 801af18:	4420      	add	r0, r4
 801af1a:	b200      	sxth	r0, r0
 801af1c:	1a80      	subs	r0, r0, r2
 801af1e:	3801      	subs	r0, #1
 801af20:	e7f8      	b.n	801af14 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 801af22:	88c0      	ldrh	r0, [r0, #6]
 801af24:	4420      	add	r0, r4
 801af26:	b200      	sxth	r0, r0
 801af28:	1a40      	subs	r0, r0, r1
 801af2a:	e7f8      	b.n	801af1e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0801af2c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801af2c:	4b01      	ldr	r3, [pc, #4]	; (801af34 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801af2e:	2200      	movs	r2, #0
 801af30:	601a      	str	r2, [r3, #0]
 801af32:	4770      	bx	lr
 801af34:	20004190 	.word	0x20004190

0801af38 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801af38:	4603      	mov	r3, r0
 801af3a:	b1c8      	cbz	r0, 801af70 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801af3c:	0c02      	lsrs	r2, r0, #16
 801af3e:	0412      	lsls	r2, r2, #16
 801af40:	b9a2      	cbnz	r2, 801af6c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801af42:	0403      	lsls	r3, r0, #16
 801af44:	2010      	movs	r0, #16
 801af46:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801af4a:	bf04      	itt	eq
 801af4c:	021b      	lsleq	r3, r3, #8
 801af4e:	3008      	addeq	r0, #8
 801af50:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801af54:	bf04      	itt	eq
 801af56:	011b      	lsleq	r3, r3, #4
 801af58:	3004      	addeq	r0, #4
 801af5a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801af5e:	bf04      	itt	eq
 801af60:	009b      	lsleq	r3, r3, #2
 801af62:	3002      	addeq	r0, #2
 801af64:	2b00      	cmp	r3, #0
 801af66:	db04      	blt.n	801af72 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801af68:	3001      	adds	r0, #1
 801af6a:	4770      	bx	lr
 801af6c:	2000      	movs	r0, #0
 801af6e:	e7ea      	b.n	801af46 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801af70:	2020      	movs	r0, #32
 801af72:	4770      	bx	lr

0801af74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801af74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af78:	b087      	sub	sp, #28
 801af7a:	4681      	mov	r9, r0
 801af7c:	4698      	mov	r8, r3
 801af7e:	4610      	mov	r0, r2
 801af80:	460d      	mov	r5, r1
 801af82:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801af86:	b981      	cbnz	r1, 801afaa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 801af88:	b14b      	cbz	r3, 801af9e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 801af8a:	460b      	mov	r3, r1
 801af8c:	464a      	mov	r2, r9
 801af8e:	4641      	mov	r1, r8
 801af90:	e9cd 4700 	strd	r4, r7, [sp]
 801af94:	f7ff ffee 	bl	801af74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801af98:	b007      	add	sp, #28
 801af9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af9e:	f04f 33ff 	mov.w	r3, #4294967295
 801afa2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801afa6:	603b      	str	r3, [r7, #0]
 801afa8:	e7f6      	b.n	801af98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801afaa:	fa32 fa01 	lsrs.w	sl, r2, r1
 801afae:	d107      	bne.n	801afc0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 801afb0:	fb09 f602 	mul.w	r6, r9, r2
 801afb4:	fbb6 f0f4 	udiv	r0, r6, r4
 801afb8:	fb04 6610 	mls	r6, r4, r0, r6
 801afbc:	603e      	str	r6, [r7, #0]
 801afbe:	e7eb      	b.n	801af98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801afc0:	2601      	movs	r6, #1
 801afc2:	fa09 fb01 	lsl.w	fp, r9, r1
 801afc6:	408e      	lsls	r6, r1
 801afc8:	fbbb f3f4 	udiv	r3, fp, r4
 801afcc:	3e01      	subs	r6, #1
 801afce:	9302      	str	r3, [sp, #8]
 801afd0:	fb0a f303 	mul.w	r3, sl, r3
 801afd4:	4016      	ands	r6, r2
 801afd6:	9303      	str	r3, [sp, #12]
 801afd8:	4630      	mov	r0, r6
 801afda:	f7ff ffad 	bl	801af38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801afde:	464a      	mov	r2, r9
 801afe0:	460b      	mov	r3, r1
 801afe2:	4601      	mov	r1, r0
 801afe4:	4630      	mov	r0, r6
 801afe6:	e9cd 4700 	strd	r4, r7, [sp]
 801afea:	f7ff ffc3 	bl	801af74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801afee:	9b02      	ldr	r3, [sp, #8]
 801aff0:	4606      	mov	r6, r0
 801aff2:	eb05 0108 	add.w	r1, r5, r8
 801aff6:	fb04 bb13 	mls	fp, r4, r3, fp
 801affa:	4658      	mov	r0, fp
 801affc:	f7ff ff9c 	bl	801af38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801b000:	ab05      	add	r3, sp, #20
 801b002:	465a      	mov	r2, fp
 801b004:	e9cd 4300 	strd	r4, r3, [sp]
 801b008:	4603      	mov	r3, r0
 801b00a:	4650      	mov	r0, sl
 801b00c:	f7ff ffb2 	bl	801af74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801b010:	6839      	ldr	r1, [r7, #0]
 801b012:	9a05      	ldr	r2, [sp, #20]
 801b014:	9b03      	ldr	r3, [sp, #12]
 801b016:	4411      	add	r1, r2
 801b018:	fbb1 f2f4 	udiv	r2, r1, r4
 801b01c:	18d3      	adds	r3, r2, r3
 801b01e:	fb04 1412 	mls	r4, r4, r2, r1
 801b022:	441e      	add	r6, r3
 801b024:	603c      	str	r4, [r7, #0]
 801b026:	4430      	add	r0, r6
 801b028:	e7b6      	b.n	801af98 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801b02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801b02a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801b02e:	b085      	sub	sp, #20
 801b030:	f1b0 0900 	subs.w	r9, r0, #0
 801b034:	461d      	mov	r5, r3
 801b036:	4617      	mov	r7, r2
 801b038:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b03a:	bfbb      	ittet	lt
 801b03c:	f1c9 0900 	rsblt	r9, r9, #0
 801b040:	f04f 36ff 	movlt.w	r6, #4294967295
 801b044:	2601      	movge	r6, #1
 801b046:	6823      	ldrlt	r3, [r4, #0]
 801b048:	bfbc      	itt	lt
 801b04a:	425b      	neglt	r3, r3
 801b04c:	6023      	strlt	r3, [r4, #0]
 801b04e:	2a00      	cmp	r2, #0
 801b050:	da04      	bge.n	801b05c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801b052:	6823      	ldr	r3, [r4, #0]
 801b054:	4257      	negs	r7, r2
 801b056:	4276      	negs	r6, r6
 801b058:	425b      	negs	r3, r3
 801b05a:	6023      	str	r3, [r4, #0]
 801b05c:	2d00      	cmp	r5, #0
 801b05e:	4638      	mov	r0, r7
 801b060:	bfba      	itte	lt
 801b062:	426d      	neglt	r5, r5
 801b064:	f04f 38ff 	movlt.w	r8, #4294967295
 801b068:	f04f 0801 	movge.w	r8, #1
 801b06c:	f7ff ff64 	bl	801af38 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801b070:	ab03      	add	r3, sp, #12
 801b072:	463a      	mov	r2, r7
 801b074:	e9cd 5300 	strd	r5, r3, [sp]
 801b078:	4603      	mov	r3, r0
 801b07a:	4648      	mov	r0, r9
 801b07c:	f7ff ff7a 	bl	801af74 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801b080:	6823      	ldr	r3, [r4, #0]
 801b082:	9a03      	ldr	r2, [sp, #12]
 801b084:	4546      	cmp	r6, r8
 801b086:	441a      	add	r2, r3
 801b088:	fb92 f3f5 	sdiv	r3, r2, r5
 801b08c:	4418      	add	r0, r3
 801b08e:	fb05 2313 	mls	r3, r5, r3, r2
 801b092:	bf18      	it	ne
 801b094:	4240      	negne	r0, r0
 801b096:	1c72      	adds	r2, r6, #1
 801b098:	6023      	str	r3, [r4, #0]
 801b09a:	d105      	bne.n	801b0a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801b09c:	2b00      	cmp	r3, #0
 801b09e:	f1c3 0200 	rsb	r2, r3, #0
 801b0a2:	db0b      	blt.n	801b0bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801b0a4:	6022      	str	r2, [r4, #0]
 801b0a6:	e006      	b.n	801b0b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801b0a8:	2e01      	cmp	r6, #1
 801b0aa:	d104      	bne.n	801b0b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801b0ac:	2b00      	cmp	r3, #0
 801b0ae:	da02      	bge.n	801b0b6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801b0b0:	442b      	add	r3, r5
 801b0b2:	3801      	subs	r0, #1
 801b0b4:	6023      	str	r3, [r4, #0]
 801b0b6:	b005      	add	sp, #20
 801b0b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b0bc:	3801      	subs	r0, #1
 801b0be:	1b52      	subs	r2, r2, r5
 801b0c0:	e7f0      	b.n	801b0a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0801b0c4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801b0c4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801b0c8:	4c1c      	ldr	r4, [pc, #112]	; (801b13c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801b0ca:	4605      	mov	r5, r0
 801b0cc:	6807      	ldr	r7, [r0, #0]
 801b0ce:	69a3      	ldr	r3, [r4, #24]
 801b0d0:	b92b      	cbnz	r3, 801b0de <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801b0d2:	6840      	ldr	r0, [r0, #4]
 801b0d4:	e9c5 7000 	strd	r7, r0, [r5]
 801b0d8:	b004      	add	sp, #16
 801b0da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b0de:	f04f 0802 	mov.w	r8, #2
 801b0e2:	68a2      	ldr	r2, [r4, #8]
 801b0e4:	ae04      	add	r6, sp, #16
 801b0e6:	6820      	ldr	r0, [r4, #0]
 801b0e8:	fb93 f1f8 	sdiv	r1, r3, r8
 801b0ec:	440a      	add	r2, r1
 801b0ee:	69e1      	ldr	r1, [r4, #28]
 801b0f0:	f846 2d04 	str.w	r2, [r6, #-4]!
 801b0f4:	463a      	mov	r2, r7
 801b0f6:	9600      	str	r6, [sp, #0]
 801b0f8:	f7ff ff97 	bl	801b02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801b0fc:	69a3      	ldr	r3, [r4, #24]
 801b0fe:	4607      	mov	r7, r0
 801b100:	686a      	ldr	r2, [r5, #4]
 801b102:	6a21      	ldr	r1, [r4, #32]
 801b104:	9600      	str	r6, [sp, #0]
 801b106:	6860      	ldr	r0, [r4, #4]
 801b108:	f7ff ff8f 	bl	801b02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801b10c:	69a3      	ldr	r3, [r4, #24]
 801b10e:	6962      	ldr	r2, [r4, #20]
 801b110:	4407      	add	r7, r0
 801b112:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801b114:	9600      	str	r6, [sp, #0]
 801b116:	68e0      	ldr	r0, [r4, #12]
 801b118:	fb93 f8f8 	sdiv	r8, r3, r8
 801b11c:	4442      	add	r2, r8
 801b11e:	9203      	str	r2, [sp, #12]
 801b120:	682a      	ldr	r2, [r5, #0]
 801b122:	f7ff ff82 	bl	801b02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801b126:	4680      	mov	r8, r0
 801b128:	9600      	str	r6, [sp, #0]
 801b12a:	69a3      	ldr	r3, [r4, #24]
 801b12c:	686a      	ldr	r2, [r5, #4]
 801b12e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801b130:	6920      	ldr	r0, [r4, #16]
 801b132:	f7ff ff7a 	bl	801b02a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801b136:	4440      	add	r0, r8
 801b138:	e7cc      	b.n	801b0d4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801b13a:	bf00      	nop
 801b13c:	20004194 	.word	0x20004194

0801b140 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801b140:	4b07      	ldr	r3, [pc, #28]	; (801b160 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801b142:	b510      	push	{r4, lr}
 801b144:	781b      	ldrb	r3, [r3, #0]
 801b146:	2b01      	cmp	r3, #1
 801b148:	d108      	bne.n	801b15c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801b14a:	4b06      	ldr	r3, [pc, #24]	; (801b164 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801b14c:	880c      	ldrh	r4, [r1, #0]
 801b14e:	881b      	ldrh	r3, [r3, #0]
 801b150:	f9b0 2000 	ldrsh.w	r2, [r0]
 801b154:	3b01      	subs	r3, #1
 801b156:	1b1b      	subs	r3, r3, r4
 801b158:	8003      	strh	r3, [r0, #0]
 801b15a:	800a      	strh	r2, [r1, #0]
 801b15c:	bd10      	pop	{r4, pc}
 801b15e:	bf00      	nop
 801b160:	2000415e 	.word	0x2000415e
 801b164:	20004162 	.word	0x20004162

0801b168 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801b168:	4b0a      	ldr	r3, [pc, #40]	; (801b194 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801b16a:	b510      	push	{r4, lr}
 801b16c:	781b      	ldrb	r3, [r3, #0]
 801b16e:	2b01      	cmp	r3, #1
 801b170:	d10e      	bne.n	801b190 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801b172:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801b176:	8843      	ldrh	r3, [r0, #2]
 801b178:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b17c:	18ca      	adds	r2, r1, r3
 801b17e:	4b06      	ldr	r3, [pc, #24]	; (801b198 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801b180:	8044      	strh	r4, [r0, #2]
 801b182:	881b      	ldrh	r3, [r3, #0]
 801b184:	1a9b      	subs	r3, r3, r2
 801b186:	8003      	strh	r3, [r0, #0]
 801b188:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801b18c:	8081      	strh	r1, [r0, #4]
 801b18e:	80c3      	strh	r3, [r0, #6]
 801b190:	bd10      	pop	{r4, pc}
 801b192:	bf00      	nop
 801b194:	2000415e 	.word	0x2000415e
 801b198:	2000415a 	.word	0x2000415a

0801b19c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801b19c:	4b07      	ldr	r3, [pc, #28]	; (801b1bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801b19e:	b510      	push	{r4, lr}
 801b1a0:	781b      	ldrb	r3, [r3, #0]
 801b1a2:	2b01      	cmp	r3, #1
 801b1a4:	d108      	bne.n	801b1b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801b1a6:	f9b1 3000 	ldrsh.w	r3, [r1]
 801b1aa:	f9b0 4000 	ldrsh.w	r4, [r0]
 801b1ae:	8003      	strh	r3, [r0, #0]
 801b1b0:	8893      	ldrh	r3, [r2, #4]
 801b1b2:	3b01      	subs	r3, #1
 801b1b4:	1b1b      	subs	r3, r3, r4
 801b1b6:	800b      	strh	r3, [r1, #0]
 801b1b8:	bd10      	pop	{r4, pc}
 801b1ba:	bf00      	nop
 801b1bc:	2000415e 	.word	0x2000415e

0801b1c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801b1c0:	4b08      	ldr	r3, [pc, #32]	; (801b1e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801b1c2:	b513      	push	{r0, r1, r4, lr}
 801b1c4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b1c8:	2400      	movs	r4, #0
 801b1ca:	4b07      	ldr	r3, [pc, #28]	; (801b1e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 801b1cc:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b1d0:	466a      	mov	r2, sp
 801b1d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b1d6:	9400      	str	r4, [sp, #0]
 801b1d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b1dc:	f7ff ffde 	bl	801b19c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801b1e0:	b002      	add	sp, #8
 801b1e2:	bd10      	pop	{r4, pc}
 801b1e4:	2000415a 	.word	0x2000415a
 801b1e8:	2000415c 	.word	0x2000415c

0801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801b1ec:	4b0a      	ldr	r3, [pc, #40]	; (801b218 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801b1ee:	460a      	mov	r2, r1
 801b1f0:	b510      	push	{r4, lr}
 801b1f2:	781b      	ldrb	r3, [r3, #0]
 801b1f4:	2b01      	cmp	r3, #1
 801b1f6:	d10d      	bne.n	801b214 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801b1f8:	8881      	ldrh	r1, [r0, #4]
 801b1fa:	8803      	ldrh	r3, [r0, #0]
 801b1fc:	440b      	add	r3, r1
 801b1fe:	4601      	mov	r1, r0
 801b200:	3b01      	subs	r3, #1
 801b202:	f821 3b02 	strh.w	r3, [r1], #2
 801b206:	f7ff ffc9 	bl	801b19c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801b20a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801b20e:	88c2      	ldrh	r2, [r0, #6]
 801b210:	80c3      	strh	r3, [r0, #6]
 801b212:	8082      	strh	r2, [r0, #4]
 801b214:	bd10      	pop	{r4, pc}
 801b216:	bf00      	nop
 801b218:	2000415e 	.word	0x2000415e

0801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801b21c:	4b09      	ldr	r3, [pc, #36]	; (801b244 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801b21e:	b507      	push	{r0, r1, r2, lr}
 801b220:	2100      	movs	r1, #0
 801b222:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b226:	4b08      	ldr	r3, [pc, #32]	; (801b248 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 801b228:	9100      	str	r1, [sp, #0]
 801b22a:	4669      	mov	r1, sp
 801b22c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b230:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b234:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b238:	f7ff ffd8 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b23c:	b003      	add	sp, #12
 801b23e:	f85d fb04 	ldr.w	pc, [sp], #4
 801b242:	bf00      	nop
 801b244:	2000415a 	.word	0x2000415a
 801b248:	2000415c 	.word	0x2000415c

0801b24c <_ZN8touchgfx11Application13requestRedrawEv>:
 801b24c:	4b06      	ldr	r3, [pc, #24]	; (801b268 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801b24e:	2100      	movs	r1, #0
 801b250:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b254:	4b05      	ldr	r3, [pc, #20]	; (801b26c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801b256:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801b25a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b25e:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 801b262:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 801b266:	4770      	bx	lr
 801b268:	2000415a 	.word	0x2000415a
 801b26c:	2000415c 	.word	0x2000415c

0801b270 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801b270:	4b03      	ldr	r3, [pc, #12]	; (801b280 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801b272:	6818      	ldr	r0, [r3, #0]
 801b274:	b110      	cbz	r0, 801b27c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801b276:	6803      	ldr	r3, [r0, #0]
 801b278:	699b      	ldr	r3, [r3, #24]
 801b27a:	4718      	bx	r3
 801b27c:	4770      	bx	lr
 801b27e:	bf00      	nop
 801b280:	200041c4 	.word	0x200041c4

0801b284 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801b284:	4770      	bx	lr
	...

0801b288 <_ZN8touchgfx11Application4drawEv>:
 801b288:	4b09      	ldr	r3, [pc, #36]	; (801b2b0 <_ZN8touchgfx11Application4drawEv+0x28>)
 801b28a:	b507      	push	{r0, r1, r2, lr}
 801b28c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801b290:	2100      	movs	r1, #0
 801b292:	4b08      	ldr	r3, [pc, #32]	; (801b2b4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801b294:	9100      	str	r1, [sp, #0]
 801b296:	4669      	mov	r1, sp
 801b298:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b29c:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b2a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b2a4:	6803      	ldr	r3, [r0, #0]
 801b2a6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801b2a8:	4798      	blx	r3
 801b2aa:	b003      	add	sp, #12
 801b2ac:	f85d fb04 	ldr.w	pc, [sp], #4
 801b2b0:	2000415a 	.word	0x2000415a
 801b2b4:	2000415c 	.word	0x2000415c

0801b2b8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801b2b8:	4b03      	ldr	r3, [pc, #12]	; (801b2c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801b2ba:	6818      	ldr	r0, [r3, #0]
 801b2bc:	b110      	cbz	r0, 801b2c4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801b2be:	6803      	ldr	r3, [r0, #0]
 801b2c0:	69db      	ldr	r3, [r3, #28]
 801b2c2:	4718      	bx	r3
 801b2c4:	4770      	bx	lr
 801b2c6:	bf00      	nop
 801b2c8:	200041c4 	.word	0x200041c4

0801b2cc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801b2cc:	4b03      	ldr	r3, [pc, #12]	; (801b2dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801b2ce:	6818      	ldr	r0, [r3, #0]
 801b2d0:	b110      	cbz	r0, 801b2d8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801b2d2:	6803      	ldr	r3, [r0, #0]
 801b2d4:	6a1b      	ldr	r3, [r3, #32]
 801b2d6:	4718      	bx	r3
 801b2d8:	4770      	bx	lr
 801b2da:	bf00      	nop
 801b2dc:	200041c4 	.word	0x200041c4

0801b2e0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 801b2e0:	4b03      	ldr	r3, [pc, #12]	; (801b2f0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801b2e2:	6818      	ldr	r0, [r3, #0]
 801b2e4:	b110      	cbz	r0, 801b2ec <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801b2e6:	6803      	ldr	r3, [r0, #0]
 801b2e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b2ea:	4718      	bx	r3
 801b2ec:	4770      	bx	lr
 801b2ee:	bf00      	nop
 801b2f0:	200041c4 	.word	0x200041c4

0801b2f4 <_ZN8touchgfx11Application15handleTickEventEv>:
 801b2f4:	b570      	push	{r4, r5, r6, lr}
 801b2f6:	4d34      	ldr	r5, [pc, #208]	; (801b3c8 <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 801b2f8:	4604      	mov	r4, r0
 801b2fa:	6828      	ldr	r0, [r5, #0]
 801b2fc:	b140      	cbz	r0, 801b310 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801b2fe:	7a03      	ldrb	r3, [r0, #8]
 801b300:	b933      	cbnz	r3, 801b310 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801b302:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 801b306:	6803      	ldr	r3, [r0, #0]
 801b308:	689b      	ldr	r3, [r3, #8]
 801b30a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b30e:	4718      	bx	r3
 801b310:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 801b314:	b97b      	cbnz	r3, 801b336 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b316:	b170      	cbz	r0, 801b336 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b318:	7a03      	ldrb	r3, [r0, #8]
 801b31a:	b163      	cbz	r3, 801b336 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801b31c:	4b2b      	ldr	r3, [pc, #172]	; (801b3cc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 801b31e:	6818      	ldr	r0, [r3, #0]
 801b320:	b110      	cbz	r0, 801b328 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801b322:	6803      	ldr	r3, [r0, #0]
 801b324:	691b      	ldr	r3, [r3, #16]
 801b326:	4798      	blx	r3
 801b328:	6828      	ldr	r0, [r5, #0]
 801b32a:	6803      	ldr	r3, [r0, #0]
 801b32c:	68db      	ldr	r3, [r3, #12]
 801b32e:	4798      	blx	r3
 801b330:	2301      	movs	r3, #1
 801b332:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 801b336:	2500      	movs	r5, #0
 801b338:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 801b33c:	42a8      	cmp	r0, r5
 801b33e:	dd0c      	ble.n	801b35a <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 801b340:	1963      	adds	r3, r4, r5
 801b342:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801b346:	b132      	cbz	r2, 801b356 <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801b348:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 801b34c:	4413      	add	r3, r2
 801b34e:	6858      	ldr	r0, [r3, #4]
 801b350:	6803      	ldr	r3, [r0, #0]
 801b352:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801b354:	4798      	blx	r3
 801b356:	3501      	adds	r5, #1
 801b358:	e7ee      	b.n	801b338 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801b35a:	2300      	movs	r3, #0
 801b35c:	461a      	mov	r2, r3
 801b35e:	4298      	cmp	r0, r3
 801b360:	d114      	bne.n	801b38c <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 801b362:	1d25      	adds	r5, r4, #4
 801b364:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 801b368:	1e48      	subs	r0, r1, #1
 801b36a:	b280      	uxth	r0, r0
 801b36c:	4291      	cmp	r1, r2
 801b36e:	dd24      	ble.n	801b3ba <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 801b370:	4288      	cmp	r0, r1
 801b372:	d2fb      	bcs.n	801b36c <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 801b374:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 801b378:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 801b37c:	3304      	adds	r3, #4
 801b37e:	428b      	cmp	r3, r1
 801b380:	d018      	beq.n	801b3b4 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 801b382:	f853 6f04 	ldr.w	r6, [r3, #4]!
 801b386:	f843 6c04 	str.w	r6, [r3, #-4]
 801b38a:	e7f8      	b.n	801b37e <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 801b38c:	18e1      	adds	r1, r4, r3
 801b38e:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801b392:	b16d      	cbz	r5, 801b3b0 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 801b394:	429a      	cmp	r2, r3
 801b396:	d00a      	beq.n	801b3ae <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 801b398:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801b39c:	4431      	add	r1, r6
 801b39e:	684e      	ldr	r6, [r1, #4]
 801b3a0:	b291      	uxth	r1, r2
 801b3a2:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801b3a6:	604e      	str	r6, [r1, #4]
 801b3a8:	18a1      	adds	r1, r4, r2
 801b3aa:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 801b3ae:	3201      	adds	r2, #1
 801b3b0:	3301      	adds	r3, #1
 801b3b2:	e7d4      	b.n	801b35e <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801b3b4:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 801b3b8:	e7d4      	b.n	801b364 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 801b3ba:	4b04      	ldr	r3, [pc, #16]	; (801b3cc <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 801b3bc:	6818      	ldr	r0, [r3, #0]
 801b3be:	b110      	cbz	r0, 801b3c6 <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 801b3c0:	6803      	ldr	r3, [r0, #0]
 801b3c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801b3c4:	e7a1      	b.n	801b30a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801b3c6:	bd70      	pop	{r4, r5, r6, pc}
 801b3c8:	200041c8 	.word	0x200041c8
 801b3cc:	200041c4 	.word	0x200041c4

0801b3d0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801b3d0:	b570      	push	{r4, r5, r6, lr}
 801b3d2:	4606      	mov	r6, r0
 801b3d4:	460c      	mov	r4, r1
 801b3d6:	b929      	cbnz	r1, 801b3e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 801b3d8:	4b0c      	ldr	r3, [pc, #48]	; (801b40c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 801b3da:	2164      	movs	r1, #100	; 0x64
 801b3dc:	4a0c      	ldr	r2, [pc, #48]	; (801b410 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 801b3de:	480d      	ldr	r0, [pc, #52]	; (801b414 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 801b3e0:	f010 fd82 	bl	802bee8 <__assert_func>
 801b3e4:	2300      	movs	r3, #0
 801b3e6:	4d0c      	ldr	r5, [pc, #48]	; (801b418 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 801b3e8:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801b3ec:	6828      	ldr	r0, [r5, #0]
 801b3ee:	b110      	cbz	r0, 801b3f6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 801b3f0:	6803      	ldr	r3, [r0, #0]
 801b3f2:	695b      	ldr	r3, [r3, #20]
 801b3f4:	4798      	blx	r3
 801b3f6:	602c      	str	r4, [r5, #0]
 801b3f8:	4620      	mov	r0, r4
 801b3fa:	6823      	ldr	r3, [r4, #0]
 801b3fc:	68db      	ldr	r3, [r3, #12]
 801b3fe:	4798      	blx	r3
 801b400:	6833      	ldr	r3, [r6, #0]
 801b402:	4630      	mov	r0, r6
 801b404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b406:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b40a:	4718      	bx	r3
 801b40c:	080313a8 	.word	0x080313a8
 801b410:	08031478 	.word	0x08031478
 801b414:	080313b2 	.word	0x080313b2
 801b418:	200041c4 	.word	0x200041c4

0801b41c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801b41c:	b510      	push	{r4, lr}
 801b41e:	f9b1 4000 	ldrsh.w	r4, [r1]
 801b422:	888a      	ldrh	r2, [r1, #4]
 801b424:	f9b0 3000 	ldrsh.w	r3, [r0]
 801b428:	4422      	add	r2, r4
 801b42a:	b212      	sxth	r2, r2
 801b42c:	4293      	cmp	r3, r2
 801b42e:	da15      	bge.n	801b45c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b430:	8882      	ldrh	r2, [r0, #4]
 801b432:	4413      	add	r3, r2
 801b434:	b21b      	sxth	r3, r3
 801b436:	429c      	cmp	r4, r3
 801b438:	da10      	bge.n	801b45c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b43a:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801b43e:	88c9      	ldrh	r1, [r1, #6]
 801b440:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801b444:	4419      	add	r1, r3
 801b446:	b209      	sxth	r1, r1
 801b448:	428a      	cmp	r2, r1
 801b44a:	da07      	bge.n	801b45c <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801b44c:	88c0      	ldrh	r0, [r0, #6]
 801b44e:	4410      	add	r0, r2
 801b450:	b200      	sxth	r0, r0
 801b452:	4283      	cmp	r3, r0
 801b454:	bfac      	ite	ge
 801b456:	2000      	movge	r0, #0
 801b458:	2001      	movlt	r0, #1
 801b45a:	bd10      	pop	{r4, pc}
 801b45c:	2000      	movs	r0, #0
 801b45e:	e7fc      	b.n	801b45a <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801b460 <_ZNK8touchgfx4Rect8includesERKS0_>:
 801b460:	b570      	push	{r4, r5, r6, lr}
 801b462:	f9b1 4000 	ldrsh.w	r4, [r1]
 801b466:	f9b0 5000 	ldrsh.w	r5, [r0]
 801b46a:	42ac      	cmp	r4, r5
 801b46c:	db18      	blt.n	801b4a0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801b46e:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 801b472:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801b476:	429a      	cmp	r2, r3
 801b478:	db12      	blt.n	801b4a0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801b47a:	8886      	ldrh	r6, [r0, #4]
 801b47c:	4435      	add	r5, r6
 801b47e:	888e      	ldrh	r6, [r1, #4]
 801b480:	4434      	add	r4, r6
 801b482:	b22d      	sxth	r5, r5
 801b484:	b224      	sxth	r4, r4
 801b486:	42a5      	cmp	r5, r4
 801b488:	db0a      	blt.n	801b4a0 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 801b48a:	88c0      	ldrh	r0, [r0, #6]
 801b48c:	4418      	add	r0, r3
 801b48e:	88cb      	ldrh	r3, [r1, #6]
 801b490:	441a      	add	r2, r3
 801b492:	b200      	sxth	r0, r0
 801b494:	b212      	sxth	r2, r2
 801b496:	4290      	cmp	r0, r2
 801b498:	bfb4      	ite	lt
 801b49a:	2000      	movlt	r0, #0
 801b49c:	2001      	movge	r0, #1
 801b49e:	bd70      	pop	{r4, r5, r6, pc}
 801b4a0:	2000      	movs	r0, #0
 801b4a2:	e7fc      	b.n	801b49e <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0801b4a4 <_ZN8touchgfx11Application11getInstanceEv>:
 801b4a4:	4b01      	ldr	r3, [pc, #4]	; (801b4ac <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801b4a6:	6818      	ldr	r0, [r3, #0]
 801b4a8:	4770      	bx	lr
 801b4aa:	bf00      	nop
 801b4ac:	200041d4 	.word	0x200041d4

0801b4b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801b4b0:	2300      	movs	r3, #0
 801b4b2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801b4b6:	30a8      	adds	r0, #168	; 0xa8
 801b4b8:	f820 3c24 	strh.w	r3, [r0, #-36]
 801b4bc:	f802 3b01 	strb.w	r3, [r2], #1
 801b4c0:	4282      	cmp	r2, r0
 801b4c2:	d1fb      	bne.n	801b4bc <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 801b4c4:	4770      	bx	lr

0801b4c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801b4c6:	4603      	mov	r3, r0
 801b4c8:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801b4cc:	2200      	movs	r2, #0
 801b4ce:	801a      	strh	r2, [r3, #0]
 801b4d0:	3308      	adds	r3, #8
 801b4d2:	f823 2c06 	strh.w	r2, [r3, #-6]
 801b4d6:	f823 2c04 	strh.w	r2, [r3, #-4]
 801b4da:	f823 2c02 	strh.w	r2, [r3, #-2]
 801b4de:	428b      	cmp	r3, r1
 801b4e0:	d1f5      	bne.n	801b4ce <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801b4e2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801b4e6:	4770      	bx	lr

0801b4e8 <_ZN8touchgfx11ApplicationC1Ev>:
 801b4e8:	b570      	push	{r4, r5, r6, lr}
 801b4ea:	4b1a      	ldr	r3, [pc, #104]	; (801b554 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 801b4ec:	2500      	movs	r5, #0
 801b4ee:	4604      	mov	r4, r0
 801b4f0:	30a8      	adds	r0, #168	; 0xa8
 801b4f2:	f840 3ca8 	str.w	r3, [r0, #-168]
 801b4f6:	f820 5c24 	strh.w	r5, [r0, #-36]
 801b4fa:	f7ff ffe4 	bl	801b4c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b4fe:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801b502:	f7ff ffe0 	bl	801b4c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801b506:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 801b50a:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801b50e:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801b512:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801b516:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 801b51a:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 801b51e:	490e      	ldr	r1, [pc, #56]	; (801b558 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 801b520:	480e      	ldr	r0, [pc, #56]	; (801b55c <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 801b522:	f00e fda5 	bl	802a070 <CRC_Lock>
 801b526:	4e0e      	ldr	r6, [pc, #56]	; (801b560 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801b528:	4b0e      	ldr	r3, [pc, #56]	; (801b564 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801b52a:	b158      	cbz	r0, 801b544 <_ZN8touchgfx11ApplicationC1Ev+0x5c>
 801b52c:	801d      	strh	r5, [r3, #0]
 801b52e:	2300      	movs	r3, #0
 801b530:	4a0d      	ldr	r2, [pc, #52]	; (801b568 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801b532:	4620      	mov	r0, r4
 801b534:	6013      	str	r3, [r2, #0]
 801b536:	4a0d      	ldr	r2, [pc, #52]	; (801b56c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801b538:	6033      	str	r3, [r6, #0]
 801b53a:	6013      	str	r3, [r2, #0]
 801b53c:	f7ff ffb8 	bl	801b4b0 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801b540:	4620      	mov	r0, r4
 801b542:	bd70      	pop	{r4, r5, r6, pc}
 801b544:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801b548:	2002      	movs	r0, #2
 801b54a:	801a      	strh	r2, [r3, #0]
 801b54c:	6030      	str	r0, [r6, #0]
 801b54e:	f001 fb27 	bl	801cba0 <_ZN8touchgfx6Screen4drawEv>
 801b552:	e7ec      	b.n	801b52e <_ZN8touchgfx11ApplicationC1Ev+0x46>
 801b554:	0803143c 	.word	0x0803143c
 801b558:	b5e8b5cd 	.word	0xb5e8b5cd
 801b55c:	f407a5c2 	.word	0xf407a5c2
 801b560:	200041c4 	.word	0x200041c4
 801b564:	20000044 	.word	0x20000044
 801b568:	200041d4 	.word	0x200041d4
 801b56c:	200041c8 	.word	0x200041c8

0801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801b570:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 801b574:	428b      	cmp	r3, r1
 801b576:	b510      	push	{r4, lr}
 801b578:	d90e      	bls.n	801b598 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 801b57a:	3b01      	subs	r3, #1
 801b57c:	b29b      	uxth	r3, r3
 801b57e:	428b      	cmp	r3, r1
 801b580:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801b584:	d908      	bls.n	801b598 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 801b586:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801b58a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801b58e:	681a      	ldr	r2, [r3, #0]
 801b590:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801b594:	685a      	ldr	r2, [r3, #4]
 801b596:	6062      	str	r2, [r4, #4]
 801b598:	bd10      	pop	{r4, pc}
	...

0801b59c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 801b59c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b59e:	466b      	mov	r3, sp
 801b5a0:	4604      	mov	r4, r0
 801b5a2:	e883 0006 	stmia.w	r3, {r1, r2}
 801b5a6:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 801b5aa:	2a07      	cmp	r2, #7
 801b5ac:	d906      	bls.n	801b5bc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 801b5ae:	4b09      	ldr	r3, [pc, #36]	; (801b5d4 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 801b5b0:	f240 118f 	movw	r1, #399	; 0x18f
 801b5b4:	4a08      	ldr	r2, [pc, #32]	; (801b5d8 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 801b5b6:	4809      	ldr	r0, [pc, #36]	; (801b5dc <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 801b5b8:	f010 fc96 	bl	802bee8 <__assert_func>
 801b5bc:	1c51      	adds	r1, r2, #1
 801b5be:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 801b5c2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 801b5c6:	cb03      	ldmia	r3!, {r0, r1}
 801b5c8:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 801b5cc:	6069      	str	r1, [r5, #4]
 801b5ce:	b003      	add	sp, #12
 801b5d0:	bd30      	pop	{r4, r5, pc}
 801b5d2:	bf00      	nop
 801b5d4:	080313dc 	.word	0x080313dc
 801b5d8:	080314bc 	.word	0x080314bc
 801b5dc:	0803140b 	.word	0x0803140b

0801b5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801b5e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b5e4:	b08d      	sub	sp, #52	; 0x34
 801b5e6:	4683      	mov	fp, r0
 801b5e8:	ac08      	add	r4, sp, #32
 801b5ea:	4620      	mov	r0, r4
 801b5ec:	e884 0006 	stmia.w	r4, {r1, r2}
 801b5f0:	f7fb fa03 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801b5f4:	2800      	cmp	r0, #0
 801b5f6:	d16a      	bne.n	801b6ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801b5f8:	9402      	str	r4, [sp, #8]
 801b5fa:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801b5fe:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801b602:	2400      	movs	r4, #0
 801b604:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 801b608:	9301      	str	r3, [sp, #4]
 801b60a:	36a0      	adds	r6, #160	; 0xa0
 801b60c:	42a5      	cmp	r5, r4
 801b60e:	d00d      	beq.n	801b62c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 801b610:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 801b614:	9802      	ldr	r0, [sp, #8]
 801b616:	f7ff ff23 	bl	801b460 <_ZNK8touchgfx4Rect8includesERKS0_>
 801b61a:	b128      	cbz	r0, 801b628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 801b61c:	1e69      	subs	r1, r5, #1
 801b61e:	9801      	ldr	r0, [sp, #4]
 801b620:	1b09      	subs	r1, r1, r4
 801b622:	b289      	uxth	r1, r1
 801b624:	f7ff ffa4 	bl	801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b628:	3401      	adds	r4, #1
 801b62a:	e7ef      	b.n	801b60c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801b62c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 801b630:	1e7b      	subs	r3, r7, #1
 801b632:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801b636:	9703      	str	r7, [sp, #12]
 801b638:	9300      	str	r3, [sp, #0]
 801b63a:	2400      	movs	r4, #0
 801b63c:	4655      	mov	r5, sl
 801b63e:	9704      	str	r7, [sp, #16]
 801b640:	4626      	mov	r6, r4
 801b642:	9b04      	ldr	r3, [sp, #16]
 801b644:	2b00      	cmp	r3, #0
 801b646:	d078      	beq.n	801b73a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 801b648:	9902      	ldr	r1, [sp, #8]
 801b64a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801b64e:	f7ff fee5 	bl	801b41c <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b652:	b360      	cbz	r0, 801b6ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 801b654:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801b658:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801b65c:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 801b660:	45e6      	cmp	lr, ip
 801b662:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801b666:	db35      	blt.n	801b6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 801b668:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 801b66c:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801b670:	4472      	add	r2, lr
 801b672:	4463      	add	r3, ip
 801b674:	b212      	sxth	r2, r2
 801b676:	b21b      	sxth	r3, r3
 801b678:	429a      	cmp	r2, r3
 801b67a:	dc2b      	bgt.n	801b6d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 801b67c:	fa1f f288 	uxth.w	r2, r8
 801b680:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801b684:	45c1      	cmp	r9, r8
 801b686:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801b68a:	4413      	add	r3, r2
 801b68c:	fa1f fc89 	uxth.w	ip, r9
 801b690:	b29b      	uxth	r3, r3
 801b692:	fa0f fe83 	sxth.w	lr, r3
 801b696:	db0f      	blt.n	801b6b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 801b698:	eba3 030c 	sub.w	r3, r3, ip
 801b69c:	1ac9      	subs	r1, r1, r3
 801b69e:	b209      	sxth	r1, r1
 801b6a0:	2900      	cmp	r1, #0
 801b6a2:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801b6a6:	dd12      	ble.n	801b6ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801b6a8:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 801b6ac:	4604      	mov	r4, r0
 801b6ae:	9b04      	ldr	r3, [sp, #16]
 801b6b0:	3d08      	subs	r5, #8
 801b6b2:	3b01      	subs	r3, #1
 801b6b4:	9304      	str	r3, [sp, #16]
 801b6b6:	e7c4      	b.n	801b642 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 801b6b8:	4461      	add	r1, ip
 801b6ba:	b209      	sxth	r1, r1
 801b6bc:	4571      	cmp	r1, lr
 801b6be:	dc3a      	bgt.n	801b736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801b6c0:	eba2 020c 	sub.w	r2, r2, ip
 801b6c4:	b212      	sxth	r2, r2
 801b6c6:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801b6ca:	2a00      	cmp	r2, #0
 801b6cc:	dcee      	bgt.n	801b6ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 801b6ce:	b00d      	add	sp, #52	; 0x34
 801b6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6d4:	45c1      	cmp	r9, r8
 801b6d6:	db2e      	blt.n	801b736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801b6d8:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 801b6dc:	4499      	add	r9, r3
 801b6de:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801b6e2:	4498      	add	r8, r3
 801b6e4:	fa0f f989 	sxth.w	r9, r9
 801b6e8:	fa0f f888 	sxth.w	r8, r8
 801b6ec:	45c1      	cmp	r9, r8
 801b6ee:	dc22      	bgt.n	801b736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801b6f0:	fa1f f28c 	uxth.w	r2, ip
 801b6f4:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801b6f8:	45e6      	cmp	lr, ip
 801b6fa:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801b6fe:	4413      	add	r3, r2
 801b700:	fa1f f88e 	uxth.w	r8, lr
 801b704:	b29b      	uxth	r3, r3
 801b706:	fa0f f983 	sxth.w	r9, r3
 801b70a:	db0a      	blt.n	801b722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 801b70c:	eba3 0308 	sub.w	r3, r3, r8
 801b710:	1ac9      	subs	r1, r1, r3
 801b712:	b209      	sxth	r1, r1
 801b714:	2900      	cmp	r1, #0
 801b716:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801b71a:	ddd8      	ble.n	801b6ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801b71c:	f8ad 9020 	strh.w	r9, [sp, #32]
 801b720:	e7c4      	b.n	801b6ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 801b722:	4441      	add	r1, r8
 801b724:	b209      	sxth	r1, r1
 801b726:	4549      	cmp	r1, r9
 801b728:	dc05      	bgt.n	801b736 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 801b72a:	eba2 0208 	sub.w	r2, r2, r8
 801b72e:	b212      	sxth	r2, r2
 801b730:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 801b734:	e7c9      	b.n	801b6ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801b736:	4606      	mov	r6, r0
 801b738:	e7b9      	b.n	801b6ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 801b73a:	2c00      	cmp	r4, #0
 801b73c:	f47f af7d 	bne.w	801b63a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801b740:	2e00      	cmp	r6, #0
 801b742:	f000 81dc 	beq.w	801bafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 801b746:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 801b74a:	4655      	mov	r5, sl
 801b74c:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 801b750:	b2b9      	uxth	r1, r7
 801b752:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 801b756:	b2b3      	uxth	r3, r6
 801b758:	9104      	str	r1, [sp, #16]
 801b75a:	9804      	ldr	r0, [sp, #16]
 801b75c:	441a      	add	r2, r3
 801b75e:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801b762:	b292      	uxth	r2, r2
 801b764:	4401      	add	r1, r0
 801b766:	fa0f f882 	sxth.w	r8, r2
 801b76a:	b289      	uxth	r1, r1
 801b76c:	9105      	str	r1, [sp, #20]
 801b76e:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 801b772:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801b776:	9b03      	ldr	r3, [sp, #12]
 801b778:	2b00      	cmp	r3, #0
 801b77a:	d054      	beq.n	801b826 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 801b77c:	9902      	ldr	r1, [sp, #8]
 801b77e:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801b782:	f7ff fe4b 	bl	801b41c <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b786:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801b78a:	b1d8      	cbz	r0, 801b7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 801b78c:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801b790:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801b794:	4576      	cmp	r6, lr
 801b796:	dc26      	bgt.n	801b7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801b798:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801b79c:	44f4      	add	ip, lr
 801b79e:	fa0f fc8c 	sxth.w	ip, ip
 801b7a2:	45e0      	cmp	r8, ip
 801b7a4:	db1f      	blt.n	801b7e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801b7a6:	428f      	cmp	r7, r1
 801b7a8:	fa1f fc81 	uxth.w	ip, r1
 801b7ac:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801b7b0:	dc0f      	bgt.n	801b7d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 801b7b2:	9805      	ldr	r0, [sp, #20]
 801b7b4:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801b7b8:	eba0 0c0c 	sub.w	ip, r0, ip
 801b7bc:	eba1 010c 	sub.w	r1, r1, ip
 801b7c0:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801b7c4:	4620      	mov	r0, r4
 801b7c6:	9903      	ldr	r1, [sp, #12]
 801b7c8:	3d08      	subs	r5, #8
 801b7ca:	4604      	mov	r4, r0
 801b7cc:	3901      	subs	r1, #1
 801b7ce:	9103      	str	r1, [sp, #12]
 801b7d0:	e7cf      	b.n	801b772 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 801b7d2:	4461      	add	r1, ip
 801b7d4:	b209      	sxth	r1, r1
 801b7d6:	4549      	cmp	r1, r9
 801b7d8:	dcf5      	bgt.n	801b7c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801b7da:	9904      	ldr	r1, [sp, #16]
 801b7dc:	eba1 0c0c 	sub.w	ip, r1, ip
 801b7e0:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801b7e4:	e7ee      	b.n	801b7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 801b7e6:	428f      	cmp	r7, r1
 801b7e8:	dced      	bgt.n	801b7c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801b7ea:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801b7ee:	4461      	add	r1, ip
 801b7f0:	b209      	sxth	r1, r1
 801b7f2:	4589      	cmp	r9, r1
 801b7f4:	dbe7      	blt.n	801b7c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801b7f6:	4576      	cmp	r6, lr
 801b7f8:	fa1f fc8e 	uxth.w	ip, lr
 801b7fc:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801b800:	dc08      	bgt.n	801b814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 801b802:	eba2 0c0c 	sub.w	ip, r2, ip
 801b806:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801b80a:	eba1 010c 	sub.w	r1, r1, ip
 801b80e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 801b812:	e7d7      	b.n	801b7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 801b814:	4461      	add	r1, ip
 801b816:	b209      	sxth	r1, r1
 801b818:	4588      	cmp	r8, r1
 801b81a:	dbd4      	blt.n	801b7c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801b81c:	eba3 0c0c 	sub.w	ip, r3, ip
 801b820:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801b824:	e7ce      	b.n	801b7c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 801b826:	2c00      	cmp	r4, #0
 801b828:	f000 8169 	beq.w	801bafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 801b82c:	9b00      	ldr	r3, [sp, #0]
 801b82e:	3301      	adds	r3, #1
 801b830:	f000 8165 	beq.w	801bafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x51e>
 801b834:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801b838:	9802      	ldr	r0, [sp, #8]
 801b83a:	4621      	mov	r1, r4
 801b83c:	f7ff fe10 	bl	801b460 <_ZNK8touchgfx4Rect8includesERKS0_>
 801b840:	b120      	cbz	r0, 801b84c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 801b842:	f8bd 1000 	ldrh.w	r1, [sp]
 801b846:	9801      	ldr	r0, [sp, #4]
 801b848:	f7ff fe92 	bl	801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801b84c:	9902      	ldr	r1, [sp, #8]
 801b84e:	4620      	mov	r0, r4
 801b850:	f7ff fde4 	bl	801b41c <_ZNK8touchgfx4Rect9intersectERKS0_>
 801b854:	2800      	cmp	r0, #0
 801b856:	f000 809b 	beq.w	801b990 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 801b85a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801b85e:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 801b862:	fa1f f288 	uxth.w	r2, r8
 801b866:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 801b86a:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 801b86e:	19d5      	adds	r5, r2, r7
 801b870:	b2a1      	uxth	r1, r4
 801b872:	45a0      	cmp	r8, r4
 801b874:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801b878:	fa1f f985 	uxth.w	r9, r5
 801b87c:	440b      	add	r3, r1
 801b87e:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 801b882:	fa0f f589 	sxth.w	r5, r9
 801b886:	b29b      	uxth	r3, r3
 801b888:	9503      	str	r5, [sp, #12]
 801b88a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801b88e:	9507      	str	r5, [sp, #28]
 801b890:	f340 809d 	ble.w	801b9ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801b894:	1a52      	subs	r2, r2, r1
 801b896:	4584      	cmp	ip, r0
 801b898:	fa0f fe83 	sxth.w	lr, r3
 801b89c:	b292      	uxth	r2, r2
 801b89e:	b215      	sxth	r5, r2
 801b8a0:	dd2f      	ble.n	801b902 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 801b8a2:	9e00      	ldr	r6, [sp, #0]
 801b8a4:	fa1f fc8c 	uxth.w	ip, ip
 801b8a8:	b280      	uxth	r0, r0
 801b8aa:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801b8ae:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 801b8b2:	9e03      	ldr	r6, [sp, #12]
 801b8b4:	ebac 0300 	sub.w	r3, ip, r0
 801b8b8:	448c      	add	ip, r1
 801b8ba:	eba6 060e 	sub.w	r6, r6, lr
 801b8be:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 801b8c2:	b29b      	uxth	r3, r3
 801b8c4:	4470      	add	r0, lr
 801b8c6:	fa0f fc8c 	sxth.w	ip, ip
 801b8ca:	b21c      	sxth	r4, r3
 801b8cc:	b200      	sxth	r0, r0
 801b8ce:	4366      	muls	r6, r4
 801b8d0:	ebac 0000 	sub.w	r0, ip, r0
 801b8d4:	4368      	muls	r0, r5
 801b8d6:	4286      	cmp	r6, r0
 801b8d8:	db09      	blt.n	801b8ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 801b8da:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 801b8de:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801b8e2:	4417      	add	r7, r2
 801b8e4:	f8ad 3020 	strh.w	r3, [sp, #32]
 801b8e8:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801b8ec:	e685      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801b8ee:	440b      	add	r3, r1
 801b8f0:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 801b8f4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801b8f8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801b8fc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b900:	e67b      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801b902:	9e03      	ldr	r6, [sp, #12]
 801b904:	45b6      	cmp	lr, r6
 801b906:	da28      	bge.n	801b95a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 801b908:	9b00      	ldr	r3, [sp, #0]
 801b90a:	eba6 060e 	sub.w	r6, r6, lr
 801b90e:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 801b912:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 801b916:	eb04 030c 	add.w	r3, r4, ip
 801b91a:	fa1f f883 	uxth.w	r8, r3
 801b91e:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 801b922:	4403      	add	r3, r0
 801b924:	fa0f f988 	sxth.w	r9, r8
 801b928:	eba0 000c 	sub.w	r0, r0, ip
 801b92c:	eba3 0308 	sub.w	r3, r3, r8
 801b930:	4368      	muls	r0, r5
 801b932:	b29b      	uxth	r3, r3
 801b934:	fa0f f883 	sxth.w	r8, r3
 801b938:	fb08 f606 	mul.w	r6, r8, r6
 801b93c:	42b0      	cmp	r0, r6
 801b93e:	dc06      	bgt.n	801b94e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 801b940:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 801b944:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 801b948:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 801b94c:	e7c9      	b.n	801b8e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 801b94e:	4423      	add	r3, r4
 801b950:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 801b954:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801b958:	e64f      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801b95a:	eba3 0309 	sub.w	r3, r3, r9
 801b95e:	9807      	ldr	r0, [sp, #28]
 801b960:	b29b      	uxth	r3, r3
 801b962:	2806      	cmp	r0, #6
 801b964:	fa0f fc83 	sxth.w	ip, r3
 801b968:	d818      	bhi.n	801b99c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 801b96a:	4652      	mov	r2, sl
 801b96c:	ab0a      	add	r3, sp, #40	; 0x28
 801b96e:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 801b972:	6851      	ldr	r1, [r2, #4]
 801b974:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 801b978:	c303      	stmia	r3!, {r0, r1}
 801b97a:	9b03      	ldr	r3, [sp, #12]
 801b97c:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 801b980:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801b984:	ab0a      	add	r3, sp, #40	; 0x28
 801b986:	9801      	ldr	r0, [sp, #4]
 801b988:	e893 0006 	ldmia.w	r3, {r1, r2}
 801b98c:	f7ff fe06 	bl	801b59c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801b990:	9b00      	ldr	r3, [sp, #0]
 801b992:	f1aa 0a08 	sub.w	sl, sl, #8
 801b996:	3b01      	subs	r3, #1
 801b998:	9300      	str	r3, [sp, #0]
 801b99a:	e747      	b.n	801b82c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801b99c:	9800      	ldr	r0, [sp, #0]
 801b99e:	45ac      	cmp	ip, r5
 801b9a0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801b9a4:	db0c      	blt.n	801b9c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 801b9a6:	4417      	add	r7, r2
 801b9a8:	4458      	add	r0, fp
 801b9aa:	f8ad 4020 	strh.w	r4, [sp, #32]
 801b9ae:	b2bf      	uxth	r7, r7
 801b9b0:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 801b9b4:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 801b9b8:	440f      	add	r7, r1
 801b9ba:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 801b9be:	e61c      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801b9c0:	4458      	add	r0, fp
 801b9c2:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 801b9c6:	443b      	add	r3, r7
 801b9c8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 801b9cc:	e615      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801b9ce:	fa1f f18c 	uxth.w	r1, ip
 801b9d2:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 801b9d6:	b282      	uxth	r2, r0
 801b9d8:	4584      	cmp	ip, r0
 801b9da:	eb01 0e05 	add.w	lr, r1, r5
 801b9de:	9204      	str	r2, [sp, #16]
 801b9e0:	fa1f fe8e 	uxth.w	lr, lr
 801b9e4:	9e04      	ldr	r6, [sp, #16]
 801b9e6:	fa0f f28e 	sxth.w	r2, lr
 801b9ea:	9205      	str	r2, [sp, #20]
 801b9ec:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 801b9f0:	4432      	add	r2, r6
 801b9f2:	b292      	uxth	r2, r2
 801b9f4:	9206      	str	r2, [sp, #24]
 801b9f6:	da26      	bge.n	801ba46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 801b9f8:	eba3 0309 	sub.w	r3, r3, r9
 801b9fc:	eba2 020e 	sub.w	r2, r2, lr
 801ba00:	eba0 000c 	sub.w	r0, r0, ip
 801ba04:	eba4 0408 	sub.w	r4, r4, r8
 801ba08:	b29b      	uxth	r3, r3
 801ba0a:	b292      	uxth	r2, r2
 801ba0c:	fa0f fa83 	sxth.w	sl, r3
 801ba10:	b211      	sxth	r1, r2
 801ba12:	fb0a f000 	mul.w	r0, sl, r0
 801ba16:	434c      	muls	r4, r1
 801ba18:	42a0      	cmp	r0, r4
 801ba1a:	9800      	ldr	r0, [sp, #0]
 801ba1c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801ba20:	dc06      	bgt.n	801ba30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 801ba22:	4458      	add	r0, fp
 801ba24:	9a05      	ldr	r2, [sp, #20]
 801ba26:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 801ba2a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 801ba2e:	e7ca      	b.n	801b9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 801ba30:	eb0b 0300 	add.w	r3, fp, r0
 801ba34:	9903      	ldr	r1, [sp, #12]
 801ba36:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 801ba3a:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 801ba3e:	442a      	add	r2, r5
 801ba40:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801ba44:	e5d9      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801ba46:	9e04      	ldr	r6, [sp, #16]
 801ba48:	9a03      	ldr	r2, [sp, #12]
 801ba4a:	1b89      	subs	r1, r1, r6
 801ba4c:	b21e      	sxth	r6, r3
 801ba4e:	b289      	uxth	r1, r1
 801ba50:	4296      	cmp	r6, r2
 801ba52:	fa0f fc81 	sxth.w	ip, r1
 801ba56:	dd25      	ble.n	801baa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c4>
 801ba58:	eba3 0309 	sub.w	r3, r3, r9
 801ba5c:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 801ba60:	9e05      	ldr	r6, [sp, #20]
 801ba62:	eba4 0408 	sub.w	r4, r4, r8
 801ba66:	b29b      	uxth	r3, r3
 801ba68:	eba6 0902 	sub.w	r9, r6, r2
 801ba6c:	fb0c f404 	mul.w	r4, ip, r4
 801ba70:	b218      	sxth	r0, r3
 801ba72:	9a00      	ldr	r2, [sp, #0]
 801ba74:	fb00 f909 	mul.w	r9, r0, r9
 801ba78:	00d2      	lsls	r2, r2, #3
 801ba7a:	454c      	cmp	r4, r9
 801ba7c:	db03      	blt.n	801ba86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a6>
 801ba7e:	445a      	add	r2, fp
 801ba80:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 801ba84:	e79f      	b.n	801b9c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 801ba86:	eb0b 0302 	add.w	r3, fp, r2
 801ba8a:	9a03      	ldr	r2, [sp, #12]
 801ba8c:	4429      	add	r1, r5
 801ba8e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801ba92:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 801ba96:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801ba9a:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801ba9e:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801baa2:	e5aa      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801baa4:	9b06      	ldr	r3, [sp, #24]
 801baa6:	9c07      	ldr	r4, [sp, #28]
 801baa8:	eba3 020e 	sub.w	r2, r3, lr
 801baac:	2c06      	cmp	r4, #6
 801baae:	b292      	uxth	r2, r2
 801bab0:	b213      	sxth	r3, r2
 801bab2:	d80d      	bhi.n	801bad0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f0>
 801bab4:	4651      	mov	r1, sl
 801bab6:	aa0a      	add	r2, sp, #40	; 0x28
 801bab8:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 801babc:	6849      	ldr	r1, [r1, #4]
 801babe:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 801bac2:	9b05      	ldr	r3, [sp, #20]
 801bac4:	c203      	stmia	r2!, {r0, r1}
 801bac6:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 801baca:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 801bace:	e759      	b.n	801b984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 801bad0:	9c00      	ldr	r4, [sp, #0]
 801bad2:	4563      	cmp	r3, ip
 801bad4:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801bad8:	db0d      	blt.n	801baf6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x516>
 801bada:	4429      	add	r1, r5
 801badc:	9a04      	ldr	r2, [sp, #16]
 801bade:	445c      	add	r4, fp
 801bae0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801bae4:	b289      	uxth	r1, r1
 801bae6:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 801baea:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 801baee:	4411      	add	r1, r2
 801baf0:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 801baf4:	e581      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801baf6:	445c      	add	r4, fp
 801baf8:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 801bafc:	e79f      	b.n	801ba3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 801bafe:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 801bb02:	2f07      	cmp	r7, #7
 801bb04:	d806      	bhi.n	801bb14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
 801bb06:	ab08      	add	r3, sp, #32
 801bb08:	9801      	ldr	r0, [sp, #4]
 801bb0a:	e893 0006 	ldmia.w	r3, {r1, r2}
 801bb0e:	f7ff fd45 	bl	801b59c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801bb12:	e5dc      	b.n	801b6ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 801bb14:	f107 39ff 	add.w	r9, r7, #4294967295
 801bb18:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801bb1c:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 801bb20:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801bb24:	f04f 35ff 	mov.w	r5, #4294967295
 801bb28:	2400      	movs	r4, #0
 801bb2a:	9304      	str	r3, [sp, #16]
 801bb2c:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 801bb30:	f109 32ff 	add.w	r2, r9, #4294967295
 801bb34:	9300      	str	r3, [sp, #0]
 801bb36:	4690      	mov	r8, r2
 801bb38:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 801bb3c:	9303      	str	r3, [sp, #12]
 801bb3e:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 801bb42:	f1b8 3fff 	cmp.w	r8, #4294967295
 801bb46:	6818      	ldr	r0, [r3, #0]
 801bb48:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 801bb4c:	9206      	str	r2, [sp, #24]
 801bb4e:	bf16      	itet	ne
 801bb50:	9904      	ldrne	r1, [sp, #16]
 801bb52:	f8dd e008 	ldreq.w	lr, [sp, #8]
 801bb56:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 801bb5a:	9305      	str	r3, [sp, #20]
 801bb5c:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801bb60:	f8be 6004 	ldrh.w	r6, [lr, #4]
 801bb64:	fb16 f601 	smulbb	r6, r6, r1
 801bb68:	6859      	ldr	r1, [r3, #4]
 801bb6a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801bb6e:	4671      	mov	r1, lr
 801bb70:	a80a      	add	r0, sp, #40	; 0x28
 801bb72:	f7fc fe6a 	bl	801884a <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bb76:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801bb7a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801bb7e:	9b03      	ldr	r3, [sp, #12]
 801bb80:	9a00      	ldr	r2, [sp, #0]
 801bb82:	fb11 f100 	smulbb	r1, r1, r0
 801bb86:	2008      	movs	r0, #8
 801bb88:	fb02 6603 	mla	r6, r2, r3, r6
 801bb8c:	1b8e      	subs	r6, r1, r6
 801bb8e:	fb91 f1f0 	sdiv	r1, r1, r0
 801bb92:	42b1      	cmp	r1, r6
 801bb94:	dc21      	bgt.n	801bbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 801bb96:	4556      	cmp	r6, sl
 801bb98:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 801bb9c:	da03      	bge.n	801bba6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c6>
 801bb9e:	b1e6      	cbz	r6, 801bbda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fa>
 801bba0:	46b2      	mov	sl, r6
 801bba2:	4645      	mov	r5, r8
 801bba4:	464c      	mov	r4, r9
 801bba6:	f108 38ff 	add.w	r8, r8, #4294967295
 801bbaa:	f118 0f02 	cmn.w	r8, #2
 801bbae:	d1c8      	bne.n	801bb42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x562>
 801bbb0:	f1b2 3fff 	cmp.w	r2, #4294967295
 801bbb4:	f1a7 0708 	sub.w	r7, r7, #8
 801bbb8:	4691      	mov	r9, r2
 801bbba:	d1b7      	bne.n	801bb2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
 801bbbc:	9b01      	ldr	r3, [sp, #4]
 801bbbe:	b2a6      	uxth	r6, r4
 801bbc0:	00e4      	lsls	r4, r4, #3
 801bbc2:	1918      	adds	r0, r3, r4
 801bbc4:	1c6b      	adds	r3, r5, #1
 801bbc6:	d10b      	bne.n	801bbe0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x600>
 801bbc8:	4601      	mov	r1, r0
 801bbca:	9802      	ldr	r0, [sp, #8]
 801bbcc:	f7fc fe3d 	bl	801884a <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bbd0:	4631      	mov	r1, r6
 801bbd2:	9801      	ldr	r0, [sp, #4]
 801bbd4:	f7ff fccc 	bl	801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801bbd8:	e50f      	b.n	801b5fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 801bbda:	4645      	mov	r5, r8
 801bbdc:	464c      	mov	r4, r9
 801bbde:	e7ed      	b.n	801bbbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5dc>
 801bbe0:	9b01      	ldr	r3, [sp, #4]
 801bbe2:	00ed      	lsls	r5, r5, #3
 801bbe4:	445c      	add	r4, fp
 801bbe6:	1959      	adds	r1, r3, r5
 801bbe8:	445d      	add	r5, fp
 801bbea:	f7fc fe2e 	bl	801884a <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801bbee:	9b02      	ldr	r3, [sp, #8]
 801bbf0:	cb03      	ldmia	r3!, {r0, r1}
 801bbf2:	9b02      	ldr	r3, [sp, #8]
 801bbf4:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 801bbf8:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 801bbfc:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 801bc00:	6861      	ldr	r1, [r4, #4]
 801bc02:	c303      	stmia	r3!, {r0, r1}
 801bc04:	e7e4      	b.n	801bbd0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
	...

0801bc08 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801bc08:	4b1d      	ldr	r3, [pc, #116]	; (801bc80 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 801bc0a:	b530      	push	{r4, r5, lr}
 801bc0c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801bc10:	b085      	sub	sp, #20
 801bc12:	4b1c      	ldr	r3, [pc, #112]	; (801bc84 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 801bc14:	460c      	mov	r4, r1
 801bc16:	2100      	movs	r1, #0
 801bc18:	4605      	mov	r5, r0
 801bc1a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801bc1e:	6820      	ldr	r0, [r4, #0]
 801bc20:	9100      	str	r1, [sp, #0]
 801bc22:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bc26:	ab02      	add	r3, sp, #8
 801bc28:	6861      	ldr	r1, [r4, #4]
 801bc2a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801bc2e:	c303      	stmia	r3!, {r0, r1}
 801bc30:	4669      	mov	r1, sp
 801bc32:	a802      	add	r0, sp, #8
 801bc34:	f7fa fe9e 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801bc38:	ab02      	add	r3, sp, #8
 801bc3a:	cb03      	ldmia	r3!, {r0, r1}
 801bc3c:	4b12      	ldr	r3, [pc, #72]	; (801bc88 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 801bc3e:	6020      	str	r0, [r4, #0]
 801bc40:	6818      	ldr	r0, [r3, #0]
 801bc42:	6061      	str	r1, [r4, #4]
 801bc44:	b138      	cbz	r0, 801bc56 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 801bc46:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 801bc4a:	b133      	cbz	r3, 801bc5a <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 801bc4c:	6821      	ldr	r1, [r4, #0]
 801bc4e:	4628      	mov	r0, r5
 801bc50:	6862      	ldr	r2, [r4, #4]
 801bc52:	f7ff fcc5 	bl	801b5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801bc56:	b005      	add	sp, #20
 801bc58:	bd30      	pop	{r4, r5, pc}
 801bc5a:	6803      	ldr	r3, [r0, #0]
 801bc5c:	4621      	mov	r1, r4
 801bc5e:	689b      	ldr	r3, [r3, #8]
 801bc60:	4798      	blx	r3
 801bc62:	4b0a      	ldr	r3, [pc, #40]	; (801bc8c <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 801bc64:	6818      	ldr	r0, [r3, #0]
 801bc66:	b118      	cbz	r0, 801bc70 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 801bc68:	6803      	ldr	r3, [r0, #0]
 801bc6a:	4621      	mov	r1, r4
 801bc6c:	689b      	ldr	r3, [r3, #8]
 801bc6e:	4798      	blx	r3
 801bc70:	4b07      	ldr	r3, [pc, #28]	; (801bc90 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 801bc72:	4621      	mov	r1, r4
 801bc74:	6818      	ldr	r0, [r3, #0]
 801bc76:	6803      	ldr	r3, [r0, #0]
 801bc78:	695b      	ldr	r3, [r3, #20]
 801bc7a:	4798      	blx	r3
 801bc7c:	e7eb      	b.n	801bc56 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 801bc7e:	bf00      	nop
 801bc80:	2000415a 	.word	0x2000415a
 801bc84:	2000415c 	.word	0x2000415c
 801bc88:	200041c4 	.word	0x200041c4
 801bc8c:	200041c0 	.word	0x200041c0
 801bc90:	20004168 	.word	0x20004168

0801bc94 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 801bc94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc98:	4604      	mov	r4, r0
 801bc9a:	b09b      	sub	sp, #108	; 0x6c
 801bc9c:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 801bca0:	b129      	cbz	r1, 801bcae <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 801bca2:	2300      	movs	r3, #0
 801bca4:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801bca8:	b01b      	add	sp, #108	; 0x6c
 801bcaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcae:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 801bcb2:	4630      	mov	r0, r6
 801bcb4:	f7fa fea1 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801bcb8:	4605      	mov	r5, r0
 801bcba:	b940      	cbnz	r0, 801bcce <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 801bcbc:	4620      	mov	r0, r4
 801bcbe:	e896 0006 	ldmia.w	r6, {r1, r2}
 801bcc2:	f7ff fc8d 	bl	801b5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801bcc6:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801bcca:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801bcce:	4ba6      	ldr	r3, [pc, #664]	; (801bf68 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d4>)
 801bcd0:	681b      	ldr	r3, [r3, #0]
 801bcd2:	b33b      	cbz	r3, 801bd24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 801bcd4:	4da5      	ldr	r5, [pc, #660]	; (801bf6c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 801bcd6:	4628      	mov	r0, r5
 801bcd8:	f7fa fe8f 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801bcdc:	4606      	mov	r6, r0
 801bcde:	bb08      	cbnz	r0, 801bd24 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 801bce0:	4628      	mov	r0, r5
 801bce2:	f7ff fa41 	bl	801b168 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801bce6:	6829      	ldr	r1, [r5, #0]
 801bce8:	686a      	ldr	r2, [r5, #4]
 801bcea:	4620      	mov	r0, r4
 801bcec:	f7ff fc78 	bl	801b5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801bcf0:	802e      	strh	r6, [r5, #0]
 801bcf2:	806e      	strh	r6, [r5, #2]
 801bcf4:	80ae      	strh	r6, [r5, #4]
 801bcf6:	80ee      	strh	r6, [r5, #6]
 801bcf8:	4f9d      	ldr	r7, [pc, #628]	; (801bf70 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 801bcfa:	a809      	add	r0, sp, #36	; 0x24
 801bcfc:	f7ff fbe3 	bl	801b4c6 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801bd00:	883d      	ldrh	r5, [r7, #0]
 801bd02:	462e      	mov	r6, r5
 801bd04:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801bd08:	42b3      	cmp	r3, r6
 801bd0a:	d910      	bls.n	801bd2e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 801bd0c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801bd10:	3601      	adds	r6, #1
 801bd12:	a809      	add	r0, sp, #36	; 0x24
 801bd14:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 801bd18:	b2b6      	uxth	r6, r6
 801bd1a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 801bd1e:	f7ff fc3d 	bl	801b59c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801bd22:	e7ef      	b.n	801bd04 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 801bd24:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801bd28:	2b00      	cmp	r3, #0
 801bd2a:	d1e5      	bne.n	801bcf8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 801bd2c:	e7bc      	b.n	801bca8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 801bd2e:	462e      	mov	r6, r5
 801bd30:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801bd34:	42b3      	cmp	r3, r6
 801bd36:	d90b      	bls.n	801bd50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 801bd38:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801bd3c:	3601      	adds	r6, #1
 801bd3e:	4620      	mov	r0, r4
 801bd40:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 801bd44:	b2b6      	uxth	r6, r6
 801bd46:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801bd4a:	f7ff fc49 	bl	801b5e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801bd4e:	e7ef      	b.n	801bd30 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 801bd50:	4a88      	ldr	r2, [pc, #544]	; (801bf74 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 801bd52:	6813      	ldr	r3, [r2, #0]
 801bd54:	4690      	mov	r8, r2
 801bd56:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801bd5a:	2b01      	cmp	r3, #1
 801bd5c:	f040 8093 	bne.w	801be86 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f2>
 801bd60:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801bd64:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 801bd68:	f04f 0900 	mov.w	r9, #0
 801bd6c:	33aa      	adds	r3, #170	; 0xaa
 801bd6e:	42a8      	cmp	r0, r5
 801bd70:	f103 0308 	add.w	r3, r3, #8
 801bd74:	dd0a      	ble.n	801bd8c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 801bd76:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 801bd7a:	3501      	adds	r5, #1
 801bd7c:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 801bd80:	440a      	add	r2, r1
 801bd82:	b212      	sxth	r2, r2
 801bd84:	4591      	cmp	r9, r2
 801bd86:	bfb8      	it	lt
 801bd88:	4691      	movlt	r9, r2
 801bd8a:	e7f0      	b.n	801bd6e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 801bd8c:	4b7a      	ldr	r3, [pc, #488]	; (801bf78 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 801bd8e:	4e7b      	ldr	r6, [pc, #492]	; (801bf7c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 801bd90:	881d      	ldrh	r5, [r3, #0]
 801bd92:	2300      	movs	r3, #0
 801bd94:	2d0f      	cmp	r5, #15
 801bd96:	bf8c      	ite	hi
 801bd98:	08ed      	lsrhi	r5, r5, #3
 801bd9a:	2501      	movls	r5, #1
 801bd9c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801bda0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801bda4:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 801bda8:	f8d8 0000 	ldr.w	r0, [r8]
 801bdac:	440b      	add	r3, r1
 801bdae:	6802      	ldr	r2, [r0, #0]
 801bdb0:	b21b      	sxth	r3, r3
 801bdb2:	4599      	cmp	r9, r3
 801bdb4:	dd4a      	ble.n	801be4c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1b8>
 801bdb6:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 801bdba:	4798      	blx	r3
 801bdbc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801bdc0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801bdc4:	4413      	add	r3, r2
 801bdc6:	b21b      	sxth	r3, r3
 801bdc8:	195a      	adds	r2, r3, r5
 801bdca:	4290      	cmp	r0, r2
 801bdcc:	da07      	bge.n	801bdde <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 801bdce:	4581      	cmp	r9, r0
 801bdd0:	dd05      	ble.n	801bdde <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 801bdd2:	4298      	cmp	r0, r3
 801bdd4:	da33      	bge.n	801be3e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801bdd6:	2b00      	cmp	r3, #0
 801bdd8:	dd31      	ble.n	801be3e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 801bdda:	4648      	mov	r0, r9
 801bddc:	e004      	b.n	801bde8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 801bdde:	4298      	cmp	r0, r3
 801bde0:	dbfb      	blt.n	801bdda <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 801bde2:	4548      	cmp	r0, r9
 801bde4:	bfa8      	it	ge
 801bde6:	4648      	movge	r0, r9
 801bde8:	f9b6 2000 	ldrsh.w	r2, [r6]
 801bdec:	2100      	movs	r1, #0
 801bdee:	1ac0      	subs	r0, r0, r3
 801bdf0:	f8b7 a000 	ldrh.w	sl, [r7]
 801bdf4:	f8ad 1014 	strh.w	r1, [sp, #20]
 801bdf8:	f8ad 3016 	strh.w	r3, [sp, #22]
 801bdfc:	f8ad 2018 	strh.w	r2, [sp, #24]
 801be00:	f8ad 001a 	strh.w	r0, [sp, #26]
 801be04:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801be08:	4553      	cmp	r3, sl
 801be0a:	d9c9      	bls.n	801bda0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 801be0c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 801be10:	ab07      	add	r3, sp, #28
 801be12:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801be16:	6851      	ldr	r1, [r2, #4]
 801be18:	c303      	stmia	r3!, {r0, r1}
 801be1a:	a807      	add	r0, sp, #28
 801be1c:	a905      	add	r1, sp, #20
 801be1e:	f7fa fda9 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801be22:	a807      	add	r0, sp, #28
 801be24:	f7fa fde9 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801be28:	b920      	cbnz	r0, 801be34 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 801be2a:	6823      	ldr	r3, [r4, #0]
 801be2c:	a907      	add	r1, sp, #28
 801be2e:	4620      	mov	r0, r4
 801be30:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801be32:	4798      	blx	r3
 801be34:	f10a 0a01 	add.w	sl, sl, #1
 801be38:	fa1f fa8a 	uxth.w	sl, sl
 801be3c:	e7e2      	b.n	801be04 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 801be3e:	f8d8 0000 	ldr.w	r0, [r8]
 801be42:	2101      	movs	r1, #1
 801be44:	6803      	ldr	r3, [r0, #0]
 801be46:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801be48:	4798      	blx	r3
 801be4a:	e7a9      	b.n	801bda0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 801be4c:	69d3      	ldr	r3, [r2, #28]
 801be4e:	4798      	blx	r3
 801be50:	4b4b      	ldr	r3, [pc, #300]	; (801bf80 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 801be52:	781b      	ldrb	r3, [r3, #0]
 801be54:	2b00      	cmp	r3, #0
 801be56:	f43f af27 	beq.w	801bca8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 801be5a:	2300      	movs	r3, #0
 801be5c:	883d      	ldrh	r5, [r7, #0]
 801be5e:	34ea      	adds	r4, #234	; 0xea
 801be60:	f8a4 3040 	strh.w	r3, [r4, #64]	; 0x40
 801be64:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801be68:	42ab      	cmp	r3, r5
 801be6a:	f67f af1d 	bls.w	801bca8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 801be6e:	ab1a      	add	r3, sp, #104	; 0x68
 801be70:	4620      	mov	r0, r4
 801be72:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801be76:	3501      	adds	r5, #1
 801be78:	3b44      	subs	r3, #68	; 0x44
 801be7a:	b2ad      	uxth	r5, r5
 801be7c:	e893 0006 	ldmia.w	r3, {r1, r2}
 801be80:	f7ff fb8c 	bl	801b59c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 801be84:	e7ee      	b.n	801be64 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d0>
 801be86:	2b02      	cmp	r3, #2
 801be88:	f040 813d 	bne.w	801c106 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
 801be8c:	4b3d      	ldr	r3, [pc, #244]	; (801bf84 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 801be8e:	781b      	ldrb	r3, [r3, #0]
 801be90:	2b01      	cmp	r3, #1
 801be92:	d02c      	beq.n	801beee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25a>
 801be94:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 801be98:	883a      	ldrh	r2, [r7, #0]
 801be9a:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 801be9e:	3201      	adds	r2, #1
 801bea0:	b292      	uxth	r2, r2
 801bea2:	2900      	cmp	r1, #0
 801bea4:	d0d4      	beq.n	801be50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 801bea6:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801beaa:	4610      	mov	r0, r2
 801beac:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 801beb0:	f04f 0a00 	mov.w	sl, #0
 801beb4:	441d      	add	r5, r3
 801beb6:	b22d      	sxth	r5, r5
 801beb8:	b283      	uxth	r3, r0
 801beba:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 801bebe:	4299      	cmp	r1, r3
 801bec0:	f240 80c4 	bls.w	801c04c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b8>
 801bec4:	4426      	add	r6, r4
 801bec6:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 801beca:	4684      	mov	ip, r0
 801becc:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 801bed0:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 801bed4:	4573      	cmp	r3, lr
 801bed6:	f340 80a6 	ble.w	801c026 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x392>
 801beda:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 801bede:	4475      	add	r5, lr
 801bee0:	b22d      	sxth	r5, r5
 801bee2:	429d      	cmp	r5, r3
 801bee4:	bfa8      	it	ge
 801bee6:	461d      	movge	r5, r3
 801bee8:	3001      	adds	r0, #1
 801beea:	46e2      	mov	sl, ip
 801beec:	e7e4      	b.n	801beb8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x224>
 801beee:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 801bef2:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 801bef6:	f1bb 0f00 	cmp.w	fp, #0
 801befa:	d0a9      	beq.n	801be50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 801befc:	883b      	ldrh	r3, [r7, #0]
 801befe:	2600      	movs	r6, #0
 801bf00:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 801bf04:	3301      	adds	r3, #1
 801bf06:	b29b      	uxth	r3, r3
 801bf08:	b299      	uxth	r1, r3
 801bf0a:	00f5      	lsls	r5, r6, #3
 801bf0c:	458b      	cmp	fp, r1
 801bf0e:	d93b      	bls.n	801bf88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 801bf10:	4425      	add	r5, r4
 801bf12:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 801bf16:	469c      	mov	ip, r3
 801bf18:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 801bf1c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 801bf20:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801bf24:	4408      	add	r0, r1
 801bf26:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 801bf2a:	4471      	add	r1, lr
 801bf2c:	b200      	sxth	r0, r0
 801bf2e:	b209      	sxth	r1, r1
 801bf30:	4288      	cmp	r0, r1
 801bf32:	da06      	bge.n	801bf42 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ae>
 801bf34:	4586      	cmp	lr, r0
 801bf36:	4672      	mov	r2, lr
 801bf38:	bfb8      	it	lt
 801bf3a:	4602      	movlt	r2, r0
 801bf3c:	3301      	adds	r3, #1
 801bf3e:	4666      	mov	r6, ip
 801bf40:	e7e2      	b.n	801bf08 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x274>
 801bf42:	d10b      	bne.n	801bf5c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2c8>
 801bf44:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 801bf48:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801bf4c:	458c      	cmp	ip, r1
 801bf4e:	bfb4      	ite	lt
 801bf50:	469c      	movlt	ip, r3
 801bf52:	46b4      	movge	ip, r6
 801bf54:	4572      	cmp	r2, lr
 801bf56:	bfb8      	it	lt
 801bf58:	4672      	movlt	r2, lr
 801bf5a:	e7ef      	b.n	801bf3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 801bf5c:	428a      	cmp	r2, r1
 801bf5e:	46b4      	mov	ip, r6
 801bf60:	bfb8      	it	lt
 801bf62:	460a      	movlt	r2, r1
 801bf64:	e7ea      	b.n	801bf3c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 801bf66:	bf00      	nop
 801bf68:	200041c0 	.word	0x200041c0
 801bf6c:	200041cc 	.word	0x200041cc
 801bf70:	20000044 	.word	0x20000044
 801bf74:	20004168 	.word	0x20004168
 801bf78:	2000415c 	.word	0x2000415c
 801bf7c:	2000415a 	.word	0x2000415a
 801bf80:	20004164 	.word	0x20004164
 801bf84:	2000415e 	.word	0x2000415e
 801bf88:	1961      	adds	r1, r4, r5
 801bf8a:	ab07      	add	r3, sp, #28
 801bf8c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801bf90:	6849      	ldr	r1, [r1, #4]
 801bf92:	c303      	stmia	r3!, {r0, r1}
 801bf94:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801bf98:	a807      	add	r0, sp, #28
 801bf9a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801bf9e:	2b13      	cmp	r3, #19
 801bfa0:	440b      	add	r3, r1
 801bfa2:	bfd8      	it	le
 801bfa4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801bfa8:	1a9b      	subs	r3, r3, r2
 801bfaa:	f8ad 201c 	strh.w	r2, [sp, #28]
 801bfae:	f8ad 3020 	strh.w	r3, [sp, #32]
 801bfb2:	f7ff f933 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bfb6:	a807      	add	r0, sp, #28
 801bfb8:	f7fa fd1f 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801bfbc:	2800      	cmp	r0, #0
 801bfbe:	d198      	bne.n	801bef2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 801bfc0:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801bfc4:	4425      	add	r5, r4
 801bfc6:	f8d8 0000 	ldr.w	r0, [r8]
 801bfca:	f1bc 0f14 	cmp.w	ip, #20
 801bfce:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801bfd2:	f8d0 e000 	ldr.w	lr, [r0]
 801bfd6:	bfa8      	it	ge
 801bfd8:	f04f 0c14 	movge.w	ip, #20
 801bfdc:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801bfe0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801bfe4:	fa1f fc8c 	uxth.w	ip, ip
 801bfe8:	f8cd c000 	str.w	ip, [sp]
 801bfec:	f8de a074 	ldr.w	sl, [lr, #116]	; 0x74
 801bff0:	47d0      	blx	sl
 801bff2:	4682      	mov	sl, r0
 801bff4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801bff8:	a807      	add	r0, sp, #28
 801bffa:	f7ff f8b5 	bl	801b168 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801bffe:	6823      	ldr	r3, [r4, #0]
 801c000:	4620      	mov	r0, r4
 801c002:	a907      	add	r1, sp, #28
 801c004:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c006:	4798      	blx	r3
 801c008:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 801c00c:	eba0 000a 	sub.w	r0, r0, sl
 801c010:	b200      	sxth	r0, r0
 801c012:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 801c016:	2800      	cmp	r0, #0
 801c018:	f47f af6b 	bne.w	801bef2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 801c01c:	b2b1      	uxth	r1, r6
 801c01e:	4648      	mov	r0, r9
 801c020:	f7ff faa6 	bl	801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801c024:	e765      	b.n	801bef2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25e>
 801c026:	d10c      	bne.n	801c042 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3ae>
 801c028:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 801c02c:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 801c030:	45b4      	cmp	ip, r6
 801c032:	bfb4      	ite	lt
 801c034:	4684      	movlt	ip, r0
 801c036:	46d4      	movge	ip, sl
 801c038:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 801c03c:	4433      	add	r3, r6
 801c03e:	b21b      	sxth	r3, r3
 801c040:	e74f      	b.n	801bee2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x24e>
 801c042:	4575      	cmp	r5, lr
 801c044:	46d4      	mov	ip, sl
 801c046:	bfa8      	it	ge
 801c048:	4675      	movge	r5, lr
 801c04a:	e74d      	b.n	801bee8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x254>
 801c04c:	eb0b 0006 	add.w	r0, fp, r6
 801c050:	4426      	add	r6, r4
 801c052:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 801c056:	f1b9 0f13 	cmp.w	r9, #19
 801c05a:	bfdc      	itt	le
 801c05c:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 801c060:	444d      	addle	r5, r9
 801c062:	e9cd 1202 	strd	r1, r2, [sp, #8]
 801c066:	bfd8      	it	le
 801c068:	b22d      	sxthle	r5, r5
 801c06a:	f7fa fcc6 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801c06e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801c072:	2800      	cmp	r0, #0
 801c074:	f47f af15 	bne.w	801bea2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x20e>
 801c078:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 801c07c:	fa1f f989 	uxth.w	r9, r9
 801c080:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801c084:	eba5 050c 	sub.w	r5, r5, ip
 801c088:	fa1f f28c 	uxth.w	r2, ip
 801c08c:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 801c090:	eb02 0009 	add.w	r0, r2, r9
 801c094:	2d14      	cmp	r5, #20
 801c096:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 801c09a:	bfa8      	it	ge
 801c09c:	2514      	movge	r5, #20
 801c09e:	b200      	sxth	r0, r0
 801c0a0:	f8ad 101c 	strh.w	r1, [sp, #28]
 801c0a4:	b289      	uxth	r1, r1
 801c0a6:	fa1f fe85 	uxth.w	lr, r5
 801c0aa:	eba0 000c 	sub.w	r0, r0, ip
 801c0ae:	f8ad c01e 	strh.w	ip, [sp, #30]
 801c0b2:	4586      	cmp	lr, r0
 801c0b4:	f8d8 0000 	ldr.w	r0, [r8]
 801c0b8:	f8ad 3020 	strh.w	r3, [sp, #32]
 801c0bc:	b29b      	uxth	r3, r3
 801c0be:	bfb8      	it	lt
 801c0c0:	46f1      	movlt	r9, lr
 801c0c2:	6805      	ldr	r5, [r0, #0]
 801c0c4:	f8cd 9000 	str.w	r9, [sp]
 801c0c8:	6f6d      	ldr	r5, [r5, #116]	; 0x74
 801c0ca:	47a8      	blx	r5
 801c0cc:	6823      	ldr	r3, [r4, #0]
 801c0ce:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801c0d2:	a907      	add	r1, sp, #28
 801c0d4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c0d6:	4620      	mov	r0, r4
 801c0d8:	4798      	blx	r3
 801c0da:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801c0de:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 801c0e2:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 801c0e6:	1a5b      	subs	r3, r3, r1
 801c0e8:	440a      	add	r2, r1
 801c0ea:	b21b      	sxth	r3, r3
 801c0ec:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 801c0f0:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 801c0f4:	2b00      	cmp	r3, #0
 801c0f6:	f47f aecf 	bne.w	801be98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 801c0fa:	fa1f f18a 	uxth.w	r1, sl
 801c0fe:	4658      	mov	r0, fp
 801c100:	f7ff fa36 	bl	801b570 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801c104:	e6c8      	b.n	801be98 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x204>
 801c106:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801c10a:	42ab      	cmp	r3, r5
 801c10c:	f67f aea0 	bls.w	801be50 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1bc>
 801c110:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801c114:	ab07      	add	r3, sp, #28
 801c116:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801c11a:	6851      	ldr	r1, [r2, #4]
 801c11c:	c303      	stmia	r3!, {r0, r1}
 801c11e:	a807      	add	r0, sp, #28
 801c120:	f7fa fc6b 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 801c124:	b920      	cbnz	r0, 801c130 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x49c>
 801c126:	6823      	ldr	r3, [r4, #0]
 801c128:	a907      	add	r1, sp, #28
 801c12a:	4620      	mov	r0, r4
 801c12c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c12e:	4798      	blx	r3
 801c130:	3501      	adds	r5, #1
 801c132:	b2ad      	uxth	r5, r5
 801c134:	e7e7      	b.n	801c106 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x472>
 801c136:	bf00      	nop

0801c138 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801c138:	4b03      	ldr	r3, [pc, #12]	; (801c148 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801c13a:	2200      	movs	r2, #0
 801c13c:	801a      	strh	r2, [r3, #0]
 801c13e:	805a      	strh	r2, [r3, #2]
 801c140:	809a      	strh	r2, [r3, #4]
 801c142:	80da      	strh	r2, [r3, #6]
 801c144:	4770      	bx	lr
 801c146:	bf00      	nop
 801c148:	200041cc 	.word	0x200041cc

0801c14c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801c14c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c150:	b099      	sub	sp, #100	; 0x64
 801c152:	4607      	mov	r7, r0
 801c154:	4614      	mov	r4, r2
 801c156:	461d      	mov	r5, r3
 801c158:	a802      	add	r0, sp, #8
 801c15a:	468a      	mov	sl, r1
 801c15c:	f000 fe6b 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801c160:	683b      	ldr	r3, [r7, #0]
 801c162:	4638      	mov	r0, r7
 801c164:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801c168:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c16a:	4798      	blx	r3
 801c16c:	462a      	mov	r2, r5
 801c16e:	2500      	movs	r5, #0
 801c170:	4621      	mov	r1, r4
 801c172:	4603      	mov	r3, r0
 801c174:	a802      	add	r0, sp, #8
 801c176:	462c      	mov	r4, r5
 801c178:	46a9      	mov	r9, r5
 801c17a:	46a8      	mov	r8, r5
 801c17c:	f000 fea0 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801c180:	2300      	movs	r3, #0
 801c182:	9301      	str	r3, [sp, #4]
 801c184:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801c188:	429c      	cmp	r4, r3
 801c18a:	d002      	beq.n	801c192 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x46>
 801c18c:	455c      	cmp	r4, fp
 801c18e:	bf18      	it	ne
 801c190:	4625      	movne	r5, r4
 801c192:	ab01      	add	r3, sp, #4
 801c194:	463a      	mov	r2, r7
 801c196:	4651      	mov	r1, sl
 801c198:	a802      	add	r0, sp, #8
 801c19a:	f001 f98b 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c19e:	4604      	mov	r4, r0
 801c1a0:	b108      	cbz	r0, 801c1a6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5a>
 801c1a2:	280a      	cmp	r0, #10
 801c1a4:	d10a      	bne.n	801c1bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>
 801c1a6:	45c1      	cmp	r9, r8
 801c1a8:	bf38      	it	cc
 801c1aa:	46c1      	movcc	r9, r8
 801c1ac:	f04f 0800 	mov.w	r8, #0
 801c1b0:	2c00      	cmp	r4, #0
 801c1b2:	d1e5      	bne.n	801c180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 801c1b4:	4648      	mov	r0, r9
 801c1b6:	b019      	add	sp, #100	; 0x64
 801c1b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c1bc:	9a01      	ldr	r2, [sp, #4]
 801c1be:	2a00      	cmp	r2, #0
 801c1c0:	d0de      	beq.n	801c180 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x34>
 801c1c2:	7b56      	ldrb	r6, [r2, #13]
 801c1c4:	4629      	mov	r1, r5
 801c1c6:	683b      	ldr	r3, [r7, #0]
 801c1c8:	0076      	lsls	r6, r6, #1
 801c1ca:	8894      	ldrh	r4, [r2, #4]
 801c1cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c1ce:	f406 7080 	and.w	r0, r6, #256	; 0x100
 801c1d2:	7a96      	ldrb	r6, [r2, #10]
 801c1d4:	4306      	orrs	r6, r0
 801c1d6:	4638      	mov	r0, r7
 801c1d8:	4798      	blx	r3
 801c1da:	4430      	add	r0, r6
 801c1dc:	4480      	add	r8, r0
 801c1de:	fa1f f888 	uxth.w	r8, r8
 801c1e2:	e7e5      	b.n	801c1b0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x64>

0801c1e4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801c1e4:	b508      	push	{r3, lr}
 801c1e6:	6803      	ldr	r3, [r0, #0]
 801c1e8:	68db      	ldr	r3, [r3, #12]
 801c1ea:	4798      	blx	r3
 801c1ec:	b128      	cbz	r0, 801c1fa <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801c1ee:	7b43      	ldrb	r3, [r0, #13]
 801c1f0:	7a80      	ldrb	r0, [r0, #10]
 801c1f2:	005b      	lsls	r3, r3, #1
 801c1f4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801c1f8:	4318      	orrs	r0, r3
 801c1fa:	bd08      	pop	{r3, pc}

0801c1fc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801c1fc:	b40e      	push	{r1, r2, r3}
 801c1fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c200:	b098      	sub	sp, #96	; 0x60
 801c202:	4605      	mov	r5, r0
 801c204:	ab1d      	add	r3, sp, #116	; 0x74
 801c206:	a802      	add	r0, sp, #8
 801c208:	ae18      	add	r6, sp, #96	; 0x60
 801c20a:	f853 4b04 	ldr.w	r4, [r3], #4
 801c20e:	9300      	str	r3, [sp, #0]
 801c210:	f000 fe11 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801c214:	682b      	ldr	r3, [r5, #0]
 801c216:	4628      	mov	r0, r5
 801c218:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c21a:	4798      	blx	r3
 801c21c:	4621      	mov	r1, r4
 801c21e:	2400      	movs	r4, #0
 801c220:	4603      	mov	r3, r0
 801c222:	9a00      	ldr	r2, [sp, #0]
 801c224:	a802      	add	r0, sp, #8
 801c226:	f000 fe4b 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801c22a:	f846 4d5c 	str.w	r4, [r6, #-92]!
 801c22e:	462a      	mov	r2, r5
 801c230:	4633      	mov	r3, r6
 801c232:	4621      	mov	r1, r4
 801c234:	a802      	add	r0, sp, #8
 801c236:	f001 f93d 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c23a:	b300      	cbz	r0, 801c27e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801c23c:	280a      	cmp	r0, #10
 801c23e:	d01a      	beq.n	801c276 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
 801c240:	9f01      	ldr	r7, [sp, #4]
 801c242:	b1c7      	cbz	r7, 801c276 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x7a>
 801c244:	7b78      	ldrb	r0, [r7, #13]
 801c246:	7a3b      	ldrb	r3, [r7, #8]
 801c248:	00c1      	lsls	r1, r0, #3
 801c24a:	88aa      	ldrh	r2, [r5, #4]
 801c24c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801c250:	4319      	orrs	r1, r3
 801c252:	0643      	lsls	r3, r0, #25
 801c254:	ea4f 1000 	mov.w	r0, r0, lsl #4
 801c258:	bf48      	it	mi
 801c25a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801c25e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801c262:	bf48      	it	mi
 801c264:	b219      	sxthmi	r1, r3
 801c266:	79fb      	ldrb	r3, [r7, #7]
 801c268:	4303      	orrs	r3, r0
 801c26a:	4413      	add	r3, r2
 801c26c:	1a5b      	subs	r3, r3, r1
 801c26e:	b29b      	uxth	r3, r3
 801c270:	42a3      	cmp	r3, r4
 801c272:	bfc8      	it	gt
 801c274:	b21c      	sxthgt	r4, r3
 801c276:	4633      	mov	r3, r6
 801c278:	462a      	mov	r2, r5
 801c27a:	2100      	movs	r1, #0
 801c27c:	e7da      	b.n	801c234 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x38>
 801c27e:	b2a0      	uxth	r0, r4
 801c280:	b018      	add	sp, #96	; 0x60
 801c282:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801c286:	b003      	add	sp, #12
 801c288:	4770      	bx	lr

0801c28a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801c28a:	b40e      	push	{r1, r2, r3}
 801c28c:	b530      	push	{r4, r5, lr}
 801c28e:	b098      	sub	sp, #96	; 0x60
 801c290:	4604      	mov	r4, r0
 801c292:	ab1b      	add	r3, sp, #108	; 0x6c
 801c294:	a802      	add	r0, sp, #8
 801c296:	f853 5b04 	ldr.w	r5, [r3], #4
 801c29a:	9301      	str	r3, [sp, #4]
 801c29c:	f000 fdcb 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801c2a0:	6823      	ldr	r3, [r4, #0]
 801c2a2:	4620      	mov	r0, r4
 801c2a4:	2401      	movs	r4, #1
 801c2a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c2a8:	4798      	blx	r3
 801c2aa:	9a01      	ldr	r2, [sp, #4]
 801c2ac:	4603      	mov	r3, r0
 801c2ae:	4629      	mov	r1, r5
 801c2b0:	a802      	add	r0, sp, #8
 801c2b2:	f000 fe05 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801c2b6:	a802      	add	r0, sp, #8
 801c2b8:	f001 f9f4 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801c2bc:	b2a3      	uxth	r3, r4
 801c2be:	b138      	cbz	r0, 801c2d0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x46>
 801c2c0:	280a      	cmp	r0, #10
 801c2c2:	a802      	add	r0, sp, #8
 801c2c4:	bf04      	itt	eq
 801c2c6:	3301      	addeq	r3, #1
 801c2c8:	b21c      	sxtheq	r4, r3
 801c2ca:	f001 f9eb 	bl	801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801c2ce:	e7f5      	b.n	801c2bc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 801c2d0:	4618      	mov	r0, r3
 801c2d2:	b018      	add	sp, #96	; 0x60
 801c2d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801c2d8:	b003      	add	sp, #12
 801c2da:	4770      	bx	lr

0801c2dc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801c2dc:	b40e      	push	{r1, r2, r3}
 801c2de:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c2e0:	b098      	sub	sp, #96	; 0x60
 801c2e2:	4604      	mov	r4, r0
 801c2e4:	26ff      	movs	r6, #255	; 0xff
 801c2e6:	ab1d      	add	r3, sp, #116	; 0x74
 801c2e8:	a802      	add	r0, sp, #8
 801c2ea:	f853 5b04 	ldr.w	r5, [r3], #4
 801c2ee:	9300      	str	r3, [sp, #0]
 801c2f0:	f000 fda1 	bl	801ce36 <_ZN8touchgfx12TextProviderC1Ev>
 801c2f4:	6823      	ldr	r3, [r4, #0]
 801c2f6:	4620      	mov	r0, r4
 801c2f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c2fa:	4798      	blx	r3
 801c2fc:	4629      	mov	r1, r5
 801c2fe:	4603      	mov	r3, r0
 801c300:	9a00      	ldr	r2, [sp, #0]
 801c302:	a802      	add	r0, sp, #8
 801c304:	ad18      	add	r5, sp, #96	; 0x60
 801c306:	f000 fddb 	bl	801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 801c30a:	2100      	movs	r1, #0
 801c30c:	4622      	mov	r2, r4
 801c30e:	a802      	add	r0, sp, #8
 801c310:	f845 1d5c 	str.w	r1, [r5, #-92]!
 801c314:	462b      	mov	r3, r5
 801c316:	f001 f8cd 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c31a:	b1d8      	cbz	r0, 801c354 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801c31c:	280a      	cmp	r0, #10
 801c31e:	d012      	beq.n	801c346 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 801c320:	9801      	ldr	r0, [sp, #4]
 801c322:	b180      	cbz	r0, 801c346 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x6a>
 801c324:	7b47      	ldrb	r7, [r0, #13]
 801c326:	7922      	ldrb	r2, [r4, #4]
 801c328:	00fb      	lsls	r3, r7, #3
 801c32a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801c32e:	7a03      	ldrb	r3, [r0, #8]
 801c330:	430b      	orrs	r3, r1
 801c332:	0679      	lsls	r1, r7, #25
 801c334:	bf44      	itt	mi
 801c336:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801c33a:	b21b      	sxthmi	r3, r3
 801c33c:	1ad3      	subs	r3, r2, r3
 801c33e:	b2db      	uxtb	r3, r3
 801c340:	429e      	cmp	r6, r3
 801c342:	bf28      	it	cs
 801c344:	461e      	movcs	r6, r3
 801c346:	462b      	mov	r3, r5
 801c348:	4622      	mov	r2, r4
 801c34a:	2100      	movs	r1, #0
 801c34c:	a802      	add	r0, sp, #8
 801c34e:	f001 f8b1 	bl	801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801c352:	e7e2      	b.n	801c31a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 801c354:	4630      	mov	r0, r6
 801c356:	b018      	add	sp, #96	; 0x60
 801c358:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801c35c:	b003      	add	sp, #12
 801c35e:	4770      	bx	lr

0801c360 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801c360:	b513      	push	{r0, r1, r4, lr}
 801c362:	1d01      	adds	r1, r0, #4
 801c364:	4603      	mov	r3, r0
 801c366:	466a      	mov	r2, sp
 801c368:	c903      	ldmia	r1, {r0, r1}
 801c36a:	e882 0003 	stmia.w	r2, {r0, r1}
 801c36e:	2100      	movs	r1, #0
 801c370:	4618      	mov	r0, r3
 801c372:	9100      	str	r1, [sp, #0]
 801c374:	6819      	ldr	r1, [r3, #0]
 801c376:	690c      	ldr	r4, [r1, #16]
 801c378:	4611      	mov	r1, r2
 801c37a:	47a0      	blx	r4
 801c37c:	b002      	add	sp, #8
 801c37e:	bd10      	pop	{r4, pc}

0801c380 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801c380:	b538      	push	{r3, r4, r5, lr}
 801c382:	680b      	ldr	r3, [r1, #0]
 801c384:	460c      	mov	r4, r1
 801c386:	4605      	mov	r5, r0
 801c388:	68db      	ldr	r3, [r3, #12]
 801c38a:	4798      	blx	r3
 801c38c:	6823      	ldr	r3, [r4, #0]
 801c38e:	4620      	mov	r0, r4
 801c390:	4629      	mov	r1, r5
 801c392:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c394:	4798      	blx	r3
 801c396:	4628      	mov	r0, r5
 801c398:	bd38      	pop	{r3, r4, r5, pc}

0801c39a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801c39a:	b410      	push	{r4}
 801c39c:	880a      	ldrh	r2, [r1, #0]
 801c39e:	8884      	ldrh	r4, [r0, #4]
 801c3a0:	4422      	add	r2, r4
 801c3a2:	800a      	strh	r2, [r1, #0]
 801c3a4:	884a      	ldrh	r2, [r1, #2]
 801c3a6:	88c4      	ldrh	r4, [r0, #6]
 801c3a8:	4422      	add	r2, r4
 801c3aa:	804a      	strh	r2, [r1, #2]
 801c3ac:	6940      	ldr	r0, [r0, #20]
 801c3ae:	b120      	cbz	r0, 801c3ba <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801c3b0:	6803      	ldr	r3, [r0, #0]
 801c3b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c3b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c3b8:	4718      	bx	r3
 801c3ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 801c3be:	4770      	bx	lr

0801c3c0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801c3c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c3c2:	460b      	mov	r3, r1
 801c3c4:	b085      	sub	sp, #20
 801c3c6:	4604      	mov	r4, r0
 801c3c8:	b901      	cbnz	r1, 801c3cc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801c3ca:	b322      	cbz	r2, 801c416 <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 801c3cc:	1d27      	adds	r7, r4, #4
 801c3ce:	466e      	mov	r6, sp
 801c3d0:	88e5      	ldrh	r5, [r4, #6]
 801c3d2:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c3d6:	442a      	add	r2, r5
 801c3d8:	e886 0003 	stmia.w	r6, {r0, r1}
 801c3dc:	88a1      	ldrh	r1, [r4, #4]
 801c3de:	4620      	mov	r0, r4
 801c3e0:	b215      	sxth	r5, r2
 801c3e2:	4419      	add	r1, r3
 801c3e4:	6823      	ldr	r3, [r4, #0]
 801c3e6:	b209      	sxth	r1, r1
 801c3e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3ea:	4798      	blx	r3
 801c3ec:	6823      	ldr	r3, [r4, #0]
 801c3ee:	4629      	mov	r1, r5
 801c3f0:	4620      	mov	r0, r4
 801c3f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c3f4:	ad02      	add	r5, sp, #8
 801c3f6:	4798      	blx	r3
 801c3f8:	e897 0003 	ldmia.w	r7, {r0, r1}
 801c3fc:	e885 0003 	stmia.w	r5, {r0, r1}
 801c400:	6960      	ldr	r0, [r4, #20]
 801c402:	b150      	cbz	r0, 801c41a <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 801c404:	6803      	ldr	r3, [r0, #0]
 801c406:	4631      	mov	r1, r6
 801c408:	691b      	ldr	r3, [r3, #16]
 801c40a:	4798      	blx	r3
 801c40c:	6960      	ldr	r0, [r4, #20]
 801c40e:	6803      	ldr	r3, [r0, #0]
 801c410:	691b      	ldr	r3, [r3, #16]
 801c412:	4629      	mov	r1, r5
 801c414:	4798      	blx	r3
 801c416:	b005      	add	sp, #20
 801c418:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c41a:	f7ff f843 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 801c41e:	6803      	ldr	r3, [r0, #0]
 801c420:	4631      	mov	r1, r6
 801c422:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c424:	4798      	blx	r3
 801c426:	f7ff f83d 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 801c42a:	6803      	ldr	r3, [r0, #0]
 801c42c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c42e:	e7f0      	b.n	801c412 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0801c430 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801c430:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801c432:	8882      	ldrh	r2, [r0, #4]
 801c434:	4605      	mov	r5, r0
 801c436:	880b      	ldrh	r3, [r1, #0]
 801c438:	460c      	mov	r4, r1
 801c43a:	4413      	add	r3, r2
 801c43c:	800b      	strh	r3, [r1, #0]
 801c43e:	884b      	ldrh	r3, [r1, #2]
 801c440:	88c2      	ldrh	r2, [r0, #6]
 801c442:	4413      	add	r3, r2
 801c444:	4602      	mov	r2, r0
 801c446:	804b      	strh	r3, [r1, #2]
 801c448:	466b      	mov	r3, sp
 801c44a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 801c44e:	6851      	ldr	r1, [r2, #4]
 801c450:	c303      	stmia	r3!, {r0, r1}
 801c452:	4621      	mov	r1, r4
 801c454:	4668      	mov	r0, sp
 801c456:	f7fa fa8d 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801c45a:	466b      	mov	r3, sp
 801c45c:	cb03      	ldmia	r3!, {r0, r1}
 801c45e:	6020      	str	r0, [r4, #0]
 801c460:	6061      	str	r1, [r4, #4]
 801c462:	6968      	ldr	r0, [r5, #20]
 801c464:	b128      	cbz	r0, 801c472 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 801c466:	6803      	ldr	r3, [r0, #0]
 801c468:	691b      	ldr	r3, [r3, #16]
 801c46a:	4621      	mov	r1, r4
 801c46c:	4798      	blx	r3
 801c46e:	b003      	add	sp, #12
 801c470:	bd30      	pop	{r4, r5, pc}
 801c472:	f7ff f817 	bl	801b4a4 <_ZN8touchgfx11Application11getInstanceEv>
 801c476:	6803      	ldr	r3, [r0, #0]
 801c478:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c47a:	e7f6      	b.n	801c46a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0801c47c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801c47c:	b570      	push	{r4, r5, r6, lr}
 801c47e:	8882      	ldrh	r2, [r0, #4]
 801c480:	460c      	mov	r4, r1
 801c482:	880b      	ldrh	r3, [r1, #0]
 801c484:	4605      	mov	r5, r0
 801c486:	4413      	add	r3, r2
 801c488:	800b      	strh	r3, [r1, #0]
 801c48a:	884b      	ldrh	r3, [r1, #2]
 801c48c:	88c2      	ldrh	r2, [r0, #6]
 801c48e:	4413      	add	r3, r2
 801c490:	804b      	strh	r3, [r1, #2]
 801c492:	1d01      	adds	r1, r0, #4
 801c494:	4620      	mov	r0, r4
 801c496:	f7fa fa6d 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801c49a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801c49e:	2b00      	cmp	r3, #0
 801c4a0:	dd0b      	ble.n	801c4ba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c4a2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801c4a6:	2b00      	cmp	r3, #0
 801c4a8:	dd07      	ble.n	801c4ba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c4aa:	6968      	ldr	r0, [r5, #20]
 801c4ac:	b128      	cbz	r0, 801c4ba <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801c4ae:	6803      	ldr	r3, [r0, #0]
 801c4b0:	4621      	mov	r1, r4
 801c4b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801c4b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801c4b8:	4718      	bx	r3
 801c4ba:	bd70      	pop	{r4, r5, r6, pc}

0801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801c4bc:	b510      	push	{r4, lr}
 801c4be:	2300      	movs	r3, #0
 801c4c0:	4604      	mov	r4, r0
 801c4c2:	4608      	mov	r0, r1
 801c4c4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801c4c8:	8023      	strh	r3, [r4, #0]
 801c4ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801c4ce:	8063      	strh	r3, [r4, #2]
 801c4d0:	6803      	ldr	r3, [r0, #0]
 801c4d2:	80a1      	strh	r1, [r4, #4]
 801c4d4:	4621      	mov	r1, r4
 801c4d6:	80e2      	strh	r2, [r4, #6]
 801c4d8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c4da:	4798      	blx	r3
 801c4dc:	4620      	mov	r0, r4
 801c4de:	bd10      	pop	{r4, pc}

0801c4e0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 801c4e0:	b530      	push	{r4, r5, lr}
 801c4e2:	8083      	strh	r3, [r0, #4]
 801c4e4:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801c4e8:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801c4ec:	7183      	strb	r3, [r0, #6]
 801c4ee:	79c3      	ldrb	r3, [r0, #7]
 801c4f0:	6101      	str	r1, [r0, #16]
 801c4f2:	f365 0306 	bfi	r3, r5, #0, #7
 801c4f6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801c4fa:	8282      	strh	r2, [r0, #20]
 801c4fc:	f365 13c7 	bfi	r3, r5, #7, #1
 801c500:	71c3      	strb	r3, [r0, #7]
 801c502:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801c506:	7203      	strb	r3, [r0, #8]
 801c508:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801c50c:	7243      	strb	r3, [r0, #9]
 801c50e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801c512:	8143      	strh	r3, [r0, #10]
 801c514:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801c518:	8183      	strh	r3, [r0, #12]
 801c51a:	4b01      	ldr	r3, [pc, #4]	; (801c520 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801c51c:	6003      	str	r3, [r0, #0]
 801c51e:	bd30      	pop	{r4, r5, pc}
 801c520:	08031590 	.word	0x08031590

0801c524 <_ZNK8touchgfx9ConstFont4findEt>:
 801c524:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c526:	6904      	ldr	r4, [r0, #16]
 801c528:	b3bc      	cbz	r4, 801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c52a:	88a3      	ldrh	r3, [r4, #4]
 801c52c:	8a82      	ldrh	r2, [r0, #20]
 801c52e:	1acb      	subs	r3, r1, r3
 801c530:	f102 32ff 	add.w	r2, r2, #4294967295
 801c534:	d431      	bmi.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c536:	4293      	cmp	r3, r2
 801c538:	dd0c      	ble.n	801c554 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801c53a:	230e      	movs	r3, #14
 801c53c:	fb03 4302 	mla	r3, r3, r2, r4
 801c540:	889b      	ldrh	r3, [r3, #4]
 801c542:	1a5b      	subs	r3, r3, r1
 801c544:	1ad3      	subs	r3, r2, r3
 801c546:	429a      	cmp	r2, r3
 801c548:	db27      	blt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c54a:	2b00      	cmp	r3, #0
 801c54c:	bfbc      	itt	lt
 801c54e:	2302      	movlt	r3, #2
 801c550:	fb92 f3f3 	sdivlt	r3, r2, r3
 801c554:	2500      	movs	r5, #0
 801c556:	260e      	movs	r6, #14
 801c558:	4295      	cmp	r5, r2
 801c55a:	dc1e      	bgt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c55c:	fb06 4003 	mla	r0, r6, r3, r4
 801c560:	8887      	ldrh	r7, [r0, #4]
 801c562:	42b9      	cmp	r1, r7
 801c564:	d01a      	beq.n	801c59c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801c566:	d20d      	bcs.n	801c584 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801c568:	1e5a      	subs	r2, r3, #1
 801c56a:	4295      	cmp	r5, r2
 801c56c:	dc15      	bgt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c56e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801c572:	1a5b      	subs	r3, r3, r1
 801c574:	1ad3      	subs	r3, r2, r3
 801c576:	429a      	cmp	r2, r3
 801c578:	db0f      	blt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c57a:	429d      	cmp	r5, r3
 801c57c:	ddec      	ble.n	801c558 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c57e:	1953      	adds	r3, r2, r5
 801c580:	105b      	asrs	r3, r3, #1
 801c582:	e7e9      	b.n	801c558 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c584:	1c5d      	adds	r5, r3, #1
 801c586:	42aa      	cmp	r2, r5
 801c588:	db07      	blt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c58a:	8a43      	ldrh	r3, [r0, #18]
 801c58c:	1acb      	subs	r3, r1, r3
 801c58e:	442b      	add	r3, r5
 801c590:	429d      	cmp	r5, r3
 801c592:	dc02      	bgt.n	801c59a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801c594:	429a      	cmp	r2, r3
 801c596:	dadf      	bge.n	801c558 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801c598:	e7f1      	b.n	801c57e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801c59a:	2000      	movs	r0, #0
 801c59c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801c59e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801c59e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c5a0:	4604      	mov	r4, r0
 801c5a2:	4617      	mov	r7, r2
 801c5a4:	461e      	mov	r6, r3
 801c5a6:	b911      	cbnz	r1, 801c5ae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801c5a8:	2500      	movs	r5, #0
 801c5aa:	4628      	mov	r0, r5
 801c5ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c5ae:	290a      	cmp	r1, #10
 801c5b0:	d0fa      	beq.n	801c5a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c5b2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801c5b6:	4291      	cmp	r1, r2
 801c5b8:	d0f6      	beq.n	801c5a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c5ba:	f242 020b 	movw	r2, #8203	; 0x200b
 801c5be:	4291      	cmp	r1, r2
 801c5c0:	d0f2      	beq.n	801c5a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c5c2:	f7ff ffaf 	bl	801c524 <_ZNK8touchgfx9ConstFont4findEt>
 801c5c6:	4605      	mov	r5, r0
 801c5c8:	b950      	cbnz	r0, 801c5e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801c5ca:	6823      	ldr	r3, [r4, #0]
 801c5cc:	4620      	mov	r0, r4
 801c5ce:	691b      	ldr	r3, [r3, #16]
 801c5d0:	4798      	blx	r3
 801c5d2:	4601      	mov	r1, r0
 801c5d4:	4620      	mov	r0, r4
 801c5d6:	f7ff ffa5 	bl	801c524 <_ZNK8touchgfx9ConstFont4findEt>
 801c5da:	4605      	mov	r5, r0
 801c5dc:	2800      	cmp	r0, #0
 801c5de:	d0e3      	beq.n	801c5a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801c5e0:	6823      	ldr	r3, [r4, #0]
 801c5e2:	4629      	mov	r1, r5
 801c5e4:	4620      	mov	r0, r4
 801c5e6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801c5e8:	4798      	blx	r3
 801c5ea:	6038      	str	r0, [r7, #0]
 801c5ec:	6823      	ldr	r3, [r4, #0]
 801c5ee:	4620      	mov	r0, r4
 801c5f0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801c5f2:	4798      	blx	r3
 801c5f4:	7030      	strb	r0, [r6, #0]
 801c5f6:	e7d8      	b.n	801c5aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801c5f8 <_ZN8touchgfx6memsetEPvhm>:
 801c5f8:	4402      	add	r2, r0
 801c5fa:	4290      	cmp	r0, r2
 801c5fc:	d002      	beq.n	801c604 <_ZN8touchgfx6memsetEPvhm+0xc>
 801c5fe:	f800 1b01 	strb.w	r1, [r0], #1
 801c602:	e7fa      	b.n	801c5fa <_ZN8touchgfx6memsetEPvhm+0x2>
 801c604:	4770      	bx	lr

0801c606 <_ZN8touchgfx4clzuEm>:
 801c606:	4603      	mov	r3, r0
 801c608:	b1c8      	cbz	r0, 801c63e <_ZN8touchgfx4clzuEm+0x38>
 801c60a:	0c02      	lsrs	r2, r0, #16
 801c60c:	0412      	lsls	r2, r2, #16
 801c60e:	b9a2      	cbnz	r2, 801c63a <_ZN8touchgfx4clzuEm+0x34>
 801c610:	0403      	lsls	r3, r0, #16
 801c612:	2010      	movs	r0, #16
 801c614:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801c618:	bf04      	itt	eq
 801c61a:	021b      	lsleq	r3, r3, #8
 801c61c:	3008      	addeq	r0, #8
 801c61e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801c622:	bf04      	itt	eq
 801c624:	011b      	lsleq	r3, r3, #4
 801c626:	3004      	addeq	r0, #4
 801c628:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801c62c:	bf04      	itt	eq
 801c62e:	009b      	lsleq	r3, r3, #2
 801c630:	3002      	addeq	r0, #2
 801c632:	2b00      	cmp	r3, #0
 801c634:	db04      	blt.n	801c640 <_ZN8touchgfx4clzuEm+0x3a>
 801c636:	3001      	adds	r0, #1
 801c638:	4770      	bx	lr
 801c63a:	2000      	movs	r0, #0
 801c63c:	e7ea      	b.n	801c614 <_ZN8touchgfx4clzuEm+0xe>
 801c63e:	2020      	movs	r0, #32
 801c640:	4770      	bx	lr

0801c642 <_ZN8touchgfx7muldivuEmmmRm>:
 801c642:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c646:	4680      	mov	r8, r0
 801c648:	460f      	mov	r7, r1
 801c64a:	4615      	mov	r5, r2
 801c64c:	461e      	mov	r6, r3
 801c64e:	f7ff ffda 	bl	801c606 <_ZN8touchgfx4clzuEm>
 801c652:	b998      	cbnz	r0, 801c67c <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801c654:	4608      	mov	r0, r1
 801c656:	f7ff ffd6 	bl	801c606 <_ZN8touchgfx4clzuEm>
 801c65a:	2800      	cmp	r0, #0
 801c65c:	dd08      	ble.n	801c670 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801c65e:	4633      	mov	r3, r6
 801c660:	462a      	mov	r2, r5
 801c662:	4641      	mov	r1, r8
 801c664:	4638      	mov	r0, r7
 801c666:	f7ff ffec 	bl	801c642 <_ZN8touchgfx7muldivuEmmmRm>
 801c66a:	b003      	add	sp, #12
 801c66c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c670:	f04f 33ff 	mov.w	r3, #4294967295
 801c674:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801c678:	6033      	str	r3, [r6, #0]
 801c67a:	e7f6      	b.n	801c66a <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801c67c:	fa31 f900 	lsrs.w	r9, r1, r0
 801c680:	fb01 f308 	mul.w	r3, r1, r8
 801c684:	d105      	bne.n	801c692 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801c686:	fbb3 f0f5 	udiv	r0, r3, r5
 801c68a:	fb05 3510 	mls	r5, r5, r0, r3
 801c68e:	6035      	str	r5, [r6, #0]
 801c690:	e7eb      	b.n	801c66a <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801c692:	2301      	movs	r3, #1
 801c694:	fa08 fb00 	lsl.w	fp, r8, r0
 801c698:	462a      	mov	r2, r5
 801c69a:	4641      	mov	r1, r8
 801c69c:	fa03 f000 	lsl.w	r0, r3, r0
 801c6a0:	4633      	mov	r3, r6
 801c6a2:	fbbb faf5 	udiv	sl, fp, r5
 801c6a6:	3801      	subs	r0, #1
 801c6a8:	fb09 f40a 	mul.w	r4, r9, sl
 801c6ac:	4038      	ands	r0, r7
 801c6ae:	f7ff ffc8 	bl	801c642 <_ZN8touchgfx7muldivuEmmmRm>
 801c6b2:	462a      	mov	r2, r5
 801c6b4:	4607      	mov	r7, r0
 801c6b6:	ab01      	add	r3, sp, #4
 801c6b8:	fb05 b11a 	mls	r1, r5, sl, fp
 801c6bc:	4648      	mov	r0, r9
 801c6be:	f7ff ffc0 	bl	801c642 <_ZN8touchgfx7muldivuEmmmRm>
 801c6c2:	9b01      	ldr	r3, [sp, #4]
 801c6c4:	6832      	ldr	r2, [r6, #0]
 801c6c6:	441a      	add	r2, r3
 801c6c8:	fbb2 f3f5 	udiv	r3, r2, r5
 801c6cc:	441c      	add	r4, r3
 801c6ce:	fb05 2513 	mls	r5, r5, r3, r2
 801c6d2:	443c      	add	r4, r7
 801c6d4:	4420      	add	r0, r4
 801c6d6:	e7da      	b.n	801c68e <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801c6d8 <_ZN8touchgfx6muldivElllRl>:
 801c6d8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c6da:	2800      	cmp	r0, #0
 801c6dc:	461e      	mov	r6, r3
 801c6de:	bfba      	itte	lt
 801c6e0:	4240      	neglt	r0, r0
 801c6e2:	f04f 34ff 	movlt.w	r4, #4294967295
 801c6e6:	2401      	movge	r4, #1
 801c6e8:	2900      	cmp	r1, #0
 801c6ea:	bfbc      	itt	lt
 801c6ec:	4249      	neglt	r1, r1
 801c6ee:	4264      	neglt	r4, r4
 801c6f0:	2a00      	cmp	r2, #0
 801c6f2:	bfb6      	itet	lt
 801c6f4:	4265      	neglt	r5, r4
 801c6f6:	4625      	movge	r5, r4
 801c6f8:	4252      	neglt	r2, r2
 801c6fa:	4288      	cmp	r0, r1
 801c6fc:	bfc2      	ittt	gt
 801c6fe:	4603      	movgt	r3, r0
 801c700:	4608      	movgt	r0, r1
 801c702:	4619      	movgt	r1, r3
 801c704:	ab01      	add	r3, sp, #4
 801c706:	f7ff ff9c 	bl	801c642 <_ZN8touchgfx7muldivuEmmmRm>
 801c70a:	9b01      	ldr	r3, [sp, #4]
 801c70c:	4368      	muls	r0, r5
 801c70e:	435c      	muls	r4, r3
 801c710:	6034      	str	r4, [r6, #0]
 801c712:	b002      	add	sp, #8
 801c714:	bd70      	pop	{r4, r5, r6, pc}

0801c716 <_ZN8touchgfx6muldivElll>:
 801c716:	b513      	push	{r0, r1, r4, lr}
 801c718:	4614      	mov	r4, r2
 801c71a:	ab01      	add	r3, sp, #4
 801c71c:	f7ff ffdc 	bl	801c6d8 <_ZN8touchgfx6muldivElllRl>
 801c720:	2800      	cmp	r0, #0
 801c722:	ea84 72e4 	eor.w	r2, r4, r4, asr #31
 801c726:	9b01      	ldr	r3, [sp, #4]
 801c728:	eba2 72e4 	sub.w	r2, r2, r4, asr #31
 801c72c:	db0a      	blt.n	801c744 <_ZN8touchgfx6muldivElll+0x2e>
 801c72e:	2b00      	cmp	r3, #0
 801c730:	f102 0201 	add.w	r2, r2, #1
 801c734:	bfb8      	it	lt
 801c736:	425b      	neglt	r3, r3
 801c738:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 801c73c:	db00      	blt.n	801c740 <_ZN8touchgfx6muldivElll+0x2a>
 801c73e:	3001      	adds	r0, #1
 801c740:	b002      	add	sp, #8
 801c742:	bd10      	pop	{r4, pc}
 801c744:	2b00      	cmp	r3, #0
 801c746:	bfb8      	it	lt
 801c748:	425b      	neglt	r3, r3
 801c74a:	ebb3 0f62 	cmp.w	r3, r2, asr #1
 801c74e:	bfc8      	it	gt
 801c750:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801c754:	e7f4      	b.n	801c740 <_ZN8touchgfx6muldivElll+0x2a>

0801c756 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 801c756:	2000      	movs	r0, #0
 801c758:	4770      	bx	lr

0801c75a <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 801c75a:	2001      	movs	r0, #1
 801c75c:	4770      	bx	lr

0801c75e <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 801c75e:	2002      	movs	r0, #2
 801c760:	4770      	bx	lr

0801c762 <_ZN8touchgfx12GestureEventD1Ev>:
 801c762:	4770      	bx	lr

0801c764 <_ZN8touchgfx9DragEventD1Ev>:
 801c764:	4770      	bx	lr

0801c766 <_ZN8touchgfx10ClickEventD1Ev>:
 801c766:	4770      	bx	lr

0801c768 <_ZN8touchgfx10ClickEventD0Ev>:
 801c768:	b510      	push	{r4, lr}
 801c76a:	4604      	mov	r4, r0
 801c76c:	210c      	movs	r1, #12
 801c76e:	f00f f97a 	bl	802ba66 <_ZdlPvj>
 801c772:	4620      	mov	r0, r4
 801c774:	bd10      	pop	{r4, pc}

0801c776 <_ZN8touchgfx9DragEventD0Ev>:
 801c776:	b510      	push	{r4, lr}
 801c778:	4604      	mov	r4, r0
 801c77a:	2110      	movs	r1, #16
 801c77c:	f00f f973 	bl	802ba66 <_ZdlPvj>
 801c780:	4620      	mov	r0, r4
 801c782:	bd10      	pop	{r4, pc}

0801c784 <_ZN8touchgfx12GestureEventD0Ev>:
 801c784:	b510      	push	{r4, lr}
 801c786:	4604      	mov	r4, r0
 801c788:	210c      	movs	r1, #12
 801c78a:	f00f f96c 	bl	802ba66 <_ZdlPvj>
 801c78e:	4620      	mov	r0, r4
 801c790:	bd10      	pop	{r4, pc}
	...

0801c794 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801c794:	b530      	push	{r4, r5, lr}
 801c796:	460d      	mov	r5, r1
 801c798:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801c79a:	b087      	sub	sp, #28
 801c79c:	4604      	mov	r4, r0
 801c79e:	b301      	cbz	r1, 801c7e2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801c7a0:	a801      	add	r0, sp, #4
 801c7a2:	f7ff fe8b 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801c7a6:	892a      	ldrh	r2, [r5, #8]
 801c7a8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801c7ac:	7928      	ldrb	r0, [r5, #4]
 801c7ae:	1ad2      	subs	r2, r2, r3
 801c7b0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801c7b2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801c7b6:	441a      	add	r2, r3
 801c7b8:	896b      	ldrh	r3, [r5, #10]
 801c7ba:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801c7be:	f88d 0010 	strb.w	r0, [sp, #16]
 801c7c2:	1b5b      	subs	r3, r3, r5
 801c7c4:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801c7c6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801c7c8:	442b      	add	r3, r5
 801c7ca:	4d07      	ldr	r5, [pc, #28]	; (801c7e8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801c7cc:	f8ad 1012 	strh.w	r1, [sp, #18]
 801c7d0:	a903      	add	r1, sp, #12
 801c7d2:	9503      	str	r5, [sp, #12]
 801c7d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 801c7d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 801c7dc:	6803      	ldr	r3, [r0, #0]
 801c7de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c7e0:	4798      	blx	r3
 801c7e2:	b007      	add	sp, #28
 801c7e4:	bd30      	pop	{r4, r5, pc}
 801c7e6:	bf00      	nop
 801c7e8:	0803160c 	.word	0x0803160c

0801c7ec <_ZNK8touchgfx4Rect9intersectEss>:
 801c7ec:	b510      	push	{r4, lr}
 801c7ee:	f9b0 3000 	ldrsh.w	r3, [r0]
 801c7f2:	428b      	cmp	r3, r1
 801c7f4:	dc10      	bgt.n	801c818 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 801c7f6:	8884      	ldrh	r4, [r0, #4]
 801c7f8:	4423      	add	r3, r4
 801c7fa:	b21b      	sxth	r3, r3
 801c7fc:	4299      	cmp	r1, r3
 801c7fe:	da0b      	bge.n	801c818 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 801c800:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801c804:	4293      	cmp	r3, r2
 801c806:	dc07      	bgt.n	801c818 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 801c808:	88c0      	ldrh	r0, [r0, #6]
 801c80a:	4418      	add	r0, r3
 801c80c:	b200      	sxth	r0, r0
 801c80e:	4282      	cmp	r2, r0
 801c810:	bfac      	ite	ge
 801c812:	2000      	movge	r0, #0
 801c814:	2001      	movlt	r0, #1
 801c816:	bd10      	pop	{r4, pc}
 801c818:	2000      	movs	r0, #0
 801c81a:	e7fc      	b.n	801c816 <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0801c81c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801c81c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c81e:	460c      	mov	r4, r1
 801c820:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801c822:	b089      	sub	sp, #36	; 0x24
 801c824:	4605      	mov	r5, r0
 801c826:	2900      	cmp	r1, #0
 801c828:	d054      	beq.n	801c8d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 801c82a:	4668      	mov	r0, sp
 801c82c:	f7ff fe46 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801c830:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 801c832:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 801c834:	4668      	mov	r0, sp
 801c836:	8922      	ldrh	r2, [r4, #8]
 801c838:	88e1      	ldrh	r1, [r4, #6]
 801c83a:	443a      	add	r2, r7
 801c83c:	4431      	add	r1, r6
 801c83e:	b212      	sxth	r2, r2
 801c840:	b209      	sxth	r1, r1
 801c842:	f7ff ffd3 	bl	801c7ec <_ZNK8touchgfx4Rect9intersectEss>
 801c846:	b1d0      	cbz	r0, 801c87e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 801c848:	89a2      	ldrh	r2, [r4, #12]
 801c84a:	4668      	mov	r0, sp
 801c84c:	8961      	ldrh	r1, [r4, #10]
 801c84e:	443a      	add	r2, r7
 801c850:	4431      	add	r1, r6
 801c852:	b212      	sxth	r2, r2
 801c854:	b209      	sxth	r1, r1
 801c856:	f7ff ffc9 	bl	801c7ec <_ZNK8touchgfx4Rect9intersectEss>
 801c85a:	4603      	mov	r3, r0
 801c85c:	b978      	cbnz	r0, 801c87e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 801c85e:	4a1e      	ldr	r2, [pc, #120]	; (801c8d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 801c860:	a904      	add	r1, sp, #16
 801c862:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801c864:	9204      	str	r2, [sp, #16]
 801c866:	2202      	movs	r2, #2
 801c868:	f8ad 3016 	strh.w	r3, [sp, #22]
 801c86c:	f88d 2014 	strb.w	r2, [sp, #20]
 801c870:	f8ad 3018 	strh.w	r3, [sp, #24]
 801c874:	f8ad 301a 	strh.w	r3, [sp, #26]
 801c878:	6803      	ldr	r3, [r0, #0]
 801c87a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c87c:	4798      	blx	r3
 801c87e:	6b29      	ldr	r1, [r5, #48]	; 0x30
 801c880:	a802      	add	r0, sp, #8
 801c882:	f7ff fe1b 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801c886:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801c88a:	88e0      	ldrh	r0, [r4, #6]
 801c88c:	8961      	ldrh	r1, [r4, #10]
 801c88e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801c892:	1a80      	subs	r0, r0, r2
 801c894:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 801c898:	1a89      	subs	r1, r1, r2
 801c89a:	8923      	ldrh	r3, [r4, #8]
 801c89c:	4460      	add	r0, ip
 801c89e:	89a2      	ldrh	r2, [r4, #12]
 801c8a0:	4461      	add	r1, ip
 801c8a2:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801c8a4:	eba3 030e 	sub.w	r3, r3, lr
 801c8a8:	eba2 020e 	sub.w	r2, r2, lr
 801c8ac:	f8ad 0016 	strh.w	r0, [sp, #22]
 801c8b0:	7927      	ldrb	r7, [r4, #4]
 801c8b2:	4433      	add	r3, r6
 801c8b4:	4432      	add	r2, r6
 801c8b6:	4c09      	ldr	r4, [pc, #36]	; (801c8dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 801c8b8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801c8ba:	f8ad 101a 	strh.w	r1, [sp, #26]
 801c8be:	a904      	add	r1, sp, #16
 801c8c0:	9404      	str	r4, [sp, #16]
 801c8c2:	f88d 7014 	strb.w	r7, [sp, #20]
 801c8c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 801c8ca:	f8ad 201c 	strh.w	r2, [sp, #28]
 801c8ce:	6803      	ldr	r3, [r0, #0]
 801c8d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801c8d2:	4798      	blx	r3
 801c8d4:	b009      	add	sp, #36	; 0x24
 801c8d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c8d8:	080315e4 	.word	0x080315e4
 801c8dc:	080315f8 	.word	0x080315f8

0801c8e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801c8e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c8e4:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 801c8e8:	b0a1      	sub	sp, #132	; 0x84
 801c8ea:	4604      	mov	r4, r0
 801c8ec:	460d      	mov	r5, r1
 801c8ee:	790b      	ldrb	r3, [r1, #4]
 801c8f0:	f1b9 0f00 	cmp.w	r9, #0
 801c8f4:	d00f      	beq.n	801c916 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 801c8f6:	2b00      	cmp	r3, #0
 801c8f8:	f040 80a2 	bne.w	801ca40 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
 801c8fc:	b021      	add	sp, #132	; 0x84
 801c8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c902:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801c906:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 801c90a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801c90e:	1d20      	adds	r0, r4, #4
 801c910:	f7f9 ff7e 	bl	8016810 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801c914:	e094      	b.n	801ca40 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x160>
 801c916:	2b00      	cmp	r3, #0
 801c918:	d1f0      	bne.n	801c8fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 801c91a:	4b5f      	ldr	r3, [pc, #380]	; (801ca98 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 801c91c:	681b      	ldr	r3, [r3, #0]
 801c91e:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 801c922:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 801c926:	f1ba 0f03 	cmp.w	sl, #3
 801c92a:	ddea      	ble.n	801c902 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 801c92c:	f1ba 0f0c 	cmp.w	sl, #12
 801c930:	f04f 0303 	mov.w	r3, #3
 801c934:	f04f 0600 	mov.w	r6, #0
 801c938:	4958      	ldr	r1, [pc, #352]	; (801ca9c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 801c93a:	bfd8      	it	le
 801c93c:	f10a 32ff 	addle.w	r2, sl, #4294967295
 801c940:	960a      	str	r6, [sp, #40]	; 0x28
 801c942:	bfd8      	it	le
 801c944:	fb92 f3f3 	sdivle	r3, r2, r3
 801c948:	9301      	str	r3, [sp, #4]
 801c94a:	4b55      	ldr	r3, [pc, #340]	; (801caa0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 801c94c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c950:	4b54      	ldr	r3, [pc, #336]	; (801caa4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 801c952:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801c956:	2248      	movs	r2, #72	; 0x48
 801c958:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c95c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801c960:	ab0e      	add	r3, sp, #56	; 0x38
 801c962:	4618      	mov	r0, r3
 801c964:	f00f fb3e 	bl	802bfe4 <memcpy>
 801c968:	f04f 32ff 	mov.w	r2, #4294967295
 801c96c:	f8cd a008 	str.w	sl, [sp, #8]
 801c970:	e9cd 2006 	strd	r2, r0, [sp, #24]
 801c974:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801c978:	46b3      	mov	fp, r6
 801c97a:	fb93 f3f2 	sdiv	r3, r3, r2
 801c97e:	b29b      	uxth	r3, r3
 801c980:	9303      	str	r3, [sp, #12]
 801c982:	2300      	movs	r3, #0
 801c984:	9a03      	ldr	r2, [sp, #12]
 801c986:	88ef      	ldrh	r7, [r5, #6]
 801c988:	a80a      	add	r0, sp, #40	; 0x28
 801c98a:	9309      	str	r3, [sp, #36]	; 0x24
 801c98c:	9b07      	ldr	r3, [sp, #28]
 801c98e:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 801c992:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 801c996:	fb13 f302 	smulbb	r3, r3, r2
 801c99a:	b29b      	uxth	r3, r3
 801c99c:	9304      	str	r3, [sp, #16]
 801c99e:	9b07      	ldr	r3, [sp, #28]
 801c9a0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 801c9a4:	685b      	ldr	r3, [r3, #4]
 801c9a6:	fb13 f302 	smulbb	r3, r3, r2
 801c9aa:	b29b      	uxth	r3, r3
 801c9ac:	9305      	str	r3, [sp, #20]
 801c9ae:	9b04      	ldr	r3, [sp, #16]
 801c9b0:	441f      	add	r7, r3
 801c9b2:	9b05      	ldr	r3, [sp, #20]
 801c9b4:	4498      	add	r8, r3
 801c9b6:	b23f      	sxth	r7, r7
 801c9b8:	fa0f f888 	sxth.w	r8, r8
 801c9bc:	4639      	mov	r1, r7
 801c9be:	4642      	mov	r2, r8
 801c9c0:	f7ff ff14 	bl	801c7ec <_ZNK8touchgfx4Rect9intersectEss>
 801c9c4:	b380      	cbz	r0, 801ca28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 801c9c6:	4639      	mov	r1, r7
 801c9c8:	ab09      	add	r3, sp, #36	; 0x24
 801c9ca:	4642      	mov	r2, r8
 801c9cc:	1d20      	adds	r0, r4, #4
 801c9ce:	f7f9 ff1f 	bl	8016810 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801c9d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c9d4:	b341      	cbz	r1, 801ca28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 801c9d6:	4549      	cmp	r1, r9
 801c9d8:	d026      	beq.n	801ca28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 801c9da:	a80c      	add	r0, sp, #48	; 0x30
 801c9dc:	f7ff fd6e 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801c9e0:	2002      	movs	r0, #2
 801c9e2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c9e6:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801c9ea:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801c9ee:	fb92 f2f0 	sdiv	r2, r2, r0
 801c9f2:	440a      	add	r2, r1
 801c9f4:	1a99      	subs	r1, r3, r2
 801c9f6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c9fa:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 801c9fe:	fb93 f3f0 	sdiv	r3, r3, r0
 801ca02:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 801ca06:	4403      	add	r3, r0
 801ca08:	1ad3      	subs	r3, r2, r3
 801ca0a:	9a06      	ldr	r2, [sp, #24]
 801ca0c:	435b      	muls	r3, r3
 801ca0e:	fb01 3301 	mla	r3, r1, r1, r3
 801ca12:	4293      	cmp	r3, r2
 801ca14:	d208      	bcs.n	801ca28 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x148>
 801ca16:	9a04      	ldr	r2, [sp, #16]
 801ca18:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 801ca1c:	86a2      	strh	r2, [r4, #52]	; 0x34
 801ca1e:	9a05      	ldr	r2, [sp, #20]
 801ca20:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 801ca24:	86e2      	strh	r2, [r4, #54]	; 0x36
 801ca26:	9306      	str	r3, [sp, #24]
 801ca28:	f10b 0b02 	add.w	fp, fp, #2
 801ca2c:	f1bb 0f08 	cmp.w	fp, #8
 801ca30:	dda7      	ble.n	801c982 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa2>
 801ca32:	9b02      	ldr	r3, [sp, #8]
 801ca34:	3601      	adds	r6, #1
 801ca36:	4453      	add	r3, sl
 801ca38:	9302      	str	r3, [sp, #8]
 801ca3a:	9b01      	ldr	r3, [sp, #4]
 801ca3c:	42b3      	cmp	r3, r6
 801ca3e:	d199      	bne.n	801c974 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x94>
 801ca40:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801ca42:	2900      	cmp	r1, #0
 801ca44:	f43f af5a 	beq.w	801c8fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 801ca48:	a80c      	add	r0, sp, #48	; 0x30
 801ca4a:	2600      	movs	r6, #0
 801ca4c:	f7ff fd36 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ca50:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 801ca54:	88ea      	ldrh	r2, [r5, #6]
 801ca56:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 801ca5a:	1ad2      	subs	r2, r2, r3
 801ca5c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801ca5e:	7929      	ldrb	r1, [r5, #4]
 801ca60:	441a      	add	r2, r3
 801ca62:	892b      	ldrh	r3, [r5, #8]
 801ca64:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 801ca68:	a90e      	add	r1, sp, #56	; 0x38
 801ca6a:	1a1b      	subs	r3, r3, r0
 801ca6c:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 801ca6e:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 801ca72:	4403      	add	r3, r0
 801ca74:	480c      	ldr	r0, [pc, #48]	; (801caa8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c8>)
 801ca76:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 801ca7a:	900e      	str	r0, [sp, #56]	; 0x38
 801ca7c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801ca7e:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 801ca82:	6803      	ldr	r3, [r0, #0]
 801ca84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ca86:	4798      	blx	r3
 801ca88:	792b      	ldrb	r3, [r5, #4]
 801ca8a:	2b00      	cmp	r3, #0
 801ca8c:	f43f af36 	beq.w	801c8fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 801ca90:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801ca94:	e732      	b.n	801c8fc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 801ca96:	bf00      	nop
 801ca98:	20004168 	.word	0x20004168
 801ca9c:	0802ecec 	.word	0x0802ecec
 801caa0:	2000415a 	.word	0x2000415a
 801caa4:	2000415c 	.word	0x2000415c
 801caa8:	080315e4 	.word	0x080315e4

0801caac <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801caac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801caae:	4604      	mov	r4, r0
 801cab0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801cab4:	3201      	adds	r2, #1
 801cab6:	d112      	bne.n	801cade <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801cab8:	2500      	movs	r5, #0
 801caba:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801cabe:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801cac2:	6803      	ldr	r3, [r0, #0]
 801cac4:	9500      	str	r5, [sp, #0]
 801cac6:	466d      	mov	r5, sp
 801cac8:	f8ad 1004 	strh.w	r1, [sp, #4]
 801cacc:	f8ad 2006 	strh.w	r2, [sp, #6]
 801cad0:	4629      	mov	r1, r5
 801cad2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cad4:	4798      	blx	r3
 801cad6:	e895 0003 	ldmia.w	r5, {r0, r1}
 801cada:	e884 0003 	stmia.w	r4, {r0, r1}
 801cade:	4620      	mov	r0, r4
 801cae0:	b003      	add	sp, #12
 801cae2:	bd30      	pop	{r4, r5, pc}

0801cae4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801cae4:	b513      	push	{r0, r1, r4, lr}
 801cae6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801caea:	4604      	mov	r4, r0
 801caec:	3301      	adds	r3, #1
 801caee:	d109      	bne.n	801cb04 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801caf0:	4601      	mov	r1, r0
 801caf2:	4668      	mov	r0, sp
 801caf4:	f7ff fce2 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801caf8:	f8bd 3000 	ldrh.w	r3, [sp]
 801cafc:	8423      	strh	r3, [r4, #32]
 801cafe:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cb02:	8463      	strh	r3, [r4, #34]	; 0x22
 801cb04:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801cb08:	b002      	add	sp, #8
 801cb0a:	bd10      	pop	{r4, pc}

0801cb0c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801cb0c:	b513      	push	{r0, r1, r4, lr}
 801cb0e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801cb12:	4604      	mov	r4, r0
 801cb14:	3301      	adds	r3, #1
 801cb16:	d109      	bne.n	801cb2c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801cb18:	4601      	mov	r1, r0
 801cb1a:	4668      	mov	r0, sp
 801cb1c:	f7ff fcce 	bl	801c4bc <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801cb20:	f8bd 3000 	ldrh.w	r3, [sp]
 801cb24:	8423      	strh	r3, [r4, #32]
 801cb26:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801cb2a:	8463      	strh	r3, [r4, #34]	; 0x22
 801cb2c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801cb30:	b002      	add	sp, #8
 801cb32:	bd10      	pop	{r4, pc}

0801cb34 <_ZN8touchgfx6ScreenC1Ev>:
 801cb34:	b570      	push	{r4, r5, r6, lr}
 801cb36:	4b16      	ldr	r3, [pc, #88]	; (801cb90 <_ZN8touchgfx6ScreenC1Ev+0x5c>)
 801cb38:	4605      	mov	r5, r0
 801cb3a:	4a16      	ldr	r2, [pc, #88]	; (801cb94 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801cb3c:	2101      	movs	r1, #1
 801cb3e:	f845 3b04 	str.w	r3, [r5], #4
 801cb42:	2300      	movs	r3, #0
 801cb44:	6042      	str	r2, [r0, #4]
 801cb46:	4604      	mov	r4, r0
 801cb48:	8103      	strh	r3, [r0, #8]
 801cb4a:	8143      	strh	r3, [r0, #10]
 801cb4c:	8183      	strh	r3, [r0, #12]
 801cb4e:	81c3      	strh	r3, [r0, #14]
 801cb50:	8203      	strh	r3, [r0, #16]
 801cb52:	8243      	strh	r3, [r0, #18]
 801cb54:	8283      	strh	r3, [r0, #20]
 801cb56:	82c3      	strh	r3, [r0, #22]
 801cb58:	6203      	str	r3, [r0, #32]
 801cb5a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801cb5e:	6343      	str	r3, [r0, #52]	; 0x34
 801cb60:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801cb64:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801cb68:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801cb6c:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801cb70:	4b09      	ldr	r3, [pc, #36]	; (801cb98 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801cb72:	4628      	mov	r0, r5
 801cb74:	f9b3 6000 	ldrsh.w	r6, [r3]
 801cb78:	6b53      	ldr	r3, [r2, #52]	; 0x34
 801cb7a:	4a08      	ldr	r2, [pc, #32]	; (801cb9c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801cb7c:	f9b2 1000 	ldrsh.w	r1, [r2]
 801cb80:	4798      	blx	r3
 801cb82:	6863      	ldr	r3, [r4, #4]
 801cb84:	4628      	mov	r0, r5
 801cb86:	4631      	mov	r1, r6
 801cb88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cb8a:	4798      	blx	r3
 801cb8c:	4620      	mov	r0, r4
 801cb8e:	bd70      	pop	{r4, r5, r6, pc}
 801cb90:	08031620 	.word	0x08031620
 801cb94:	0802fd68 	.word	0x0802fd68
 801cb98:	2000415c 	.word	0x2000415c
 801cb9c:	2000415a 	.word	0x2000415a

0801cba0 <_ZN8touchgfx6Screen4drawEv>:
 801cba0:	4b09      	ldr	r3, [pc, #36]	; (801cbc8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801cba2:	b507      	push	{r0, r1, r2, lr}
 801cba4:	f9b3 2000 	ldrsh.w	r2, [r3]
 801cba8:	2100      	movs	r1, #0
 801cbaa:	4b08      	ldr	r3, [pc, #32]	; (801cbcc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801cbac:	9100      	str	r1, [sp, #0]
 801cbae:	4669      	mov	r1, sp
 801cbb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801cbb4:	f8ad 2004 	strh.w	r2, [sp, #4]
 801cbb8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801cbbc:	6803      	ldr	r3, [r0, #0]
 801cbbe:	689b      	ldr	r3, [r3, #8]
 801cbc0:	4798      	blx	r3
 801cbc2:	b003      	add	sp, #12
 801cbc4:	f85d fb04 	ldr.w	pc, [sp], #4
 801cbc8:	2000415a 	.word	0x2000415a
 801cbcc:	2000415c 	.word	0x2000415c

0801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801cbd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbd4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801cbd8:	b089      	sub	sp, #36	; 0x24
 801cbda:	4680      	mov	r8, r0
 801cbdc:	460c      	mov	r4, r1
 801cbde:	2b00      	cmp	r3, #0
 801cbe0:	4615      	mov	r5, r2
 801cbe2:	dd0e      	ble.n	801cc02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cbe4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801cbe8:	2b00      	cmp	r3, #0
 801cbea:	dd0a      	ble.n	801cc02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cbec:	4628      	mov	r0, r5
 801cbee:	f7ff ff5d 	bl	801caac <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cbf2:	4621      	mov	r1, r4
 801cbf4:	f7fe fc12 	bl	801b41c <_ZNK8touchgfx4Rect9intersectERKS0_>
 801cbf8:	69eb      	ldr	r3, [r5, #28]
 801cbfa:	b928      	cbnz	r0, 801cc08 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801cbfc:	461d      	mov	r5, r3
 801cbfe:	2b00      	cmp	r3, #0
 801cc00:	d1f4      	bne.n	801cbec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801cc02:	b009      	add	sp, #36	; 0x24
 801cc04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc08:	ae04      	add	r6, sp, #16
 801cc0a:	2b00      	cmp	r3, #0
 801cc0c:	f000 80b5 	beq.w	801cd7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cc10:	682b      	ldr	r3, [r5, #0]
 801cc12:	4629      	mov	r1, r5
 801cc14:	a802      	add	r0, sp, #8
 801cc16:	68db      	ldr	r3, [r3, #12]
 801cc18:	4798      	blx	r3
 801cc1a:	4628      	mov	r0, r5
 801cc1c:	f7ff ff62 	bl	801cae4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801cc20:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801cc24:	4407      	add	r7, r0
 801cc26:	4628      	mov	r0, r5
 801cc28:	f7ff ff70 	bl	801cb0c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801cc2c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801cc30:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801cc34:	b23f      	sxth	r7, r7
 801cc36:	4418      	add	r0, r3
 801cc38:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801cc3c:	4621      	mov	r1, r4
 801cc3e:	f8ad 2014 	strh.w	r2, [sp, #20]
 801cc42:	f8ad 0012 	strh.w	r0, [sp, #18]
 801cc46:	4630      	mov	r0, r6
 801cc48:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cc4c:	f8ad 7010 	strh.w	r7, [sp, #16]
 801cc50:	f7f9 fe90 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801cc54:	4628      	mov	r0, r5
 801cc56:	f7ff ff29 	bl	801caac <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cc5a:	ab06      	add	r3, sp, #24
 801cc5c:	4602      	mov	r2, r0
 801cc5e:	e896 0003 	ldmia.w	r6, {r0, r1}
 801cc62:	e883 0003 	stmia.w	r3, {r0, r1}
 801cc66:	4611      	mov	r1, r2
 801cc68:	4618      	mov	r0, r3
 801cc6a:	f7f9 fe83 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801cc6e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801cc72:	f9b4 1000 	ldrsh.w	r1, [r4]
 801cc76:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801cc7a:	4299      	cmp	r1, r3
 801cc7c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801cc80:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801cc84:	d10b      	bne.n	801cc9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cc86:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801cc8a:	4552      	cmp	r2, sl
 801cc8c:	d107      	bne.n	801cc9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cc8e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801cc92:	455a      	cmp	r2, fp
 801cc94:	d103      	bne.n	801cc9e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801cc96:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801cc9a:	454a      	cmp	r2, r9
 801cc9c:	d06d      	beq.n	801cd7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cc9e:	f1bb 0f00 	cmp.w	fp, #0
 801cca2:	dd65      	ble.n	801cd70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801cca4:	f1b9 0f00 	cmp.w	r9, #0
 801cca8:	dd62      	ble.n	801cd70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801ccaa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ccae:	fa1f f08a 	uxth.w	r0, sl
 801ccb2:	4552      	cmp	r2, sl
 801ccb4:	9000      	str	r0, [sp, #0]
 801ccb6:	da12      	bge.n	801ccde <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801ccb8:	9301      	str	r3, [sp, #4]
 801ccba:	9b00      	ldr	r3, [sp, #0]
 801ccbc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ccc0:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ccc4:	1a9a      	subs	r2, r3, r2
 801ccc6:	f8ad 1010 	strh.w	r1, [sp, #16]
 801ccca:	4631      	mov	r1, r6
 801cccc:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ccd0:	4640      	mov	r0, r8
 801ccd2:	f8ad 2016 	strh.w	r2, [sp, #22]
 801ccd6:	69ea      	ldr	r2, [r5, #28]
 801ccd8:	f7ff ff7a 	bl	801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ccdc:	9b01      	ldr	r3, [sp, #4]
 801ccde:	f9b4 2000 	ldrsh.w	r2, [r4]
 801cce2:	b29f      	uxth	r7, r3
 801cce4:	429a      	cmp	r2, r3
 801cce6:	da0d      	bge.n	801cd04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801cce8:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ccec:	1aba      	subs	r2, r7, r2
 801ccee:	f8ad a012 	strh.w	sl, [sp, #18]
 801ccf2:	4631      	mov	r1, r6
 801ccf4:	f8ad 2014 	strh.w	r2, [sp, #20]
 801ccf8:	4640      	mov	r0, r8
 801ccfa:	f8ad 9016 	strh.w	r9, [sp, #22]
 801ccfe:	69ea      	ldr	r2, [r5, #28]
 801cd00:	f7ff ff66 	bl	801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cd04:	8822      	ldrh	r2, [r4, #0]
 801cd06:	445f      	add	r7, fp
 801cd08:	88a3      	ldrh	r3, [r4, #4]
 801cd0a:	b2bf      	uxth	r7, r7
 801cd0c:	4413      	add	r3, r2
 801cd0e:	b23a      	sxth	r2, r7
 801cd10:	b29b      	uxth	r3, r3
 801cd12:	b219      	sxth	r1, r3
 801cd14:	4291      	cmp	r1, r2
 801cd16:	dd0d      	ble.n	801cd34 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801cd18:	1bdb      	subs	r3, r3, r7
 801cd1a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cd1e:	f8ad a012 	strh.w	sl, [sp, #18]
 801cd22:	4631      	mov	r1, r6
 801cd24:	f8ad 3014 	strh.w	r3, [sp, #20]
 801cd28:	4640      	mov	r0, r8
 801cd2a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801cd2e:	69ea      	ldr	r2, [r5, #28]
 801cd30:	f7ff ff4e 	bl	801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cd34:	88e2      	ldrh	r2, [r4, #6]
 801cd36:	8863      	ldrh	r3, [r4, #2]
 801cd38:	4413      	add	r3, r2
 801cd3a:	9a00      	ldr	r2, [sp, #0]
 801cd3c:	444a      	add	r2, r9
 801cd3e:	b29b      	uxth	r3, r3
 801cd40:	fa1f f982 	uxth.w	r9, r2
 801cd44:	b219      	sxth	r1, r3
 801cd46:	fa0f f289 	sxth.w	r2, r9
 801cd4a:	428a      	cmp	r2, r1
 801cd4c:	da15      	bge.n	801cd7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801cd4e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cd52:	eba3 0309 	sub.w	r3, r3, r9
 801cd56:	f9b4 0000 	ldrsh.w	r0, [r4]
 801cd5a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801cd5e:	4631      	mov	r1, r6
 801cd60:	f8ad 0010 	strh.w	r0, [sp, #16]
 801cd64:	f8ad 2012 	strh.w	r2, [sp, #18]
 801cd68:	f8ad 3016 	strh.w	r3, [sp, #22]
 801cd6c:	69ea      	ldr	r2, [r5, #28]
 801cd6e:	e001      	b.n	801cd74 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801cd70:	69ea      	ldr	r2, [r5, #28]
 801cd72:	4621      	mov	r1, r4
 801cd74:	4640      	mov	r0, r8
 801cd76:	f7ff ff2b 	bl	801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cd7a:	4628      	mov	r0, r5
 801cd7c:	f7ff fe96 	bl	801caac <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801cd80:	6861      	ldr	r1, [r4, #4]
 801cd82:	4602      	mov	r2, r0
 801cd84:	4633      	mov	r3, r6
 801cd86:	6820      	ldr	r0, [r4, #0]
 801cd88:	c303      	stmia	r3!, {r0, r1}
 801cd8a:	4611      	mov	r1, r2
 801cd8c:	4630      	mov	r0, r6
 801cd8e:	f7f9 fdf1 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801cd92:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801cd96:	2b00      	cmp	r3, #0
 801cd98:	f77f af33 	ble.w	801cc02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cd9c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801cda0:	2b00      	cmp	r3, #0
 801cda2:	f77f af2e 	ble.w	801cc02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801cda6:	4628      	mov	r0, r5
 801cda8:	f7ff fe9c 	bl	801cae4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801cdac:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801cdb0:	1a18      	subs	r0, r3, r0
 801cdb2:	f8ad 0010 	strh.w	r0, [sp, #16]
 801cdb6:	4628      	mov	r0, r5
 801cdb8:	f7ff fea8 	bl	801cb0c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801cdbc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801cdc0:	4631      	mov	r1, r6
 801cdc2:	1a18      	subs	r0, r3, r0
 801cdc4:	f8ad 0012 	strh.w	r0, [sp, #18]
 801cdc8:	4628      	mov	r0, r5
 801cdca:	682b      	ldr	r3, [r5, #0]
 801cdcc:	689b      	ldr	r3, [r3, #8]
 801cdce:	4798      	blx	r3
 801cdd0:	e717      	b.n	801cc02 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801cdd2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801cdd2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cdd4:	2300      	movs	r3, #0
 801cdd6:	aa02      	add	r2, sp, #8
 801cdd8:	4604      	mov	r4, r0
 801cdda:	3004      	adds	r0, #4
 801cddc:	f842 3d04 	str.w	r3, [r2, #-4]!
 801cde0:	460d      	mov	r5, r1
 801cde2:	f7f9 fe9f 	bl	8016b24 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801cde6:	9a01      	ldr	r2, [sp, #4]
 801cde8:	b11a      	cbz	r2, 801cdf2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 801cdea:	4629      	mov	r1, r5
 801cdec:	4620      	mov	r0, r4
 801cdee:	f7ff feef 	bl	801cbd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801cdf2:	b003      	add	sp, #12
 801cdf4:	bd30      	pop	{r4, r5, pc}

0801cdf6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801cdf6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801cdf8:	4602      	mov	r2, r0
 801cdfa:	4604      	mov	r4, r0
 801cdfc:	460d      	mov	r5, r1
 801cdfe:	466b      	mov	r3, sp
 801ce00:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801ce04:	6851      	ldr	r1, [r2, #4]
 801ce06:	c303      	stmia	r3!, {r0, r1}
 801ce08:	4629      	mov	r1, r5
 801ce0a:	4668      	mov	r0, sp
 801ce0c:	f7f9 fdb2 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 801ce10:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801ce14:	4669      	mov	r1, sp
 801ce16:	b123      	cbz	r3, 801ce22 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 801ce18:	4620      	mov	r0, r4
 801ce1a:	f7ff ffda 	bl	801cdd2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801ce1e:	b003      	add	sp, #12
 801ce20:	bd30      	pop	{r4, r5, pc}
 801ce22:	1d20      	adds	r0, r4, #4
 801ce24:	f7f9 fe45 	bl	8016ab2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801ce28:	e7f9      	b.n	801ce1e <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0801ce2a <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 801ce2a:	460b      	mov	r3, r1
 801ce2c:	680a      	ldr	r2, [r1, #0]
 801ce2e:	1d01      	adds	r1, r0, #4
 801ce30:	6992      	ldr	r2, [r2, #24]
 801ce32:	4618      	mov	r0, r3
 801ce34:	4710      	bx	r2

0801ce36 <_ZN8touchgfx12TextProviderC1Ev>:
 801ce36:	2300      	movs	r3, #0
 801ce38:	2201      	movs	r2, #1
 801ce3a:	b510      	push	{r4, lr}
 801ce3c:	4604      	mov	r4, r0
 801ce3e:	60c3      	str	r3, [r0, #12]
 801ce40:	7403      	strb	r3, [r0, #16]
 801ce42:	82c3      	strh	r3, [r0, #22]
 801ce44:	8303      	strh	r3, [r0, #24]
 801ce46:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801ce48:	8603      	strh	r3, [r0, #48]	; 0x30
 801ce4a:	86c3      	strh	r3, [r0, #54]	; 0x36
 801ce4c:	8703      	strh	r3, [r0, #56]	; 0x38
 801ce4e:	63c3      	str	r3, [r0, #60]	; 0x3c
 801ce50:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 801ce54:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 801ce58:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 801ce5c:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 801ce60:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 801ce64:	e9c0 3300 	strd	r3, r3, [r0]
 801ce68:	f7f1 fb88 	bl	800e57c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801ce6c:	4620      	mov	r0, r4
 801ce6e:	bd10      	pop	{r4, pc}

0801ce70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801ce70:	b530      	push	{r4, r5, lr}
 801ce72:	2500      	movs	r5, #0
 801ce74:	2401      	movs	r4, #1
 801ce76:	6843      	ldr	r3, [r0, #4]
 801ce78:	b913      	cbnz	r3, 801ce80 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 801ce7a:	6803      	ldr	r3, [r0, #0]
 801ce7c:	b1f3      	cbz	r3, 801cebc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 801ce7e:	6043      	str	r3, [r0, #4]
 801ce80:	7c03      	ldrb	r3, [r0, #16]
 801ce82:	b143      	cbz	r3, 801ce96 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801ce84:	68c3      	ldr	r3, [r0, #12]
 801ce86:	b12b      	cbz	r3, 801ce94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801ce88:	881a      	ldrh	r2, [r3, #0]
 801ce8a:	b11a      	cbz	r2, 801ce94 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801ce8c:	1c9a      	adds	r2, r3, #2
 801ce8e:	60c2      	str	r2, [r0, #12]
 801ce90:	8818      	ldrh	r0, [r3, #0]
 801ce92:	bd30      	pop	{r4, r5, pc}
 801ce94:	7405      	strb	r5, [r0, #16]
 801ce96:	6843      	ldr	r3, [r0, #4]
 801ce98:	8819      	ldrh	r1, [r3, #0]
 801ce9a:	b179      	cbz	r1, 801cebc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 801ce9c:	1c9a      	adds	r2, r3, #2
 801ce9e:	2902      	cmp	r1, #2
 801cea0:	6042      	str	r2, [r0, #4]
 801cea2:	d1f5      	bne.n	801ce90 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801cea4:	6883      	ldr	r3, [r0, #8]
 801cea6:	1d1a      	adds	r2, r3, #4
 801cea8:	6082      	str	r2, [r0, #8]
 801ceaa:	681b      	ldr	r3, [r3, #0]
 801ceac:	60c3      	str	r3, [r0, #12]
 801ceae:	2b00      	cmp	r3, #0
 801ceb0:	d0e1      	beq.n	801ce76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801ceb2:	881b      	ldrh	r3, [r3, #0]
 801ceb4:	2b00      	cmp	r3, #0
 801ceb6:	d0de      	beq.n	801ce76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801ceb8:	7404      	strb	r4, [r0, #16]
 801ceba:	e7dc      	b.n	801ce76 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801cebc:	2000      	movs	r0, #0
 801cebe:	e7e8      	b.n	801ce92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0801cec0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 801cec0:	63c3      	str	r3, [r0, #60]	; 0x3c
 801cec2:	2300      	movs	r3, #0
 801cec4:	6082      	str	r2, [r0, #8]
 801cec6:	6001      	str	r1, [r0, #0]
 801cec8:	6043      	str	r3, [r0, #4]
 801ceca:	60c3      	str	r3, [r0, #12]
 801cecc:	7403      	strb	r3, [r0, #16]
 801cece:	8603      	strh	r3, [r0, #48]	; 0x30
 801ced0:	8303      	strh	r3, [r0, #24]
 801ced2:	8703      	strh	r3, [r0, #56]	; 0x38
 801ced4:	b410      	push	{r4}
 801ced6:	f85d 4b04 	ldr.w	r4, [sp], #4
 801ceda:	f7f1 bb4f 	b.w	800e57c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801cede <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801cede:	b5f0      	push	{r4, r5, r6, r7, lr}
 801cee0:	4605      	mov	r5, r0
 801cee2:	4608      	mov	r0, r1
 801cee4:	b1f1      	cbz	r1, 801cf24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 801cee6:	f105 0440 	add.w	r4, r5, #64	; 0x40
 801ceea:	460b      	mov	r3, r1
 801ceec:	f101 0708 	add.w	r7, r1, #8
 801cef0:	4622      	mov	r2, r4
 801cef2:	6818      	ldr	r0, [r3, #0]
 801cef4:	3308      	adds	r3, #8
 801cef6:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801cefa:	4626      	mov	r6, r4
 801cefc:	42bb      	cmp	r3, r7
 801cefe:	c603      	stmia	r6!, {r0, r1}
 801cf00:	4634      	mov	r4, r6
 801cf02:	d1f6      	bne.n	801cef2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 801cf04:	6818      	ldr	r0, [r3, #0]
 801cf06:	6030      	str	r0, [r6, #0]
 801cf08:	4610      	mov	r0, r2
 801cf0a:	889b      	ldrh	r3, [r3, #4]
 801cf0c:	80b3      	strh	r3, [r6, #4]
 801cf0e:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 801cf12:	015b      	lsls	r3, r3, #5
 801cf14:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801cf18:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 801cf1c:	430b      	orrs	r3, r1
 801cf1e:	425b      	negs	r3, r3
 801cf20:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 801cf24:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801cf26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 801cf26:	b538      	push	{r3, r4, r5, lr}
 801cf28:	460c      	mov	r4, r1
 801cf2a:	6811      	ldr	r1, [r2, #0]
 801cf2c:	4610      	mov	r0, r2
 801cf2e:	68cd      	ldr	r5, [r1, #12]
 801cf30:	4619      	mov	r1, r3
 801cf32:	47a8      	blx	r5
 801cf34:	2800      	cmp	r0, #0
 801cf36:	bf08      	it	eq
 801cf38:	4620      	moveq	r0, r4
 801cf3a:	bd38      	pop	{r3, r4, r5, pc}

0801cf3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801cf3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801cf3e:	4604      	mov	r4, r0
 801cf40:	4615      	mov	r5, r2
 801cf42:	4608      	mov	r0, r1
 801cf44:	b93a      	cbnz	r2, 801cf56 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 801cf46:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 801cf4a:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 801cf4e:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 801cf52:	4628      	mov	r0, r5
 801cf54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801cf56:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801cf5a:	8893      	ldrh	r3, [r2, #4]
 801cf5c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 801cf60:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801cf64:	79ee      	ldrb	r6, [r5, #7]
 801cf66:	4316      	orrs	r6, r2
 801cf68:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 801cf6c:	189a      	adds	r2, r3, r2
 801cf6e:	b2b7      	uxth	r7, r6
 801cf70:	b291      	uxth	r1, r2
 801cf72:	291d      	cmp	r1, #29
 801cf74:	f200 8084 	bhi.w	801d080 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801cf78:	2201      	movs	r2, #1
 801cf7a:	10f6      	asrs	r6, r6, #3
 801cf7c:	408a      	lsls	r2, r1
 801cf7e:	4978      	ldr	r1, [pc, #480]	; (801d160 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 801cf80:	420a      	tst	r2, r1
 801cf82:	d12e      	bne.n	801cfe2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 801cf84:	f412 7f60 	tst.w	r2, #896	; 0x380
 801cf88:	d07a      	beq.n	801d080 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801cf8a:	f104 0240 	add.w	r2, r4, #64	; 0x40
 801cf8e:	462b      	mov	r3, r5
 801cf90:	f105 0e08 	add.w	lr, r5, #8
 801cf94:	4615      	mov	r5, r2
 801cf96:	6818      	ldr	r0, [r3, #0]
 801cf98:	3308      	adds	r3, #8
 801cf9a:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801cf9e:	4694      	mov	ip, r2
 801cfa0:	4573      	cmp	r3, lr
 801cfa2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801cfa6:	4662      	mov	r2, ip
 801cfa8:	d1f5      	bne.n	801cf96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801cfaa:	6818      	ldr	r0, [r3, #0]
 801cfac:	f8cc 0000 	str.w	r0, [ip]
 801cfb0:	889b      	ldrh	r3, [r3, #4]
 801cfb2:	f8ac 3004 	strh.w	r3, [ip, #4]
 801cfb6:	b2b3      	uxth	r3, r6
 801cfb8:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 801cfbc:	f894 004d 	ldrb.w	r0, [r4, #77]	; 0x4d
 801cfc0:	1aca      	subs	r2, r1, r3
 801cfc2:	1bcf      	subs	r7, r1, r7
 801cfc4:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801cfc8:	b292      	uxth	r2, r2
 801cfca:	1afb      	subs	r3, r7, r3
 801cfcc:	f884 2048 	strb.w	r2, [r4, #72]	; 0x48
 801cfd0:	10d2      	asrs	r2, r2, #3
 801cfd2:	f002 0260 	and.w	r2, r2, #96	; 0x60
 801cfd6:	4302      	orrs	r2, r0
 801cfd8:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
 801cfdc:	f8a4 3050 	strh.w	r3, [r4, #80]	; 0x50
 801cfe0:	e7b7      	b.n	801cf52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801cfe2:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801cfe4:	b92b      	cbnz	r3, 801cff2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 801cfe6:	4b5f      	ldr	r3, [pc, #380]	; (801d164 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 801cfe8:	21c0      	movs	r1, #192	; 0xc0
 801cfea:	4a5f      	ldr	r2, [pc, #380]	; (801d168 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 801cfec:	485f      	ldr	r0, [pc, #380]	; (801d16c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 801cfee:	f00e ff7b 	bl	802bee8 <__assert_func>
 801cff2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801cff4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cff8:	8b59      	ldrh	r1, [r3, #26]
 801cffa:	f640 6333 	movw	r3, #3635	; 0xe33
 801cffe:	4299      	cmp	r1, r3
 801d000:	d110      	bne.n	801d024 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 801d002:	6803      	ldr	r3, [r0, #0]
 801d004:	68db      	ldr	r3, [r3, #12]
 801d006:	4798      	blx	r3
 801d008:	7b41      	ldrb	r1, [r0, #13]
 801d00a:	00cb      	lsls	r3, r1, #3
 801d00c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d010:	7a03      	ldrb	r3, [r0, #8]
 801d012:	0648      	lsls	r0, r1, #25
 801d014:	ea43 0302 	orr.w	r3, r3, r2
 801d018:	bf44      	itt	mi
 801d01a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d01e:	b21b      	sxthmi	r3, r3
 801d020:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d024:	f8b4 304e 	ldrh.w	r3, [r4, #78]	; 0x4e
 801d028:	462a      	mov	r2, r5
 801d02a:	f105 0c08 	add.w	ip, r5, #8
 801d02e:	443b      	add	r3, r7
 801d030:	4433      	add	r3, r6
 801d032:	f104 0640 	add.w	r6, r4, #64	; 0x40
 801d036:	b29b      	uxth	r3, r3
 801d038:	4635      	mov	r5, r6
 801d03a:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d03e:	6810      	ldr	r0, [r2, #0]
 801d040:	3208      	adds	r2, #8
 801d042:	f852 1c04 	ldr.w	r1, [r2, #-4]
 801d046:	4637      	mov	r7, r6
 801d048:	4562      	cmp	r2, ip
 801d04a:	c703      	stmia	r7!, {r0, r1}
 801d04c:	463e      	mov	r6, r7
 801d04e:	d1f6      	bne.n	801d03e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 801d050:	6810      	ldr	r0, [r2, #0]
 801d052:	6038      	str	r0, [r7, #0]
 801d054:	8892      	ldrh	r2, [r2, #4]
 801d056:	80ba      	strh	r2, [r7, #4]
 801d058:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 801d05c:	10db      	asrs	r3, r3, #3
 801d05e:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801d062:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801d066:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801d06a:	4313      	orrs	r3, r2
 801d06c:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 801d070:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 801d074:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 801d078:	1a9b      	subs	r3, r3, r2
 801d07a:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 801d07e:	e768      	b.n	801cf52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801d080:	f023 0204 	bic.w	r2, r3, #4
 801d084:	f640 611b 	movw	r1, #3611	; 0xe1b
 801d088:	428a      	cmp	r2, r1
 801d08a:	d003      	beq.n	801d094 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 801d08c:	f640 621d 	movw	r2, #3613	; 0xe1d
 801d090:	4293      	cmp	r3, r2
 801d092:	d120      	bne.n	801d0d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x19a>
 801d094:	3b01      	subs	r3, #1
 801d096:	4602      	mov	r2, r0
 801d098:	4629      	mov	r1, r5
 801d09a:	4620      	mov	r0, r4
 801d09c:	b29b      	uxth	r3, r3
 801d09e:	f7ff ff42 	bl	801cf26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d0a2:	7b41      	ldrb	r1, [r0, #13]
 801d0a4:	00cb      	lsls	r3, r1, #3
 801d0a6:	0649      	lsls	r1, r1, #25
 801d0a8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d0ac:	7a03      	ldrb	r3, [r0, #8]
 801d0ae:	ea43 0302 	orr.w	r3, r3, r2
 801d0b2:	bf44      	itt	mi
 801d0b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d0b8:	b21b      	sxthmi	r3, r3
 801d0ba:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d0be:	7b6b      	ldrb	r3, [r5, #13]
 801d0c0:	7aaa      	ldrb	r2, [r5, #10]
 801d0c2:	005b      	lsls	r3, r3, #1
 801d0c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801d0c8:	4313      	orrs	r3, r2
 801d0ca:	115a      	asrs	r2, r3, #5
 801d0cc:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801d0d0:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801d0d4:	e035      	b.n	801d142 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 801d0d6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801d0da:	f01c 0f40 	tst.w	ip, #64	; 0x40
 801d0de:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801d0e2:	7a2a      	ldrb	r2, [r5, #8]
 801d0e4:	ea42 0201 	orr.w	r2, r2, r1
 801d0e8:	f640 6109 	movw	r1, #3593	; 0xe09
 801d0ec:	bf1c      	itt	ne
 801d0ee:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801d0f2:	b212      	sxthne	r2, r2
 801d0f4:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 801d0f8:	f023 0210 	bic.w	r2, r3, #16
 801d0fc:	428a      	cmp	r2, r1
 801d0fe:	d003      	beq.n	801d108 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1cc>
 801d100:	f640 6213 	movw	r2, #3603	; 0xe13
 801d104:	4293      	cmp	r3, r2
 801d106:	d129      	bne.n	801d15c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 801d108:	7b6e      	ldrb	r6, [r5, #13]
 801d10a:	4629      	mov	r1, r5
 801d10c:	0076      	lsls	r6, r6, #1
 801d10e:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801d112:	7aae      	ldrb	r6, [r5, #10]
 801d114:	4316      	orrs	r6, r2
 801d116:	f640 6213 	movw	r2, #3603	; 0xe13
 801d11a:	4293      	cmp	r3, r2
 801d11c:	4602      	mov	r2, r0
 801d11e:	4620      	mov	r0, r4
 801d120:	bf16      	itet	ne
 801d122:	f103 33ff 	addne.w	r3, r3, #4294967295
 801d126:	f640 630c 	movweq	r3, #3596	; 0xe0c
 801d12a:	b29b      	uxthne	r3, r3
 801d12c:	f7ff fefb 	bl	801cf26 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801d130:	7b43      	ldrb	r3, [r0, #13]
 801d132:	7a82      	ldrb	r2, [r0, #10]
 801d134:	005b      	lsls	r3, r3, #1
 801d136:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801d13a:	4313      	orrs	r3, r2
 801d13c:	1af6      	subs	r6, r6, r3
 801d13e:	f8a4 6052 	strh.w	r6, [r4, #82]	; 0x52
 801d142:	7b69      	ldrb	r1, [r5, #13]
 801d144:	00cb      	lsls	r3, r1, #3
 801d146:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d14a:	7a2b      	ldrb	r3, [r5, #8]
 801d14c:	4313      	orrs	r3, r2
 801d14e:	064a      	lsls	r2, r1, #25
 801d150:	bf44      	itt	mi
 801d152:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d156:	b21b      	sxthmi	r3, r3
 801d158:	1bdb      	subs	r3, r3, r7
 801d15a:	e73f      	b.n	801cfdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 801d15c:	2300      	movs	r3, #0
 801d15e:	e7b7      	b.n	801d0d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x194>
 801d160:	3fc00079 	.word	0x3fc00079
 801d164:	0803164c 	.word	0x0803164c
 801d168:	080318be 	.word	0x080318be
 801d16c:	08031655 	.word	0x08031655

0801d170 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 801d170:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d174:	4604      	mov	r4, r0
 801d176:	b942      	cbnz	r2, 801d18a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801d178:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801d17c:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 801d180:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 801d184:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801d188:	e046      	b.n	801d218 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801d18a:	7b51      	ldrb	r1, [r2, #13]
 801d18c:	8893      	ldrh	r3, [r2, #4]
 801d18e:	010f      	lsls	r7, r1, #4
 801d190:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801d194:	79d7      	ldrb	r7, [r2, #7]
 801d196:	4307      	orrs	r7, r0
 801d198:	2f04      	cmp	r7, #4
 801d19a:	b2bd      	uxth	r5, r7
 801d19c:	bfcc      	ite	gt
 801d19e:	08bf      	lsrgt	r7, r7, #2
 801d1a0:	2701      	movle	r7, #1
 801d1a2:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801d1a6:	f200 80ab 	bhi.w	801d300 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 801d1aa:	f240 60e7 	movw	r0, #1767	; 0x6e7
 801d1ae:	4283      	cmp	r3, r0
 801d1b0:	d216      	bcs.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d1b2:	f240 605b 	movw	r0, #1627	; 0x65b
 801d1b6:	4283      	cmp	r3, r0
 801d1b8:	d859      	bhi.n	801d26e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 801d1ba:	f240 6057 	movw	r0, #1623	; 0x657
 801d1be:	4283      	cmp	r3, r0
 801d1c0:	d20e      	bcs.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d1c2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801d1c6:	d24a      	bcs.n	801d25e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 801d1c8:	f240 604e 	movw	r0, #1614	; 0x64e
 801d1cc:	4283      	cmp	r3, r0
 801d1ce:	d207      	bcs.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d1d0:	f240 601a 	movw	r0, #1562	; 0x61a
 801d1d4:	4283      	cmp	r3, r0
 801d1d6:	d02a      	beq.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d1d8:	d821      	bhi.n	801d21e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 801d1da:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 801d1de:	d35b      	bcc.n	801d298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d1e0:	f9b4 304e 	ldrsh.w	r3, [r4, #78]	; 0x4e
 801d1e4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801d1e8:	f040 80d0 	bne.w	801d38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801d1ec:	f9b4 0050 	ldrsh.w	r0, [r4, #80]	; 0x50
 801d1f0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801d1f4:	f040 80ca 	bne.w	801d38c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 801d1f8:	00cb      	lsls	r3, r1, #3
 801d1fa:	0649      	lsls	r1, r1, #25
 801d1fc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801d200:	7a13      	ldrb	r3, [r2, #8]
 801d202:	ea43 0300 	orr.w	r3, r3, r0
 801d206:	bf44      	itt	mi
 801d208:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d20c:	b21b      	sxthmi	r3, r3
 801d20e:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d212:	1b5d      	subs	r5, r3, r5
 801d214:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 801d218:	4610      	mov	r0, r2
 801d21a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d21e:	f240 604b 	movw	r0, #1611	; 0x64b
 801d222:	4283      	cmp	r3, r0
 801d224:	d338      	bcc.n	801d298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d226:	f240 604c 	movw	r0, #1612	; 0x64c
 801d22a:	4283      	cmp	r3, r0
 801d22c:	d9d8      	bls.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d22e:	f9b4 004e 	ldrsh.w	r0, [r4, #78]	; 0x4e
 801d232:	f9b4 3050 	ldrsh.w	r3, [r4, #80]	; 0x50
 801d236:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801d23a:	f040 80f2 	bne.w	801d422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 801d23e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801d242:	f040 80ee 	bne.w	801d422 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>
 801d246:	00cb      	lsls	r3, r1, #3
 801d248:	064e      	lsls	r6, r1, #25
 801d24a:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801d24e:	7a13      	ldrb	r3, [r2, #8]
 801d250:	ea43 0300 	orr.w	r3, r3, r0
 801d254:	bf44      	itt	mi
 801d256:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d25a:	b21b      	sxthmi	r3, r3
 801d25c:	e7d9      	b.n	801d212 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 801d25e:	f240 6054 	movw	r0, #1620	; 0x654
 801d262:	4283      	cmp	r3, r0
 801d264:	d8e3      	bhi.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d266:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801d26a:	d9e0      	bls.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d26c:	e7b8      	b.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d26e:	f240 6074 	movw	r0, #1652	; 0x674
 801d272:	4283      	cmp	r3, r0
 801d274:	d0b4      	beq.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d276:	d82d      	bhi.n	801d2d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 801d278:	f240 605e 	movw	r0, #1630	; 0x65e
 801d27c:	4283      	cmp	r3, r0
 801d27e:	d804      	bhi.n	801d28a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 801d280:	f240 605d 	movw	r0, #1629	; 0x65d
 801d284:	4283      	cmp	r3, r0
 801d286:	d3d2      	bcc.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d288:	e7aa      	b.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d28a:	f240 605f 	movw	r0, #1631	; 0x65f
 801d28e:	4283      	cmp	r3, r0
 801d290:	d0cd      	beq.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d292:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801d296:	d0a3      	beq.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d298:	00cb      	lsls	r3, r1, #3
 801d29a:	0649      	lsls	r1, r1, #25
 801d29c:	f403 7080 	and.w	r0, r3, #256	; 0x100
 801d2a0:	7a13      	ldrb	r3, [r2, #8]
 801d2a2:	ea43 0300 	orr.w	r3, r3, r0
 801d2a6:	bf44      	itt	mi
 801d2a8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d2ac:	b21b      	sxthmi	r3, r3
 801d2ae:	1b5d      	subs	r5, r3, r5
 801d2b0:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d2b4:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 801d2b8:	7b53      	ldrb	r3, [r2, #13]
 801d2ba:	015b      	lsls	r3, r3, #5
 801d2bc:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801d2c0:	7993      	ldrb	r3, [r2, #6]
 801d2c2:	430b      	orrs	r3, r1
 801d2c4:	2105      	movs	r1, #5
 801d2c6:	005b      	lsls	r3, r3, #1
 801d2c8:	fb93 f3f1 	sdiv	r3, r3, r1
 801d2cc:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801d2d0:	440b      	add	r3, r1
 801d2d2:	e757      	b.n	801d184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801d2d4:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801d2d8:	4283      	cmp	r3, r0
 801d2da:	d809      	bhi.n	801d2f0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 801d2dc:	f240 60df 	movw	r0, #1759	; 0x6df
 801d2e0:	4283      	cmp	r3, r0
 801d2e2:	f4bf af7d 	bcs.w	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d2e6:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 801d2ea:	2b05      	cmp	r3, #5
 801d2ec:	d8d4      	bhi.n	801d298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d2ee:	e777      	b.n	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d2f0:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801d2f4:	4283      	cmp	r3, r0
 801d2f6:	d09a      	beq.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d2f8:	f240 60e4 	movw	r0, #1764	; 0x6e4
 801d2fc:	4283      	cmp	r3, r0
 801d2fe:	e7ca      	b.n	801d296 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 801d300:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801d304:	d22b      	bcs.n	801d35e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 801d306:	f640 00ed 	movw	r0, #2285	; 0x8ed
 801d30a:	4283      	cmp	r3, r0
 801d30c:	d28f      	bcs.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d30e:	f640 00e5 	movw	r0, #2277	; 0x8e5
 801d312:	4283      	cmp	r3, r0
 801d314:	d816      	bhi.n	801d344 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 801d316:	f640 00e4 	movw	r0, #2276	; 0x8e4
 801d31a:	4283      	cmp	r3, r0
 801d31c:	f4bf af60 	bcs.w	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d320:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801d324:	4283      	cmp	r3, r0
 801d326:	d80a      	bhi.n	801d33e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 801d328:	f240 60eb 	movw	r0, #1771	; 0x6eb
 801d32c:	4283      	cmp	r3, r0
 801d32e:	f4bf af57 	bcs.w	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d332:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801d336:	4283      	cmp	r3, r0
 801d338:	f43f af79 	beq.w	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d33c:	e7ac      	b.n	801d298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801d33e:	f240 60ed 	movw	r0, #1773	; 0x6ed
 801d342:	e7f8      	b.n	801d336 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 801d344:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801d348:	4283      	cmp	r3, r0
 801d34a:	d802      	bhi.n	801d352 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 801d34c:	f640 00e7 	movw	r0, #2279	; 0x8e7
 801d350:	e798      	b.n	801d284 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 801d352:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801d356:	4283      	cmp	r3, r0
 801d358:	f47f af42 	bne.w	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d35c:	e767      	b.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d35e:	f640 00f6 	movw	r0, #2294	; 0x8f6
 801d362:	4283      	cmp	r3, r0
 801d364:	f43f af63 	beq.w	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d368:	d802      	bhi.n	801d370 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 801d36a:	f640 00f2 	movw	r0, #2290	; 0x8f2
 801d36e:	e7f2      	b.n	801d356 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 801d370:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801d374:	4283      	cmp	r3, r0
 801d376:	d805      	bhi.n	801d384 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 801d378:	f640 00f9 	movw	r0, #2297	; 0x8f9
 801d37c:	4283      	cmp	r3, r0
 801d37e:	f4ff af2f 	bcc.w	801d1e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 801d382:	e754      	b.n	801d22e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 801d384:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801d388:	4283      	cmp	r3, r0
 801d38a:	e7af      	b.n	801d2ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 801d38c:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 801d390:	4617      	mov	r7, r2
 801d392:	f102 0808 	add.w	r8, r2, #8
 801d396:	4666      	mov	r6, ip
 801d398:	6838      	ldr	r0, [r7, #0]
 801d39a:	3708      	adds	r7, #8
 801d39c:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801d3a0:	46e6      	mov	lr, ip
 801d3a2:	4547      	cmp	r7, r8
 801d3a4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801d3a8:	46f4      	mov	ip, lr
 801d3aa:	d1f5      	bne.n	801d398 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 801d3ac:	6838      	ldr	r0, [r7, #0]
 801d3ae:	f8ce 0000 	str.w	r0, [lr]
 801d3b2:	88b9      	ldrh	r1, [r7, #4]
 801d3b4:	f8ae 1004 	strh.w	r1, [lr, #4]
 801d3b8:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 801d3bc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801d3c0:	d009      	beq.n	801d3d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801d3c2:	7b51      	ldrb	r1, [r2, #13]
 801d3c4:	7992      	ldrb	r2, [r2, #6]
 801d3c6:	0149      	lsls	r1, r1, #5
 801d3c8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801d3cc:	4311      	orrs	r1, r2
 801d3ce:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d3d2:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 801d3d6:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801d3da:	d00d      	beq.n	801d3f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x288>
 801d3dc:	442b      	add	r3, r5
 801d3de:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801d3e2:	b29b      	uxth	r3, r3
 801d3e4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801d3e8:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 801d3ec:	10db      	asrs	r3, r3, #3
 801d3ee:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801d3f2:	4313      	orrs	r3, r2
 801d3f4:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 801d3f8:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801d3fc:	00cb      	lsls	r3, r1, #3
 801d3fe:	064f      	lsls	r7, r1, #25
 801d400:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d404:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 801d408:	ea43 0302 	orr.w	r3, r3, r2
 801d40c:	bf44      	itt	mi
 801d40e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d412:	b21b      	sxthmi	r3, r3
 801d414:	f8a4 304e 	strh.w	r3, [r4, #78]	; 0x4e
 801d418:	1b5d      	subs	r5, r3, r5
 801d41a:	4632      	mov	r2, r6
 801d41c:	f8a4 5050 	strh.w	r5, [r4, #80]	; 0x50
 801d420:	e6fa      	b.n	801d218 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 801d422:	f104 0e40 	add.w	lr, r4, #64	; 0x40
 801d426:	4694      	mov	ip, r2
 801d428:	f102 0908 	add.w	r9, r2, #8
 801d42c:	4676      	mov	r6, lr
 801d42e:	f8dc 0000 	ldr.w	r0, [ip]
 801d432:	f10c 0c08 	add.w	ip, ip, #8
 801d436:	f85c 1c04 	ldr.w	r1, [ip, #-4]
 801d43a:	46f0      	mov	r8, lr
 801d43c:	45cc      	cmp	ip, r9
 801d43e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801d442:	46c6      	mov	lr, r8
 801d444:	d1f3      	bne.n	801d42e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2be>
 801d446:	f8dc 0000 	ldr.w	r0, [ip]
 801d44a:	f8c8 0000 	str.w	r0, [r8]
 801d44e:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 801d452:	f8a8 1004 	strh.w	r1, [r8, #4]
 801d456:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 801d45a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801d45e:	d009      	beq.n	801d474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x304>
 801d460:	7b51      	ldrb	r1, [r2, #13]
 801d462:	7992      	ldrb	r2, [r2, #6]
 801d464:	0149      	lsls	r1, r1, #5
 801d466:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801d46a:	4311      	orrs	r1, r2
 801d46c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801d470:	f884 0049 	strb.w	r0, [r4, #73]	; 0x49
 801d474:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801d478:	d00d      	beq.n	801d496 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x326>
 801d47a:	1bdb      	subs	r3, r3, r7
 801d47c:	f894 204d 	ldrb.w	r2, [r4, #77]	; 0x4d
 801d480:	b29b      	uxth	r3, r3
 801d482:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801d486:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
 801d48a:	10db      	asrs	r3, r3, #3
 801d48c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801d490:	4313      	orrs	r3, r2
 801d492:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 801d496:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 801d49a:	00cb      	lsls	r3, r1, #3
 801d49c:	0648      	lsls	r0, r1, #25
 801d49e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d4a2:	f894 3048 	ldrb.w	r3, [r4, #72]	; 0x48
 801d4a6:	ea43 0302 	orr.w	r3, r3, r2
 801d4aa:	bf44      	itt	mi
 801d4ac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801d4b0:	b21b      	sxthmi	r3, r3
 801d4b2:	e7b1      	b.n	801d418 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a8>

0801d4b4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801d4b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d4b8:	461e      	mov	r6, r3
 801d4ba:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801d4bc:	4604      	mov	r4, r0
 801d4be:	4617      	mov	r7, r2
 801d4c0:	b92b      	cbnz	r3, 801d4ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 801d4c2:	4b25      	ldr	r3, [pc, #148]	; (801d558 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 801d4c4:	21c0      	movs	r1, #192	; 0xc0
 801d4c6:	4a25      	ldr	r2, [pc, #148]	; (801d55c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 801d4c8:	4825      	ldr	r0, [pc, #148]	; (801d560 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 801d4ca:	f00e fd0d 	bl	802bee8 <__assert_func>
 801d4ce:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801d4d0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d4d4:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 801d4d8:	f7f0 ffaa 	bl	800e430 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d4dc:	4605      	mov	r5, r0
 801d4de:	b918      	cbnz	r0, 801d4e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 801d4e0:	6030      	str	r0, [r6, #0]
 801d4e2:	4628      	mov	r0, r5
 801d4e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d4e8:	683b      	ldr	r3, [r7, #0]
 801d4ea:	4601      	mov	r1, r0
 801d4ec:	4638      	mov	r0, r7
 801d4ee:	68db      	ldr	r3, [r3, #12]
 801d4f0:	4798      	blx	r3
 801d4f2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801d4f6:	4602      	mov	r2, r0
 801d4f8:	6030      	str	r0, [r6, #0]
 801d4fa:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801d4fe:	d213      	bcs.n	801d528 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 801d500:	4643      	mov	r3, r8
 801d502:	4639      	mov	r1, r7
 801d504:	4620      	mov	r0, r4
 801d506:	f7ff fe33 	bl	801d170 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d50a:	6030      	str	r0, [r6, #0]
 801d50c:	6833      	ldr	r3, [r6, #0]
 801d50e:	b143      	cbz	r3, 801d522 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 801d510:	7b5a      	ldrb	r2, [r3, #13]
 801d512:	7a9b      	ldrb	r3, [r3, #10]
 801d514:	0052      	lsls	r2, r2, #1
 801d516:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801d51a:	4313      	orrs	r3, r2
 801d51c:	bf0c      	ite	eq
 801d51e:	2301      	moveq	r3, #1
 801d520:	2300      	movne	r3, #0
 801d522:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801d526:	e7dc      	b.n	801d4e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 801d528:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801d52c:	b29b      	uxth	r3, r3
 801d52e:	2b7f      	cmp	r3, #127	; 0x7f
 801d530:	d804      	bhi.n	801d53c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 801d532:	4639      	mov	r1, r7
 801d534:	4620      	mov	r0, r4
 801d536:	f7ff fd01 	bl	801cf3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d53a:	e7e6      	b.n	801d50a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801d53c:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801d540:	2b00      	cmp	r3, #0
 801d542:	d0e3      	beq.n	801d50c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801d544:	f640 1302 	movw	r3, #2306	; 0x902
 801d548:	429d      	cmp	r5, r3
 801d54a:	d1df      	bne.n	801d50c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 801d54c:	4601      	mov	r1, r0
 801d54e:	4620      	mov	r0, r4
 801d550:	f7ff fcc5 	bl	801cede <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d554:	e7d9      	b.n	801d50a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 801d556:	bf00      	nop
 801d558:	0803164c 	.word	0x0803164c
 801d55c:	080318be 	.word	0x080318be
 801d560:	08031655 	.word	0x08031655

0801d564 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801d564:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d568:	461e      	mov	r6, r3
 801d56a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801d56c:	4604      	mov	r4, r0
 801d56e:	4617      	mov	r7, r2
 801d570:	b92b      	cbnz	r3, 801d57e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1a>
 801d572:	4b26      	ldr	r3, [pc, #152]	; (801d60c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xa8>)
 801d574:	21c0      	movs	r1, #192	; 0xc0
 801d576:	4a26      	ldr	r2, [pc, #152]	; (801d610 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xac>)
 801d578:	4826      	ldr	r0, [pc, #152]	; (801d614 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0xb0>)
 801d57a:	f00e fcb5 	bl	802bee8 <__assert_func>
 801d57e:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801d580:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d584:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 801d588:	f7f0 ff52 	bl	800e430 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801d58c:	4605      	mov	r5, r0
 801d58e:	b918      	cbnz	r0, 801d598 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x34>
 801d590:	6030      	str	r0, [r6, #0]
 801d592:	4628      	mov	r0, r5
 801d594:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d598:	683b      	ldr	r3, [r7, #0]
 801d59a:	4601      	mov	r1, r0
 801d59c:	4638      	mov	r0, r7
 801d59e:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801d5a2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801d5a6:	47c8      	blx	r9
 801d5a8:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801d5ac:	4602      	mov	r2, r0
 801d5ae:	6030      	str	r0, [r6, #0]
 801d5b0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801d5b4:	d213      	bcs.n	801d5de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7a>
 801d5b6:	4643      	mov	r3, r8
 801d5b8:	4639      	mov	r1, r7
 801d5ba:	4620      	mov	r0, r4
 801d5bc:	f7ff fdd8 	bl	801d170 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801d5c0:	6030      	str	r0, [r6, #0]
 801d5c2:	6833      	ldr	r3, [r6, #0]
 801d5c4:	b143      	cbz	r3, 801d5d8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x74>
 801d5c6:	7b5a      	ldrb	r2, [r3, #13]
 801d5c8:	7a9b      	ldrb	r3, [r3, #10]
 801d5ca:	0052      	lsls	r2, r2, #1
 801d5cc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801d5d0:	4313      	orrs	r3, r2
 801d5d2:	bf0c      	ite	eq
 801d5d4:	2301      	moveq	r3, #1
 801d5d6:	2300      	movne	r3, #0
 801d5d8:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801d5dc:	e7d9      	b.n	801d592 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x2e>
 801d5de:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 801d5e2:	b29b      	uxth	r3, r3
 801d5e4:	2b7f      	cmp	r3, #127	; 0x7f
 801d5e6:	d804      	bhi.n	801d5f2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x8e>
 801d5e8:	4639      	mov	r1, r7
 801d5ea:	4620      	mov	r0, r4
 801d5ec:	f7ff fca6 	bl	801cf3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801d5f0:	e7e6      	b.n	801d5c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801d5f2:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 801d5f6:	2b00      	cmp	r3, #0
 801d5f8:	d0e3      	beq.n	801d5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801d5fa:	f640 1302 	movw	r3, #2306	; 0x902
 801d5fe:	429d      	cmp	r5, r3
 801d600:	d1df      	bne.n	801d5c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5e>
 801d602:	4601      	mov	r1, r0
 801d604:	4620      	mov	r0, r4
 801d606:	f7ff fc6a 	bl	801cede <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801d60a:	e7d9      	b.n	801d5c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x5c>
 801d60c:	0803164c 	.word	0x0803164c
 801d610:	080318be 	.word	0x080318be
 801d614:	08031655 	.word	0x08031655

0801d618 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801d618:	b510      	push	{r4, lr}
 801d61a:	4604      	mov	r4, r0
 801d61c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801d61e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801d620:	b9d9      	cbnz	r1, 801d65a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 801d622:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801d624:	2b0a      	cmp	r3, #10
 801d626:	d036      	beq.n	801d696 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 801d628:	4620      	mov	r0, r4
 801d62a:	f7ff fc21 	bl	801ce70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801d62e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801d630:	2b09      	cmp	r3, #9
 801d632:	d906      	bls.n	801d642 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 801d634:	4b18      	ldr	r3, [pc, #96]	; (801d698 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 801d636:	f44f 7182 	mov.w	r1, #260	; 0x104
 801d63a:	4a18      	ldr	r2, [pc, #96]	; (801d69c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 801d63c:	4818      	ldr	r0, [pc, #96]	; (801d6a0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 801d63e:	f00e fc53 	bl	802bee8 <__assert_func>
 801d642:	1c5a      	adds	r2, r3, #1
 801d644:	8622      	strh	r2, [r4, #48]	; 0x30
 801d646:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 801d648:	4413      	add	r3, r2
 801d64a:	b29b      	uxth	r3, r3
 801d64c:	2b09      	cmp	r3, #9
 801d64e:	bf88      	it	hi
 801d650:	3b0a      	subhi	r3, #10
 801d652:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d656:	8358      	strh	r0, [r3, #26]
 801d658:	e7e3      	b.n	801d622 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 801d65a:	2b0a      	cmp	r3, #10
 801d65c:	d01b      	beq.n	801d696 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 801d65e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801d660:	3901      	subs	r1, #1
 801d662:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801d666:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 801d668:	8721      	strh	r1, [r4, #56]	; 0x38
 801d66a:	1c51      	adds	r1, r2, #1
 801d66c:	b289      	uxth	r1, r1
 801d66e:	2901      	cmp	r1, #1
 801d670:	bf8a      	itet	hi
 801d672:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801d676:	86e1      	strhls	r1, [r4, #54]	; 0x36
 801d678:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 801d67a:	2b09      	cmp	r3, #9
 801d67c:	d8da      	bhi.n	801d634 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 801d67e:	1c5a      	adds	r2, r3, #1
 801d680:	8622      	strh	r2, [r4, #48]	; 0x30
 801d682:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 801d684:	4413      	add	r3, r2
 801d686:	b29b      	uxth	r3, r3
 801d688:	2b09      	cmp	r3, #9
 801d68a:	bf88      	it	hi
 801d68c:	3b0a      	subhi	r3, #10
 801d68e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d692:	8358      	strh	r0, [r3, #26]
 801d694:	e7c2      	b.n	801d61c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801d696:	bd10      	pop	{r4, pc}
 801d698:	08031681 	.word	0x08031681
 801d69c:	08031a14 	.word	0x08031a14
 801d6a0:	08031655 	.word	0x08031655

0801d6a4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801d6a4:	b538      	push	{r3, r4, r5, lr}
 801d6a6:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 801d6a8:	4604      	mov	r4, r0
 801d6aa:	b92a      	cbnz	r2, 801d6b8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 801d6ac:	4b13      	ldr	r3, [pc, #76]	; (801d6fc <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 801d6ae:	21d5      	movs	r1, #213	; 0xd5
 801d6b0:	4a13      	ldr	r2, [pc, #76]	; (801d700 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 801d6b2:	4814      	ldr	r0, [pc, #80]	; (801d704 <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 801d6b4:	f00e fc18 	bl	802bee8 <__assert_func>
 801d6b8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801d6ba:	3a01      	subs	r2, #1
 801d6bc:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 801d6c0:	8b4d      	ldrh	r5, [r1, #26]
 801d6c2:	8602      	strh	r2, [r0, #48]	; 0x30
 801d6c4:	1c5a      	adds	r2, r3, #1
 801d6c6:	b292      	uxth	r2, r2
 801d6c8:	2a09      	cmp	r2, #9
 801d6ca:	bf8a      	itet	hi
 801d6cc:	3b09      	subhi	r3, #9
 801d6ce:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 801d6d0:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 801d6d2:	f7ff ffa1 	bl	801d618 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801d6d6:	8b23      	ldrh	r3, [r4, #24]
 801d6d8:	2b01      	cmp	r3, #1
 801d6da:	bf9c      	itt	ls
 801d6dc:	3301      	addls	r3, #1
 801d6de:	8323      	strhls	r3, [r4, #24]
 801d6e0:	8ae3      	ldrh	r3, [r4, #22]
 801d6e2:	b90b      	cbnz	r3, 801d6e8 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 801d6e4:	2302      	movs	r3, #2
 801d6e6:	82e3      	strh	r3, [r4, #22]
 801d6e8:	8ae3      	ldrh	r3, [r4, #22]
 801d6ea:	4628      	mov	r0, r5
 801d6ec:	3b01      	subs	r3, #1
 801d6ee:	b29b      	uxth	r3, r3
 801d6f0:	82e3      	strh	r3, [r4, #22]
 801d6f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801d6f6:	8265      	strh	r5, [r4, #18]
 801d6f8:	bd38      	pop	{r3, r4, r5, pc}
 801d6fa:	bf00      	nop
 801d6fc:	0803164c 	.word	0x0803164c
 801d700:	08031969 	.word	0x08031969
 801d704:	08031655 	.word	0x08031655

0801d708 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801d708:	428a      	cmp	r2, r1
 801d70a:	b538      	push	{r3, r4, r5, lr}
 801d70c:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 801d70e:	d90c      	bls.n	801d72a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 801d710:	b92c      	cbnz	r4, 801d71e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 801d712:	4b1c      	ldr	r3, [pc, #112]	; (801d784 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 801d714:	21e1      	movs	r1, #225	; 0xe1
 801d716:	4a1c      	ldr	r2, [pc, #112]	; (801d788 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 801d718:	481c      	ldr	r0, [pc, #112]	; (801d78c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 801d71a:	f00e fbe5 	bl	802bee8 <__assert_func>
 801d71e:	3c01      	subs	r4, #1
 801d720:	4b1b      	ldr	r3, [pc, #108]	; (801d790 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 801d722:	4a1c      	ldr	r2, [pc, #112]	; (801d794 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 801d724:	21c5      	movs	r1, #197	; 0xc5
 801d726:	8604      	strh	r4, [r0, #48]	; 0x30
 801d728:	e7f6      	b.n	801d718 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801d72a:	428c      	cmp	r4, r1
 801d72c:	d203      	bcs.n	801d736 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 801d72e:	4b1a      	ldr	r3, [pc, #104]	; (801d798 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 801d730:	21cb      	movs	r1, #203	; 0xcb
 801d732:	4a1a      	ldr	r2, [pc, #104]	; (801d79c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 801d734:	e7f0      	b.n	801d718 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801d736:	1a64      	subs	r4, r4, r1
 801d738:	250a      	movs	r5, #10
 801d73a:	8604      	strh	r4, [r0, #48]	; 0x30
 801d73c:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 801d73e:	4421      	add	r1, r4
 801d740:	b289      	uxth	r1, r1
 801d742:	2909      	cmp	r1, #9
 801d744:	bf88      	it	hi
 801d746:	390a      	subhi	r1, #10
 801d748:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801d74a:	b1ba      	cbz	r2, 801d77c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 801d74c:	3a01      	subs	r2, #1
 801d74e:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 801d750:	b292      	uxth	r2, r2
 801d752:	2909      	cmp	r1, #9
 801d754:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801d758:	d903      	bls.n	801d762 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 801d75a:	4b11      	ldr	r3, [pc, #68]	; (801d7a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 801d75c:	21e6      	movs	r1, #230	; 0xe6
 801d75e:	4a11      	ldr	r2, [pc, #68]	; (801d7a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 801d760:	e7da      	b.n	801d718 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 801d762:	3101      	adds	r1, #1
 801d764:	8601      	strh	r1, [r0, #48]	; 0x30
 801d766:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 801d768:	b901      	cbnz	r1, 801d76c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 801d76a:	85c5      	strh	r5, [r0, #46]	; 0x2e
 801d76c:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 801d76e:	3901      	subs	r1, #1
 801d770:	b289      	uxth	r1, r1
 801d772:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801d774:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 801d778:	834c      	strh	r4, [r1, #26]
 801d77a:	e7e6      	b.n	801d74a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 801d77c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801d780:	f7ff bf4a 	b.w	801d618 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801d784:	0803164c 	.word	0x0803164c
 801d788:	08031742 	.word	0x08031742
 801d78c:	08031655 	.word	0x08031655
 801d790:	0803168d 	.word	0x0803168d
 801d794:	080317ec 	.word	0x080317ec
 801d798:	0803169b 	.word	0x0803169b
 801d79c:	08031ac3 	.word	0x08031ac3
 801d7a0:	080316a7 	.word	0x080316a7
 801d7a4:	080316ba 	.word	0x080316ba

0801d7a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801d7a8:	3a01      	subs	r2, #1
 801d7aa:	b570      	push	{r4, r5, r6, lr}
 801d7ac:	b292      	uxth	r2, r2
 801d7ae:	f64f 76ff 	movw	r6, #65535	; 0xffff
 801d7b2:	42b2      	cmp	r2, r6
 801d7b4:	d019      	beq.n	801d7ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 801d7b6:	8b04      	ldrh	r4, [r0, #24]
 801d7b8:	f831 5b02 	ldrh.w	r5, [r1], #2
 801d7bc:	4294      	cmp	r4, r2
 801d7be:	d805      	bhi.n	801d7cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 801d7c0:	4b19      	ldr	r3, [pc, #100]	; (801d828 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801d7c2:	4a1a      	ldr	r2, [pc, #104]	; (801d82c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 801d7c4:	21c5      	movs	r1, #197	; 0xc5
 801d7c6:	481a      	ldr	r0, [pc, #104]	; (801d830 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 801d7c8:	f00e fb8e 	bl	802bee8 <__assert_func>
 801d7cc:	8ac4      	ldrh	r4, [r0, #22]
 801d7ce:	4414      	add	r4, r2
 801d7d0:	3a01      	subs	r2, #1
 801d7d2:	b2a4      	uxth	r4, r4
 801d7d4:	b292      	uxth	r2, r2
 801d7d6:	2c01      	cmp	r4, #1
 801d7d8:	bf88      	it	hi
 801d7da:	3c02      	subhi	r4, #2
 801d7dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801d7e0:	8a64      	ldrh	r4, [r4, #18]
 801d7e2:	42ac      	cmp	r4, r5
 801d7e4:	d0e5      	beq.n	801d7b2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 801d7e6:	2000      	movs	r0, #0
 801d7e8:	bd70      	pop	{r4, r5, r6, pc}
 801d7ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d7ee:	2400      	movs	r4, #0
 801d7f0:	4413      	add	r3, r2
 801d7f2:	b2a2      	uxth	r2, r4
 801d7f4:	429a      	cmp	r2, r3
 801d7f6:	da14      	bge.n	801d822 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 801d7f8:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 801d7fa:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801d7fe:	4296      	cmp	r6, r2
 801d800:	d802      	bhi.n	801d808 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 801d802:	4b09      	ldr	r3, [pc, #36]	; (801d828 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 801d804:	4a0b      	ldr	r2, [pc, #44]	; (801d834 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 801d806:	e7dd      	b.n	801d7c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 801d808:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 801d80a:	3401      	adds	r4, #1
 801d80c:	4432      	add	r2, r6
 801d80e:	b292      	uxth	r2, r2
 801d810:	2a09      	cmp	r2, #9
 801d812:	bf88      	it	hi
 801d814:	3a0a      	subhi	r2, #10
 801d816:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d81a:	8b52      	ldrh	r2, [r2, #26]
 801d81c:	42aa      	cmp	r2, r5
 801d81e:	d0e8      	beq.n	801d7f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 801d820:	e7e1      	b.n	801d7e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 801d822:	2001      	movs	r0, #1
 801d824:	e7e0      	b.n	801d7e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 801d826:	bf00      	nop
 801d828:	0803168d 	.word	0x0803168d
 801d82c:	08031b47 	.word	0x08031b47
 801d830:	08031655 	.word	0x08031655
 801d834:	080317ec 	.word	0x080317ec

0801d838 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801d838:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d83c:	4605      	mov	r5, r0
 801d83e:	4616      	mov	r6, r2
 801d840:	1c8c      	adds	r4, r1, #2
 801d842:	8809      	ldrh	r1, [r1, #0]
 801d844:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801d848:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801d84c:	42b3      	cmp	r3, r6
 801d84e:	d124      	bne.n	801d89a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801d850:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801d854:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801d858:	f001 070f 	and.w	r7, r1, #15
 801d85c:	4652      	mov	r2, sl
 801d85e:	f8cd 8000 	str.w	r8, [sp]
 801d862:	464b      	mov	r3, r9
 801d864:	4621      	mov	r1, r4
 801d866:	4628      	mov	r0, r5
 801d868:	f7ff ff9e 	bl	801d7a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801d86c:	4683      	mov	fp, r0
 801d86e:	b168      	cbz	r0, 801d88c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801d870:	eb0a 0109 	add.w	r1, sl, r9
 801d874:	463a      	mov	r2, r7
 801d876:	4628      	mov	r0, r5
 801d878:	4441      	add	r1, r8
 801d87a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801d87e:	4649      	mov	r1, r9
 801d880:	f7ff ff42 	bl	801d708 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801d884:	4658      	mov	r0, fp
 801d886:	b003      	add	sp, #12
 801d888:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d88c:	eb07 010a 	add.w	r1, r7, sl
 801d890:	4449      	add	r1, r9
 801d892:	4441      	add	r1, r8
 801d894:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801d898:	e7d2      	b.n	801d840 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801d89a:	f04f 0b00 	mov.w	fp, #0
 801d89e:	e7f1      	b.n	801d884 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801d8a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801d8a0:	b570      	push	{r4, r5, r6, lr}
 801d8a2:	8810      	ldrh	r0, [r2, #0]
 801d8a4:	4298      	cmp	r0, r3
 801d8a6:	d817      	bhi.n	801d8d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801d8a8:	1e48      	subs	r0, r1, #1
 801d8aa:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801d8ae:	4298      	cmp	r0, r3
 801d8b0:	d312      	bcc.n	801d8d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801d8b2:	2400      	movs	r4, #0
 801d8b4:	428c      	cmp	r4, r1
 801d8b6:	d20f      	bcs.n	801d8d8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801d8b8:	1860      	adds	r0, r4, r1
 801d8ba:	1040      	asrs	r0, r0, #1
 801d8bc:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801d8c0:	0085      	lsls	r5, r0, #2
 801d8c2:	42b3      	cmp	r3, r6
 801d8c4:	d902      	bls.n	801d8cc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 801d8c6:	3001      	adds	r0, #1
 801d8c8:	b284      	uxth	r4, r0
 801d8ca:	e7f3      	b.n	801d8b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801d8cc:	d201      	bcs.n	801d8d2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801d8ce:	b281      	uxth	r1, r0
 801d8d0:	e7f0      	b.n	801d8b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801d8d2:	442a      	add	r2, r5
 801d8d4:	8850      	ldrh	r0, [r2, #2]
 801d8d6:	bd70      	pop	{r4, r5, r6, pc}
 801d8d8:	2000      	movs	r0, #0
 801d8da:	e7fc      	b.n	801d8d6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801d8dc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801d8dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d8e0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 801d8e2:	4604      	mov	r4, r0
 801d8e4:	260b      	movs	r6, #11
 801d8e6:	886f      	ldrh	r7, [r5, #2]
 801d8e8:	087f      	lsrs	r7, r7, #1
 801d8ea:	3e01      	subs	r6, #1
 801d8ec:	d01b      	beq.n	801d926 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801d8ee:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 801d8f0:	b92b      	cbnz	r3, 801d8fe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 801d8f2:	4b0e      	ldr	r3, [pc, #56]	; (801d92c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 801d8f4:	21c0      	movs	r1, #192	; 0xc0
 801d8f6:	4a0e      	ldr	r2, [pc, #56]	; (801d930 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 801d8f8:	480e      	ldr	r0, [pc, #56]	; (801d934 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 801d8fa:	f00e faf5 	bl	802bee8 <__assert_func>
 801d8fe:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 801d900:	462a      	mov	r2, r5
 801d902:	4639      	mov	r1, r7
 801d904:	4620      	mov	r0, r4
 801d906:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d90a:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 801d90e:	4643      	mov	r3, r8
 801d910:	f7ff ffc6 	bl	801d8a0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801d914:	b138      	cbz	r0, 801d926 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 801d916:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801d91a:	4642      	mov	r2, r8
 801d91c:	4620      	mov	r0, r4
 801d91e:	f7ff ff8b 	bl	801d838 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 801d922:	2800      	cmp	r0, #0
 801d924:	d1e1      	bne.n	801d8ea <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801d926:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d92a:	bf00      	nop
 801d92c:	0803164c 	.word	0x0803164c
 801d930:	080318be 	.word	0x080318be
 801d934:	08031655 	.word	0x08031655

0801d938 <_ZN8touchgfx8ceil28_4El>:
 801d938:	f110 030f 	adds.w	r3, r0, #15
 801d93c:	d401      	bmi.n	801d942 <_ZN8touchgfx8ceil28_4El+0xa>
 801d93e:	1118      	asrs	r0, r3, #4
 801d940:	4770      	bx	lr
 801d942:	2210      	movs	r2, #16
 801d944:	f1c0 0001 	rsb	r0, r0, #1
 801d948:	fb93 f3f2 	sdiv	r3, r3, r2
 801d94c:	f010 000f 	ands.w	r0, r0, #15
 801d950:	bf18      	it	ne
 801d952:	2001      	movne	r0, #1
 801d954:	1a18      	subs	r0, r3, r0
 801d956:	4770      	bx	lr

0801d958 <_ZN8touchgfx11floorDivModEllRlS0_>:
 801d958:	2900      	cmp	r1, #0
 801d95a:	b538      	push	{r3, r4, r5, lr}
 801d95c:	dc05      	bgt.n	801d96a <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 801d95e:	4b0f      	ldr	r3, [pc, #60]	; (801d99c <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 801d960:	21fa      	movs	r1, #250	; 0xfa
 801d962:	4a0f      	ldr	r2, [pc, #60]	; (801d9a0 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 801d964:	480f      	ldr	r0, [pc, #60]	; (801d9a4 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 801d966:	f00e fabf 	bl	802bee8 <__assert_func>
 801d96a:	2800      	cmp	r0, #0
 801d96c:	db06      	blt.n	801d97c <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 801d96e:	fb90 f4f1 	sdiv	r4, r0, r1
 801d972:	fb01 0114 	mls	r1, r1, r4, r0
 801d976:	6014      	str	r4, [r2, #0]
 801d978:	6019      	str	r1, [r3, #0]
 801d97a:	bd38      	pop	{r3, r4, r5, pc}
 801d97c:	4240      	negs	r0, r0
 801d97e:	fb90 f4f1 	sdiv	r4, r0, r1
 801d982:	4265      	negs	r5, r4
 801d984:	fb01 0014 	mls	r0, r1, r4, r0
 801d988:	6015      	str	r5, [r2, #0]
 801d98a:	6018      	str	r0, [r3, #0]
 801d98c:	2800      	cmp	r0, #0
 801d98e:	d0f4      	beq.n	801d97a <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 801d990:	6810      	ldr	r0, [r2, #0]
 801d992:	3801      	subs	r0, #1
 801d994:	6010      	str	r0, [r2, #0]
 801d996:	6818      	ldr	r0, [r3, #0]
 801d998:	1a09      	subs	r1, r1, r0
 801d99a:	e7ed      	b.n	801d978 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 801d99c:	08031c18 	.word	0x08031c18
 801d9a0:	08031c57 	.word	0x08031c57
 801d9a4:	08031c28 	.word	0x08031c28

0801d9a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801d9a8:	b570      	push	{r4, r5, r6, lr}
 801d9aa:	694a      	ldr	r2, [r1, #20]
 801d9ac:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 801d9ae:	684b      	ldr	r3, [r1, #4]
 801d9b0:	1b54      	subs	r4, r2, r5
 801d9b2:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801d9b4:	f000 8106 	beq.w	801dbc4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801d9b8:	1b9b      	subs	r3, r3, r6
 801d9ba:	d003      	beq.n	801d9c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801d9bc:	4363      	muls	r3, r4
 801d9be:	2210      	movs	r2, #16
 801d9c0:	fb93 f3f2 	sdiv	r3, r3, r2
 801d9c4:	680c      	ldr	r4, [r1, #0]
 801d9c6:	698a      	ldr	r2, [r1, #24]
 801d9c8:	1b65      	subs	r5, r4, r5
 801d9ca:	f000 80fd 	beq.w	801dbc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801d9ce:	1b92      	subs	r2, r2, r6
 801d9d0:	d003      	beq.n	801d9da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801d9d2:	436a      	muls	r2, r5
 801d9d4:	2410      	movs	r4, #16
 801d9d6:	fb92 f2f4 	sdiv	r2, r2, r4
 801d9da:	1a9b      	subs	r3, r3, r2
 801d9dc:	ed9f 4a89 	vldr	s8, [pc, #548]	; 801dc04 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801d9e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d9e4:	460a      	mov	r2, r1
 801d9e6:	ee07 3a90 	vmov	s15, r3
 801d9ea:	f100 040c 	add.w	r4, r0, #12
 801d9ee:	4603      	mov	r3, r0
 801d9f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801d9f4:	ee67 7a84 	vmul.f32	s15, s15, s8
 801d9f8:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801d9fc:	eeb1 6a43 	vneg.f32	s12, s6
 801da00:	edd2 7a02 	vldr	s15, [r2, #8]
 801da04:	3214      	adds	r2, #20
 801da06:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801da0a:	ece3 6a01 	vstmia	r3!, {s13}
 801da0e:	429c      	cmp	r4, r3
 801da10:	ed52 7a02 	vldr	s15, [r2, #-8]
 801da14:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801da18:	edc3 7a02 	vstr	s15, [r3, #8]
 801da1c:	ed52 7a01 	vldr	s15, [r2, #-4]
 801da20:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801da24:	edc3 7a05 	vstr	s15, [r3, #20]
 801da28:	d1ea      	bne.n	801da00 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801da2a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801da2c:	698b      	ldr	r3, [r1, #24]
 801da2e:	edd0 4a02 	vldr	s9, [r0, #8]
 801da32:	1a9b      	subs	r3, r3, r2
 801da34:	edd0 3a00 	vldr	s7, [r0]
 801da38:	edd0 6a01 	vldr	s13, [r0, #4]
 801da3c:	ee07 3a90 	vmov	s15, r3
 801da40:	684b      	ldr	r3, [r1, #4]
 801da42:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801da46:	ed90 5a05 	vldr	s10, [r0, #20]
 801da4a:	1a9b      	subs	r3, r3, r2
 801da4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801da50:	ee73 4ae4 	vsub.f32	s9, s7, s9
 801da54:	ed90 2a03 	vldr	s4, [r0, #12]
 801da58:	ee07 3a10 	vmov	s14, r3
 801da5c:	edd0 5a04 	vldr	s11, [r0, #16]
 801da60:	ee67 7a84 	vmul.f32	s15, s15, s8
 801da64:	ed90 1a07 	vldr	s2, [r0, #28]
 801da68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801da6c:	edd0 2a06 	vldr	s5, [r0, #24]
 801da70:	ee75 5ac5 	vsub.f32	s11, s11, s10
 801da74:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 801da78:	ee27 7a04 	vmul.f32	s14, s14, s8
 801da7c:	ee32 5a45 	vsub.f32	s10, s4, s10
 801da80:	eee6 7a87 	vfma.f32	s15, s13, s14
 801da84:	ee67 7a83 	vmul.f32	s15, s15, s6
 801da88:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 801da8c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801da8e:	694a      	ldr	r2, [r1, #20]
 801da90:	1b13      	subs	r3, r2, r4
 801da92:	ee07 3a10 	vmov	s14, r3
 801da96:	680b      	ldr	r3, [r1, #0]
 801da98:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801da9c:	1b1b      	subs	r3, r3, r4
 801da9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 801daa2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801daa6:	ee07 3a10 	vmov	s14, r3
 801daaa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801daae:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dab2:	eee6 4a87 	vfma.f32	s9, s13, s14
 801dab6:	ee64 4a86 	vmul.f32	s9, s9, s12
 801daba:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801dabe:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801dac0:	698b      	ldr	r3, [r1, #24]
 801dac2:	1a9b      	subs	r3, r3, r2
 801dac4:	ee06 3a90 	vmov	s13, r3
 801dac8:	684b      	ldr	r3, [r1, #4]
 801daca:	1a9b      	subs	r3, r3, r2
 801dacc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dad0:	ee07 3a10 	vmov	s14, r3
 801dad4:	ee66 6a84 	vmul.f32	s13, s13, s8
 801dad8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dadc:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801dae0:	ee27 7a04 	vmul.f32	s14, s14, s8
 801dae4:	eee5 6a87 	vfma.f32	s13, s11, s14
 801dae8:	ee66 6a83 	vmul.f32	s13, s13, s6
 801daec:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801daf0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801daf2:	694a      	ldr	r2, [r1, #20]
 801daf4:	1b13      	subs	r3, r2, r4
 801daf6:	ee07 3a10 	vmov	s14, r3
 801dafa:	680b      	ldr	r3, [r1, #0]
 801dafc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801db00:	1b1b      	subs	r3, r3, r4
 801db02:	ee27 7a04 	vmul.f32	s14, s14, s8
 801db06:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801db0a:	ee07 3a10 	vmov	s14, r3
 801db0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801db12:	ee27 7a04 	vmul.f32	s14, s14, s8
 801db16:	eea5 5a87 	vfma.f32	s10, s11, s14
 801db1a:	edd0 5a08 	vldr	s11, [r0, #32]
 801db1e:	ee31 1a65 	vsub.f32	s2, s2, s11
 801db22:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801db26:	ee25 5a06 	vmul.f32	s10, s10, s12
 801db2a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801db2e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801db30:	698b      	ldr	r3, [r1, #24]
 801db32:	1a9b      	subs	r3, r3, r2
 801db34:	ee07 3a10 	vmov	s14, r3
 801db38:	684b      	ldr	r3, [r1, #4]
 801db3a:	1a9b      	subs	r3, r3, r2
 801db3c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801db40:	ee01 3a90 	vmov	s3, r3
 801db44:	ee27 7a04 	vmul.f32	s14, s14, s8
 801db48:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801db4c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801db50:	ee61 1a84 	vmul.f32	s3, s3, s8
 801db54:	eea1 7a21 	vfma.f32	s14, s2, s3
 801db58:	ee27 7a03 	vmul.f32	s14, s14, s6
 801db5c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 801db60:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801db62:	694a      	ldr	r2, [r1, #20]
 801db64:	1b13      	subs	r3, r2, r4
 801db66:	ee03 3a10 	vmov	s6, r3
 801db6a:	680b      	ldr	r3, [r1, #0]
 801db6c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801db70:	1b1b      	subs	r3, r3, r4
 801db72:	ee23 3a04 	vmul.f32	s6, s6, s8
 801db76:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801db7a:	ee03 3a10 	vmov	s6, r3
 801db7e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801db82:	ee23 4a04 	vmul.f32	s8, s6, s8
 801db86:	eee1 5a04 	vfma.f32	s11, s2, s8
 801db8a:	ee25 6a86 	vmul.f32	s12, s11, s12
 801db8e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801db92:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801db96:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801db9a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 801db9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dba2:	dd13      	ble.n	801dbcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 801dba4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801dba8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 801dbac:	63c3      	str	r3, [r0, #60]	; 0x3c
 801dbae:	eee3 7a87 	vfma.f32	s15, s7, s14
 801dbb2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801dbb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dbba:	dd15      	ble.n	801dbe8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 801dbbc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801dbc0:	6403      	str	r3, [r0, #64]	; 0x40
 801dbc2:	bd70      	pop	{r4, r5, r6, pc}
 801dbc4:	4623      	mov	r3, r4
 801dbc6:	e6fd      	b.n	801d9c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801dbc8:	462a      	mov	r2, r5
 801dbca:	e706      	b.n	801d9da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801dbcc:	d502      	bpl.n	801dbd4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801dbce:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801dbd2:	e7e9      	b.n	801dba8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801dbd4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801dbd8:	eea3 2a85 	vfma.f32	s4, s7, s10
 801dbdc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801dbe0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dbe4:	dade      	bge.n	801dba4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801dbe6:	e7f2      	b.n	801dbce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801dbe8:	d502      	bpl.n	801dbf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801dbea:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801dbee:	e7e7      	b.n	801dbc0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801dbf0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801dbf4:	eee3 4a86 	vfma.f32	s9, s7, s12
 801dbf8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801dbfc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801dc00:	dadc      	bge.n	801dbbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801dc02:	e7f2      	b.n	801dbea <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801dc04:	3d800000 	.word	0x3d800000

0801dc08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801dc08:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc0c:	f04f 0814 	mov.w	r8, #20
 801dc10:	4604      	mov	r4, r0
 801dc12:	4617      	mov	r7, r2
 801dc14:	460d      	mov	r5, r1
 801dc16:	fb08 f903 	mul.w	r9, r8, r3
 801dc1a:	461e      	mov	r6, r3
 801dc1c:	eb02 0a09 	add.w	sl, r2, r9
 801dc20:	f8da 0004 	ldr.w	r0, [sl, #4]
 801dc24:	f7ff fe88 	bl	801d938 <_ZN8touchgfx8ceil28_4El>
 801dc28:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dc2a:	6160      	str	r0, [r4, #20]
 801dc2c:	fb08 f803 	mul.w	r8, r8, r3
 801dc30:	9001      	str	r0, [sp, #4]
 801dc32:	eb07 0b08 	add.w	fp, r7, r8
 801dc36:	f8db 0004 	ldr.w	r0, [fp, #4]
 801dc3a:	f7ff fe7d 	bl	801d938 <_ZN8touchgfx8ceil28_4El>
 801dc3e:	9a01      	ldr	r2, [sp, #4]
 801dc40:	1a80      	subs	r0, r0, r2
 801dc42:	61a0      	str	r0, [r4, #24]
 801dc44:	2800      	cmp	r0, #0
 801dc46:	f000 8088 	beq.w	801dd5a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 801dc4a:	f857 3009 	ldr.w	r3, [r7, r9]
 801dc4e:	f857 c008 	ldr.w	ip, [r7, r8]
 801dc52:	f8db 0004 	ldr.w	r0, [fp, #4]
 801dc56:	ebac 0c03 	sub.w	ip, ip, r3
 801dc5a:	f8da 1004 	ldr.w	r1, [sl, #4]
 801dc5e:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 801dc62:	1a40      	subs	r0, r0, r1
 801dc64:	fb0b f202 	mul.w	r2, fp, r2
 801dc68:	ea4f 1800 	mov.w	r8, r0, lsl #4
 801dc6c:	fb0c 2211 	mls	r2, ip, r1, r2
 801dc70:	4641      	mov	r1, r8
 801dc72:	fb00 2003 	mla	r0, r0, r3, r2
 801dc76:	f104 0310 	add.w	r3, r4, #16
 801dc7a:	4622      	mov	r2, r4
 801dc7c:	3801      	subs	r0, #1
 801dc7e:	4440      	add	r0, r8
 801dc80:	f7ff fe6a 	bl	801d958 <_ZN8touchgfx11floorDivModEllRlS0_>
 801dc84:	f104 0308 	add.w	r3, r4, #8
 801dc88:	1d22      	adds	r2, r4, #4
 801dc8a:	4641      	mov	r1, r8
 801dc8c:	4658      	mov	r0, fp
 801dc8e:	f7ff fe63 	bl	801d958 <_ZN8touchgfx11floorDivModEllRlS0_>
 801dc92:	f8c4 800c 	str.w	r8, [r4, #12]
 801dc96:	6962      	ldr	r2, [r4, #20]
 801dc98:	f8da 3004 	ldr.w	r3, [sl, #4]
 801dc9c:	eddf 6a31 	vldr	s13, [pc, #196]	; 801dd64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801dca0:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 801dca4:	6822      	ldr	r2, [r4, #0]
 801dca6:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801dcaa:	ee07 3a10 	vmov	s14, r3
 801dcae:	f857 3009 	ldr.w	r3, [r7, r9]
 801dcb2:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 801dcb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801dcba:	ee07 3a90 	vmov	s15, r3
 801dcbe:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 801dcc2:	ee27 7a26 	vmul.f32	s14, s14, s13
 801dcc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801dcca:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801dcce:	edd3 6a00 	vldr	s13, [r3]
 801dcd2:	eee6 6a07 	vfma.f32	s13, s12, s14
 801dcd6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801dcda:	eee6 6a27 	vfma.f32	s13, s12, s15
 801dcde:	edc4 6a07 	vstr	s13, [r4, #28]
 801dce2:	edd4 6a01 	vldr	s13, [r4, #4]
 801dce6:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 801dcea:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801dcee:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 801dcf2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801dcf6:	ed84 6a08 	vstr	s12, [r4, #32]
 801dcfa:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 801dcfc:	6262      	str	r2, [r4, #36]	; 0x24
 801dcfe:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 801dd02:	ed93 6a03 	vldr	s12, [r3, #12]
 801dd06:	eea5 6a87 	vfma.f32	s12, s11, s14
 801dd0a:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801dd0e:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801dd12:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 801dd16:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 801dd1a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 801dd1e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801dd22:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 801dd26:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 801dd28:	6322      	str	r2, [r4, #48]	; 0x30
 801dd2a:	ed93 6a06 	vldr	s12, [r3, #24]
 801dd2e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 801dd32:	eea5 6a87 	vfma.f32	s12, s11, s14
 801dd36:	eeb0 7a46 	vmov.f32	s14, s12
 801dd3a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 801dd3e:	eea6 7a27 	vfma.f32	s14, s12, s15
 801dd42:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 801dd46:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 801dd4a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 801dd4e:	eee6 7a87 	vfma.f32	s15, s13, s14
 801dd52:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 801dd56:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 801dd58:	63e3      	str	r3, [r4, #60]	; 0x3c
 801dd5a:	4620      	mov	r0, r4
 801dd5c:	b003      	add	sp, #12
 801dd5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd62:	bf00      	nop
 801dd64:	3d800000 	.word	0x3d800000

0801dd68 <_ZN8touchgfx7Unicode6strlenEPKt>:
 801dd68:	4602      	mov	r2, r0
 801dd6a:	b148      	cbz	r0, 801dd80 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801dd6c:	2300      	movs	r3, #0
 801dd6e:	b298      	uxth	r0, r3
 801dd70:	3301      	adds	r3, #1
 801dd72:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801dd76:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801dd7a:	2900      	cmp	r1, #0
 801dd7c:	d1f7      	bne.n	801dd6e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801dd7e:	4770      	bx	lr
 801dd80:	4770      	bx	lr

0801dd82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801dd82:	b530      	push	{r4, r5, lr}
 801dd84:	4604      	mov	r4, r0
 801dd86:	b159      	cbz	r1, 801dda0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801dd88:	b148      	cbz	r0, 801dd9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801dd8a:	2300      	movs	r3, #0
 801dd8c:	b298      	uxth	r0, r3
 801dd8e:	4282      	cmp	r2, r0
 801dd90:	d905      	bls.n	801dd9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801dd92:	5ccd      	ldrb	r5, [r1, r3]
 801dd94:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801dd98:	3301      	adds	r3, #1
 801dd9a:	2d00      	cmp	r5, #0
 801dd9c:	d1f6      	bne.n	801dd8c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801dd9e:	bd30      	pop	{r4, r5, pc}
 801dda0:	4608      	mov	r0, r1
 801dda2:	e7fc      	b.n	801dd9e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

0801dda4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 801dda4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dda6:	468c      	mov	ip, r1
 801dda8:	b08b      	sub	sp, #44	; 0x2c
 801ddaa:	2100      	movs	r1, #0
 801ddac:	ae01      	add	r6, sp, #4
 801ddae:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801ddb2:	211f      	movs	r1, #31
 801ddb4:	fbb0 f7f3 	udiv	r7, r0, r3
 801ddb8:	fb03 0517 	mls	r5, r3, r7, r0
 801ddbc:	4638      	mov	r0, r7
 801ddbe:	b2ec      	uxtb	r4, r5
 801ddc0:	2d09      	cmp	r5, #9
 801ddc2:	bfd4      	ite	le
 801ddc4:	3430      	addle	r4, #48	; 0x30
 801ddc6:	3457      	addgt	r4, #87	; 0x57
 801ddc8:	b2e4      	uxtb	r4, r4
 801ddca:	558c      	strb	r4, [r1, r6]
 801ddcc:	1e4c      	subs	r4, r1, #1
 801ddce:	b92f      	cbnz	r7, 801dddc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801ddd0:	4431      	add	r1, r6
 801ddd2:	4660      	mov	r0, ip
 801ddd4:	f7ff ffd5 	bl	801dd82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801ddd8:	b00b      	add	sp, #44	; 0x2c
 801ddda:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dddc:	4621      	mov	r1, r4
 801ddde:	e7e9      	b.n	801ddb4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801dde0 <_ZN8touchgfx7Unicode4itoaElPtti>:
 801dde0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dde2:	4607      	mov	r7, r0
 801dde4:	b08b      	sub	sp, #44	; 0x2c
 801dde6:	4608      	mov	r0, r1
 801dde8:	b341      	cbz	r1, 801de3c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801ddea:	1e99      	subs	r1, r3, #2
 801ddec:	2922      	cmp	r1, #34	; 0x22
 801ddee:	d825      	bhi.n	801de3c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801ddf0:	2100      	movs	r1, #0
 801ddf2:	463c      	mov	r4, r7
 801ddf4:	261f      	movs	r6, #31
 801ddf6:	f10d 0c04 	add.w	ip, sp, #4
 801ddfa:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801ddfe:	1e71      	subs	r1, r6, #1
 801de00:	fb94 fef3 	sdiv	lr, r4, r3
 801de04:	fb03 441e 	mls	r4, r3, lr, r4
 801de08:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801de0c:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801de10:	b2ec      	uxtb	r4, r5
 801de12:	2d09      	cmp	r5, #9
 801de14:	bfd4      	ite	le
 801de16:	3430      	addle	r4, #48	; 0x30
 801de18:	3457      	addgt	r4, #87	; 0x57
 801de1a:	b2e4      	uxtb	r4, r4
 801de1c:	f80c 4006 	strb.w	r4, [ip, r6]
 801de20:	4674      	mov	r4, lr
 801de22:	b96c      	cbnz	r4, 801de40 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 801de24:	2f00      	cmp	r7, #0
 801de26:	da05      	bge.n	801de34 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 801de28:	ab0a      	add	r3, sp, #40	; 0x28
 801de2a:	4419      	add	r1, r3
 801de2c:	232d      	movs	r3, #45	; 0x2d
 801de2e:	f801 3c24 	strb.w	r3, [r1, #-36]
 801de32:	1eb1      	subs	r1, r6, #2
 801de34:	3101      	adds	r1, #1
 801de36:	4461      	add	r1, ip
 801de38:	f7ff ffa3 	bl	801dd82 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 801de3c:	b00b      	add	sp, #44	; 0x2c
 801de3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801de40:	460e      	mov	r6, r1
 801de42:	e7dc      	b.n	801ddfe <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

0801de44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 801de44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de48:	b085      	sub	sp, #20
 801de4a:	4691      	mov	r9, r2
 801de4c:	6802      	ldr	r2, [r0, #0]
 801de4e:	4688      	mov	r8, r1
 801de50:	461c      	mov	r4, r3
 801de52:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 801de56:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801de5a:	4683      	mov	fp, r0
 801de5c:	4610      	mov	r0, r2
 801de5e:	9103      	str	r1, [sp, #12]
 801de60:	9302      	str	r3, [sp, #8]
 801de62:	9201      	str	r2, [sp, #4]
 801de64:	f7ff ff80 	bl	801dd68 <_ZN8touchgfx7Unicode6strlenEPKt>
 801de68:	f1b8 0f00 	cmp.w	r8, #0
 801de6c:	bf0c      	ite	eq
 801de6e:	4684      	moveq	ip, r0
 801de70:	f100 0c01 	addne.w	ip, r0, #1
 801de74:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 801de78:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801de7c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801de7e:	fa1f fc8c 	uxth.w	ip, ip
 801de82:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801de84:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801de88:	9903      	ldr	r1, [sp, #12]
 801de8a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801de8e:	d041      	beq.n	801df14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801de90:	d834      	bhi.n	801defc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801de92:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801de96:	d059      	beq.n	801df4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 801de98:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801de9c:	d03a      	beq.n	801df14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801de9e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801dea2:	d034      	beq.n	801df0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801dea4:	2400      	movs	r4, #0
 801dea6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801deaa:	3a01      	subs	r2, #1
 801deac:	b169      	cbz	r1, 801deca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801deae:	9911      	ldr	r1, [sp, #68]	; 0x44
 801deb0:	458c      	cmp	ip, r1
 801deb2:	da09      	bge.n	801dec8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801deb4:	eba1 010c 	sub.w	r1, r1, ip
 801deb8:	b289      	uxth	r1, r1
 801deba:	b933      	cbnz	r3, 801deca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801debc:	2e00      	cmp	r6, #0
 801debe:	d051      	beq.n	801df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801dec0:	2800      	cmp	r0, #0
 801dec2:	d04f      	beq.n	801df64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801dec4:	440c      	add	r4, r1
 801dec6:	b2a4      	uxth	r4, r4
 801dec8:	2100      	movs	r1, #0
 801deca:	682b      	ldr	r3, [r5, #0]
 801decc:	4293      	cmp	r3, r2
 801dece:	da07      	bge.n	801dee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ded0:	f1b8 0f00 	cmp.w	r8, #0
 801ded4:	d004      	beq.n	801dee0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801ded6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 801deda:	682b      	ldr	r3, [r5, #0]
 801dedc:	3301      	adds	r3, #1
 801dede:	602b      	str	r3, [r5, #0]
 801dee0:	2730      	movs	r7, #48	; 0x30
 801dee2:	2c00      	cmp	r4, #0
 801dee4:	d04e      	beq.n	801df84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801dee6:	682e      	ldr	r6, [r5, #0]
 801dee8:	3c01      	subs	r4, #1
 801deea:	42b2      	cmp	r2, r6
 801deec:	b2a4      	uxth	r4, r4
 801deee:	dd49      	ble.n	801df84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801def0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801def4:	682b      	ldr	r3, [r5, #0]
 801def6:	3301      	adds	r3, #1
 801def8:	602b      	str	r3, [r5, #0]
 801defa:	e7f2      	b.n	801dee2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 801defc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801df00:	d01d      	beq.n	801df3e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801df02:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801df06:	d002      	beq.n	801df0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801df08:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 801df0c:	e7c9      	b.n	801dea2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801df0e:	4684      	mov	ip, r0
 801df10:	f04f 0800 	mov.w	r8, #0
 801df14:	2c00      	cmp	r4, #0
 801df16:	d0c6      	beq.n	801dea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801df18:	b947      	cbnz	r7, 801df2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801df1a:	2801      	cmp	r0, #1
 801df1c:	d106      	bne.n	801df2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801df1e:	8814      	ldrh	r4, [r2, #0]
 801df20:	2c30      	cmp	r4, #48	; 0x30
 801df22:	bf02      	ittt	eq
 801df24:	3202      	addeq	r2, #2
 801df26:	4638      	moveq	r0, r7
 801df28:	f8cb 2000 	streq.w	r2, [fp]
 801df2c:	45bc      	cmp	ip, r7
 801df2e:	da14      	bge.n	801df5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801df30:	b2bf      	uxth	r7, r7
 801df32:	eba7 040c 	sub.w	r4, r7, ip
 801df36:	46bc      	mov	ip, r7
 801df38:	b2a4      	uxth	r4, r4
 801df3a:	2600      	movs	r6, #0
 801df3c:	e7b3      	b.n	801dea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801df3e:	4684      	mov	ip, r0
 801df40:	b16c      	cbz	r4, 801df5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801df42:	42b8      	cmp	r0, r7
 801df44:	dd00      	ble.n	801df48 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 801df46:	b2b8      	uxth	r0, r7
 801df48:	2400      	movs	r4, #0
 801df4a:	e003      	b.n	801df54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 801df4c:	f04f 0c01 	mov.w	ip, #1
 801df50:	2400      	movs	r4, #0
 801df52:	4660      	mov	r0, ip
 801df54:	4626      	mov	r6, r4
 801df56:	46a0      	mov	r8, r4
 801df58:	e7a5      	b.n	801dea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801df5a:	2400      	movs	r4, #0
 801df5c:	e7ed      	b.n	801df3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801df5e:	4626      	mov	r6, r4
 801df60:	46a0      	mov	r8, r4
 801df62:	e7a0      	b.n	801dea6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801df64:	2900      	cmp	r1, #0
 801df66:	d0b0      	beq.n	801deca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801df68:	2720      	movs	r7, #32
 801df6a:	682e      	ldr	r6, [r5, #0]
 801df6c:	2900      	cmp	r1, #0
 801df6e:	d0ac      	beq.n	801deca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801df70:	3901      	subs	r1, #1
 801df72:	4296      	cmp	r6, r2
 801df74:	b289      	uxth	r1, r1
 801df76:	daa7      	bge.n	801dec8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801df78:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801df7c:	682b      	ldr	r3, [r5, #0]
 801df7e:	3301      	adds	r3, #1
 801df80:	602b      	str	r3, [r5, #0]
 801df82:	e7f2      	b.n	801df6a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 801df84:	b188      	cbz	r0, 801dfaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801df86:	682b      	ldr	r3, [r5, #0]
 801df88:	3801      	subs	r0, #1
 801df8a:	429a      	cmp	r2, r3
 801df8c:	b280      	uxth	r0, r0
 801df8e:	dd0c      	ble.n	801dfaa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801df90:	f8db 3000 	ldr.w	r3, [fp]
 801df94:	1c9c      	adds	r4, r3, #2
 801df96:	f8cb 4000 	str.w	r4, [fp]
 801df9a:	881c      	ldrh	r4, [r3, #0]
 801df9c:	682b      	ldr	r3, [r5, #0]
 801df9e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801dfa2:	682b      	ldr	r3, [r5, #0]
 801dfa4:	3301      	adds	r3, #1
 801dfa6:	602b      	str	r3, [r5, #0]
 801dfa8:	e7ec      	b.n	801df84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801dfaa:	2620      	movs	r6, #32
 801dfac:	b151      	cbz	r1, 801dfc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801dfae:	6828      	ldr	r0, [r5, #0]
 801dfb0:	3901      	subs	r1, #1
 801dfb2:	4282      	cmp	r2, r0
 801dfb4:	b289      	uxth	r1, r1
 801dfb6:	dd05      	ble.n	801dfc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801dfb8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 801dfbc:	682b      	ldr	r3, [r5, #0]
 801dfbe:	3301      	adds	r3, #1
 801dfc0:	602b      	str	r3, [r5, #0]
 801dfc2:	e7f3      	b.n	801dfac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 801dfc4:	b005      	add	sp, #20
 801dfc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dfca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 801dfca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dfce:	2400      	movs	r4, #0
 801dfd0:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801dfd4:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 801dfd8:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 801dfdc:	8014      	strh	r4, [r2, #0]
 801dfde:	701c      	strb	r4, [r3, #0]
 801dfe0:	f888 4000 	strb.w	r4, [r8]
 801dfe4:	f88c 4000 	strb.w	r4, [ip]
 801dfe8:	f88e 4000 	strb.w	r4, [lr]
 801dfec:	703c      	strb	r4, [r7, #0]
 801dfee:	6804      	ldr	r4, [r0, #0]
 801dff0:	b1a4      	cbz	r4, 801e01c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801dff2:	8824      	ldrh	r4, [r4, #0]
 801dff4:	f04f 0901 	mov.w	r9, #1
 801dff8:	b314      	cbz	r4, 801e040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801dffa:	2c2b      	cmp	r4, #43	; 0x2b
 801dffc:	d001      	beq.n	801e002 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801dffe:	2c20      	cmp	r4, #32
 801e000:	d110      	bne.n	801e024 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801e002:	8014      	strh	r4, [r2, #0]
 801e004:	6804      	ldr	r4, [r0, #0]
 801e006:	b10c      	cbz	r4, 801e00c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 801e008:	3402      	adds	r4, #2
 801e00a:	6004      	str	r4, [r0, #0]
 801e00c:	680c      	ldr	r4, [r1, #0]
 801e00e:	b10c      	cbz	r4, 801e014 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801e010:	3401      	adds	r4, #1
 801e012:	600c      	str	r4, [r1, #0]
 801e014:	6804      	ldr	r4, [r0, #0]
 801e016:	b17c      	cbz	r4, 801e038 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 801e018:	8824      	ldrh	r4, [r4, #0]
 801e01a:	e7ed      	b.n	801dff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801e01c:	680c      	ldr	r4, [r1, #0]
 801e01e:	b17c      	cbz	r4, 801e040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801e020:	7824      	ldrb	r4, [r4, #0]
 801e022:	e7e7      	b.n	801dff4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 801e024:	2c2d      	cmp	r4, #45	; 0x2d
 801e026:	d102      	bne.n	801e02e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 801e028:	f883 9000 	strb.w	r9, [r3]
 801e02c:	e7ea      	b.n	801e004 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801e02e:	2c23      	cmp	r4, #35	; 0x23
 801e030:	d107      	bne.n	801e042 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801e032:	f888 9000 	strb.w	r9, [r8]
 801e036:	e7e5      	b.n	801e004 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801e038:	680c      	ldr	r4, [r1, #0]
 801e03a:	b10c      	cbz	r4, 801e040 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801e03c:	7824      	ldrb	r4, [r4, #0]
 801e03e:	e7db      	b.n	801dff8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801e040:	2400      	movs	r4, #0
 801e042:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801e046:	2b09      	cmp	r3, #9
 801e048:	d901      	bls.n	801e04e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 801e04a:	2c2a      	cmp	r4, #42	; 0x2a
 801e04c:	d122      	bne.n	801e094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e04e:	2301      	movs	r3, #1
 801e050:	2c30      	cmp	r4, #48	; 0x30
 801e052:	f88e 3000 	strb.w	r3, [lr]
 801e056:	d10d      	bne.n	801e074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801e058:	f88c 3000 	strb.w	r3, [ip]
 801e05c:	6803      	ldr	r3, [r0, #0]
 801e05e:	b10b      	cbz	r3, 801e064 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801e060:	3302      	adds	r3, #2
 801e062:	6003      	str	r3, [r0, #0]
 801e064:	680b      	ldr	r3, [r1, #0]
 801e066:	b10b      	cbz	r3, 801e06c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 801e068:	3301      	adds	r3, #1
 801e06a:	600b      	str	r3, [r1, #0]
 801e06c:	6803      	ldr	r3, [r0, #0]
 801e06e:	2b00      	cmp	r3, #0
 801e070:	d02f      	beq.n	801e0d2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801e072:	881c      	ldrh	r4, [r3, #0]
 801e074:	2c2a      	cmp	r4, #42	; 0x2a
 801e076:	d135      	bne.n	801e0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801e078:	f04f 33ff 	mov.w	r3, #4294967295
 801e07c:	6033      	str	r3, [r6, #0]
 801e07e:	6803      	ldr	r3, [r0, #0]
 801e080:	b10b      	cbz	r3, 801e086 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801e082:	3302      	adds	r3, #2
 801e084:	6003      	str	r3, [r0, #0]
 801e086:	680b      	ldr	r3, [r1, #0]
 801e088:	b10b      	cbz	r3, 801e08e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 801e08a:	3301      	adds	r3, #1
 801e08c:	600b      	str	r3, [r1, #0]
 801e08e:	6803      	ldr	r3, [r0, #0]
 801e090:	b31b      	cbz	r3, 801e0da <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801e092:	881c      	ldrh	r4, [r3, #0]
 801e094:	2c2e      	cmp	r4, #46	; 0x2e
 801e096:	d11a      	bne.n	801e0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e098:	2301      	movs	r3, #1
 801e09a:	703b      	strb	r3, [r7, #0]
 801e09c:	6803      	ldr	r3, [r0, #0]
 801e09e:	b10b      	cbz	r3, 801e0a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801e0a0:	3302      	adds	r3, #2
 801e0a2:	6003      	str	r3, [r0, #0]
 801e0a4:	680b      	ldr	r3, [r1, #0]
 801e0a6:	b10b      	cbz	r3, 801e0ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 801e0a8:	3301      	adds	r3, #1
 801e0aa:	600b      	str	r3, [r1, #0]
 801e0ac:	6803      	ldr	r3, [r0, #0]
 801e0ae:	2b00      	cmp	r3, #0
 801e0b0:	d036      	beq.n	801e120 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801e0b2:	881b      	ldrh	r3, [r3, #0]
 801e0b4:	2b2a      	cmp	r3, #42	; 0x2a
 801e0b6:	d137      	bne.n	801e128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801e0b8:	f04f 33ff 	mov.w	r3, #4294967295
 801e0bc:	602b      	str	r3, [r5, #0]
 801e0be:	6803      	ldr	r3, [r0, #0]
 801e0c0:	b10b      	cbz	r3, 801e0c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801e0c2:	3302      	adds	r3, #2
 801e0c4:	6003      	str	r3, [r0, #0]
 801e0c6:	680b      	ldr	r3, [r1, #0]
 801e0c8:	b10b      	cbz	r3, 801e0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e0ca:	3301      	adds	r3, #1
 801e0cc:	600b      	str	r3, [r1, #0]
 801e0ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e0d2:	680c      	ldr	r4, [r1, #0]
 801e0d4:	b134      	cbz	r4, 801e0e4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 801e0d6:	7824      	ldrb	r4, [r4, #0]
 801e0d8:	e7cc      	b.n	801e074 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 801e0da:	680b      	ldr	r3, [r1, #0]
 801e0dc:	2b00      	cmp	r3, #0
 801e0de:	d0f6      	beq.n	801e0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801e0e0:	781c      	ldrb	r4, [r3, #0]
 801e0e2:	e7d7      	b.n	801e094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e0e4:	2300      	movs	r3, #0
 801e0e6:	220a      	movs	r2, #10
 801e0e8:	6033      	str	r3, [r6, #0]
 801e0ea:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801e0ee:	fa1f f38c 	uxth.w	r3, ip
 801e0f2:	2b09      	cmp	r3, #9
 801e0f4:	d8ce      	bhi.n	801e094 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801e0f6:	6833      	ldr	r3, [r6, #0]
 801e0f8:	fb02 c303 	mla	r3, r2, r3, ip
 801e0fc:	6033      	str	r3, [r6, #0]
 801e0fe:	6803      	ldr	r3, [r0, #0]
 801e100:	b10b      	cbz	r3, 801e106 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801e102:	3302      	adds	r3, #2
 801e104:	6003      	str	r3, [r0, #0]
 801e106:	680b      	ldr	r3, [r1, #0]
 801e108:	b10b      	cbz	r3, 801e10e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 801e10a:	3301      	adds	r3, #1
 801e10c:	600b      	str	r3, [r1, #0]
 801e10e:	6803      	ldr	r3, [r0, #0]
 801e110:	b10b      	cbz	r3, 801e116 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801e112:	881c      	ldrh	r4, [r3, #0]
 801e114:	e7e9      	b.n	801e0ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e116:	680c      	ldr	r4, [r1, #0]
 801e118:	2c00      	cmp	r4, #0
 801e11a:	d0e6      	beq.n	801e0ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e11c:	7824      	ldrb	r4, [r4, #0]
 801e11e:	e7e4      	b.n	801e0ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801e120:	680b      	ldr	r3, [r1, #0]
 801e122:	b10b      	cbz	r3, 801e128 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 801e124:	781b      	ldrb	r3, [r3, #0]
 801e126:	e7c5      	b.n	801e0b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 801e128:	2200      	movs	r2, #0
 801e12a:	240a      	movs	r4, #10
 801e12c:	602a      	str	r2, [r5, #0]
 801e12e:	3b30      	subs	r3, #48	; 0x30
 801e130:	682a      	ldr	r2, [r5, #0]
 801e132:	b29e      	uxth	r6, r3
 801e134:	2e09      	cmp	r6, #9
 801e136:	d813      	bhi.n	801e160 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 801e138:	fb04 3302 	mla	r3, r4, r2, r3
 801e13c:	602b      	str	r3, [r5, #0]
 801e13e:	6803      	ldr	r3, [r0, #0]
 801e140:	b10b      	cbz	r3, 801e146 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801e142:	3302      	adds	r3, #2
 801e144:	6003      	str	r3, [r0, #0]
 801e146:	680b      	ldr	r3, [r1, #0]
 801e148:	b10b      	cbz	r3, 801e14e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 801e14a:	3301      	adds	r3, #1
 801e14c:	600b      	str	r3, [r1, #0]
 801e14e:	6803      	ldr	r3, [r0, #0]
 801e150:	b10b      	cbz	r3, 801e156 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801e152:	881b      	ldrh	r3, [r3, #0]
 801e154:	e7eb      	b.n	801e12e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e156:	680b      	ldr	r3, [r1, #0]
 801e158:	2b00      	cmp	r3, #0
 801e15a:	d0e8      	beq.n	801e12e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e15c:	781b      	ldrb	r3, [r3, #0]
 801e15e:	e7e6      	b.n	801e12e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801e160:	2a06      	cmp	r2, #6
 801e162:	bfa8      	it	ge
 801e164:	2206      	movge	r2, #6
 801e166:	602a      	str	r2, [r5, #0]
 801e168:	e7b1      	b.n	801e0ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0801e16a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 801e16a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e16e:	b0a3      	sub	sp, #140	; 0x8c
 801e170:	2600      	movs	r6, #0
 801e172:	4607      	mov	r7, r0
 801e174:	4688      	mov	r8, r1
 801e176:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 801e17a:	4631      	mov	r1, r6
 801e17c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 801e17e:	4648      	mov	r0, r9
 801e180:	960d      	str	r6, [sp, #52]	; 0x34
 801e182:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801e186:	2242      	movs	r2, #66	; 0x42
 801e188:	f7fe fa36 	bl	801c5f8 <_ZN8touchgfx6memsetEPvhm>
 801e18c:	b15f      	cbz	r7, 801e1a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801e18e:	f108 3aff 	add.w	sl, r8, #4294967295
 801e192:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e194:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e196:	b152      	cbz	r2, 801e1ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 801e198:	8812      	ldrh	r2, [r2, #0]
 801e19a:	b10a      	cbz	r2, 801e1a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801e19c:	459a      	cmp	sl, r3
 801e19e:	dc2e      	bgt.n	801e1fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801e1a0:	2200      	movs	r2, #0
 801e1a2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801e1a6:	4638      	mov	r0, r7
 801e1a8:	b023      	add	sp, #140	; 0x8c
 801e1aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1ae:	9a08      	ldr	r2, [sp, #32]
 801e1b0:	2a00      	cmp	r2, #0
 801e1b2:	d0f5      	beq.n	801e1a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 801e1b4:	7812      	ldrb	r2, [r2, #0]
 801e1b6:	e7f0      	b.n	801e19a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 801e1b8:	2d00      	cmp	r5, #0
 801e1ba:	d0ea      	beq.n	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e1bc:	782a      	ldrb	r2, [r5, #0]
 801e1be:	b142      	cbz	r2, 801e1d2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801e1c0:	2a25      	cmp	r2, #37	; 0x25
 801e1c2:	d001      	beq.n	801e1c8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 801e1c4:	459a      	cmp	sl, r3
 801e1c6:	dc08      	bgt.n	801e1da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 801e1c8:	f1bb 0f00 	cmp.w	fp, #0
 801e1cc:	d121      	bne.n	801e212 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801e1ce:	2d00      	cmp	r5, #0
 801e1d0:	d0df      	beq.n	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e1d2:	782a      	ldrb	r2, [r5, #0]
 801e1d4:	f04f 0b00 	mov.w	fp, #0
 801e1d8:	e01d      	b.n	801e216 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 801e1da:	f1bb 0f00 	cmp.w	fp, #0
 801e1de:	d077      	beq.n	801e2d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 801e1e0:	f8bb 2000 	ldrh.w	r2, [fp]
 801e1e4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801e1e8:	f1bb 0f00 	cmp.w	fp, #0
 801e1ec:	d002      	beq.n	801e1f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801e1ee:	f10b 0202 	add.w	r2, fp, #2
 801e1f2:	9209      	str	r2, [sp, #36]	; 0x24
 801e1f4:	b10d      	cbz	r5, 801e1fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 801e1f6:	3501      	adds	r5, #1
 801e1f8:	9508      	str	r5, [sp, #32]
 801e1fa:	3301      	adds	r3, #1
 801e1fc:	930d      	str	r3, [sp, #52]	; 0x34
 801e1fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e200:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801e204:	f1bb 0f00 	cmp.w	fp, #0
 801e208:	d0d6      	beq.n	801e1b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 801e20a:	f8bb 2000 	ldrh.w	r2, [fp]
 801e20e:	2a00      	cmp	r2, #0
 801e210:	d1d6      	bne.n	801e1c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801e212:	f8bb 2000 	ldrh.w	r2, [fp]
 801e216:	2a00      	cmp	r2, #0
 801e218:	d0bb      	beq.n	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e21a:	459a      	cmp	sl, r3
 801e21c:	ddb9      	ble.n	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e21e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801e222:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 801e226:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 801e22a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801e22e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801e232:	960e      	str	r6, [sp, #56]	; 0x38
 801e234:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 801e238:	960f      	str	r6, [sp, #60]	; 0x3c
 801e23a:	f1bb 0f00 	cmp.w	fp, #0
 801e23e:	d002      	beq.n	801e246 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801e240:	f10b 0302 	add.w	r3, fp, #2
 801e244:	9309      	str	r3, [sp, #36]	; 0x24
 801e246:	b10d      	cbz	r5, 801e24c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 801e248:	1c6b      	adds	r3, r5, #1
 801e24a:	9308      	str	r3, [sp, #32]
 801e24c:	ab0f      	add	r3, sp, #60	; 0x3c
 801e24e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801e252:	a908      	add	r1, sp, #32
 801e254:	a809      	add	r0, sp, #36	; 0x24
 801e256:	9305      	str	r3, [sp, #20]
 801e258:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801e25c:	9304      	str	r3, [sp, #16]
 801e25e:	ab0e      	add	r3, sp, #56	; 0x38
 801e260:	9303      	str	r3, [sp, #12]
 801e262:	ab0c      	add	r3, sp, #48	; 0x30
 801e264:	9302      	str	r3, [sp, #8]
 801e266:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801e26a:	9301      	str	r3, [sp, #4]
 801e26c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 801e270:	9300      	str	r3, [sp, #0]
 801e272:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801e276:	f7ff fea8 	bl	801dfca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801e27a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801e27c:	2b00      	cmp	r3, #0
 801e27e:	bfbf      	itttt	lt
 801e280:	6823      	ldrlt	r3, [r4, #0]
 801e282:	3404      	addlt	r4, #4
 801e284:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801e288:	930e      	strlt	r3, [sp, #56]	; 0x38
 801e28a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e28c:	2b00      	cmp	r3, #0
 801e28e:	bfbe      	ittt	lt
 801e290:	6823      	ldrlt	r3, [r4, #0]
 801e292:	3404      	addlt	r4, #4
 801e294:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801e298:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e29c:	bfb8      	it	lt
 801e29e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801e2a0:	b1d9      	cbz	r1, 801e2da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 801e2a2:	880b      	ldrh	r3, [r1, #0]
 801e2a4:	2b69      	cmp	r3, #105	; 0x69
 801e2a6:	d01f      	beq.n	801e2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801e2a8:	d82f      	bhi.n	801e30a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 801e2aa:	2b58      	cmp	r3, #88	; 0x58
 801e2ac:	d01c      	beq.n	801e2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801e2ae:	d818      	bhi.n	801e2e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 801e2b0:	2b25      	cmp	r3, #37	; 0x25
 801e2b2:	d034      	beq.n	801e31e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 801e2b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e2b6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801e2ba:	f1bb 0f00 	cmp.w	fp, #0
 801e2be:	f000 80b7 	beq.w	801e430 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 801e2c2:	f8bb 5000 	ldrh.w	r5, [fp]
 801e2c6:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801e2ca:	3301      	adds	r3, #1
 801e2cc:	930d      	str	r3, [sp, #52]	; 0x34
 801e2ce:	e029      	b.n	801e324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 801e2d0:	b10d      	cbz	r5, 801e2d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 801e2d2:	782a      	ldrb	r2, [r5, #0]
 801e2d4:	e786      	b.n	801e1e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801e2d6:	462a      	mov	r2, r5
 801e2d8:	e784      	b.n	801e1e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801e2da:	2a00      	cmp	r2, #0
 801e2dc:	d0ea      	beq.n	801e2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 801e2de:	7813      	ldrb	r3, [r2, #0]
 801e2e0:	e7e0      	b.n	801e2a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 801e2e2:	3b63      	subs	r3, #99	; 0x63
 801e2e4:	2b01      	cmp	r3, #1
 801e2e6:	d8e5      	bhi.n	801e2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 801e2e8:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801e2ec:	b329      	cbz	r1, 801e33a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 801e2ee:	880b      	ldrh	r3, [r1, #0]
 801e2f0:	2b69      	cmp	r3, #105	; 0x69
 801e2f2:	d063      	beq.n	801e3bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 801e2f4:	d825      	bhi.n	801e342 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 801e2f6:	2b63      	cmp	r3, #99	; 0x63
 801e2f8:	d038      	beq.n	801e36c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 801e2fa:	2b64      	cmp	r3, #100	; 0x64
 801e2fc:	d05e      	beq.n	801e3bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 801e2fe:	2b58      	cmp	r3, #88	; 0x58
 801e300:	d07a      	beq.n	801e3f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 801e302:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 801e306:	4625      	mov	r5, r4
 801e308:	e036      	b.n	801e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801e30a:	2b73      	cmp	r3, #115	; 0x73
 801e30c:	d0ec      	beq.n	801e2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801e30e:	d802      	bhi.n	801e316 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 801e310:	2b6f      	cmp	r3, #111	; 0x6f
 801e312:	d1cf      	bne.n	801e2b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 801e314:	e7e8      	b.n	801e2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801e316:	2b75      	cmp	r3, #117	; 0x75
 801e318:	d0e6      	beq.n	801e2e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 801e31a:	2b78      	cmp	r3, #120	; 0x78
 801e31c:	e7f9      	b.n	801e312 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 801e31e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e320:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801e324:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e326:	b10b      	cbz	r3, 801e32c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 801e328:	3302      	adds	r3, #2
 801e32a:	9309      	str	r3, [sp, #36]	; 0x24
 801e32c:	9b08      	ldr	r3, [sp, #32]
 801e32e:	2b00      	cmp	r3, #0
 801e330:	f43f af2f 	beq.w	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e334:	3301      	adds	r3, #1
 801e336:	9308      	str	r3, [sp, #32]
 801e338:	e72b      	b.n	801e192 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801e33a:	2a00      	cmp	r2, #0
 801e33c:	d0e1      	beq.n	801e302 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 801e33e:	7813      	ldrb	r3, [r2, #0]
 801e340:	e7d6      	b.n	801e2f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 801e342:	2b73      	cmp	r3, #115	; 0x73
 801e344:	d036      	beq.n	801e3b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 801e346:	d807      	bhi.n	801e358 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 801e348:	2b6f      	cmp	r3, #111	; 0x6f
 801e34a:	d1da      	bne.n	801e302 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 801e34c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e34e:	1d25      	adds	r5, r4, #4
 801e350:	2308      	movs	r3, #8
 801e352:	eba8 0202 	sub.w	r2, r8, r2
 801e356:	e049      	b.n	801e3ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 801e358:	2b75      	cmp	r3, #117	; 0x75
 801e35a:	d042      	beq.n	801e3e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 801e35c:	2b78      	cmp	r3, #120	; 0x78
 801e35e:	d1d0      	bne.n	801e302 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 801e360:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e362:	1d25      	adds	r5, r4, #4
 801e364:	2310      	movs	r3, #16
 801e366:	eba8 0202 	sub.w	r2, r8, r2
 801e36a:	e03f      	b.n	801e3ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 801e36c:	7823      	ldrb	r3, [r4, #0]
 801e36e:	1d25      	adds	r5, r4, #4
 801e370:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 801e374:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801e378:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e37a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801e37e:	2b00      	cmp	r3, #0
 801e380:	d051      	beq.n	801e426 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 801e382:	881a      	ldrh	r2, [r3, #0]
 801e384:	a80d      	add	r0, sp, #52	; 0x34
 801e386:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801e38a:	462c      	mov	r4, r5
 801e38c:	9005      	str	r0, [sp, #20]
 801e38e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801e392:	9004      	str	r0, [sp, #16]
 801e394:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e396:	9003      	str	r0, [sp, #12]
 801e398:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 801e39c:	9002      	str	r0, [sp, #8]
 801e39e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e3a0:	9001      	str	r0, [sp, #4]
 801e3a2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801e3a6:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801e3aa:	9000      	str	r0, [sp, #0]
 801e3ac:	a810      	add	r0, sp, #64	; 0x40
 801e3ae:	f7ff fd49 	bl	801de44 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801e3b2:	e7b7      	b.n	801e324 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 801e3b4:	1d25      	adds	r5, r4, #4
 801e3b6:	6823      	ldr	r3, [r4, #0]
 801e3b8:	9310      	str	r3, [sp, #64]	; 0x40
 801e3ba:	e7dd      	b.n	801e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801e3bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e3be:	230a      	movs	r3, #10
 801e3c0:	4649      	mov	r1, r9
 801e3c2:	6820      	ldr	r0, [r4, #0]
 801e3c4:	eba8 0202 	sub.w	r2, r8, r2
 801e3c8:	1d25      	adds	r5, r4, #4
 801e3ca:	b292      	uxth	r2, r2
 801e3cc:	f7ff fd08 	bl	801dde0 <_ZN8touchgfx7Unicode4itoaElPtti>
 801e3d0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801e3d4:	2b2d      	cmp	r3, #45	; 0x2d
 801e3d6:	d1cf      	bne.n	801e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801e3d8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e3dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e3de:	3302      	adds	r3, #2
 801e3e0:	e7ea      	b.n	801e3b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 801e3e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e3e4:	1d25      	adds	r5, r4, #4
 801e3e6:	230a      	movs	r3, #10
 801e3e8:	eba8 0202 	sub.w	r2, r8, r2
 801e3ec:	b292      	uxth	r2, r2
 801e3ee:	4649      	mov	r1, r9
 801e3f0:	6820      	ldr	r0, [r4, #0]
 801e3f2:	f7ff fcd7 	bl	801dda4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801e3f6:	e7bf      	b.n	801e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801e3f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e3fa:	2310      	movs	r3, #16
 801e3fc:	4649      	mov	r1, r9
 801e3fe:	6820      	ldr	r0, [r4, #0]
 801e400:	eba8 0202 	sub.w	r2, r8, r2
 801e404:	1d25      	adds	r5, r4, #4
 801e406:	b292      	uxth	r2, r2
 801e408:	f7ff fccc 	bl	801dda4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801e40c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801e410:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 801e414:	2b00      	cmp	r3, #0
 801e416:	d0af      	beq.n	801e378 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 801e418:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801e41c:	2919      	cmp	r1, #25
 801e41e:	d8f7      	bhi.n	801e410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 801e420:	3b20      	subs	r3, #32
 801e422:	8013      	strh	r3, [r2, #0]
 801e424:	e7f4      	b.n	801e410 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 801e426:	9a08      	ldr	r2, [sp, #32]
 801e428:	2a00      	cmp	r2, #0
 801e42a:	d0ab      	beq.n	801e384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 801e42c:	7812      	ldrb	r2, [r2, #0]
 801e42e:	e7a9      	b.n	801e384 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 801e430:	2d00      	cmp	r5, #0
 801e432:	f43f af48 	beq.w	801e2c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 801e436:	782d      	ldrb	r5, [r5, #0]
 801e438:	e745      	b.n	801e2c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

0801e43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801e43a:	b507      	push	{r0, r1, r2, lr}
 801e43c:	9300      	str	r3, [sp, #0]
 801e43e:	4613      	mov	r3, r2
 801e440:	2200      	movs	r2, #0
 801e442:	f7ff fe92 	bl	801e16a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 801e446:	b003      	add	sp, #12
 801e448:	f85d fb04 	ldr.w	pc, [sp], #4

0801e44c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801e44c:	b40c      	push	{r2, r3}
 801e44e:	b507      	push	{r0, r1, r2, lr}
 801e450:	ab04      	add	r3, sp, #16
 801e452:	f853 2b04 	ldr.w	r2, [r3], #4
 801e456:	9301      	str	r3, [sp, #4]
 801e458:	f7ff ffef 	bl	801e43a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801e45c:	b003      	add	sp, #12
 801e45e:	f85d eb04 	ldr.w	lr, [sp], #4
 801e462:	b002      	add	sp, #8
 801e464:	4770      	bx	lr

0801e466 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt>:
 801e466:	4603      	mov	r3, r0
 801e468:	2000      	movs	r0, #0
 801e46a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e46c:	4290      	cmp	r0, r2
 801e46e:	d209      	bcs.n	801e484 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x1e>
 801e470:	781c      	ldrb	r4, [r3, #0]
 801e472:	0625      	lsls	r5, r4, #24
 801e474:	d407      	bmi.n	801e486 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x20>
 801e476:	3301      	adds	r3, #1
 801e478:	800c      	strh	r4, [r1, #0]
 801e47a:	3001      	adds	r0, #1
 801e47c:	1c8c      	adds	r4, r1, #2
 801e47e:	8809      	ldrh	r1, [r1, #0]
 801e480:	b280      	uxth	r0, r0
 801e482:	bb69      	cbnz	r1, 801e4e0 <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x7a>
 801e484:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e486:	f004 05e0 	and.w	r5, r4, #224	; 0xe0
 801e48a:	2dc0      	cmp	r5, #192	; 0xc0
 801e48c:	d10d      	bne.n	801e4aa <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x44>
 801e48e:	785d      	ldrb	r5, [r3, #1]
 801e490:	f005 06c0 	and.w	r6, r5, #192	; 0xc0
 801e494:	2e80      	cmp	r6, #128	; 0x80
 801e496:	d108      	bne.n	801e4aa <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x44>
 801e498:	01a4      	lsls	r4, r4, #6
 801e49a:	f005 053f 	and.w	r5, r5, #63	; 0x3f
 801e49e:	3302      	adds	r3, #2
 801e4a0:	f404 64f8 	and.w	r4, r4, #1984	; 0x7c0
 801e4a4:	432c      	orrs	r4, r5
 801e4a6:	800c      	strh	r4, [r1, #0]
 801e4a8:	e7e7      	b.n	801e47a <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x14>
 801e4aa:	f004 05f0 	and.w	r5, r4, #240	; 0xf0
 801e4ae:	2de0      	cmp	r5, #224	; 0xe0
 801e4b0:	d114      	bne.n	801e4dc <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 801e4b2:	785e      	ldrb	r6, [r3, #1]
 801e4b4:	f006 05c0 	and.w	r5, r6, #192	; 0xc0
 801e4b8:	2d80      	cmp	r5, #128	; 0x80
 801e4ba:	d10f      	bne.n	801e4dc <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 801e4bc:	789d      	ldrb	r5, [r3, #2]
 801e4be:	f005 07c0 	and.w	r7, r5, #192	; 0xc0
 801e4c2:	2f80      	cmp	r7, #128	; 0x80
 801e4c4:	d10a      	bne.n	801e4dc <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x76>
 801e4c6:	f005 053f 	and.w	r5, r5, #63	; 0x3f
 801e4ca:	01b6      	lsls	r6, r6, #6
 801e4cc:	3303      	adds	r3, #3
 801e4ce:	ea45 3404 	orr.w	r4, r5, r4, lsl #12
 801e4d2:	f406 667c 	and.w	r6, r6, #4032	; 0xfc0
 801e4d6:	4334      	orrs	r4, r6
 801e4d8:	800c      	strh	r4, [r1, #0]
 801e4da:	e7ce      	b.n	801e47a <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x14>
 801e4dc:	3301      	adds	r3, #1
 801e4de:	460c      	mov	r4, r1
 801e4e0:	4621      	mov	r1, r4
 801e4e2:	e7c3      	b.n	801e46c <_ZN8touchgfx7Unicode8fromUTF8EPKhPtt+0x6>

0801e4e4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801e4e4:	4b01      	ldr	r3, [pc, #4]	; (801e4ec <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801e4e6:	6018      	str	r0, [r3, #0]
 801e4e8:	4770      	bx	lr
 801e4ea:	bf00      	nop
 801e4ec:	200041e8 	.word	0x200041e8

0801e4f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801e4f0:	4b06      	ldr	r3, [pc, #24]	; (801e50c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801e4f2:	881a      	ldrh	r2, [r3, #0]
 801e4f4:	4282      	cmp	r2, r0
 801e4f6:	d807      	bhi.n	801e508 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801e4f8:	4b05      	ldr	r3, [pc, #20]	; (801e510 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801e4fa:	881b      	ldrh	r3, [r3, #0]
 801e4fc:	4413      	add	r3, r2
 801e4fe:	4298      	cmp	r0, r3
 801e500:	bfac      	ite	ge
 801e502:	2000      	movge	r0, #0
 801e504:	2001      	movlt	r0, #1
 801e506:	4770      	bx	lr
 801e508:	2000      	movs	r0, #0
 801e50a:	4770      	bx	lr
 801e50c:	20004208 	.word	0x20004208
 801e510:	2000420c 	.word	0x2000420c

0801e514 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801e514:	b508      	push	{r3, lr}
 801e516:	4601      	mov	r1, r0
 801e518:	f7ff ffea 	bl	801e4f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801e51c:	b118      	cbz	r0, 801e526 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801e51e:	4b02      	ldr	r3, [pc, #8]	; (801e528 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801e520:	681b      	ldr	r3, [r3, #0]
 801e522:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801e526:	bd08      	pop	{r3, pc}
 801e528:	200041ec 	.word	0x200041ec

0801e52c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801e52c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801e530:	4d28      	ldr	r5, [pc, #160]	; (801e5d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801e532:	682b      	ldr	r3, [r5, #0]
 801e534:	2b00      	cmp	r3, #0
 801e536:	d04a      	beq.n	801e5ce <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801e538:	4a27      	ldr	r2, [pc, #156]	; (801e5d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801e53a:	4e28      	ldr	r6, [pc, #160]	; (801e5dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801e53c:	8810      	ldrh	r0, [r2, #0]
 801e53e:	f8b6 8000 	ldrh.w	r8, [r6]
 801e542:	4c27      	ldr	r4, [pc, #156]	; (801e5e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 801e544:	4440      	add	r0, r8
 801e546:	4f27      	ldr	r7, [pc, #156]	; (801e5e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801e548:	1c41      	adds	r1, r0, #1
 801e54a:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 801e54e:	f021 0101 	bic.w	r1, r1, #1
 801e552:	eb03 020e 	add.w	r2, r3, lr
 801e556:	0409      	lsls	r1, r1, #16
 801e558:	6022      	str	r2, [r4, #0]
 801e55a:	0c09      	lsrs	r1, r1, #16
 801e55c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 801e560:	eb0e 010c 	add.w	r1, lr, ip
 801e564:	185a      	adds	r2, r3, r1
 801e566:	603a      	str	r2, [r7, #0]
 801e568:	220e      	movs	r2, #14
 801e56a:	fb02 f208 	mul.w	r2, r2, r8
 801e56e:	3203      	adds	r2, #3
 801e570:	f022 0203 	bic.w	r2, r2, #3
 801e574:	4411      	add	r1, r2
 801e576:	440b      	add	r3, r1
 801e578:	491b      	ldr	r1, [pc, #108]	; (801e5e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 801e57a:	600b      	str	r3, [r1, #0]
 801e57c:	2300      	movs	r3, #0
 801e57e:	491b      	ldr	r1, [pc, #108]	; (801e5ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 801e580:	800b      	strh	r3, [r1, #0]
 801e582:	491b      	ldr	r1, [pc, #108]	; (801e5f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 801e584:	6809      	ldr	r1, [r1, #0]
 801e586:	eba1 010e 	sub.w	r1, r1, lr
 801e58a:	eba1 010c 	sub.w	r1, r1, ip
 801e58e:	469c      	mov	ip, r3
 801e590:	1a8a      	subs	r2, r1, r2
 801e592:	4918      	ldr	r1, [pc, #96]	; (801e5f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 801e594:	600a      	str	r2, [r1, #0]
 801e596:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801e59a:	4a17      	ldr	r2, [pc, #92]	; (801e5f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 801e59c:	8013      	strh	r3, [r2, #0]
 801e59e:	4283      	cmp	r3, r0
 801e5a0:	d10d      	bne.n	801e5be <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 801e5a2:	8835      	ldrh	r5, [r6, #0]
 801e5a4:	2300      	movs	r3, #0
 801e5a6:	6838      	ldr	r0, [r7, #0]
 801e5a8:	240e      	movs	r4, #14
 801e5aa:	429d      	cmp	r5, r3
 801e5ac:	d90f      	bls.n	801e5ce <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 801e5ae:	fb04 0203 	mla	r2, r4, r3, r0
 801e5b2:	3301      	adds	r3, #1
 801e5b4:	7b11      	ldrb	r1, [r2, #12]
 801e5b6:	f36f 1145 	bfc	r1, #5, #1
 801e5ba:	7311      	strb	r1, [r2, #12]
 801e5bc:	e7f5      	b.n	801e5aa <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 801e5be:	682a      	ldr	r2, [r5, #0]
 801e5c0:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 801e5c4:	6822      	ldr	r2, [r4, #0]
 801e5c6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 801e5ca:	3301      	adds	r3, #1
 801e5cc:	e7e7      	b.n	801e59e <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 801e5ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e5d2:	bf00      	nop
 801e5d4:	200041ec 	.word	0x200041ec
 801e5d8:	20004208 	.word	0x20004208
 801e5dc:	2000420c 	.word	0x2000420c
 801e5e0:	20004200 	.word	0x20004200
 801e5e4:	200041f0 	.word	0x200041f0
 801e5e8:	200041f8 	.word	0x200041f8
 801e5ec:	2000420a 	.word	0x2000420a
 801e5f0:	200041f4 	.word	0x200041f4
 801e5f4:	20004204 	.word	0x20004204
 801e5f8:	200041fc 	.word	0x200041fc

0801e5fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801e5fc:	4b10      	ldr	r3, [pc, #64]	; (801e640 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 801e5fe:	b510      	push	{r4, lr}
 801e600:	681b      	ldr	r3, [r3, #0]
 801e602:	b9db      	cbnz	r3, 801e63c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801e604:	b1d1      	cbz	r1, 801e63c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 801e606:	4b0f      	ldr	r3, [pc, #60]	; (801e644 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 801e608:	240e      	movs	r4, #14
 801e60a:	801a      	strh	r2, [r3, #0]
 801e60c:	b292      	uxth	r2, r2
 801e60e:	4b0e      	ldr	r3, [pc, #56]	; (801e648 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 801e610:	881b      	ldrh	r3, [r3, #0]
 801e612:	4413      	add	r3, r2
 801e614:	4362      	muls	r2, r4
 801e616:	2406      	movs	r4, #6
 801e618:	fb04 2203 	mla	r2, r4, r3, r2
 801e61c:	428a      	cmp	r2, r1
 801e61e:	d305      	bcc.n	801e62c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 801e620:	4b0a      	ldr	r3, [pc, #40]	; (801e64c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 801e622:	2137      	movs	r1, #55	; 0x37
 801e624:	4a0a      	ldr	r2, [pc, #40]	; (801e650 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 801e626:	480b      	ldr	r0, [pc, #44]	; (801e654 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 801e628:	f00d fc5e 	bl	802bee8 <__assert_func>
 801e62c:	4b0a      	ldr	r3, [pc, #40]	; (801e658 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 801e62e:	6019      	str	r1, [r3, #0]
 801e630:	4b0a      	ldr	r3, [pc, #40]	; (801e65c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 801e632:	6018      	str	r0, [r3, #0]
 801e634:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e638:	f7ff bf78 	b.w	801e52c <_ZN8touchgfx6Bitmap10clearCacheEv>
 801e63c:	bd10      	pop	{r4, pc}
 801e63e:	bf00      	nop
 801e640:	200041f8 	.word	0x200041f8
 801e644:	2000420c 	.word	0x2000420c
 801e648:	20004208 	.word	0x20004208
 801e64c:	08031cf5 	.word	0x08031cf5
 801e650:	08031d4e 	.word	0x08031d4e
 801e654:	08031cd0 	.word	0x08031cd0
 801e658:	200041f4 	.word	0x200041f4
 801e65c:	200041ec 	.word	0x200041ec

0801e660 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801e660:	b470      	push	{r4, r5, r6}
 801e662:	4c07      	ldr	r4, [pc, #28]	; (801e680 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801e664:	4605      	mov	r5, r0
 801e666:	4610      	mov	r0, r2
 801e668:	9a03      	ldr	r2, [sp, #12]
 801e66a:	6826      	ldr	r6, [r4, #0]
 801e66c:	b936      	cbnz	r6, 801e67c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801e66e:	6025      	str	r5, [r4, #0]
 801e670:	4c04      	ldr	r4, [pc, #16]	; (801e684 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801e672:	8021      	strh	r1, [r4, #0]
 801e674:	4619      	mov	r1, r3
 801e676:	bc70      	pop	{r4, r5, r6}
 801e678:	f7ff bfc0 	b.w	801e5fc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801e67c:	bc70      	pop	{r4, r5, r6}
 801e67e:	4770      	bx	lr
 801e680:	20004210 	.word	0x20004210
 801e684:	20004208 	.word	0x20004208

0801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801e688:	b508      	push	{r3, lr}
 801e68a:	4b14      	ldr	r3, [pc, #80]	; (801e6dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801e68c:	6819      	ldr	r1, [r3, #0]
 801e68e:	b931      	cbnz	r1, 801e69e <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 801e690:	4b13      	ldr	r3, [pc, #76]	; (801e6e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801e692:	f240 3187 	movw	r1, #903	; 0x387
 801e696:	4a13      	ldr	r2, [pc, #76]	; (801e6e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801e698:	4813      	ldr	r0, [pc, #76]	; (801e6e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801e69a:	f00d fc25 	bl	802bee8 <__assert_func>
 801e69e:	4a13      	ldr	r2, [pc, #76]	; (801e6ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801e6a0:	8803      	ldrh	r3, [r0, #0]
 801e6a2:	8812      	ldrh	r2, [r2, #0]
 801e6a4:	4293      	cmp	r3, r2
 801e6a6:	d204      	bcs.n	801e6b2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 801e6a8:	2214      	movs	r2, #20
 801e6aa:	fb02 1303 	mla	r3, r2, r3, r1
 801e6ae:	8918      	ldrh	r0, [r3, #8]
 801e6b0:	bd08      	pop	{r3, pc}
 801e6b2:	490f      	ldr	r1, [pc, #60]	; (801e6f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 801e6b4:	8809      	ldrh	r1, [r1, #0]
 801e6b6:	4411      	add	r1, r2
 801e6b8:	428b      	cmp	r3, r1
 801e6ba:	da06      	bge.n	801e6ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 801e6bc:	1a9b      	subs	r3, r3, r2
 801e6be:	4a0d      	ldr	r2, [pc, #52]	; (801e6f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 801e6c0:	210e      	movs	r1, #14
 801e6c2:	6812      	ldr	r2, [r2, #0]
 801e6c4:	fb01 2303 	mla	r3, r1, r3, r2
 801e6c8:	e7f1      	b.n	801e6ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 801e6ca:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801e6ce:	4293      	cmp	r3, r2
 801e6d0:	bf0a      	itet	eq
 801e6d2:	4b09      	ldreq	r3, [pc, #36]	; (801e6f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 801e6d4:	2000      	movne	r0, #0
 801e6d6:	8818      	ldrheq	r0, [r3, #0]
 801e6d8:	e7ea      	b.n	801e6b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 801e6da:	bf00      	nop
 801e6dc:	20004210 	.word	0x20004210
 801e6e0:	08030fb0 	.word	0x08030fb0
 801e6e4:	08031dfb 	.word	0x08031dfb
 801e6e8:	08031cd0 	.word	0x08031cd0
 801e6ec:	20004208 	.word	0x20004208
 801e6f0:	2000420c 	.word	0x2000420c
 801e6f4:	200041f0 	.word	0x200041f0
 801e6f8:	2000415a 	.word	0x2000415a

0801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801e6fc:	b508      	push	{r3, lr}
 801e6fe:	4b14      	ldr	r3, [pc, #80]	; (801e750 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801e700:	6819      	ldr	r1, [r3, #0]
 801e702:	b931      	cbnz	r1, 801e712 <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 801e704:	4b13      	ldr	r3, [pc, #76]	; (801e754 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801e706:	f240 319b 	movw	r1, #923	; 0x39b
 801e70a:	4a13      	ldr	r2, [pc, #76]	; (801e758 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801e70c:	4813      	ldr	r0, [pc, #76]	; (801e75c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801e70e:	f00d fbeb 	bl	802bee8 <__assert_func>
 801e712:	4a13      	ldr	r2, [pc, #76]	; (801e760 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801e714:	8803      	ldrh	r3, [r0, #0]
 801e716:	8812      	ldrh	r2, [r2, #0]
 801e718:	4293      	cmp	r3, r2
 801e71a:	d204      	bcs.n	801e726 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 801e71c:	2214      	movs	r2, #20
 801e71e:	fb02 1303 	mla	r3, r2, r3, r1
 801e722:	8958      	ldrh	r0, [r3, #10]
 801e724:	bd08      	pop	{r3, pc}
 801e726:	490f      	ldr	r1, [pc, #60]	; (801e764 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 801e728:	8809      	ldrh	r1, [r1, #0]
 801e72a:	4411      	add	r1, r2
 801e72c:	428b      	cmp	r3, r1
 801e72e:	da06      	bge.n	801e73e <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 801e730:	1a9b      	subs	r3, r3, r2
 801e732:	4a0d      	ldr	r2, [pc, #52]	; (801e768 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 801e734:	210e      	movs	r1, #14
 801e736:	6812      	ldr	r2, [r2, #0]
 801e738:	fb01 2303 	mla	r3, r1, r3, r2
 801e73c:	e7f1      	b.n	801e722 <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 801e73e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801e742:	4293      	cmp	r3, r2
 801e744:	bf0a      	itet	eq
 801e746:	4b09      	ldreq	r3, [pc, #36]	; (801e76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 801e748:	2000      	movne	r0, #0
 801e74a:	8818      	ldrheq	r0, [r3, #0]
 801e74c:	e7ea      	b.n	801e724 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 801e74e:	bf00      	nop
 801e750:	20004210 	.word	0x20004210
 801e754:	08030fb0 	.word	0x08030fb0
 801e758:	08031e27 	.word	0x08031e27
 801e75c:	08031cd0 	.word	0x08031cd0
 801e760:	20004208 	.word	0x20004208
 801e764:	2000420c 	.word	0x2000420c
 801e768:	200041f0 	.word	0x200041f0
 801e76c:	2000415c 	.word	0x2000415c

0801e770 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801e770:	4b23      	ldr	r3, [pc, #140]	; (801e800 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801e772:	b510      	push	{r4, lr}
 801e774:	681c      	ldr	r4, [r3, #0]
 801e776:	b934      	cbnz	r4, 801e786 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 801e778:	4b22      	ldr	r3, [pc, #136]	; (801e804 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801e77a:	f240 31af 	movw	r1, #943	; 0x3af
 801e77e:	4a22      	ldr	r2, [pc, #136]	; (801e808 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801e780:	4822      	ldr	r0, [pc, #136]	; (801e80c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801e782:	f00d fbb1 	bl	802bee8 <__assert_func>
 801e786:	4a22      	ldr	r2, [pc, #136]	; (801e810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801e788:	880b      	ldrh	r3, [r1, #0]
 801e78a:	8812      	ldrh	r2, [r2, #0]
 801e78c:	4293      	cmp	r3, r2
 801e78e:	d211      	bcs.n	801e7b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 801e790:	2214      	movs	r2, #20
 801e792:	fb02 4303 	mla	r3, r2, r3, r4
 801e796:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801e79a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801e79e:	8a1a      	ldrh	r2, [r3, #16]
 801e7a0:	8a5b      	ldrh	r3, [r3, #18]
 801e7a2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e7a6:	8004      	strh	r4, [r0, #0]
 801e7a8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801e7ac:	8041      	strh	r1, [r0, #2]
 801e7ae:	8082      	strh	r2, [r0, #4]
 801e7b0:	80c3      	strh	r3, [r0, #6]
 801e7b2:	e00e      	b.n	801e7d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801e7b4:	4917      	ldr	r1, [pc, #92]	; (801e814 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 801e7b6:	8809      	ldrh	r1, [r1, #0]
 801e7b8:	4411      	add	r1, r2
 801e7ba:	428b      	cmp	r3, r1
 801e7bc:	da0a      	bge.n	801e7d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 801e7be:	1a9b      	subs	r3, r3, r2
 801e7c0:	4a15      	ldr	r2, [pc, #84]	; (801e818 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 801e7c2:	210e      	movs	r1, #14
 801e7c4:	6812      	ldr	r2, [r2, #0]
 801e7c6:	fb01 2303 	mla	r3, r1, r3, r2
 801e7ca:	681a      	ldr	r2, [r3, #0]
 801e7cc:	6002      	str	r2, [r0, #0]
 801e7ce:	685a      	ldr	r2, [r3, #4]
 801e7d0:	6042      	str	r2, [r0, #4]
 801e7d2:	bd10      	pop	{r4, pc}
 801e7d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801e7d8:	4293      	cmp	r3, r2
 801e7da:	d10b      	bne.n	801e7f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 801e7dc:	4b0f      	ldr	r3, [pc, #60]	; (801e81c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 801e7de:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e7e2:	4b0f      	ldr	r3, [pc, #60]	; (801e820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 801e7e4:	8081      	strh	r1, [r0, #4]
 801e7e6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e7ea:	2300      	movs	r3, #0
 801e7ec:	80c2      	strh	r2, [r0, #6]
 801e7ee:	8003      	strh	r3, [r0, #0]
 801e7f0:	8043      	strh	r3, [r0, #2]
 801e7f2:	e7ee      	b.n	801e7d2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 801e7f4:	2300      	movs	r3, #0
 801e7f6:	8003      	strh	r3, [r0, #0]
 801e7f8:	8043      	strh	r3, [r0, #2]
 801e7fa:	8083      	strh	r3, [r0, #4]
 801e7fc:	e7d8      	b.n	801e7b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 801e7fe:	bf00      	nop
 801e800:	20004210 	.word	0x20004210
 801e804:	08030fb0 	.word	0x08030fb0
 801e808:	08031d94 	.word	0x08031d94
 801e80c:	08031cd0 	.word	0x08031cd0
 801e810:	20004208 	.word	0x20004208
 801e814:	2000420c 	.word	0x2000420c
 801e818:	200041f0 	.word	0x200041f0
 801e81c:	2000415a 	.word	0x2000415a
 801e820:	2000415c 	.word	0x2000415c

0801e824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801e824:	4b18      	ldr	r3, [pc, #96]	; (801e888 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801e826:	681b      	ldr	r3, [r3, #0]
 801e828:	b34b      	cbz	r3, 801e87e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801e82a:	4a18      	ldr	r2, [pc, #96]	; (801e88c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801e82c:	8800      	ldrh	r0, [r0, #0]
 801e82e:	8812      	ldrh	r2, [r2, #0]
 801e830:	4290      	cmp	r0, r2
 801e832:	d211      	bcs.n	801e858 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 801e834:	2214      	movs	r2, #20
 801e836:	fb02 3300 	mla	r3, r2, r0, r3
 801e83a:	8a1a      	ldrh	r2, [r3, #16]
 801e83c:	8919      	ldrh	r1, [r3, #8]
 801e83e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801e842:	428a      	cmp	r2, r1
 801e844:	db1d      	blt.n	801e882 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801e846:	8a58      	ldrh	r0, [r3, #18]
 801e848:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801e84c:	895b      	ldrh	r3, [r3, #10]
 801e84e:	4298      	cmp	r0, r3
 801e850:	bfac      	ite	ge
 801e852:	2000      	movge	r0, #0
 801e854:	2001      	movlt	r0, #1
 801e856:	4770      	bx	lr
 801e858:	4b0d      	ldr	r3, [pc, #52]	; (801e890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801e85a:	881b      	ldrh	r3, [r3, #0]
 801e85c:	4413      	add	r3, r2
 801e85e:	4298      	cmp	r0, r3
 801e860:	da0d      	bge.n	801e87e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 801e862:	4b0c      	ldr	r3, [pc, #48]	; (801e894 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 801e864:	1a80      	subs	r0, r0, r2
 801e866:	220e      	movs	r2, #14
 801e868:	681b      	ldr	r3, [r3, #0]
 801e86a:	fb02 3300 	mla	r3, r2, r0, r3
 801e86e:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801e872:	891a      	ldrh	r2, [r3, #8]
 801e874:	4291      	cmp	r1, r2
 801e876:	db04      	blt.n	801e882 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 801e878:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801e87c:	e7e6      	b.n	801e84c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 801e87e:	2000      	movs	r0, #0
 801e880:	4770      	bx	lr
 801e882:	2001      	movs	r0, #1
 801e884:	4770      	bx	lr
 801e886:	bf00      	nop
 801e888:	20004210 	.word	0x20004210
 801e88c:	20004208 	.word	0x20004208
 801e890:	2000420c 	.word	0x2000420c
 801e894:	200041f0 	.word	0x200041f0

0801e898 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801e898:	b508      	push	{r3, lr}
 801e89a:	4b12      	ldr	r3, [pc, #72]	; (801e8e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801e89c:	6819      	ldr	r1, [r3, #0]
 801e89e:	b931      	cbnz	r1, 801e8ae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801e8a0:	4b11      	ldr	r3, [pc, #68]	; (801e8e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801e8a2:	f240 31d3 	movw	r1, #979	; 0x3d3
 801e8a6:	4a11      	ldr	r2, [pc, #68]	; (801e8ec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801e8a8:	4811      	ldr	r0, [pc, #68]	; (801e8f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801e8aa:	f00d fb1d 	bl	802bee8 <__assert_func>
 801e8ae:	8803      	ldrh	r3, [r0, #0]
 801e8b0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801e8b4:	4293      	cmp	r3, r2
 801e8b6:	d012      	beq.n	801e8de <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801e8b8:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801e8bc:	4293      	cmp	r3, r2
 801e8be:	d103      	bne.n	801e8c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 801e8c0:	4b0c      	ldr	r3, [pc, #48]	; (801e8f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801e8c2:	681b      	ldr	r3, [r3, #0]
 801e8c4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801e8c6:	bd08      	pop	{r3, pc}
 801e8c8:	4a0b      	ldr	r2, [pc, #44]	; (801e8f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 801e8ca:	6812      	ldr	r2, [r2, #0]
 801e8cc:	b11a      	cbz	r2, 801e8d6 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 801e8ce:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801e8d2:	2800      	cmp	r0, #0
 801e8d4:	d1f7      	bne.n	801e8c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801e8d6:	2214      	movs	r2, #20
 801e8d8:	4353      	muls	r3, r2
 801e8da:	58c8      	ldr	r0, [r1, r3]
 801e8dc:	e7f3      	b.n	801e8c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801e8de:	2000      	movs	r0, #0
 801e8e0:	e7f1      	b.n	801e8c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 801e8e2:	bf00      	nop
 801e8e4:	20004210 	.word	0x20004210
 801e8e8:	08030fb0 	.word	0x08030fb0
 801e8ec:	08031dca 	.word	0x08031dca
 801e8f0:	08031cd0 	.word	0x08031cd0
 801e8f4:	20004168 	.word	0x20004168
 801e8f8:	200041ec 	.word	0x200041ec

0801e8fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801e8fc:	8802      	ldrh	r2, [r0, #0]
 801e8fe:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 801e902:	429a      	cmp	r2, r3
 801e904:	d845      	bhi.n	801e992 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801e906:	4b24      	ldr	r3, [pc, #144]	; (801e998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801e908:	8818      	ldrh	r0, [r3, #0]
 801e90a:	4282      	cmp	r2, r0
 801e90c:	d221      	bcs.n	801e952 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 801e90e:	4b23      	ldr	r3, [pc, #140]	; (801e99c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801e910:	6819      	ldr	r1, [r3, #0]
 801e912:	2314      	movs	r3, #20
 801e914:	fb03 1302 	mla	r3, r3, r2, r1
 801e918:	6858      	ldr	r0, [r3, #4]
 801e91a:	2800      	cmp	r0, #0
 801e91c:	d03a      	beq.n	801e994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801e91e:	4920      	ldr	r1, [pc, #128]	; (801e9a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801e920:	6809      	ldr	r1, [r1, #0]
 801e922:	2900      	cmp	r1, #0
 801e924:	d036      	beq.n	801e994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801e926:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801e92a:	2900      	cmp	r1, #0
 801e92c:	d032      	beq.n	801e994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 801e92e:	891a      	ldrh	r2, [r3, #8]
 801e930:	8958      	ldrh	r0, [r3, #10]
 801e932:	4350      	muls	r0, r2
 801e934:	7c5a      	ldrb	r2, [r3, #17]
 801e936:	7cdb      	ldrb	r3, [r3, #19]
 801e938:	0952      	lsrs	r2, r2, #5
 801e93a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801e93e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801e942:	2b0b      	cmp	r3, #11
 801e944:	bf18      	it	ne
 801e946:	0040      	lslne	r0, r0, #1
 801e948:	3003      	adds	r0, #3
 801e94a:	f020 0003 	bic.w	r0, r0, #3
 801e94e:	4408      	add	r0, r1
 801e950:	4770      	bx	lr
 801e952:	4b14      	ldr	r3, [pc, #80]	; (801e9a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 801e954:	881b      	ldrh	r3, [r3, #0]
 801e956:	4403      	add	r3, r0
 801e958:	429a      	cmp	r2, r3
 801e95a:	da1a      	bge.n	801e992 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801e95c:	4b12      	ldr	r3, [pc, #72]	; (801e9a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 801e95e:	1a10      	subs	r0, r2, r0
 801e960:	210e      	movs	r1, #14
 801e962:	681b      	ldr	r3, [r3, #0]
 801e964:	fb01 3000 	mla	r0, r1, r0, r3
 801e968:	7b03      	ldrb	r3, [r0, #12]
 801e96a:	f003 031f 	and.w	r3, r3, #31
 801e96e:	2b0b      	cmp	r3, #11
 801e970:	d10b      	bne.n	801e98a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801e972:	8903      	ldrh	r3, [r0, #8]
 801e974:	8940      	ldrh	r0, [r0, #10]
 801e976:	4358      	muls	r0, r3
 801e978:	4b09      	ldr	r3, [pc, #36]	; (801e9a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801e97a:	3003      	adds	r0, #3
 801e97c:	6819      	ldr	r1, [r3, #0]
 801e97e:	f020 0303 	bic.w	r3, r0, #3
 801e982:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801e986:	4418      	add	r0, r3
 801e988:	4770      	bx	lr
 801e98a:	2b0d      	cmp	r3, #13
 801e98c:	d101      	bne.n	801e992 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 801e98e:	300d      	adds	r0, #13
 801e990:	4770      	bx	lr
 801e992:	2000      	movs	r0, #0
 801e994:	4770      	bx	lr
 801e996:	bf00      	nop
 801e998:	20004208 	.word	0x20004208
 801e99c:	20004210 	.word	0x20004210
 801e9a0:	200041ec 	.word	0x200041ec
 801e9a4:	2000420c 	.word	0x2000420c
 801e9a8:	200041f0 	.word	0x200041f0

0801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801e9ac:	4b19      	ldr	r3, [pc, #100]	; (801ea14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801e9ae:	6819      	ldr	r1, [r3, #0]
 801e9b0:	8803      	ldrh	r3, [r0, #0]
 801e9b2:	b1e9      	cbz	r1, 801e9f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801e9b4:	4a18      	ldr	r2, [pc, #96]	; (801ea18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801e9b6:	8812      	ldrh	r2, [r2, #0]
 801e9b8:	429a      	cmp	r2, r3
 801e9ba:	d90a      	bls.n	801e9d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801e9bc:	2214      	movs	r2, #20
 801e9be:	fb02 1303 	mla	r3, r2, r3, r1
 801e9c2:	7c58      	ldrb	r0, [r3, #17]
 801e9c4:	0942      	lsrs	r2, r0, #5
 801e9c6:	7cd8      	ldrb	r0, [r3, #19]
 801e9c8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801e9cc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801e9d0:	4770      	bx	lr
 801e9d2:	4912      	ldr	r1, [pc, #72]	; (801ea1c <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 801e9d4:	8809      	ldrh	r1, [r1, #0]
 801e9d6:	4411      	add	r1, r2
 801e9d8:	428b      	cmp	r3, r1
 801e9da:	da09      	bge.n	801e9f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801e9dc:	1a9b      	subs	r3, r3, r2
 801e9de:	4a10      	ldr	r2, [pc, #64]	; (801ea20 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 801e9e0:	210e      	movs	r1, #14
 801e9e2:	6812      	ldr	r2, [r2, #0]
 801e9e4:	fb01 2303 	mla	r3, r1, r3, r2
 801e9e8:	7b18      	ldrb	r0, [r3, #12]
 801e9ea:	f000 001f 	and.w	r0, r0, #31
 801e9ee:	4770      	bx	lr
 801e9f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801e9f4:	4293      	cmp	r3, r2
 801e9f6:	d10a      	bne.n	801ea0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 801e9f8:	4b0a      	ldr	r3, [pc, #40]	; (801ea24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 801e9fa:	681b      	ldr	r3, [r3, #0]
 801e9fc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801ea00:	b10a      	cbz	r2, 801ea06 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801ea02:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801ea04:	b900      	cbnz	r0, 801ea08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 801ea06:	6898      	ldr	r0, [r3, #8]
 801ea08:	6803      	ldr	r3, [r0, #0]
 801ea0a:	6a1b      	ldr	r3, [r3, #32]
 801ea0c:	4718      	bx	r3
 801ea0e:	2000      	movs	r0, #0
 801ea10:	4770      	bx	lr
 801ea12:	bf00      	nop
 801ea14:	20004210 	.word	0x20004210
 801ea18:	20004208 	.word	0x20004208
 801ea1c:	2000420c 	.word	0x2000420c
 801ea20:	200041f0 	.word	0x200041f0
 801ea24:	20004168 	.word	0x20004168

0801ea28 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801ea28:	2010      	movs	r0, #16
 801ea2a:	4770      	bx	lr

0801ea2c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801ea2c:	2000      	movs	r0, #0
 801ea2e:	4770      	bx	lr

0801ea30 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 801ea30:	00d2      	lsls	r2, r2, #3
 801ea32:	0209      	lsls	r1, r1, #8
 801ea34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea38:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801ea3c:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 801ea40:	4310      	orrs	r0, r2
 801ea42:	4770      	bx	lr

0801ea44 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 801ea44:	0a09      	lsrs	r1, r1, #8
 801ea46:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801ea4a:	4770      	bx	lr

0801ea4c <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 801ea4c:	08c9      	lsrs	r1, r1, #3
 801ea4e:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 801ea52:	4770      	bx	lr

0801ea54 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 801ea54:	00c9      	lsls	r1, r1, #3
 801ea56:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 801ea5a:	4770      	bx	lr

0801ea5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801ea5c:	2bff      	cmp	r3, #255	; 0xff
 801ea5e:	d050      	beq.n	801eb02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801ea60:	2a0b      	cmp	r2, #11
 801ea62:	d04a      	beq.n	801eafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ea64:	d80e      	bhi.n	801ea84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801ea66:	2a03      	cmp	r2, #3
 801ea68:	d03f      	beq.n	801eaea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801ea6a:	d804      	bhi.n	801ea76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801ea6c:	2a01      	cmp	r2, #1
 801ea6e:	d03e      	beq.n	801eaee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801ea70:	d93f      	bls.n	801eaf2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801ea72:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801ea74:	4770      	bx	lr
 801ea76:	2a09      	cmp	r2, #9
 801ea78:	d03f      	beq.n	801eafa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801ea7a:	d83c      	bhi.n	801eaf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ea7c:	2a08      	cmp	r2, #8
 801ea7e:	d03a      	beq.n	801eaf6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801ea80:	2000      	movs	r0, #0
 801ea82:	4770      	bx	lr
 801ea84:	2a2f      	cmp	r2, #47	; 0x2f
 801ea86:	d024      	beq.n	801ead2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801ea88:	d80d      	bhi.n	801eaa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801ea8a:	2a2d      	cmp	r2, #45	; 0x2d
 801ea8c:	d014      	beq.n	801eab8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801ea8e:	d826      	bhi.n	801eade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801ea90:	2a2c      	cmp	r2, #44	; 0x2c
 801ea92:	d1f5      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801ea94:	684b      	ldr	r3, [r1, #4]
 801ea96:	781b      	ldrb	r3, [r3, #0]
 801ea98:	2b01      	cmp	r3, #1
 801ea9a:	d018      	beq.n	801eace <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801ea9c:	d323      	bcc.n	801eae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801ea9e:	2b02      	cmp	r3, #2
 801eaa0:	d1ee      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eaa2:	6880      	ldr	r0, [r0, #8]
 801eaa4:	4770      	bx	lr
 801eaa6:	2a31      	cmp	r2, #49	; 0x31
 801eaa8:	d004      	beq.n	801eab4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801eaaa:	d328      	bcc.n	801eafe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801eaac:	2a32      	cmp	r2, #50	; 0x32
 801eaae:	d026      	beq.n	801eafe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801eab0:	2a33      	cmp	r2, #51	; 0x33
 801eab2:	d1e5      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eab4:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801eab6:	4770      	bx	lr
 801eab8:	684b      	ldr	r3, [r1, #4]
 801eaba:	781b      	ldrb	r3, [r3, #0]
 801eabc:	2b01      	cmp	r3, #1
 801eabe:	d004      	beq.n	801eaca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801eac0:	d30b      	bcc.n	801eada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801eac2:	2b02      	cmp	r3, #2
 801eac4:	d1dc      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eac6:	6900      	ldr	r0, [r0, #16]
 801eac8:	4770      	bx	lr
 801eaca:	6a00      	ldr	r0, [r0, #32]
 801eacc:	4770      	bx	lr
 801eace:	6980      	ldr	r0, [r0, #24]
 801ead0:	4770      	bx	lr
 801ead2:	684b      	ldr	r3, [r1, #4]
 801ead4:	781b      	ldrb	r3, [r3, #0]
 801ead6:	2b00      	cmp	r3, #0
 801ead8:	d1d2      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eada:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801eadc:	4770      	bx	lr
 801eade:	684b      	ldr	r3, [r1, #4]
 801eae0:	781b      	ldrb	r3, [r3, #0]
 801eae2:	2b00      	cmp	r3, #0
 801eae4:	d1cc      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eae6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801eae8:	4770      	bx	lr
 801eaea:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801eaec:	4770      	bx	lr
 801eaee:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801eaf0:	4770      	bx	lr
 801eaf2:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801eaf4:	4770      	bx	lr
 801eaf6:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801eaf8:	4770      	bx	lr
 801eafa:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801eafc:	4770      	bx	lr
 801eafe:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801eb00:	4770      	bx	lr
 801eb02:	2a0b      	cmp	r2, #11
 801eb04:	d049      	beq.n	801eb9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801eb06:	d80e      	bhi.n	801eb26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801eb08:	2a03      	cmp	r2, #3
 801eb0a:	d040      	beq.n	801eb8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801eb0c:	d804      	bhi.n	801eb18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801eb0e:	2a01      	cmp	r2, #1
 801eb10:	d03f      	beq.n	801eb92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801eb12:	d940      	bls.n	801eb96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801eb14:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801eb16:	4770      	bx	lr
 801eb18:	2a09      	cmp	r2, #9
 801eb1a:	d03e      	beq.n	801eb9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801eb1c:	d801      	bhi.n	801eb22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801eb1e:	2a08      	cmp	r2, #8
 801eb20:	d1ae      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb22:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801eb24:	4770      	bx	lr
 801eb26:	2a2f      	cmp	r2, #47	; 0x2f
 801eb28:	d024      	beq.n	801eb74 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801eb2a:	d80d      	bhi.n	801eb48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801eb2c:	2a2d      	cmp	r2, #45	; 0x2d
 801eb2e:	d014      	beq.n	801eb5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801eb30:	d826      	bhi.n	801eb80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801eb32:	2a2c      	cmp	r2, #44	; 0x2c
 801eb34:	d1a4      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb36:	684b      	ldr	r3, [r1, #4]
 801eb38:	781b      	ldrb	r3, [r3, #0]
 801eb3a:	2b01      	cmp	r3, #1
 801eb3c:	d018      	beq.n	801eb70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801eb3e:	d324      	bcc.n	801eb8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801eb40:	2b02      	cmp	r3, #2
 801eb42:	d19d      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb44:	68c0      	ldr	r0, [r0, #12]
 801eb46:	4770      	bx	lr
 801eb48:	2a31      	cmp	r2, #49	; 0x31
 801eb4a:	d004      	beq.n	801eb56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801eb4c:	d327      	bcc.n	801eb9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801eb4e:	2a32      	cmp	r2, #50	; 0x32
 801eb50:	d025      	beq.n	801eb9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801eb52:	2a33      	cmp	r2, #51	; 0x33
 801eb54:	d194      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb56:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801eb58:	4770      	bx	lr
 801eb5a:	684b      	ldr	r3, [r1, #4]
 801eb5c:	781b      	ldrb	r3, [r3, #0]
 801eb5e:	2b01      	cmp	r3, #1
 801eb60:	d004      	beq.n	801eb6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801eb62:	d30b      	bcc.n	801eb7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801eb64:	2b02      	cmp	r3, #2
 801eb66:	d18b      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb68:	6940      	ldr	r0, [r0, #20]
 801eb6a:	4770      	bx	lr
 801eb6c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801eb6e:	4770      	bx	lr
 801eb70:	69c0      	ldr	r0, [r0, #28]
 801eb72:	4770      	bx	lr
 801eb74:	684b      	ldr	r3, [r1, #4]
 801eb76:	781b      	ldrb	r3, [r3, #0]
 801eb78:	2b00      	cmp	r3, #0
 801eb7a:	d181      	bne.n	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb7c:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801eb7e:	4770      	bx	lr
 801eb80:	684b      	ldr	r3, [r1, #4]
 801eb82:	781b      	ldrb	r3, [r3, #0]
 801eb84:	2b00      	cmp	r3, #0
 801eb86:	f47f af7b 	bne.w	801ea80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801eb8a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801eb8c:	4770      	bx	lr
 801eb8e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801eb90:	4770      	bx	lr
 801eb92:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801eb94:	4770      	bx	lr
 801eb96:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801eb98:	4770      	bx	lr
 801eb9a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801eb9c:	4770      	bx	lr
 801eb9e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801eba0:	4770      	bx	lr

0801eba2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eba2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eba6:	b087      	sub	sp, #28
 801eba8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ebaa:	9205      	str	r2, [sp, #20]
 801ebac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ebb0:	9101      	str	r1, [sp, #4]
 801ebb2:	9202      	str	r2, [sp, #8]
 801ebb4:	6841      	ldr	r1, [r0, #4]
 801ebb6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801ebba:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ebbe:	fb01 2404 	mla	r4, r1, r4, r2
 801ebc2:	6802      	ldr	r2, [r0, #0]
 801ebc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ebc8:	f8de 2000 	ldr.w	r2, [lr]
 801ebcc:	9203      	str	r2, [sp, #12]
 801ebce:	f8de 2004 	ldr.w	r2, [lr, #4]
 801ebd2:	3204      	adds	r2, #4
 801ebd4:	9204      	str	r2, [sp, #16]
 801ebd6:	9a02      	ldr	r2, [sp, #8]
 801ebd8:	43d6      	mvns	r6, r2
 801ebda:	b2f6      	uxtb	r6, r6
 801ebdc:	9a01      	ldr	r2, [sp, #4]
 801ebde:	2a00      	cmp	r2, #0
 801ebe0:	dc03      	bgt.n	801ebea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ebe2:	9a05      	ldr	r2, [sp, #20]
 801ebe4:	2a00      	cmp	r2, #0
 801ebe6:	f340 8129 	ble.w	801ee3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ebea:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ebec:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ebf0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ebf4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ebf6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ebfa:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ebfe:	2b00      	cmp	r3, #0
 801ec00:	dd0e      	ble.n	801ec20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ec02:	1408      	asrs	r0, r1, #16
 801ec04:	d405      	bmi.n	801ec12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ec06:	4560      	cmp	r0, ip
 801ec08:	da03      	bge.n	801ec12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ec0a:	1410      	asrs	r0, r2, #16
 801ec0c:	d401      	bmi.n	801ec12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ec0e:	42b8      	cmp	r0, r7
 801ec10:	db07      	blt.n	801ec22 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ec12:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ec14:	3b01      	subs	r3, #1
 801ec16:	3402      	adds	r4, #2
 801ec18:	4401      	add	r1, r0
 801ec1a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ec1c:	4402      	add	r2, r0
 801ec1e:	e7ee      	b.n	801ebfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801ec20:	d071      	beq.n	801ed06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801ec22:	1e58      	subs	r0, r3, #1
 801ec24:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec26:	fb05 1500 	mla	r5, r5, r0, r1
 801ec2a:	142d      	asrs	r5, r5, #16
 801ec2c:	d45f      	bmi.n	801ecee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ec2e:	4565      	cmp	r5, ip
 801ec30:	da5d      	bge.n	801ecee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ec32:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ec34:	fb05 2000 	mla	r0, r5, r0, r2
 801ec38:	1400      	asrs	r0, r0, #16
 801ec3a:	d458      	bmi.n	801ecee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ec3c:	42b8      	cmp	r0, r7
 801ec3e:	da56      	bge.n	801ecee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801ec40:	4699      	mov	r9, r3
 801ec42:	46a2      	mov	sl, r4
 801ec44:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801ec48:	f1b9 0f00 	cmp.w	r9, #0
 801ec4c:	dd57      	ble.n	801ecfe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801ec4e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801ec52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801ec56:	9803      	ldr	r0, [sp, #12]
 801ec58:	140d      	asrs	r5, r1, #16
 801ec5a:	f109 39ff 	add.w	r9, r9, #4294967295
 801ec5e:	fb07 000c 	mla	r0, r7, ip, r0
 801ec62:	5d40      	ldrb	r0, [r0, r5]
 801ec64:	9d04      	ldr	r5, [sp, #16]
 801ec66:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801ec6a:	f8ba 5000 	ldrh.w	r5, [sl]
 801ec6e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801ec72:	122f      	asrs	r7, r5, #8
 801ec74:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801ec78:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ec7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ec80:	00ed      	lsls	r5, r5, #3
 801ec82:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801ec86:	fb17 f706 	smulbb	r7, r7, r6
 801ec8a:	b2ed      	uxtb	r5, r5
 801ec8c:	fb18 f806 	smulbb	r8, r8, r6
 801ec90:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801ec94:	10c7      	asrs	r7, r0, #3
 801ec96:	fb15 f506 	smulbb	r5, r5, r6
 801ec9a:	00c0      	lsls	r0, r0, #3
 801ec9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eca0:	fa1f fc8c 	uxth.w	ip, ip
 801eca4:	b2c0      	uxtb	r0, r0
 801eca6:	fb07 870b 	mla	r7, r7, fp, r8
 801ecaa:	fb00 500b 	mla	r0, r0, fp, r5
 801ecae:	f10c 0501 	add.w	r5, ip, #1
 801ecb2:	b2bf      	uxth	r7, r7
 801ecb4:	b280      	uxth	r0, r0
 801ecb6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ecba:	f107 0801 	add.w	r8, r7, #1
 801ecbe:	1c45      	adds	r5, r0, #1
 801ecc0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ecc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ecc8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801eccc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ecce:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ecd2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ecd6:	4401      	add	r1, r0
 801ecd8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ecdc:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ecde:	ea4c 0c05 	orr.w	ip, ip, r5
 801ece2:	4402      	add	r2, r0
 801ece4:	ea4c 0c08 	orr.w	ip, ip, r8
 801ece8:	f82a cb02 	strh.w	ip, [sl], #2
 801ecec:	e7ac      	b.n	801ec48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ecee:	f04f 0800 	mov.w	r8, #0
 801ecf2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801ecf6:	eb03 0008 	add.w	r0, r3, r8
 801ecfa:	2800      	cmp	r0, #0
 801ecfc:	dc41      	bgt.n	801ed82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ecfe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ed02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ed06:	9b01      	ldr	r3, [sp, #4]
 801ed08:	2b00      	cmp	r3, #0
 801ed0a:	f340 8097 	ble.w	801ee3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801ed0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ed12:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed14:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed1c:	eef0 6a62 	vmov.f32	s13, s5
 801ed20:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ed24:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed28:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed2c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801ed30:	eef0 6a43 	vmov.f32	s13, s6
 801ed34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ed38:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ed3c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed40:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ed44:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ed48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ed4c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ed50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ed54:	ee12 2a90 	vmov	r2, s5
 801ed58:	eef0 2a47 	vmov.f32	s5, s14
 801ed5c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed60:	ee13 2a10 	vmov	r2, s6
 801ed64:	9313      	str	r3, [sp, #76]	; 0x4c
 801ed66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed68:	eeb0 3a67 	vmov.f32	s6, s15
 801ed6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ed70:	9314      	str	r3, [sp, #80]	; 0x50
 801ed72:	9b01      	ldr	r3, [sp, #4]
 801ed74:	9a05      	ldr	r2, [sp, #20]
 801ed76:	3b01      	subs	r3, #1
 801ed78:	9301      	str	r3, [sp, #4]
 801ed7a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ed7c:	bf08      	it	eq
 801ed7e:	4613      	moveq	r3, r2
 801ed80:	e72c      	b.n	801ebdc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ed82:	140f      	asrs	r7, r1, #16
 801ed84:	d453      	bmi.n	801ee2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ed86:	f8de 5008 	ldr.w	r5, [lr, #8]
 801ed8a:	42bd      	cmp	r5, r7
 801ed8c:	dd4f      	ble.n	801ee2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ed8e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801ed92:	d44c      	bmi.n	801ee2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ed94:	f8de 000c 	ldr.w	r0, [lr, #12]
 801ed98:	4560      	cmp	r0, ip
 801ed9a:	dd48      	ble.n	801ee2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801ed9c:	9803      	ldr	r0, [sp, #12]
 801ed9e:	b22d      	sxth	r5, r5
 801eda0:	fb0c 0505 	mla	r5, ip, r5, r0
 801eda4:	5de8      	ldrb	r0, [r5, r7]
 801eda6:	9d04      	ldr	r5, [sp, #16]
 801eda8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801edac:	f06f 0501 	mvn.w	r5, #1
 801edb0:	fb05 fb08 	mul.w	fp, r5, r8
 801edb4:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801edb8:	f834 500b 	ldrh.w	r5, [r4, fp]
 801edbc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801edc0:	122f      	asrs	r7, r5, #8
 801edc2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801edc6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801edca:	00ed      	lsls	r5, r5, #3
 801edcc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801edd0:	fb17 f706 	smulbb	r7, r7, r6
 801edd4:	b2ed      	uxtb	r5, r5
 801edd6:	fb19 f906 	smulbb	r9, r9, r6
 801edda:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801edde:	10c7      	asrs	r7, r0, #3
 801ede0:	fb15 f506 	smulbb	r5, r5, r6
 801ede4:	00c0      	lsls	r0, r0, #3
 801ede6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801edea:	fa1f fc8c 	uxth.w	ip, ip
 801edee:	b2c0      	uxtb	r0, r0
 801edf0:	fb07 970a 	mla	r7, r7, sl, r9
 801edf4:	fb00 500a 	mla	r0, r0, sl, r5
 801edf8:	f10c 0501 	add.w	r5, ip, #1
 801edfc:	b2bf      	uxth	r7, r7
 801edfe:	b280      	uxth	r0, r0
 801ee00:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ee04:	f107 0901 	add.w	r9, r7, #1
 801ee08:	1c45      	adds	r5, r0, #1
 801ee0a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801ee0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ee12:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ee16:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ee1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ee1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ee22:	ea4c 0c05 	orr.w	ip, ip, r5
 801ee26:	ea4c 0c09 	orr.w	ip, ip, r9
 801ee2a:	f824 c00b 	strh.w	ip, [r4, fp]
 801ee2e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ee30:	f108 38ff 	add.w	r8, r8, #4294967295
 801ee34:	4401      	add	r1, r0
 801ee36:	9814      	ldr	r0, [sp, #80]	; 0x50
 801ee38:	4402      	add	r2, r0
 801ee3a:	e75c      	b.n	801ecf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801ee3c:	b007      	add	sp, #28
 801ee3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ee42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee46:	b085      	sub	sp, #20
 801ee48:	4693      	mov	fp, r2
 801ee4a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ee4e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801ee50:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ee52:	6870      	ldr	r0, [r6, #4]
 801ee54:	9100      	str	r1, [sp, #0]
 801ee56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ee5a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801ee5e:	fb00 2404 	mla	r4, r0, r4, r2
 801ee62:	6832      	ldr	r2, [r6, #0]
 801ee64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ee68:	682a      	ldr	r2, [r5, #0]
 801ee6a:	9201      	str	r2, [sp, #4]
 801ee6c:	686a      	ldr	r2, [r5, #4]
 801ee6e:	3204      	adds	r2, #4
 801ee70:	9202      	str	r2, [sp, #8]
 801ee72:	9a00      	ldr	r2, [sp, #0]
 801ee74:	2a00      	cmp	r2, #0
 801ee76:	dc03      	bgt.n	801ee80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ee78:	f1bb 0f00 	cmp.w	fp, #0
 801ee7c:	f340 80a0 	ble.w	801efc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801ee80:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ee82:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ee86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ee8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ee8c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ee90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ee94:	2b00      	cmp	r3, #0
 801ee96:	dd0c      	ble.n	801eeb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ee98:	1406      	asrs	r6, r0, #16
 801ee9a:	d405      	bmi.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ee9c:	454e      	cmp	r6, r9
 801ee9e:	da03      	bge.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eea0:	1416      	asrs	r6, r2, #16
 801eea2:	d401      	bmi.n	801eea8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801eea4:	4546      	cmp	r6, r8
 801eea6:	db05      	blt.n	801eeb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eea8:	4470      	add	r0, lr
 801eeaa:	4462      	add	r2, ip
 801eeac:	3b01      	subs	r3, #1
 801eeae:	3402      	adds	r4, #2
 801eeb0:	e7f0      	b.n	801ee94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801eeb2:	d00f      	beq.n	801eed4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801eeb4:	1e5e      	subs	r6, r3, #1
 801eeb6:	fb0e 0706 	mla	r7, lr, r6, r0
 801eeba:	143f      	asrs	r7, r7, #16
 801eebc:	d541      	bpl.n	801ef42 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801eebe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801eec2:	4698      	mov	r8, r3
 801eec4:	9603      	str	r6, [sp, #12]
 801eec6:	f1b8 0f00 	cmp.w	r8, #0
 801eeca:	dc59      	bgt.n	801ef80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801eecc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801eed0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801eed4:	9b00      	ldr	r3, [sp, #0]
 801eed6:	2b00      	cmp	r3, #0
 801eed8:	dd72      	ble.n	801efc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801eeda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eede:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801eee0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eee4:	eeb0 6a62 	vmov.f32	s12, s5
 801eee8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eeec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eef0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eef4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801eef8:	eeb0 6a43 	vmov.f32	s12, s6
 801eefc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ef00:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ef04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ef08:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ef0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ef10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ef14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ef18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ef1c:	ee12 2a90 	vmov	r2, s5
 801ef20:	eef0 2a47 	vmov.f32	s5, s14
 801ef24:	fb92 fef3 	sdiv	lr, r2, r3
 801ef28:	ee13 2a10 	vmov	r2, s6
 801ef2c:	eeb0 3a67 	vmov.f32	s6, s15
 801ef30:	fb92 fcf3 	sdiv	ip, r2, r3
 801ef34:	9b00      	ldr	r3, [sp, #0]
 801ef36:	3b01      	subs	r3, #1
 801ef38:	9300      	str	r3, [sp, #0]
 801ef3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ef3c:	bf08      	it	eq
 801ef3e:	465b      	moveq	r3, fp
 801ef40:	e797      	b.n	801ee72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ef42:	454f      	cmp	r7, r9
 801ef44:	dabb      	bge.n	801eebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ef46:	fb0c 2606 	mla	r6, ip, r6, r2
 801ef4a:	1436      	asrs	r6, r6, #16
 801ef4c:	d4b7      	bmi.n	801eebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ef4e:	4546      	cmp	r6, r8
 801ef50:	dab5      	bge.n	801eebe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ef52:	461e      	mov	r6, r3
 801ef54:	46a0      	mov	r8, r4
 801ef56:	2e00      	cmp	r6, #0
 801ef58:	ddb8      	ble.n	801eecc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ef5a:	1417      	asrs	r7, r2, #16
 801ef5c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801ef60:	9901      	ldr	r1, [sp, #4]
 801ef62:	ea4f 4920 	mov.w	r9, r0, asr #16
 801ef66:	4462      	add	r2, ip
 801ef68:	4470      	add	r0, lr
 801ef6a:	fb0a 1707 	mla	r7, sl, r7, r1
 801ef6e:	9902      	ldr	r1, [sp, #8]
 801ef70:	3e01      	subs	r6, #1
 801ef72:	f817 7009 	ldrb.w	r7, [r7, r9]
 801ef76:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801ef7a:	f828 7b02 	strh.w	r7, [r8], #2
 801ef7e:	e7ea      	b.n	801ef56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801ef80:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ef84:	d417      	bmi.n	801efb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ef86:	68ae      	ldr	r6, [r5, #8]
 801ef88:	454e      	cmp	r6, r9
 801ef8a:	dd14      	ble.n	801efb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ef8c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801ef90:	d411      	bmi.n	801efb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ef92:	68ef      	ldr	r7, [r5, #12]
 801ef94:	4557      	cmp	r7, sl
 801ef96:	dd0e      	ble.n	801efb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801ef98:	9f01      	ldr	r7, [sp, #4]
 801ef9a:	b236      	sxth	r6, r6
 801ef9c:	f06f 0101 	mvn.w	r1, #1
 801efa0:	fb0a 7606 	mla	r6, sl, r6, r7
 801efa4:	9f02      	ldr	r7, [sp, #8]
 801efa6:	f816 6009 	ldrb.w	r6, [r6, r9]
 801efaa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801efae:	fb01 f608 	mul.w	r6, r1, r8
 801efb2:	9903      	ldr	r1, [sp, #12]
 801efb4:	538f      	strh	r7, [r1, r6]
 801efb6:	4470      	add	r0, lr
 801efb8:	4462      	add	r2, ip
 801efba:	f108 38ff 	add.w	r8, r8, #4294967295
 801efbe:	e782      	b.n	801eec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801efc0:	b005      	add	sp, #20
 801efc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801efc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801efca:	b087      	sub	sp, #28
 801efcc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801efce:	9205      	str	r2, [sp, #20]
 801efd0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801efd4:	9102      	str	r1, [sp, #8]
 801efd6:	9203      	str	r2, [sp, #12]
 801efd8:	6861      	ldr	r1, [r4, #4]
 801efda:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801efde:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801efe2:	fb01 2000 	mla	r0, r1, r0, r2
 801efe6:	6822      	ldr	r2, [r4, #0]
 801efe8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801efec:	9200      	str	r2, [sp, #0]
 801efee:	f8dc 2000 	ldr.w	r2, [ip]
 801eff2:	9204      	str	r2, [sp, #16]
 801eff4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801eff8:	3204      	adds	r2, #4
 801effa:	9201      	str	r2, [sp, #4]
 801effc:	9a03      	ldr	r2, [sp, #12]
 801effe:	43d5      	mvns	r5, r2
 801f000:	b2ed      	uxtb	r5, r5
 801f002:	9a02      	ldr	r2, [sp, #8]
 801f004:	2a00      	cmp	r2, #0
 801f006:	dc03      	bgt.n	801f010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f008:	9a05      	ldr	r2, [sp, #20]
 801f00a:	2a00      	cmp	r2, #0
 801f00c:	f340 812c 	ble.w	801f268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f010:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f012:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801f016:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801f01a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f01c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801f020:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801f024:	2b00      	cmp	r3, #0
 801f026:	dd10      	ble.n	801f04a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f028:	140c      	asrs	r4, r1, #16
 801f02a:	d405      	bmi.n	801f038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f02c:	4574      	cmp	r4, lr
 801f02e:	da03      	bge.n	801f038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f030:	1414      	asrs	r4, r2, #16
 801f032:	d401      	bmi.n	801f038 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f034:	42bc      	cmp	r4, r7
 801f036:	db09      	blt.n	801f04c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f038:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801f03a:	3b01      	subs	r3, #1
 801f03c:	9800      	ldr	r0, [sp, #0]
 801f03e:	4421      	add	r1, r4
 801f040:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801f042:	3002      	adds	r0, #2
 801f044:	4422      	add	r2, r4
 801f046:	9000      	str	r0, [sp, #0]
 801f048:	e7ec      	b.n	801f024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801f04a:	d071      	beq.n	801f130 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801f04c:	1e5c      	subs	r4, r3, #1
 801f04e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f050:	fb06 1604 	mla	r6, r6, r4, r1
 801f054:	1436      	asrs	r6, r6, #16
 801f056:	d45d      	bmi.n	801f114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f058:	4576      	cmp	r6, lr
 801f05a:	da5b      	bge.n	801f114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f05c:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801f05e:	fb06 2404 	mla	r4, r6, r4, r2
 801f062:	1424      	asrs	r4, r4, #16
 801f064:	d456      	bmi.n	801f114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f066:	42bc      	cmp	r4, r7
 801f068:	da54      	bge.n	801f114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801f06a:	4698      	mov	r8, r3
 801f06c:	f8dd 9000 	ldr.w	r9, [sp]
 801f070:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801f074:	f1b8 0f00 	cmp.w	r8, #0
 801f078:	dd54      	ble.n	801f124 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801f07a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f07e:	1414      	asrs	r4, r2, #16
 801f080:	9804      	ldr	r0, [sp, #16]
 801f082:	140e      	asrs	r6, r1, #16
 801f084:	f108 38ff 	add.w	r8, r8, #4294967295
 801f088:	fb07 0404 	mla	r4, r7, r4, r0
 801f08c:	9801      	ldr	r0, [sp, #4]
 801f08e:	f814 e006 	ldrb.w	lr, [r4, r6]
 801f092:	f8b9 4000 	ldrh.w	r4, [r9]
 801f096:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f09a:	1227      	asrs	r7, r4, #8
 801f09c:	eb00 0b0e 	add.w	fp, r0, lr
 801f0a0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801f0a4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f0a8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f0aa:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f0ae:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f0b2:	4401      	add	r1, r0
 801f0b4:	fb16 f60a 	smulbb	r6, r6, sl
 801f0b8:	9814      	ldr	r0, [sp, #80]	; 0x50
 801f0ba:	fb1b fb0a 	smulbb	fp, fp, sl
 801f0be:	fb07 6705 	mla	r7, r7, r5, r6
 801f0c2:	10e6      	asrs	r6, r4, #3
 801f0c4:	00e4      	lsls	r4, r4, #3
 801f0c6:	4402      	add	r2, r0
 801f0c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f0cc:	b2bf      	uxth	r7, r7
 801f0ce:	b2e4      	uxtb	r4, r4
 801f0d0:	fb06 b605 	mla	r6, r6, r5, fp
 801f0d4:	fb14 f405 	smulbb	r4, r4, r5
 801f0d8:	b2b6      	uxth	r6, r6
 801f0da:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801f0de:	1c7c      	adds	r4, r7, #1
 801f0e0:	f106 0b01 	add.w	fp, r6, #1
 801f0e4:	fa1f fe8e 	uxth.w	lr, lr
 801f0e8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f0ec:	f10e 0401 	add.w	r4, lr, #1
 801f0f0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f0f4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f0f8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801f0fc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f100:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f104:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f108:	4327      	orrs	r7, r4
 801f10a:	ea47 070b 	orr.w	r7, r7, fp
 801f10e:	f829 7b02 	strh.w	r7, [r9], #2
 801f112:	e7af      	b.n	801f074 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801f114:	f04f 0e00 	mov.w	lr, #0
 801f118:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801f11c:	eb03 040e 	add.w	r4, r3, lr
 801f120:	2c00      	cmp	r4, #0
 801f122:	dc43      	bgt.n	801f1ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f124:	9a00      	ldr	r2, [sp, #0]
 801f126:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f12a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f12e:	9300      	str	r3, [sp, #0]
 801f130:	9b02      	ldr	r3, [sp, #8]
 801f132:	2b00      	cmp	r3, #0
 801f134:	f340 8098 	ble.w	801f268 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801f138:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f13c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f13e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f142:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f146:	eef0 6a62 	vmov.f32	s13, s5
 801f14a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f14e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f152:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f156:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801f15a:	eef0 6a43 	vmov.f32	s13, s6
 801f15e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f162:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801f166:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f16a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f16e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f172:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f176:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f17a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f17e:	ee12 2a90 	vmov	r2, s5
 801f182:	eef0 2a47 	vmov.f32	s5, s14
 801f186:	fb92 f3f3 	sdiv	r3, r2, r3
 801f18a:	ee13 2a10 	vmov	r2, s6
 801f18e:	9313      	str	r3, [sp, #76]	; 0x4c
 801f190:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f192:	eeb0 3a67 	vmov.f32	s6, s15
 801f196:	fb92 f3f3 	sdiv	r3, r2, r3
 801f19a:	9314      	str	r3, [sp, #80]	; 0x50
 801f19c:	9b02      	ldr	r3, [sp, #8]
 801f19e:	9a05      	ldr	r2, [sp, #20]
 801f1a0:	3b01      	subs	r3, #1
 801f1a2:	9302      	str	r3, [sp, #8]
 801f1a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f1a6:	bf08      	it	eq
 801f1a8:	4613      	moveq	r3, r2
 801f1aa:	e72a      	b.n	801f002 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f1ac:	140f      	asrs	r7, r1, #16
 801f1ae:	d454      	bmi.n	801f25a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f1b0:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801f1b4:	42be      	cmp	r6, r7
 801f1b6:	dd50      	ble.n	801f25a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f1b8:	ea5f 4822 	movs.w	r8, r2, asr #16
 801f1bc:	d44d      	bmi.n	801f25a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f1be:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801f1c2:	4544      	cmp	r4, r8
 801f1c4:	dd49      	ble.n	801f25a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801f1c6:	9c04      	ldr	r4, [sp, #16]
 801f1c8:	b236      	sxth	r6, r6
 801f1ca:	f06f 0001 	mvn.w	r0, #1
 801f1ce:	fb08 4606 	mla	r6, r8, r6, r4
 801f1d2:	9c01      	ldr	r4, [sp, #4]
 801f1d4:	fb00 fa0e 	mul.w	sl, r0, lr
 801f1d8:	9800      	ldr	r0, [sp, #0]
 801f1da:	f816 8007 	ldrb.w	r8, [r6, r7]
 801f1de:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f1e2:	eb04 0b08 	add.w	fp, r4, r8
 801f1e6:	f830 400a 	ldrh.w	r4, [r0, sl]
 801f1ea:	9801      	ldr	r0, [sp, #4]
 801f1ec:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801f1f0:	1227      	asrs	r7, r4, #8
 801f1f2:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f1f6:	fb16 f609 	smulbb	r6, r6, r9
 801f1fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f1fe:	f810 8008 	ldrb.w	r8, [r0, r8]
 801f202:	fb1b fb09 	smulbb	fp, fp, r9
 801f206:	fb07 6705 	mla	r7, r7, r5, r6
 801f20a:	10e6      	asrs	r6, r4, #3
 801f20c:	00e4      	lsls	r4, r4, #3
 801f20e:	9800      	ldr	r0, [sp, #0]
 801f210:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f214:	b2bf      	uxth	r7, r7
 801f216:	b2e4      	uxtb	r4, r4
 801f218:	fb06 b605 	mla	r6, r6, r5, fp
 801f21c:	fb14 f405 	smulbb	r4, r4, r5
 801f220:	b2b6      	uxth	r6, r6
 801f222:	fb08 4809 	mla	r8, r8, r9, r4
 801f226:	1c7c      	adds	r4, r7, #1
 801f228:	f106 0b01 	add.w	fp, r6, #1
 801f22c:	fa1f f888 	uxth.w	r8, r8
 801f230:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801f234:	f108 0401 	add.w	r4, r8, #1
 801f238:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801f23c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f240:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801f244:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801f248:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801f24c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f250:	4327      	orrs	r7, r4
 801f252:	ea47 070b 	orr.w	r7, r7, fp
 801f256:	f820 700a 	strh.w	r7, [r0, sl]
 801f25a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f25c:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f260:	4401      	add	r1, r0
 801f262:	9814      	ldr	r0, [sp, #80]	; 0x50
 801f264:	4402      	add	r2, r0
 801f266:	e759      	b.n	801f11c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801f268:	b007      	add	sp, #28
 801f26a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801f270 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f274:	b085      	sub	sp, #20
 801f276:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f27a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801f27c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f27e:	9203      	str	r2, [sp, #12]
 801f280:	6870      	ldr	r0, [r6, #4]
 801f282:	686f      	ldr	r7, [r5, #4]
 801f284:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801f288:	3704      	adds	r7, #4
 801f28a:	9101      	str	r1, [sp, #4]
 801f28c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801f290:	fb00 2404 	mla	r4, r0, r4, r2
 801f294:	6832      	ldr	r2, [r6, #0]
 801f296:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f29a:	682a      	ldr	r2, [r5, #0]
 801f29c:	9202      	str	r2, [sp, #8]
 801f29e:	9a01      	ldr	r2, [sp, #4]
 801f2a0:	2a00      	cmp	r2, #0
 801f2a2:	dc03      	bgt.n	801f2ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f2a4:	9a03      	ldr	r2, [sp, #12]
 801f2a6:	2a00      	cmp	r2, #0
 801f2a8:	f340 80cc 	ble.w	801f444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f2ae:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f2b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801f2b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f2b8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801f2bc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801f2c0:	2b00      	cmp	r3, #0
 801f2c2:	dd0d      	ble.n	801f2e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f2c4:	1406      	asrs	r6, r0, #16
 801f2c6:	d405      	bmi.n	801f2d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f2c8:	454e      	cmp	r6, r9
 801f2ca:	da03      	bge.n	801f2d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f2cc:	1416      	asrs	r6, r2, #16
 801f2ce:	d401      	bmi.n	801f2d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801f2d0:	4546      	cmp	r6, r8
 801f2d2:	db06      	blt.n	801f2e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f2d4:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801f2d6:	4460      	add	r0, ip
 801f2d8:	3b01      	subs	r3, #1
 801f2da:	3402      	adds	r4, #2
 801f2dc:	4432      	add	r2, r6
 801f2de:	e7ef      	b.n	801f2c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801f2e0:	d00f      	beq.n	801f302 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f2e2:	1e5e      	subs	r6, r3, #1
 801f2e4:	fb0c 0e06 	mla	lr, ip, r6, r0
 801f2e8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801f2ec:	d543      	bpl.n	801f376 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801f2ee:	4698      	mov	r8, r3
 801f2f0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801f2f4:	f1b8 0f00 	cmp.w	r8, #0
 801f2f8:	dc71      	bgt.n	801f3de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801f2fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f2fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f302:	9b01      	ldr	r3, [sp, #4]
 801f304:	2b00      	cmp	r3, #0
 801f306:	f340 809d 	ble.w	801f444 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f30a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f30e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f310:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f314:	eeb0 6a62 	vmov.f32	s12, s5
 801f318:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f31c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f320:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f324:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801f328:	eeb0 6a43 	vmov.f32	s12, s6
 801f32c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f330:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801f334:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f338:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f33c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f340:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f344:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f348:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f34c:	ee12 2a90 	vmov	r2, s5
 801f350:	eef0 2a47 	vmov.f32	s5, s14
 801f354:	fb92 fcf3 	sdiv	ip, r2, r3
 801f358:	ee13 2a10 	vmov	r2, s6
 801f35c:	eeb0 3a67 	vmov.f32	s6, s15
 801f360:	fb92 f3f3 	sdiv	r3, r2, r3
 801f364:	9312      	str	r3, [sp, #72]	; 0x48
 801f366:	9b01      	ldr	r3, [sp, #4]
 801f368:	9a03      	ldr	r2, [sp, #12]
 801f36a:	3b01      	subs	r3, #1
 801f36c:	9301      	str	r3, [sp, #4]
 801f36e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f370:	bf08      	it	eq
 801f372:	4613      	moveq	r3, r2
 801f374:	e793      	b.n	801f29e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801f376:	45ce      	cmp	lr, r9
 801f378:	dab9      	bge.n	801f2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f37a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f37c:	fb01 2606 	mla	r6, r1, r6, r2
 801f380:	1436      	asrs	r6, r6, #16
 801f382:	d4b4      	bmi.n	801f2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f384:	4546      	cmp	r6, r8
 801f386:	dab2      	bge.n	801f2ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f388:	4698      	mov	r8, r3
 801f38a:	46a2      	mov	sl, r4
 801f38c:	f1b8 0f00 	cmp.w	r8, #0
 801f390:	ddb3      	ble.n	801f2fa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801f392:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801f396:	1416      	asrs	r6, r2, #16
 801f398:	9902      	ldr	r1, [sp, #8]
 801f39a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801f39e:	f108 38ff 	add.w	r8, r8, #4294967295
 801f3a2:	4460      	add	r0, ip
 801f3a4:	fb09 1606 	mla	r6, r9, r6, r1
 801f3a8:	4928      	ldr	r1, [pc, #160]	; (801f44c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801f3aa:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801f3ae:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f3b2:	eb07 0b0e 	add.w	fp, r7, lr
 801f3b6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801f3ba:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801f3be:	00f6      	lsls	r6, r6, #3
 801f3c0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801f3c4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f3c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f3ca:	440a      	add	r2, r1
 801f3cc:	ea49 0606 	orr.w	r6, r9, r6
 801f3d0:	f817 900e 	ldrb.w	r9, [r7, lr]
 801f3d4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801f3d8:	f82a 6b02 	strh.w	r6, [sl], #2
 801f3dc:	e7d6      	b.n	801f38c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f3de:	ea5f 4920 	movs.w	r9, r0, asr #16
 801f3e2:	d429      	bmi.n	801f438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f3e4:	68ae      	ldr	r6, [r5, #8]
 801f3e6:	454e      	cmp	r6, r9
 801f3e8:	dd26      	ble.n	801f438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f3ea:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801f3ee:	d423      	bmi.n	801f438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f3f0:	68e9      	ldr	r1, [r5, #12]
 801f3f2:	4559      	cmp	r1, fp
 801f3f4:	dd20      	ble.n	801f438 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f3f6:	fa0f fe86 	sxth.w	lr, r6
 801f3fa:	9902      	ldr	r1, [sp, #8]
 801f3fc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801f400:	f06f 0101 	mvn.w	r1, #1
 801f404:	f81e e009 	ldrb.w	lr, [lr, r9]
 801f408:	fb01 f908 	mul.w	r9, r1, r8
 801f40c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801f410:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801f414:	eb07 060e 	add.w	r6, r7, lr
 801f418:	f896 b002 	ldrb.w	fp, [r6, #2]
 801f41c:	7876      	ldrb	r6, [r6, #1]
 801f41e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801f422:	00f6      	lsls	r6, r6, #3
 801f424:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f428:	ea4b 0606 	orr.w	r6, fp, r6
 801f42c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801f430:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801f434:	f82a 6009 	strh.w	r6, [sl, r9]
 801f438:	9912      	ldr	r1, [sp, #72]	; 0x48
 801f43a:	4460      	add	r0, ip
 801f43c:	f108 38ff 	add.w	r8, r8, #4294967295
 801f440:	440a      	add	r2, r1
 801f442:	e757      	b.n	801f2f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801f444:	b005      	add	sp, #20
 801f446:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f44a:	bf00      	nop
 801f44c:	fffff800 	.word	0xfffff800

0801f450 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f454:	b087      	sub	sp, #28
 801f456:	468b      	mov	fp, r1
 801f458:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f45c:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f45e:	9204      	str	r2, [sp, #16]
 801f460:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801f464:	6841      	ldr	r1, [r0, #4]
 801f466:	9205      	str	r2, [sp, #20]
 801f468:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801f46c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801f470:	fb01 2404 	mla	r4, r1, r4, r2
 801f474:	6802      	ldr	r2, [r0, #0]
 801f476:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f47a:	f8dc 2000 	ldr.w	r2, [ip]
 801f47e:	9201      	str	r2, [sp, #4]
 801f480:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801f484:	3204      	adds	r2, #4
 801f486:	9202      	str	r2, [sp, #8]
 801f488:	f1bb 0f00 	cmp.w	fp, #0
 801f48c:	dc03      	bgt.n	801f496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f48e:	9a04      	ldr	r2, [sp, #16]
 801f490:	2a00      	cmp	r2, #0
 801f492:	f340 8138 	ble.w	801f706 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f496:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f498:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801f49c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801f4a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f4a2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801f4a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801f4aa:	2b00      	cmp	r3, #0
 801f4ac:	dd0e      	ble.n	801f4cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4ae:	1402      	asrs	r2, r0, #16
 801f4b0:	d405      	bmi.n	801f4be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4b2:	42ba      	cmp	r2, r7
 801f4b4:	da03      	bge.n	801f4be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4b6:	140a      	asrs	r2, r1, #16
 801f4b8:	d401      	bmi.n	801f4be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f4ba:	42b2      	cmp	r2, r6
 801f4bc:	db07      	blt.n	801f4ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801f4be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f4c0:	3b01      	subs	r3, #1
 801f4c2:	3402      	adds	r4, #2
 801f4c4:	4410      	add	r0, r2
 801f4c6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f4c8:	4411      	add	r1, r2
 801f4ca:	e7ee      	b.n	801f4aa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801f4cc:	d019      	beq.n	801f502 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801f4ce:	1e5a      	subs	r2, r3, #1
 801f4d0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f4d2:	fb05 0502 	mla	r5, r5, r2, r0
 801f4d6:	142d      	asrs	r5, r5, #16
 801f4d8:	d409      	bmi.n	801f4ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f4da:	42bd      	cmp	r5, r7
 801f4dc:	da07      	bge.n	801f4ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f4de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f4e0:	fb05 1202 	mla	r2, r5, r2, r1
 801f4e4:	1412      	asrs	r2, r2, #16
 801f4e6:	d402      	bmi.n	801f4ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801f4e8:	42b2      	cmp	r2, r6
 801f4ea:	f2c0 80ac 	blt.w	801f646 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801f4ee:	f04f 0e00 	mov.w	lr, #0
 801f4f2:	eb03 020e 	add.w	r2, r3, lr
 801f4f6:	2a00      	cmp	r2, #0
 801f4f8:	dc3e      	bgt.n	801f578 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801f4fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f4fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f502:	f1bb 0f00 	cmp.w	fp, #0
 801f506:	f340 80fe 	ble.w	801f706 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f50a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f50e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f510:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f514:	f1bb 0b01 	subs.w	fp, fp, #1
 801f518:	eeb0 6a62 	vmov.f32	s12, s5
 801f51c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f520:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f524:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f528:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801f52c:	eeb0 6a43 	vmov.f32	s12, s6
 801f530:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f534:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801f538:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f53c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f540:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f544:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f548:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f54c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f550:	ee12 2a90 	vmov	r2, s5
 801f554:	eef0 2a47 	vmov.f32	s5, s14
 801f558:	fb92 f3f3 	sdiv	r3, r2, r3
 801f55c:	ee13 2a10 	vmov	r2, s6
 801f560:	9313      	str	r3, [sp, #76]	; 0x4c
 801f562:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f564:	eeb0 3a67 	vmov.f32	s6, s15
 801f568:	fb92 f3f3 	sdiv	r3, r2, r3
 801f56c:	9a04      	ldr	r2, [sp, #16]
 801f56e:	9314      	str	r3, [sp, #80]	; 0x50
 801f570:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f572:	bf08      	it	eq
 801f574:	4613      	moveq	r3, r2
 801f576:	e787      	b.n	801f488 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f578:	1406      	asrs	r6, r0, #16
 801f57a:	d45d      	bmi.n	801f638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f57c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801f580:	42b5      	cmp	r5, r6
 801f582:	dd59      	ble.n	801f638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f584:	140f      	asrs	r7, r1, #16
 801f586:	d457      	bmi.n	801f638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f588:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801f58c:	42ba      	cmp	r2, r7
 801f58e:	dd53      	ble.n	801f638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f590:	9a01      	ldr	r2, [sp, #4]
 801f592:	b22d      	sxth	r5, r5
 801f594:	fb07 2505 	mla	r5, r7, r5, r2
 801f598:	5daa      	ldrb	r2, [r5, r6]
 801f59a:	9d02      	ldr	r5, [sp, #8]
 801f59c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f5a0:	0e2e      	lsrs	r6, r5, #24
 801f5a2:	d049      	beq.n	801f638 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f5a4:	f06f 0201 	mvn.w	r2, #1
 801f5a8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f5ac:	fb02 f20e 	mul.w	r2, r2, lr
 801f5b0:	f834 8002 	ldrh.w	r8, [r4, r2]
 801f5b4:	9203      	str	r2, [sp, #12]
 801f5b6:	9a05      	ldr	r2, [sp, #20]
 801f5b8:	ea4f 2728 	mov.w	r7, r8, asr #8
 801f5bc:	4356      	muls	r6, r2
 801f5be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f5c2:	1c72      	adds	r2, r6, #1
 801f5c4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f5c8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f5cc:	b2ed      	uxtb	r5, r5
 801f5ce:	1212      	asrs	r2, r2, #8
 801f5d0:	fa1f f982 	uxth.w	r9, r2
 801f5d4:	43d2      	mvns	r2, r2
 801f5d6:	fb16 f609 	smulbb	r6, r6, r9
 801f5da:	b2d2      	uxtb	r2, r2
 801f5dc:	fb15 f509 	smulbb	r5, r5, r9
 801f5e0:	fb07 6702 	mla	r7, r7, r2, r6
 801f5e4:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801f5e8:	fb1a fa09 	smulbb	sl, sl, r9
 801f5ec:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f5f0:	b2bf      	uxth	r7, r7
 801f5f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f5f6:	fa5f f888 	uxtb.w	r8, r8
 801f5fa:	fb06 a602 	mla	r6, r6, r2, sl
 801f5fe:	fb08 5502 	mla	r5, r8, r2, r5
 801f602:	1c7a      	adds	r2, r7, #1
 801f604:	b2b6      	uxth	r6, r6
 801f606:	b2ad      	uxth	r5, r5
 801f608:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f60c:	9a03      	ldr	r2, [sp, #12]
 801f60e:	f105 0a01 	add.w	sl, r5, #1
 801f612:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f616:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f61a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f61e:	ea47 070a 	orr.w	r7, r7, sl
 801f622:	f106 0a01 	add.w	sl, r6, #1
 801f626:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f62a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f62e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f632:	ea47 070a 	orr.w	r7, r7, sl
 801f636:	52a7      	strh	r7, [r4, r2]
 801f638:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f63a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801f63e:	4410      	add	r0, r2
 801f640:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f642:	4411      	add	r1, r2
 801f644:	e755      	b.n	801f4f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801f646:	f04f 0800 	mov.w	r8, #0
 801f64a:	eba3 0208 	sub.w	r2, r3, r8
 801f64e:	2a00      	cmp	r2, #0
 801f650:	f77f af53 	ble.w	801f4fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801f654:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801f658:	140a      	asrs	r2, r1, #16
 801f65a:	9f01      	ldr	r7, [sp, #4]
 801f65c:	1405      	asrs	r5, r0, #16
 801f65e:	fb06 7202 	mla	r2, r6, r2, r7
 801f662:	5d52      	ldrb	r2, [r2, r5]
 801f664:	9d02      	ldr	r5, [sp, #8]
 801f666:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801f66a:	0e2e      	lsrs	r6, r5, #24
 801f66c:	d044      	beq.n	801f6f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f66e:	9a05      	ldr	r2, [sp, #20]
 801f670:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801f674:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801f678:	4356      	muls	r6, r2
 801f67a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801f67e:	1c72      	adds	r2, r6, #1
 801f680:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f684:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801f688:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801f68c:	b2ed      	uxtb	r5, r5
 801f68e:	1212      	asrs	r2, r2, #8
 801f690:	fa1f f982 	uxth.w	r9, r2
 801f694:	43d2      	mvns	r2, r2
 801f696:	fb16 f609 	smulbb	r6, r6, r9
 801f69a:	b2d2      	uxtb	r2, r2
 801f69c:	fb15 f509 	smulbb	r5, r5, r9
 801f6a0:	fb07 6702 	mla	r7, r7, r2, r6
 801f6a4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f6a8:	fb1a fa09 	smulbb	sl, sl, r9
 801f6ac:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f6b0:	b2bf      	uxth	r7, r7
 801f6b2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f6b6:	fa5f fe8e 	uxtb.w	lr, lr
 801f6ba:	fb06 a602 	mla	r6, r6, r2, sl
 801f6be:	fb0e 5502 	mla	r5, lr, r2, r5
 801f6c2:	1c7a      	adds	r2, r7, #1
 801f6c4:	b2b6      	uxth	r6, r6
 801f6c6:	b2ad      	uxth	r5, r5
 801f6c8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801f6cc:	f105 0a01 	add.w	sl, r5, #1
 801f6d0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f6d4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801f6d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f6dc:	ea47 070a 	orr.w	r7, r7, sl
 801f6e0:	f106 0a01 	add.w	sl, r6, #1
 801f6e4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f6e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f6ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f6f0:	ea47 070a 	orr.w	r7, r7, sl
 801f6f4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f6f8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f6fa:	f108 0801 	add.w	r8, r8, #1
 801f6fe:	4410      	add	r0, r2
 801f700:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f702:	4411      	add	r1, r2
 801f704:	e7a1      	b.n	801f64a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801f706:	b007      	add	sp, #28
 801f708:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f70c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f70c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f710:	b085      	sub	sp, #20
 801f712:	468b      	mov	fp, r1
 801f714:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f718:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f71a:	9203      	str	r2, [sp, #12]
 801f71c:	6841      	ldr	r1, [r0, #4]
 801f71e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801f722:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801f726:	fb01 2404 	mla	r4, r1, r4, r2
 801f72a:	6802      	ldr	r2, [r0, #0]
 801f72c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801f730:	f8de 2000 	ldr.w	r2, [lr]
 801f734:	9200      	str	r2, [sp, #0]
 801f736:	f8de 2004 	ldr.w	r2, [lr, #4]
 801f73a:	3204      	adds	r2, #4
 801f73c:	9201      	str	r2, [sp, #4]
 801f73e:	f1bb 0f00 	cmp.w	fp, #0
 801f742:	dc03      	bgt.n	801f74c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f744:	9a03      	ldr	r2, [sp, #12]
 801f746:	2a00      	cmp	r2, #0
 801f748:	f340 8153 	ble.w	801f9f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f74c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f74e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801f752:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801f756:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801f758:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801f75c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801f760:	2b00      	cmp	r3, #0
 801f762:	dd0e      	ble.n	801f782 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801f764:	1408      	asrs	r0, r1, #16
 801f766:	d405      	bmi.n	801f774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f768:	42b8      	cmp	r0, r7
 801f76a:	da03      	bge.n	801f774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f76c:	1410      	asrs	r0, r2, #16
 801f76e:	d401      	bmi.n	801f774 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f770:	42b0      	cmp	r0, r6
 801f772:	db07      	blt.n	801f784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f774:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f776:	3b01      	subs	r3, #1
 801f778:	3402      	adds	r4, #2
 801f77a:	4401      	add	r1, r0
 801f77c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801f77e:	4402      	add	r2, r0
 801f780:	e7ee      	b.n	801f760 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801f782:	d017      	beq.n	801f7b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801f784:	1e58      	subs	r0, r3, #1
 801f786:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f788:	fb05 1500 	mla	r5, r5, r0, r1
 801f78c:	142d      	asrs	r5, r5, #16
 801f78e:	d409      	bmi.n	801f7a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f790:	42bd      	cmp	r5, r7
 801f792:	da07      	bge.n	801f7a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f794:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f796:	fb05 2000 	mla	r0, r5, r0, r2
 801f79a:	1400      	asrs	r0, r0, #16
 801f79c:	d402      	bmi.n	801f7a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801f79e:	42b0      	cmp	r0, r6
 801f7a0:	f2c0 80bc 	blt.w	801f91c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801f7a4:	2600      	movs	r6, #0
 801f7a6:	1998      	adds	r0, r3, r6
 801f7a8:	2800      	cmp	r0, #0
 801f7aa:	dc3e      	bgt.n	801f82a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801f7ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f7b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801f7b4:	f1bb 0f00 	cmp.w	fp, #0
 801f7b8:	f340 811b 	ble.w	801f9f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801f7bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f7c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f7c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f7c6:	f1bb 0b01 	subs.w	fp, fp, #1
 801f7ca:	eeb0 6a62 	vmov.f32	s12, s5
 801f7ce:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f7d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f7d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f7da:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801f7de:	eeb0 6a43 	vmov.f32	s12, s6
 801f7e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f7e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801f7ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f7ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f7f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f7f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f7fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f7fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f802:	ee12 2a90 	vmov	r2, s5
 801f806:	eef0 2a47 	vmov.f32	s5, s14
 801f80a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f80e:	ee13 2a10 	vmov	r2, s6
 801f812:	9311      	str	r3, [sp, #68]	; 0x44
 801f814:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f816:	eeb0 3a67 	vmov.f32	s6, s15
 801f81a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f81e:	9a03      	ldr	r2, [sp, #12]
 801f820:	9312      	str	r3, [sp, #72]	; 0x48
 801f822:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f824:	bf08      	it	eq
 801f826:	4613      	moveq	r3, r2
 801f828:	e789      	b.n	801f73e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f82a:	140f      	asrs	r7, r1, #16
 801f82c:	d45e      	bmi.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f82e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801f832:	42bd      	cmp	r5, r7
 801f834:	dd5a      	ble.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f836:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801f83a:	d457      	bmi.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f83c:	f8de 000c 	ldr.w	r0, [lr, #12]
 801f840:	4560      	cmp	r0, ip
 801f842:	dd53      	ble.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f844:	9800      	ldr	r0, [sp, #0]
 801f846:	b22d      	sxth	r5, r5
 801f848:	fb0c 0505 	mla	r5, ip, r5, r0
 801f84c:	5de8      	ldrb	r0, [r5, r7]
 801f84e:	9d01      	ldr	r5, [sp, #4]
 801f850:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801f854:	0e07      	lsrs	r7, r0, #24
 801f856:	2fff      	cmp	r7, #255	; 0xff
 801f858:	d04e      	beq.n	801f8f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801f85a:	b2fd      	uxtb	r5, r7
 801f85c:	2f00      	cmp	r7, #0
 801f85e:	d045      	beq.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f860:	f06f 0701 	mvn.w	r7, #1
 801f864:	fa1f f985 	uxth.w	r9, r5
 801f868:	43ed      	mvns	r5, r5
 801f86a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801f86e:	4377      	muls	r7, r6
 801f870:	fb1a fa09 	smulbb	sl, sl, r9
 801f874:	b2ed      	uxtb	r5, r5
 801f876:	f834 8007 	ldrh.w	r8, [r4, r7]
 801f87a:	9702      	str	r7, [sp, #8]
 801f87c:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801f880:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801f884:	fb17 f709 	smulbb	r7, r7, r9
 801f888:	b2c0      	uxtb	r0, r0
 801f88a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f88e:	fb10 f009 	smulbb	r0, r0, r9
 801f892:	fb0c 7c05 	mla	ip, ip, r5, r7
 801f896:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801f89a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801f89e:	fa1f fc8c 	uxth.w	ip, ip
 801f8a2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f8a6:	fa5f f888 	uxtb.w	r8, r8
 801f8aa:	fb07 a705 	mla	r7, r7, r5, sl
 801f8ae:	fb08 0005 	mla	r0, r8, r5, r0
 801f8b2:	f10c 0501 	add.w	r5, ip, #1
 801f8b6:	b2bf      	uxth	r7, r7
 801f8b8:	b280      	uxth	r0, r0
 801f8ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801f8be:	f100 0a01 	add.w	sl, r0, #1
 801f8c2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801f8c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801f8ca:	9802      	ldr	r0, [sp, #8]
 801f8cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f8d0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f8d4:	f107 0a01 	add.w	sl, r7, #1
 801f8d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801f8dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f8e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f8e4:	ea4c 0c0a 	orr.w	ip, ip, sl
 801f8e8:	f824 c000 	strh.w	ip, [r4, r0]
 801f8ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f8ee:	3e01      	subs	r6, #1
 801f8f0:	4401      	add	r1, r0
 801f8f2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801f8f4:	4402      	add	r2, r0
 801f8f6:	e756      	b.n	801f7a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f8f8:	f06f 0501 	mvn.w	r5, #1
 801f8fc:	fb05 f706 	mul.w	r7, r5, r6
 801f900:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801f904:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801f908:	0945      	lsrs	r5, r0, #5
 801f90a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f90e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f912:	ea4c 0505 	orr.w	r5, ip, r5
 801f916:	4305      	orrs	r5, r0
 801f918:	53e5      	strh	r5, [r4, r7]
 801f91a:	e7e7      	b.n	801f8ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f91c:	f04f 0800 	mov.w	r8, #0
 801f920:	eba3 0008 	sub.w	r0, r3, r8
 801f924:	2800      	cmp	r0, #0
 801f926:	f77f af41 	ble.w	801f7ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801f92a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801f92e:	1410      	asrs	r0, r2, #16
 801f930:	9f00      	ldr	r7, [sp, #0]
 801f932:	140d      	asrs	r5, r1, #16
 801f934:	fb06 7000 	mla	r0, r6, r0, r7
 801f938:	5d40      	ldrb	r0, [r0, r5]
 801f93a:	9d01      	ldr	r5, [sp, #4]
 801f93c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801f940:	0e06      	lsrs	r6, r0, #24
 801f942:	2eff      	cmp	r6, #255	; 0xff
 801f944:	d048      	beq.n	801f9d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 801f946:	b2f5      	uxtb	r5, r6
 801f948:	2e00      	cmp	r6, #0
 801f94a:	d03e      	beq.n	801f9ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801f94c:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801f950:	fa1f f985 	uxth.w	r9, r5
 801f954:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801f958:	43ed      	mvns	r5, r5
 801f95a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f95e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801f962:	fb16 f609 	smulbb	r6, r6, r9
 801f966:	b2ed      	uxtb	r5, r5
 801f968:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f96c:	b2c0      	uxtb	r0, r0
 801f96e:	fb1a fa09 	smulbb	sl, sl, r9
 801f972:	fb07 6705 	mla	r7, r7, r5, r6
 801f976:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801f97a:	fb10 f009 	smulbb	r0, r0, r9
 801f97e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f982:	b2bf      	uxth	r7, r7
 801f984:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f988:	fa5f fc8c 	uxtb.w	ip, ip
 801f98c:	fb06 a605 	mla	r6, r6, r5, sl
 801f990:	fb0c 0005 	mla	r0, ip, r5, r0
 801f994:	1c7d      	adds	r5, r7, #1
 801f996:	b2b6      	uxth	r6, r6
 801f998:	b280      	uxth	r0, r0
 801f99a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801f99e:	f100 0a01 	add.w	sl, r0, #1
 801f9a2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801f9a6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801f9aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801f9ae:	ea47 070a 	orr.w	r7, r7, sl
 801f9b2:	f106 0a01 	add.w	sl, r6, #1
 801f9b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801f9ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f9be:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801f9c2:	ea47 070a 	orr.w	r7, r7, sl
 801f9c6:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801f9ca:	9811      	ldr	r0, [sp, #68]	; 0x44
 801f9cc:	f108 0801 	add.w	r8, r8, #1
 801f9d0:	4401      	add	r1, r0
 801f9d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801f9d4:	4402      	add	r2, r0
 801f9d6:	e7a3      	b.n	801f920 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801f9d8:	4d07      	ldr	r5, [pc, #28]	; (801f9f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801f9da:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 801f9de:	0945      	lsrs	r5, r0, #5
 801f9e0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801f9e4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f9e8:	4335      	orrs	r5, r6
 801f9ea:	4305      	orrs	r5, r0
 801f9ec:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801f9f0:	e7eb      	b.n	801f9ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801f9f2:	b005      	add	sp, #20
 801f9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9f8:	fffff800 	.word	0xfffff800

0801f9fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa00:	b087      	sub	sp, #28
 801fa02:	468b      	mov	fp, r1
 801fa04:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fa08:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801fa0a:	9204      	str	r2, [sp, #16]
 801fa0c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801fa10:	6861      	ldr	r1, [r4, #4]
 801fa12:	9205      	str	r2, [sp, #20]
 801fa14:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801fa18:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801fa1c:	fb01 2000 	mla	r0, r1, r0, r2
 801fa20:	6822      	ldr	r2, [r4, #0]
 801fa22:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fa26:	f8de 2000 	ldr.w	r2, [lr]
 801fa2a:	9201      	str	r2, [sp, #4]
 801fa2c:	f8de 2004 	ldr.w	r2, [lr, #4]
 801fa30:	9202      	str	r2, [sp, #8]
 801fa32:	f1bb 0f00 	cmp.w	fp, #0
 801fa36:	dc03      	bgt.n	801fa40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801fa38:	9a04      	ldr	r2, [sp, #16]
 801fa3a:	2a00      	cmp	r2, #0
 801fa3c:	f340 8142 	ble.w	801fcc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fa40:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801fa42:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801fa46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801fa4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801fa4c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801fa50:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801fa54:	2b00      	cmp	r3, #0
 801fa56:	dd0e      	ble.n	801fa76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fa58:	140c      	asrs	r4, r1, #16
 801fa5a:	d405      	bmi.n	801fa68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fa5c:	42bc      	cmp	r4, r7
 801fa5e:	da03      	bge.n	801fa68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fa60:	1414      	asrs	r4, r2, #16
 801fa62:	d401      	bmi.n	801fa68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801fa64:	42b4      	cmp	r4, r6
 801fa66:	db07      	blt.n	801fa78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801fa68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fa6a:	3b01      	subs	r3, #1
 801fa6c:	3002      	adds	r0, #2
 801fa6e:	4421      	add	r1, r4
 801fa70:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fa72:	4422      	add	r2, r4
 801fa74:	e7ee      	b.n	801fa54 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fa76:	d019      	beq.n	801faac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801fa78:	1e5c      	subs	r4, r3, #1
 801fa7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801fa7c:	fb05 1504 	mla	r5, r5, r4, r1
 801fa80:	142d      	asrs	r5, r5, #16
 801fa82:	d409      	bmi.n	801fa98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fa84:	42bd      	cmp	r5, r7
 801fa86:	da07      	bge.n	801fa98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fa88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801fa8a:	fb05 2404 	mla	r4, r5, r4, r2
 801fa8e:	1424      	asrs	r4, r4, #16
 801fa90:	d402      	bmi.n	801fa98 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fa92:	42b4      	cmp	r4, r6
 801fa94:	f2c0 80b1 	blt.w	801fbfa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fa98:	f04f 0800 	mov.w	r8, #0
 801fa9c:	eb03 0408 	add.w	r4, r3, r8
 801faa0:	2c00      	cmp	r4, #0
 801faa2:	dc3e      	bgt.n	801fb22 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801faa4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801faa8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801faac:	f1bb 0f00 	cmp.w	fp, #0
 801fab0:	f340 8108 	ble.w	801fcc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801fab4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fab8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801faba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fabe:	f1bb 0b01 	subs.w	fp, fp, #1
 801fac2:	eeb0 6a62 	vmov.f32	s12, s5
 801fac6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801faca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801face:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fad2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801fad6:	eeb0 6a43 	vmov.f32	s12, s6
 801fada:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fade:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801fae2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fae6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801faea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801faee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801faf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801faf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fafa:	ee12 2a90 	vmov	r2, s5
 801fafe:	eef0 2a47 	vmov.f32	s5, s14
 801fb02:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb06:	ee13 2a10 	vmov	r2, s6
 801fb0a:	9313      	str	r3, [sp, #76]	; 0x4c
 801fb0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb0e:	eeb0 3a67 	vmov.f32	s6, s15
 801fb12:	fb92 f3f3 	sdiv	r3, r2, r3
 801fb16:	9a04      	ldr	r2, [sp, #16]
 801fb18:	9314      	str	r3, [sp, #80]	; 0x50
 801fb1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fb1c:	bf08      	it	eq
 801fb1e:	4613      	moveq	r3, r2
 801fb20:	e787      	b.n	801fa32 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801fb22:	140e      	asrs	r6, r1, #16
 801fb24:	d462      	bmi.n	801fbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fb26:	f8de 5008 	ldr.w	r5, [lr, #8]
 801fb2a:	42b5      	cmp	r5, r6
 801fb2c:	dd5e      	ble.n	801fbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fb2e:	1417      	asrs	r7, r2, #16
 801fb30:	d45c      	bmi.n	801fbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fb32:	f8de 400c 	ldr.w	r4, [lr, #12]
 801fb36:	42bc      	cmp	r4, r7
 801fb38:	dd58      	ble.n	801fbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fb3a:	b22d      	sxth	r5, r5
 801fb3c:	9c02      	ldr	r4, [sp, #8]
 801fb3e:	fb07 6505 	mla	r5, r7, r5, r6
 801fb42:	5d66      	ldrb	r6, [r4, r5]
 801fb44:	2e00      	cmp	r6, #0
 801fb46:	d051      	beq.n	801fbec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801fb48:	9c01      	ldr	r4, [sp, #4]
 801fb4a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801fb4e:	f06f 0401 	mvn.w	r4, #1
 801fb52:	fb04 f408 	mul.w	r4, r4, r8
 801fb56:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801fb5a:	5b05      	ldrh	r5, [r0, r4]
 801fb5c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fb60:	9403      	str	r4, [sp, #12]
 801fb62:	9c05      	ldr	r4, [sp, #20]
 801fb64:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fb68:	4366      	muls	r6, r4
 801fb6a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801fb6e:	1c74      	adds	r4, r6, #1
 801fb70:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fb74:	122e      	asrs	r6, r5, #8
 801fb76:	1224      	asrs	r4, r4, #8
 801fb78:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fb7c:	00ed      	lsls	r5, r5, #3
 801fb7e:	b2a7      	uxth	r7, r4
 801fb80:	43e4      	mvns	r4, r4
 801fb82:	b2ed      	uxtb	r5, r5
 801fb84:	b2e4      	uxtb	r4, r4
 801fb86:	fb16 f604 	smulbb	r6, r6, r4
 801fb8a:	fb15 f504 	smulbb	r5, r5, r4
 801fb8e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fb92:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801fb96:	fb1a fa04 	smulbb	sl, sl, r4
 801fb9a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801fb9e:	fa1f fc8c 	uxth.w	ip, ip
 801fba2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801fba6:	fa5f f989 	uxtb.w	r9, r9
 801fbaa:	fb06 a607 	mla	r6, r6, r7, sl
 801fbae:	f10c 0401 	add.w	r4, ip, #1
 801fbb2:	fb09 5507 	mla	r5, r9, r7, r5
 801fbb6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fbba:	9c03      	ldr	r4, [sp, #12]
 801fbbc:	b2ad      	uxth	r5, r5
 801fbbe:	b2b6      	uxth	r6, r6
 801fbc0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fbc4:	f105 0a01 	add.w	sl, r5, #1
 801fbc8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fbcc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fbd0:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fbd4:	f106 0a01 	add.w	sl, r6, #1
 801fbd8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fbdc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fbe0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fbe4:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fbe8:	f820 c004 	strh.w	ip, [r0, r4]
 801fbec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fbee:	f108 38ff 	add.w	r8, r8, #4294967295
 801fbf2:	4421      	add	r1, r4
 801fbf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fbf6:	4422      	add	r2, r4
 801fbf8:	e750      	b.n	801fa9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801fbfa:	f04f 0900 	mov.w	r9, #0
 801fbfe:	eba3 0409 	sub.w	r4, r3, r9
 801fc02:	2c00      	cmp	r4, #0
 801fc04:	f77f af4e 	ble.w	801faa4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801fc08:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801fc0c:	140d      	asrs	r5, r1, #16
 801fc0e:	1414      	asrs	r4, r2, #16
 801fc10:	fb06 5404 	mla	r4, r6, r4, r5
 801fc14:	9d02      	ldr	r5, [sp, #8]
 801fc16:	5d2e      	ldrb	r6, [r5, r4]
 801fc18:	2e00      	cmp	r6, #0
 801fc1a:	d04c      	beq.n	801fcb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801fc1c:	9d01      	ldr	r5, [sp, #4]
 801fc1e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801fc22:	9c05      	ldr	r4, [sp, #20]
 801fc24:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801fc28:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801fc2c:	4366      	muls	r6, r4
 801fc2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fc32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fc36:	1c74      	adds	r4, r6, #1
 801fc38:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801fc3c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801fc40:	122e      	asrs	r6, r5, #8
 801fc42:	1224      	asrs	r4, r4, #8
 801fc44:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801fc48:	00ed      	lsls	r5, r5, #3
 801fc4a:	b2a7      	uxth	r7, r4
 801fc4c:	43e4      	mvns	r4, r4
 801fc4e:	b2ed      	uxtb	r5, r5
 801fc50:	b2e4      	uxtb	r4, r4
 801fc52:	fb16 f604 	smulbb	r6, r6, r4
 801fc56:	fb15 f504 	smulbb	r5, r5, r4
 801fc5a:	fb0c 6c07 	mla	ip, ip, r7, r6
 801fc5e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801fc62:	fb1a fa04 	smulbb	sl, sl, r4
 801fc66:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801fc6a:	fa1f fc8c 	uxth.w	ip, ip
 801fc6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801fc72:	fa5f f888 	uxtb.w	r8, r8
 801fc76:	fb06 a607 	mla	r6, r6, r7, sl
 801fc7a:	f10c 0401 	add.w	r4, ip, #1
 801fc7e:	fb08 5507 	mla	r5, r8, r7, r5
 801fc82:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801fc86:	b2ad      	uxth	r5, r5
 801fc88:	b2b6      	uxth	r6, r6
 801fc8a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801fc8e:	f105 0a01 	add.w	sl, r5, #1
 801fc92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fc96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fc9a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fc9e:	f106 0a01 	add.w	sl, r6, #1
 801fca2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801fca6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fcaa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fcae:	ea4c 0c0a 	orr.w	ip, ip, sl
 801fcb2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801fcb6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fcb8:	f109 0901 	add.w	r9, r9, #1
 801fcbc:	4421      	add	r1, r4
 801fcbe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801fcc0:	4422      	add	r2, r4
 801fcc2:	e79c      	b.n	801fbfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801fcc4:	b007      	add	sp, #28
 801fcc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fcca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fcca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcce:	b085      	sub	sp, #20
 801fcd0:	468b      	mov	fp, r1
 801fcd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801fcd6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801fcd8:	9203      	str	r2, [sp, #12]
 801fcda:	6861      	ldr	r1, [r4, #4]
 801fcdc:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801fce0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801fce4:	fb01 2000 	mla	r0, r1, r0, r2
 801fce8:	6822      	ldr	r2, [r4, #0]
 801fcea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801fcee:	f8d8 2000 	ldr.w	r2, [r8]
 801fcf2:	9200      	str	r2, [sp, #0]
 801fcf4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801fcf8:	9201      	str	r2, [sp, #4]
 801fcfa:	f1bb 0f00 	cmp.w	fp, #0
 801fcfe:	dc03      	bgt.n	801fd08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801fd00:	9a03      	ldr	r2, [sp, #12]
 801fd02:	2a00      	cmp	r2, #0
 801fd04:	f340 8146 	ble.w	801ff94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801fd08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fd0a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801fd0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801fd12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fd14:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801fd18:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801fd1c:	2b00      	cmp	r3, #0
 801fd1e:	dd0e      	ble.n	801fd3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801fd20:	140c      	asrs	r4, r1, #16
 801fd22:	d405      	bmi.n	801fd30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd24:	42bc      	cmp	r4, r7
 801fd26:	da03      	bge.n	801fd30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd28:	1414      	asrs	r4, r2, #16
 801fd2a:	d401      	bmi.n	801fd30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801fd2c:	42b4      	cmp	r4, r6
 801fd2e:	db07      	blt.n	801fd40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fd30:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801fd32:	3b01      	subs	r3, #1
 801fd34:	3002      	adds	r0, #2
 801fd36:	4421      	add	r1, r4
 801fd38:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801fd3a:	4422      	add	r2, r4
 801fd3c:	e7ee      	b.n	801fd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fd3e:	d017      	beq.n	801fd70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801fd40:	1e5c      	subs	r4, r3, #1
 801fd42:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801fd44:	fb05 1504 	mla	r5, r5, r4, r1
 801fd48:	142d      	asrs	r5, r5, #16
 801fd4a:	d409      	bmi.n	801fd60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fd4c:	42bd      	cmp	r5, r7
 801fd4e:	da07      	bge.n	801fd60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fd50:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fd52:	fb05 2404 	mla	r4, r5, r4, r2
 801fd56:	1424      	asrs	r4, r4, #16
 801fd58:	d402      	bmi.n	801fd60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801fd5a:	42b4      	cmp	r4, r6
 801fd5c:	f2c0 80b3 	blt.w	801fec6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801fd60:	2600      	movs	r6, #0
 801fd62:	199c      	adds	r4, r3, r6
 801fd64:	2c00      	cmp	r4, #0
 801fd66:	dc3e      	bgt.n	801fde6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fd68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fd6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801fd70:	f1bb 0f00 	cmp.w	fp, #0
 801fd74:	f340 810e 	ble.w	801ff94 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801fd78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fd7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fd7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fd82:	f1bb 0b01 	subs.w	fp, fp, #1
 801fd86:	eeb0 6a62 	vmov.f32	s12, s5
 801fd8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801fd8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fd92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fd96:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801fd9a:	eeb0 6a43 	vmov.f32	s12, s6
 801fd9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801fda2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801fda6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fdaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fdae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fdb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fdb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fdba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fdbe:	ee12 2a90 	vmov	r2, s5
 801fdc2:	eef0 2a47 	vmov.f32	s5, s14
 801fdc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdca:	ee13 2a10 	vmov	r2, s6
 801fdce:	9311      	str	r3, [sp, #68]	; 0x44
 801fdd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fdd2:	eeb0 3a67 	vmov.f32	s6, s15
 801fdd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801fdda:	9a03      	ldr	r2, [sp, #12]
 801fddc:	9312      	str	r3, [sp, #72]	; 0x48
 801fdde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fde0:	bf08      	it	eq
 801fde2:	4613      	moveq	r3, r2
 801fde4:	e789      	b.n	801fcfa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801fde6:	140f      	asrs	r7, r1, #16
 801fde8:	d45f      	bmi.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fdea:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801fdee:	42bd      	cmp	r5, r7
 801fdf0:	dd5b      	ble.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fdf2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801fdf6:	d458      	bmi.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fdf8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801fdfc:	4564      	cmp	r4, ip
 801fdfe:	dd54      	ble.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fe00:	b22d      	sxth	r5, r5
 801fe02:	9c01      	ldr	r4, [sp, #4]
 801fe04:	fb0c 7505 	mla	r5, ip, r5, r7
 801fe08:	5d64      	ldrb	r4, [r4, r5]
 801fe0a:	2cff      	cmp	r4, #255	; 0xff
 801fe0c:	d053      	beq.n	801feb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801fe0e:	2c00      	cmp	r4, #0
 801fe10:	d04b      	beq.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fe12:	9f00      	ldr	r7, [sp, #0]
 801fe14:	fa1f fc84 	uxth.w	ip, r4
 801fe18:	43e4      	mvns	r4, r4
 801fe1a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801fe1e:	f06f 0501 	mvn.w	r5, #1
 801fe22:	b2e4      	uxtb	r4, r4
 801fe24:	4375      	muls	r5, r6
 801fe26:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801fe2a:	9502      	str	r5, [sp, #8]
 801fe2c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801fe30:	5b45      	ldrh	r5, [r0, r5]
 801fe32:	122f      	asrs	r7, r5, #8
 801fe34:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fe38:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801fe3c:	00ed      	lsls	r5, r5, #3
 801fe3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801fe42:	fb17 f704 	smulbb	r7, r7, r4
 801fe46:	b2ed      	uxtb	r5, r5
 801fe48:	fb1a fa04 	smulbb	sl, sl, r4
 801fe4c:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801fe50:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801fe54:	fb15 f504 	smulbb	r5, r5, r4
 801fe58:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801fe5c:	fa1f fe8e 	uxth.w	lr, lr
 801fe60:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801fe64:	fa5f f989 	uxtb.w	r9, r9
 801fe68:	fb07 a70c 	mla	r7, r7, ip, sl
 801fe6c:	f10e 0401 	add.w	r4, lr, #1
 801fe70:	fb09 550c 	mla	r5, r9, ip, r5
 801fe74:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801fe78:	9c02      	ldr	r4, [sp, #8]
 801fe7a:	b2ad      	uxth	r5, r5
 801fe7c:	b2bf      	uxth	r7, r7
 801fe7e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801fe82:	f105 0a01 	add.w	sl, r5, #1
 801fe86:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801fe8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801fe8e:	ea4e 0e0a 	orr.w	lr, lr, sl
 801fe92:	f107 0a01 	add.w	sl, r7, #1
 801fe96:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801fe9a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe9e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fea2:	ea4e 0e0a 	orr.w	lr, lr, sl
 801fea6:	f820 e004 	strh.w	lr, [r0, r4]
 801feaa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801feac:	3e01      	subs	r6, #1
 801feae:	4421      	add	r1, r4
 801feb0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801feb2:	4422      	add	r2, r4
 801feb4:	e755      	b.n	801fd62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801feb6:	9c00      	ldr	r4, [sp, #0]
 801feb8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801febc:	f06f 0401 	mvn.w	r4, #1
 801fec0:	4374      	muls	r4, r6
 801fec2:	5305      	strh	r5, [r0, r4]
 801fec4:	e7f1      	b.n	801feaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801fec6:	f04f 0900 	mov.w	r9, #0
 801feca:	eba3 0409 	sub.w	r4, r3, r9
 801fece:	2c00      	cmp	r4, #0
 801fed0:	f77f af4a 	ble.w	801fd68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801fed4:	1414      	asrs	r4, r2, #16
 801fed6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801feda:	140d      	asrs	r5, r1, #16
 801fedc:	fb06 5504 	mla	r5, r6, r4, r5
 801fee0:	9c01      	ldr	r4, [sp, #4]
 801fee2:	5d64      	ldrb	r4, [r4, r5]
 801fee4:	2cff      	cmp	r4, #255	; 0xff
 801fee6:	d04f      	beq.n	801ff88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 801fee8:	2c00      	cmp	r4, #0
 801feea:	d046      	beq.n	801ff7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801feec:	9e00      	ldr	r6, [sp, #0]
 801feee:	b2a7      	uxth	r7, r4
 801fef0:	43e4      	mvns	r4, r4
 801fef2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801fef6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801fefa:	b2e4      	uxtb	r4, r4
 801fefc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ff00:	122e      	asrs	r6, r5, #8
 801ff02:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ff06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ff0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ff0e:	00ed      	lsls	r5, r5, #3
 801ff10:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801ff14:	fb16 f604 	smulbb	r6, r6, r4
 801ff18:	b2ed      	uxtb	r5, r5
 801ff1a:	fb1a fa04 	smulbb	sl, sl, r4
 801ff1e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801ff22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ff26:	fb15 f504 	smulbb	r5, r5, r4
 801ff2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ff2e:	fa1f fc8c 	uxth.w	ip, ip
 801ff32:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ff36:	fa5f fe8e 	uxtb.w	lr, lr
 801ff3a:	fb06 a607 	mla	r6, r6, r7, sl
 801ff3e:	f10c 0401 	add.w	r4, ip, #1
 801ff42:	fb0e 5507 	mla	r5, lr, r7, r5
 801ff46:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801ff4a:	b2ad      	uxth	r5, r5
 801ff4c:	b2b6      	uxth	r6, r6
 801ff4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ff52:	f105 0a01 	add.w	sl, r5, #1
 801ff56:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ff5a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ff5e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ff62:	f106 0a01 	add.w	sl, r6, #1
 801ff66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ff6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ff6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ff72:	ea4c 0c0a 	orr.w	ip, ip, sl
 801ff76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801ff7a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801ff7c:	f109 0901 	add.w	r9, r9, #1
 801ff80:	4421      	add	r1, r4
 801ff82:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ff84:	4422      	add	r2, r4
 801ff86:	e7a0      	b.n	801feca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ff88:	9c00      	ldr	r4, [sp, #0]
 801ff8a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801ff8e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801ff92:	e7f2      	b.n	801ff7a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801ff94:	b005      	add	sp, #20
 801ff96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ff9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff9e:	b085      	sub	sp, #20
 801ffa0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ffa2:	9203      	str	r2, [sp, #12]
 801ffa4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801ffa8:	9100      	str	r1, [sp, #0]
 801ffaa:	9201      	str	r2, [sp, #4]
 801ffac:	6841      	ldr	r1, [r0, #4]
 801ffae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801ffb2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801ffb6:	fb01 2404 	mla	r4, r1, r4, r2
 801ffba:	6802      	ldr	r2, [r0, #0]
 801ffbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ffc0:	f8de 2000 	ldr.w	r2, [lr]
 801ffc4:	9202      	str	r2, [sp, #8]
 801ffc6:	9a01      	ldr	r2, [sp, #4]
 801ffc8:	43d6      	mvns	r6, r2
 801ffca:	b2f6      	uxtb	r6, r6
 801ffcc:	9a00      	ldr	r2, [sp, #0]
 801ffce:	2a00      	cmp	r2, #0
 801ffd0:	dc03      	bgt.n	801ffda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801ffd2:	9a03      	ldr	r2, [sp, #12]
 801ffd4:	2a00      	cmp	r2, #0
 801ffd6:	f340 8124 	ble.w	8020222 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ffda:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ffdc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801ffe0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ffe4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ffe6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801ffea:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ffee:	2b00      	cmp	r3, #0
 801fff0:	dd0e      	ble.n	8020010 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801fff2:	1408      	asrs	r0, r1, #16
 801fff4:	d405      	bmi.n	8020002 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fff6:	4560      	cmp	r0, ip
 801fff8:	da03      	bge.n	8020002 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fffa:	1410      	asrs	r0, r2, #16
 801fffc:	d401      	bmi.n	8020002 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801fffe:	42b8      	cmp	r0, r7
 8020000:	db07      	blt.n	8020012 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020002:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020004:	3b01      	subs	r3, #1
 8020006:	3402      	adds	r4, #2
 8020008:	4401      	add	r1, r0
 802000a:	9812      	ldr	r0, [sp, #72]	; 0x48
 802000c:	4402      	add	r2, r0
 802000e:	e7ee      	b.n	801ffee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8020010:	d06e      	beq.n	80200f0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8020012:	1e58      	subs	r0, r3, #1
 8020014:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020016:	fb05 1500 	mla	r5, r5, r0, r1
 802001a:	142d      	asrs	r5, r5, #16
 802001c:	d45c      	bmi.n	80200d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802001e:	4565      	cmp	r5, ip
 8020020:	da5a      	bge.n	80200d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020022:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020024:	fb05 2000 	mla	r0, r5, r0, r2
 8020028:	1400      	asrs	r0, r0, #16
 802002a:	d455      	bmi.n	80200d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802002c:	42b8      	cmp	r0, r7
 802002e:	da53      	bge.n	80200d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8020030:	4699      	mov	r9, r3
 8020032:	46a2      	mov	sl, r4
 8020034:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8020038:	f1b9 0f00 	cmp.w	r9, #0
 802003c:	dd54      	ble.n	80200e8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802003e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8020042:	140d      	asrs	r5, r1, #16
 8020044:	1410      	asrs	r0, r2, #16
 8020046:	f109 39ff 	add.w	r9, r9, #4294967295
 802004a:	fb07 5000 	mla	r0, r7, r0, r5
 802004e:	9d02      	ldr	r5, [sp, #8]
 8020050:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8020054:	f8ba 5000 	ldrh.w	r5, [sl]
 8020058:	ea4f 2c20 	mov.w	ip, r0, asr #8
 802005c:	122f      	asrs	r7, r5, #8
 802005e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8020062:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020066:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 802006a:	00ed      	lsls	r5, r5, #3
 802006c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8020070:	fb17 f706 	smulbb	r7, r7, r6
 8020074:	b2ed      	uxtb	r5, r5
 8020076:	fb18 f806 	smulbb	r8, r8, r6
 802007a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 802007e:	10c7      	asrs	r7, r0, #3
 8020080:	fb15 f506 	smulbb	r5, r5, r6
 8020084:	00c0      	lsls	r0, r0, #3
 8020086:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802008a:	fa1f fc8c 	uxth.w	ip, ip
 802008e:	b2c0      	uxtb	r0, r0
 8020090:	fb07 870b 	mla	r7, r7, fp, r8
 8020094:	fb00 500b 	mla	r0, r0, fp, r5
 8020098:	f10c 0501 	add.w	r5, ip, #1
 802009c:	b2bf      	uxth	r7, r7
 802009e:	b280      	uxth	r0, r0
 80200a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80200a4:	f107 0801 	add.w	r8, r7, #1
 80200a8:	1c45      	adds	r5, r0, #1
 80200aa:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80200ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80200b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80200b6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80200b8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80200bc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80200c0:	4401      	add	r1, r0
 80200c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80200c6:	9812      	ldr	r0, [sp, #72]	; 0x48
 80200c8:	ea4c 0c05 	orr.w	ip, ip, r5
 80200cc:	4402      	add	r2, r0
 80200ce:	ea4c 0c08 	orr.w	ip, ip, r8
 80200d2:	f82a cb02 	strh.w	ip, [sl], #2
 80200d6:	e7af      	b.n	8020038 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80200d8:	f04f 0800 	mov.w	r8, #0
 80200dc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80200e0:	eb03 0008 	add.w	r0, r3, r8
 80200e4:	2800      	cmp	r0, #0
 80200e6:	dc41      	bgt.n	802016c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80200e8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80200ec:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80200f0:	9b00      	ldr	r3, [sp, #0]
 80200f2:	2b00      	cmp	r3, #0
 80200f4:	f340 8095 	ble.w	8020222 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80200f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80200fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80200fe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020102:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020106:	eef0 6a62 	vmov.f32	s13, s5
 802010a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802010e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020112:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020116:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 802011a:	eef0 6a43 	vmov.f32	s13, s6
 802011e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020122:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8020126:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802012a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802012e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020132:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020136:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802013a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802013e:	ee12 2a90 	vmov	r2, s5
 8020142:	eef0 2a47 	vmov.f32	s5, s14
 8020146:	fb92 f3f3 	sdiv	r3, r2, r3
 802014a:	ee13 2a10 	vmov	r2, s6
 802014e:	9311      	str	r3, [sp, #68]	; 0x44
 8020150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020152:	eeb0 3a67 	vmov.f32	s6, s15
 8020156:	fb92 f3f3 	sdiv	r3, r2, r3
 802015a:	9312      	str	r3, [sp, #72]	; 0x48
 802015c:	9b00      	ldr	r3, [sp, #0]
 802015e:	9a03      	ldr	r2, [sp, #12]
 8020160:	3b01      	subs	r3, #1
 8020162:	9300      	str	r3, [sp, #0]
 8020164:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020166:	bf08      	it	eq
 8020168:	4613      	moveq	r3, r2
 802016a:	e72f      	b.n	801ffcc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802016c:	140f      	asrs	r7, r1, #16
 802016e:	d451      	bmi.n	8020214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020170:	f8de 5008 	ldr.w	r5, [lr, #8]
 8020174:	42bd      	cmp	r5, r7
 8020176:	dd4d      	ble.n	8020214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020178:	ea5f 4c22 	movs.w	ip, r2, asr #16
 802017c:	d44a      	bmi.n	8020214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 802017e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8020182:	4560      	cmp	r0, ip
 8020184:	dd46      	ble.n	8020214 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8020186:	b22d      	sxth	r5, r5
 8020188:	9802      	ldr	r0, [sp, #8]
 802018a:	fb0c 7505 	mla	r5, ip, r5, r7
 802018e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8020192:	f06f 0501 	mvn.w	r5, #1
 8020196:	fb05 fb08 	mul.w	fp, r5, r8
 802019a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 802019e:	f834 500b 	ldrh.w	r5, [r4, fp]
 80201a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80201a6:	122f      	asrs	r7, r5, #8
 80201a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80201ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80201b0:	00ed      	lsls	r5, r5, #3
 80201b2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80201b6:	fb17 f706 	smulbb	r7, r7, r6
 80201ba:	b2ed      	uxtb	r5, r5
 80201bc:	fb19 f906 	smulbb	r9, r9, r6
 80201c0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80201c4:	10c7      	asrs	r7, r0, #3
 80201c6:	fb15 f506 	smulbb	r5, r5, r6
 80201ca:	00c0      	lsls	r0, r0, #3
 80201cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80201d0:	fa1f fc8c 	uxth.w	ip, ip
 80201d4:	b2c0      	uxtb	r0, r0
 80201d6:	fb07 970a 	mla	r7, r7, sl, r9
 80201da:	fb00 500a 	mla	r0, r0, sl, r5
 80201de:	f10c 0501 	add.w	r5, ip, #1
 80201e2:	b2bf      	uxth	r7, r7
 80201e4:	b280      	uxth	r0, r0
 80201e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80201ea:	f107 0901 	add.w	r9, r7, #1
 80201ee:	1c45      	adds	r5, r0, #1
 80201f0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80201f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80201f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80201fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8020200:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8020204:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8020208:	ea4c 0c05 	orr.w	ip, ip, r5
 802020c:	ea4c 0c09 	orr.w	ip, ip, r9
 8020210:	f824 c00b 	strh.w	ip, [r4, fp]
 8020214:	9811      	ldr	r0, [sp, #68]	; 0x44
 8020216:	f108 38ff 	add.w	r8, r8, #4294967295
 802021a:	4401      	add	r1, r0
 802021c:	9812      	ldr	r0, [sp, #72]	; 0x48
 802021e:	4402      	add	r2, r0
 8020220:	e75e      	b.n	80200e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8020222:	b005      	add	sp, #20
 8020224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020228 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020228:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802022c:	b085      	sub	sp, #20
 802022e:	4693      	mov	fp, r2
 8020230:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020234:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8020236:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8020238:	6870      	ldr	r0, [r6, #4]
 802023a:	9101      	str	r1, [sp, #4]
 802023c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8020240:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8020244:	fb00 2404 	mla	r4, r0, r4, r2
 8020248:	6832      	ldr	r2, [r6, #0]
 802024a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 802024e:	682a      	ldr	r2, [r5, #0]
 8020250:	9202      	str	r2, [sp, #8]
 8020252:	9a01      	ldr	r2, [sp, #4]
 8020254:	2a00      	cmp	r2, #0
 8020256:	dc03      	bgt.n	8020260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020258:	f1bb 0f00 	cmp.w	fp, #0
 802025c:	f340 809a 	ble.w	8020394 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8020260:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020262:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8020266:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 802026a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802026c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8020270:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8020274:	2b00      	cmp	r3, #0
 8020276:	dd0c      	ble.n	8020292 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8020278:	1406      	asrs	r6, r0, #16
 802027a:	d405      	bmi.n	8020288 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802027c:	454e      	cmp	r6, r9
 802027e:	da03      	bge.n	8020288 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020280:	1416      	asrs	r6, r2, #16
 8020282:	d401      	bmi.n	8020288 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8020284:	4546      	cmp	r6, r8
 8020286:	db05      	blt.n	8020294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020288:	4470      	add	r0, lr
 802028a:	4462      	add	r2, ip
 802028c:	3b01      	subs	r3, #1
 802028e:	3402      	adds	r4, #2
 8020290:	e7f0      	b.n	8020274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020292:	d00f      	beq.n	80202b4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020294:	1e5e      	subs	r6, r3, #1
 8020296:	fb0e 0706 	mla	r7, lr, r6, r0
 802029a:	143f      	asrs	r7, r7, #16
 802029c:	d541      	bpl.n	8020322 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 802029e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80202a2:	4698      	mov	r8, r3
 80202a4:	9603      	str	r6, [sp, #12]
 80202a6:	f1b8 0f00 	cmp.w	r8, #0
 80202aa:	dc56      	bgt.n	802035a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80202ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80202b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80202b4:	9b01      	ldr	r3, [sp, #4]
 80202b6:	2b00      	cmp	r3, #0
 80202b8:	dd6c      	ble.n	8020394 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80202ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80202c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202c4:	eeb0 6a62 	vmov.f32	s12, s5
 80202c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80202cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80202d4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80202d8:	eeb0 6a43 	vmov.f32	s12, s6
 80202dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80202e0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80202e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80202f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80202f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80202f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80202fc:	ee12 2a90 	vmov	r2, s5
 8020300:	eef0 2a47 	vmov.f32	s5, s14
 8020304:	fb92 fef3 	sdiv	lr, r2, r3
 8020308:	ee13 2a10 	vmov	r2, s6
 802030c:	eeb0 3a67 	vmov.f32	s6, s15
 8020310:	fb92 fcf3 	sdiv	ip, r2, r3
 8020314:	9b01      	ldr	r3, [sp, #4]
 8020316:	3b01      	subs	r3, #1
 8020318:	9301      	str	r3, [sp, #4]
 802031a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802031c:	bf08      	it	eq
 802031e:	465b      	moveq	r3, fp
 8020320:	e797      	b.n	8020252 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020322:	454f      	cmp	r7, r9
 8020324:	dabb      	bge.n	802029e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020326:	fb0c 2606 	mla	r6, ip, r6, r2
 802032a:	1436      	asrs	r6, r6, #16
 802032c:	d4b7      	bmi.n	802029e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802032e:	4546      	cmp	r6, r8
 8020330:	dab5      	bge.n	802029e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020332:	461e      	mov	r6, r3
 8020334:	46a0      	mov	r8, r4
 8020336:	2e00      	cmp	r6, #0
 8020338:	ddb8      	ble.n	80202ac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802033a:	1417      	asrs	r7, r2, #16
 802033c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8020340:	ea4f 4920 	mov.w	r9, r0, asr #16
 8020344:	9902      	ldr	r1, [sp, #8]
 8020346:	4470      	add	r0, lr
 8020348:	4462      	add	r2, ip
 802034a:	fb0a 9707 	mla	r7, sl, r7, r9
 802034e:	3e01      	subs	r6, #1
 8020350:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8020354:	f828 7b02 	strh.w	r7, [r8], #2
 8020358:	e7ed      	b.n	8020336 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 802035a:	ea5f 4920 	movs.w	r9, r0, asr #16
 802035e:	d414      	bmi.n	802038a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020360:	68ae      	ldr	r6, [r5, #8]
 8020362:	454e      	cmp	r6, r9
 8020364:	dd11      	ble.n	802038a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020366:	ea5f 4a22 	movs.w	sl, r2, asr #16
 802036a:	d40e      	bmi.n	802038a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 802036c:	68ef      	ldr	r7, [r5, #12]
 802036e:	4557      	cmp	r7, sl
 8020370:	dd0b      	ble.n	802038a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8020372:	b236      	sxth	r6, r6
 8020374:	f06f 0101 	mvn.w	r1, #1
 8020378:	9f02      	ldr	r7, [sp, #8]
 802037a:	fb0a 9606 	mla	r6, sl, r6, r9
 802037e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8020382:	fb01 f608 	mul.w	r6, r1, r8
 8020386:	9903      	ldr	r1, [sp, #12]
 8020388:	538f      	strh	r7, [r1, r6]
 802038a:	4470      	add	r0, lr
 802038c:	4462      	add	r2, ip
 802038e:	f108 38ff 	add.w	r8, r8, #4294967295
 8020392:	e788      	b.n	80202a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8020394:	b005      	add	sp, #20
 8020396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802039a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802039a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802039e:	b085      	sub	sp, #20
 80203a0:	468b      	mov	fp, r1
 80203a2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80203a6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80203a8:	9202      	str	r2, [sp, #8]
 80203aa:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 80203ae:	6841      	ldr	r1, [r0, #4]
 80203b0:	9203      	str	r2, [sp, #12]
 80203b2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80203b6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80203ba:	fb01 2404 	mla	r4, r1, r4, r2
 80203be:	6802      	ldr	r2, [r0, #0]
 80203c0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80203c4:	f8d8 2000 	ldr.w	r2, [r8]
 80203c8:	9200      	str	r2, [sp, #0]
 80203ca:	f1bb 0f00 	cmp.w	fp, #0
 80203ce:	dc03      	bgt.n	80203d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80203d0:	9a02      	ldr	r2, [sp, #8]
 80203d2:	2a00      	cmp	r2, #0
 80203d4:	f340 8134 	ble.w	8020640 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80203d8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80203da:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80203de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80203e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80203e4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80203e8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80203ec:	2b00      	cmp	r3, #0
 80203ee:	dd0e      	ble.n	802040e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80203f0:	1402      	asrs	r2, r0, #16
 80203f2:	d405      	bmi.n	8020400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80203f4:	42ba      	cmp	r2, r7
 80203f6:	da03      	bge.n	8020400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80203f8:	140a      	asrs	r2, r1, #16
 80203fa:	d401      	bmi.n	8020400 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80203fc:	42b2      	cmp	r2, r6
 80203fe:	db07      	blt.n	8020410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020400:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020402:	3b01      	subs	r3, #1
 8020404:	3402      	adds	r4, #2
 8020406:	4410      	add	r0, r2
 8020408:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802040a:	4411      	add	r1, r2
 802040c:	e7ee      	b.n	80203ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802040e:	d019      	beq.n	8020444 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8020410:	1e5a      	subs	r2, r3, #1
 8020412:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020414:	fb05 0502 	mla	r5, r5, r2, r0
 8020418:	142d      	asrs	r5, r5, #16
 802041a:	d409      	bmi.n	8020430 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802041c:	42bd      	cmp	r5, r7
 802041e:	da07      	bge.n	8020430 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020420:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8020422:	fb05 1202 	mla	r2, r5, r2, r1
 8020426:	1412      	asrs	r2, r2, #16
 8020428:	d402      	bmi.n	8020430 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802042a:	42b2      	cmp	r2, r6
 802042c:	f2c0 80aa 	blt.w	8020584 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8020430:	f04f 0c00 	mov.w	ip, #0
 8020434:	eb03 020c 	add.w	r2, r3, ip
 8020438:	2a00      	cmp	r2, #0
 802043a:	dc3e      	bgt.n	80204ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 802043c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020440:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020444:	f1bb 0f00 	cmp.w	fp, #0
 8020448:	f340 80fa 	ble.w	8020640 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802044c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020450:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020452:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020456:	f1bb 0b01 	subs.w	fp, fp, #1
 802045a:	eeb0 6a62 	vmov.f32	s12, s5
 802045e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020462:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020466:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802046a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 802046e:	eeb0 6a43 	vmov.f32	s12, s6
 8020472:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020476:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802047a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802047e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020482:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020486:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802048a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802048e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020492:	ee12 2a90 	vmov	r2, s5
 8020496:	eef0 2a47 	vmov.f32	s5, s14
 802049a:	fb92 f3f3 	sdiv	r3, r2, r3
 802049e:	ee13 2a10 	vmov	r2, s6
 80204a2:	9311      	str	r3, [sp, #68]	; 0x44
 80204a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80204a6:	eeb0 3a67 	vmov.f32	s6, s15
 80204aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80204ae:	9a02      	ldr	r2, [sp, #8]
 80204b0:	9312      	str	r3, [sp, #72]	; 0x48
 80204b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80204b4:	bf08      	it	eq
 80204b6:	4613      	moveq	r3, r2
 80204b8:	e787      	b.n	80203ca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80204ba:	1406      	asrs	r6, r0, #16
 80204bc:	d45b      	bmi.n	8020576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80204be:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80204c2:	42b5      	cmp	r5, r6
 80204c4:	dd57      	ble.n	8020576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80204c6:	140f      	asrs	r7, r1, #16
 80204c8:	d455      	bmi.n	8020576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80204ca:	f8d8 200c 	ldr.w	r2, [r8, #12]
 80204ce:	42ba      	cmp	r2, r7
 80204d0:	dd51      	ble.n	8020576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80204d2:	b22d      	sxth	r5, r5
 80204d4:	9a00      	ldr	r2, [sp, #0]
 80204d6:	fb07 6505 	mla	r5, r7, r5, r6
 80204da:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 80204de:	0e2e      	lsrs	r6, r5, #24
 80204e0:	d049      	beq.n	8020576 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 80204e2:	f06f 0201 	mvn.w	r2, #1
 80204e6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80204ea:	fb02 f20c 	mul.w	r2, r2, ip
 80204ee:	f834 e002 	ldrh.w	lr, [r4, r2]
 80204f2:	9201      	str	r2, [sp, #4]
 80204f4:	9a03      	ldr	r2, [sp, #12]
 80204f6:	ea4f 272e 	mov.w	r7, lr, asr #8
 80204fa:	4356      	muls	r6, r2
 80204fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020500:	1c72      	adds	r2, r6, #1
 8020502:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8020506:	f3c5 4607 	ubfx	r6, r5, #16, #8
 802050a:	b2ed      	uxtb	r5, r5
 802050c:	1212      	asrs	r2, r2, #8
 802050e:	fa1f f982 	uxth.w	r9, r2
 8020512:	43d2      	mvns	r2, r2
 8020514:	fb16 f609 	smulbb	r6, r6, r9
 8020518:	b2d2      	uxtb	r2, r2
 802051a:	fb15 f509 	smulbb	r5, r5, r9
 802051e:	fb07 6702 	mla	r7, r7, r2, r6
 8020522:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8020526:	fb1a fa09 	smulbb	sl, sl, r9
 802052a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802052e:	b2bf      	uxth	r7, r7
 8020530:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020534:	fa5f fe8e 	uxtb.w	lr, lr
 8020538:	fb06 a602 	mla	r6, r6, r2, sl
 802053c:	fb0e 5502 	mla	r5, lr, r2, r5
 8020540:	1c7a      	adds	r2, r7, #1
 8020542:	b2b6      	uxth	r6, r6
 8020544:	b2ad      	uxth	r5, r5
 8020546:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 802054a:	9a01      	ldr	r2, [sp, #4]
 802054c:	f105 0a01 	add.w	sl, r5, #1
 8020550:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8020554:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020558:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 802055c:	ea47 070a 	orr.w	r7, r7, sl
 8020560:	f106 0a01 	add.w	sl, r6, #1
 8020564:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020568:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802056c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8020570:	ea47 070a 	orr.w	r7, r7, sl
 8020574:	52a7      	strh	r7, [r4, r2]
 8020576:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020578:	f10c 3cff 	add.w	ip, ip, #4294967295
 802057c:	4410      	add	r0, r2
 802057e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020580:	4411      	add	r1, r2
 8020582:	e757      	b.n	8020434 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020584:	f04f 0e00 	mov.w	lr, #0
 8020588:	eba3 020e 	sub.w	r2, r3, lr
 802058c:	2a00      	cmp	r2, #0
 802058e:	f77f af55 	ble.w	802043c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8020592:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8020596:	1405      	asrs	r5, r0, #16
 8020598:	140a      	asrs	r2, r1, #16
 802059a:	fb06 5202 	mla	r2, r6, r2, r5
 802059e:	9d00      	ldr	r5, [sp, #0]
 80205a0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80205a4:	0e2e      	lsrs	r6, r5, #24
 80205a6:	d044      	beq.n	8020632 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80205a8:	9a03      	ldr	r2, [sp, #12]
 80205aa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80205ae:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80205b2:	4356      	muls	r6, r2
 80205b4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80205b8:	1c72      	adds	r2, r6, #1
 80205ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80205be:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80205c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80205c6:	b2ed      	uxtb	r5, r5
 80205c8:	1212      	asrs	r2, r2, #8
 80205ca:	fa1f f982 	uxth.w	r9, r2
 80205ce:	43d2      	mvns	r2, r2
 80205d0:	fb16 f609 	smulbb	r6, r6, r9
 80205d4:	b2d2      	uxtb	r2, r2
 80205d6:	fb15 f509 	smulbb	r5, r5, r9
 80205da:	fb07 6702 	mla	r7, r7, r2, r6
 80205de:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80205e2:	fb1a fa09 	smulbb	sl, sl, r9
 80205e6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80205ea:	b2bf      	uxth	r7, r7
 80205ec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80205f0:	fa5f fc8c 	uxtb.w	ip, ip
 80205f4:	fb06 a602 	mla	r6, r6, r2, sl
 80205f8:	fb0c 5502 	mla	r5, ip, r2, r5
 80205fc:	1c7a      	adds	r2, r7, #1
 80205fe:	b2b6      	uxth	r6, r6
 8020600:	b2ad      	uxth	r5, r5
 8020602:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020606:	f105 0a01 	add.w	sl, r5, #1
 802060a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 802060e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8020612:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8020616:	ea47 070a 	orr.w	r7, r7, sl
 802061a:	f106 0a01 	add.w	sl, r6, #1
 802061e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8020622:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020626:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802062a:	ea47 070a 	orr.w	r7, r7, sl
 802062e:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8020632:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020634:	f10e 0e01 	add.w	lr, lr, #1
 8020638:	4410      	add	r0, r2
 802063a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802063c:	4411      	add	r1, r2
 802063e:	e7a3      	b.n	8020588 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020640:	b005      	add	sp, #20
 8020642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08020648 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802064c:	b085      	sub	sp, #20
 802064e:	468b      	mov	fp, r1
 8020650:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020654:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020656:	9203      	str	r2, [sp, #12]
 8020658:	6861      	ldr	r1, [r4, #4]
 802065a:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 802065e:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8020662:	fb01 2000 	mla	r0, r1, r0, r2
 8020666:	6822      	ldr	r2, [r4, #0]
 8020668:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 802066c:	f8d9 2000 	ldr.w	r2, [r9]
 8020670:	9200      	str	r2, [sp, #0]
 8020672:	f1bb 0f00 	cmp.w	fp, #0
 8020676:	dc03      	bgt.n	8020680 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020678:	9a03      	ldr	r2, [sp, #12]
 802067a:	2a00      	cmp	r2, #0
 802067c:	f340 8154 	ble.w	8020928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020680:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020682:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8020686:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 802068a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802068c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8020690:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8020694:	2b00      	cmp	r3, #0
 8020696:	dd0e      	ble.n	80206b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020698:	140c      	asrs	r4, r1, #16
 802069a:	d405      	bmi.n	80206a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 802069c:	42bc      	cmp	r4, r7
 802069e:	da03      	bge.n	80206a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80206a0:	1414      	asrs	r4, r2, #16
 80206a2:	d401      	bmi.n	80206a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80206a4:	42b4      	cmp	r4, r6
 80206a6:	db07      	blt.n	80206b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80206a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80206aa:	3b01      	subs	r3, #1
 80206ac:	3002      	adds	r0, #2
 80206ae:	4421      	add	r1, r4
 80206b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80206b2:	4422      	add	r2, r4
 80206b4:	e7ee      	b.n	8020694 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80206b6:	d017      	beq.n	80206e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80206b8:	1e5c      	subs	r4, r3, #1
 80206ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80206bc:	fb05 1504 	mla	r5, r5, r4, r1
 80206c0:	142d      	asrs	r5, r5, #16
 80206c2:	d409      	bmi.n	80206d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80206c4:	42bd      	cmp	r5, r7
 80206c6:	da07      	bge.n	80206d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80206c8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80206ca:	fb05 2404 	mla	r4, r5, r4, r2
 80206ce:	1424      	asrs	r4, r4, #16
 80206d0:	d402      	bmi.n	80206d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80206d2:	42b4      	cmp	r4, r6
 80206d4:	f2c0 80c0 	blt.w	8020858 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80206d8:	2700      	movs	r7, #0
 80206da:	19dc      	adds	r4, r3, r7
 80206dc:	2c00      	cmp	r4, #0
 80206de:	dc3e      	bgt.n	802075e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80206e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80206e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80206e8:	f1bb 0f00 	cmp.w	fp, #0
 80206ec:	f340 811c 	ble.w	8020928 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80206f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80206f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80206f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80206fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80206fe:	eeb0 6a62 	vmov.f32	s12, s5
 8020702:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020706:	ee31 1a05 	vadd.f32	s2, s2, s10
 802070a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802070e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8020712:	eeb0 6a43 	vmov.f32	s12, s6
 8020716:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802071a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 802071e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020722:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020726:	ee77 2a62 	vsub.f32	s5, s14, s5
 802072a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802072e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020732:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020736:	ee12 2a90 	vmov	r2, s5
 802073a:	eef0 2a47 	vmov.f32	s5, s14
 802073e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020742:	ee13 2a10 	vmov	r2, s6
 8020746:	9311      	str	r3, [sp, #68]	; 0x44
 8020748:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802074a:	eeb0 3a67 	vmov.f32	s6, s15
 802074e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020752:	9a03      	ldr	r2, [sp, #12]
 8020754:	9312      	str	r3, [sp, #72]	; 0x48
 8020756:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020758:	bf08      	it	eq
 802075a:	4613      	moveq	r3, r2
 802075c:	e789      	b.n	8020672 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802075e:	140e      	asrs	r6, r1, #16
 8020760:	d461      	bmi.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8020762:	f8d9 5008 	ldr.w	r5, [r9, #8]
 8020766:	42b5      	cmp	r5, r6
 8020768:	dd5d      	ble.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 802076a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 802076e:	d45a      	bmi.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8020770:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8020774:	4564      	cmp	r4, ip
 8020776:	dd56      	ble.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8020778:	b22d      	sxth	r5, r5
 802077a:	9c00      	ldr	r4, [sp, #0]
 802077c:	fb0c 6505 	mla	r5, ip, r5, r6
 8020780:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 8020784:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8020788:	d04d      	beq.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 802078a:	0a26      	lsrs	r6, r4, #8
 802078c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020790:	fa5f f58e 	uxtb.w	r5, lr
 8020794:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8020798:	9601      	str	r6, [sp, #4]
 802079a:	d04a      	beq.n	8020832 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802079c:	f06f 0601 	mvn.w	r6, #1
 80207a0:	fa1f fa85 	uxth.w	sl, r5
 80207a4:	fa5f fc8c 	uxtb.w	ip, ip
 80207a8:	43ed      	mvns	r5, r5
 80207aa:	437e      	muls	r6, r7
 80207ac:	b2e4      	uxtb	r4, r4
 80207ae:	fb1c fc0a 	smulbb	ip, ip, sl
 80207b2:	b2ed      	uxtb	r5, r5
 80207b4:	f830 8006 	ldrh.w	r8, [r0, r6]
 80207b8:	fb14 f40a 	smulbb	r4, r4, sl
 80207bc:	9602      	str	r6, [sp, #8]
 80207be:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80207c2:	f89d 6004 	ldrb.w	r6, [sp, #4]
 80207c6:	fb16 f60a 	smulbb	r6, r6, sl
 80207ca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80207ce:	fb0e cc05 	mla	ip, lr, r5, ip
 80207d2:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 80207d6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80207da:	fa1f fc8c 	uxth.w	ip, ip
 80207de:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80207e2:	fa5f f888 	uxtb.w	r8, r8
 80207e6:	fb0e 6e05 	mla	lr, lr, r5, r6
 80207ea:	fb08 4405 	mla	r4, r8, r5, r4
 80207ee:	f10c 0501 	add.w	r5, ip, #1
 80207f2:	fa1f fe8e 	uxth.w	lr, lr
 80207f6:	b2a4      	uxth	r4, r4
 80207f8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80207fc:	1c66      	adds	r6, r4, #1
 80207fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020802:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8020806:	9c02      	ldr	r4, [sp, #8]
 8020808:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 802080c:	ea4c 0c06 	orr.w	ip, ip, r6
 8020810:	f10e 0601 	add.w	r6, lr, #1
 8020814:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 8020818:	0976      	lsrs	r6, r6, #5
 802081a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 802081e:	ea4c 0c06 	orr.w	ip, ip, r6
 8020822:	f820 c004 	strh.w	ip, [r0, r4]
 8020826:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020828:	3f01      	subs	r7, #1
 802082a:	4421      	add	r1, r4
 802082c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802082e:	4422      	add	r2, r4
 8020830:	e753      	b.n	80206da <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020832:	4e3f      	ldr	r6, [pc, #252]	; (8020930 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8020834:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020838:	f06f 0501 	mvn.w	r5, #1
 802083c:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 8020840:	437d      	muls	r5, r7
 8020842:	ea4c 0c04 	orr.w	ip, ip, r4
 8020846:	9c01      	ldr	r4, [sp, #4]
 8020848:	00e6      	lsls	r6, r4, #3
 802084a:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 802084e:	ea4c 0c04 	orr.w	ip, ip, r4
 8020852:	f820 c005 	strh.w	ip, [r0, r5]
 8020856:	e7e6      	b.n	8020826 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8020858:	f04f 0800 	mov.w	r8, #0
 802085c:	eba3 0408 	sub.w	r4, r3, r8
 8020860:	2c00      	cmp	r4, #0
 8020862:	f77f af3d 	ble.w	80206e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8020866:	140d      	asrs	r5, r1, #16
 8020868:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 802086c:	1414      	asrs	r4, r2, #16
 802086e:	fb06 5404 	mla	r4, r6, r4, r5
 8020872:	9d00      	ldr	r5, [sp, #0]
 8020874:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8020878:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 802087c:	d042      	beq.n	8020904 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 802087e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020882:	fa5f f58c 	uxtb.w	r5, ip
 8020886:	ea4f 4714 	mov.w	r7, r4, lsr #16
 802088a:	ea4f 2614 	mov.w	r6, r4, lsr #8
 802088e:	d040      	beq.n	8020912 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8020890:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 8020894:	fa1f fa85 	uxth.w	sl, r5
 8020898:	b2ff      	uxtb	r7, r7
 802089a:	43ed      	mvns	r5, r5
 802089c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80208a0:	fb17 f70a 	smulbb	r7, r7, sl
 80208a4:	b2ed      	uxtb	r5, r5
 80208a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80208aa:	b2e4      	uxtb	r4, r4
 80208ac:	b2f6      	uxtb	r6, r6
 80208ae:	fb0c 7705 	mla	r7, ip, r5, r7
 80208b2:	ea4f 0cee 	mov.w	ip, lr, asr #3
 80208b6:	fb14 f40a 	smulbb	r4, r4, sl
 80208ba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80208be:	b2bf      	uxth	r7, r7
 80208c0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80208c4:	fb16 f60a 	smulbb	r6, r6, sl
 80208c8:	fa5f fe8e 	uxtb.w	lr, lr
 80208cc:	fb0e 4405 	mla	r4, lr, r5, r4
 80208d0:	fb0c 6c05 	mla	ip, ip, r5, r6
 80208d4:	1c7d      	adds	r5, r7, #1
 80208d6:	b2a4      	uxth	r4, r4
 80208d8:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 80208dc:	1c66      	adds	r6, r4, #1
 80208de:	fa1f fc8c 	uxth.w	ip, ip
 80208e2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80208e6:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80208ea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80208ee:	4337      	orrs	r7, r6
 80208f0:	f10c 0601 	add.w	r6, ip, #1
 80208f4:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80208f8:	0976      	lsrs	r6, r6, #5
 80208fa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80208fe:	4337      	orrs	r7, r6
 8020900:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 8020904:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020906:	f108 0801 	add.w	r8, r8, #1
 802090a:	4421      	add	r1, r4
 802090c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802090e:	4422      	add	r2, r4
 8020910:	e7a4      	b.n	802085c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020912:	4d07      	ldr	r5, [pc, #28]	; (8020930 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>)
 8020914:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8020918:	00f6      	lsls	r6, r6, #3
 802091a:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 802091e:	4327      	orrs	r7, r4
 8020920:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 8020924:	4327      	orrs	r7, r4
 8020926:	e7eb      	b.n	8020900 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b8>
 8020928:	b005      	add	sp, #20
 802092a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802092e:	bf00      	nop
 8020930:	fffff800 	.word	0xfffff800

08020934 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020934:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020938:	b087      	sub	sp, #28
 802093a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802093e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020940:	9204      	str	r2, [sp, #16]
 8020942:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8020946:	9101      	str	r1, [sp, #4]
 8020948:	9205      	str	r2, [sp, #20]
 802094a:	6841      	ldr	r1, [r0, #4]
 802094c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8020950:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8020954:	fb01 2404 	mla	r4, r1, r4, r2
 8020958:	6802      	ldr	r2, [r0, #0]
 802095a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 802095e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8020962:	3201      	adds	r2, #1
 8020964:	f022 0201 	bic.w	r2, r2, #1
 8020968:	9202      	str	r2, [sp, #8]
 802096a:	f8d8 2000 	ldr.w	r2, [r8]
 802096e:	9203      	str	r2, [sp, #12]
 8020970:	9a01      	ldr	r2, [sp, #4]
 8020972:	2a00      	cmp	r2, #0
 8020974:	dc03      	bgt.n	802097e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020976:	9a04      	ldr	r2, [sp, #16]
 8020978:	2a00      	cmp	r2, #0
 802097a:	f340 814d 	ble.w	8020c18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802097e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020980:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8020984:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8020988:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802098a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 802098e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8020992:	2b00      	cmp	r3, #0
 8020994:	dd0e      	ble.n	80209b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020996:	1402      	asrs	r2, r0, #16
 8020998:	d405      	bmi.n	80209a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802099a:	42ba      	cmp	r2, r7
 802099c:	da03      	bge.n	80209a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802099e:	140a      	asrs	r2, r1, #16
 80209a0:	d401      	bmi.n	80209a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80209a2:	42b2      	cmp	r2, r6
 80209a4:	db07      	blt.n	80209b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80209a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80209a8:	3b01      	subs	r3, #1
 80209aa:	3402      	adds	r4, #2
 80209ac:	4410      	add	r0, r2
 80209ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80209b0:	4411      	add	r1, r2
 80209b2:	e7ee      	b.n	8020992 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80209b4:	d019      	beq.n	80209ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80209b6:	1e5a      	subs	r2, r3, #1
 80209b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80209ba:	fb05 0502 	mla	r5, r5, r2, r0
 80209be:	142d      	asrs	r5, r5, #16
 80209c0:	d409      	bmi.n	80209d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80209c2:	42bd      	cmp	r5, r7
 80209c4:	da07      	bge.n	80209d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80209c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80209c8:	fb05 1202 	mla	r2, r5, r2, r1
 80209cc:	1412      	asrs	r2, r2, #16
 80209ce:	d402      	bmi.n	80209d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80209d0:	42b2      	cmp	r2, r6
 80209d2:	f2c0 80b7 	blt.w	8020b44 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80209d6:	f04f 0c00 	mov.w	ip, #0
 80209da:	eb03 020c 	add.w	r2, r3, ip
 80209de:	2a00      	cmp	r2, #0
 80209e0:	dc3f      	bgt.n	8020a62 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12e>
 80209e2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80209e6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80209ea:	9b01      	ldr	r3, [sp, #4]
 80209ec:	2b00      	cmp	r3, #0
 80209ee:	f340 8113 	ble.w	8020c18 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80209f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80209f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80209f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80209fc:	eeb0 6a62 	vmov.f32	s12, s5
 8020a00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020a04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020a0c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8020a10:	eeb0 6a43 	vmov.f32	s12, s6
 8020a14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020a18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8020a1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020a2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020a30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020a34:	ee12 2a90 	vmov	r2, s5
 8020a38:	eef0 2a47 	vmov.f32	s5, s14
 8020a3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a40:	ee13 2a10 	vmov	r2, s6
 8020a44:	9313      	str	r3, [sp, #76]	; 0x4c
 8020a46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020a48:	eeb0 3a67 	vmov.f32	s6, s15
 8020a4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8020a50:	9314      	str	r3, [sp, #80]	; 0x50
 8020a52:	9b01      	ldr	r3, [sp, #4]
 8020a54:	9a04      	ldr	r2, [sp, #16]
 8020a56:	3b01      	subs	r3, #1
 8020a58:	9301      	str	r3, [sp, #4]
 8020a5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020a5c:	bf08      	it	eq
 8020a5e:	4613      	moveq	r3, r2
 8020a60:	e786      	b.n	8020970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020a62:	1405      	asrs	r5, r0, #16
 8020a64:	d467      	bmi.n	8020b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020a66:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8020a6a:	42aa      	cmp	r2, r5
 8020a6c:	dd63      	ble.n	8020b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020a6e:	140e      	asrs	r6, r1, #16
 8020a70:	d461      	bmi.n	8020b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020a72:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8020a76:	42b2      	cmp	r2, r6
 8020a78:	dd5d      	ble.n	8020b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020a7a:	9a02      	ldr	r2, [sp, #8]
 8020a7c:	fb06 5502 	mla	r5, r6, r2, r5
 8020a80:	9e03      	ldr	r6, [sp, #12]
 8020a82:	086a      	lsrs	r2, r5, #1
 8020a84:	5cb2      	ldrb	r2, [r6, r2]
 8020a86:	07ee      	lsls	r6, r5, #31
 8020a88:	bf54      	ite	pl
 8020a8a:	f002 020f 	andpl.w	r2, r2, #15
 8020a8e:	1112      	asrmi	r2, r2, #4
 8020a90:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020a94:	b2d2      	uxtb	r2, r2
 8020a96:	2a00      	cmp	r2, #0
 8020a98:	d04d      	beq.n	8020b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020a9a:	f06f 0601 	mvn.w	r6, #1
 8020a9e:	4d60      	ldr	r5, [pc, #384]	; (8020c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8020aa0:	fb06 fb0c 	mul.w	fp, r6, ip
 8020aa4:	9e05      	ldr	r6, [sp, #20]
 8020aa6:	682d      	ldr	r5, [r5, #0]
 8020aa8:	4372      	muls	r2, r6
 8020aaa:	f834 e00b 	ldrh.w	lr, [r4, fp]
 8020aae:	0a2f      	lsrs	r7, r5, #8
 8020ab0:	1c56      	adds	r6, r2, #1
 8020ab2:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8020ab6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020aba:	00ed      	lsls	r5, r5, #3
 8020abc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8020ac0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020ac4:	ea4f 262e 	mov.w	r6, lr, asr #8
 8020ac8:	1212      	asrs	r2, r2, #8
 8020aca:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020ace:	b2ed      	uxtb	r5, r5
 8020ad0:	fa1f fa82 	uxth.w	sl, r2
 8020ad4:	43d2      	mvns	r2, r2
 8020ad6:	fb17 f70a 	smulbb	r7, r7, sl
 8020ada:	b2d2      	uxtb	r2, r2
 8020adc:	fb19 f90a 	smulbb	r9, r9, sl
 8020ae0:	fb06 7602 	mla	r6, r6, r2, r7
 8020ae4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8020ae8:	fb15 f50a 	smulbb	r5, r5, sl
 8020aec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020af0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020af4:	b2b6      	uxth	r6, r6
 8020af6:	fa5f fe8e 	uxtb.w	lr, lr
 8020afa:	fb07 9702 	mla	r7, r7, r2, r9
 8020afe:	fb0e 5502 	mla	r5, lr, r2, r5
 8020b02:	b2bf      	uxth	r7, r7
 8020b04:	b2ad      	uxth	r5, r5
 8020b06:	f107 0901 	add.w	r9, r7, #1
 8020b0a:	f105 0e01 	add.w	lr, r5, #1
 8020b0e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020b12:	f106 0901 	add.w	r9, r6, #1
 8020b16:	eb0e 2e15 	add.w	lr, lr, r5, lsr #8
 8020b1a:	097f      	lsrs	r7, r7, #5
 8020b1c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8020b20:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8020b24:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020b28:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020b2c:	4337      	orrs	r7, r6
 8020b2e:	ea47 070e 	orr.w	r7, r7, lr
 8020b32:	f824 700b 	strh.w	r7, [r4, fp]
 8020b36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020b38:	f10c 3cff 	add.w	ip, ip, #4294967295
 8020b3c:	4410      	add	r0, r2
 8020b3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020b40:	4411      	add	r1, r2
 8020b42:	e74a      	b.n	80209da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8020b44:	f04f 0e00 	mov.w	lr, #0
 8020b48:	eba3 020e 	sub.w	r2, r3, lr
 8020b4c:	2a00      	cmp	r2, #0
 8020b4e:	f77f af48 	ble.w	80209e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8020b52:	1402      	asrs	r2, r0, #16
 8020b54:	9e02      	ldr	r6, [sp, #8]
 8020b56:	140d      	asrs	r5, r1, #16
 8020b58:	fb06 2505 	mla	r5, r6, r5, r2
 8020b5c:	9e03      	ldr	r6, [sp, #12]
 8020b5e:	086a      	lsrs	r2, r5, #1
 8020b60:	07ed      	lsls	r5, r5, #31
 8020b62:	5cb2      	ldrb	r2, [r6, r2]
 8020b64:	bf54      	ite	pl
 8020b66:	f002 020f 	andpl.w	r2, r2, #15
 8020b6a:	1112      	asrmi	r2, r2, #4
 8020b6c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020b70:	b2d2      	uxtb	r2, r2
 8020b72:	2a00      	cmp	r2, #0
 8020b74:	d049      	beq.n	8020c0a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8020b76:	9e05      	ldr	r6, [sp, #20]
 8020b78:	4d29      	ldr	r5, [pc, #164]	; (8020c20 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8020b7a:	4372      	muls	r2, r6
 8020b7c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8020b80:	682d      	ldr	r5, [r5, #0]
 8020b82:	1c56      	adds	r6, r2, #1
 8020b84:	0a2f      	lsrs	r7, r5, #8
 8020b86:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8020b8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020b8e:	ea4f 262c 	mov.w	r6, ip, asr #8
 8020b92:	1212      	asrs	r2, r2, #8
 8020b94:	ea4f 09d5 	mov.w	r9, r5, lsr #3
 8020b98:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020b9c:	fa1f fa82 	uxth.w	sl, r2
 8020ba0:	43d2      	mvns	r2, r2
 8020ba2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020ba6:	00ed      	lsls	r5, r5, #3
 8020ba8:	fb17 f70a 	smulbb	r7, r7, sl
 8020bac:	b2d2      	uxtb	r2, r2
 8020bae:	fb19 f90a 	smulbb	r9, r9, sl
 8020bb2:	b2ed      	uxtb	r5, r5
 8020bb4:	fb06 7602 	mla	r6, r6, r2, r7
 8020bb8:	ea4f 07ec 	mov.w	r7, ip, asr #3
 8020bbc:	fb15 f50a 	smulbb	r5, r5, sl
 8020bc0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020bc4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020bc8:	b2b6      	uxth	r6, r6
 8020bca:	fa5f fc8c 	uxtb.w	ip, ip
 8020bce:	fb07 9702 	mla	r7, r7, r2, r9
 8020bd2:	f106 0b01 	add.w	fp, r6, #1
 8020bd6:	fb0c 5502 	mla	r5, ip, r2, r5
 8020bda:	b2bf      	uxth	r7, r7
 8020bdc:	b2ad      	uxth	r5, r5
 8020bde:	f107 0901 	add.w	r9, r7, #1
 8020be2:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8020be6:	f105 0c01 	add.w	ip, r5, #1
 8020bea:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020bee:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8020bf2:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8020bf6:	097f      	lsrs	r7, r7, #5
 8020bf8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020bfc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8020c00:	4337      	orrs	r7, r6
 8020c02:	ea47 070c 	orr.w	r7, r7, ip
 8020c06:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8020c0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020c0c:	f10e 0e01 	add.w	lr, lr, #1
 8020c10:	4410      	add	r0, r2
 8020c12:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020c14:	4411      	add	r1, r2
 8020c16:	e797      	b.n	8020b48 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020c18:	b007      	add	sp, #28
 8020c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c1e:	bf00      	nop
 8020c20:	20004190 	.word	0x20004190

08020c24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c28:	b087      	sub	sp, #28
 8020c2a:	468b      	mov	fp, r1
 8020c2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020c30:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020c32:	9205      	str	r2, [sp, #20]
 8020c34:	6841      	ldr	r1, [r0, #4]
 8020c36:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8020c3a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8020c3e:	fb01 2404 	mla	r4, r1, r4, r2
 8020c42:	6802      	ldr	r2, [r0, #0]
 8020c44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8020c48:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8020c4c:	3201      	adds	r2, #1
 8020c4e:	f022 0201 	bic.w	r2, r2, #1
 8020c52:	9201      	str	r2, [sp, #4]
 8020c54:	f8d8 2000 	ldr.w	r2, [r8]
 8020c58:	9202      	str	r2, [sp, #8]
 8020c5a:	f1bb 0f00 	cmp.w	fp, #0
 8020c5e:	dc03      	bgt.n	8020c68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8020c60:	9a05      	ldr	r2, [sp, #20]
 8020c62:	2a00      	cmp	r2, #0
 8020c64:	f340 8158 	ble.w	8020f18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020c68:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020c6a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8020c6e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8020c72:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020c74:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8020c78:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8020c7c:	2b00      	cmp	r3, #0
 8020c7e:	dd0e      	ble.n	8020c9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020c80:	1402      	asrs	r2, r0, #16
 8020c82:	d405      	bmi.n	8020c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c84:	42ba      	cmp	r2, r7
 8020c86:	da03      	bge.n	8020c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c88:	140a      	asrs	r2, r1, #16
 8020c8a:	d401      	bmi.n	8020c90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8020c8c:	42b2      	cmp	r2, r6
 8020c8e:	db07      	blt.n	8020ca0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020c90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020c92:	3b01      	subs	r3, #1
 8020c94:	3402      	adds	r4, #2
 8020c96:	4410      	add	r0, r2
 8020c98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020c9a:	4411      	add	r1, r2
 8020c9c:	e7ee      	b.n	8020c7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020c9e:	d017      	beq.n	8020cd0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8020ca0:	1e5a      	subs	r2, r3, #1
 8020ca2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8020ca4:	fb05 0502 	mla	r5, r5, r2, r0
 8020ca8:	142d      	asrs	r5, r5, #16
 8020caa:	d409      	bmi.n	8020cc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020cac:	42bd      	cmp	r5, r7
 8020cae:	da07      	bge.n	8020cc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020cb0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8020cb2:	fb05 1202 	mla	r2, r5, r2, r1
 8020cb6:	1412      	asrs	r2, r2, #16
 8020cb8:	d402      	bmi.n	8020cc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020cba:	42b2      	cmp	r2, r6
 8020cbc:	f2c0 80c0 	blt.w	8020e40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8020cc0:	2600      	movs	r6, #0
 8020cc2:	199a      	adds	r2, r3, r6
 8020cc4:	2a00      	cmp	r2, #0
 8020cc6:	dc3e      	bgt.n	8020d46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 8020cc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020ccc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8020cd0:	f1bb 0f00 	cmp.w	fp, #0
 8020cd4:	f340 8120 	ble.w	8020f18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8020cd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020cdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020cde:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020ce2:	f1bb 0b01 	subs.w	fp, fp, #1
 8020ce6:	eeb0 6a62 	vmov.f32	s12, s5
 8020cea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020cee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020cf2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020cf6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8020cfa:	eeb0 6a43 	vmov.f32	s12, s6
 8020cfe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020d02:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8020d06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020d0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020d0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020d12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020d16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020d1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020d1e:	ee12 2a90 	vmov	r2, s5
 8020d22:	eef0 2a47 	vmov.f32	s5, s14
 8020d26:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d2a:	ee13 2a10 	vmov	r2, s6
 8020d2e:	9313      	str	r3, [sp, #76]	; 0x4c
 8020d30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d32:	eeb0 3a67 	vmov.f32	s6, s15
 8020d36:	fb92 f3f3 	sdiv	r3, r2, r3
 8020d3a:	9a05      	ldr	r2, [sp, #20]
 8020d3c:	9314      	str	r3, [sp, #80]	; 0x50
 8020d3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8020d40:	bf08      	it	eq
 8020d42:	4613      	moveq	r3, r2
 8020d44:	e789      	b.n	8020c5a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8020d46:	1405      	asrs	r5, r0, #16
 8020d48:	d467      	bmi.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020d4a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8020d4e:	42aa      	cmp	r2, r5
 8020d50:	dd63      	ble.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020d52:	140f      	asrs	r7, r1, #16
 8020d54:	d461      	bmi.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020d56:	f8d8 200c 	ldr.w	r2, [r8, #12]
 8020d5a:	42ba      	cmp	r2, r7
 8020d5c:	dd5d      	ble.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020d5e:	9a01      	ldr	r2, [sp, #4]
 8020d60:	fb07 5502 	mla	r5, r7, r2, r5
 8020d64:	9f02      	ldr	r7, [sp, #8]
 8020d66:	086a      	lsrs	r2, r5, #1
 8020d68:	5cba      	ldrb	r2, [r7, r2]
 8020d6a:	07ef      	lsls	r7, r5, #31
 8020d6c:	bf54      	ite	pl
 8020d6e:	f002 020f 	andpl.w	r2, r2, #15
 8020d72:	1112      	asrmi	r2, r2, #4
 8020d74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020d78:	b2d2      	uxtb	r2, r2
 8020d7a:	2a00      	cmp	r2, #0
 8020d7c:	d04d      	beq.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020d7e:	4d68      	ldr	r5, [pc, #416]	; (8020f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8020d80:	2aff      	cmp	r2, #255	; 0xff
 8020d82:	682f      	ldr	r7, [r5, #0]
 8020d84:	ea4f 05d7 	mov.w	r5, r7, lsr #3
 8020d88:	ea4f 2917 	mov.w	r9, r7, lsr #8
 8020d8c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020d90:	ea4f 07c7 	mov.w	r7, r7, lsl #3
 8020d94:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8020d98:	9503      	str	r5, [sp, #12]
 8020d9a:	b2ff      	uxtb	r7, r7
 8020d9c:	d043      	beq.n	8020e26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8020d9e:	f06f 0501 	mvn.w	r5, #1
 8020da2:	fa1f fa82 	uxth.w	sl, r2
 8020da6:	43d2      	mvns	r2, r2
 8020da8:	fb19 f90a 	smulbb	r9, r9, sl
 8020dac:	4375      	muls	r5, r6
 8020dae:	fb17 f70a 	smulbb	r7, r7, sl
 8020db2:	b2d2      	uxtb	r2, r2
 8020db4:	f834 e005 	ldrh.w	lr, [r4, r5]
 8020db8:	9504      	str	r5, [sp, #16]
 8020dba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8020dbe:	9d03      	ldr	r5, [sp, #12]
 8020dc0:	fb15 f50a 	smulbb	r5, r5, sl
 8020dc4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8020dc8:	fb0c 9c02 	mla	ip, ip, r2, r9
 8020dcc:	ea4f 09ee 	mov.w	r9, lr, asr #3
 8020dd0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020dd4:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020dd8:	fa1f fc8c 	uxth.w	ip, ip
 8020ddc:	fa5f fe8e 	uxtb.w	lr, lr
 8020de0:	fb09 5502 	mla	r5, r9, r2, r5
 8020de4:	fb0e 7702 	mla	r7, lr, r2, r7
 8020de8:	b2ad      	uxth	r5, r5
 8020dea:	b2bf      	uxth	r7, r7
 8020dec:	f105 0901 	add.w	r9, r5, #1
 8020df0:	1c7a      	adds	r2, r7, #1
 8020df2:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8020df6:	f10c 0901 	add.w	r9, ip, #1
 8020dfa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8020dfe:	9a04      	ldr	r2, [sp, #16]
 8020e00:	096d      	lsrs	r5, r5, #5
 8020e02:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8020e06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020e0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020e0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8020e12:	ea45 050c 	orr.w	r5, r5, ip
 8020e16:	433d      	orrs	r5, r7
 8020e18:	52a5      	strh	r5, [r4, r2]
 8020e1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020e1c:	3e01      	subs	r6, #1
 8020e1e:	4410      	add	r0, r2
 8020e20:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020e22:	4411      	add	r1, r2
 8020e24:	e74d      	b.n	8020cc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8020e26:	f06f 0201 	mvn.w	r2, #1
 8020e2a:	fb02 fe06 	mul.w	lr, r2, r6
 8020e2e:	9a03      	ldr	r2, [sp, #12]
 8020e30:	00d5      	lsls	r5, r2, #3
 8020e32:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8020e36:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 8020e3a:	f824 500e 	strh.w	r5, [r4, lr]
 8020e3e:	e7ec      	b.n	8020e1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8020e40:	f04f 0e00 	mov.w	lr, #0
 8020e44:	eba3 020e 	sub.w	r2, r3, lr
 8020e48:	2a00      	cmp	r2, #0
 8020e4a:	f77f af3d 	ble.w	8020cc8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8020e4e:	1402      	asrs	r2, r0, #16
 8020e50:	9e01      	ldr	r6, [sp, #4]
 8020e52:	140d      	asrs	r5, r1, #16
 8020e54:	fb06 2505 	mla	r5, r6, r5, r2
 8020e58:	9e02      	ldr	r6, [sp, #8]
 8020e5a:	086a      	lsrs	r2, r5, #1
 8020e5c:	07ed      	lsls	r5, r5, #31
 8020e5e:	5cb2      	ldrb	r2, [r6, r2]
 8020e60:	bf54      	ite	pl
 8020e62:	f002 020f 	andpl.w	r2, r2, #15
 8020e66:	1112      	asrmi	r2, r2, #4
 8020e68:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020e6c:	b2d2      	uxtb	r2, r2
 8020e6e:	2a00      	cmp	r2, #0
 8020e70:	d045      	beq.n	8020efe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8020e72:	4d2b      	ldr	r5, [pc, #172]	; (8020f20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 8020e74:	2aff      	cmp	r2, #255	; 0xff
 8020e76:	682e      	ldr	r6, [r5, #0]
 8020e78:	ea4f 2916 	mov.w	r9, r6, lsr #8
 8020e7c:	ea4f 05d6 	mov.w	r5, r6, lsr #3
 8020e80:	ea4f 06c6 	mov.w	r6, r6, lsl #3
 8020e84:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8020e88:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8020e8c:	b2f6      	uxtb	r6, r6
 8020e8e:	d03d      	beq.n	8020f0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8020e90:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8020e94:	fa1f fa82 	uxth.w	sl, r2
 8020e98:	43d2      	mvns	r2, r2
 8020e9a:	fb19 f90a 	smulbb	r9, r9, sl
 8020e9e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8020ea2:	fb15 f50a 	smulbb	r5, r5, sl
 8020ea6:	b2d2      	uxtb	r2, r2
 8020ea8:	fb16 f60a 	smulbb	r6, r6, sl
 8020eac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8020eb0:	fb07 9702 	mla	r7, r7, r2, r9
 8020eb4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8020eb8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020ebc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8020ec0:	b2bf      	uxth	r7, r7
 8020ec2:	fa5f fc8c 	uxtb.w	ip, ip
 8020ec6:	fb09 5502 	mla	r5, r9, r2, r5
 8020eca:	fb0c 6602 	mla	r6, ip, r2, r6
 8020ece:	b2ad      	uxth	r5, r5
 8020ed0:	b2b6      	uxth	r6, r6
 8020ed2:	f105 0901 	add.w	r9, r5, #1
 8020ed6:	1c72      	adds	r2, r6, #1
 8020ed8:	eb09 2515 	add.w	r5, r9, r5, lsr #8
 8020edc:	f107 0901 	add.w	r9, r7, #1
 8020ee0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020ee4:	096d      	lsrs	r5, r5, #5
 8020ee6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8020eea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8020eee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8020ef2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8020ef6:	433d      	orrs	r5, r7
 8020ef8:	4335      	orrs	r5, r6
 8020efa:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 8020efe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8020f00:	f10e 0e01 	add.w	lr, lr, #1
 8020f04:	4410      	add	r0, r2
 8020f06:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020f08:	4411      	add	r1, r2
 8020f0a:	e79b      	b.n	8020e44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x220>
 8020f0c:	00ed      	lsls	r5, r5, #3
 8020f0e:	ea45 2509 	orr.w	r5, r5, r9, lsl #8
 8020f12:	ea45 05d6 	orr.w	r5, r5, r6, lsr #3
 8020f16:	e7f0      	b.n	8020efa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8020f18:	b007      	add	sp, #28
 8020f1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f1e:	bf00      	nop
 8020f20:	20004190 	.word	0x20004190

08020f24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8020f24:	4770      	bx	lr

08020f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8020f26:	4770      	bx	lr

08020f28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8020f28:	4770      	bx	lr

08020f2a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8020f2a:	4770      	bx	lr

08020f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020f2c:	4770      	bx	lr

08020f2e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020f2e:	4770      	bx	lr

08020f30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020f30:	4770      	bx	lr

08020f32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020f32:	4770      	bx	lr

08020f34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020f34:	4770      	bx	lr

08020f36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8020f36:	4770      	bx	lr

08020f38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020f38:	4770      	bx	lr

08020f3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020f3a:	4770      	bx	lr

08020f3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020f3c:	4770      	bx	lr

08020f3e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8020f3e:	4770      	bx	lr

08020f40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020f40:	4770      	bx	lr

08020f42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020f42:	4770      	bx	lr

08020f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8020f44:	4770      	bx	lr

08020f46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8020f46:	4770      	bx	lr

08020f48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8020f48:	4770      	bx	lr

08020f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8020f4a:	4770      	bx	lr

08020f4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020f4c:	4770      	bx	lr

08020f4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8020f4e:	4770      	bx	lr

08020f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020f50:	4770      	bx	lr

08020f52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8020f52:	4770      	bx	lr

08020f54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8020f54:	4770      	bx	lr

08020f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8020f56:	4770      	bx	lr

08020f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8020f58:	4770      	bx	lr

08020f5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8020f5a:	4770      	bx	lr

08020f5c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8020f5c:	b508      	push	{r3, lr}
 8020f5e:	4b06      	ldr	r3, [pc, #24]	; (8020f78 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8020f60:	8818      	ldrh	r0, [r3, #0]
 8020f62:	b928      	cbnz	r0, 8020f70 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8020f64:	4b05      	ldr	r3, [pc, #20]	; (8020f7c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8020f66:	2154      	movs	r1, #84	; 0x54
 8020f68:	4a05      	ldr	r2, [pc, #20]	; (8020f80 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8020f6a:	4806      	ldr	r0, [pc, #24]	; (8020f84 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8020f6c:	f00a ffbc 	bl	802bee8 <__assert_func>
 8020f70:	0040      	lsls	r0, r0, #1
 8020f72:	b280      	uxth	r0, r0
 8020f74:	bd08      	pop	{r3, pc}
 8020f76:	bf00      	nop
 8020f78:	20004160 	.word	0x20004160
 8020f7c:	08032221 	.word	0x08032221
 8020f80:	080327ab 	.word	0x080327ab
 8020f84:	08032263 	.word	0x08032263

08020f88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8020f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f8c:	b08b      	sub	sp, #44	; 0x2c
 8020f8e:	460f      	mov	r7, r1
 8020f90:	4616      	mov	r6, r2
 8020f92:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8020f96:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8020f9a:	f1bb 0f00 	cmp.w	fp, #0
 8020f9e:	d046      	beq.n	802102e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8020fa0:	6810      	ldr	r0, [r2, #0]
 8020fa2:	ad06      	add	r5, sp, #24
 8020fa4:	6851      	ldr	r1, [r2, #4]
 8020fa6:	c503      	stmia	r5!, {r0, r1}
 8020fa8:	6818      	ldr	r0, [r3, #0]
 8020faa:	ad08      	add	r5, sp, #32
 8020fac:	6859      	ldr	r1, [r3, #4]
 8020fae:	c503      	stmia	r5!, {r0, r1}
 8020fb0:	a806      	add	r0, sp, #24
 8020fb2:	f7fa f933 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020fb6:	4631      	mov	r1, r6
 8020fb8:	a808      	add	r0, sp, #32
 8020fba:	f7fa f917 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020fbe:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8020fc2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8020fc6:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8020fca:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8020fce:	fb16 2103 	smlabb	r1, r6, r3, r2
 8020fd2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8020fd6:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8020fda:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8020fde:	4f5d      	ldr	r7, [pc, #372]	; (8021154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 8020fe0:	440a      	add	r2, r1
 8020fe2:	6838      	ldr	r0, [r7, #0]
 8020fe4:	46b9      	mov	r9, r7
 8020fe6:	f8ad 2020 	strh.w	r2, [sp, #32]
 8020fea:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8020fee:	4413      	add	r3, r2
 8020ff0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8020ff4:	6803      	ldr	r3, [r0, #0]
 8020ff6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020ff8:	4798      	blx	r3
 8020ffa:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8020ffe:	d019      	beq.n	8021034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8021000:	f010 0f04 	tst.w	r0, #4
 8021004:	d01a      	beq.n	802103c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8021006:	f8d9 0000 	ldr.w	r0, [r9]
 802100a:	b2ad      	uxth	r5, r5
 802100c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8021010:	6801      	ldr	r1, [r0, #0]
 8021012:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021016:	9501      	str	r5, [sp, #4]
 8021018:	e9cd b403 	strd	fp, r4, [sp, #12]
 802101c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8021020:	9402      	str	r4, [sp, #8]
 8021022:	fa1f f488 	uxth.w	r4, r8
 8021026:	9400      	str	r4, [sp, #0]
 8021028:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 802102a:	4631      	mov	r1, r6
 802102c:	47a0      	blx	r4
 802102e:	b00b      	add	sp, #44	; 0x2c
 8021030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021034:	b914      	cbnz	r4, 802103c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8021036:	f010 0f01 	tst.w	r0, #1
 802103a:	e7e3      	b.n	8021004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 802103c:	f8d9 0000 	ldr.w	r0, [r9]
 8021040:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8021044:	6803      	ldr	r3, [r0, #0]
 8021046:	6a1b      	ldr	r3, [r3, #32]
 8021048:	4798      	blx	r3
 802104a:	4b43      	ldr	r3, [pc, #268]	; (8021158 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 802104c:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8021050:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8021054:	881a      	ldrh	r2, [r3, #0]
 8021056:	469a      	mov	sl, r3
 8021058:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 802105c:	fb05 f502 	mul.w	r5, r5, r2
 8021060:	fb02 1404 	mla	r4, r2, r4, r1
 8021064:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021068:	d058      	beq.n	802111c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x194>
 802106a:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 802106e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8021072:	fa1f f28b 	uxth.w	r2, fp
 8021076:	469e      	mov	lr, r3
 8021078:	fa1f f989 	uxth.w	r9, r9
 802107c:	42ac      	cmp	r4, r5
 802107e:	d263      	bcs.n	8021148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 8021080:	eb04 0a07 	add.w	sl, r4, r7
 8021084:	4554      	cmp	r4, sl
 8021086:	d23c      	bcs.n	8021102 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17a>
 8021088:	8821      	ldrh	r1, [r4, #0]
 802108a:	f836 3b02 	ldrh.w	r3, [r6], #2
 802108e:	1208      	asrs	r0, r1, #8
 8021090:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8021094:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021098:	ea4f 0be1 	mov.w	fp, r1, asr #3
 802109c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80210a0:	00c9      	lsls	r1, r1, #3
 80210a2:	fb10 f009 	smulbb	r0, r0, r9
 80210a6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80210aa:	b2c9      	uxtb	r1, r1
 80210ac:	fb0c 0c02 	mla	ip, ip, r2, r0
 80210b0:	10d8      	asrs	r0, r3, #3
 80210b2:	fb11 f109 	smulbb	r1, r1, r9
 80210b6:	00db      	lsls	r3, r3, #3
 80210b8:	fa1f fc8c 	uxth.w	ip, ip
 80210bc:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80210c0:	fb1b fb09 	smulbb	fp, fp, r9
 80210c4:	b2db      	uxtb	r3, r3
 80210c6:	fb03 1302 	mla	r3, r3, r2, r1
 80210ca:	f10c 0101 	add.w	r1, ip, #1
 80210ce:	fb00 b002 	mla	r0, r0, r2, fp
 80210d2:	b29b      	uxth	r3, r3
 80210d4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80210d8:	1c59      	adds	r1, r3, #1
 80210da:	b280      	uxth	r0, r0
 80210dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80210e0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80210e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80210e8:	ea4c 0c03 	orr.w	ip, ip, r3
 80210ec:	1c43      	adds	r3, r0, #1
 80210ee:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80210f2:	0940      	lsrs	r0, r0, #5
 80210f4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80210f8:	ea4c 0c00 	orr.w	ip, ip, r0
 80210fc:	f824 cb02 	strh.w	ip, [r4], #2
 8021100:	e7c0      	b.n	8021084 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 8021102:	f8be 3000 	ldrh.w	r3, [lr]
 8021106:	eba3 0308 	sub.w	r3, r3, r8
 802110a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802110e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8021112:	eba3 0308 	sub.w	r3, r3, r8
 8021116:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 802111a:	e7af      	b.n	802107c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 802111c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8021120:	f8d9 0000 	ldr.w	r0, [r9]
 8021124:	42ac      	cmp	r4, r5
 8021126:	6803      	ldr	r3, [r0, #0]
 8021128:	d20e      	bcs.n	8021148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c0>
 802112a:	f8d3 802c 	ldr.w	r8, [r3, #44]	; 0x2c
 802112e:	4632      	mov	r2, r6
 8021130:	463b      	mov	r3, r7
 8021132:	4621      	mov	r1, r4
 8021134:	47c0      	blx	r8
 8021136:	f8ba 3000 	ldrh.w	r3, [sl]
 802113a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802113e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8021142:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8021146:	e7eb      	b.n	8021120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x198>
 8021148:	4b02      	ldr	r3, [pc, #8]	; (8021154 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1cc>)
 802114a:	6818      	ldr	r0, [r3, #0]
 802114c:	6803      	ldr	r3, [r0, #0]
 802114e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021150:	4798      	blx	r3
 8021152:	e76c      	b.n	802102e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8021154:	20004168 	.word	0x20004168
 8021158:	20004160 	.word	0x20004160

0802115c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 802115c:	b510      	push	{r4, lr}
 802115e:	4604      	mov	r4, r0
 8021160:	2104      	movs	r1, #4
 8021162:	f00a fc80 	bl	802ba66 <_ZdlPvj>
 8021166:	4620      	mov	r0, r4
 8021168:	bd10      	pop	{r4, pc}

0802116a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 802116a:	b510      	push	{r4, lr}
 802116c:	4604      	mov	r4, r0
 802116e:	2104      	movs	r1, #4
 8021170:	f00a fc79 	bl	802ba66 <_ZdlPvj>
 8021174:	4620      	mov	r0, r4
 8021176:	bd10      	pop	{r4, pc}

08021178 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8021178:	b510      	push	{r4, lr}
 802117a:	4604      	mov	r4, r0
 802117c:	2104      	movs	r1, #4
 802117e:	f00a fc72 	bl	802ba66 <_ZdlPvj>
 8021182:	4620      	mov	r0, r4
 8021184:	bd10      	pop	{r4, pc}

08021186 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8021186:	b510      	push	{r4, lr}
 8021188:	4604      	mov	r4, r0
 802118a:	2104      	movs	r1, #4
 802118c:	f00a fc6b 	bl	802ba66 <_ZdlPvj>
 8021190:	4620      	mov	r0, r4
 8021192:	bd10      	pop	{r4, pc}

08021194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8021194:	b510      	push	{r4, lr}
 8021196:	4604      	mov	r4, r0
 8021198:	2104      	movs	r1, #4
 802119a:	f00a fc64 	bl	802ba66 <_ZdlPvj>
 802119e:	4620      	mov	r0, r4
 80211a0:	bd10      	pop	{r4, pc}

080211a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80211a2:	b510      	push	{r4, lr}
 80211a4:	4604      	mov	r4, r0
 80211a6:	2104      	movs	r1, #4
 80211a8:	f00a fc5d 	bl	802ba66 <_ZdlPvj>
 80211ac:	4620      	mov	r0, r4
 80211ae:	bd10      	pop	{r4, pc}

080211b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80211b0:	b510      	push	{r4, lr}
 80211b2:	4604      	mov	r4, r0
 80211b4:	2104      	movs	r1, #4
 80211b6:	f00a fc56 	bl	802ba66 <_ZdlPvj>
 80211ba:	4620      	mov	r0, r4
 80211bc:	bd10      	pop	{r4, pc}

080211be <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80211be:	b510      	push	{r4, lr}
 80211c0:	4604      	mov	r4, r0
 80211c2:	2104      	movs	r1, #4
 80211c4:	f00a fc4f 	bl	802ba66 <_ZdlPvj>
 80211c8:	4620      	mov	r0, r4
 80211ca:	bd10      	pop	{r4, pc}

080211cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80211cc:	b510      	push	{r4, lr}
 80211ce:	4604      	mov	r4, r0
 80211d0:	2104      	movs	r1, #4
 80211d2:	f00a fc48 	bl	802ba66 <_ZdlPvj>
 80211d6:	4620      	mov	r0, r4
 80211d8:	bd10      	pop	{r4, pc}

080211da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80211da:	b510      	push	{r4, lr}
 80211dc:	4604      	mov	r4, r0
 80211de:	2104      	movs	r1, #4
 80211e0:	f00a fc41 	bl	802ba66 <_ZdlPvj>
 80211e4:	4620      	mov	r0, r4
 80211e6:	bd10      	pop	{r4, pc}

080211e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80211e8:	b510      	push	{r4, lr}
 80211ea:	4604      	mov	r4, r0
 80211ec:	2104      	movs	r1, #4
 80211ee:	f00a fc3a 	bl	802ba66 <_ZdlPvj>
 80211f2:	4620      	mov	r0, r4
 80211f4:	bd10      	pop	{r4, pc}

080211f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80211f6:	b510      	push	{r4, lr}
 80211f8:	4604      	mov	r4, r0
 80211fa:	2104      	movs	r1, #4
 80211fc:	f00a fc33 	bl	802ba66 <_ZdlPvj>
 8021200:	4620      	mov	r0, r4
 8021202:	bd10      	pop	{r4, pc}

08021204 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8021204:	b510      	push	{r4, lr}
 8021206:	4604      	mov	r4, r0
 8021208:	2104      	movs	r1, #4
 802120a:	f00a fc2c 	bl	802ba66 <_ZdlPvj>
 802120e:	4620      	mov	r0, r4
 8021210:	bd10      	pop	{r4, pc}

08021212 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8021212:	b510      	push	{r4, lr}
 8021214:	4604      	mov	r4, r0
 8021216:	2104      	movs	r1, #4
 8021218:	f00a fc25 	bl	802ba66 <_ZdlPvj>
 802121c:	4620      	mov	r0, r4
 802121e:	bd10      	pop	{r4, pc}

08021220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8021220:	b510      	push	{r4, lr}
 8021222:	4604      	mov	r4, r0
 8021224:	2104      	movs	r1, #4
 8021226:	f00a fc1e 	bl	802ba66 <_ZdlPvj>
 802122a:	4620      	mov	r0, r4
 802122c:	bd10      	pop	{r4, pc}

0802122e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 802122e:	b510      	push	{r4, lr}
 8021230:	4604      	mov	r4, r0
 8021232:	2104      	movs	r1, #4
 8021234:	f00a fc17 	bl	802ba66 <_ZdlPvj>
 8021238:	4620      	mov	r0, r4
 802123a:	bd10      	pop	{r4, pc}

0802123c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 802123c:	b510      	push	{r4, lr}
 802123e:	4604      	mov	r4, r0
 8021240:	2104      	movs	r1, #4
 8021242:	f00a fc10 	bl	802ba66 <_ZdlPvj>
 8021246:	4620      	mov	r0, r4
 8021248:	bd10      	pop	{r4, pc}

0802124a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 802124a:	b510      	push	{r4, lr}
 802124c:	4604      	mov	r4, r0
 802124e:	2104      	movs	r1, #4
 8021250:	f00a fc09 	bl	802ba66 <_ZdlPvj>
 8021254:	4620      	mov	r0, r4
 8021256:	bd10      	pop	{r4, pc}

08021258 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8021258:	b510      	push	{r4, lr}
 802125a:	4604      	mov	r4, r0
 802125c:	2104      	movs	r1, #4
 802125e:	f00a fc02 	bl	802ba66 <_ZdlPvj>
 8021262:	4620      	mov	r0, r4
 8021264:	bd10      	pop	{r4, pc}

08021266 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8021266:	b510      	push	{r4, lr}
 8021268:	4604      	mov	r4, r0
 802126a:	2104      	movs	r1, #4
 802126c:	f00a fbfb 	bl	802ba66 <_ZdlPvj>
 8021270:	4620      	mov	r0, r4
 8021272:	bd10      	pop	{r4, pc}

08021274 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8021274:	b510      	push	{r4, lr}
 8021276:	4604      	mov	r4, r0
 8021278:	2104      	movs	r1, #4
 802127a:	f00a fbf4 	bl	802ba66 <_ZdlPvj>
 802127e:	4620      	mov	r0, r4
 8021280:	bd10      	pop	{r4, pc}

08021282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8021282:	b510      	push	{r4, lr}
 8021284:	4604      	mov	r4, r0
 8021286:	2104      	movs	r1, #4
 8021288:	f00a fbed 	bl	802ba66 <_ZdlPvj>
 802128c:	4620      	mov	r0, r4
 802128e:	bd10      	pop	{r4, pc}

08021290 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8021290:	b510      	push	{r4, lr}
 8021292:	4604      	mov	r4, r0
 8021294:	2104      	movs	r1, #4
 8021296:	f00a fbe6 	bl	802ba66 <_ZdlPvj>
 802129a:	4620      	mov	r0, r4
 802129c:	bd10      	pop	{r4, pc}

0802129e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 802129e:	b510      	push	{r4, lr}
 80212a0:	4604      	mov	r4, r0
 80212a2:	2104      	movs	r1, #4
 80212a4:	f00a fbdf 	bl	802ba66 <_ZdlPvj>
 80212a8:	4620      	mov	r0, r4
 80212aa:	bd10      	pop	{r4, pc}

080212ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80212ac:	b510      	push	{r4, lr}
 80212ae:	4604      	mov	r4, r0
 80212b0:	2104      	movs	r1, #4
 80212b2:	f00a fbd8 	bl	802ba66 <_ZdlPvj>
 80212b6:	4620      	mov	r0, r4
 80212b8:	bd10      	pop	{r4, pc}

080212ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80212ba:	b510      	push	{r4, lr}
 80212bc:	4604      	mov	r4, r0
 80212be:	2104      	movs	r1, #4
 80212c0:	f00a fbd1 	bl	802ba66 <_ZdlPvj>
 80212c4:	4620      	mov	r0, r4
 80212c6:	bd10      	pop	{r4, pc}

080212c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80212c8:	b510      	push	{r4, lr}
 80212ca:	4604      	mov	r4, r0
 80212cc:	2104      	movs	r1, #4
 80212ce:	f00a fbca 	bl	802ba66 <_ZdlPvj>
 80212d2:	4620      	mov	r0, r4
 80212d4:	bd10      	pop	{r4, pc}

080212d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80212d6:	b510      	push	{r4, lr}
 80212d8:	4604      	mov	r4, r0
 80212da:	2104      	movs	r1, #4
 80212dc:	f00a fbc3 	bl	802ba66 <_ZdlPvj>
 80212e0:	4620      	mov	r0, r4
 80212e2:	bd10      	pop	{r4, pc}

080212e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80212e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80212e8:	460d      	mov	r5, r1
 80212ea:	b087      	sub	sp, #28
 80212ec:	4614      	mov	r4, r2
 80212ee:	4698      	mov	r8, r3
 80212f0:	b333      	cbz	r3, 8021340 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80212f2:	4608      	mov	r0, r1
 80212f4:	f7f5 fb81 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 80212f8:	bb10      	cbnz	r0, 8021340 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80212fa:	6828      	ldr	r0, [r5, #0]
 80212fc:	ab04      	add	r3, sp, #16
 80212fe:	6869      	ldr	r1, [r5, #4]
 8021300:	4e72      	ldr	r6, [pc, #456]	; (80214cc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1e8>)
 8021302:	c303      	stmia	r3!, {r0, r1}
 8021304:	a804      	add	r0, sp, #16
 8021306:	f7f9 ff89 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802130a:	6830      	ldr	r0, [r6, #0]
 802130c:	6803      	ldr	r3, [r0, #0]
 802130e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021310:	4798      	blx	r3
 8021312:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021316:	d016      	beq.n	8021346 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x62>
 8021318:	f010 0f08 	tst.w	r0, #8
 802131c:	d016      	beq.n	802134c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x68>
 802131e:	f8bd 5016 	ldrh.w	r5, [sp, #22]
 8021322:	6830      	ldr	r0, [r6, #0]
 8021324:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8021328:	6801      	ldr	r1, [r0, #0]
 802132a:	9501      	str	r5, [sp, #4]
 802132c:	f8bd 5014 	ldrh.w	r5, [sp, #20]
 8021330:	f8cd 8008 	str.w	r8, [sp, #8]
 8021334:	9500      	str	r5, [sp, #0]
 8021336:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 802133a:	6c8d      	ldr	r5, [r1, #72]	; 0x48
 802133c:	4621      	mov	r1, r4
 802133e:	47a8      	blx	r5
 8021340:	b007      	add	sp, #28
 8021342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021346:	f010 0f02 	tst.w	r0, #2
 802134a:	e7e7      	b.n	802131c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x38>
 802134c:	6830      	ldr	r0, [r6, #0]
 802134e:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8021352:	6803      	ldr	r3, [r0, #0]
 8021354:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8021358:	6a1b      	ldr	r3, [r3, #32]
 802135a:	4798      	blx	r3
 802135c:	495c      	ldr	r1, [pc, #368]	; (80214d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ec>)
 802135e:	f9bd 2012 	ldrsh.w	r2, [sp, #18]
 8021362:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021366:	880b      	ldrh	r3, [r1, #0]
 8021368:	468e      	mov	lr, r1
 802136a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 802136e:	fb03 c202 	mla	r2, r3, r2, ip
 8021372:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021376:	fb07 f203 	mul.w	r2, r7, r3
 802137a:	d053      	beq.n	8021424 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x140>
 802137c:	fa1f f388 	uxth.w	r3, r8
 8021380:	f1c8 07ff 	rsb	r7, r8, #255	; 0xff
 8021384:	ea4f 09d4 	mov.w	r9, r4, lsr #3
 8021388:	ea4f 2814 	mov.w	r8, r4, lsr #8
 802138c:	00e4      	lsls	r4, r4, #3
 802138e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8021392:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8021396:	eb00 0142 	add.w	r1, r0, r2, lsl #1
 802139a:	b2e4      	uxtb	r4, r4
 802139c:	fb09 f903 	mul.w	r9, r9, r3
 80213a0:	fb08 f803 	mul.w	r8, r8, r3
 80213a4:	006d      	lsls	r5, r5, #1
 80213a6:	4363      	muls	r3, r4
 80213a8:	b2bc      	uxth	r4, r7
 80213aa:	4288      	cmp	r0, r1
 80213ac:	f080 8088 	bcs.w	80214c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 80213b0:	eb00 0a05 	add.w	sl, r0, r5
 80213b4:	4550      	cmp	r0, sl
 80213b6:	d22f      	bcs.n	8021418 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x134>
 80213b8:	8802      	ldrh	r2, [r0, #0]
 80213ba:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80213be:	10d7      	asrs	r7, r2, #3
 80213c0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80213c4:	00d2      	lsls	r2, r2, #3
 80213c6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80213ca:	fb1c fc04 	smulbb	ip, ip, r4
 80213ce:	b2d2      	uxtb	r2, r2
 80213d0:	fb17 f704 	smulbb	r7, r7, r4
 80213d4:	fb12 f204 	smulbb	r2, r2, r4
 80213d8:	44c4      	add	ip, r8
 80213da:	444f      	add	r7, r9
 80213dc:	fa1f fc8c 	uxth.w	ip, ip
 80213e0:	441a      	add	r2, r3
 80213e2:	b2bf      	uxth	r7, r7
 80213e4:	b292      	uxth	r2, r2
 80213e6:	f10c 0b01 	add.w	fp, ip, #1
 80213ea:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80213ee:	f102 0b01 	add.w	fp, r2, #1
 80213f2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80213f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80213fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80213fe:	ea4c 0202 	orr.w	r2, ip, r2
 8021402:	f107 0c01 	add.w	ip, r7, #1
 8021406:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 802140a:	097f      	lsrs	r7, r7, #5
 802140c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021410:	433a      	orrs	r2, r7
 8021412:	f820 2b02 	strh.w	r2, [r0], #2
 8021416:	e7cd      	b.n	80213b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd0>
 8021418:	f8be 2000 	ldrh.w	r2, [lr]
 802141c:	ebc5 0242 	rsb	r2, r5, r2, lsl #1
 8021420:	4410      	add	r0, r2
 8021422:	e7c2      	b.n	80213aa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xc6>
 8021424:	07db      	lsls	r3, r3, #31
 8021426:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 802142a:	d50e      	bpl.n	802144a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x166>
 802142c:	006d      	lsls	r5, r5, #1
 802142e:	4290      	cmp	r0, r2
 8021430:	d246      	bcs.n	80214c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8021432:	1943      	adds	r3, r0, r5
 8021434:	4298      	cmp	r0, r3
 8021436:	d202      	bcs.n	802143e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x15a>
 8021438:	f820 4b02 	strh.w	r4, [r0], #2
 802143c:	e7fa      	b.n	8021434 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x150>
 802143e:	f8be 3000 	ldrh.w	r3, [lr]
 8021442:	ebc5 0343 	rsb	r3, r5, r3, lsl #1
 8021446:	4418      	add	r0, r3
 8021448:	e7f1      	b.n	802142e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x14a>
 802144a:	0787      	lsls	r7, r0, #30
 802144c:	462b      	mov	r3, r5
 802144e:	d00a      	beq.n	8021466 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x182>
 8021450:	4603      	mov	r3, r0
 8021452:	4293      	cmp	r3, r2
 8021454:	d205      	bcs.n	8021462 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x17e>
 8021456:	801c      	strh	r4, [r3, #0]
 8021458:	f8be 1000 	ldrh.w	r1, [lr]
 802145c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8021460:	e7f7      	b.n	8021452 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x16e>
 8021462:	3002      	adds	r0, #2
 8021464:	1e6b      	subs	r3, r5, #1
 8021466:	07dd      	lsls	r5, r3, #31
 8021468:	d50d      	bpl.n	8021486 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a2>
 802146a:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 802146e:	3901      	subs	r1, #1
 8021470:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8021474:	4291      	cmp	r1, r2
 8021476:	d205      	bcs.n	8021484 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1a0>
 8021478:	800c      	strh	r4, [r1, #0]
 802147a:	f8be 5000 	ldrh.w	r5, [lr]
 802147e:	eb01 0145 	add.w	r1, r1, r5, lsl #1
 8021482:	e7f7      	b.n	8021474 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x190>
 8021484:	3b01      	subs	r3, #1
 8021486:	b1db      	cbz	r3, 80214c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8021488:	b2a1      	uxth	r1, r4
 802148a:	105b      	asrs	r3, r3, #1
 802148c:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
 8021490:	009b      	lsls	r3, r3, #2
 8021492:	4290      	cmp	r0, r2
 8021494:	d214      	bcs.n	80214c0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1dc>
 8021496:	0781      	lsls	r1, r0, #30
 8021498:	d006      	beq.n	80214a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c4>
 802149a:	4b0e      	ldr	r3, [pc, #56]	; (80214d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f0>)
 802149c:	f44f 7162 	mov.w	r1, #904	; 0x388
 80214a0:	4a0d      	ldr	r2, [pc, #52]	; (80214d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f4>)
 80214a2:	480e      	ldr	r0, [pc, #56]	; (80214dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1f8>)
 80214a4:	f00a fd20 	bl	802bee8 <__assert_func>
 80214a8:	18c5      	adds	r5, r0, r3
 80214aa:	4601      	mov	r1, r0
 80214ac:	42a9      	cmp	r1, r5
 80214ae:	d202      	bcs.n	80214b6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1d2>
 80214b0:	f841 4b04 	str.w	r4, [r1], #4
 80214b4:	e7fa      	b.n	80214ac <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1c8>
 80214b6:	f8be 1000 	ldrh.w	r1, [lr]
 80214ba:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80214be:	e7e8      	b.n	8021492 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x1ae>
 80214c0:	6830      	ldr	r0, [r6, #0]
 80214c2:	6803      	ldr	r3, [r0, #0]
 80214c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80214c6:	4798      	blx	r3
 80214c8:	e73a      	b.n	8021340 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80214ca:	bf00      	nop
 80214cc:	20004168 	.word	0x20004168
 80214d0:	20004160 	.word	0x20004160
 80214d4:	080321c0 	.word	0x080321c0
 80214d8:	08032978 	.word	0x08032978
 80214dc:	080321ef 	.word	0x080321ef

080214e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80214e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214e4:	4f97      	ldr	r7, [pc, #604]	; (8021744 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80214e6:	4616      	mov	r6, r2
 80214e8:	b08f      	sub	sp, #60	; 0x3c
 80214ea:	4604      	mov	r4, r0
 80214ec:	683a      	ldr	r2, [r7, #0]
 80214ee:	4689      	mov	r9, r1
 80214f0:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80214f4:	2a02      	cmp	r2, #2
 80214f6:	d106      	bne.n	8021506 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80214f8:	4b93      	ldr	r3, [pc, #588]	; (8021748 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80214fa:	f44f 7132 	mov.w	r1, #712	; 0x2c8
 80214fe:	4a93      	ldr	r2, [pc, #588]	; (802174c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8021500:	4893      	ldr	r0, [pc, #588]	; (8021750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 8021502:	f00a fcf1 	bl	802bee8 <__assert_func>
 8021506:	ad0e      	add	r5, sp, #56	; 0x38
 8021508:	f825 3d24 	strh.w	r3, [r5, #-36]!
 802150c:	4628      	mov	r0, r5
 802150e:	f7fd fa4d 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8021512:	6823      	ldr	r3, [r4, #0]
 8021514:	4680      	mov	r8, r0
 8021516:	4620      	mov	r0, r4
 8021518:	6a1b      	ldr	r3, [r3, #32]
 802151a:	4798      	blx	r3
 802151c:	4580      	cmp	r8, r0
 802151e:	d004      	beq.n	802152a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8021520:	4b8c      	ldr	r3, [pc, #560]	; (8021754 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8021522:	f240 21ca 	movw	r1, #714	; 0x2ca
 8021526:	4a89      	ldr	r2, [pc, #548]	; (802174c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8021528:	e7ea      	b.n	8021500 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 802152a:	4628      	mov	r0, r5
 802152c:	f7fd f9b4 	bl	801e898 <_ZNK8touchgfx6Bitmap7getDataEv>
 8021530:	4680      	mov	r8, r0
 8021532:	b920      	cbnz	r0, 802153e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8021534:	4b88      	ldr	r3, [pc, #544]	; (8021758 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8021536:	f44f 7133 	mov.w	r1, #716	; 0x2cc
 802153a:	4a84      	ldr	r2, [pc, #528]	; (802174c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 802153c:	e7e0      	b.n	8021500 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 802153e:	6830      	ldr	r0, [r6, #0]
 8021540:	ab06      	add	r3, sp, #24
 8021542:	6871      	ldr	r1, [r6, #4]
 8021544:	f10d 0b20 	add.w	fp, sp, #32
 8021548:	f9b6 a000 	ldrsh.w	sl, [r6]
 802154c:	c303      	stmia	r3!, {r0, r1}
 802154e:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8021552:	ab08      	add	r3, sp, #32
 8021554:	f8d9 0000 	ldr.w	r0, [r9]
 8021558:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 802155c:	c303      	stmia	r3!, {r0, r1}
 802155e:	4628      	mov	r0, r5
 8021560:	f7fd f892 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021564:	4606      	mov	r6, r0
 8021566:	4628      	mov	r0, r5
 8021568:	4d7c      	ldr	r5, [pc, #496]	; (802175c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 802156a:	f7fd f8c7 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 802156e:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8021572:	a806      	add	r0, sp, #24
 8021574:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8021578:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 802157c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8021580:	f7f9 fe4c 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021584:	4658      	mov	r0, fp
 8021586:	f7f9 fe49 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802158a:	a80a      	add	r0, sp, #40	; 0x28
 802158c:	f7f9 fe46 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021590:	4b73      	ldr	r3, [pc, #460]	; (8021760 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8021592:	2100      	movs	r1, #0
 8021594:	f9b5 2000 	ldrsh.w	r2, [r5]
 8021598:	f9b3 3000 	ldrsh.w	r3, [r3]
 802159c:	4658      	mov	r0, fp
 802159e:	910c      	str	r1, [sp, #48]	; 0x30
 80215a0:	a90c      	add	r1, sp, #48	; 0x30
 80215a2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80215a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80215aa:	f7f5 f9e3 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 80215ae:	4658      	mov	r0, fp
 80215b0:	f7f5 fa23 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 80215b4:	2800      	cmp	r0, #0
 80215b6:	f040 809a 	bne.w	80216ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 80215ba:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 80215be:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80215c2:	4288      	cmp	r0, r1
 80215c4:	db38      	blt.n	8021638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80215c6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80215ca:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80215ce:	429a      	cmp	r2, r3
 80215d0:	db32      	blt.n	8021638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80215d2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80215d6:	4430      	add	r0, r6
 80215d8:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80215dc:	4431      	add	r1, r6
 80215de:	b200      	sxth	r0, r0
 80215e0:	b209      	sxth	r1, r1
 80215e2:	4288      	cmp	r0, r1
 80215e4:	dc28      	bgt.n	8021638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80215e6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80215ea:	440a      	add	r2, r1
 80215ec:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80215f0:	440b      	add	r3, r1
 80215f2:	b212      	sxth	r2, r2
 80215f4:	b21b      	sxth	r3, r3
 80215f6:	429a      	cmp	r2, r3
 80215f8:	dc1e      	bgt.n	8021638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x158>
 80215fa:	6823      	ldr	r3, [r4, #0]
 80215fc:	4620      	mov	r0, r4
 80215fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021600:	4798      	blx	r3
 8021602:	4682      	mov	sl, r0
 8021604:	6838      	ldr	r0, [r7, #0]
 8021606:	6803      	ldr	r3, [r0, #0]
 8021608:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802160a:	4798      	blx	r3
 802160c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8021610:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021614:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8021618:	1a5b      	subs	r3, r3, r1
 802161a:	b29b      	uxth	r3, r3
 802161c:	b21c      	sxth	r4, r3
 802161e:	2c00      	cmp	r4, #0
 8021620:	dc0f      	bgt.n	8021642 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x162>
 8021622:	bf18      	it	ne
 8021624:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8021628:	4644      	mov	r4, r8
 802162a:	bf1e      	ittt	ne
 802162c:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 8021630:	185b      	addne	r3, r3, r1
 8021632:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8021636:	e009      	b.n	802164c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16c>
 8021638:	4b4a      	ldr	r3, [pc, #296]	; (8021764 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 802163a:	f240 21da 	movw	r1, #730	; 0x2da
 802163e:	4a43      	ldr	r2, [pc, #268]	; (802174c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8021640:	e75e      	b.n	8021500 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8021642:	1ad3      	subs	r3, r2, r3
 8021644:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8021648:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 802164c:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 8021650:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8021654:	1b9b      	subs	r3, r3, r6
 8021656:	b29b      	uxth	r3, r3
 8021658:	b219      	sxth	r1, r3
 802165a:	2900      	cmp	r1, #0
 802165c:	dd4b      	ble.n	80216f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x216>
 802165e:	4351      	muls	r1, r2
 8021660:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8021664:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8021668:	1acb      	subs	r3, r1, r3
 802166a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 802166e:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8021672:	2e00      	cmp	r6, #0
 8021674:	dd3b      	ble.n	80216ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 8021676:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 802167a:	2b00      	cmp	r3, #0
 802167c:	dd37      	ble.n	80216ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 802167e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8021682:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8021686:	fb0a f90c 	mul.w	r9, sl, ip
 802168a:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 802168e:	4481      	add	r9, r0
 8021690:	8828      	ldrh	r0, [r5, #0]
 8021692:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8021696:	1a41      	subs	r1, r0, r1
 8021698:	42ae      	cmp	r6, r5
 802169a:	bfa8      	it	ge
 802169c:	462e      	movge	r6, r5
 802169e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80216a2:	428e      	cmp	r6, r1
 80216a4:	bfa8      	it	ge
 80216a6:	460e      	movge	r6, r1
 80216a8:	429d      	cmp	r5, r3
 80216aa:	bfa8      	it	ge
 80216ac:	461d      	movge	r5, r3
 80216ae:	4b2c      	ldr	r3, [pc, #176]	; (8021760 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 80216b0:	881b      	ldrh	r3, [r3, #0]
 80216b2:	eba3 030c 	sub.w	r3, r3, ip
 80216b6:	429d      	cmp	r5, r3
 80216b8:	bfa8      	it	ge
 80216ba:	461d      	movge	r5, r3
 80216bc:	42b0      	cmp	r0, r6
 80216be:	d12c      	bne.n	802171a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
 80216c0:	4290      	cmp	r0, r2
 80216c2:	d12a      	bne.n	802171a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x23a>
 80216c4:	6838      	ldr	r0, [r7, #0]
 80216c6:	9203      	str	r2, [sp, #12]
 80216c8:	6803      	ldr	r3, [r0, #0]
 80216ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80216cc:	4798      	blx	r3
 80216ce:	07c3      	lsls	r3, r0, #31
 80216d0:	d51a      	bpl.n	8021708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x228>
 80216d2:	9a03      	ldr	r2, [sp, #12]
 80216d4:	6838      	ldr	r0, [r7, #0]
 80216d6:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80216da:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80216de:	6803      	ldr	r3, [r0, #0]
 80216e0:	9200      	str	r2, [sp, #0]
 80216e2:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80216e4:	4623      	mov	r3, r4
 80216e6:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80216ea:	47a8      	blx	r5
 80216ec:	4680      	mov	r8, r0
 80216ee:	4640      	mov	r0, r8
 80216f0:	b00f      	add	sp, #60	; 0x3c
 80216f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80216f6:	bf1f      	itttt	ne
 80216f8:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 80216fc:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 8021700:	185b      	addne	r3, r3, r1
 8021702:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8021706:	e7b2      	b.n	802166e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18e>
 8021708:	6838      	ldr	r0, [r7, #0]
 802170a:	464a      	mov	r2, r9
 802170c:	4621      	mov	r1, r4
 802170e:	6803      	ldr	r3, [r0, #0]
 8021710:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8021712:	fb05 f30a 	mul.w	r3, r5, sl
 8021716:	47b0      	blx	r6
 8021718:	e7e9      	b.n	80216ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 802171a:	4355      	muls	r5, r2
 802171c:	0076      	lsls	r6, r6, #1
 802171e:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8021722:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 8021726:	9303      	str	r3, [sp, #12]
 8021728:	9b03      	ldr	r3, [sp, #12]
 802172a:	429c      	cmp	r4, r3
 802172c:	d2df      	bcs.n	80216ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20e>
 802172e:	6838      	ldr	r0, [r7, #0]
 8021730:	464a      	mov	r2, r9
 8021732:	4621      	mov	r1, r4
 8021734:	44d1      	add	r9, sl
 8021736:	6803      	ldr	r3, [r0, #0]
 8021738:	445c      	add	r4, fp
 802173a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802173c:	461d      	mov	r5, r3
 802173e:	4633      	mov	r3, r6
 8021740:	47a8      	blx	r5
 8021742:	e7f1      	b.n	8021728 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x248>
 8021744:	20004168 	.word	0x20004168
 8021748:	08031fe6 	.word	0x08031fe6
 802174c:	0803285b 	.word	0x0803285b
 8021750:	080321ef 	.word	0x080321ef
 8021754:	08032098 	.word	0x08032098
 8021758:	080320ed 	.word	0x080320ed
 802175c:	20004160 	.word	0x20004160
 8021760:	20004162 	.word	0x20004162
 8021764:	0803212b 	.word	0x0803212b

08021768 <_ZN8touchgfx8LCD16bppC1Ev>:
 8021768:	2200      	movs	r2, #0
 802176a:	4910      	ldr	r1, [pc, #64]	; (80217ac <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 802176c:	6042      	str	r2, [r0, #4]
 802176e:	6001      	str	r1, [r0, #0]
 8021770:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8021774:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8021778:	e9c0 2206 	strd	r2, r2, [r0, #24]
 802177c:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8021780:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8021784:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8021788:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 802178c:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8021790:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8021794:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8021798:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 802179c:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80217a0:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80217a4:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80217a8:	4770      	bx	lr
 80217aa:	bf00      	nop
 80217ac:	080324d0 	.word	0x080324d0

080217b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80217b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80217b4:	b08b      	sub	sp, #44	; 0x2c
 80217b6:	460d      	mov	r5, r1
 80217b8:	4604      	mov	r4, r0
 80217ba:	4699      	mov	r9, r3
 80217bc:	6808      	ldr	r0, [r1, #0]
 80217be:	ab06      	add	r3, sp, #24
 80217c0:	6849      	ldr	r1, [r1, #4]
 80217c2:	c303      	stmia	r3!, {r0, r1}
 80217c4:	6810      	ldr	r0, [r2, #0]
 80217c6:	ab08      	add	r3, sp, #32
 80217c8:	6851      	ldr	r1, [r2, #4]
 80217ca:	c303      	stmia	r3!, {r0, r1}
 80217cc:	a806      	add	r0, sp, #24
 80217ce:	f7f9 fd25 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80217d2:	4629      	mov	r1, r5
 80217d4:	a808      	add	r0, sp, #32
 80217d6:	4d63      	ldr	r5, [pc, #396]	; (8021964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 80217d8:	f7f9 fd08 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80217dc:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80217e0:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80217e4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80217e8:	6828      	ldr	r0, [r5, #0]
 80217ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80217ee:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80217f2:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80217f6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80217fa:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80217fe:	440a      	add	r2, r1
 8021800:	f8ad 2020 	strh.w	r2, [sp, #32]
 8021804:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8021808:	4413      	add	r3, r2
 802180a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 802180e:	6803      	ldr	r3, [r0, #0]
 8021810:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8021812:	4798      	blx	r3
 8021814:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021818:	d118      	bne.n	802184c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 802181a:	f010 0f20 	tst.w	r0, #32
 802181e:	6828      	ldr	r0, [r5, #0]
 8021820:	d017      	beq.n	8021852 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 8021822:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8021826:	b2b6      	uxth	r6, r6
 8021828:	6801      	ldr	r1, [r0, #0]
 802182a:	9502      	str	r5, [sp, #8]
 802182c:	fa1f f588 	uxth.w	r5, r8
 8021830:	f8cd 900c 	str.w	r9, [sp, #12]
 8021834:	9601      	str	r6, [sp, #4]
 8021836:	9500      	str	r5, [sp, #0]
 8021838:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802183c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 802183e:	4621      	mov	r1, r4
 8021840:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8021844:	47a8      	blx	r5
 8021846:	b00b      	add	sp, #44	; 0x2c
 8021848:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802184c:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021850:	e7e5      	b.n	802181e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8021852:	6803      	ldr	r3, [r0, #0]
 8021854:	6a1b      	ldr	r3, [r3, #32]
 8021856:	4798      	blx	r3
 8021858:	4a43      	ldr	r2, [pc, #268]	; (8021968 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 802185a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 802185e:	f8b2 e000 	ldrh.w	lr, [r2]
 8021862:	4692      	mov	sl, r2
 8021864:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8021868:	fb0e 1303 	mla	r3, lr, r3, r1
 802186c:	fb0e fe06 	mul.w	lr, lr, r6
 8021870:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021874:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8021878:	eb00 0e4e 	add.w	lr, r0, lr, lsl #1
 802187c:	9305      	str	r3, [sp, #20]
 802187e:	4570      	cmp	r0, lr
 8021880:	d26a      	bcs.n	8021958 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1a8>
 8021882:	9b05      	ldr	r3, [sp, #20]
 8021884:	4621      	mov	r1, r4
 8021886:	eb00 0b03 	add.w	fp, r0, r3
 802188a:	4558      	cmp	r0, fp
 802188c:	d257      	bcs.n	802193e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x18e>
 802188e:	f851 4b04 	ldr.w	r4, [r1], #4
 8021892:	0e22      	lsrs	r2, r4, #24
 8021894:	d012      	beq.n	80218bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 8021896:	2aff      	cmp	r2, #255	; 0xff
 8021898:	ea4f 2714 	mov.w	r7, r4, lsr #8
 802189c:	d110      	bne.n	80218c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 802189e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80218a2:	d10d      	bne.n	80218c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x110>
 80218a4:	0963      	lsrs	r3, r4, #5
 80218a6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80218aa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80218ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80218b2:	f027 0707 	bic.w	r7, r7, #7
 80218b6:	431f      	orrs	r7, r3
 80218b8:	433c      	orrs	r4, r7
 80218ba:	8004      	strh	r4, [r0, #0]
 80218bc:	3002      	adds	r0, #2
 80218be:	e7e4      	b.n	802188a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 80218c0:	fb09 f302 	mul.w	r3, r9, r2
 80218c4:	f8b0 c000 	ldrh.w	ip, [r0]
 80218c8:	f3c4 4507 	ubfx	r5, r4, #16, #8
 80218cc:	b2ff      	uxtb	r7, r7
 80218ce:	1c5a      	adds	r2, r3, #1
 80218d0:	ea4f 262c 	mov.w	r6, ip, asr #8
 80218d4:	b2e4      	uxtb	r4, r4
 80218d6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80218da:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80218de:	1212      	asrs	r2, r2, #8
 80218e0:	b293      	uxth	r3, r2
 80218e2:	43d2      	mvns	r2, r2
 80218e4:	fb15 f503 	smulbb	r5, r5, r3
 80218e8:	b2d2      	uxtb	r2, r2
 80218ea:	fb17 f703 	smulbb	r7, r7, r3
 80218ee:	fb06 5602 	mla	r6, r6, r2, r5
 80218f2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80218f6:	fb14 f403 	smulbb	r4, r4, r3
 80218fa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80218fe:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8021902:	b2b6      	uxth	r6, r6
 8021904:	fa5f fc8c 	uxtb.w	ip, ip
 8021908:	fb05 7702 	mla	r7, r5, r2, r7
 802190c:	1c73      	adds	r3, r6, #1
 802190e:	fb0c 4202 	mla	r2, ip, r2, r4
 8021912:	b2bf      	uxth	r7, r7
 8021914:	b292      	uxth	r2, r2
 8021916:	1c7d      	adds	r5, r7, #1
 8021918:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802191c:	f102 0c01 	add.w	ip, r2, #1
 8021920:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8021924:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8021928:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802192c:	097f      	lsrs	r7, r7, #5
 802192e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021932:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021936:	4316      	orrs	r6, r2
 8021938:	433e      	orrs	r6, r7
 802193a:	8006      	strh	r6, [r0, #0]
 802193c:	e7be      	b.n	80218bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10c>
 802193e:	f8ba 3000 	ldrh.w	r3, [sl]
 8021942:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 8021946:	eba3 0308 	sub.w	r3, r3, r8
 802194a:	eba4 0408 	sub.w	r4, r4, r8
 802194e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021952:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8021956:	e792      	b.n	802187e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8021958:	4b02      	ldr	r3, [pc, #8]	; (8021964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b4>)
 802195a:	6818      	ldr	r0, [r3, #0]
 802195c:	6803      	ldr	r3, [r0, #0]
 802195e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021960:	4798      	blx	r3
 8021962:	e770      	b.n	8021846 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 8021964:	20004168 	.word	0x20004168
 8021968:	20004160 	.word	0x20004160

0802196c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 802196c:	b570      	push	{r4, r5, r6, lr}
 802196e:	9d04      	ldr	r5, [sp, #16]
 8021970:	460c      	mov	r4, r1
 8021972:	f89d 6018 	ldrb.w	r6, [sp, #24]
 8021976:	4619      	mov	r1, r3
 8021978:	f89d 3014 	ldrb.w	r3, [sp, #20]
 802197c:	2a0d      	cmp	r2, #13
 802197e:	d820      	bhi.n	80219c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 8021980:	e8df f002 	tbb	[pc, r2]
 8021984:	18121807 	.word	0x18121807
 8021988:	18181818 	.word	0x18181818
 802198c:	18181818 	.word	0x18181818
 8021990:	1818      	.short	0x1818
 8021992:	6802      	ldr	r2, [r0, #0]
 8021994:	e9cd 3604 	strd	r3, r6, [sp, #16]
 8021998:	68d6      	ldr	r6, [r2, #12]
 802199a:	462b      	mov	r3, r5
 802199c:	460a      	mov	r2, r1
 802199e:	4621      	mov	r1, r4
 80219a0:	46b4      	mov	ip, r6
 80219a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80219a6:	4760      	bx	ip
 80219a8:	462a      	mov	r2, r5
 80219aa:	4620      	mov	r0, r4
 80219ac:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80219b0:	f7ff befe 	b.w	80217b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80219b4:	4b03      	ldr	r3, [pc, #12]	; (80219c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80219b6:	f240 21c1 	movw	r1, #705	; 0x2c1
 80219ba:	4a03      	ldr	r2, [pc, #12]	; (80219c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80219bc:	4803      	ldr	r0, [pc, #12]	; (80219cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80219be:	f00a fa93 	bl	802bee8 <__assert_func>
 80219c2:	bd70      	pop	{r4, r5, r6, pc}
 80219c4:	0803218b 	.word	0x0803218b
 80219c8:	080328e1 	.word	0x080328e1
 80219cc:	080321ef 	.word	0x080321ef

080219d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80219d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80219d4:	b093      	sub	sp, #76	; 0x4c
 80219d6:	880f      	ldrh	r7, [r1, #0]
 80219d8:	4604      	mov	r4, r0
 80219da:	4688      	mov	r8, r1
 80219dc:	4616      	mov	r6, r2
 80219de:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80219e2:	b12f      	cbz	r7, 80219f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 80219e4:	4b6f      	ldr	r3, [pc, #444]	; (8021ba4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80219e6:	21e2      	movs	r1, #226	; 0xe2
 80219e8:	4a6f      	ldr	r2, [pc, #444]	; (8021ba8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 80219ea:	4870      	ldr	r0, [pc, #448]	; (8021bac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 80219ec:	f00a fa7c 	bl	802bee8 <__assert_func>
 80219f0:	6810      	ldr	r0, [r2, #0]
 80219f2:	ad0e      	add	r5, sp, #56	; 0x38
 80219f4:	6851      	ldr	r1, [r2, #4]
 80219f6:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8021bb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>
 80219fa:	c503      	stmia	r5!, {r0, r1}
 80219fc:	6818      	ldr	r0, [r3, #0]
 80219fe:	ad10      	add	r5, sp, #64	; 0x40
 8021a00:	6859      	ldr	r1, [r3, #4]
 8021a02:	c503      	stmia	r5!, {r0, r1}
 8021a04:	a80e      	add	r0, sp, #56	; 0x38
 8021a06:	f7f9 fc09 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021a0a:	4631      	mov	r1, r6
 8021a0c:	a810      	add	r0, sp, #64	; 0x40
 8021a0e:	4e68      	ldr	r6, [pc, #416]	; (8021bb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8021a10:	f7f9 fbec 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021a14:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8021a18:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8021a1c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8021a20:	f8db 0000 	ldr.w	r0, [fp]
 8021a24:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021a28:	f9bd 9044 	ldrsh.w	r9, [sp, #68]	; 0x44
 8021a2c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8021a30:	440c      	add	r4, r1
 8021a32:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8021a36:	440a      	add	r2, r1
 8021a38:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8021a3c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021a40:	4413      	add	r3, r2
 8021a42:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8021a46:	6803      	ldr	r3, [r0, #0]
 8021a48:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021a4c:	4798      	blx	r3
 8021a4e:	2801      	cmp	r0, #1
 8021a50:	d11d      	bne.n	8021a8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8021a52:	220b      	movs	r2, #11
 8021a54:	9708      	str	r7, [sp, #32]
 8021a56:	b2ad      	uxth	r5, r5
 8021a58:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8021a5c:	9207      	str	r2, [sp, #28]
 8021a5e:	4621      	mov	r1, r4
 8021a60:	8832      	ldrh	r2, [r6, #0]
 8021a62:	f8cd a010 	str.w	sl, [sp, #16]
 8021a66:	9502      	str	r5, [sp, #8]
 8021a68:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8021a6c:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8021a70:	9203      	str	r2, [sp, #12]
 8021a72:	fa1f f289 	uxth.w	r2, r9
 8021a76:	9201      	str	r2, [sp, #4]
 8021a78:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8021a7c:	9200      	str	r2, [sp, #0]
 8021a7e:	4642      	mov	r2, r8
 8021a80:	f8db 0000 	ldr.w	r0, [fp]
 8021a84:	f7f5 fbc0 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8021a88:	b013      	add	sp, #76	; 0x4c
 8021a8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a8e:	f8db 0000 	ldr.w	r0, [fp]
 8021a92:	6803      	ldr	r3, [r0, #0]
 8021a94:	6a1b      	ldr	r3, [r3, #32]
 8021a96:	4798      	blx	r3
 8021a98:	8832      	ldrh	r2, [r6, #0]
 8021a9a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8021a9e:	f04f 0e04 	mov.w	lr, #4
 8021aa2:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8021aa6:	4355      	muls	r5, r2
 8021aa8:	960d      	str	r6, [sp, #52]	; 0x34
 8021aaa:	fb02 1303 	mla	r3, r2, r3, r1
 8021aae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021ab2:	eb00 0345 	add.w	r3, r0, r5, lsl #1
 8021ab6:	930c      	str	r3, [sp, #48]	; 0x30
 8021ab8:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8021abc:	930b      	str	r3, [sp, #44]	; 0x2c
 8021abe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021ac0:	4298      	cmp	r0, r3
 8021ac2:	d269      	bcs.n	8021b98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>
 8021ac4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021ac6:	4621      	mov	r1, r4
 8021ac8:	eb00 0b03 	add.w	fp, r0, r3
 8021acc:	4558      	cmp	r0, fp
 8021ace:	460b      	mov	r3, r1
 8021ad0:	d256      	bcs.n	8021b80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b0>
 8021ad2:	781b      	ldrb	r3, [r3, #0]
 8021ad4:	3101      	adds	r1, #1
 8021ad6:	fb1e e303 	smlabb	r3, lr, r3, lr
 8021ada:	f858 2003 	ldr.w	r2, [r8, r3]
 8021ade:	0e14      	lsrs	r4, r2, #24
 8021ae0:	d012      	beq.n	8021b08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8021ae2:	2cff      	cmp	r4, #255	; 0xff
 8021ae4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8021ae8:	d110      	bne.n	8021b0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8021aea:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8021aee:	d10d      	bne.n	8021b0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8021af0:	0953      	lsrs	r3, r2, #5
 8021af2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8021af6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021afa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021afe:	f026 0607 	bic.w	r6, r6, #7
 8021b02:	431e      	orrs	r6, r3
 8021b04:	4332      	orrs	r2, r6
 8021b06:	8002      	strh	r2, [r0, #0]
 8021b08:	3002      	adds	r0, #2
 8021b0a:	e7df      	b.n	8021acc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xfc>
 8021b0c:	fb0a f404 	mul.w	r4, sl, r4
 8021b10:	8807      	ldrh	r7, [r0, #0]
 8021b12:	b2f6      	uxtb	r6, r6
 8021b14:	1c63      	adds	r3, r4, #1
 8021b16:	123d      	asrs	r5, r7, #8
 8021b18:	eb03 2324 	add.w	r3, r3, r4, asr #8
 8021b1c:	f3c2 4407 	ubfx	r4, r2, #16, #8
 8021b20:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021b24:	b2d2      	uxtb	r2, r2
 8021b26:	121b      	asrs	r3, r3, #8
 8021b28:	fa1f fc83 	uxth.w	ip, r3
 8021b2c:	43db      	mvns	r3, r3
 8021b2e:	fb14 f40c 	smulbb	r4, r4, ip
 8021b32:	b2db      	uxtb	r3, r3
 8021b34:	fb12 f20c 	smulbb	r2, r2, ip
 8021b38:	fb05 4503 	mla	r5, r5, r3, r4
 8021b3c:	10fc      	asrs	r4, r7, #3
 8021b3e:	fb16 f60c 	smulbb	r6, r6, ip
 8021b42:	00ff      	lsls	r7, r7, #3
 8021b44:	b2ad      	uxth	r5, r5
 8021b46:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021b4a:	b2ff      	uxtb	r7, r7
 8021b4c:	fb04 6603 	mla	r6, r4, r3, r6
 8021b50:	fb07 2203 	mla	r2, r7, r3, r2
 8021b54:	1c6b      	adds	r3, r5, #1
 8021b56:	b2b6      	uxth	r6, r6
 8021b58:	b292      	uxth	r2, r2
 8021b5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021b5e:	1c54      	adds	r4, r2, #1
 8021b60:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021b64:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8021b68:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8021b6c:	4325      	orrs	r5, r4
 8021b6e:	1c74      	adds	r4, r6, #1
 8021b70:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8021b74:	0976      	lsrs	r6, r6, #5
 8021b76:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8021b7a:	4335      	orrs	r5, r6
 8021b7c:	8005      	strh	r5, [r0, #0]
 8021b7e:	e7c3      	b.n	8021b08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x138>
 8021b80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021b82:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 8021b86:	881b      	ldrh	r3, [r3, #0]
 8021b88:	eba4 0409 	sub.w	r4, r4, r9
 8021b8c:	eba3 0309 	sub.w	r3, r3, r9
 8021b90:	440c      	add	r4, r1
 8021b92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021b96:	e792      	b.n	8021abe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8021b98:	4b06      	ldr	r3, [pc, #24]	; (8021bb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8021b9a:	6818      	ldr	r0, [r3, #0]
 8021b9c:	6803      	ldr	r3, [r0, #0]
 8021b9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021ba0:	4798      	blx	r3
 8021ba2:	e771      	b.n	8021a88 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8021ba4:	08031f96 	.word	0x08031f96
 8021ba8:	080326b2 	.word	0x080326b2
 8021bac:	080321ef 	.word	0x080321ef
 8021bb0:	20004160 	.word	0x20004160
 8021bb4:	20004168 	.word	0x20004168

08021bb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8021bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021bbc:	4614      	mov	r4, r2
 8021bbe:	880a      	ldrh	r2, [r1, #0]
 8021bc0:	b091      	sub	sp, #68	; 0x44
 8021bc2:	4607      	mov	r7, r0
 8021bc4:	2a02      	cmp	r2, #2
 8021bc6:	4689      	mov	r9, r1
 8021bc8:	f89d 6068 	ldrb.w	r6, [sp, #104]	; 0x68
 8021bcc:	d006      	beq.n	8021bdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8021bce:	4b77      	ldr	r3, [pc, #476]	; (8021dac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f4>)
 8021bd0:	f240 113b 	movw	r1, #315	; 0x13b
 8021bd4:	4a76      	ldr	r2, [pc, #472]	; (8021db0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f8>)
 8021bd6:	4877      	ldr	r0, [pc, #476]	; (8021db4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1fc>)
 8021bd8:	f00a f986 	bl	802bee8 <__assert_func>
 8021bdc:	2e00      	cmp	r6, #0
 8021bde:	d04b      	beq.n	8021c78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8021be0:	6820      	ldr	r0, [r4, #0]
 8021be2:	ad0c      	add	r5, sp, #48	; 0x30
 8021be4:	6861      	ldr	r1, [r4, #4]
 8021be6:	f8df a1d4 	ldr.w	sl, [pc, #468]	; 8021dbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>
 8021bea:	c503      	stmia	r5!, {r0, r1}
 8021bec:	6818      	ldr	r0, [r3, #0]
 8021bee:	ad0e      	add	r5, sp, #56	; 0x38
 8021bf0:	6859      	ldr	r1, [r3, #4]
 8021bf2:	c503      	stmia	r5!, {r0, r1}
 8021bf4:	a80c      	add	r0, sp, #48	; 0x30
 8021bf6:	f7f9 fb11 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021bfa:	4621      	mov	r1, r4
 8021bfc:	a80e      	add	r0, sp, #56	; 0x38
 8021bfe:	f7f9 faf5 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021c02:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021c06:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021c0a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8021c0e:	f8da 0000 	ldr.w	r0, [sl]
 8021c12:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021c16:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021c1a:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 8021c1e:	187c      	adds	r4, r7, r1
 8021c20:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8021c24:	4f64      	ldr	r7, [pc, #400]	; (8021db8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8021c26:	440a      	add	r2, r1
 8021c28:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8021c2c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021c30:	4413      	add	r3, r2
 8021c32:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021c36:	6803      	ldr	r3, [r0, #0]
 8021c38:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021c3c:	4798      	blx	r3
 8021c3e:	2801      	cmp	r0, #1
 8021c40:	d11d      	bne.n	8021c7e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 8021c42:	2200      	movs	r2, #0
 8021c44:	210b      	movs	r1, #11
 8021c46:	b2ad      	uxth	r5, r5
 8021c48:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8021c4c:	e9cd 1207 	strd	r1, r2, [sp, #28]
 8021c50:	8839      	ldrh	r1, [r7, #0]
 8021c52:	9604      	str	r6, [sp, #16]
 8021c54:	9502      	str	r5, [sp, #8]
 8021c56:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8021c5a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8021c5e:	4621      	mov	r1, r4
 8021c60:	9203      	str	r2, [sp, #12]
 8021c62:	fa1f f288 	uxth.w	r2, r8
 8021c66:	9201      	str	r2, [sp, #4]
 8021c68:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021c6c:	9200      	str	r2, [sp, #0]
 8021c6e:	464a      	mov	r2, r9
 8021c70:	f8da 0000 	ldr.w	r0, [sl]
 8021c74:	f7f5 fac8 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8021c78:	b011      	add	sp, #68	; 0x44
 8021c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c7e:	f8da 0000 	ldr.w	r0, [sl]
 8021c82:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8021c86:	6803      	ldr	r3, [r0, #0]
 8021c88:	6a1b      	ldr	r3, [r3, #32]
 8021c8a:	4798      	blx	r3
 8021c8c:	8839      	ldrh	r1, [r7, #0]
 8021c8e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021c92:	2eff      	cmp	r6, #255	; 0xff
 8021c94:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021c98:	fb05 f501 	mul.w	r5, r5, r1
 8021c9c:	fb01 2303 	mla	r3, r1, r3, r2
 8021ca0:	f109 0204 	add.w	r2, r9, #4
 8021ca4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021ca8:	d05f      	beq.n	8021d6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b2>
 8021caa:	f1c6 09ff 	rsb	r9, r6, #255	; 0xff
 8021cae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8021cb2:	b2b6      	uxth	r6, r6
 8021cb4:	970b      	str	r7, [sp, #44]	; 0x2c
 8021cb6:	fa1f f989 	uxth.w	r9, r9
 8021cba:	42a8      	cmp	r0, r5
 8021cbc:	d26f      	bcs.n	8021d9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8021cbe:	eb00 010b 	add.w	r1, r0, fp
 8021cc2:	4288      	cmp	r0, r1
 8021cc4:	4623      	mov	r3, r4
 8021cc6:	d244      	bcs.n	8021d52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19a>
 8021cc8:	8807      	ldrh	r7, [r0, #0]
 8021cca:	3401      	adds	r4, #1
 8021ccc:	781b      	ldrb	r3, [r3, #0]
 8021cce:	ea4f 2c27 	mov.w	ip, r7, asr #8
 8021cd2:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8021cd6:	ea4f 0ae7 	mov.w	sl, r7, asr #3
 8021cda:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8021cde:	00ff      	lsls	r7, r7, #3
 8021ce0:	ea4f 2e23 	mov.w	lr, r3, asr #8
 8021ce4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8021ce8:	fb1c fc09 	smulbb	ip, ip, r9
 8021cec:	b2ff      	uxtb	r7, r7
 8021cee:	fb1a fa09 	smulbb	sl, sl, r9
 8021cf2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8021cf6:	fb17 f709 	smulbb	r7, r7, r9
 8021cfa:	fb0e ce06 	mla	lr, lr, r6, ip
 8021cfe:	ea4f 0ce3 	mov.w	ip, r3, asr #3
 8021d02:	00db      	lsls	r3, r3, #3
 8021d04:	fa1f fe8e 	uxth.w	lr, lr
 8021d08:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8021d0c:	b2db      	uxtb	r3, r3
 8021d0e:	fb0c ac06 	mla	ip, ip, r6, sl
 8021d12:	f10e 0a01 	add.w	sl, lr, #1
 8021d16:	fb03 7306 	mla	r3, r3, r6, r7
 8021d1a:	eb0a 2e1e 	add.w	lr, sl, lr, lsr #8
 8021d1e:	b29b      	uxth	r3, r3
 8021d20:	f40e 4a78 	and.w	sl, lr, #63488	; 0xf800
 8021d24:	fa1f fc8c 	uxth.w	ip, ip
 8021d28:	f103 0e01 	add.w	lr, r3, #1
 8021d2c:	eb0e 2313 	add.w	r3, lr, r3, lsr #8
 8021d30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021d34:	ea4a 0e03 	orr.w	lr, sl, r3
 8021d38:	f10c 0a01 	add.w	sl, ip, #1
 8021d3c:	eb0a 2c1c 	add.w	ip, sl, ip, lsr #8
 8021d40:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8021d44:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021d48:	ea4e 0e0c 	orr.w	lr, lr, ip
 8021d4c:	f820 eb02 	strh.w	lr, [r0], #2
 8021d50:	e7b7      	b.n	8021cc2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x10a>
 8021d52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021d54:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8021d58:	881b      	ldrh	r3, [r3, #0]
 8021d5a:	eba1 0108 	sub.w	r1, r1, r8
 8021d5e:	eba3 0308 	sub.w	r3, r3, r8
 8021d62:	440c      	add	r4, r1
 8021d64:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021d68:	e7a7      	b.n	8021cba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x102>
 8021d6a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8021d6e:	42a8      	cmp	r0, r5
 8021d70:	d215      	bcs.n	8021d9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1e6>
 8021d72:	eb00 010b 	add.w	r1, r0, fp
 8021d76:	4288      	cmp	r0, r1
 8021d78:	d206      	bcs.n	8021d88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1d0>
 8021d7a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8021d7e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8021d82:	f820 3b02 	strh.w	r3, [r0], #2
 8021d86:	e7f6      	b.n	8021d76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1be>
 8021d88:	883b      	ldrh	r3, [r7, #0]
 8021d8a:	eba3 0308 	sub.w	r3, r3, r8
 8021d8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021d92:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021d96:	eba3 0308 	sub.w	r3, r3, r8
 8021d9a:	441c      	add	r4, r3
 8021d9c:	e7e7      	b.n	8021d6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b6>
 8021d9e:	4b07      	ldr	r3, [pc, #28]	; (8021dbc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 8021da0:	6818      	ldr	r0, [r3, #0]
 8021da2:	6803      	ldr	r3, [r0, #0]
 8021da4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021da6:	4798      	blx	r3
 8021da8:	e766      	b.n	8021c78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8021daa:	bf00      	nop
 8021dac:	08031e54 	.word	0x08031e54
 8021db0:	0803251c 	.word	0x0803251c
 8021db4:	080321ef 	.word	0x080321ef
 8021db8:	20004160 	.word	0x20004160
 8021dbc:	20004168 	.word	0x20004168

08021dc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8021dc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021dc4:	4614      	mov	r4, r2
 8021dc6:	880a      	ldrh	r2, [r1, #0]
 8021dc8:	b091      	sub	sp, #68	; 0x44
 8021dca:	4606      	mov	r6, r0
 8021dcc:	2a01      	cmp	r2, #1
 8021dce:	4688      	mov	r8, r1
 8021dd0:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 8021dd4:	d006      	beq.n	8021de4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 8021dd6:	4b7c      	ldr	r3, [pc, #496]	; (8021fc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x208>)
 8021dd8:	f240 1197 	movw	r1, #407	; 0x197
 8021ddc:	4a7b      	ldr	r2, [pc, #492]	; (8021fcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20c>)
 8021dde:	487c      	ldr	r0, [pc, #496]	; (8021fd0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x210>)
 8021de0:	f00a f882 	bl	802bee8 <__assert_func>
 8021de4:	2f00      	cmp	r7, #0
 8021de6:	d04b      	beq.n	8021e80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8021de8:	6820      	ldr	r0, [r4, #0]
 8021dea:	ad0c      	add	r5, sp, #48	; 0x30
 8021dec:	6861      	ldr	r1, [r4, #4]
 8021dee:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 8021fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8021df2:	c503      	stmia	r5!, {r0, r1}
 8021df4:	6818      	ldr	r0, [r3, #0]
 8021df6:	ad0e      	add	r5, sp, #56	; 0x38
 8021df8:	6859      	ldr	r1, [r3, #4]
 8021dfa:	c503      	stmia	r5!, {r0, r1}
 8021dfc:	a80c      	add	r0, sp, #48	; 0x30
 8021dfe:	f7f9 fa0d 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021e02:	4621      	mov	r1, r4
 8021e04:	a80e      	add	r0, sp, #56	; 0x38
 8021e06:	f7f9 f9f1 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021e0a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8021e0e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021e12:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8021e16:	f8da 0000 	ldr.w	r0, [sl]
 8021e1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8021e1e:	f9bd 503c 	ldrsh.w	r5, [sp, #60]	; 0x3c
 8021e22:	f9bd 903e 	ldrsh.w	r9, [sp, #62]	; 0x3e
 8021e26:	1874      	adds	r4, r6, r1
 8021e28:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8021e2c:	4e69      	ldr	r6, [pc, #420]	; (8021fd4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x214>)
 8021e2e:	440a      	add	r2, r1
 8021e30:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8021e34:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8021e38:	4413      	add	r3, r2
 8021e3a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8021e3e:	6803      	ldr	r3, [r0, #0]
 8021e40:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8021e44:	4798      	blx	r3
 8021e46:	2801      	cmp	r0, #1
 8021e48:	d11d      	bne.n	8021e86 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 8021e4a:	220b      	movs	r2, #11
 8021e4c:	2100      	movs	r1, #0
 8021e4e:	b2ad      	uxth	r5, r5
 8021e50:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8021e54:	e9cd 2107 	strd	r2, r1, [sp, #28]
 8021e58:	8832      	ldrh	r2, [r6, #0]
 8021e5a:	4621      	mov	r1, r4
 8021e5c:	9704      	str	r7, [sp, #16]
 8021e5e:	9501      	str	r5, [sp, #4]
 8021e60:	e9cd 0205 	strd	r0, r2, [sp, #20]
 8021e64:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8021e68:	9203      	str	r2, [sp, #12]
 8021e6a:	fa1f f289 	uxth.w	r2, r9
 8021e6e:	9202      	str	r2, [sp, #8]
 8021e70:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8021e74:	9200      	str	r2, [sp, #0]
 8021e76:	4642      	mov	r2, r8
 8021e78:	f8da 0000 	ldr.w	r0, [sl]
 8021e7c:	f7f5 f9c4 	bl	8017208 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 8021e80:	b011      	add	sp, #68	; 0x44
 8021e82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021e86:	f8da 0000 	ldr.w	r0, [sl]
 8021e8a:	6803      	ldr	r3, [r0, #0]
 8021e8c:	6a1b      	ldr	r3, [r3, #32]
 8021e8e:	4798      	blx	r3
 8021e90:	8832      	ldrh	r2, [r6, #0]
 8021e92:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8021e96:	2fff      	cmp	r7, #255	; 0xff
 8021e98:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8021e9c:	ea4f 0e45 	mov.w	lr, r5, lsl #1
 8021ea0:	fb09 f902 	mul.w	r9, r9, r2
 8021ea4:	fb02 1303 	mla	r3, r2, r3, r1
 8021ea8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021eac:	d056      	beq.n	8021f5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 8021eae:	ea6f 0c07 	mvn.w	ip, r7
 8021eb2:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8021eb6:	b2bb      	uxth	r3, r7
 8021eb8:	960b      	str	r6, [sp, #44]	; 0x2c
 8021eba:	fa5f fc8c 	uxtb.w	ip, ip
 8021ebe:	4548      	cmp	r0, r9
 8021ec0:	d27b      	bcs.n	8021fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8021ec2:	eb00 0a0e 	add.w	sl, r0, lr
 8021ec6:	4550      	cmp	r0, sl
 8021ec8:	4622      	mov	r2, r4
 8021eca:	d23d      	bcs.n	8021f48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x188>
 8021ecc:	7811      	ldrb	r1, [r2, #0]
 8021ece:	2604      	movs	r6, #4
 8021ed0:	2203      	movs	r2, #3
 8021ed2:	3401      	adds	r4, #1
 8021ed4:	fb12 6101 	smlabb	r1, r2, r1, r6
 8021ed8:	8802      	ldrh	r2, [r0, #0]
 8021eda:	eb08 0b01 	add.w	fp, r8, r1
 8021ede:	1217      	asrs	r7, r2, #8
 8021ee0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021ee4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8021ee8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8021eec:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021ef0:	fb16 f603 	smulbb	r6, r6, r3
 8021ef4:	fb1b fb03 	smulbb	fp, fp, r3
 8021ef8:	fb07 670c 	mla	r7, r7, ip, r6
 8021efc:	10d6      	asrs	r6, r2, #3
 8021efe:	00d2      	lsls	r2, r2, #3
 8021f00:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8021f04:	b2bf      	uxth	r7, r7
 8021f06:	b2d2      	uxtb	r2, r2
 8021f08:	fb06 b60c 	mla	r6, r6, ip, fp
 8021f0c:	fb12 f20c 	smulbb	r2, r2, ip
 8021f10:	b2b6      	uxth	r6, r6
 8021f12:	fb01 2103 	mla	r1, r1, r3, r2
 8021f16:	1c7a      	adds	r2, r7, #1
 8021f18:	f106 0b01 	add.w	fp, r6, #1
 8021f1c:	b289      	uxth	r1, r1
 8021f1e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8021f22:	1c4a      	adds	r2, r1, #1
 8021f24:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8021f28:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8021f2c:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8021f30:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8021f34:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021f38:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021f3c:	4317      	orrs	r7, r2
 8021f3e:	ea47 070b 	orr.w	r7, r7, fp
 8021f42:	f820 7b02 	strh.w	r7, [r0], #2
 8021f46:	e7be      	b.n	8021ec6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x106>
 8021f48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8021f4a:	f9bd 1034 	ldrsh.w	r1, [sp, #52]	; 0x34
 8021f4e:	8812      	ldrh	r2, [r2, #0]
 8021f50:	1b49      	subs	r1, r1, r5
 8021f52:	1b52      	subs	r2, r2, r5
 8021f54:	440c      	add	r4, r1
 8021f56:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8021f5a:	e7b0      	b.n	8021ebe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xfe>
 8021f5c:	eb00 0949 	add.w	r9, r0, r9, lsl #1
 8021f60:	2203      	movs	r2, #3
 8021f62:	2704      	movs	r7, #4
 8021f64:	491c      	ldr	r1, [pc, #112]	; (8021fd8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8021f66:	4548      	cmp	r0, r9
 8021f68:	d227      	bcs.n	8021fba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1fa>
 8021f6a:	eb00 0c0e 	add.w	ip, r0, lr
 8021f6e:	4560      	cmp	r0, ip
 8021f70:	4623      	mov	r3, r4
 8021f72:	d219      	bcs.n	8021fa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8021f74:	f893 a000 	ldrb.w	sl, [r3]
 8021f78:	3401      	adds	r4, #1
 8021f7a:	fb12 7a0a 	smlabb	sl, r2, sl, r7
 8021f7e:	eb08 0b0a 	add.w	fp, r8, sl
 8021f82:	f818 a00a 	ldrb.w	sl, [r8, sl]
 8021f86:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8021f8a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8021f8e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8021f92:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8021f96:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8021f9a:	ea43 030b 	orr.w	r3, r3, fp
 8021f9e:	ea43 03da 	orr.w	r3, r3, sl, lsr #3
 8021fa2:	f820 3b02 	strh.w	r3, [r0], #2
 8021fa6:	e7e2      	b.n	8021f6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1ae>
 8021fa8:	8833      	ldrh	r3, [r6, #0]
 8021faa:	1b5b      	subs	r3, r3, r5
 8021fac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8021fb0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8021fb4:	1b5b      	subs	r3, r3, r5
 8021fb6:	441c      	add	r4, r3
 8021fb8:	e7d5      	b.n	8021f66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1a6>
 8021fba:	4b08      	ldr	r3, [pc, #32]	; (8021fdc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8021fbc:	6818      	ldr	r0, [r3, #0]
 8021fbe:	6803      	ldr	r3, [r0, #0]
 8021fc0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8021fc2:	4798      	blx	r3
 8021fc4:	e75c      	b.n	8021e80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 8021fc6:	bf00      	nop
 8021fc8:	08031ea2 	.word	0x08031ea2
 8021fcc:	080325a5 	.word	0x080325a5
 8021fd0:	080321ef 	.word	0x080321ef
 8021fd4:	20004160 	.word	0x20004160
 8021fd8:	fffff800 	.word	0xfffff800
 8021fdc:	20004168 	.word	0x20004168

08021fe0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8021fe0:	b430      	push	{r4, r5}
 8021fe2:	780d      	ldrb	r5, [r1, #0]
 8021fe4:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8021fe8:	2d01      	cmp	r5, #1
 8021fea:	d00a      	beq.n	8022002 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8021fec:	d305      	bcc.n	8021ffa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8021fee:	2d02      	cmp	r5, #2
 8021ff0:	d10b      	bne.n	802200a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8021ff2:	9402      	str	r4, [sp, #8]
 8021ff4:	bc30      	pop	{r4, r5}
 8021ff6:	f7ff bddf 	b.w	8021bb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8021ffa:	9402      	str	r4, [sp, #8]
 8021ffc:	bc30      	pop	{r4, r5}
 8021ffe:	f7ff bce7 	b.w	80219d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8022002:	9402      	str	r4, [sp, #8]
 8022004:	bc30      	pop	{r4, r5}
 8022006:	f7ff bedb 	b.w	8021dc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 802200a:	bc30      	pop	{r4, r5}
 802200c:	4770      	bx	lr
	...

08022010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8022010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022014:	b087      	sub	sp, #28
 8022016:	4604      	mov	r4, r0
 8022018:	460e      	mov	r6, r1
 802201a:	6810      	ldr	r0, [r2, #0]
 802201c:	6851      	ldr	r1, [r2, #4]
 802201e:	ad02      	add	r5, sp, #8
 8022020:	4617      	mov	r7, r2
 8022022:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8022026:	f8df 9230 	ldr.w	r9, [pc, #560]	; 8022258 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 802202a:	c503      	stmia	r5!, {r0, r1}
 802202c:	6818      	ldr	r0, [r3, #0]
 802202e:	ad04      	add	r5, sp, #16
 8022030:	6859      	ldr	r1, [r3, #4]
 8022032:	c503      	stmia	r5!, {r0, r1}
 8022034:	a802      	add	r0, sp, #8
 8022036:	f7f9 f8f1 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802203a:	4639      	mov	r1, r7
 802203c:	a804      	add	r0, sp, #16
 802203e:	f7f9 f8d5 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8022042:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8022046:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802204a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 802204e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8022052:	fb11 2103 	smlabb	r1, r1, r3, r2
 8022056:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802205a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 802205e:	440e      	add	r6, r1
 8022060:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8022064:	440a      	add	r2, r1
 8022066:	f8ad 2010 	strh.w	r2, [sp, #16]
 802206a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802206e:	4413      	add	r3, r2
 8022070:	f8ad 3012 	strh.w	r3, [sp, #18]
 8022074:	4b77      	ldr	r3, [pc, #476]	; (8022254 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8022076:	6818      	ldr	r0, [r3, #0]
 8022078:	6803      	ldr	r3, [r0, #0]
 802207a:	6a1b      	ldr	r3, [r3, #32]
 802207c:	4798      	blx	r3
 802207e:	f8b9 b000 	ldrh.w	fp, [r9]
 8022082:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8022086:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802208a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802208e:	fb05 f50b 	mul.w	r5, r5, fp
 8022092:	fb0b 2303 	mla	r3, fp, r3, r2
 8022096:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802209a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 802209e:	9300      	str	r3, [sp, #0]
 80220a0:	d068      	beq.n	8022174 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x164>
 80220a2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80220a6:	4558      	cmp	r0, fp
 80220a8:	f080 80cc 	bcs.w	8022244 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80220ac:	9b00      	ldr	r3, [sp, #0]
 80220ae:	4631      	mov	r1, r6
 80220b0:	18c3      	adds	r3, r0, r3
 80220b2:	9301      	str	r3, [sp, #4]
 80220b4:	9b01      	ldr	r3, [sp, #4]
 80220b6:	4298      	cmp	r0, r3
 80220b8:	d24e      	bcs.n	8022158 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x148>
 80220ba:	f811 2b01 	ldrb.w	r2, [r1], #1
 80220be:	2a00      	cmp	r2, #0
 80220c0:	d047      	beq.n	8022152 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80220c2:	fb0a f202 	mul.w	r2, sl, r2
 80220c6:	1c53      	adds	r3, r2, #1
 80220c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80220cc:	121b      	asrs	r3, r3, #8
 80220ce:	d040      	beq.n	8022152 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x142>
 80220d0:	8802      	ldrh	r2, [r0, #0]
 80220d2:	b29e      	uxth	r6, r3
 80220d4:	f8b4 c000 	ldrh.w	ip, [r4]
 80220d8:	43db      	mvns	r3, r3
 80220da:	1215      	asrs	r5, r2, #8
 80220dc:	b2db      	uxtb	r3, r3
 80220de:	ea4f 272c 	mov.w	r7, ip, asr #8
 80220e2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80220e6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80220ea:	fb15 f503 	smulbb	r5, r5, r3
 80220ee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80220f2:	00d2      	lsls	r2, r2, #3
 80220f4:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80220f8:	fb07 5706 	mla	r7, r7, r6, r5
 80220fc:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022100:	b2d2      	uxtb	r2, r2
 8022102:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022106:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802210a:	fb1e fe03 	smulbb	lr, lr, r3
 802210e:	b2bf      	uxth	r7, r7
 8022110:	fb12 f203 	smulbb	r2, r2, r3
 8022114:	fa5f fc8c 	uxtb.w	ip, ip
 8022118:	fb05 e506 	mla	r5, r5, r6, lr
 802211c:	1c7b      	adds	r3, r7, #1
 802211e:	fb0c 2c06 	mla	ip, ip, r6, r2
 8022122:	b2ad      	uxth	r5, r5
 8022124:	fa1f fc8c 	uxth.w	ip, ip
 8022128:	f105 0e01 	add.w	lr, r5, #1
 802212c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022130:	f10c 0601 	add.w	r6, ip, #1
 8022134:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8022138:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 802213c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8022140:	096d      	lsrs	r5, r5, #5
 8022142:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8022146:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802214a:	ea47 070c 	orr.w	r7, r7, ip
 802214e:	432f      	orrs	r7, r5
 8022150:	8007      	strh	r7, [r0, #0]
 8022152:	3002      	adds	r0, #2
 8022154:	3402      	adds	r4, #2
 8022156:	e7ad      	b.n	80220b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8022158:	f8b9 3000 	ldrh.w	r3, [r9]
 802215c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022160:	eba3 0308 	sub.w	r3, r3, r8
 8022164:	eba6 0608 	sub.w	r6, r6, r8
 8022168:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802216c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8022170:	440e      	add	r6, r1
 8022172:	e798      	b.n	80220a6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8022174:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8022178:	42a8      	cmp	r0, r5
 802217a:	d263      	bcs.n	8022244 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 802217c:	9b00      	ldr	r3, [sp, #0]
 802217e:	4631      	mov	r1, r6
 8022180:	eb00 0b03 	add.w	fp, r0, r3
 8022184:	4558      	cmp	r0, fp
 8022186:	d24f      	bcs.n	8022228 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8022188:	f811 3b01 	ldrb.w	r3, [r1], #1
 802218c:	b12b      	cbz	r3, 802219a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 802218e:	2bff      	cmp	r3, #255	; 0xff
 8022190:	f8b4 e000 	ldrh.w	lr, [r4]
 8022194:	d104      	bne.n	80221a0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x190>
 8022196:	f8a0 e000 	strh.w	lr, [r0]
 802219a:	3002      	adds	r0, #2
 802219c:	3402      	adds	r4, #2
 802219e:	e7f1      	b.n	8022184 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x174>
 80221a0:	8802      	ldrh	r2, [r0, #0]
 80221a2:	b29f      	uxth	r7, r3
 80221a4:	43db      	mvns	r3, r3
 80221a6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80221aa:	1216      	asrs	r6, r2, #8
 80221ac:	b2db      	uxtb	r3, r3
 80221ae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80221b2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80221b6:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80221ba:	00d2      	lsls	r2, r2, #3
 80221bc:	fb16 f603 	smulbb	r6, r6, r3
 80221c0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80221c4:	b2d2      	uxtb	r2, r2
 80221c6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80221ca:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80221ce:	fb1a fa03 	smulbb	sl, sl, r3
 80221d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80221d6:	fb12 f303 	smulbb	r3, r2, r3
 80221da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80221de:	fa5f fe8e 	uxtb.w	lr, lr
 80221e2:	fb06 a607 	mla	r6, r6, r7, sl
 80221e6:	fa1f fc8c 	uxth.w	ip, ip
 80221ea:	fb0e 3e07 	mla	lr, lr, r7, r3
 80221ee:	b2b6      	uxth	r6, r6
 80221f0:	f10c 0201 	add.w	r2, ip, #1
 80221f4:	fa1f fe8e 	uxth.w	lr, lr
 80221f8:	f106 0a01 	add.w	sl, r6, #1
 80221fc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8022200:	f10e 0301 	add.w	r3, lr, #1
 8022204:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8022208:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802220c:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8022210:	0976      	lsrs	r6, r6, #5
 8022212:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8022216:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 802221a:	ea4c 0c0e 	orr.w	ip, ip, lr
 802221e:	ea4c 0c06 	orr.w	ip, ip, r6
 8022222:	f8a0 c000 	strh.w	ip, [r0]
 8022226:	e7b8      	b.n	802219a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18a>
 8022228:	f8b9 3000 	ldrh.w	r3, [r9]
 802222c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8022230:	eba3 0308 	sub.w	r3, r3, r8
 8022234:	eba6 0608 	sub.w	r6, r6, r8
 8022238:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 802223c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8022240:	440e      	add	r6, r1
 8022242:	e799      	b.n	8022178 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x168>
 8022244:	4b03      	ldr	r3, [pc, #12]	; (8022254 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8022246:	6818      	ldr	r0, [r3, #0]
 8022248:	6803      	ldr	r3, [r0, #0]
 802224a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802224c:	4798      	blx	r3
 802224e:	b007      	add	sp, #28
 8022250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022254:	20004168 	.word	0x20004168
 8022258:	20004160 	.word	0x20004160

0802225c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 802225c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022260:	b089      	sub	sp, #36	; 0x24
 8022262:	4682      	mov	sl, r0
 8022264:	460d      	mov	r5, r1
 8022266:	4691      	mov	r9, r2
 8022268:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 802226c:	4698      	mov	r8, r3
 802226e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022270:	b3ae      	cbz	r6, 80222de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8022272:	4608      	mov	r0, r1
 8022274:	f7fc fa08 	bl	801e688 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8022278:	4607      	mov	r7, r0
 802227a:	4628      	mov	r0, r5
 802227c:	f7fc fa3e 	bl	801e6fc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8022280:	f8ad 000e 	strh.w	r0, [sp, #14]
 8022284:	4628      	mov	r0, r5
 8022286:	f8ad 9008 	strh.w	r9, [sp, #8]
 802228a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802228e:	f8ad 700c 	strh.w	r7, [sp, #12]
 8022292:	f7fc fb8b 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8022296:	b178      	cbz	r0, 80222b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8022298:	4628      	mov	r0, r5
 802229a:	f7fc fb87 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 802229e:	2802      	cmp	r0, #2
 80222a0:	d00a      	beq.n	80222b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80222a2:	4628      	mov	r0, r5
 80222a4:	f7fc fb82 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 80222a8:	280b      	cmp	r0, #11
 80222aa:	d005      	beq.n	80222b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 80222ac:	4b69      	ldr	r3, [pc, #420]	; (8022454 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 80222ae:	214b      	movs	r1, #75	; 0x4b
 80222b0:	4a69      	ldr	r2, [pc, #420]	; (8022458 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 80222b2:	486a      	ldr	r0, [pc, #424]	; (802245c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 80222b4:	f009 fe18 	bl	802bee8 <__assert_func>
 80222b8:	4628      	mov	r0, r5
 80222ba:	f7fc faed 	bl	801e898 <_ZNK8touchgfx6Bitmap7getDataEv>
 80222be:	4607      	mov	r7, r0
 80222c0:	4628      	mov	r0, r5
 80222c2:	f7fc fb1b 	bl	801e8fc <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80222c6:	4681      	mov	r9, r0
 80222c8:	4628      	mov	r0, r5
 80222ca:	f7fc fb6f 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 80222ce:	2802      	cmp	r0, #2
 80222d0:	d108      	bne.n	80222e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80222d2:	4633      	mov	r3, r6
 80222d4:	4622      	mov	r2, r4
 80222d6:	a902      	add	r1, sp, #8
 80222d8:	4638      	mov	r0, r7
 80222da:	f7ff fa69 	bl	80217b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80222de:	b009      	add	sp, #36	; 0x24
 80222e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80222e4:	4628      	mov	r0, r5
 80222e6:	f7fc fb61 	bl	801e9ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 80222ea:	280b      	cmp	r0, #11
 80222ec:	d107      	bne.n	80222fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 80222ee:	9600      	str	r6, [sp, #0]
 80222f0:	4623      	mov	r3, r4
 80222f2:	aa02      	add	r2, sp, #8
 80222f4:	4649      	mov	r1, r9
 80222f6:	4638      	mov	r0, r7
 80222f8:	f7ff fe72 	bl	8021fe0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80222fc:	e7ef      	b.n	80222de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 80222fe:	4628      	mov	r0, r5
 8022300:	f7fc fa90 	bl	801e824 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8022304:	b950      	cbnz	r0, 802231c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8022306:	f8da 3000 	ldr.w	r3, [sl]
 802230a:	aa02      	add	r2, sp, #8
 802230c:	4639      	mov	r1, r7
 802230e:	e9cd 6000 	strd	r6, r0, [sp]
 8022312:	4650      	mov	r0, sl
 8022314:	68dd      	ldr	r5, [r3, #12]
 8022316:	4623      	mov	r3, r4
 8022318:	47a8      	blx	r5
 802231a:	e7e0      	b.n	80222de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 802231c:	f10d 0818 	add.w	r8, sp, #24
 8022320:	4629      	mov	r1, r5
 8022322:	ad04      	add	r5, sp, #16
 8022324:	4640      	mov	r0, r8
 8022326:	f7fc fa23 	bl	801e770 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 802232a:	e898 0003 	ldmia.w	r8, {r0, r1}
 802232e:	e885 0003 	stmia.w	r5, {r0, r1}
 8022332:	4628      	mov	r0, r5
 8022334:	4621      	mov	r1, r4
 8022336:	f7f4 fb1d 	bl	8016974 <_ZN8touchgfx4RectaNERKS0_>
 802233a:	4628      	mov	r0, r5
 802233c:	f7f4 fb5d 	bl	80169fa <_ZNK8touchgfx4Rect7isEmptyEv>
 8022340:	b138      	cbz	r0, 8022352 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8022342:	4623      	mov	r3, r4
 8022344:	9600      	str	r6, [sp, #0]
 8022346:	aa02      	add	r2, sp, #8
 8022348:	4649      	mov	r1, r9
 802234a:	4638      	mov	r0, r7
 802234c:	f7ff fe60 	bl	8022010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8022350:	e7c5      	b.n	80222de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8022352:	f8da 3000 	ldr.w	r3, [sl]
 8022356:	aa02      	add	r2, sp, #8
 8022358:	4639      	mov	r1, r7
 802235a:	e9cd 6000 	strd	r6, r0, [sp]
 802235e:	4650      	mov	r0, sl
 8022360:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8022364:	462b      	mov	r3, r5
 8022366:	47d8      	blx	fp
 8022368:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802236c:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8022370:	4293      	cmp	r3, r2
 8022372:	dd13      	ble.n	802239c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8022374:	f9b4 0000 	ldrsh.w	r0, [r4]
 8022378:	1a9b      	subs	r3, r3, r2
 802237a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802237e:	f8ad 0018 	strh.w	r0, [sp, #24]
 8022382:	4638      	mov	r0, r7
 8022384:	f8ad 201a 	strh.w	r2, [sp, #26]
 8022388:	aa02      	add	r2, sp, #8
 802238a:	f8ad 101c 	strh.w	r1, [sp, #28]
 802238e:	4649      	mov	r1, r9
 8022390:	f8ad 301e 	strh.w	r3, [sp, #30]
 8022394:	4643      	mov	r3, r8
 8022396:	9600      	str	r6, [sp, #0]
 8022398:	f7ff fe3a 	bl	8022010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 802239c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80223a0:	f9b4 2000 	ldrsh.w	r2, [r4]
 80223a4:	4293      	cmp	r3, r2
 80223a6:	dd13      	ble.n	80223d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 80223a8:	1a9b      	subs	r3, r3, r2
 80223aa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80223ae:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80223b2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80223b6:	aa02      	add	r2, sp, #8
 80223b8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80223bc:	4638      	mov	r0, r7
 80223be:	f8ad 301c 	strh.w	r3, [sp, #28]
 80223c2:	4643      	mov	r3, r8
 80223c4:	f8ad 101e 	strh.w	r1, [sp, #30]
 80223c8:	4649      	mov	r1, r9
 80223ca:	9600      	str	r6, [sp, #0]
 80223cc:	f7ff fe20 	bl	8022010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80223d0:	88a2      	ldrh	r2, [r4, #4]
 80223d2:	8823      	ldrh	r3, [r4, #0]
 80223d4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80223d8:	4413      	add	r3, r2
 80223da:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80223de:	440a      	add	r2, r1
 80223e0:	b29b      	uxth	r3, r3
 80223e2:	b292      	uxth	r2, r2
 80223e4:	b218      	sxth	r0, r3
 80223e6:	b211      	sxth	r1, r2
 80223e8:	4288      	cmp	r0, r1
 80223ea:	dd13      	ble.n	8022414 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 80223ec:	1a9b      	subs	r3, r3, r2
 80223ee:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80223f2:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 80223f6:	aa02      	add	r2, sp, #8
 80223f8:	f8ad 1018 	strh.w	r1, [sp, #24]
 80223fc:	4649      	mov	r1, r9
 80223fe:	f8ad 301c 	strh.w	r3, [sp, #28]
 8022402:	4643      	mov	r3, r8
 8022404:	f8ad 001e 	strh.w	r0, [sp, #30]
 8022408:	4638      	mov	r0, r7
 802240a:	9600      	str	r6, [sp, #0]
 802240c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8022410:	f7ff fdfe 	bl	8022010 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8022414:	88e2      	ldrh	r2, [r4, #6]
 8022416:	8863      	ldrh	r3, [r4, #2]
 8022418:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 802241c:	4413      	add	r3, r2
 802241e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8022422:	440a      	add	r2, r1
 8022424:	b29b      	uxth	r3, r3
 8022426:	b292      	uxth	r2, r2
 8022428:	b218      	sxth	r0, r3
 802242a:	b211      	sxth	r1, r2
 802242c:	4288      	cmp	r0, r1
 802242e:	f77f af56 	ble.w	80222de <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8022432:	f9b4 5000 	ldrsh.w	r5, [r4]
 8022436:	1a9b      	subs	r3, r3, r2
 8022438:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802243c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8022440:	4643      	mov	r3, r8
 8022442:	f8ad 5018 	strh.w	r5, [sp, #24]
 8022446:	f8ad 101a 	strh.w	r1, [sp, #26]
 802244a:	f8ad 001c 	strh.w	r0, [sp, #28]
 802244e:	9600      	str	r6, [sp, #0]
 8022450:	e779      	b.n	8022346 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8022452:	bf00      	nop
 8022454:	08031ef0 	.word	0x08031ef0
 8022458:	0803262e 	.word	0x0803262e
 802245c:	080321ef 	.word	0x080321ef

08022460 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8022460:	b508      	push	{r3, lr}
 8022462:	b180      	cbz	r0, 8022486 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8022464:	2902      	cmp	r1, #2
 8022466:	d014      	beq.n	8022492 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8022468:	2903      	cmp	r1, #3
 802246a:	d01d      	beq.n	80224a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 802246c:	2901      	cmp	r1, #1
 802246e:	d101      	bne.n	8022474 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8022470:	2001      	movs	r0, #1
 8022472:	bd08      	pop	{r3, pc}
 8022474:	4b0e      	ldr	r3, [pc, #56]	; (80224b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8022476:	8818      	ldrh	r0, [r3, #0]
 8022478:	b990      	cbnz	r0, 80224a0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 802247a:	4b0e      	ldr	r3, [pc, #56]	; (80224b4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 802247c:	2154      	movs	r1, #84	; 0x54
 802247e:	4a0e      	ldr	r2, [pc, #56]	; (80224b8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8022480:	480e      	ldr	r0, [pc, #56]	; (80224bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8022482:	f009 fd31 	bl	802bee8 <__assert_func>
 8022486:	2902      	cmp	r1, #2
 8022488:	d00e      	beq.n	80224a8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 802248a:	2903      	cmp	r1, #3
 802248c:	d0f2      	beq.n	8022474 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 802248e:	2901      	cmp	r1, #1
 8022490:	d1ee      	bne.n	8022470 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8022492:	4b07      	ldr	r3, [pc, #28]	; (80224b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8022494:	8818      	ldrh	r0, [r3, #0]
 8022496:	2800      	cmp	r0, #0
 8022498:	d0ef      	beq.n	802247a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 802249a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802249e:	e7e8      	b.n	8022472 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80224a0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80224a4:	4240      	negs	r0, r0
 80224a6:	e7e4      	b.n	8022472 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80224a8:	f04f 30ff 	mov.w	r0, #4294967295
 80224ac:	e7e1      	b.n	8022472 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 80224ae:	bf00      	nop
 80224b0:	20004160 	.word	0x20004160
 80224b4:	08032221 	.word	0x08032221
 80224b8:	080327ab 	.word	0x080327ab
 80224bc:	08032263 	.word	0x08032263

080224c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80224c0:	b508      	push	{r3, lr}
 80224c2:	b180      	cbz	r0, 80224e6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80224c4:	2902      	cmp	r1, #2
 80224c6:	d014      	beq.n	80224f2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80224c8:	2903      	cmp	r1, #3
 80224ca:	d018      	beq.n	80224fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80224cc:	2901      	cmp	r1, #1
 80224ce:	d001      	beq.n	80224d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80224d0:	2001      	movs	r0, #1
 80224d2:	e013      	b.n	80224fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80224d4:	4b0e      	ldr	r3, [pc, #56]	; (8022510 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80224d6:	8818      	ldrh	r0, [r3, #0]
 80224d8:	b970      	cbnz	r0, 80224f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80224da:	4b0e      	ldr	r3, [pc, #56]	; (8022514 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80224dc:	2154      	movs	r1, #84	; 0x54
 80224de:	4a0e      	ldr	r2, [pc, #56]	; (8022518 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80224e0:	480e      	ldr	r0, [pc, #56]	; (802251c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80224e2:	f009 fd01 	bl	802bee8 <__assert_func>
 80224e6:	2902      	cmp	r1, #2
 80224e8:	d009      	beq.n	80224fe <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80224ea:	2903      	cmp	r1, #3
 80224ec:	d0f0      	beq.n	80224d0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80224ee:	2901      	cmp	r1, #1
 80224f0:	d1f0      	bne.n	80224d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80224f2:	f04f 30ff 	mov.w	r0, #4294967295
 80224f6:	e001      	b.n	80224fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80224f8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80224fc:	bd08      	pop	{r3, pc}
 80224fe:	4b04      	ldr	r3, [pc, #16]	; (8022510 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8022500:	8818      	ldrh	r0, [r3, #0]
 8022502:	2800      	cmp	r0, #0
 8022504:	d0e9      	beq.n	80224da <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8022506:	f3c0 000e 	ubfx	r0, r0, #0, #15
 802250a:	4240      	negs	r0, r0
 802250c:	e7f6      	b.n	80224fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 802250e:	bf00      	nop
 8022510:	20004160 	.word	0x20004160
 8022514:	08032221 	.word	0x08032221
 8022518:	080327ab 	.word	0x080327ab
 802251c:	08032263 	.word	0x08032263

08022520 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8022520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022524:	b099      	sub	sp, #100	; 0x64
 8022526:	910b      	str	r1, [sp, #44]	; 0x2c
 8022528:	a914      	add	r1, sp, #80	; 0x50
 802252a:	f9bd 5088 	ldrsh.w	r5, [sp, #136]	; 0x88
 802252e:	f8bd 6090 	ldrh.w	r6, [sp, #144]	; 0x90
 8022532:	f8bd 7094 	ldrh.w	r7, [sp, #148]	; 0x94
 8022536:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 802253a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 802253e:	e881 000c 	stmia.w	r1, {r2, r3}
 8022542:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8022546:	f89d 10a4 	ldrb.w	r1, [sp, #164]	; 0xa4
 802254a:	9308      	str	r3, [sp, #32]
 802254c:	910c      	str	r1, [sp, #48]	; 0x30
 802254e:	f89d 10b0 	ldrb.w	r1, [sp, #176]	; 0xb0
 8022552:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
 8022556:	910d      	str	r1, [sp, #52]	; 0x34
 8022558:	f893 b00d 	ldrb.w	fp, [r3, #13]
 802255c:	7998      	ldrb	r0, [r3, #6]
 802255e:	ea4f 114b 	mov.w	r1, fp, lsl #5
 8022562:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8022566:	4301      	orrs	r1, r0
 8022568:	9109      	str	r1, [sp, #36]	; 0x24
 802256a:	f000 81e4 	beq.w	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 802256e:	ea4f 1b0b 	mov.w	fp, fp, lsl #4
 8022572:	79d9      	ldrb	r1, [r3, #7]
 8022574:	f40b 7b80 	and.w	fp, fp, #256	; 0x100
 8022578:	ea51 0b0b 	orrs.w	fp, r1, fp
 802257c:	f000 81db 	beq.w	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 8022580:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8022584:	b29b      	uxth	r3, r3
 8022586:	2e00      	cmp	r6, #0
 8022588:	f000 80fd 	beq.w	8022786 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x266>
 802258c:	1af6      	subs	r6, r6, r3
 802258e:	b2b6      	uxth	r6, r6
 8022590:	0433      	lsls	r3, r6, #16
 8022592:	d502      	bpl.n	802259a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8022594:	1bad      	subs	r5, r5, r6
 8022596:	2600      	movs	r6, #0
 8022598:	b22d      	sxth	r5, r5
 802259a:	f9b2 1000 	ldrsh.w	r1, [r2]
 802259e:	a814      	add	r0, sp, #80	; 0x50
 80225a0:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 80225a4:	428d      	cmp	r5, r1
 80225a6:	b28b      	uxth	r3, r1
 80225a8:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80225ac:	bfbf      	itttt	lt
 80225ae:	18f6      	addlt	r6, r6, r3
 80225b0:	1b75      	sublt	r5, r6, r5
 80225b2:	b2ae      	uxthlt	r6, r5
 80225b4:	460d      	movlt	r5, r1
 80225b6:	8891      	ldrh	r1, [r2, #4]
 80225b8:	440b      	add	r3, r1
 80225ba:	4629      	mov	r1, r5
 80225bc:	b21b      	sxth	r3, r3
 80225be:	9311      	str	r3, [sp, #68]	; 0x44
 80225c0:	8853      	ldrh	r3, [r2, #2]
 80225c2:	88d2      	ldrh	r2, [r2, #6]
 80225c4:	4413      	add	r3, r2
 80225c6:	9a08      	ldr	r2, [sp, #32]
 80225c8:	b21b      	sxth	r3, r3
 80225ca:	9310      	str	r3, [sp, #64]	; 0x40
 80225cc:	4bb1      	ldr	r3, [pc, #708]	; (8022894 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x374>)
 80225ce:	f893 9000 	ldrb.w	r9, [r3]
 80225d2:	f109 3cff 	add.w	ip, r9, #4294967295
 80225d6:	f1dc 0300 	rsbs	r3, ip, #0
 80225da:	eb43 030c 	adc.w	r3, r3, ip
 80225de:	930f      	str	r3, [sp, #60]	; 0x3c
 80225e0:	4653      	mov	r3, sl
 80225e2:	f7f8 fc74 	bl	801aece <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80225e6:	4629      	mov	r1, r5
 80225e8:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80225ec:	4653      	mov	r3, sl
 80225ee:	9a08      	ldr	r2, [sp, #32]
 80225f0:	a814      	add	r0, sp, #80	; 0x50
 80225f2:	f7f8 fc84 	bl	801aefe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80225f6:	a918      	add	r1, sp, #96	; 0x60
 80225f8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80225fc:	a817      	add	r0, sp, #92	; 0x5c
 80225fe:	f7f8 fddf 	bl	801b1c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8022602:	f1ba 0f00 	cmp.w	sl, #0
 8022606:	f040 80c1 	bne.w	802278c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26c>
 802260a:	f1b9 0f01 	cmp.w	r9, #1
 802260e:	f040 80c5 	bne.w	802279c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x27c>
 8022612:	2301      	movs	r3, #1
 8022614:	f1b8 0f01 	cmp.w	r8, #1
 8022618:	fa03 f308 	lsl.w	r3, r3, r8
 802261c:	f103 33ff 	add.w	r3, r3, #4294967295
 8022620:	b2db      	uxtb	r3, r3
 8022622:	930a      	str	r3, [sp, #40]	; 0x28
 8022624:	f000 80e5 	beq.w	80227f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
 8022628:	f1b8 0f02 	cmp.w	r8, #2
 802262c:	f000 80e4 	beq.w	80227f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d8>
 8022630:	f1b8 0f04 	cmp.w	r8, #4
 8022634:	bf15      	itete	ne
 8022636:	46c1      	movne	r9, r8
 8022638:	f04f 0904 	moveq.w	r9, #4
 802263c:	2301      	movne	r3, #1
 802263e:	2311      	moveq	r3, #17
 8022640:	9307      	str	r3, [sp, #28]
 8022642:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022644:	b153      	cbz	r3, 802265c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8022646:	2408      	movs	r4, #8
 8022648:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802264a:	fb94 f3f9 	sdiv	r3, r4, r9
 802264e:	1e5c      	subs	r4, r3, #1
 8022650:	4414      	add	r4, r2
 8022652:	fb94 f4f3 	sdiv	r4, r4, r3
 8022656:	fb14 f403 	smulbb	r4, r4, r3
 802265a:	b2a4      	uxth	r4, r4
 802265c:	b906      	cbnz	r6, 8022660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 802265e:	b16f      	cbz	r7, 802267c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15c>
 8022660:	fb07 6304 	mla	r3, r7, r4, r6
 8022664:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8022666:	4639      	mov	r1, r7
 8022668:	fb08 f303 	mul.w	r3, r8, r3
 802266c:	f003 0707 	and.w	r7, r3, #7
 8022670:	eb02 03d3 	add.w	r3, r2, r3, lsr #3
 8022674:	9328      	str	r3, [sp, #160]	; 0xa0
 8022676:	ebab 0301 	sub.w	r3, fp, r1
 802267a:	930e      	str	r3, [sp, #56]	; 0x38
 802267c:	4651      	mov	r1, sl
 802267e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8022680:	f7ff feee 	bl	8022460 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8022684:	4651      	mov	r1, sl
 8022686:	4683      	mov	fp, r0
 8022688:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802268a:	f7ff ff19 	bl	80224c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 802268e:	9a08      	ldr	r2, [sp, #32]
 8022690:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022692:	4682      	mov	sl, r0
 8022694:	1a9b      	subs	r3, r3, r2
 8022696:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022698:	429a      	cmp	r2, r3
 802269a:	bfa8      	it	ge
 802269c:	461a      	movge	r2, r3
 802269e:	2a00      	cmp	r2, #0
 80226a0:	9208      	str	r2, [sp, #32]
 80226a2:	f340 8148 	ble.w	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80226a6:	1bad      	subs	r5, r5, r6
 80226a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80226aa:	1b5d      	subs	r5, r3, r5
 80226ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80226ae:	429d      	cmp	r5, r3
 80226b0:	bfd4      	ite	le
 80226b2:	ebc6 0605 	rsble	r6, r6, r5
 80226b6:	ebc6 0603 	rsbgt	r6, r6, r3
 80226ba:	2e00      	cmp	r6, #0
 80226bc:	f340 813b 	ble.w	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80226c0:	1ba4      	subs	r4, r4, r6
 80226c2:	fb09 f304 	mul.w	r3, r9, r4
 80226c6:	930e      	str	r3, [sp, #56]	; 0x38
 80226c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80226ca:	2b00      	cmp	r3, #0
 80226cc:	f040 809d 	bne.w	802280a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 80226d0:	4b71      	ldr	r3, [pc, #452]	; (8022898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 80226d2:	6818      	ldr	r0, [r3, #0]
 80226d4:	6803      	ldr	r3, [r0, #0]
 80226d6:	6a1b      	ldr	r3, [r3, #32]
 80226d8:	4798      	blx	r3
 80226da:	4970      	ldr	r1, [pc, #448]	; (802289c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 80226dc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 80226e0:	880c      	ldrh	r4, [r1, #0]
 80226e2:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	; 0x5c
 80226e6:	fb04 1303 	mla	r3, r4, r3, r1
 80226ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80226ee:	9309      	str	r3, [sp, #36]	; 0x24
 80226f0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80226f2:	7819      	ldrb	r1, [r3, #0]
 80226f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80226f6:	4139      	asrs	r1, r7
 80226f8:	0a1b      	lsrs	r3, r3, #8
 80226fa:	b2c9      	uxtb	r1, r1
 80226fc:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022700:	930f      	str	r3, [sp, #60]	; 0x3c
 8022702:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8022704:	08db      	lsrs	r3, r3, #3
 8022706:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802270a:	9310      	str	r3, [sp, #64]	; 0x40
 802270c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802270e:	00db      	lsls	r3, r3, #3
 8022710:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022714:	9311      	str	r3, [sp, #68]	; 0x44
 8022716:	ea4f 034b 	mov.w	r3, fp, lsl #1
 802271a:	fb0b ab16 	mls	fp, fp, r6, sl
 802271e:	fb03 fa06 	mul.w	sl, r3, r6
 8022722:	930c      	str	r3, [sp, #48]	; 0x30
 8022724:	eb0a 034b 	add.w	r3, sl, fp, lsl #1
 8022728:	9312      	str	r3, [sp, #72]	; 0x48
 802272a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802272c:	b29b      	uxth	r3, r3
 802272e:	9313      	str	r3, [sp, #76]	; 0x4c
 8022730:	9b08      	ldr	r3, [sp, #32]
 8022732:	3b01      	subs	r3, #1
 8022734:	9308      	str	r3, [sp, #32]
 8022736:	3301      	adds	r3, #1
 8022738:	f000 80c4 	beq.w	80228c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 802273c:	46b2      	mov	sl, r6
 802273e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8022742:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8022746:	f0c0 80ab 	bcc.w	80228a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 802274a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802274c:	400b      	ands	r3, r1
 802274e:	d00a      	beq.n	8022766 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8022750:	9807      	ldr	r0, [sp, #28]
 8022752:	fb13 f300 	smulbb	r3, r3, r0
 8022756:	2bfe      	cmp	r3, #254	; 0xfe
 8022758:	dd59      	ble.n	802280e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
 802275a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802275c:	28ff      	cmp	r0, #255	; 0xff
 802275e:	d156      	bne.n	802280e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ee>
 8022760:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022762:	f8ae 4000 	strh.w	r4, [lr]
 8022766:	4447      	add	r7, r8
 8022768:	b2bf      	uxth	r7, r7
 802276a:	2f07      	cmp	r7, #7
 802276c:	bf89      	itett	hi
 802276e:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8022770:	fa41 f109 	asrls.w	r1, r1, r9
 8022774:	2700      	movhi	r7, #0
 8022776:	7859      	ldrbhi	r1, [r3, #1]
 8022778:	bf8a      	itet	hi
 802277a:	3301      	addhi	r3, #1
 802277c:	b2c9      	uxtbls	r1, r1
 802277e:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8022780:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022782:	449e      	add	lr, r3
 8022784:	e7dd      	b.n	8022742 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x222>
 8022786:	441d      	add	r5, r3
 8022788:	b22d      	sxth	r5, r5
 802278a:	e706      	b.n	802259a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 802278c:	f1ba 0f01 	cmp.w	sl, #1
 8022790:	f47f af3f 	bne.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8022794:	f1b9 0f01 	cmp.w	r9, #1
 8022798:	f47f af3b 	bne.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 802279c:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8022898 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>
 80227a0:	f8d9 0000 	ldr.w	r0, [r9]
 80227a4:	6803      	ldr	r3, [r0, #0]
 80227a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80227a8:	4798      	blx	r3
 80227aa:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80227ae:	464a      	mov	r2, r9
 80227b0:	d006      	beq.n	80227c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
 80227b2:	f1b8 0f04 	cmp.w	r8, #4
 80227b6:	d11a      	bne.n	80227ee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80227b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80227ba:	3300      	adds	r3, #0
 80227bc:	bf18      	it	ne
 80227be:	2301      	movne	r3, #1
 80227c0:	05c0      	lsls	r0, r0, #23
 80227c2:	f140 8088 	bpl.w	80228d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
 80227c6:	f1b8 0f08 	cmp.w	r8, #8
 80227ca:	f040 8084 	bne.w	80228d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b6>
 80227ce:	2b00      	cmp	r3, #0
 80227d0:	bf14      	ite	ne
 80227d2:	2180      	movne	r1, #128	; 0x80
 80227d4:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80227d8:	2e00      	cmp	r6, #0
 80227da:	f040 80af 	bne.w	802293c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x41c>
 80227de:	2f00      	cmp	r7, #0
 80227e0:	f000 8083 	beq.w	80228ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80227e4:	23ff      	movs	r3, #255	; 0xff
 80227e6:	46c1      	mov	r9, r8
 80227e8:	930a      	str	r3, [sp, #40]	; 0x28
 80227ea:	2301      	movs	r3, #1
 80227ec:	e728      	b.n	8022640 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 80227ee:	2300      	movs	r3, #0
 80227f0:	e7e6      	b.n	80227c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a0>
 80227f2:	46c1      	mov	r9, r8
 80227f4:	23ff      	movs	r3, #255	; 0xff
 80227f6:	e723      	b.n	8022640 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 80227f8:	46c1      	mov	r9, r8
 80227fa:	2355      	movs	r3, #85	; 0x55
 80227fc:	e720      	b.n	8022640 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x120>
 80227fe:	23ff      	movs	r3, #255	; 0xff
 8022800:	46c1      	mov	r9, r8
 8022802:	930a      	str	r3, [sp, #40]	; 0x28
 8022804:	2301      	movs	r3, #1
 8022806:	9307      	str	r3, [sp, #28]
 8022808:	e71d      	b.n	8022646 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x126>
 802280a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 802280c:	e765      	b.n	80226da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ba>
 802280e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8022810:	f8be 5000 	ldrh.w	r5, [lr]
 8022814:	fb10 f303 	smulbb	r3, r0, r3
 8022818:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802281a:	122c      	asrs	r4, r5, #8
 802281c:	b29b      	uxth	r3, r3
 802281e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8022822:	1c58      	adds	r0, r3, #1
 8022824:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022828:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802282a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802282e:	fa1f fc83 	uxth.w	ip, r3
 8022832:	43db      	mvns	r3, r3
 8022834:	fb10 f00c 	smulbb	r0, r0, ip
 8022838:	b2db      	uxtb	r3, r3
 802283a:	fb1c fb02 	smulbb	fp, ip, r2
 802283e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022840:	fb04 0403 	mla	r4, r4, r3, r0
 8022844:	10e8      	asrs	r0, r5, #3
 8022846:	fb1c fc02 	smulbb	ip, ip, r2
 802284a:	00ed      	lsls	r5, r5, #3
 802284c:	b2a4      	uxth	r4, r4
 802284e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8022852:	b2ed      	uxtb	r5, r5
 8022854:	fb00 b003 	mla	r0, r0, r3, fp
 8022858:	fb05 cc03 	mla	ip, r5, r3, ip
 802285c:	1c63      	adds	r3, r4, #1
 802285e:	b280      	uxth	r0, r0
 8022860:	fa1f fc8c 	uxth.w	ip, ip
 8022864:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022868:	f10c 0b01 	add.w	fp, ip, #1
 802286c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8022870:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
 8022874:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8022878:	ea44 040b 	orr.w	r4, r4, fp
 802287c:	f100 0b01 	add.w	fp, r0, #1
 8022880:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8022884:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8022888:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802288c:	ea44 040b 	orr.w	r4, r4, fp
 8022890:	e767      	b.n	8022762 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x242>
 8022892:	bf00      	nop
 8022894:	2000415e 	.word	0x2000415e
 8022898:	20004168 	.word	0x20004168
 802289c:	20004160 	.word	0x20004160
 80228a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80228a2:	b153      	cbz	r3, 80228ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 80228a4:	441f      	add	r7, r3
 80228a6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80228a8:	b2bf      	uxth	r7, r7
 80228aa:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 80228ae:	f007 0707 	and.w	r7, r7, #7
 80228b2:	7819      	ldrb	r1, [r3, #0]
 80228b4:	9328      	str	r3, [sp, #160]	; 0xa0
 80228b6:	4139      	asrs	r1, r7
 80228b8:	b2c9      	uxtb	r1, r1
 80228ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80228bc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80228be:	441a      	add	r2, r3
 80228c0:	9209      	str	r2, [sp, #36]	; 0x24
 80228c2:	e735      	b.n	8022730 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x210>
 80228c4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80228c6:	2b00      	cmp	r3, #0
 80228c8:	d135      	bne.n	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80228ca:	4b21      	ldr	r3, [pc, #132]	; (8022950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x430>)
 80228cc:	6818      	ldr	r0, [r3, #0]
 80228ce:	6803      	ldr	r3, [r0, #0]
 80228d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80228d2:	4798      	blx	r3
 80228d4:	e02f      	b.n	8022936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x416>
 80228d6:	2b00      	cmp	r3, #0
 80228d8:	f43f ae9b 	beq.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80228dc:	2e00      	cmp	r6, #0
 80228de:	f47f ae98 	bne.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80228e2:	2f00      	cmp	r7, #0
 80228e4:	f47f ae95 	bne.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80228e8:	2180      	movs	r1, #128	; 0x80
 80228ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80228ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80228ee:	18eb      	adds	r3, r5, r3
 80228f0:	4283      	cmp	r3, r0
 80228f2:	f73f ae8e 	bgt.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 80228f6:	9b08      	ldr	r3, [sp, #32]
 80228f8:	9810      	ldr	r0, [sp, #64]	; 0x40
 80228fa:	445b      	add	r3, fp
 80228fc:	4283      	cmp	r3, r0
 80228fe:	f73f ae88 	bgt.w	8022612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf2>
 8022902:	f1b8 0f08 	cmp.w	r8, #8
 8022906:	6810      	ldr	r0, [r2, #0]
 8022908:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 802290c:	bf18      	it	ne
 802290e:	3401      	addne	r4, #1
 8022910:	6805      	ldr	r5, [r0, #0]
 8022912:	9105      	str	r1, [sp, #20]
 8022914:	bf18      	it	ne
 8022916:	f024 0401 	bicne.w	r4, r4, #1
 802291a:	990d      	ldr	r1, [sp, #52]	; 0x34
 802291c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8022920:	bf18      	it	ne
 8022922:	b2a4      	uxthne	r4, r4
 8022924:	9104      	str	r1, [sp, #16]
 8022926:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8022928:	e9cd 4b00 	strd	r4, fp, [sp]
 802292c:	e9cd 4102 	strd	r4, r1, [sp, #8]
 8022930:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022932:	6c2c      	ldr	r4, [r5, #64]	; 0x40
 8022934:	47a0      	blx	r4
 8022936:	b019      	add	sp, #100	; 0x64
 8022938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802293c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802293e:	2b00      	cmp	r3, #0
 8022940:	f47f af5d 	bne.w	80227fe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8022944:	23ff      	movs	r3, #255	; 0xff
 8022946:	46c1      	mov	r9, r8
 8022948:	930a      	str	r3, [sp, #40]	; 0x28
 802294a:	2301      	movs	r3, #1
 802294c:	9307      	str	r3, [sp, #28]
 802294e:	e687      	b.n	8022660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 8022950:	20004168 	.word	0x20004168

08022954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8022954:	b538      	push	{r3, r4, r5, lr}
 8022956:	4c15      	ldr	r4, [pc, #84]	; (80229ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8022958:	4605      	mov	r5, r0
 802295a:	7823      	ldrb	r3, [r4, #0]
 802295c:	f3bf 8f5b 	dmb	ish
 8022960:	07da      	lsls	r2, r3, #31
 8022962:	d40b      	bmi.n	802297c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8022964:	4620      	mov	r0, r4
 8022966:	f009 f880 	bl	802ba6a <__cxa_guard_acquire>
 802296a:	b138      	cbz	r0, 802297c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802296c:	4620      	mov	r0, r4
 802296e:	f009 f888 	bl	802ba82 <__cxa_guard_release>
 8022972:	4a0f      	ldr	r2, [pc, #60]	; (80229b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8022974:	490f      	ldr	r1, [pc, #60]	; (80229b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8022976:	4810      	ldr	r0, [pc, #64]	; (80229b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8022978:	f009 f870 	bl	802ba5c <__aeabi_atexit>
 802297c:	4c0f      	ldr	r4, [pc, #60]	; (80229bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802297e:	7823      	ldrb	r3, [r4, #0]
 8022980:	f3bf 8f5b 	dmb	ish
 8022984:	07db      	lsls	r3, r3, #31
 8022986:	d40b      	bmi.n	80229a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8022988:	4620      	mov	r0, r4
 802298a:	f009 f86e 	bl	802ba6a <__cxa_guard_acquire>
 802298e:	b138      	cbz	r0, 80229a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8022990:	4620      	mov	r0, r4
 8022992:	f009 f876 	bl	802ba82 <__cxa_guard_release>
 8022996:	4a06      	ldr	r2, [pc, #24]	; (80229b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8022998:	4909      	ldr	r1, [pc, #36]	; (80229c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802299a:	480a      	ldr	r0, [pc, #40]	; (80229c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802299c:	f009 f85e 	bl	802ba5c <__aeabi_atexit>
 80229a0:	4b05      	ldr	r3, [pc, #20]	; (80229b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80229a2:	612b      	str	r3, [r5, #16]
 80229a4:	4b07      	ldr	r3, [pc, #28]	; (80229c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80229a6:	616b      	str	r3, [r5, #20]
 80229a8:	bd38      	pop	{r3, r4, r5, pc}
 80229aa:	bf00      	nop
 80229ac:	20004254 	.word	0x20004254
 80229b0:	20000000 	.word	0x20000000
 80229b4:	08020f57 	.word	0x08020f57
 80229b8:	20000088 	.word	0x20000088
 80229bc:	20004258 	.word	0x20004258
 80229c0:	08020f55 	.word	0x08020f55
 80229c4:	2000008c 	.word	0x2000008c

080229c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80229c8:	b538      	push	{r3, r4, r5, lr}
 80229ca:	4c15      	ldr	r4, [pc, #84]	; (8022a20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80229cc:	4605      	mov	r5, r0
 80229ce:	7823      	ldrb	r3, [r4, #0]
 80229d0:	f3bf 8f5b 	dmb	ish
 80229d4:	07da      	lsls	r2, r3, #31
 80229d6:	d40b      	bmi.n	80229f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80229d8:	4620      	mov	r0, r4
 80229da:	f009 f846 	bl	802ba6a <__cxa_guard_acquire>
 80229de:	b138      	cbz	r0, 80229f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80229e0:	4620      	mov	r0, r4
 80229e2:	f009 f84e 	bl	802ba82 <__cxa_guard_release>
 80229e6:	4a0f      	ldr	r2, [pc, #60]	; (8022a24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80229e8:	490f      	ldr	r1, [pc, #60]	; (8022a28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80229ea:	4810      	ldr	r0, [pc, #64]	; (8022a2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80229ec:	f009 f836 	bl	802ba5c <__aeabi_atexit>
 80229f0:	4c0f      	ldr	r4, [pc, #60]	; (8022a30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80229f2:	7823      	ldrb	r3, [r4, #0]
 80229f4:	f3bf 8f5b 	dmb	ish
 80229f8:	07db      	lsls	r3, r3, #31
 80229fa:	d40b      	bmi.n	8022a14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80229fc:	4620      	mov	r0, r4
 80229fe:	f009 f834 	bl	802ba6a <__cxa_guard_acquire>
 8022a02:	b138      	cbz	r0, 8022a14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8022a04:	4620      	mov	r0, r4
 8022a06:	f009 f83c 	bl	802ba82 <__cxa_guard_release>
 8022a0a:	4a06      	ldr	r2, [pc, #24]	; (8022a24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8022a0c:	4909      	ldr	r1, [pc, #36]	; (8022a34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8022a0e:	480a      	ldr	r0, [pc, #40]	; (8022a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8022a10:	f009 f824 	bl	802ba5c <__aeabi_atexit>
 8022a14:	4b05      	ldr	r3, [pc, #20]	; (8022a2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8022a16:	60ab      	str	r3, [r5, #8]
 8022a18:	4b07      	ldr	r3, [pc, #28]	; (8022a38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8022a1a:	60eb      	str	r3, [r5, #12]
 8022a1c:	bd38      	pop	{r3, r4, r5, pc}
 8022a1e:	bf00      	nop
 8022a20:	2000422c 	.word	0x2000422c
 8022a24:	20000000 	.word	0x20000000
 8022a28:	08020f5b 	.word	0x08020f5b
 8022a2c:	20000060 	.word	0x20000060
 8022a30:	20004230 	.word	0x20004230
 8022a34:	08020f59 	.word	0x08020f59
 8022a38:	20000064 	.word	0x20000064

08022a3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8022a3c:	b510      	push	{r4, lr}
 8022a3e:	4604      	mov	r4, r0
 8022a40:	f7ff ff88 	bl	8022954 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8022a44:	4620      	mov	r0, r4
 8022a46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022a4a:	f7ff bfbd 	b.w	80229c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08022a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8022a50:	b538      	push	{r3, r4, r5, lr}
 8022a52:	4c15      	ldr	r4, [pc, #84]	; (8022aa8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8022a54:	4605      	mov	r5, r0
 8022a56:	7823      	ldrb	r3, [r4, #0]
 8022a58:	f3bf 8f5b 	dmb	ish
 8022a5c:	07da      	lsls	r2, r3, #31
 8022a5e:	d40b      	bmi.n	8022a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8022a60:	4620      	mov	r0, r4
 8022a62:	f009 f802 	bl	802ba6a <__cxa_guard_acquire>
 8022a66:	b138      	cbz	r0, 8022a78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8022a68:	4620      	mov	r0, r4
 8022a6a:	f009 f80a 	bl	802ba82 <__cxa_guard_release>
 8022a6e:	4a0f      	ldr	r2, [pc, #60]	; (8022aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8022a70:	490f      	ldr	r1, [pc, #60]	; (8022ab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8022a72:	4810      	ldr	r0, [pc, #64]	; (8022ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8022a74:	f008 fff2 	bl	802ba5c <__aeabi_atexit>
 8022a78:	4c0f      	ldr	r4, [pc, #60]	; (8022ab8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8022a7a:	7823      	ldrb	r3, [r4, #0]
 8022a7c:	f3bf 8f5b 	dmb	ish
 8022a80:	07db      	lsls	r3, r3, #31
 8022a82:	d40b      	bmi.n	8022a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8022a84:	4620      	mov	r0, r4
 8022a86:	f008 fff0 	bl	802ba6a <__cxa_guard_acquire>
 8022a8a:	b138      	cbz	r0, 8022a9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8022a8c:	4620      	mov	r0, r4
 8022a8e:	f008 fff8 	bl	802ba82 <__cxa_guard_release>
 8022a92:	4a06      	ldr	r2, [pc, #24]	; (8022aac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8022a94:	4909      	ldr	r1, [pc, #36]	; (8022abc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8022a96:	480a      	ldr	r0, [pc, #40]	; (8022ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8022a98:	f008 ffe0 	bl	802ba5c <__aeabi_atexit>
 8022a9c:	4b05      	ldr	r3, [pc, #20]	; (8022ab4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8022a9e:	622b      	str	r3, [r5, #32]
 8022aa0:	4b07      	ldr	r3, [pc, #28]	; (8022ac0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8022aa2:	626b      	str	r3, [r5, #36]	; 0x24
 8022aa4:	bd38      	pop	{r3, r4, r5, pc}
 8022aa6:	bf00      	nop
 8022aa8:	2000425c 	.word	0x2000425c
 8022aac:	20000000 	.word	0x20000000
 8022ab0:	08020f4f 	.word	0x08020f4f
 8022ab4:	20000090 	.word	0x20000090
 8022ab8:	20004260 	.word	0x20004260
 8022abc:	08020f4d 	.word	0x08020f4d
 8022ac0:	20000094 	.word	0x20000094

08022ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8022ac4:	b538      	push	{r3, r4, r5, lr}
 8022ac6:	4c15      	ldr	r4, [pc, #84]	; (8022b1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8022ac8:	4605      	mov	r5, r0
 8022aca:	7823      	ldrb	r3, [r4, #0]
 8022acc:	f3bf 8f5b 	dmb	ish
 8022ad0:	07da      	lsls	r2, r3, #31
 8022ad2:	d40b      	bmi.n	8022aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022ad4:	4620      	mov	r0, r4
 8022ad6:	f008 ffc8 	bl	802ba6a <__cxa_guard_acquire>
 8022ada:	b138      	cbz	r0, 8022aec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8022adc:	4620      	mov	r0, r4
 8022ade:	f008 ffd0 	bl	802ba82 <__cxa_guard_release>
 8022ae2:	4a0f      	ldr	r2, [pc, #60]	; (8022b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022ae4:	490f      	ldr	r1, [pc, #60]	; (8022b24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8022ae6:	4810      	ldr	r0, [pc, #64]	; (8022b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022ae8:	f008 ffb8 	bl	802ba5c <__aeabi_atexit>
 8022aec:	4c0f      	ldr	r4, [pc, #60]	; (8022b2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8022aee:	7823      	ldrb	r3, [r4, #0]
 8022af0:	f3bf 8f5b 	dmb	ish
 8022af4:	07db      	lsls	r3, r3, #31
 8022af6:	d40b      	bmi.n	8022b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022af8:	4620      	mov	r0, r4
 8022afa:	f008 ffb6 	bl	802ba6a <__cxa_guard_acquire>
 8022afe:	b138      	cbz	r0, 8022b10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8022b00:	4620      	mov	r0, r4
 8022b02:	f008 ffbe 	bl	802ba82 <__cxa_guard_release>
 8022b06:	4a06      	ldr	r2, [pc, #24]	; (8022b20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8022b08:	4909      	ldr	r1, [pc, #36]	; (8022b30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8022b0a:	480a      	ldr	r0, [pc, #40]	; (8022b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8022b0c:	f008 ffa6 	bl	802ba5c <__aeabi_atexit>
 8022b10:	4b05      	ldr	r3, [pc, #20]	; (8022b28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8022b12:	61ab      	str	r3, [r5, #24]
 8022b14:	4b07      	ldr	r3, [pc, #28]	; (8022b34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8022b16:	61eb      	str	r3, [r5, #28]
 8022b18:	bd38      	pop	{r3, r4, r5, pc}
 8022b1a:	bf00      	nop
 8022b1c:	20004234 	.word	0x20004234
 8022b20:	20000000 	.word	0x20000000
 8022b24:	08020f53 	.word	0x08020f53
 8022b28:	20000068 	.word	0x20000068
 8022b2c:	20004238 	.word	0x20004238
 8022b30:	08020f51 	.word	0x08020f51
 8022b34:	2000006c 	.word	0x2000006c

08022b38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8022b38:	b510      	push	{r4, lr}
 8022b3a:	4604      	mov	r4, r0
 8022b3c:	f7ff ff88 	bl	8022a50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8022b40:	4620      	mov	r0, r4
 8022b42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022b46:	f7ff bfbd 	b.w	8022ac4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08022b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8022b4c:	b538      	push	{r3, r4, r5, lr}
 8022b4e:	4c15      	ldr	r4, [pc, #84]	; (8022ba4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8022b50:	4605      	mov	r5, r0
 8022b52:	7823      	ldrb	r3, [r4, #0]
 8022b54:	f3bf 8f5b 	dmb	ish
 8022b58:	07da      	lsls	r2, r3, #31
 8022b5a:	d40b      	bmi.n	8022b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022b5c:	4620      	mov	r0, r4
 8022b5e:	f008 ff84 	bl	802ba6a <__cxa_guard_acquire>
 8022b62:	b138      	cbz	r0, 8022b74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8022b64:	4620      	mov	r0, r4
 8022b66:	f008 ff8c 	bl	802ba82 <__cxa_guard_release>
 8022b6a:	4a0f      	ldr	r2, [pc, #60]	; (8022ba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022b6c:	490f      	ldr	r1, [pc, #60]	; (8022bac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8022b6e:	4810      	ldr	r0, [pc, #64]	; (8022bb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022b70:	f008 ff74 	bl	802ba5c <__aeabi_atexit>
 8022b74:	4c0f      	ldr	r4, [pc, #60]	; (8022bb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8022b76:	7823      	ldrb	r3, [r4, #0]
 8022b78:	f3bf 8f5b 	dmb	ish
 8022b7c:	07db      	lsls	r3, r3, #31
 8022b7e:	d40b      	bmi.n	8022b98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022b80:	4620      	mov	r0, r4
 8022b82:	f008 ff72 	bl	802ba6a <__cxa_guard_acquire>
 8022b86:	b138      	cbz	r0, 8022b98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8022b88:	4620      	mov	r0, r4
 8022b8a:	f008 ff7a 	bl	802ba82 <__cxa_guard_release>
 8022b8e:	4a06      	ldr	r2, [pc, #24]	; (8022ba8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8022b90:	4909      	ldr	r1, [pc, #36]	; (8022bb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8022b92:	480a      	ldr	r0, [pc, #40]	; (8022bbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022b94:	f008 ff62 	bl	802ba5c <__aeabi_atexit>
 8022b98:	4b05      	ldr	r3, [pc, #20]	; (8022bb0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8022b9a:	632b      	str	r3, [r5, #48]	; 0x30
 8022b9c:	4b07      	ldr	r3, [pc, #28]	; (8022bbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8022b9e:	636b      	str	r3, [r5, #52]	; 0x34
 8022ba0:	bd38      	pop	{r3, r4, r5, pc}
 8022ba2:	bf00      	nop
 8022ba4:	2000426c 	.word	0x2000426c
 8022ba8:	20000000 	.word	0x20000000
 8022bac:	08020f47 	.word	0x08020f47
 8022bb0:	200000a0 	.word	0x200000a0
 8022bb4:	20004270 	.word	0x20004270
 8022bb8:	08020f45 	.word	0x08020f45
 8022bbc:	200000a4 	.word	0x200000a4

08022bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8022bc0:	b538      	push	{r3, r4, r5, lr}
 8022bc2:	4c15      	ldr	r4, [pc, #84]	; (8022c18 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8022bc4:	4605      	mov	r5, r0
 8022bc6:	7823      	ldrb	r3, [r4, #0]
 8022bc8:	f3bf 8f5b 	dmb	ish
 8022bcc:	07da      	lsls	r2, r3, #31
 8022bce:	d40b      	bmi.n	8022be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022bd0:	4620      	mov	r0, r4
 8022bd2:	f008 ff4a 	bl	802ba6a <__cxa_guard_acquire>
 8022bd6:	b138      	cbz	r0, 8022be8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8022bd8:	4620      	mov	r0, r4
 8022bda:	f008 ff52 	bl	802ba82 <__cxa_guard_release>
 8022bde:	4a0f      	ldr	r2, [pc, #60]	; (8022c1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022be0:	490f      	ldr	r1, [pc, #60]	; (8022c20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8022be2:	4810      	ldr	r0, [pc, #64]	; (8022c24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022be4:	f008 ff3a 	bl	802ba5c <__aeabi_atexit>
 8022be8:	4c0f      	ldr	r4, [pc, #60]	; (8022c28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8022bea:	7823      	ldrb	r3, [r4, #0]
 8022bec:	f3bf 8f5b 	dmb	ish
 8022bf0:	07db      	lsls	r3, r3, #31
 8022bf2:	d40b      	bmi.n	8022c0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022bf4:	4620      	mov	r0, r4
 8022bf6:	f008 ff38 	bl	802ba6a <__cxa_guard_acquire>
 8022bfa:	b138      	cbz	r0, 8022c0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8022bfc:	4620      	mov	r0, r4
 8022bfe:	f008 ff40 	bl	802ba82 <__cxa_guard_release>
 8022c02:	4a06      	ldr	r2, [pc, #24]	; (8022c1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8022c04:	4909      	ldr	r1, [pc, #36]	; (8022c2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8022c06:	480a      	ldr	r0, [pc, #40]	; (8022c30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022c08:	f008 ff28 	bl	802ba5c <__aeabi_atexit>
 8022c0c:	4b05      	ldr	r3, [pc, #20]	; (8022c24 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8022c0e:	62ab      	str	r3, [r5, #40]	; 0x28
 8022c10:	4b07      	ldr	r3, [pc, #28]	; (8022c30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8022c12:	62eb      	str	r3, [r5, #44]	; 0x2c
 8022c14:	bd38      	pop	{r3, r4, r5, pc}
 8022c16:	bf00      	nop
 8022c18:	2000423c 	.word	0x2000423c
 8022c1c:	20000000 	.word	0x20000000
 8022c20:	08020f4b 	.word	0x08020f4b
 8022c24:	20000070 	.word	0x20000070
 8022c28:	20004240 	.word	0x20004240
 8022c2c:	08020f49 	.word	0x08020f49
 8022c30:	20000074 	.word	0x20000074

08022c34 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8022c34:	b510      	push	{r4, lr}
 8022c36:	4604      	mov	r4, r0
 8022c38:	f7ff ff88 	bl	8022b4c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8022c3c:	4620      	mov	r0, r4
 8022c3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022c42:	f7ff bfbd 	b.w	8022bc0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08022c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8022c48:	b538      	push	{r3, r4, r5, lr}
 8022c4a:	4c15      	ldr	r4, [pc, #84]	; (8022ca0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8022c4c:	4605      	mov	r5, r0
 8022c4e:	7823      	ldrb	r3, [r4, #0]
 8022c50:	f3bf 8f5b 	dmb	ish
 8022c54:	07da      	lsls	r2, r3, #31
 8022c56:	d40b      	bmi.n	8022c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022c58:	4620      	mov	r0, r4
 8022c5a:	f008 ff06 	bl	802ba6a <__cxa_guard_acquire>
 8022c5e:	b138      	cbz	r0, 8022c70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8022c60:	4620      	mov	r0, r4
 8022c62:	f008 ff0e 	bl	802ba82 <__cxa_guard_release>
 8022c66:	4a0f      	ldr	r2, [pc, #60]	; (8022ca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022c68:	490f      	ldr	r1, [pc, #60]	; (8022ca8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8022c6a:	4810      	ldr	r0, [pc, #64]	; (8022cac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022c6c:	f008 fef6 	bl	802ba5c <__aeabi_atexit>
 8022c70:	4c0f      	ldr	r4, [pc, #60]	; (8022cb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8022c72:	7823      	ldrb	r3, [r4, #0]
 8022c74:	f3bf 8f5b 	dmb	ish
 8022c78:	07db      	lsls	r3, r3, #31
 8022c7a:	d40b      	bmi.n	8022c94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022c7c:	4620      	mov	r0, r4
 8022c7e:	f008 fef4 	bl	802ba6a <__cxa_guard_acquire>
 8022c82:	b138      	cbz	r0, 8022c94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8022c84:	4620      	mov	r0, r4
 8022c86:	f008 fefc 	bl	802ba82 <__cxa_guard_release>
 8022c8a:	4a06      	ldr	r2, [pc, #24]	; (8022ca4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8022c8c:	4909      	ldr	r1, [pc, #36]	; (8022cb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8022c8e:	480a      	ldr	r0, [pc, #40]	; (8022cb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022c90:	f008 fee4 	bl	802ba5c <__aeabi_atexit>
 8022c94:	4b05      	ldr	r3, [pc, #20]	; (8022cac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8022c96:	652b      	str	r3, [r5, #80]	; 0x50
 8022c98:	4b07      	ldr	r3, [pc, #28]	; (8022cb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8022c9a:	656b      	str	r3, [r5, #84]	; 0x54
 8022c9c:	bd38      	pop	{r3, r4, r5, pc}
 8022c9e:	bf00      	nop
 8022ca0:	20004274 	.word	0x20004274
 8022ca4:	20000000 	.word	0x20000000
 8022ca8:	08020f37 	.word	0x08020f37
 8022cac:	200000a8 	.word	0x200000a8
 8022cb0:	20004278 	.word	0x20004278
 8022cb4:	08020f35 	.word	0x08020f35
 8022cb8:	200000ac 	.word	0x200000ac

08022cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8022cbc:	b538      	push	{r3, r4, r5, lr}
 8022cbe:	4c15      	ldr	r4, [pc, #84]	; (8022d14 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8022cc0:	4605      	mov	r5, r0
 8022cc2:	7823      	ldrb	r3, [r4, #0]
 8022cc4:	f3bf 8f5b 	dmb	ish
 8022cc8:	07da      	lsls	r2, r3, #31
 8022cca:	d40b      	bmi.n	8022ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022ccc:	4620      	mov	r0, r4
 8022cce:	f008 fecc 	bl	802ba6a <__cxa_guard_acquire>
 8022cd2:	b138      	cbz	r0, 8022ce4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8022cd4:	4620      	mov	r0, r4
 8022cd6:	f008 fed4 	bl	802ba82 <__cxa_guard_release>
 8022cda:	4a0f      	ldr	r2, [pc, #60]	; (8022d18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022cdc:	490f      	ldr	r1, [pc, #60]	; (8022d1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8022cde:	4810      	ldr	r0, [pc, #64]	; (8022d20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022ce0:	f008 febc 	bl	802ba5c <__aeabi_atexit>
 8022ce4:	4c0f      	ldr	r4, [pc, #60]	; (8022d24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8022ce6:	7823      	ldrb	r3, [r4, #0]
 8022ce8:	f3bf 8f5b 	dmb	ish
 8022cec:	07db      	lsls	r3, r3, #31
 8022cee:	d40b      	bmi.n	8022d08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022cf0:	4620      	mov	r0, r4
 8022cf2:	f008 feba 	bl	802ba6a <__cxa_guard_acquire>
 8022cf6:	b138      	cbz	r0, 8022d08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8022cf8:	4620      	mov	r0, r4
 8022cfa:	f008 fec2 	bl	802ba82 <__cxa_guard_release>
 8022cfe:	4a06      	ldr	r2, [pc, #24]	; (8022d18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8022d00:	4909      	ldr	r1, [pc, #36]	; (8022d28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8022d02:	480a      	ldr	r0, [pc, #40]	; (8022d2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8022d04:	f008 feaa 	bl	802ba5c <__aeabi_atexit>
 8022d08:	4b05      	ldr	r3, [pc, #20]	; (8022d20 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8022d0a:	64ab      	str	r3, [r5, #72]	; 0x48
 8022d0c:	4b07      	ldr	r3, [pc, #28]	; (8022d2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8022d0e:	64eb      	str	r3, [r5, #76]	; 0x4c
 8022d10:	bd38      	pop	{r3, r4, r5, pc}
 8022d12:	bf00      	nop
 8022d14:	2000427c 	.word	0x2000427c
 8022d18:	20000000 	.word	0x20000000
 8022d1c:	08020f3b 	.word	0x08020f3b
 8022d20:	200000b0 	.word	0x200000b0
 8022d24:	20004280 	.word	0x20004280
 8022d28:	08020f39 	.word	0x08020f39
 8022d2c:	200000b4 	.word	0x200000b4

08022d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8022d30:	b538      	push	{r3, r4, r5, lr}
 8022d32:	4c15      	ldr	r4, [pc, #84]	; (8022d88 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8022d34:	4605      	mov	r5, r0
 8022d36:	7823      	ldrb	r3, [r4, #0]
 8022d38:	f3bf 8f5b 	dmb	ish
 8022d3c:	07da      	lsls	r2, r3, #31
 8022d3e:	d40b      	bmi.n	8022d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022d40:	4620      	mov	r0, r4
 8022d42:	f008 fe92 	bl	802ba6a <__cxa_guard_acquire>
 8022d46:	b138      	cbz	r0, 8022d58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8022d48:	4620      	mov	r0, r4
 8022d4a:	f008 fe9a 	bl	802ba82 <__cxa_guard_release>
 8022d4e:	4a0f      	ldr	r2, [pc, #60]	; (8022d8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022d50:	490f      	ldr	r1, [pc, #60]	; (8022d90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8022d52:	4810      	ldr	r0, [pc, #64]	; (8022d94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022d54:	f008 fe82 	bl	802ba5c <__aeabi_atexit>
 8022d58:	4c0f      	ldr	r4, [pc, #60]	; (8022d98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8022d5a:	7823      	ldrb	r3, [r4, #0]
 8022d5c:	f3bf 8f5b 	dmb	ish
 8022d60:	07db      	lsls	r3, r3, #31
 8022d62:	d40b      	bmi.n	8022d7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022d64:	4620      	mov	r0, r4
 8022d66:	f008 fe80 	bl	802ba6a <__cxa_guard_acquire>
 8022d6a:	b138      	cbz	r0, 8022d7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8022d6c:	4620      	mov	r0, r4
 8022d6e:	f008 fe88 	bl	802ba82 <__cxa_guard_release>
 8022d72:	4a06      	ldr	r2, [pc, #24]	; (8022d8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8022d74:	4909      	ldr	r1, [pc, #36]	; (8022d9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8022d76:	480a      	ldr	r0, [pc, #40]	; (8022da0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022d78:	f008 fe70 	bl	802ba5c <__aeabi_atexit>
 8022d7c:	4b05      	ldr	r3, [pc, #20]	; (8022d94 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8022d7e:	642b      	str	r3, [r5, #64]	; 0x40
 8022d80:	4b07      	ldr	r3, [pc, #28]	; (8022da0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8022d82:	646b      	str	r3, [r5, #68]	; 0x44
 8022d84:	bd38      	pop	{r3, r4, r5, pc}
 8022d86:	bf00      	nop
 8022d88:	20004244 	.word	0x20004244
 8022d8c:	20000000 	.word	0x20000000
 8022d90:	08020f3f 	.word	0x08020f3f
 8022d94:	20000078 	.word	0x20000078
 8022d98:	20004248 	.word	0x20004248
 8022d9c:	08020f3d 	.word	0x08020f3d
 8022da0:	2000007c 	.word	0x2000007c

08022da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8022da4:	b538      	push	{r3, r4, r5, lr}
 8022da6:	4c15      	ldr	r4, [pc, #84]	; (8022dfc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8022da8:	4605      	mov	r5, r0
 8022daa:	7823      	ldrb	r3, [r4, #0]
 8022dac:	f3bf 8f5b 	dmb	ish
 8022db0:	07da      	lsls	r2, r3, #31
 8022db2:	d40b      	bmi.n	8022dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022db4:	4620      	mov	r0, r4
 8022db6:	f008 fe58 	bl	802ba6a <__cxa_guard_acquire>
 8022dba:	b138      	cbz	r0, 8022dcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8022dbc:	4620      	mov	r0, r4
 8022dbe:	f008 fe60 	bl	802ba82 <__cxa_guard_release>
 8022dc2:	4a0f      	ldr	r2, [pc, #60]	; (8022e00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022dc4:	490f      	ldr	r1, [pc, #60]	; (8022e04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8022dc6:	4810      	ldr	r0, [pc, #64]	; (8022e08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022dc8:	f008 fe48 	bl	802ba5c <__aeabi_atexit>
 8022dcc:	4c0f      	ldr	r4, [pc, #60]	; (8022e0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8022dce:	7823      	ldrb	r3, [r4, #0]
 8022dd0:	f3bf 8f5b 	dmb	ish
 8022dd4:	07db      	lsls	r3, r3, #31
 8022dd6:	d40b      	bmi.n	8022df0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022dd8:	4620      	mov	r0, r4
 8022dda:	f008 fe46 	bl	802ba6a <__cxa_guard_acquire>
 8022dde:	b138      	cbz	r0, 8022df0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8022de0:	4620      	mov	r0, r4
 8022de2:	f008 fe4e 	bl	802ba82 <__cxa_guard_release>
 8022de6:	4a06      	ldr	r2, [pc, #24]	; (8022e00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8022de8:	4909      	ldr	r1, [pc, #36]	; (8022e10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8022dea:	480a      	ldr	r0, [pc, #40]	; (8022e14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022dec:	f008 fe36 	bl	802ba5c <__aeabi_atexit>
 8022df0:	4b05      	ldr	r3, [pc, #20]	; (8022e08 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8022df2:	63ab      	str	r3, [r5, #56]	; 0x38
 8022df4:	4b07      	ldr	r3, [pc, #28]	; (8022e14 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8022df6:	63eb      	str	r3, [r5, #60]	; 0x3c
 8022df8:	bd38      	pop	{r3, r4, r5, pc}
 8022dfa:	bf00      	nop
 8022dfc:	20004264 	.word	0x20004264
 8022e00:	20000000 	.word	0x20000000
 8022e04:	08020f43 	.word	0x08020f43
 8022e08:	20000098 	.word	0x20000098
 8022e0c:	20004268 	.word	0x20004268
 8022e10:	08020f41 	.word	0x08020f41
 8022e14:	2000009c 	.word	0x2000009c

08022e18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8022e18:	b510      	push	{r4, lr}
 8022e1a:	4604      	mov	r4, r0
 8022e1c:	f7ff ff14 	bl	8022c48 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8022e20:	4620      	mov	r0, r4
 8022e22:	f7ff ff85 	bl	8022d30 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8022e26:	4620      	mov	r0, r4
 8022e28:	f7ff ff48 	bl	8022cbc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8022e2c:	4620      	mov	r0, r4
 8022e2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022e32:	f7ff bfb7 	b.w	8022da4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08022e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8022e38:	b538      	push	{r3, r4, r5, lr}
 8022e3a:	4c15      	ldr	r4, [pc, #84]	; (8022e90 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8022e3c:	4605      	mov	r5, r0
 8022e3e:	7823      	ldrb	r3, [r4, #0]
 8022e40:	f3bf 8f5b 	dmb	ish
 8022e44:	07da      	lsls	r2, r3, #31
 8022e46:	d40b      	bmi.n	8022e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022e48:	4620      	mov	r0, r4
 8022e4a:	f008 fe0e 	bl	802ba6a <__cxa_guard_acquire>
 8022e4e:	b138      	cbz	r0, 8022e60 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8022e50:	4620      	mov	r0, r4
 8022e52:	f008 fe16 	bl	802ba82 <__cxa_guard_release>
 8022e56:	4a0f      	ldr	r2, [pc, #60]	; (8022e94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022e58:	490f      	ldr	r1, [pc, #60]	; (8022e98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8022e5a:	4810      	ldr	r0, [pc, #64]	; (8022e9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022e5c:	f008 fdfe 	bl	802ba5c <__aeabi_atexit>
 8022e60:	4c0f      	ldr	r4, [pc, #60]	; (8022ea0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8022e62:	7823      	ldrb	r3, [r4, #0]
 8022e64:	f3bf 8f5b 	dmb	ish
 8022e68:	07db      	lsls	r3, r3, #31
 8022e6a:	d40b      	bmi.n	8022e84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022e6c:	4620      	mov	r0, r4
 8022e6e:	f008 fdfc 	bl	802ba6a <__cxa_guard_acquire>
 8022e72:	b138      	cbz	r0, 8022e84 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8022e74:	4620      	mov	r0, r4
 8022e76:	f008 fe04 	bl	802ba82 <__cxa_guard_release>
 8022e7a:	4a06      	ldr	r2, [pc, #24]	; (8022e94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8022e7c:	4909      	ldr	r1, [pc, #36]	; (8022ea4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8022e7e:	480a      	ldr	r0, [pc, #40]	; (8022ea8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022e80:	f008 fdec 	bl	802ba5c <__aeabi_atexit>
 8022e84:	4b05      	ldr	r3, [pc, #20]	; (8022e9c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8022e86:	662b      	str	r3, [r5, #96]	; 0x60
 8022e88:	4b07      	ldr	r3, [pc, #28]	; (8022ea8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8022e8a:	666b      	str	r3, [r5, #100]	; 0x64
 8022e8c:	bd38      	pop	{r3, r4, r5, pc}
 8022e8e:	bf00      	nop
 8022e90:	2000424c 	.word	0x2000424c
 8022e94:	20000000 	.word	0x20000000
 8022e98:	08020f2f 	.word	0x08020f2f
 8022e9c:	20000080 	.word	0x20000080
 8022ea0:	20004250 	.word	0x20004250
 8022ea4:	08020f2d 	.word	0x08020f2d
 8022ea8:	20000084 	.word	0x20000084

08022eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8022eac:	b538      	push	{r3, r4, r5, lr}
 8022eae:	4c15      	ldr	r4, [pc, #84]	; (8022f04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8022eb0:	4605      	mov	r5, r0
 8022eb2:	7823      	ldrb	r3, [r4, #0]
 8022eb4:	f3bf 8f5b 	dmb	ish
 8022eb8:	07da      	lsls	r2, r3, #31
 8022eba:	d40b      	bmi.n	8022ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022ebc:	4620      	mov	r0, r4
 8022ebe:	f008 fdd4 	bl	802ba6a <__cxa_guard_acquire>
 8022ec2:	b138      	cbz	r0, 8022ed4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8022ec4:	4620      	mov	r0, r4
 8022ec6:	f008 fddc 	bl	802ba82 <__cxa_guard_release>
 8022eca:	4a0f      	ldr	r2, [pc, #60]	; (8022f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022ecc:	490f      	ldr	r1, [pc, #60]	; (8022f0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8022ece:	4810      	ldr	r0, [pc, #64]	; (8022f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022ed0:	f008 fdc4 	bl	802ba5c <__aeabi_atexit>
 8022ed4:	4c0f      	ldr	r4, [pc, #60]	; (8022f14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8022ed6:	7823      	ldrb	r3, [r4, #0]
 8022ed8:	f3bf 8f5b 	dmb	ish
 8022edc:	07db      	lsls	r3, r3, #31
 8022ede:	d40b      	bmi.n	8022ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022ee0:	4620      	mov	r0, r4
 8022ee2:	f008 fdc2 	bl	802ba6a <__cxa_guard_acquire>
 8022ee6:	b138      	cbz	r0, 8022ef8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8022ee8:	4620      	mov	r0, r4
 8022eea:	f008 fdca 	bl	802ba82 <__cxa_guard_release>
 8022eee:	4a06      	ldr	r2, [pc, #24]	; (8022f08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8022ef0:	4909      	ldr	r1, [pc, #36]	; (8022f18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8022ef2:	480a      	ldr	r0, [pc, #40]	; (8022f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022ef4:	f008 fdb2 	bl	802ba5c <__aeabi_atexit>
 8022ef8:	4b05      	ldr	r3, [pc, #20]	; (8022f10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8022efa:	65ab      	str	r3, [r5, #88]	; 0x58
 8022efc:	4b07      	ldr	r3, [pc, #28]	; (8022f1c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8022efe:	65eb      	str	r3, [r5, #92]	; 0x5c
 8022f00:	bd38      	pop	{r3, r4, r5, pc}
 8022f02:	bf00      	nop
 8022f04:	20004224 	.word	0x20004224
 8022f08:	20000000 	.word	0x20000000
 8022f0c:	08020f33 	.word	0x08020f33
 8022f10:	20000058 	.word	0x20000058
 8022f14:	20004228 	.word	0x20004228
 8022f18:	08020f31 	.word	0x08020f31
 8022f1c:	2000005c 	.word	0x2000005c

08022f20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8022f20:	b510      	push	{r4, lr}
 8022f22:	4604      	mov	r4, r0
 8022f24:	f7ff ff88 	bl	8022e38 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8022f28:	4620      	mov	r0, r4
 8022f2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022f2e:	f7ff bfbd 	b.w	8022eac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08022f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8022f34:	b538      	push	{r3, r4, r5, lr}
 8022f36:	4c15      	ldr	r4, [pc, #84]	; (8022f8c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8022f38:	4605      	mov	r5, r0
 8022f3a:	7823      	ldrb	r3, [r4, #0]
 8022f3c:	f3bf 8f5b 	dmb	ish
 8022f40:	07da      	lsls	r2, r3, #31
 8022f42:	d40b      	bmi.n	8022f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022f44:	4620      	mov	r0, r4
 8022f46:	f008 fd90 	bl	802ba6a <__cxa_guard_acquire>
 8022f4a:	b138      	cbz	r0, 8022f5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8022f4c:	4620      	mov	r0, r4
 8022f4e:	f008 fd98 	bl	802ba82 <__cxa_guard_release>
 8022f52:	4a0f      	ldr	r2, [pc, #60]	; (8022f90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022f54:	490f      	ldr	r1, [pc, #60]	; (8022f94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8022f56:	4810      	ldr	r0, [pc, #64]	; (8022f98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022f58:	f008 fd80 	bl	802ba5c <__aeabi_atexit>
 8022f5c:	4c0f      	ldr	r4, [pc, #60]	; (8022f9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8022f5e:	7823      	ldrb	r3, [r4, #0]
 8022f60:	f3bf 8f5b 	dmb	ish
 8022f64:	07db      	lsls	r3, r3, #31
 8022f66:	d40b      	bmi.n	8022f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022f68:	4620      	mov	r0, r4
 8022f6a:	f008 fd7e 	bl	802ba6a <__cxa_guard_acquire>
 8022f6e:	b138      	cbz	r0, 8022f80 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8022f70:	4620      	mov	r0, r4
 8022f72:	f008 fd86 	bl	802ba82 <__cxa_guard_release>
 8022f76:	4a06      	ldr	r2, [pc, #24]	; (8022f90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8022f78:	4909      	ldr	r1, [pc, #36]	; (8022fa0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8022f7a:	480a      	ldr	r0, [pc, #40]	; (8022fa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022f7c:	f008 fd6e 	bl	802ba5c <__aeabi_atexit>
 8022f80:	4b05      	ldr	r3, [pc, #20]	; (8022f98 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8022f82:	672b      	str	r3, [r5, #112]	; 0x70
 8022f84:	4b07      	ldr	r3, [pc, #28]	; (8022fa4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8022f86:	676b      	str	r3, [r5, #116]	; 0x74
 8022f88:	bd38      	pop	{r3, r4, r5, pc}
 8022f8a:	bf00      	nop
 8022f8c:	2000421c 	.word	0x2000421c
 8022f90:	20000000 	.word	0x20000000
 8022f94:	08020f27 	.word	0x08020f27
 8022f98:	20000050 	.word	0x20000050
 8022f9c:	20004220 	.word	0x20004220
 8022fa0:	08020f25 	.word	0x08020f25
 8022fa4:	20000054 	.word	0x20000054

08022fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8022fa8:	b538      	push	{r3, r4, r5, lr}
 8022faa:	4c15      	ldr	r4, [pc, #84]	; (8023000 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8022fac:	4605      	mov	r5, r0
 8022fae:	7823      	ldrb	r3, [r4, #0]
 8022fb0:	f3bf 8f5b 	dmb	ish
 8022fb4:	07da      	lsls	r2, r3, #31
 8022fb6:	d40b      	bmi.n	8022fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022fb8:	4620      	mov	r0, r4
 8022fba:	f008 fd56 	bl	802ba6a <__cxa_guard_acquire>
 8022fbe:	b138      	cbz	r0, 8022fd0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8022fc0:	4620      	mov	r0, r4
 8022fc2:	f008 fd5e 	bl	802ba82 <__cxa_guard_release>
 8022fc6:	4a0f      	ldr	r2, [pc, #60]	; (8023004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022fc8:	490f      	ldr	r1, [pc, #60]	; (8023008 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8022fca:	4810      	ldr	r0, [pc, #64]	; (802300c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022fcc:	f008 fd46 	bl	802ba5c <__aeabi_atexit>
 8022fd0:	4c0f      	ldr	r4, [pc, #60]	; (8023010 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8022fd2:	7823      	ldrb	r3, [r4, #0]
 8022fd4:	f3bf 8f5b 	dmb	ish
 8022fd8:	07db      	lsls	r3, r3, #31
 8022fda:	d40b      	bmi.n	8022ff4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022fdc:	4620      	mov	r0, r4
 8022fde:	f008 fd44 	bl	802ba6a <__cxa_guard_acquire>
 8022fe2:	b138      	cbz	r0, 8022ff4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8022fe4:	4620      	mov	r0, r4
 8022fe6:	f008 fd4c 	bl	802ba82 <__cxa_guard_release>
 8022fea:	4a06      	ldr	r2, [pc, #24]	; (8023004 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8022fec:	4909      	ldr	r1, [pc, #36]	; (8023014 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8022fee:	480a      	ldr	r0, [pc, #40]	; (8023018 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022ff0:	f008 fd34 	bl	802ba5c <__aeabi_atexit>
 8022ff4:	4b05      	ldr	r3, [pc, #20]	; (802300c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8022ff6:	66ab      	str	r3, [r5, #104]	; 0x68
 8022ff8:	4b07      	ldr	r3, [pc, #28]	; (8023018 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8022ffa:	66eb      	str	r3, [r5, #108]	; 0x6c
 8022ffc:	bd38      	pop	{r3, r4, r5, pc}
 8022ffe:	bf00      	nop
 8023000:	20004214 	.word	0x20004214
 8023004:	20000000 	.word	0x20000000
 8023008:	08020f2b 	.word	0x08020f2b
 802300c:	20000048 	.word	0x20000048
 8023010:	20004218 	.word	0x20004218
 8023014:	08020f29 	.word	0x08020f29
 8023018:	2000004c 	.word	0x2000004c

0802301c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802301c:	b510      	push	{r4, lr}
 802301e:	4604      	mov	r4, r0
 8023020:	f7ff ff88 	bl	8022f34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8023024:	4620      	mov	r0, r4
 8023026:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802302a:	f7ff bfbd 	b.w	8022fa8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802302e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802302e:	b510      	push	{r4, lr}
 8023030:	4604      	mov	r4, r0
 8023032:	f7ff fff3 	bl	802301c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8023036:	4620      	mov	r0, r4
 8023038:	f7ff ff72 	bl	8022f20 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802303c:	4620      	mov	r0, r4
 802303e:	f7ff fdf9 	bl	8022c34 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8023042:	4620      	mov	r0, r4
 8023044:	f7ff fcfa 	bl	8022a3c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8023048:	4620      	mov	r0, r4
 802304a:	f7ff fd75 	bl	8022b38 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802304e:	4620      	mov	r0, r4
 8023050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023054:	f7ff bee0 	b.w	8022e18 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08023058 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8023058:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802305c:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8023060:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8023064:	f1be 0f00 	cmp.w	lr, #0
 8023068:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802306c:	fb0e 4708 	mla	r7, lr, r8, r4
 8023070:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8023074:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8023078:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 802307c:	eb02 0a07 	add.w	sl, r2, r7
 8023080:	8808      	ldrh	r0, [r1, #0]
 8023082:	db37      	blt.n	80230f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8023084:	45f3      	cmp	fp, lr
 8023086:	dd35      	ble.n	80230f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8023088:	2c00      	cmp	r4, #0
 802308a:	db31      	blt.n	80230f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 802308c:	45a0      	cmp	r8, r4
 802308e:	dd2f      	ble.n	80230f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8023090:	5dd2      	ldrb	r2, [r2, r7]
 8023092:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8023096:	1c62      	adds	r2, r4, #1
 8023098:	d42f      	bmi.n	80230fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 802309a:	4590      	cmp	r8, r2
 802309c:	dd2d      	ble.n	80230fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 802309e:	b366      	cbz	r6, 80230fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 80230a0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80230a4:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80230a8:	f11e 0e01 	adds.w	lr, lr, #1
 80230ac:	d429      	bmi.n	8023102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80230ae:	45f3      	cmp	fp, lr
 80230b0:	dd27      	ble.n	8023102 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 80230b2:	f1bc 0f00 	cmp.w	ip, #0
 80230b6:	f000 80a0 	beq.w	80231fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 80230ba:	2c00      	cmp	r4, #0
 80230bc:	db1f      	blt.n	80230fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80230be:	45a0      	cmp	r8, r4
 80230c0:	dd1d      	ble.n	80230fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80230c2:	f81a 2008 	ldrb.w	r2, [sl, r8]
 80230c6:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 80230ca:	3401      	adds	r4, #1
 80230cc:	d41c      	bmi.n	8023108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80230ce:	45a0      	cmp	r8, r4
 80230d0:	dd1a      	ble.n	8023108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 80230d2:	b1de      	cbz	r6, 802310c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 80230d4:	44d0      	add	r8, sl
 80230d6:	f898 2001 	ldrb.w	r2, [r8, #1]
 80230da:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80230de:	2e0f      	cmp	r6, #15
 80230e0:	d915      	bls.n	802310e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 80230e2:	4b49      	ldr	r3, [pc, #292]	; (8023208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80230e4:	f240 11ef 	movw	r1, #495	; 0x1ef
 80230e8:	4a48      	ldr	r2, [pc, #288]	; (802320c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80230ea:	4849      	ldr	r0, [pc, #292]	; (8023210 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80230ec:	f008 fefc 	bl	802bee8 <__assert_func>
 80230f0:	4681      	mov	r9, r0
 80230f2:	e7d0      	b.n	8023096 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80230f4:	4607      	mov	r7, r0
 80230f6:	4681      	mov	r9, r0
 80230f8:	e7d6      	b.n	80230a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80230fa:	4607      	mov	r7, r0
 80230fc:	e7d4      	b.n	80230a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80230fe:	4686      	mov	lr, r0
 8023100:	e7e3      	b.n	80230ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8023102:	4603      	mov	r3, r0
 8023104:	4686      	mov	lr, r0
 8023106:	e7ea      	b.n	80230de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8023108:	4603      	mov	r3, r0
 802310a:	e7e8      	b.n	80230de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 802310c:	4603      	mov	r3, r0
 802310e:	f1bc 0f0f 	cmp.w	ip, #15
 8023112:	d8e6      	bhi.n	80230e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8023114:	fb16 f80c 	smulbb	r8, r6, ip
 8023118:	ea4f 4409 	mov.w	r4, r9, lsl #16
 802311c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023120:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023124:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023128:	ea4f 08e8 	mov.w	r8, r8, asr #3
 802312c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023130:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023134:	ea44 0909 	orr.w	r9, r4, r9
 8023138:	f1cc 0410 	rsb	r4, ip, #16
 802313c:	041a      	lsls	r2, r3, #16
 802313e:	ea4a 0707 	orr.w	r7, sl, r7
 8023142:	1ba4      	subs	r4, r4, r6
 8023144:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8023148:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802314c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023150:	4377      	muls	r7, r6
 8023152:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8023156:	4313      	orrs	r3, r2
 8023158:	ea4f 420e 	mov.w	r2, lr, lsl #16
 802315c:	fb04 7409 	mla	r4, r4, r9, r7
 8023160:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8023164:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023168:	b2af      	uxth	r7, r5
 802316a:	fb08 4303 	mla	r3, r8, r3, r4
 802316e:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8023172:	43ed      	mvns	r5, r5
 8023174:	10c6      	asrs	r6, r0, #3
 8023176:	4322      	orrs	r2, r4
 8023178:	b2ed      	uxtb	r5, r5
 802317a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802317e:	fb0c 3202 	mla	r2, ip, r2, r3
 8023182:	fb16 f605 	smulbb	r6, r6, r5
 8023186:	0d53      	lsrs	r3, r2, #21
 8023188:	0952      	lsrs	r2, r2, #5
 802318a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802318e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023192:	431a      	orrs	r2, r3
 8023194:	b293      	uxth	r3, r2
 8023196:	1202      	asrs	r2, r0, #8
 8023198:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802319c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80231a0:	00dc      	lsls	r4, r3, #3
 80231a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80231a6:	fb12 f205 	smulbb	r2, r2, r5
 80231aa:	b2e4      	uxtb	r4, r4
 80231ac:	fb0c 2c07 	mla	ip, ip, r7, r2
 80231b0:	10da      	asrs	r2, r3, #3
 80231b2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80231b6:	fa1f fc8c 	uxth.w	ip, ip
 80231ba:	fb02 6207 	mla	r2, r2, r7, r6
 80231be:	f10c 0301 	add.w	r3, ip, #1
 80231c2:	b296      	uxth	r6, r2
 80231c4:	00c2      	lsls	r2, r0, #3
 80231c6:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80231ca:	b2d2      	uxtb	r2, r2
 80231cc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80231d0:	fb12 f205 	smulbb	r2, r2, r5
 80231d4:	fb04 2207 	mla	r2, r4, r7, r2
 80231d8:	b292      	uxth	r2, r2
 80231da:	1c50      	adds	r0, r2, #1
 80231dc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80231e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80231e4:	4313      	orrs	r3, r2
 80231e6:	1c72      	adds	r2, r6, #1
 80231e8:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80231ec:	0952      	lsrs	r2, r2, #5
 80231ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80231f2:	4313      	orrs	r3, r2
 80231f4:	800b      	strh	r3, [r1, #0]
 80231f6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231fa:	2e0f      	cmp	r6, #15
 80231fc:	f63f af71 	bhi.w	80230e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8023200:	4603      	mov	r3, r0
 8023202:	4686      	mov	lr, r0
 8023204:	e786      	b.n	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8023206:	bf00      	nop
 8023208:	0803217a 	.word	0x0803217a
 802320c:	080327e6 	.word	0x080327e6
 8023210:	08032263 	.word	0x08032263

08023214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023218:	ed2d 8b08 	vpush	{d8-d11}
 802321c:	b099      	sub	sp, #100	; 0x64
 802321e:	eeb0 aa40 	vmov.f32	s20, s0
 8023222:	eef0 9a60 	vmov.f32	s19, s1
 8023226:	9215      	str	r2, [sp, #84]	; 0x54
 8023228:	eeb0 9a41 	vmov.f32	s18, s2
 802322c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 802322e:	eeb0 8a62 	vmov.f32	s16, s5
 8023232:	9309      	str	r3, [sp, #36]	; 0x24
 8023234:	eef0 8a43 	vmov.f32	s17, s6
 8023238:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 802323c:	eef0 ba44 	vmov.f32	s23, s8
 8023240:	9016      	str	r0, [sp, #88]	; 0x58
 8023242:	eeb0 ba64 	vmov.f32	s22, s9
 8023246:	930d      	str	r3, [sp, #52]	; 0x34
 8023248:	eef0 aa45 	vmov.f32	s21, s10
 802324c:	6850      	ldr	r0, [r2, #4]
 802324e:	910c      	str	r1, [sp, #48]	; 0x30
 8023250:	6812      	ldr	r2, [r2, #0]
 8023252:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8023256:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 802325a:	fb00 1303 	mla	r3, r0, r3, r1
 802325e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8023262:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8023264:	681b      	ldr	r3, [r3, #0]
 8023266:	930b      	str	r3, [sp, #44]	; 0x2c
 8023268:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802326a:	685e      	ldr	r6, [r3, #4]
 802326c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802326e:	3604      	adds	r6, #4
 8023270:	43db      	mvns	r3, r3
 8023272:	b2db      	uxtb	r3, r3
 8023274:	930a      	str	r3, [sp, #40]	; 0x28
 8023276:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023278:	2b00      	cmp	r3, #0
 802327a:	dc03      	bgt.n	8023284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802327c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802327e:	2b00      	cmp	r3, #0
 8023280:	f340 8226 	ble.w	80236d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8023284:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8023286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802328a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802328e:	1e48      	subs	r0, r1, #1
 8023290:	1e57      	subs	r7, r2, #1
 8023292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023294:	2b00      	cmp	r3, #0
 8023296:	f340 80e4 	ble.w	8023462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802329a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 802329e:	ea4f 4325 	mov.w	r3, r5, asr #16
 80232a2:	d406      	bmi.n	80232b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80232a4:	4584      	cmp	ip, r0
 80232a6:	da04      	bge.n	80232b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80232a8:	2b00      	cmp	r3, #0
 80232aa:	db02      	blt.n	80232b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80232ac:	42bb      	cmp	r3, r7
 80232ae:	f2c0 80d9 	blt.w	8023464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80232b2:	f11c 0c01 	adds.w	ip, ip, #1
 80232b6:	f100 80ca 	bmi.w	802344e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80232ba:	4561      	cmp	r1, ip
 80232bc:	f2c0 80c7 	blt.w	802344e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80232c0:	3301      	adds	r3, #1
 80232c2:	f100 80c4 	bmi.w	802344e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80232c6:	429a      	cmp	r2, r3
 80232c8:	f2c0 80c1 	blt.w	802344e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80232cc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80232d0:	4647      	mov	r7, r8
 80232d2:	f1bb 0f00 	cmp.w	fp, #0
 80232d6:	f340 80e4 	ble.w	80234a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 80232da:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80232dc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80232e0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80232e2:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80232e6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80232ea:	ea5f 422a 	movs.w	r2, sl, asr #16
 80232ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80232f2:	689b      	ldr	r3, [r3, #8]
 80232f4:	f100 8122 	bmi.w	802353c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 80232f8:	f103 39ff 	add.w	r9, r3, #4294967295
 80232fc:	454a      	cmp	r2, r9
 80232fe:	f280 811d 	bge.w	802353c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8023302:	f1bc 0f00 	cmp.w	ip, #0
 8023306:	f2c0 8119 	blt.w	802353c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 802330a:	f10e 39ff 	add.w	r9, lr, #4294967295
 802330e:	45cc      	cmp	ip, r9
 8023310:	f280 8114 	bge.w	802353c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x328>
 8023314:	b21b      	sxth	r3, r3
 8023316:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023318:	fb0c 2203 	mla	r2, ip, r3, r2
 802331c:	eb04 0902 	add.w	r9, r4, r2
 8023320:	5ca2      	ldrb	r2, [r4, r2]
 8023322:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8023326:	2800      	cmp	r0, #0
 8023328:	f000 80ff 	beq.w	802352a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 802332c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8023330:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8023334:	9211      	str	r2, [sp, #68]	; 0x44
 8023336:	b151      	cbz	r1, 802334e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8023338:	eb09 0203 	add.w	r2, r9, r3
 802333c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8023340:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023344:	930f      	str	r3, [sp, #60]	; 0x3c
 8023346:	7853      	ldrb	r3, [r2, #1]
 8023348:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802334c:	9312      	str	r3, [sp, #72]	; 0x48
 802334e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023350:	fb10 f201 	smulbb	r2, r0, r1
 8023354:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023356:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802335a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802335e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023362:	10d2      	asrs	r2, r2, #3
 8023364:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023368:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 802336c:	ea4c 0c03 	orr.w	ip, ip, r3
 8023370:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023372:	041b      	lsls	r3, r3, #16
 8023374:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023378:	4323      	orrs	r3, r4
 802337a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802337c:	4353      	muls	r3, r2
 802337e:	fb09 330c 	mla	r3, r9, ip, r3
 8023382:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8023386:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802338a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802338e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8023392:	f1c1 0c10 	rsb	ip, r1, #16
 8023396:	ebac 0c00 	sub.w	ip, ip, r0
 802339a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802339e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80233a2:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80233a6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80233a8:	0418      	lsls	r0, r3, #16
 80233aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80233ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80233b2:	4318      	orrs	r0, r3
 80233b4:	fb02 c200 	mla	r2, r2, r0, ip
 80233b8:	f8b7 c000 	ldrh.w	ip, [r7]
 80233bc:	0d53      	lsrs	r3, r2, #21
 80233be:	0952      	lsrs	r2, r2, #5
 80233c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233c4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80233c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80233cc:	ea4f 0eec 	mov.w	lr, ip, asr #3
 80233d0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80233d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80233d8:	431a      	orrs	r2, r3
 80233da:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80233de:	fb11 f104 	smulbb	r1, r1, r4
 80233e2:	fa5f fc8c 	uxtb.w	ip, ip
 80233e6:	b292      	uxth	r2, r2
 80233e8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80233ec:	fb1c fc04 	smulbb	ip, ip, r4
 80233f0:	fb1e fe04 	smulbb	lr, lr, r4
 80233f4:	1210      	asrs	r0, r2, #8
 80233f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80233fa:	fb00 1003 	mla	r0, r0, r3, r1
 80233fe:	10d1      	asrs	r1, r2, #3
 8023400:	00d2      	lsls	r2, r2, #3
 8023402:	b280      	uxth	r0, r0
 8023404:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023408:	b2d2      	uxtb	r2, r2
 802340a:	fb01 e103 	mla	r1, r1, r3, lr
 802340e:	fb02 c203 	mla	r2, r2, r3, ip
 8023412:	1c43      	adds	r3, r0, #1
 8023414:	b289      	uxth	r1, r1
 8023416:	b292      	uxth	r2, r2
 8023418:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802341c:	f102 0c01 	add.w	ip, r2, #1
 8023420:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023424:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8023428:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802342c:	4313      	orrs	r3, r2
 802342e:	1c4a      	adds	r2, r1, #1
 8023430:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023434:	0949      	lsrs	r1, r1, #5
 8023436:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802343a:	430b      	orrs	r3, r1
 802343c:	803b      	strh	r3, [r7, #0]
 802343e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023440:	3702      	adds	r7, #2
 8023442:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023446:	449a      	add	sl, r3
 8023448:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802344a:	441d      	add	r5, r3
 802344c:	e741      	b.n	80232d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 802344e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8023450:	f108 0802 	add.w	r8, r8, #2
 8023454:	449a      	add	sl, r3
 8023456:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023458:	441d      	add	r5, r3
 802345a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802345c:	3b01      	subs	r3, #1
 802345e:	9309      	str	r3, [sp, #36]	; 0x24
 8023460:	e717      	b.n	8023292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8023462:	d023      	beq.n	80234ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8023464:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023466:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8023468:	3b01      	subs	r3, #1
 802346a:	fb00 a003 	mla	r0, r0, r3, sl
 802346e:	1400      	asrs	r0, r0, #16
 8023470:	f53f af2c 	bmi.w	80232cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023474:	3901      	subs	r1, #1
 8023476:	4288      	cmp	r0, r1
 8023478:	f6bf af28 	bge.w	80232cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 802347c:	992e      	ldr	r1, [sp, #184]	; 0xb8
 802347e:	fb01 5303 	mla	r3, r1, r3, r5
 8023482:	141b      	asrs	r3, r3, #16
 8023484:	f53f af22 	bmi.w	80232cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023488:	3a01      	subs	r2, #1
 802348a:	4293      	cmp	r3, r2
 802348c:	f6bf af1e 	bge.w	80232cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8023490:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8023494:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8023498:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802349c:	f1be 0f00 	cmp.w	lr, #0
 80234a0:	dc6c      	bgt.n	802357c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80234a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80234a8:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80234ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80234ae:	2b00      	cmp	r3, #0
 80234b0:	f340 810e 	ble.w	80236d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 80234b4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80234b8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80234ba:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80234be:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80234c2:	eef0 6a48 	vmov.f32	s13, s16
 80234c6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80234ca:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80234ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234d2:	ee16 aa90 	vmov	sl, s13
 80234d6:	eef0 6a68 	vmov.f32	s13, s17
 80234da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80234de:	ee16 5a90 	vmov	r5, s13
 80234e2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80234e6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80234ea:	ee37 8a48 	vsub.f32	s16, s14, s16
 80234ee:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80234f2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80234f6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80234fa:	ee18 2a10 	vmov	r2, s16
 80234fe:	eeb0 8a47 	vmov.f32	s16, s14
 8023502:	fb92 f3f3 	sdiv	r3, r2, r3
 8023506:	ee18 2a90 	vmov	r2, s17
 802350a:	932d      	str	r3, [sp, #180]	; 0xb4
 802350c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802350e:	eef0 8a67 	vmov.f32	s17, s15
 8023512:	fb92 f3f3 	sdiv	r3, r2, r3
 8023516:	932e      	str	r3, [sp, #184]	; 0xb8
 8023518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802351a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 802351c:	3b01      	subs	r3, #1
 802351e:	930c      	str	r3, [sp, #48]	; 0x30
 8023520:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023522:	bf08      	it	eq
 8023524:	4613      	moveq	r3, r2
 8023526:	9309      	str	r3, [sp, #36]	; 0x24
 8023528:	e6a5      	b.n	8023276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 802352a:	2900      	cmp	r1, #0
 802352c:	f43f af0f 	beq.w	802334e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8023530:	f819 3003 	ldrb.w	r3, [r9, r3]
 8023534:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023538:	930f      	str	r3, [sp, #60]	; 0x3c
 802353a:	e708      	b.n	802334e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 802353c:	f112 0901 	adds.w	r9, r2, #1
 8023540:	f53f af7d 	bmi.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023544:	454b      	cmp	r3, r9
 8023546:	f6ff af7a 	blt.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802354a:	f11c 0901 	adds.w	r9, ip, #1
 802354e:	f53f af76 	bmi.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023552:	45ce      	cmp	lr, r9
 8023554:	f6ff af73 	blt.w	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8023558:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802355a:	b21b      	sxth	r3, r3
 802355c:	9202      	str	r2, [sp, #8]
 802355e:	fa0f f28e 	sxth.w	r2, lr
 8023562:	9300      	str	r3, [sp, #0]
 8023564:	4633      	mov	r3, r6
 8023566:	9201      	str	r2, [sp, #4]
 8023568:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802356a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802356e:	e9cd c003 	strd	ip, r0, [sp, #12]
 8023572:	4639      	mov	r1, r7
 8023574:	9816      	ldr	r0, [sp, #88]	; 0x58
 8023576:	f7ff fd6f 	bl	8023058 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 802357a:	e760      	b.n	802343e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802357c:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802357e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8023582:	1429      	asrs	r1, r5, #16
 8023584:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023586:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802358a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802358e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8023592:	fb03 2101 	mla	r1, r3, r1, r2
 8023596:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8023598:	440a      	add	r2, r1
 802359a:	5c61      	ldrb	r1, [r4, r1]
 802359c:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80235a0:	f1bc 0f00 	cmp.w	ip, #0
 80235a4:	f000 808c 	beq.w	80236c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80235a8:	7857      	ldrb	r7, [r2, #1]
 80235aa:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80235ae:	9413      	str	r4, [sp, #76]	; 0x4c
 80235b0:	b140      	cbz	r0, 80235c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80235b2:	18d7      	adds	r7, r2, r3
 80235b4:	5cd3      	ldrb	r3, [r2, r3]
 80235b6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80235ba:	9310      	str	r3, [sp, #64]	; 0x40
 80235bc:	787b      	ldrb	r3, [r7, #1]
 80235be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80235c2:	9314      	str	r3, [sp, #80]	; 0x50
 80235c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80235c6:	fb1c f200 	smulbb	r2, ip, r0
 80235ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80235cc:	f10e 3eff 	add.w	lr, lr, #4294967295
 80235d0:	041f      	lsls	r7, r3, #16
 80235d2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80235d6:	10d2      	asrs	r2, r2, #3
 80235d8:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80235dc:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80235e0:	431f      	orrs	r7, r3
 80235e2:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80235e6:	9317      	str	r3, [sp, #92]	; 0x5c
 80235e8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80235ea:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80235ec:	041b      	lsls	r3, r3, #16
 80235ee:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80235f2:	ea43 030b 	orr.w	r3, r3, fp
 80235f6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80235fa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80235fe:	4353      	muls	r3, r2
 8023600:	fb04 3707 	mla	r7, r4, r7, r3
 8023604:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023608:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802360a:	ea43 0b01 	orr.w	fp, r3, r1
 802360e:	f1c0 0110 	rsb	r1, r0, #16
 8023612:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023614:	eba1 0c0c 	sub.w	ip, r1, ip
 8023618:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802361c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8023620:	fb0c 770b 	mla	r7, ip, fp, r7
 8023624:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023628:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 802362c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023630:	ea4c 0c0b 	orr.w	ip, ip, fp
 8023634:	fb02 770c 	mla	r7, r2, ip, r7
 8023638:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802363a:	0d79      	lsrs	r1, r7, #21
 802363c:	8812      	ldrh	r2, [r2, #0]
 802363e:	097f      	lsrs	r7, r7, #5
 8023640:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023644:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023648:	430f      	orrs	r7, r1
 802364a:	1211      	asrs	r1, r2, #8
 802364c:	b2bb      	uxth	r3, r7
 802364e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023652:	10d7      	asrs	r7, r2, #3
 8023654:	fb11 f104 	smulbb	r1, r1, r4
 8023658:	1218      	asrs	r0, r3, #8
 802365a:	00d2      	lsls	r2, r2, #3
 802365c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023660:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023664:	fb17 f704 	smulbb	r7, r7, r4
 8023668:	b2d2      	uxtb	r2, r2
 802366a:	fb00 1009 	mla	r0, r0, r9, r1
 802366e:	10d9      	asrs	r1, r3, #3
 8023670:	fb12 f204 	smulbb	r2, r2, r4
 8023674:	00db      	lsls	r3, r3, #3
 8023676:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802367a:	b280      	uxth	r0, r0
 802367c:	b2db      	uxtb	r3, r3
 802367e:	fb01 7109 	mla	r1, r1, r9, r7
 8023682:	fb03 2309 	mla	r3, r3, r9, r2
 8023686:	1c42      	adds	r2, r0, #1
 8023688:	b289      	uxth	r1, r1
 802368a:	b29b      	uxth	r3, r3
 802368c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023690:	1c4f      	adds	r7, r1, #1
 8023692:	1c5a      	adds	r2, r3, #1
 8023694:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8023698:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802369c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80236a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80236a2:	0949      	lsrs	r1, r1, #5
 80236a4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80236a8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80236ac:	4310      	orrs	r0, r2
 80236ae:	4308      	orrs	r0, r1
 80236b0:	f823 0b02 	strh.w	r0, [r3], #2
 80236b4:	930e      	str	r3, [sp, #56]	; 0x38
 80236b6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80236b8:	449a      	add	sl, r3
 80236ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236bc:	441d      	add	r5, r3
 80236be:	e6ed      	b.n	802349c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80236c0:	2800      	cmp	r0, #0
 80236c2:	f43f af7f 	beq.w	80235c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80236c6:	5cd3      	ldrb	r3, [r2, r3]
 80236c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80236cc:	9310      	str	r3, [sp, #64]	; 0x40
 80236ce:	e779      	b.n	80235c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80236d0:	b019      	add	sp, #100	; 0x64
 80236d2:	ecbd 8b08 	vpop	{d8-d11}
 80236d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80236dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80236e0:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80236e4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80236e8:	2e00      	cmp	r6, #0
 80236ea:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80236ee:	fb06 570e 	mla	r7, r6, lr, r5
 80236f2:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80236f6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80236fa:	eb02 0807 	add.w	r8, r2, r7
 80236fe:	8808      	ldrh	r0, [r1, #0]
 8023700:	db38      	blt.n	8023774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8023702:	45b1      	cmp	r9, r6
 8023704:	dd36      	ble.n	8023774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 8023706:	2d00      	cmp	r5, #0
 8023708:	db32      	blt.n	8023770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 802370a:	45ae      	cmp	lr, r5
 802370c:	dd30      	ble.n	8023770 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 802370e:	5dd2      	ldrb	r2, [r2, r7]
 8023710:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8023714:	1c6a      	adds	r2, r5, #1
 8023716:	d430      	bmi.n	802377a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8023718:	4596      	cmp	lr, r2
 802371a:	dd2e      	ble.n	802377a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 802371c:	b36c      	cbz	r4, 802377a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 802371e:	f898 2001 	ldrb.w	r2, [r8, #1]
 8023722:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8023726:	3601      	adds	r6, #1
 8023728:	d42b      	bmi.n	8023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 802372a:	45b1      	cmp	r9, r6
 802372c:	dd29      	ble.n	8023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 802372e:	f1bc 0f00 	cmp.w	ip, #0
 8023732:	d028      	beq.n	8023786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 8023734:	2d00      	cmp	r5, #0
 8023736:	db22      	blt.n	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8023738:	45ae      	cmp	lr, r5
 802373a:	dd20      	ble.n	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 802373c:	f818 600e 	ldrb.w	r6, [r8, lr]
 8023740:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 8023744:	3501      	adds	r5, #1
 8023746:	d407      	bmi.n	8023758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8023748:	45ae      	cmp	lr, r5
 802374a:	dd05      	ble.n	8023758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 802374c:	b134      	cbz	r4, 802375c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802374e:	44c6      	add	lr, r8
 8023750:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8023754:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8023758:	2c0f      	cmp	r4, #15
 802375a:	d802      	bhi.n	8023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 802375c:	f1bc 0f0f 	cmp.w	ip, #15
 8023760:	d914      	bls.n	802378c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 8023762:	4b26      	ldr	r3, [pc, #152]	; (80237fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 8023764:	f240 11ef 	movw	r1, #495	; 0x1ef
 8023768:	4a25      	ldr	r2, [pc, #148]	; (8023800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 802376a:	4826      	ldr	r0, [pc, #152]	; (8023804 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 802376c:	f008 fbbc 	bl	802bee8 <__assert_func>
 8023770:	4607      	mov	r7, r0
 8023772:	e7cf      	b.n	8023714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 8023774:	4602      	mov	r2, r0
 8023776:	4607      	mov	r7, r0
 8023778:	e7d5      	b.n	8023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 802377a:	4602      	mov	r2, r0
 802377c:	e7d3      	b.n	8023726 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 802377e:	4606      	mov	r6, r0
 8023780:	e7e0      	b.n	8023744 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 8023782:	4606      	mov	r6, r0
 8023784:	e7e8      	b.n	8023758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8023786:	2c0f      	cmp	r4, #15
 8023788:	d8eb      	bhi.n	8023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 802378a:	4606      	mov	r6, r0
 802378c:	fb14 f30c 	smulbb	r3, r4, ip
 8023790:	043d      	lsls	r5, r7, #16
 8023792:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8023796:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802379a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 802379e:	10db      	asrs	r3, r3, #3
 80237a0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80237a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80237a8:	432f      	orrs	r7, r5
 80237aa:	f1cc 0510 	rsb	r5, ip, #16
 80237ae:	ea4e 0202 	orr.w	r2, lr, r2
 80237b2:	1b2d      	subs	r5, r5, r4
 80237b4:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80237b8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80237bc:	4354      	muls	r4, r2
 80237be:	fb05 4507 	mla	r5, r5, r7, r4
 80237c2:	0404      	lsls	r4, r0, #16
 80237c4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80237cc:	4320      	orrs	r0, r4
 80237ce:	fb03 5400 	mla	r4, r3, r0, r5
 80237d2:	0430      	lsls	r0, r6, #16
 80237d4:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80237d8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80237dc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80237e0:	4330      	orrs	r0, r6
 80237e2:	fb03 4000 	mla	r0, r3, r0, r4
 80237e6:	0d43      	lsrs	r3, r0, #21
 80237e8:	0940      	lsrs	r0, r0, #5
 80237ea:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80237ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237f2:	4318      	orrs	r0, r3
 80237f4:	8008      	strh	r0, [r1, #0]
 80237f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80237fa:	bf00      	nop
 80237fc:	0803217a 	.word	0x0803217a
 8023800:	080327e6 	.word	0x080327e6
 8023804:	08032263 	.word	0x08032263

08023808 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023808:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802380c:	ed2d 8b0a 	vpush	{d8-d12}
 8023810:	b093      	sub	sp, #76	; 0x4c
 8023812:	eeb0 aa40 	vmov.f32	s20, s0
 8023816:	eef0 9a60 	vmov.f32	s19, s1
 802381a:	920f      	str	r2, [sp, #60]	; 0x3c
 802381c:	eeb0 9a41 	vmov.f32	s18, s2
 8023820:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023822:	eeb0 8a62 	vmov.f32	s16, s5
 8023826:	9010      	str	r0, [sp, #64]	; 0x40
 8023828:	eef0 8a43 	vmov.f32	s17, s6
 802382c:	6850      	ldr	r0, [r2, #4]
 802382e:	eeb0 ca44 	vmov.f32	s24, s8
 8023832:	9108      	str	r1, [sp, #32]
 8023834:	eef0 ba64 	vmov.f32	s23, s9
 8023838:	9306      	str	r3, [sp, #24]
 802383a:	eeb0 ba45 	vmov.f32	s22, s10
 802383e:	6812      	ldr	r2, [r2, #0]
 8023840:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8023844:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023848:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802384c:	fb00 1303 	mla	r3, r0, r3, r1
 8023850:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8023854:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023856:	681b      	ldr	r3, [r3, #0]
 8023858:	9307      	str	r3, [sp, #28]
 802385a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802385c:	685f      	ldr	r7, [r3, #4]
 802385e:	3704      	adds	r7, #4
 8023860:	9b08      	ldr	r3, [sp, #32]
 8023862:	2b00      	cmp	r3, #0
 8023864:	dc03      	bgt.n	802386e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023866:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023868:	2b00      	cmp	r3, #0
 802386a:	f340 81b2 	ble.w	8023bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 802386e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023870:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023874:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023878:	1e48      	subs	r0, r1, #1
 802387a:	f102 3cff 	add.w	ip, r2, #4294967295
 802387e:	9b06      	ldr	r3, [sp, #24]
 8023880:	2b00      	cmp	r3, #0
 8023882:	f340 80a9 	ble.w	80239d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8023886:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802388a:	ea4f 4326 	mov.w	r3, r6, asr #16
 802388e:	d406      	bmi.n	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023890:	4586      	cmp	lr, r0
 8023892:	da04      	bge.n	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023894:	2b00      	cmp	r3, #0
 8023896:	db02      	blt.n	802389e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023898:	4563      	cmp	r3, ip
 802389a:	f2c0 809e 	blt.w	80239da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802389e:	f11e 0e01 	adds.w	lr, lr, #1
 80238a2:	f100 808f 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80238a6:	4571      	cmp	r1, lr
 80238a8:	f2c0 808c 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80238ac:	3301      	adds	r3, #1
 80238ae:	f100 8089 	bmi.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80238b2:	429a      	cmp	r2, r3
 80238b4:	f2c0 8086 	blt.w	80239c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80238b8:	f8dd b018 	ldr.w	fp, [sp, #24]
 80238bc:	46c8      	mov	r8, r9
 80238be:	f1bb 0f00 	cmp.w	fp, #0
 80238c2:	f340 80a6 	ble.w	8023a12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 80238c6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80238c8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80238cc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80238ce:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80238d2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80238d6:	1422      	asrs	r2, r4, #16
 80238d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80238dc:	689b      	ldr	r3, [r3, #8]
 80238de:	f100 80e3 	bmi.w	8023aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80238e2:	f103 3aff 	add.w	sl, r3, #4294967295
 80238e6:	4552      	cmp	r2, sl
 80238e8:	f280 80de 	bge.w	8023aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80238ec:	f1bc 0f00 	cmp.w	ip, #0
 80238f0:	f2c0 80da 	blt.w	8023aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80238f4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80238f8:	45d4      	cmp	ip, sl
 80238fa:	f280 80d5 	bge.w	8023aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80238fe:	b21b      	sxth	r3, r3
 8023900:	9d07      	ldr	r5, [sp, #28]
 8023902:	fb0c 2203 	mla	r2, ip, r3, r2
 8023906:	eb05 0a02 	add.w	sl, r5, r2
 802390a:	5caa      	ldrb	r2, [r5, r2]
 802390c:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8023910:	2800      	cmp	r0, #0
 8023912:	f000 80c0 	beq.w	8023a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8023916:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802391a:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 802391e:	920b      	str	r2, [sp, #44]	; 0x2c
 8023920:	b151      	cbz	r1, 8023938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8023922:	eb0a 0203 	add.w	r2, sl, r3
 8023926:	f81a 3003 	ldrb.w	r3, [sl, r3]
 802392a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802392e:	9309      	str	r3, [sp, #36]	; 0x24
 8023930:	7853      	ldrb	r3, [r2, #1]
 8023932:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023936:	930c      	str	r3, [sp, #48]	; 0x30
 8023938:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802393a:	fb10 f201 	smulbb	r2, r0, r1
 802393e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023940:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023944:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023948:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802394c:	10d2      	asrs	r2, r2, #3
 802394e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023952:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8023956:	ea4c 0c03 	orr.w	ip, ip, r3
 802395a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802395c:	041b      	lsls	r3, r3, #16
 802395e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023962:	432b      	orrs	r3, r5
 8023964:	4353      	muls	r3, r2
 8023966:	fb0a 330c 	mla	r3, sl, ip, r3
 802396a:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802396e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023972:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023976:	ea4c 0e0e 	orr.w	lr, ip, lr
 802397a:	f1c1 0c10 	rsb	ip, r1, #16
 802397e:	ebac 0c00 	sub.w	ip, ip, r0
 8023982:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8023986:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802398a:	fb0c 3c0e 	mla	ip, ip, lr, r3
 802398e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023990:	0418      	lsls	r0, r3, #16
 8023992:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023996:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802399a:	4318      	orrs	r0, r3
 802399c:	fb02 c200 	mla	r2, r2, r0, ip
 80239a0:	0d53      	lsrs	r3, r2, #21
 80239a2:	0952      	lsrs	r2, r2, #5
 80239a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80239a8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80239ac:	431a      	orrs	r2, r3
 80239ae:	f8a8 2000 	strh.w	r2, [r8]
 80239b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239b4:	f108 0802 	add.w	r8, r8, #2
 80239b8:	f10b 3bff 	add.w	fp, fp, #4294967295
 80239bc:	441c      	add	r4, r3
 80239be:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239c0:	441e      	add	r6, r3
 80239c2:	e77c      	b.n	80238be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80239c4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239c6:	f109 0902 	add.w	r9, r9, #2
 80239ca:	441c      	add	r4, r3
 80239cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239ce:	441e      	add	r6, r3
 80239d0:	9b06      	ldr	r3, [sp, #24]
 80239d2:	3b01      	subs	r3, #1
 80239d4:	9306      	str	r3, [sp, #24]
 80239d6:	e752      	b.n	802387e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80239d8:	d020      	beq.n	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80239da:	9b06      	ldr	r3, [sp, #24]
 80239dc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80239de:	3b01      	subs	r3, #1
 80239e0:	fb00 4003 	mla	r0, r0, r3, r4
 80239e4:	1400      	asrs	r0, r0, #16
 80239e6:	f53f af67 	bmi.w	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80239ea:	3901      	subs	r1, #1
 80239ec:	4288      	cmp	r0, r1
 80239ee:	f6bf af63 	bge.w	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80239f2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80239f4:	fb01 6303 	mla	r3, r1, r3, r6
 80239f8:	141b      	asrs	r3, r3, #16
 80239fa:	f53f af5d 	bmi.w	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80239fe:	3a01      	subs	r2, #1
 8023a00:	4293      	cmp	r3, r2
 8023a02:	f6bf af59 	bge.w	80238b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8023a06:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8023a0a:	46ca      	mov	sl, r9
 8023a0c:	f1b8 0f00 	cmp.w	r8, #0
 8023a10:	dc67      	bgt.n	8023ae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8023a12:	9b06      	ldr	r3, [sp, #24]
 8023a14:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023a18:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8023a1c:	9b08      	ldr	r3, [sp, #32]
 8023a1e:	2b00      	cmp	r3, #0
 8023a20:	f340 80d7 	ble.w	8023bd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8023a24:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8023a28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a2a:	ee79 9aab 	vadd.f32	s19, s19, s23
 8023a2e:	eef0 6a48 	vmov.f32	s13, s16
 8023a32:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8023a36:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8023a3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a3e:	ee16 4a90 	vmov	r4, s13
 8023a42:	eef0 6a68 	vmov.f32	s13, s17
 8023a46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a4a:	ee16 6a90 	vmov	r6, s13
 8023a4e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8023a52:	ee69 7a27 	vmul.f32	s15, s18, s15
 8023a56:	ee37 8a48 	vsub.f32	s16, s14, s16
 8023a5a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8023a5e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8023a62:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8023a66:	ee18 2a10 	vmov	r2, s16
 8023a6a:	eeb0 8a47 	vmov.f32	s16, s14
 8023a6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a72:	ee18 2a90 	vmov	r2, s17
 8023a76:	9329      	str	r3, [sp, #164]	; 0xa4
 8023a78:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a7a:	eef0 8a67 	vmov.f32	s17, s15
 8023a7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a82:	932a      	str	r3, [sp, #168]	; 0xa8
 8023a84:	9b08      	ldr	r3, [sp, #32]
 8023a86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023a88:	3b01      	subs	r3, #1
 8023a8a:	9308      	str	r3, [sp, #32]
 8023a8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a8e:	bf08      	it	eq
 8023a90:	4613      	moveq	r3, r2
 8023a92:	9306      	str	r3, [sp, #24]
 8023a94:	e6e4      	b.n	8023860 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8023a96:	2900      	cmp	r1, #0
 8023a98:	f43f af4e 	beq.w	8023938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8023a9c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8023aa0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023aa4:	9309      	str	r3, [sp, #36]	; 0x24
 8023aa6:	e747      	b.n	8023938 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8023aa8:	f112 0a01 	adds.w	sl, r2, #1
 8023aac:	d481      	bmi.n	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023aae:	4553      	cmp	r3, sl
 8023ab0:	f6ff af7f 	blt.w	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023ab4:	f11c 0a01 	adds.w	sl, ip, #1
 8023ab8:	f53f af7b 	bmi.w	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023abc:	45d6      	cmp	lr, sl
 8023abe:	f6ff af78 	blt.w	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023ac2:	b21b      	sxth	r3, r3
 8023ac4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8023ac8:	fa0f f28e 	sxth.w	r2, lr
 8023acc:	9300      	str	r3, [sp, #0]
 8023ace:	463b      	mov	r3, r7
 8023ad0:	9201      	str	r2, [sp, #4]
 8023ad2:	9a07      	ldr	r2, [sp, #28]
 8023ad4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8023ad8:	4641      	mov	r1, r8
 8023ada:	9810      	ldr	r0, [sp, #64]	; 0x40
 8023adc:	f7ff fdfe 	bl	80236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023ae0:	e767      	b.n	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8023ae2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023ae4:	1422      	asrs	r2, r4, #16
 8023ae6:	1431      	asrs	r1, r6, #16
 8023ae8:	9d07      	ldr	r5, [sp, #28]
 8023aea:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023aee:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8023af2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023af6:	fb03 2101 	mla	r1, r3, r1, r2
 8023afa:	9a07      	ldr	r2, [sp, #28]
 8023afc:	440a      	add	r2, r1
 8023afe:	5c69      	ldrb	r1, [r5, r1]
 8023b00:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8023b04:	f1be 0f00 	cmp.w	lr, #0
 8023b08:	d05c      	beq.n	8023bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8023b0a:	f892 c001 	ldrb.w	ip, [r2, #1]
 8023b0e:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8023b12:	950d      	str	r5, [sp, #52]	; 0x34
 8023b14:	b150      	cbz	r0, 8023b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8023b16:	eb02 0c03 	add.w	ip, r2, r3
 8023b1a:	5cd3      	ldrb	r3, [r2, r3]
 8023b1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023b20:	930a      	str	r3, [sp, #40]	; 0x28
 8023b22:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8023b26:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023b2a:	930e      	str	r3, [sp, #56]	; 0x38
 8023b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8023b2e:	fb1e f200 	smulbb	r2, lr, r0
 8023b32:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023b34:	f108 38ff 	add.w	r8, r8, #4294967295
 8023b38:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8023b3c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023b40:	10d2      	asrs	r2, r2, #3
 8023b42:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8023b46:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023b4a:	ea4c 0c03 	orr.w	ip, ip, r3
 8023b4e:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8023b52:	9311      	str	r3, [sp, #68]	; 0x44
 8023b54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023b56:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b58:	041b      	lsls	r3, r3, #16
 8023b5a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023b5e:	ea43 030b 	orr.w	r3, r3, fp
 8023b62:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023b66:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023b6a:	4353      	muls	r3, r2
 8023b6c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8023b70:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8023b74:	ea43 0b01 	orr.w	fp, r3, r1
 8023b78:	f1c0 0110 	rsb	r1, r0, #16
 8023b7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023b7e:	eba1 0e0e 	sub.w	lr, r1, lr
 8023b82:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8023b86:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8023b8a:	fb0e cc0b 	mla	ip, lr, fp, ip
 8023b8e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8023b92:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8023b96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023b9a:	ea4b 0e0e 	orr.w	lr, fp, lr
 8023b9e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8023ba2:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8023ba6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8023baa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023bae:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023bb2:	ea43 0c0c 	orr.w	ip, r3, ip
 8023bb6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023bb8:	441c      	add	r4, r3
 8023bba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023bbc:	f82a cb02 	strh.w	ip, [sl], #2
 8023bc0:	441e      	add	r6, r3
 8023bc2:	e723      	b.n	8023a0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8023bc4:	2800      	cmp	r0, #0
 8023bc6:	d0b1      	beq.n	8023b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8023bc8:	5cd3      	ldrb	r3, [r2, r3]
 8023bca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8023bce:	930a      	str	r3, [sp, #40]	; 0x28
 8023bd0:	e7ac      	b.n	8023b2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8023bd2:	b013      	add	sp, #76	; 0x4c
 8023bd4:	ecbd 8b0a 	vpop	{d8-d12}
 8023bd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8023bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023be0:	468b      	mov	fp, r1
 8023be2:	8809      	ldrh	r1, [r1, #0]
 8023be4:	b089      	sub	sp, #36	; 0x24
 8023be6:	10cd      	asrs	r5, r1, #3
 8023be8:	ea4f 2921 	mov.w	r9, r1, asr #8
 8023bec:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8023bf0:	00c9      	lsls	r1, r1, #3
 8023bf2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8023bf6:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8023bfa:	9202      	str	r2, [sp, #8]
 8023bfc:	b2c9      	uxtb	r1, r1
 8023bfe:	9500      	str	r5, [sp, #0]
 8023c00:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8023c04:	9101      	str	r1, [sp, #4]
 8023c06:	9900      	ldr	r1, [sp, #0]
 8023c08:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8023c0c:	0209      	lsls	r1, r1, #8
 8023c0e:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8023c12:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8023c16:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8023c1a:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8023c1e:	fb04 650e 	mla	r5, r4, lr, r6
 8023c22:	2c00      	cmp	r4, #0
 8023c24:	eb02 0805 	add.w	r8, r2, r5
 8023c28:	9a01      	ldr	r2, [sp, #4]
 8023c2a:	ea41 0102 	orr.w	r1, r1, r2
 8023c2e:	9107      	str	r1, [sp, #28]
 8023c30:	db43      	blt.n	8023cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
 8023c32:	45a2      	cmp	sl, r4
 8023c34:	dd41      	ble.n	8023cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xde>
 8023c36:	2e00      	cmp	r6, #0
 8023c38:	db3d      	blt.n	8023cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
 8023c3a:	45b6      	cmp	lr, r6
 8023c3c:	dd3b      	ble.n	8023cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xda>
 8023c3e:	9a02      	ldr	r2, [sp, #8]
 8023c40:	5d55      	ldrb	r5, [r2, r5]
 8023c42:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8023c46:	441d      	add	r5, r3
 8023c48:	1c72      	adds	r2, r6, #1
 8023c4a:	d439      	bmi.n	8023cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8023c4c:	4596      	cmp	lr, r2
 8023c4e:	dd37      	ble.n	8023cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8023c50:	2f00      	cmp	r7, #0
 8023c52:	d035      	beq.n	8023cc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe4>
 8023c54:	f898 1001 	ldrb.w	r1, [r8, #1]
 8023c58:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023c5c:	4419      	add	r1, r3
 8023c5e:	3401      	adds	r4, #1
 8023c60:	d432      	bmi.n	8023cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8023c62:	45a2      	cmp	sl, r4
 8023c64:	dd30      	ble.n	8023cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8023c66:	b378      	cbz	r0, 8023cc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xec>
 8023c68:	2e00      	cmp	r6, #0
 8023c6a:	db2b      	blt.n	8023cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
 8023c6c:	45b6      	cmp	lr, r6
 8023c6e:	dd29      	ble.n	8023cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe8>
 8023c70:	f818 400e 	ldrb.w	r4, [r8, lr]
 8023c74:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8023c78:	441c      	add	r4, r3
 8023c7a:	3601      	adds	r6, #1
 8023c7c:	d427      	bmi.n	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8023c7e:	45b6      	cmp	lr, r6
 8023c80:	dd25      	ble.n	8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8023c82:	b327      	cbz	r7, 8023cce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf2>
 8023c84:	44c6      	add	lr, r8
 8023c86:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8023c8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023c8e:	4413      	add	r3, r2
 8023c90:	782a      	ldrb	r2, [r5, #0]
 8023c92:	2f0f      	cmp	r7, #15
 8023c94:	9202      	str	r2, [sp, #8]
 8023c96:	780a      	ldrb	r2, [r1, #0]
 8023c98:	9203      	str	r2, [sp, #12]
 8023c9a:	7822      	ldrb	r2, [r4, #0]
 8023c9c:	9204      	str	r2, [sp, #16]
 8023c9e:	781a      	ldrb	r2, [r3, #0]
 8023ca0:	9205      	str	r2, [sp, #20]
 8023ca2:	d801      	bhi.n	8023ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xcc>
 8023ca4:	280f      	cmp	r0, #15
 8023ca6:	d914      	bls.n	8023cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf6>
 8023ca8:	4b3f      	ldr	r3, [pc, #252]	; (8023da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8023caa:	f240 210d 	movw	r1, #525	; 0x20d
 8023cae:	4a3f      	ldr	r2, [pc, #252]	; (8023dac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8023cb0:	483f      	ldr	r0, [pc, #252]	; (8023db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>)
 8023cb2:	f008 f919 	bl	802bee8 <__assert_func>
 8023cb6:	ad07      	add	r5, sp, #28
 8023cb8:	e7c6      	b.n	8023c48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6c>
 8023cba:	a907      	add	r1, sp, #28
 8023cbc:	460d      	mov	r5, r1
 8023cbe:	e7ce      	b.n	8023c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
 8023cc0:	a907      	add	r1, sp, #28
 8023cc2:	e7cc      	b.n	8023c5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x82>
 8023cc4:	ac07      	add	r4, sp, #28
 8023cc6:	e7d8      	b.n	8023c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9e>
 8023cc8:	ab07      	add	r3, sp, #28
 8023cca:	461c      	mov	r4, r3
 8023ccc:	e7e0      	b.n	8023c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8023cce:	ab07      	add	r3, sp, #28
 8023cd0:	e7de      	b.n	8023c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8023cd2:	b2ba      	uxth	r2, r7
 8023cd4:	f891 8002 	ldrb.w	r8, [r1, #2]
 8023cd8:	b280      	uxth	r0, r0
 8023cda:	7849      	ldrb	r1, [r1, #1]
 8023cdc:	78ae      	ldrb	r6, [r5, #2]
 8023cde:	fa1f f78c 	uxth.w	r7, ip
 8023ce2:	fb02 fa00 	mul.w	sl, r2, r0
 8023ce6:	0112      	lsls	r2, r2, #4
 8023ce8:	786d      	ldrb	r5, [r5, #1]
 8023cea:	ea6f 0c0c 	mvn.w	ip, ip
 8023cee:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8023cf2:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8023cf6:	eba2 020a 	sub.w	r2, r2, sl
 8023cfa:	fa5f fc8c 	uxtb.w	ip, ip
 8023cfe:	b280      	uxth	r0, r0
 8023d00:	fb19 f90c 	smulbb	r9, r9, ip
 8023d04:	b292      	uxth	r2, r2
 8023d06:	ebae 0e00 	sub.w	lr, lr, r0
 8023d0a:	4351      	muls	r1, r2
 8023d0c:	fa1f fe8e 	uxth.w	lr, lr
 8023d10:	fb02 f808 	mul.w	r8, r2, r8
 8023d14:	fb0e 1505 	mla	r5, lr, r5, r1
 8023d18:	7861      	ldrb	r1, [r4, #1]
 8023d1a:	fb0e 8806 	mla	r8, lr, r6, r8
 8023d1e:	78a6      	ldrb	r6, [r4, #2]
 8023d20:	fb00 5501 	mla	r5, r0, r1, r5
 8023d24:	7859      	ldrb	r1, [r3, #1]
 8023d26:	fb00 8806 	mla	r8, r0, r6, r8
 8023d2a:	789e      	ldrb	r6, [r3, #2]
 8023d2c:	9b00      	ldr	r3, [sp, #0]
 8023d2e:	fb0a 5101 	mla	r1, sl, r1, r5
 8023d32:	fb0a 8606 	mla	r6, sl, r6, r8
 8023d36:	fb13 f50c 	smulbb	r5, r3, ip
 8023d3a:	9b03      	ldr	r3, [sp, #12]
 8023d3c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023d40:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023d44:	435a      	muls	r2, r3
 8023d46:	9b02      	ldr	r3, [sp, #8]
 8023d48:	fb06 9607 	mla	r6, r6, r7, r9
 8023d4c:	fb0e 2203 	mla	r2, lr, r3, r2
 8023d50:	9b04      	ldr	r3, [sp, #16]
 8023d52:	fb01 5107 	mla	r1, r1, r7, r5
 8023d56:	b2b6      	uxth	r6, r6
 8023d58:	fb00 2003 	mla	r0, r0, r3, r2
 8023d5c:	9b05      	ldr	r3, [sp, #20]
 8023d5e:	b289      	uxth	r1, r1
 8023d60:	f106 0901 	add.w	r9, r6, #1
 8023d64:	fb0a 0a03 	mla	sl, sl, r3, r0
 8023d68:	9b01      	ldr	r3, [sp, #4]
 8023d6a:	1c4d      	adds	r5, r1, #1
 8023d6c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8023d70:	fb13 fc0c 	smulbb	ip, r3, ip
 8023d74:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8023d78:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8023d7c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8023d80:	fb0a c707 	mla	r7, sl, r7, ip
 8023d84:	0949      	lsrs	r1, r1, #5
 8023d86:	b2bf      	uxth	r7, r7
 8023d88:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023d8c:	f107 0c01 	add.w	ip, r7, #1
 8023d90:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8023d94:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8023d98:	433e      	orrs	r6, r7
 8023d9a:	430e      	orrs	r6, r1
 8023d9c:	f8ab 6000 	strh.w	r6, [fp]
 8023da0:	b009      	add	sp, #36	; 0x24
 8023da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023da6:	bf00      	nop
 8023da8:	0803217a 	.word	0x0803217a
 8023dac:	0803273d 	.word	0x0803273d
 8023db0:	08032263 	.word	0x08032263

08023db4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023db8:	ed2d 8b08 	vpush	{d8-d11}
 8023dbc:	b095      	sub	sp, #84	; 0x54
 8023dbe:	eeb0 aa40 	vmov.f32	s20, s0
 8023dc2:	eef0 9a60 	vmov.f32	s19, s1
 8023dc6:	9212      	str	r2, [sp, #72]	; 0x48
 8023dc8:	eeb0 9a41 	vmov.f32	s18, s2
 8023dcc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023dce:	eeb0 8a62 	vmov.f32	s16, s5
 8023dd2:	9309      	str	r3, [sp, #36]	; 0x24
 8023dd4:	eef0 8a43 	vmov.f32	s17, s6
 8023dd8:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023ddc:	eef0 ba44 	vmov.f32	s23, s8
 8023de0:	9013      	str	r0, [sp, #76]	; 0x4c
 8023de2:	eeb0 ba64 	vmov.f32	s22, s9
 8023de6:	930f      	str	r3, [sp, #60]	; 0x3c
 8023de8:	eef0 aa45 	vmov.f32	s21, s10
 8023dec:	6850      	ldr	r0, [r2, #4]
 8023dee:	910e      	str	r1, [sp, #56]	; 0x38
 8023df0:	6812      	ldr	r2, [r2, #0]
 8023df2:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023df6:	fb00 1303 	mla	r3, r0, r3, r1
 8023dfa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023dfe:	930a      	str	r3, [sp, #40]	; 0x28
 8023e00:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e02:	681b      	ldr	r3, [r3, #0]
 8023e04:	930d      	str	r3, [sp, #52]	; 0x34
 8023e06:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e08:	685c      	ldr	r4, [r3, #4]
 8023e0a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023e0c:	3404      	adds	r4, #4
 8023e0e:	43db      	mvns	r3, r3
 8023e10:	b2db      	uxtb	r3, r3
 8023e12:	930b      	str	r3, [sp, #44]	; 0x2c
 8023e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023e16:	2b00      	cmp	r3, #0
 8023e18:	dc03      	bgt.n	8023e22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023e1a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023e1c:	2b00      	cmp	r3, #0
 8023e1e:	f340 8258 	ble.w	80242d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 8023e22:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023e24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023e28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023e2c:	1e48      	subs	r0, r1, #1
 8023e2e:	1e55      	subs	r5, r2, #1
 8023e30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023e32:	2b00      	cmp	r3, #0
 8023e34:	f340 80fc 	ble.w	8024030 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8023e38:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8023e3a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e3c:	1436      	asrs	r6, r6, #16
 8023e3e:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023e42:	d406      	bmi.n	8023e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023e44:	4286      	cmp	r6, r0
 8023e46:	da04      	bge.n	8023e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023e48:	2b00      	cmp	r3, #0
 8023e4a:	db02      	blt.n	8023e52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023e4c:	42ab      	cmp	r3, r5
 8023e4e:	f2c0 80f0 	blt.w	8024032 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8023e52:	3601      	adds	r6, #1
 8023e54:	f100 80dd 	bmi.w	8024012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8023e58:	42b1      	cmp	r1, r6
 8023e5a:	f2c0 80da 	blt.w	8024012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8023e5e:	3301      	adds	r3, #1
 8023e60:	f100 80d7 	bmi.w	8024012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8023e64:	429a      	cmp	r2, r3
 8023e66:	f2c0 80d4 	blt.w	8024012 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8023e6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023e6c:	9311      	str	r3, [sp, #68]	; 0x44
 8023e6e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023e70:	930c      	str	r3, [sp, #48]	; 0x30
 8023e72:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023e74:	2b00      	cmp	r3, #0
 8023e76:	f340 80fd 	ble.w	8024074 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 8023e7a:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8023e7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023e7e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8023e80:	68c6      	ldr	r6, [r0, #12]
 8023e82:	141d      	asrs	r5, r3, #16
 8023e84:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8023e86:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8023e8a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023e8c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023e8e:	1400      	asrs	r0, r0, #16
 8023e90:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8023e94:	6892      	ldr	r2, [r2, #8]
 8023e96:	f100 8141 	bmi.w	802411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023e9a:	1e57      	subs	r7, r2, #1
 8023e9c:	42b8      	cmp	r0, r7
 8023e9e:	f280 813d 	bge.w	802411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023ea2:	2d00      	cmp	r5, #0
 8023ea4:	f2c0 813a 	blt.w	802411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023ea8:	1e77      	subs	r7, r6, #1
 8023eaa:	42bd      	cmp	r5, r7
 8023eac:	f280 8136 	bge.w	802411c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023eb0:	b212      	sxth	r2, r2
 8023eb2:	fb05 0002 	mla	r0, r5, r2, r0
 8023eb6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023eb8:	f815 a000 	ldrb.w	sl, [r5, r0]
 8023ebc:	182e      	adds	r6, r5, r0
 8023ebe:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8023ec2:	eb04 050a 	add.w	r5, r4, sl
 8023ec6:	2b00      	cmp	r3, #0
 8023ec8:	f000 811a 	beq.w	8024100 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34c>
 8023ecc:	f896 c001 	ldrb.w	ip, [r6, #1]
 8023ed0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8023ed4:	44a4      	add	ip, r4
 8023ed6:	2900      	cmp	r1, #0
 8023ed8:	f000 811a 	beq.w	8024110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 8023edc:	18b0      	adds	r0, r6, r2
 8023ede:	5cb2      	ldrb	r2, [r6, r2]
 8023ee0:	7840      	ldrb	r0, [r0, #1]
 8023ee2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8023ee6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023eea:	4422      	add	r2, r4
 8023eec:	4420      	add	r0, r4
 8023eee:	b29b      	uxth	r3, r3
 8023ef0:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8023ef4:	b289      	uxth	r1, r1
 8023ef6:	f895 b002 	ldrb.w	fp, [r5, #2]
 8023efa:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8023efc:	fb03 f901 	mul.w	r9, r3, r1
 8023f00:	011b      	lsls	r3, r3, #4
 8023f02:	f8b6 e000 	ldrh.w	lr, [r6]
 8023f06:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023f0a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8023f0e:	eba3 0309 	sub.w	r3, r3, r9
 8023f12:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8023f16:	b289      	uxth	r1, r1
 8023f18:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8023f1c:	b29b      	uxth	r3, r3
 8023f1e:	eba8 0801 	sub.w	r8, r8, r1
 8023f22:	435f      	muls	r7, r3
 8023f24:	fa1f f888 	uxth.w	r8, r8
 8023f28:	9310      	str	r3, [sp, #64]	; 0x40
 8023f2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023f2c:	fb08 770b 	mla	r7, r8, fp, r7
 8023f30:	f892 b002 	ldrb.w	fp, [r2, #2]
 8023f34:	fb01 770b 	mla	r7, r1, fp, r7
 8023f38:	f890 b002 	ldrb.w	fp, [r0, #2]
 8023f3c:	fb09 770b 	mla	r7, r9, fp, r7
 8023f40:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8023f44:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8023f48:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023f4c:	fb1b fb03 	smulbb	fp, fp, r3
 8023f50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023f52:	fb07 b706 	mla	r7, r7, r6, fp
 8023f56:	f895 b001 	ldrb.w	fp, [r5, #1]
 8023f5a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8023f5e:	f89c c000 	ldrb.w	ip, [ip]
 8023f62:	b2bf      	uxth	r7, r7
 8023f64:	435d      	muls	r5, r3
 8023f66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023f68:	fb08 550b 	mla	r5, r8, fp, r5
 8023f6c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8023f70:	fb01 550b 	mla	r5, r1, fp, r5
 8023f74:	f890 b001 	ldrb.w	fp, [r0, #1]
 8023f78:	fb09 550b 	mla	r5, r9, fp, r5
 8023f7c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8023f80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023f84:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8023f88:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8023f8c:	fa5f fe8e 	uxtb.w	lr, lr
 8023f90:	fb1b fb03 	smulbb	fp, fp, r3
 8023f94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023f96:	fb03 f30c 	mul.w	r3, r3, ip
 8023f9a:	f892 c000 	ldrb.w	ip, [r2]
 8023f9e:	fb05 b506 	mla	r5, r5, r6, fp
 8023fa2:	1c7a      	adds	r2, r7, #1
 8023fa4:	fb08 330a 	mla	r3, r8, sl, r3
 8023fa8:	b2ad      	uxth	r5, r5
 8023faa:	fb01 330c 	mla	r3, r1, ip, r3
 8023fae:	f890 c000 	ldrb.w	ip, [r0]
 8023fb2:	f105 0b01 	add.w	fp, r5, #1
 8023fb6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8023fba:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023fbe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023fc0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8023fc4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8023fc8:	fb1e fe03 	smulbb	lr, lr, r3
 8023fcc:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8023fd0:	096d      	lsrs	r5, r5, #5
 8023fd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023fd4:	fb0c ee06 	mla	lr, ip, r6, lr
 8023fd8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023fdc:	fa1f fe8e 	uxth.w	lr, lr
 8023fe0:	f10e 0c01 	add.w	ip, lr, #1
 8023fe4:	eb0c 2e1e 	add.w	lr, ip, lr, lsr #8
 8023fe8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8023fec:	ea47 070e 	orr.w	r7, r7, lr
 8023ff0:	433d      	orrs	r5, r7
 8023ff2:	801d      	strh	r5, [r3, #0]
 8023ff4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023ff6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023ff8:	3302      	adds	r3, #2
 8023ffa:	930c      	str	r3, [sp, #48]	; 0x30
 8023ffc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8023ffe:	4413      	add	r3, r2
 8024000:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8024002:	9327      	str	r3, [sp, #156]	; 0x9c
 8024004:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024006:	4413      	add	r3, r2
 8024008:	9328      	str	r3, [sp, #160]	; 0xa0
 802400a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802400c:	3b01      	subs	r3, #1
 802400e:	9311      	str	r3, [sp, #68]	; 0x44
 8024010:	e72f      	b.n	8023e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8024012:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024014:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8024016:	4433      	add	r3, r6
 8024018:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 802401a:	9327      	str	r3, [sp, #156]	; 0x9c
 802401c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802401e:	4433      	add	r3, r6
 8024020:	9328      	str	r3, [sp, #160]	; 0xa0
 8024022:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024024:	3b01      	subs	r3, #1
 8024026:	9309      	str	r3, [sp, #36]	; 0x24
 8024028:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802402a:	3302      	adds	r3, #2
 802402c:	930a      	str	r3, [sp, #40]	; 0x28
 802402e:	e6ff      	b.n	8023e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024030:	d027      	beq.n	8024082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ce>
 8024032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024034:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8024036:	3b01      	subs	r3, #1
 8024038:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 802403a:	fb00 5003 	mla	r0, r0, r3, r5
 802403e:	1400      	asrs	r0, r0, #16
 8024040:	f53f af13 	bmi.w	8023e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024044:	3901      	subs	r1, #1
 8024046:	4288      	cmp	r0, r1
 8024048:	f6bf af0f 	bge.w	8023e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802404c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802404e:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8024050:	fb01 0303 	mla	r3, r1, r3, r0
 8024054:	141b      	asrs	r3, r3, #16
 8024056:	f53f af08 	bmi.w	8023e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802405a:	3a01      	subs	r2, #1
 802405c:	4293      	cmp	r3, r2
 802405e:	f6bf af04 	bge.w	8023e6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024062:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024064:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8024068:	9311      	str	r3, [sp, #68]	; 0x44
 802406a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802406c:	930c      	str	r3, [sp, #48]	; 0x30
 802406e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8024070:	2b00      	cmp	r3, #0
 8024072:	dc70      	bgt.n	8024156 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a2>
 8024074:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024076:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024078:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802407c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024080:	930a      	str	r3, [sp, #40]	; 0x28
 8024082:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024084:	2b00      	cmp	r3, #0
 8024086:	f340 8124 	ble.w	80242d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51e>
 802408a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802408e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8024090:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024094:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024098:	eef0 6a48 	vmov.f32	s13, s16
 802409c:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80240a0:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80240a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240a8:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80240ac:	eef0 6a68 	vmov.f32	s13, s17
 80240b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80240b4:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80240b8:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80240bc:	ee69 7a27 	vmul.f32	s15, s18, s15
 80240c0:	ee37 8a48 	vsub.f32	s16, s14, s16
 80240c4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80240c8:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80240cc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80240d0:	ee18 2a10 	vmov	r2, s16
 80240d4:	eeb0 8a47 	vmov.f32	s16, s14
 80240d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80240dc:	ee18 2a90 	vmov	r2, s17
 80240e0:	9329      	str	r3, [sp, #164]	; 0xa4
 80240e2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80240e4:	eef0 8a67 	vmov.f32	s17, s15
 80240e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80240ec:	932a      	str	r3, [sp, #168]	; 0xa8
 80240ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80240f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80240f2:	3b01      	subs	r3, #1
 80240f4:	930e      	str	r3, [sp, #56]	; 0x38
 80240f6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80240f8:	bf08      	it	eq
 80240fa:	4613      	moveq	r3, r2
 80240fc:	9309      	str	r3, [sp, #36]	; 0x24
 80240fe:	e689      	b.n	8023e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8024100:	b149      	cbz	r1, 8024116 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024102:	5cb2      	ldrb	r2, [r6, r2]
 8024104:	4628      	mov	r0, r5
 8024106:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802410a:	4422      	add	r2, r4
 802410c:	46ac      	mov	ip, r5
 802410e:	e6ee      	b.n	8023eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8024110:	4628      	mov	r0, r5
 8024112:	462a      	mov	r2, r5
 8024114:	e6eb      	b.n	8023eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 8024116:	4628      	mov	r0, r5
 8024118:	462a      	mov	r2, r5
 802411a:	e7f7      	b.n	802410c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802411c:	1c47      	adds	r7, r0, #1
 802411e:	f53f af69 	bmi.w	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024122:	42ba      	cmp	r2, r7
 8024124:	f6ff af66 	blt.w	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024128:	1c6f      	adds	r7, r5, #1
 802412a:	f53f af63 	bmi.w	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802412e:	42be      	cmp	r6, r7
 8024130:	f6ff af60 	blt.w	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024134:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8024136:	b236      	sxth	r6, r6
 8024138:	b212      	sxth	r2, r2
 802413a:	9002      	str	r0, [sp, #8]
 802413c:	9601      	str	r6, [sp, #4]
 802413e:	9200      	str	r2, [sp, #0]
 8024140:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8024142:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8024146:	e9cd 5303 	strd	r5, r3, [sp, #12]
 802414a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802414e:	4623      	mov	r3, r4
 8024150:	f7ff fd44 	bl	8023bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8024154:	e74e      	b.n	8023ff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024156:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8024158:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802415a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802415e:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8024160:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8024162:	1400      	asrs	r0, r0, #16
 8024164:	142d      	asrs	r5, r5, #16
 8024166:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024168:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 802416c:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8024170:	fb02 5000 	mla	r0, r2, r0, r5
 8024174:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024176:	f815 9000 	ldrb.w	r9, [r5, r0]
 802417a:	182e      	adds	r6, r5, r0
 802417c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8024180:	eb04 0509 	add.w	r5, r4, r9
 8024184:	2b00      	cmp	r3, #0
 8024186:	f000 8096 	beq.w	80242b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x502>
 802418a:	7877      	ldrb	r7, [r6, #1]
 802418c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8024190:	4427      	add	r7, r4
 8024192:	2900      	cmp	r1, #0
 8024194:	f000 8097 	beq.w	80242c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8024198:	18b0      	adds	r0, r6, r2
 802419a:	5cb2      	ldrb	r2, [r6, r2]
 802419c:	7840      	ldrb	r0, [r0, #1]
 802419e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80241a2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80241a6:	4422      	add	r2, r4
 80241a8:	4420      	add	r0, r4
 80241aa:	b29b      	uxth	r3, r3
 80241ac:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80241ae:	b289      	uxth	r1, r1
 80241b0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80241b4:	f8b6 c000 	ldrh.w	ip, [r6]
 80241b8:	fb03 f801 	mul.w	r8, r3, r1
 80241bc:	011b      	lsls	r3, r3, #4
 80241be:	78be      	ldrb	r6, [r7, #2]
 80241c0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80241c4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80241c8:	eba3 0308 	sub.w	r3, r3, r8
 80241cc:	f814 9009 	ldrb.w	r9, [r4, r9]
 80241d0:	b289      	uxth	r1, r1
 80241d2:	b29b      	uxth	r3, r3
 80241d4:	ebae 0e01 	sub.w	lr, lr, r1
 80241d8:	435e      	muls	r6, r3
 80241da:	fa1f fe8e 	uxth.w	lr, lr
 80241de:	9310      	str	r3, [sp, #64]	; 0x40
 80241e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80241e2:	fb0e 660b 	mla	r6, lr, fp, r6
 80241e6:	f892 b002 	ldrb.w	fp, [r2, #2]
 80241ea:	fb01 660b 	mla	r6, r1, fp, r6
 80241ee:	f890 b002 	ldrb.w	fp, [r0, #2]
 80241f2:	fb08 660b 	mla	r6, r8, fp, r6
 80241f6:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80241fa:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80241fe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024202:	fb1b fb03 	smulbb	fp, fp, r3
 8024206:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024208:	fb06 b60a 	mla	r6, r6, sl, fp
 802420c:	f895 b001 	ldrb.w	fp, [r5, #1]
 8024210:	787d      	ldrb	r5, [r7, #1]
 8024212:	783f      	ldrb	r7, [r7, #0]
 8024214:	b2b6      	uxth	r6, r6
 8024216:	435d      	muls	r5, r3
 8024218:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802421a:	fb0e 550b 	mla	r5, lr, fp, r5
 802421e:	f892 b001 	ldrb.w	fp, [r2, #1]
 8024222:	fb01 550b 	mla	r5, r1, fp, r5
 8024226:	f890 b001 	ldrb.w	fp, [r0, #1]
 802422a:	fb08 550b 	mla	r5, r8, fp, r5
 802422e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8024232:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024236:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 802423a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802423e:	fa5f fc8c 	uxtb.w	ip, ip
 8024242:	fb1b fb03 	smulbb	fp, fp, r3
 8024246:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024248:	437b      	muls	r3, r7
 802424a:	7817      	ldrb	r7, [r2, #0]
 802424c:	fb05 b50a 	mla	r5, r5, sl, fp
 8024250:	fb0e 3309 	mla	r3, lr, r9, r3
 8024254:	b2ad      	uxth	r5, r5
 8024256:	fb01 3307 	mla	r3, r1, r7, r3
 802425a:	7807      	ldrb	r7, [r0, #0]
 802425c:	f105 0b01 	add.w	fp, r5, #1
 8024260:	fb08 3707 	mla	r7, r8, r7, r3
 8024264:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024266:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802426a:	fb1c fc03 	smulbb	ip, ip, r3
 802426e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8024272:	1c73      	adds	r3, r6, #1
 8024274:	096d      	lsrs	r5, r5, #5
 8024276:	fb07 c70a 	mla	r7, r7, sl, ip
 802427a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802427e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024282:	b2bf      	uxth	r7, r7
 8024284:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024286:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 802428a:	1c7a      	adds	r2, r7, #1
 802428c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8024290:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024294:	4316      	orrs	r6, r2
 8024296:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8024298:	432e      	orrs	r6, r5
 802429a:	f823 6b02 	strh.w	r6, [r3], #2
 802429e:	930c      	str	r3, [sp, #48]	; 0x30
 80242a0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80242a2:	4413      	add	r3, r2
 80242a4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80242a6:	9327      	str	r3, [sp, #156]	; 0x9c
 80242a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80242aa:	4413      	add	r3, r2
 80242ac:	9328      	str	r3, [sp, #160]	; 0xa0
 80242ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80242b0:	3b01      	subs	r3, #1
 80242b2:	9311      	str	r3, [sp, #68]	; 0x44
 80242b4:	e6db      	b.n	802406e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80242b6:	b149      	cbz	r1, 80242cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 80242b8:	5cb2      	ldrb	r2, [r6, r2]
 80242ba:	4628      	mov	r0, r5
 80242bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80242c0:	4422      	add	r2, r4
 80242c2:	462f      	mov	r7, r5
 80242c4:	e771      	b.n	80241aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80242c6:	4628      	mov	r0, r5
 80242c8:	462a      	mov	r2, r5
 80242ca:	e76e      	b.n	80241aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 80242cc:	4628      	mov	r0, r5
 80242ce:	462a      	mov	r2, r5
 80242d0:	e7f7      	b.n	80242c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50e>
 80242d2:	b015      	add	sp, #84	; 0x54
 80242d4:	ecbd 8b08 	vpop	{d8-d11}
 80242d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080242dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 80242dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80242e0:	880e      	ldrh	r6, [r1, #0]
 80242e2:	b085      	sub	sp, #20
 80242e4:	4691      	mov	r9, r2
 80242e6:	0230      	lsls	r0, r6, #8
 80242e8:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80242ec:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80242f0:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 80242f4:	0170      	lsls	r0, r6, #5
 80242f6:	00f6      	lsls	r6, r6, #3
 80242f8:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80242fc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8024300:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8024304:	b2f6      	uxtb	r6, r6
 8024306:	ea4b 0000 	orr.w	r0, fp, r0
 802430a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 802430e:	4306      	orrs	r6, r0
 8024310:	fb05 7a0c 	mla	sl, r5, ip, r7
 8024314:	2d00      	cmp	r5, #0
 8024316:	9603      	str	r6, [sp, #12]
 8024318:	eb09 0e0a 	add.w	lr, r9, sl
 802431c:	db42      	blt.n	80243a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 802431e:	45a8      	cmp	r8, r5
 8024320:	dd40      	ble.n	80243a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8024322:	2f00      	cmp	r7, #0
 8024324:	db3c      	blt.n	80243a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8024326:	45bc      	cmp	ip, r7
 8024328:	dd3a      	ble.n	80243a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 802432a:	f819 600a 	ldrb.w	r6, [r9, sl]
 802432e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8024332:	441e      	add	r6, r3
 8024334:	1c78      	adds	r0, r7, #1
 8024336:	d438      	bmi.n	80243aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8024338:	4584      	cmp	ip, r0
 802433a:	dd36      	ble.n	80243aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 802433c:	b3aa      	cbz	r2, 80243aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 802433e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8024342:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024346:	4418      	add	r0, r3
 8024348:	3501      	adds	r5, #1
 802434a:	d432      	bmi.n	80243b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 802434c:	45a8      	cmp	r8, r5
 802434e:	dd30      	ble.n	80243b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8024350:	b37c      	cbz	r4, 80243b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8024352:	2f00      	cmp	r7, #0
 8024354:	db2b      	blt.n	80243ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8024356:	45bc      	cmp	ip, r7
 8024358:	dd29      	ble.n	80243ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 802435a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 802435e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8024362:	441d      	add	r5, r3
 8024364:	3701      	adds	r7, #1
 8024366:	d427      	bmi.n	80243b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8024368:	45bc      	cmp	ip, r7
 802436a:	dd25      	ble.n	80243b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 802436c:	b322      	cbz	r2, 80243b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 802436e:	44f4      	add	ip, lr
 8024370:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8024374:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8024378:	443b      	add	r3, r7
 802437a:	781f      	ldrb	r7, [r3, #0]
 802437c:	2a0f      	cmp	r2, #15
 802437e:	f896 a000 	ldrb.w	sl, [r6]
 8024382:	f890 b000 	ldrb.w	fp, [r0]
 8024386:	f895 9000 	ldrb.w	r9, [r5]
 802438a:	9700      	str	r7, [sp, #0]
 802438c:	d801      	bhi.n	8024392 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 802438e:	2c0f      	cmp	r4, #15
 8024390:	d914      	bls.n	80243bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8024392:	4b2c      	ldr	r3, [pc, #176]	; (8024444 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8024394:	f240 210d 	movw	r1, #525	; 0x20d
 8024398:	4a2b      	ldr	r2, [pc, #172]	; (8024448 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 802439a:	482c      	ldr	r0, [pc, #176]	; (802444c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 802439c:	f007 fda4 	bl	802bee8 <__assert_func>
 80243a0:	ae03      	add	r6, sp, #12
 80243a2:	e7c7      	b.n	8024334 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 80243a4:	a803      	add	r0, sp, #12
 80243a6:	4606      	mov	r6, r0
 80243a8:	e7ce      	b.n	8024348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80243aa:	a803      	add	r0, sp, #12
 80243ac:	e7cc      	b.n	8024348 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 80243ae:	ad03      	add	r5, sp, #12
 80243b0:	e7d8      	b.n	8024364 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 80243b2:	ab03      	add	r3, sp, #12
 80243b4:	461d      	mov	r5, r3
 80243b6:	e7e0      	b.n	802437a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80243b8:	ab03      	add	r3, sp, #12
 80243ba:	e7de      	b.n	802437a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 80243bc:	b292      	uxth	r2, r2
 80243be:	f890 e002 	ldrb.w	lr, [r0, #2]
 80243c2:	b2a4      	uxth	r4, r4
 80243c4:	78b7      	ldrb	r7, [r6, #2]
 80243c6:	7840      	ldrb	r0, [r0, #1]
 80243c8:	fb02 f804 	mul.w	r8, r2, r4
 80243cc:	0112      	lsls	r2, r2, #4
 80243ce:	7876      	ldrb	r6, [r6, #1]
 80243d0:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 80243d4:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 80243d8:	eba2 0208 	sub.w	r2, r2, r8
 80243dc:	b2a4      	uxth	r4, r4
 80243de:	b292      	uxth	r2, r2
 80243e0:	ebac 0c04 	sub.w	ip, ip, r4
 80243e4:	fb02 fe0e 	mul.w	lr, r2, lr
 80243e8:	fa1f fc8c 	uxth.w	ip, ip
 80243ec:	fb0c ee07 	mla	lr, ip, r7, lr
 80243f0:	78af      	ldrb	r7, [r5, #2]
 80243f2:	fb04 ee07 	mla	lr, r4, r7, lr
 80243f6:	789f      	ldrb	r7, [r3, #2]
 80243f8:	785b      	ldrb	r3, [r3, #1]
 80243fa:	fb08 e707 	mla	r7, r8, r7, lr
 80243fe:	fb02 fe0b 	mul.w	lr, r2, fp
 8024402:	4342      	muls	r2, r0
 8024404:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8024408:	7868      	ldrb	r0, [r5, #1]
 802440a:	fb0c ee0a 	mla	lr, ip, sl, lr
 802440e:	fb0c 2206 	mla	r2, ip, r6, r2
 8024412:	9701      	str	r7, [sp, #4]
 8024414:	fb04 ee09 	mla	lr, r4, r9, lr
 8024418:	9f00      	ldr	r7, [sp, #0]
 802441a:	fb04 2400 	mla	r4, r4, r0, r2
 802441e:	fb08 ee07 	mla	lr, r8, r7, lr
 8024422:	9f01      	ldr	r7, [sp, #4]
 8024424:	fb08 4803 	mla	r8, r8, r3, r4
 8024428:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 802442c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8024430:	ea47 070e 	orr.w	r7, r7, lr
 8024434:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8024438:	ea47 0708 	orr.w	r7, r7, r8
 802443c:	800f      	strh	r7, [r1, #0]
 802443e:	b005      	add	sp, #20
 8024440:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024444:	0803217a 	.word	0x0803217a
 8024448:	0803273d 	.word	0x0803273d
 802444c:	08032263 	.word	0x08032263

08024450 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024450:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024454:	ed2d 8b08 	vpush	{d8-d11}
 8024458:	b08f      	sub	sp, #60	; 0x3c
 802445a:	eeb0 aa40 	vmov.f32	s20, s0
 802445e:	eef0 9a60 	vmov.f32	s19, s1
 8024462:	920c      	str	r2, [sp, #48]	; 0x30
 8024464:	eeb0 9a41 	vmov.f32	s18, s2
 8024468:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802446a:	eeb0 8a62 	vmov.f32	s16, s5
 802446e:	900d      	str	r0, [sp, #52]	; 0x34
 8024470:	eef0 8a43 	vmov.f32	s17, s6
 8024474:	6850      	ldr	r0, [r2, #4]
 8024476:	eef0 ba44 	vmov.f32	s23, s8
 802447a:	910a      	str	r1, [sp, #40]	; 0x28
 802447c:	eeb0 ba64 	vmov.f32	s22, s9
 8024480:	9306      	str	r3, [sp, #24]
 8024482:	eef0 aa45 	vmov.f32	s21, s10
 8024486:	6812      	ldr	r2, [r2, #0]
 8024488:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802448c:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8024490:	fb00 1303 	mla	r3, r0, r3, r1
 8024494:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024498:	9307      	str	r3, [sp, #28]
 802449a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802449c:	681b      	ldr	r3, [r3, #0]
 802449e:	9308      	str	r3, [sp, #32]
 80244a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80244a2:	685c      	ldr	r4, [r3, #4]
 80244a4:	3404      	adds	r4, #4
 80244a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80244a8:	2b00      	cmp	r3, #0
 80244aa:	dc03      	bgt.n	80244b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80244ac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80244ae:	2b00      	cmp	r3, #0
 80244b0:	f340 81d5 	ble.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 80244b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80244b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80244ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80244be:	1e48      	subs	r0, r1, #1
 80244c0:	1e56      	subs	r6, r2, #1
 80244c2:	9b06      	ldr	r3, [sp, #24]
 80244c4:	2b00      	cmp	r3, #0
 80244c6:	f340 80b6 	ble.w	8024636 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80244ca:	ea5f 472b 	movs.w	r7, fp, asr #16
 80244ce:	ea4f 4325 	mov.w	r3, r5, asr #16
 80244d2:	d406      	bmi.n	80244e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244d4:	4287      	cmp	r7, r0
 80244d6:	da04      	bge.n	80244e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244d8:	2b00      	cmp	r3, #0
 80244da:	db02      	blt.n	80244e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80244dc:	42b3      	cmp	r3, r6
 80244de:	f2c0 80ab 	blt.w	8024638 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80244e2:	3701      	adds	r7, #1
 80244e4:	f100 809c 	bmi.w	8024620 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80244e8:	42b9      	cmp	r1, r7
 80244ea:	f2c0 8099 	blt.w	8024620 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80244ee:	3301      	adds	r3, #1
 80244f0:	f100 8096 	bmi.w	8024620 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80244f4:	429a      	cmp	r2, r3
 80244f6:	f2c0 8093 	blt.w	8024620 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 80244fa:	9b06      	ldr	r3, [sp, #24]
 80244fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80244fe:	9b07      	ldr	r3, [sp, #28]
 8024500:	9309      	str	r3, [sp, #36]	; 0x24
 8024502:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024504:	2b00      	cmp	r3, #0
 8024506:	f340 80b4 	ble.w	8024672 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802450a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 802450c:	142e      	asrs	r6, r5, #16
 802450e:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8024510:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8024514:	68c7      	ldr	r7, [r0, #12]
 8024516:	ea5f 402b 	movs.w	r0, fp, asr #16
 802451a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802451e:	6892      	ldr	r2, [r2, #8]
 8024520:	f100 80fb 	bmi.w	802471a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8024524:	f102 3cff 	add.w	ip, r2, #4294967295
 8024528:	4560      	cmp	r0, ip
 802452a:	f280 80f6 	bge.w	802471a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802452e:	2e00      	cmp	r6, #0
 8024530:	f2c0 80f3 	blt.w	802471a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8024534:	f107 3cff 	add.w	ip, r7, #4294967295
 8024538:	4566      	cmp	r6, ip
 802453a:	f280 80ee 	bge.w	802471a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 802453e:	b212      	sxth	r2, r2
 8024540:	fb06 0002 	mla	r0, r6, r2, r0
 8024544:	9e08      	ldr	r6, [sp, #32]
 8024546:	1837      	adds	r7, r6, r0
 8024548:	5c30      	ldrb	r0, [r6, r0]
 802454a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 802454e:	eb04 0c08 	add.w	ip, r4, r8
 8024552:	2b00      	cmp	r3, #0
 8024554:	f000 80d3 	beq.w	80246fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024558:	787e      	ldrb	r6, [r7, #1]
 802455a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802455e:	4426      	add	r6, r4
 8024560:	2900      	cmp	r1, #0
 8024562:	f000 80d4 	beq.w	802470e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 8024566:	18b8      	adds	r0, r7, r2
 8024568:	5cba      	ldrb	r2, [r7, r2]
 802456a:	7840      	ldrb	r0, [r0, #1]
 802456c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024570:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8024574:	4422      	add	r2, r4
 8024576:	4420      	add	r0, r4
 8024578:	b29b      	uxth	r3, r3
 802457a:	78b7      	ldrb	r7, [r6, #2]
 802457c:	b289      	uxth	r1, r1
 802457e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8024582:	f89c c001 	ldrb.w	ip, [ip, #1]
 8024586:	fb03 f901 	mul.w	r9, r3, r1
 802458a:	011b      	lsls	r3, r3, #4
 802458c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024590:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8024594:	eba3 0309 	sub.w	r3, r3, r9
 8024598:	b289      	uxth	r1, r1
 802459a:	b29b      	uxth	r3, r3
 802459c:	ebae 0e01 	sub.w	lr, lr, r1
 80245a0:	435f      	muls	r7, r3
 80245a2:	fa1f fe8e 	uxth.w	lr, lr
 80245a6:	fb0e 770a 	mla	r7, lr, sl, r7
 80245aa:	f892 a002 	ldrb.w	sl, [r2, #2]
 80245ae:	fb01 770a 	mla	r7, r1, sl, r7
 80245b2:	f890 a002 	ldrb.w	sl, [r0, #2]
 80245b6:	fb09 7a0a 	mla	sl, r9, sl, r7
 80245ba:	f814 7008 	ldrb.w	r7, [r4, r8]
 80245be:	f896 8000 	ldrb.w	r8, [r6]
 80245c2:	7876      	ldrb	r6, [r6, #1]
 80245c4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80245c8:	fb03 f808 	mul.w	r8, r3, r8
 80245cc:	4373      	muls	r3, r6
 80245ce:	fb0e 8807 	mla	r8, lr, r7, r8
 80245d2:	7817      	ldrb	r7, [r2, #0]
 80245d4:	fb0e 330c 	mla	r3, lr, ip, r3
 80245d8:	fb01 8807 	mla	r8, r1, r7, r8
 80245dc:	7807      	ldrb	r7, [r0, #0]
 80245de:	fb09 8707 	mla	r7, r9, r7, r8
 80245e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80245e6:	ea4a 0707 	orr.w	r7, sl, r7
 80245ea:	f892 a001 	ldrb.w	sl, [r2, #1]
 80245ee:	fb01 310a 	mla	r1, r1, sl, r3
 80245f2:	f890 a001 	ldrb.w	sl, [r0, #1]
 80245f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80245f8:	fb09 1a0a 	mla	sl, r9, sl, r1
 80245fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8024600:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024604:	ea47 070a 	orr.w	r7, r7, sl
 8024608:	801f      	strh	r7, [r3, #0]
 802460a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802460c:	3302      	adds	r3, #2
 802460e:	9309      	str	r3, [sp, #36]	; 0x24
 8024610:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024612:	449b      	add	fp, r3
 8024614:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024616:	441d      	add	r5, r3
 8024618:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802461a:	3b01      	subs	r3, #1
 802461c:	930b      	str	r3, [sp, #44]	; 0x2c
 802461e:	e770      	b.n	8024502 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8024620:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024622:	449b      	add	fp, r3
 8024624:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024626:	441d      	add	r5, r3
 8024628:	9b06      	ldr	r3, [sp, #24]
 802462a:	3b01      	subs	r3, #1
 802462c:	9306      	str	r3, [sp, #24]
 802462e:	9b07      	ldr	r3, [sp, #28]
 8024630:	3302      	adds	r3, #2
 8024632:	9307      	str	r3, [sp, #28]
 8024634:	e745      	b.n	80244c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8024636:	d023      	beq.n	8024680 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8024638:	9b06      	ldr	r3, [sp, #24]
 802463a:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802463c:	3b01      	subs	r3, #1
 802463e:	fb00 b003 	mla	r0, r0, r3, fp
 8024642:	1400      	asrs	r0, r0, #16
 8024644:	f53f af59 	bmi.w	80244fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8024648:	3901      	subs	r1, #1
 802464a:	4288      	cmp	r0, r1
 802464c:	f6bf af55 	bge.w	80244fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8024650:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024652:	fb01 5303 	mla	r3, r1, r3, r5
 8024656:	141b      	asrs	r3, r3, #16
 8024658:	f53f af4f 	bmi.w	80244fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802465c:	3a01      	subs	r2, #1
 802465e:	4293      	cmp	r3, r2
 8024660:	f6bf af4b 	bge.w	80244fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8024664:	9b06      	ldr	r3, [sp, #24]
 8024666:	9309      	str	r3, [sp, #36]	; 0x24
 8024668:	9b07      	ldr	r3, [sp, #28]
 802466a:	930b      	str	r3, [sp, #44]	; 0x2c
 802466c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802466e:	2b00      	cmp	r3, #0
 8024670:	dc70      	bgt.n	8024754 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x304>
 8024672:	9b06      	ldr	r3, [sp, #24]
 8024674:	9a07      	ldr	r2, [sp, #28]
 8024676:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802467a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802467e:	9307      	str	r3, [sp, #28]
 8024680:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024682:	2b00      	cmp	r3, #0
 8024684:	f340 80eb 	ble.w	802485e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8024688:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802468c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802468e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024692:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024696:	eef0 6a48 	vmov.f32	s13, s16
 802469a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802469e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80246a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246a6:	ee16 ba90 	vmov	fp, s13
 80246aa:	eef0 6a68 	vmov.f32	s13, s17
 80246ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80246b2:	ee16 5a90 	vmov	r5, s13
 80246b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80246ba:	ee69 7a27 	vmul.f32	s15, s18, s15
 80246be:	ee37 8a48 	vsub.f32	s16, s14, s16
 80246c2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80246c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80246ca:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80246ce:	ee18 2a10 	vmov	r2, s16
 80246d2:	eeb0 8a47 	vmov.f32	s16, s14
 80246d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80246da:	ee18 2a90 	vmov	r2, s17
 80246de:	9323      	str	r3, [sp, #140]	; 0x8c
 80246e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80246e2:	eef0 8a67 	vmov.f32	s17, s15
 80246e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80246ea:	9324      	str	r3, [sp, #144]	; 0x90
 80246ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80246ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80246f0:	3b01      	subs	r3, #1
 80246f2:	930a      	str	r3, [sp, #40]	; 0x28
 80246f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80246f6:	bf08      	it	eq
 80246f8:	4613      	moveq	r3, r2
 80246fa:	9306      	str	r3, [sp, #24]
 80246fc:	e6d3      	b.n	80244a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80246fe:	b149      	cbz	r1, 8024714 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c4>
 8024700:	5cba      	ldrb	r2, [r7, r2]
 8024702:	4660      	mov	r0, ip
 8024704:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024708:	4422      	add	r2, r4
 802470a:	4666      	mov	r6, ip
 802470c:	e734      	b.n	8024578 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 802470e:	4660      	mov	r0, ip
 8024710:	4662      	mov	r2, ip
 8024712:	e731      	b.n	8024578 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8024714:	4660      	mov	r0, ip
 8024716:	4662      	mov	r2, ip
 8024718:	e7f7      	b.n	802470a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 802471a:	f110 0c01 	adds.w	ip, r0, #1
 802471e:	f53f af74 	bmi.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024722:	4562      	cmp	r2, ip
 8024724:	f6ff af71 	blt.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024728:	f116 0c01 	adds.w	ip, r6, #1
 802472c:	f53f af6d 	bmi.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024730:	4567      	cmp	r7, ip
 8024732:	f6ff af6a 	blt.w	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024736:	b23f      	sxth	r7, r7
 8024738:	b212      	sxth	r2, r2
 802473a:	9701      	str	r7, [sp, #4]
 802473c:	9200      	str	r2, [sp, #0]
 802473e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8024742:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8024746:	4623      	mov	r3, r4
 8024748:	980d      	ldr	r0, [sp, #52]	; 0x34
 802474a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802474e:	f7ff fdc5 	bl	80242dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8024752:	e75a      	b.n	802460a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024754:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8024756:	ea4f 462b 	mov.w	r6, fp, asr #16
 802475a:	1428      	asrs	r0, r5, #16
 802475c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8024760:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8024764:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024768:	fb02 6000 	mla	r0, r2, r0, r6
 802476c:	9e08      	ldr	r6, [sp, #32]
 802476e:	f816 8000 	ldrb.w	r8, [r6, r0]
 8024772:	1837      	adds	r7, r6, r0
 8024774:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8024778:	eb04 0c08 	add.w	ip, r4, r8
 802477c:	2b00      	cmp	r3, #0
 802477e:	d060      	beq.n	8024842 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024780:	787e      	ldrb	r6, [r7, #1]
 8024782:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8024786:	4426      	add	r6, r4
 8024788:	2900      	cmp	r1, #0
 802478a:	d062      	beq.n	8024852 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x402>
 802478c:	18b8      	adds	r0, r7, r2
 802478e:	5cba      	ldrb	r2, [r7, r2]
 8024790:	7840      	ldrb	r0, [r0, #1]
 8024792:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8024796:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802479a:	4422      	add	r2, r4
 802479c:	4420      	add	r0, r4
 802479e:	b29b      	uxth	r3, r3
 80247a0:	78b7      	ldrb	r7, [r6, #2]
 80247a2:	b289      	uxth	r1, r1
 80247a4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80247a8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80247ac:	fb03 f901 	mul.w	r9, r3, r1
 80247b0:	011b      	lsls	r3, r3, #4
 80247b2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80247b6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80247ba:	eba3 0309 	sub.w	r3, r3, r9
 80247be:	b289      	uxth	r1, r1
 80247c0:	b29b      	uxth	r3, r3
 80247c2:	ebae 0e01 	sub.w	lr, lr, r1
 80247c6:	435f      	muls	r7, r3
 80247c8:	fa1f fe8e 	uxth.w	lr, lr
 80247cc:	fb0e 770a 	mla	r7, lr, sl, r7
 80247d0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80247d4:	fb01 770a 	mla	r7, r1, sl, r7
 80247d8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80247dc:	fb09 7a0a 	mla	sl, r9, sl, r7
 80247e0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80247e4:	f896 8000 	ldrb.w	r8, [r6]
 80247e8:	7876      	ldrb	r6, [r6, #1]
 80247ea:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80247ee:	fb03 f808 	mul.w	r8, r3, r8
 80247f2:	4373      	muls	r3, r6
 80247f4:	7856      	ldrb	r6, [r2, #1]
 80247f6:	fb0e 8807 	mla	r8, lr, r7, r8
 80247fa:	7817      	ldrb	r7, [r2, #0]
 80247fc:	fb0e 330c 	mla	r3, lr, ip, r3
 8024800:	fb01 8807 	mla	r8, r1, r7, r8
 8024804:	7807      	ldrb	r7, [r0, #0]
 8024806:	fb01 3306 	mla	r3, r1, r6, r3
 802480a:	fb09 8707 	mla	r7, r9, r7, r8
 802480e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8024812:	ea4a 0707 	orr.w	r7, sl, r7
 8024816:	f890 a001 	ldrb.w	sl, [r0, #1]
 802481a:	fb09 3a0a 	mla	sl, r9, sl, r3
 802481e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024820:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8024824:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024828:	ea47 070a 	orr.w	r7, r7, sl
 802482c:	f823 7b02 	strh.w	r7, [r3], #2
 8024830:	930b      	str	r3, [sp, #44]	; 0x2c
 8024832:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024834:	449b      	add	fp, r3
 8024836:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024838:	441d      	add	r5, r3
 802483a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802483c:	3b01      	subs	r3, #1
 802483e:	9309      	str	r3, [sp, #36]	; 0x24
 8024840:	e714      	b.n	802466c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21c>
 8024842:	b149      	cbz	r1, 8024858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x408>
 8024844:	5cba      	ldrb	r2, [r7, r2]
 8024846:	4660      	mov	r0, ip
 8024848:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802484c:	4422      	add	r2, r4
 802484e:	4666      	mov	r6, ip
 8024850:	e7a5      	b.n	802479e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024852:	4660      	mov	r0, ip
 8024854:	4662      	mov	r2, ip
 8024856:	e7a2      	b.n	802479e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024858:	4660      	mov	r0, ip
 802485a:	4662      	mov	r2, ip
 802485c:	e7f7      	b.n	802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 802485e:	b00f      	add	sp, #60	; 0x3c
 8024860:	ecbd 8b08 	vpop	{d8-d11}
 8024864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024868 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8024868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802486c:	880e      	ldrh	r6, [r1, #0]
 802486e:	b085      	sub	sp, #20
 8024870:	4691      	mov	r9, r2
 8024872:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8024876:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 802487a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 802487e:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8024882:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8024886:	00f6      	lsls	r6, r6, #3
 8024888:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802488c:	9200      	str	r2, [sp, #0]
 802488e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8024892:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8024896:	9201      	str	r2, [sp, #4]
 8024898:	b2f2      	uxtb	r2, r6
 802489a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 802489e:	9202      	str	r2, [sp, #8]
 80248a0:	fb04 560c 	mla	r6, r4, ip, r5
 80248a4:	2c00      	cmp	r4, #0
 80248a6:	eb09 0e06 	add.w	lr, r9, r6
 80248aa:	db3e      	blt.n	802492a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80248ac:	45a0      	cmp	r8, r4
 80248ae:	dd3c      	ble.n	802492a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 80248b0:	2d00      	cmp	r5, #0
 80248b2:	db38      	blt.n	8024926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80248b4:	45ac      	cmp	ip, r5
 80248b6:	dd36      	ble.n	8024926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80248b8:	f819 2006 	ldrb.w	r2, [r9, r6]
 80248bc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80248c0:	1c6e      	adds	r6, r5, #1
 80248c2:	d435      	bmi.n	8024930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80248c4:	45b4      	cmp	ip, r6
 80248c6:	dd33      	ble.n	8024930 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 80248c8:	b3a0      	cbz	r0, 8024934 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 80248ca:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80248ce:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80248d2:	3401      	adds	r4, #1
 80248d4:	d432      	bmi.n	802493c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80248d6:	45a0      	cmp	r8, r4
 80248d8:	dd30      	ble.n	802493c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 80248da:	b397      	cbz	r7, 8024942 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80248dc:	2d00      	cmp	r5, #0
 80248de:	db2b      	blt.n	8024938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80248e0:	45ac      	cmp	ip, r5
 80248e2:	dd29      	ble.n	8024938 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 80248e4:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80248e8:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 80248ec:	3501      	adds	r5, #1
 80248ee:	d42b      	bmi.n	8024948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80248f0:	45ac      	cmp	ip, r5
 80248f2:	dd29      	ble.n	8024948 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 80248f4:	b350      	cbz	r0, 802494c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 80248f6:	44f4      	add	ip, lr
 80248f8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80248fc:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8024900:	280f      	cmp	r0, #15
 8024902:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8024906:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 802490a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802490e:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8024912:	d801      	bhi.n	8024918 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8024914:	2f0f      	cmp	r7, #15
 8024916:	d91b      	bls.n	8024950 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8024918:	4b85      	ldr	r3, [pc, #532]	; (8024b30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 802491a:	f240 210d 	movw	r1, #525	; 0x20d
 802491e:	4a85      	ldr	r2, [pc, #532]	; (8024b34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8024920:	4885      	ldr	r0, [pc, #532]	; (8024b38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2d0>)
 8024922:	f007 fae1 	bl	802bee8 <__assert_func>
 8024926:	2200      	movs	r2, #0
 8024928:	e7ca      	b.n	80248c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 802492a:	2600      	movs	r6, #0
 802492c:	4632      	mov	r2, r6
 802492e:	e7d0      	b.n	80248d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8024930:	2600      	movs	r6, #0
 8024932:	e7ce      	b.n	80248d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8024934:	4606      	mov	r6, r0
 8024936:	e7cc      	b.n	80248d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8024938:	2400      	movs	r4, #0
 802493a:	e7d7      	b.n	80248ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 802493c:	2300      	movs	r3, #0
 802493e:	461c      	mov	r4, r3
 8024940:	e7de      	b.n	8024900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8024942:	463b      	mov	r3, r7
 8024944:	463c      	mov	r4, r7
 8024946:	e7db      	b.n	8024900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8024948:	2300      	movs	r3, #0
 802494a:	e7d9      	b.n	8024900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 802494c:	4603      	mov	r3, r0
 802494e:	e7d7      	b.n	8024900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8024950:	b280      	uxth	r0, r0
 8024952:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8024956:	b2bf      	uxth	r7, r7
 8024958:	fb00 fe07 	mul.w	lr, r0, r7
 802495c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8024960:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8024964:	eba0 0c0e 	sub.w	ip, r0, lr
 8024968:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 802496c:	b2bf      	uxth	r7, r7
 802496e:	fa1f fc8c 	uxth.w	ip, ip
 8024972:	eba5 0507 	sub.w	r5, r5, r7
 8024976:	fb0c f00a 	mul.w	r0, ip, sl
 802497a:	b2ad      	uxth	r5, r5
 802497c:	fb05 000b 	mla	r0, r5, fp, r0
 8024980:	fb07 0009 	mla	r0, r7, r9, r0
 8024984:	fb0e 0008 	mla	r0, lr, r8, r0
 8024988:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802498c:	9003      	str	r0, [sp, #12]
 802498e:	d018      	beq.n	80249c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x15a>
 8024990:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8024994:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024998:	fb0b f000 	mul.w	r0, fp, r0
 802499c:	fb0b fb02 	mul.w	fp, fp, r2
 80249a0:	0a02      	lsrs	r2, r0, #8
 80249a2:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80249a6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80249aa:	4402      	add	r2, r0
 80249ac:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80249b0:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80249b4:	0a12      	lsrs	r2, r2, #8
 80249b6:	0a00      	lsrs	r0, r0, #8
 80249b8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80249bc:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80249c0:	4302      	orrs	r2, r0
 80249c2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80249c6:	d019      	beq.n	80249fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x194>
 80249c8:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80249cc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80249d0:	fb0a fb0b 	mul.w	fp, sl, fp
 80249d4:	fb0a fa06 	mul.w	sl, sl, r6
 80249d8:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80249dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80249e0:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80249e4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80249e8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80249ec:	445e      	add	r6, fp
 80249ee:	0a00      	lsrs	r0, r0, #8
 80249f0:	0a36      	lsrs	r6, r6, #8
 80249f2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80249f6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80249fa:	4306      	orrs	r6, r0
 80249fc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024a00:	d019      	beq.n	8024a36 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ce>
 8024a02:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8024a06:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024a0a:	fb09 fa0a 	mul.w	sl, r9, sl
 8024a0e:	fb09 f904 	mul.w	r9, r9, r4
 8024a12:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8024a16:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024a1a:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8024a1e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024a22:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8024a26:	4454      	add	r4, sl
 8024a28:	0a00      	lsrs	r0, r0, #8
 8024a2a:	0a24      	lsrs	r4, r4, #8
 8024a2c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024a30:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024a34:	4304      	orrs	r4, r0
 8024a36:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8024a3a:	d019      	beq.n	8024a70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x208>
 8024a3c:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8024a40:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024a44:	fb08 f909 	mul.w	r9, r8, r9
 8024a48:	fb08 f803 	mul.w	r8, r8, r3
 8024a4c:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8024a50:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8024a54:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8024a58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a5c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8024a60:	444b      	add	r3, r9
 8024a62:	0a00      	lsrs	r0, r0, #8
 8024a64:	0a1b      	lsrs	r3, r3, #8
 8024a66:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024a6a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024a6e:	4303      	orrs	r3, r0
 8024a70:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8024a74:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8024a78:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8024a7c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024a80:	fb0c f808 	mul.w	r8, ip, r8
 8024a84:	fb0c f606 	mul.w	r6, ip, r6
 8024a88:	fb05 8800 	mla	r8, r5, r0, r8
 8024a8c:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8024a90:	fb05 6202 	mla	r2, r5, r2, r6
 8024a94:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8024a98:	fb07 8800 	mla	r8, r7, r0, r8
 8024a9c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8024aa0:	b2ad      	uxth	r5, r5
 8024aa2:	fb0e 8000 	mla	r0, lr, r0, r8
 8024aa6:	0a00      	lsrs	r0, r0, #8
 8024aa8:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8024aac:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8024ab0:	9c00      	ldr	r4, [sp, #0]
 8024ab2:	fb07 2700 	mla	r7, r7, r0, r2
 8024ab6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8024aba:	9b03      	ldr	r3, [sp, #12]
 8024abc:	fb0e 7000 	mla	r0, lr, r0, r7
 8024ac0:	436b      	muls	r3, r5
 8024ac2:	0a00      	lsrs	r0, r0, #8
 8024ac4:	1c5a      	adds	r2, r3, #1
 8024ac6:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8024aca:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024ace:	ea48 0000 	orr.w	r0, r8, r0
 8024ad2:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8024ad6:	0c03      	lsrs	r3, r0, #16
 8024ad8:	b2d2      	uxtb	r2, r2
 8024ada:	fb14 f602 	smulbb	r6, r4, r2
 8024ade:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8024ae2:	b2c0      	uxtb	r0, r0
 8024ae4:	fb03 6305 	mla	r3, r3, r5, r6
 8024ae8:	b29e      	uxth	r6, r3
 8024aea:	9b01      	ldr	r3, [sp, #4]
 8024aec:	fb13 f302 	smulbb	r3, r3, r2
 8024af0:	fb04 3405 	mla	r4, r4, r5, r3
 8024af4:	9b02      	ldr	r3, [sp, #8]
 8024af6:	fb13 f202 	smulbb	r2, r3, r2
 8024afa:	b2a4      	uxth	r4, r4
 8024afc:	1c73      	adds	r3, r6, #1
 8024afe:	fb00 2005 	mla	r0, r0, r5, r2
 8024b02:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8024b06:	b280      	uxth	r0, r0
 8024b08:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024b0c:	1c42      	adds	r2, r0, #1
 8024b0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024b12:	1c62      	adds	r2, r4, #1
 8024b14:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024b18:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024b1c:	0952      	lsrs	r2, r2, #5
 8024b1e:	4303      	orrs	r3, r0
 8024b20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024b24:	4313      	orrs	r3, r2
 8024b26:	800b      	strh	r3, [r1, #0]
 8024b28:	b005      	add	sp, #20
 8024b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b2e:	bf00      	nop
 8024b30:	0803217a 	.word	0x0803217a
 8024b34:	0803273d 	.word	0x0803273d
 8024b38:	08032263 	.word	0x08032263

08024b3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b40:	ed2d 8b08 	vpush	{d8-d11}
 8024b44:	b09f      	sub	sp, #124	; 0x7c
 8024b46:	eeb0 aa40 	vmov.f32	s20, s0
 8024b4a:	eef0 9a60 	vmov.f32	s19, s1
 8024b4e:	921b      	str	r2, [sp, #108]	; 0x6c
 8024b50:	eeb0 9a41 	vmov.f32	s18, s2
 8024b54:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8024b56:	eeb0 8a62 	vmov.f32	s16, s5
 8024b5a:	9309      	str	r3, [sp, #36]	; 0x24
 8024b5c:	eef0 8a43 	vmov.f32	s17, s6
 8024b60:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8024b64:	eef0 ba44 	vmov.f32	s23, s8
 8024b68:	901d      	str	r0, [sp, #116]	; 0x74
 8024b6a:	eeb0 ba64 	vmov.f32	s22, s9
 8024b6e:	931c      	str	r3, [sp, #112]	; 0x70
 8024b70:	eef0 aa45 	vmov.f32	s21, s10
 8024b74:	6850      	ldr	r0, [r2, #4]
 8024b76:	9119      	str	r1, [sp, #100]	; 0x64
 8024b78:	6812      	ldr	r2, [r2, #0]
 8024b7a:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8024b7c:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8024b80:	fb00 1303 	mla	r3, r0, r3, r1
 8024b84:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024b88:	930c      	str	r3, [sp, #48]	; 0x30
 8024b8a:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8024b8c:	681b      	ldr	r3, [r3, #0]
 8024b8e:	9312      	str	r3, [sp, #72]	; 0x48
 8024b90:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8024b92:	685e      	ldr	r6, [r3, #4]
 8024b94:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8024b98:	3604      	adds	r6, #4
 8024b9a:	930d      	str	r3, [sp, #52]	; 0x34
 8024b9c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024b9e:	2b00      	cmp	r3, #0
 8024ba0:	dc03      	bgt.n	8024baa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8024ba2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024ba4:	2b00      	cmp	r3, #0
 8024ba6:	f340 838d 	ble.w	80252c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
 8024baa:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8024bac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024bb4:	1e48      	subs	r0, r1, #1
 8024bb6:	1e57      	subs	r7, r2, #1
 8024bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bba:	2b00      	cmp	r3, #0
 8024bbc:	f340 819a 	ble.w	8024ef4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b8>
 8024bc0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8024bc2:	142b      	asrs	r3, r5, #16
 8024bc4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024bc8:	d406      	bmi.n	8024bd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024bca:	4584      	cmp	ip, r0
 8024bcc:	da04      	bge.n	8024bd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024bce:	2b00      	cmp	r3, #0
 8024bd0:	db02      	blt.n	8024bd8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024bd2:	42bb      	cmp	r3, r7
 8024bd4:	f2c0 818f 	blt.w	8024ef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ba>
 8024bd8:	f11c 0c01 	adds.w	ip, ip, #1
 8024bdc:	f100 817d 	bmi.w	8024eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8024be0:	4561      	cmp	r1, ip
 8024be2:	f2c0 817a 	blt.w	8024eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8024be6:	3301      	adds	r3, #1
 8024be8:	f100 8177 	bmi.w	8024eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8024bec:	429a      	cmp	r2, r3
 8024bee:	f2c0 8174 	blt.w	8024eda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 8024bf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024bf4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8024bf6:	931a      	str	r3, [sp, #104]	; 0x68
 8024bf8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024bfa:	2b00      	cmp	r3, #0
 8024bfc:	f340 8199 	ble.w	8024f32 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f6>
 8024c00:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8024c02:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8024c06:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8024c0a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8024c0e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8024c10:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8024c14:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8024c16:	141b      	asrs	r3, r3, #16
 8024c18:	f100 81dc 	bmi.w	8024fd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8024c1c:	f100 38ff 	add.w	r8, r0, #4294967295
 8024c20:	4543      	cmp	r3, r8
 8024c22:	f280 81d7 	bge.w	8024fd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8024c26:	f1bc 0f00 	cmp.w	ip, #0
 8024c2a:	f2c0 81d3 	blt.w	8024fd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8024c2e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024c32:	45c4      	cmp	ip, r8
 8024c34:	f280 81ce 	bge.w	8024fd4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x498>
 8024c38:	b200      	sxth	r0, r0
 8024c3a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8024c3c:	fb0c 3300 	mla	r3, ip, r0, r3
 8024c40:	eb04 0803 	add.w	r8, r4, r3
 8024c44:	5ce3      	ldrb	r3, [r4, r3]
 8024c46:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8024c4a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8024c4e:	2a00      	cmp	r2, #0
 8024c50:	f000 81b5 	beq.w	8024fbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8024c54:	f898 c001 	ldrb.w	ip, [r8, #1]
 8024c58:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8024c5c:	940e      	str	r4, [sp, #56]	; 0x38
 8024c5e:	0e24      	lsrs	r4, r4, #24
 8024c60:	9415      	str	r4, [sp, #84]	; 0x54
 8024c62:	b179      	cbz	r1, 8024c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024c64:	eb08 0c00 	add.w	ip, r8, r0
 8024c68:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024c6c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024c70:	900a      	str	r0, [sp, #40]	; 0x28
 8024c72:	0e00      	lsrs	r0, r0, #24
 8024c74:	9013      	str	r0, [sp, #76]	; 0x4c
 8024c76:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8024c7a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024c7e:	900f      	str	r0, [sp, #60]	; 0x3c
 8024c80:	0e00      	lsrs	r0, r0, #24
 8024c82:	9016      	str	r0, [sp, #88]	; 0x58
 8024c84:	b292      	uxth	r2, r2
 8024c86:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024c88:	b289      	uxth	r1, r1
 8024c8a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024c8c:	fb02 f901 	mul.w	r9, r2, r1
 8024c90:	0112      	lsls	r2, r2, #4
 8024c92:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024c96:	eba2 0809 	sub.w	r8, r2, r9
 8024c9a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8024c9e:	b289      	uxth	r1, r1
 8024ca0:	fa1f f888 	uxth.w	r8, r8
 8024ca4:	1a52      	subs	r2, r2, r1
 8024ca6:	fb08 f000 	mul.w	r0, r8, r0
 8024caa:	b292      	uxth	r2, r2
 8024cac:	fb02 000e 	mla	r0, r2, lr, r0
 8024cb0:	fb01 0004 	mla	r0, r1, r4, r0
 8024cb4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024cb6:	fb09 0004 	mla	r0, r9, r4, r0
 8024cba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024cbe:	2800      	cmp	r0, #0
 8024cc0:	f000 8100 	beq.w	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8024cc4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024cc8:	d01b      	beq.n	8024d02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8024cca:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8024cce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024cd2:	fb0e fa0a 	mul.w	sl, lr, sl
 8024cd6:	fb0e fe03 	mul.w	lr, lr, r3
 8024cda:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024cde:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024ce2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024ce6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024cea:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024cee:	4453      	add	r3, sl
 8024cf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024cf4:	0a1b      	lsrs	r3, r3, #8
 8024cf6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024cfa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024cfe:	ea43 030c 	orr.w	r3, r3, ip
 8024d02:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d04:	2cff      	cmp	r4, #255	; 0xff
 8024d06:	d021      	beq.n	8024d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8024d08:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024d0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024d0e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d10:	fb04 fb0b 	mul.w	fp, r4, fp
 8024d14:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024d16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8024d1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d20:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024d24:	fb04 fa0a 	mul.w	sl, r4, sl
 8024d28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024d30:	44de      	add	lr, fp
 8024d32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024d36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024d3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d46:	ea4e 040a 	orr.w	r4, lr, sl
 8024d4a:	940e      	str	r4, [sp, #56]	; 0x38
 8024d4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d4e:	2cff      	cmp	r4, #255	; 0xff
 8024d50:	d021      	beq.n	8024d96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8024d52:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024d54:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024d58:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d5a:	fb04 fb0b 	mul.w	fp, r4, fp
 8024d5e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024d60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024d64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8024d66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d6a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024d6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8024d72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024d7a:	44de      	add	lr, fp
 8024d7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024d80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024d84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024d8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024d90:	ea4e 040a 	orr.w	r4, lr, sl
 8024d94:	940a      	str	r4, [sp, #40]	; 0x28
 8024d96:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024d98:	2cff      	cmp	r4, #255	; 0xff
 8024d9a:	d021      	beq.n	8024de0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8024d9c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024d9e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8024da2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024da4:	fb04 fb0b 	mul.w	fp, r4, fp
 8024da8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024daa:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8024dae:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8024db0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024db4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024db8:	fb04 fa0a 	mul.w	sl, r4, sl
 8024dbc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024dc0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024dc4:	44de      	add	lr, fp
 8024dc6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024dca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024dce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024dd6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024dda:	ea4e 040a 	orr.w	r4, lr, sl
 8024dde:	940f      	str	r4, [sp, #60]	; 0x3c
 8024de0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024de2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8024de6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024dea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024dee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8024df0:	fb08 fc0c 	mul.w	ip, r8, ip
 8024df4:	fb02 cc0e 	mla	ip, r2, lr, ip
 8024df8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024dfc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8024dfe:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024e02:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8024e06:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8024e08:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024e0c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8024e10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024e12:	fb08 f80e 	mul.w	r8, r8, lr
 8024e16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e1a:	f8b7 e000 	ldrh.w	lr, [r7]
 8024e1e:	fb02 8303 	mla	r3, r2, r3, r8
 8024e22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024e24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024e28:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8024e2c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024e2e:	fb01 330a 	mla	r3, r1, sl, r3
 8024e32:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8024e36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024e38:	fb09 3901 	mla	r9, r9, r1, r3
 8024e3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024e3e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024e42:	4343      	muls	r3, r0
 8024e44:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024e48:	1c58      	adds	r0, r3, #1
 8024e4a:	ea4c 0c09 	orr.w	ip, ip, r9
 8024e4e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024e52:	ea4f 232e 	mov.w	r3, lr, asr #8
 8024e56:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024e5a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024e5e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8024e62:	fb11 f102 	smulbb	r1, r1, r2
 8024e66:	b2c0      	uxtb	r0, r0
 8024e68:	ea4f 02ee 	mov.w	r2, lr, asr #3
 8024e6c:	fb03 1300 	mla	r3, r3, r0, r1
 8024e70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024e74:	b299      	uxth	r1, r3
 8024e76:	f3cc 2307 	ubfx	r3, ip, #8, #8
 8024e7a:	fa5f fc8c 	uxtb.w	ip, ip
 8024e7e:	fb13 f304 	smulbb	r3, r3, r4
 8024e82:	fb1c fc04 	smulbb	ip, ip, r4
 8024e86:	fb02 3200 	mla	r2, r2, r0, r3
 8024e8a:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 8024e8e:	b2db      	uxtb	r3, r3
 8024e90:	b292      	uxth	r2, r2
 8024e92:	fb03 cc00 	mla	ip, r3, r0, ip
 8024e96:	1c4b      	adds	r3, r1, #1
 8024e98:	fa1f fc8c 	uxth.w	ip, ip
 8024e9c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024ea0:	1c51      	adds	r1, r2, #1
 8024ea2:	f10c 0001 	add.w	r0, ip, #1
 8024ea6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024eaa:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8024eae:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8024eb2:	0952      	lsrs	r2, r2, #5
 8024eb4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8024eb8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ebc:	ea43 030c 	orr.w	r3, r3, ip
 8024ec0:	4313      	orrs	r3, r2
 8024ec2:	803b      	strh	r3, [r7, #0]
 8024ec4:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8024ec6:	3702      	adds	r7, #2
 8024ec8:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8024eca:	441a      	add	r2, r3
 8024ecc:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8024ece:	441d      	add	r5, r3
 8024ed0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8024ed2:	9231      	str	r2, [sp, #196]	; 0xc4
 8024ed4:	3b01      	subs	r3, #1
 8024ed6:	931a      	str	r3, [sp, #104]	; 0x68
 8024ed8:	e68e      	b.n	8024bf8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbc>
 8024eda:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8024edc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8024ede:	441c      	add	r4, r3
 8024ee0:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8024ee2:	441d      	add	r5, r3
 8024ee4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024ee6:	9431      	str	r4, [sp, #196]	; 0xc4
 8024ee8:	3b01      	subs	r3, #1
 8024eea:	9309      	str	r3, [sp, #36]	; 0x24
 8024eec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024eee:	3302      	adds	r3, #2
 8024ef0:	930c      	str	r3, [sp, #48]	; 0x30
 8024ef2:	e661      	b.n	8024bb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024ef4:	d024      	beq.n	8024f40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8024ef6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024ef8:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8024efa:	3b01      	subs	r3, #1
 8024efc:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8024efe:	fb00 4003 	mla	r0, r0, r3, r4
 8024f02:	1400      	asrs	r0, r0, #16
 8024f04:	f53f ae75 	bmi.w	8024bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f08:	3901      	subs	r1, #1
 8024f0a:	4288      	cmp	r0, r1
 8024f0c:	f6bf ae71 	bge.w	8024bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f10:	9934      	ldr	r1, [sp, #208]	; 0xd0
 8024f12:	fb01 5303 	mla	r3, r1, r3, r5
 8024f16:	141b      	asrs	r3, r3, #16
 8024f18:	f53f ae6b 	bmi.w	8024bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f1c:	3a01      	subs	r2, #1
 8024f1e:	4293      	cmp	r3, r2
 8024f20:	f6bf ae67 	bge.w	8024bf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8024f24:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024f28:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8024f2c:	f1bb 0f00 	cmp.w	fp, #0
 8024f30:	dc70      	bgt.n	8025014 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f34:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8024f38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024f3a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8024f3e:	930c      	str	r3, [sp, #48]	; 0x30
 8024f40:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024f42:	2b00      	cmp	r3, #0
 8024f44:	f340 81be 	ble.w	80252c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x788>
 8024f48:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024f4c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024f4e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8024f52:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8024f56:	eef0 6a48 	vmov.f32	s13, s16
 8024f5a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8024f5e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8024f62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f66:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8024f6a:	eef0 6a68 	vmov.f32	s13, s17
 8024f6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f72:	ee16 5a90 	vmov	r5, s13
 8024f76:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8024f7a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8024f7e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8024f82:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8024f86:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8024f8a:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8024f8e:	ee18 2a10 	vmov	r2, s16
 8024f92:	eeb0 8a47 	vmov.f32	s16, s14
 8024f96:	fb92 f3f3 	sdiv	r3, r2, r3
 8024f9a:	ee18 2a90 	vmov	r2, s17
 8024f9e:	9333      	str	r3, [sp, #204]	; 0xcc
 8024fa0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024fa2:	eef0 8a67 	vmov.f32	s17, s15
 8024fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024faa:	9334      	str	r3, [sp, #208]	; 0xd0
 8024fac:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8024fae:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8024fb0:	3b01      	subs	r3, #1
 8024fb2:	9319      	str	r3, [sp, #100]	; 0x64
 8024fb4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8024fb6:	bf08      	it	eq
 8024fb8:	4613      	moveq	r3, r2
 8024fba:	9309      	str	r3, [sp, #36]	; 0x24
 8024fbc:	e5ee      	b.n	8024b9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8024fbe:	2900      	cmp	r1, #0
 8024fc0:	f43f ae60 	beq.w	8024c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024fc4:	f818 0000 	ldrb.w	r0, [r8, r0]
 8024fc8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8024fcc:	900a      	str	r0, [sp, #40]	; 0x28
 8024fce:	0e00      	lsrs	r0, r0, #24
 8024fd0:	9013      	str	r0, [sp, #76]	; 0x4c
 8024fd2:	e657      	b.n	8024c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024fd4:	f113 0801 	adds.w	r8, r3, #1
 8024fd8:	f53f af74 	bmi.w	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8024fdc:	4540      	cmp	r0, r8
 8024fde:	f6ff af71 	blt.w	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8024fe2:	f11c 0801 	adds.w	r8, ip, #1
 8024fe6:	f53f af6d 	bmi.w	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8024fea:	45c6      	cmp	lr, r8
 8024fec:	f6ff af6a 	blt.w	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8024ff0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8024ff2:	b200      	sxth	r0, r0
 8024ff4:	9302      	str	r3, [sp, #8]
 8024ff6:	fa0f f38e 	sxth.w	r3, lr
 8024ffa:	9000      	str	r0, [sp, #0]
 8024ffc:	9301      	str	r3, [sp, #4]
 8024ffe:	4633      	mov	r3, r6
 8025000:	981d      	ldr	r0, [sp, #116]	; 0x74
 8025002:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8025006:	e9cd c203 	strd	ip, r2, [sp, #12]
 802500a:	4639      	mov	r1, r7
 802500c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802500e:	f7ff fc2b 	bl	8024868 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8025012:	e757      	b.n	8024ec4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8025014:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8025016:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802501a:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 802501c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025020:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8025022:	1427      	asrs	r7, r4, #16
 8025024:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025026:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802502a:	142b      	asrs	r3, r5, #16
 802502c:	fb01 7303 	mla	r3, r1, r3, r7
 8025030:	18e7      	adds	r7, r4, r3
 8025032:	5ce3      	ldrb	r3, [r4, r3]
 8025034:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8025038:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802503c:	2a00      	cmp	r2, #0
 802503e:	f000 8137 	beq.w	80252b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 8025042:	f897 e001 	ldrb.w	lr, [r7, #1]
 8025046:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802504a:	9410      	str	r4, [sp, #64]	; 0x40
 802504c:	0e24      	lsrs	r4, r4, #24
 802504e:	9417      	str	r4, [sp, #92]	; 0x5c
 8025050:	b170      	cbz	r0, 8025070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8025052:	eb07 0e01 	add.w	lr, r7, r1
 8025056:	5c79      	ldrb	r1, [r7, r1]
 8025058:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802505c:	910b      	str	r1, [sp, #44]	; 0x2c
 802505e:	0e09      	lsrs	r1, r1, #24
 8025060:	9114      	str	r1, [sp, #80]	; 0x50
 8025062:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8025066:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802506a:	9111      	str	r1, [sp, #68]	; 0x44
 802506c:	0e09      	lsrs	r1, r1, #24
 802506e:	9118      	str	r1, [sp, #96]	; 0x60
 8025070:	b292      	uxth	r2, r2
 8025072:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8025074:	b280      	uxth	r0, r0
 8025076:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025078:	fb02 f800 	mul.w	r8, r2, r0
 802507c:	0112      	lsls	r2, r2, #4
 802507e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025082:	eba2 0e08 	sub.w	lr, r2, r8
 8025086:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802508a:	b280      	uxth	r0, r0
 802508c:	fa1f fe8e 	uxth.w	lr, lr
 8025090:	1a12      	subs	r2, r2, r0
 8025092:	fb0e f101 	mul.w	r1, lr, r1
 8025096:	b292      	uxth	r2, r2
 8025098:	fb02 110c 	mla	r1, r2, ip, r1
 802509c:	fb00 1104 	mla	r1, r0, r4, r1
 80250a0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80250a2:	fb08 1104 	mla	r1, r8, r4, r1
 80250a6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80250aa:	2900      	cmp	r1, #0
 80250ac:	f000 80f5 	beq.w	802529a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75e>
 80250b0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80250b4:	d019      	beq.n	80250ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ae>
 80250b6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80250ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80250be:	fb0c fa0a 	mul.w	sl, ip, sl
 80250c2:	fb0c fc03 	mul.w	ip, ip, r3
 80250c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80250ca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80250ce:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80250d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80250d6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80250da:	4453      	add	r3, sl
 80250dc:	0a3f      	lsrs	r7, r7, #8
 80250de:	0a1b      	lsrs	r3, r3, #8
 80250e0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80250e4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80250e8:	433b      	orrs	r3, r7
 80250ea:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80250ec:	2cff      	cmp	r4, #255	; 0xff
 80250ee:	d020      	beq.n	8025132 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5f6>
 80250f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80250f6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80250f8:	4367      	muls	r7, r4
 80250fa:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80250fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025100:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025104:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8025106:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802510a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802510e:	fb04 fa0a 	mul.w	sl, r4, sl
 8025112:	44bc      	add	ip, r7
 8025114:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025118:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802511c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025120:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025124:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025128:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802512c:	ea4c 040a 	orr.w	r4, ip, sl
 8025130:	9410      	str	r4, [sp, #64]	; 0x40
 8025132:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025134:	2cff      	cmp	r4, #255	; 0xff
 8025136:	d020      	beq.n	802517a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x63e>
 8025138:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802513a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802513e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025140:	4367      	muls	r7, r4
 8025142:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025144:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025148:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802514c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802514e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025152:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025156:	fb04 fa0a 	mul.w	sl, r4, sl
 802515a:	44bc      	add	ip, r7
 802515c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025164:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025168:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802516c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025170:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025174:	ea4c 040a 	orr.w	r4, ip, sl
 8025178:	940b      	str	r4, [sp, #44]	; 0x2c
 802517a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802517c:	2cff      	cmp	r4, #255	; 0xff
 802517e:	d020      	beq.n	80251c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x686>
 8025180:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025182:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025186:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8025188:	4367      	muls	r7, r4
 802518a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802518c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025190:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025194:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8025196:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802519a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802519e:	fb04 fa0a 	mul.w	sl, r4, sl
 80251a2:	44bc      	add	ip, r7
 80251a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80251a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80251b0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80251b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80251bc:	ea4c 040a 	orr.w	r4, ip, sl
 80251c0:	9411      	str	r4, [sp, #68]	; 0x44
 80251c2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80251c4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80251c8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80251cc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80251d0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80251d2:	fb0e f707 	mul.w	r7, lr, r7
 80251d6:	fb02 770c 	mla	r7, r2, ip, r7
 80251da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80251de:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80251e0:	fb00 770c 	mla	r7, r0, ip, r7
 80251e4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80251e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80251ea:	fb08 770c 	mla	r7, r8, ip, r7
 80251ee:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80251f2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80251f4:	fb0e fe0c 	mul.w	lr, lr, ip
 80251f8:	0a3f      	lsrs	r7, r7, #8
 80251fa:	fb02 e303 	mla	r3, r2, r3, lr
 80251fe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8025200:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025204:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8025208:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802520a:	fb00 330a 	mla	r3, r0, sl, r3
 802520e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8025212:	f8b9 0000 	ldrh.w	r0, [r9]
 8025216:	fb08 3c0c 	mla	ip, r8, ip, r3
 802521a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802521c:	1202      	asrs	r2, r0, #8
 802521e:	434b      	muls	r3, r1
 8025220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025224:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8025228:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802522c:	1c59      	adds	r1, r3, #1
 802522e:	ea47 070c 	orr.w	r7, r7, ip
 8025232:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025236:	0c3b      	lsrs	r3, r7, #16
 8025238:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802523c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025240:	b2ff      	uxtb	r7, r7
 8025242:	fb13 f304 	smulbb	r3, r3, r4
 8025246:	b2c9      	uxtb	r1, r1
 8025248:	fb1c fc04 	smulbb	ip, ip, r4
 802524c:	fb02 3201 	mla	r2, r2, r1, r3
 8025250:	10c3      	asrs	r3, r0, #3
 8025252:	fb17 f704 	smulbb	r7, r7, r4
 8025256:	00c0      	lsls	r0, r0, #3
 8025258:	b292      	uxth	r2, r2
 802525a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802525e:	b2c0      	uxtb	r0, r0
 8025260:	fb03 c301 	mla	r3, r3, r1, ip
 8025264:	f102 0c01 	add.w	ip, r2, #1
 8025268:	fb00 7001 	mla	r0, r0, r1, r7
 802526c:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8025270:	b280      	uxth	r0, r0
 8025272:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8025276:	b29b      	uxth	r3, r3
 8025278:	1c42      	adds	r2, r0, #1
 802527a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802527e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025282:	ea4c 0200 	orr.w	r2, ip, r0
 8025286:	f103 0c01 	add.w	ip, r3, #1
 802528a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802528e:	095b      	lsrs	r3, r3, #5
 8025290:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025294:	431a      	orrs	r2, r3
 8025296:	f8a9 2000 	strh.w	r2, [r9]
 802529a:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 802529c:	f109 0902 	add.w	r9, r9, #2
 80252a0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80252a2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80252a6:	441a      	add	r2, r3
 80252a8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80252aa:	9231      	str	r2, [sp, #196]	; 0xc4
 80252ac:	441d      	add	r5, r3
 80252ae:	e63d      	b.n	8024f2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 80252b0:	2800      	cmp	r0, #0
 80252b2:	f43f aedd 	beq.w	8025070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80252b6:	5c79      	ldrb	r1, [r7, r1]
 80252b8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80252bc:	910b      	str	r1, [sp, #44]	; 0x2c
 80252be:	0e09      	lsrs	r1, r1, #24
 80252c0:	9114      	str	r1, [sp, #80]	; 0x50
 80252c2:	e6d5      	b.n	8025070 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 80252c4:	b01f      	add	sp, #124	; 0x7c
 80252c6:	ecbd 8b08 	vpop	{d8-d11}
 80252ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080252d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80252d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252d4:	880e      	ldrh	r6, [r1, #0]
 80252d6:	b085      	sub	sp, #20
 80252d8:	4691      	mov	r9, r2
 80252da:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80252de:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80252e2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80252e6:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80252ea:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80252ee:	00f6      	lsls	r6, r6, #3
 80252f0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80252f4:	9200      	str	r2, [sp, #0]
 80252f6:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80252fa:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 80252fe:	9201      	str	r2, [sp, #4]
 8025300:	b2f2      	uxtb	r2, r6
 8025302:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8025306:	9202      	str	r2, [sp, #8]
 8025308:	fb04 560c 	mla	r6, r4, ip, r5
 802530c:	2c00      	cmp	r4, #0
 802530e:	eb09 0e06 	add.w	lr, r9, r6
 8025312:	db3e      	blt.n	8025392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8025314:	45a0      	cmp	r8, r4
 8025316:	dd3c      	ble.n	8025392 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc2>
 8025318:	2d00      	cmp	r5, #0
 802531a:	db38      	blt.n	802538e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 802531c:	45ac      	cmp	ip, r5
 802531e:	dd36      	ble.n	802538e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8025320:	f819 2006 	ldrb.w	r2, [r9, r6]
 8025324:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8025328:	1c6e      	adds	r6, r5, #1
 802532a:	d435      	bmi.n	8025398 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 802532c:	45b4      	cmp	ip, r6
 802532e:	dd33      	ble.n	8025398 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc8>
 8025330:	b3a0      	cbz	r0, 802539c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8025332:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8025336:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 802533a:	3401      	adds	r4, #1
 802533c:	d432      	bmi.n	80253a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 802533e:	45a0      	cmp	r8, r4
 8025340:	dd30      	ble.n	80253a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd4>
 8025342:	b397      	cbz	r7, 80253aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8025344:	2d00      	cmp	r5, #0
 8025346:	db2b      	blt.n	80253a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8025348:	45ac      	cmp	ip, r5
 802534a:	dd29      	ble.n	80253a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 802534c:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8025350:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8025354:	3501      	adds	r5, #1
 8025356:	d42b      	bmi.n	80253b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 8025358:	45ac      	cmp	ip, r5
 802535a:	dd29      	ble.n	80253b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe0>
 802535c:	b350      	cbz	r0, 80253b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe4>
 802535e:	44f4      	add	ip, lr
 8025360:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8025364:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8025368:	280f      	cmp	r0, #15
 802536a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 802536e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8025372:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025376:	ea4f 6813 	mov.w	r8, r3, lsr #24
 802537a:	d801      	bhi.n	8025380 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb0>
 802537c:	2f0f      	cmp	r7, #15
 802537e:	d91b      	bls.n	80253b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe8>
 8025380:	4b7e      	ldr	r3, [pc, #504]	; (802557c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8025382:	f240 210d 	movw	r1, #525	; 0x20d
 8025386:	4a7e      	ldr	r2, [pc, #504]	; (8025580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8025388:	487e      	ldr	r0, [pc, #504]	; (8025584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b4>)
 802538a:	f006 fdad 	bl	802bee8 <__assert_func>
 802538e:	2200      	movs	r2, #0
 8025390:	e7ca      	b.n	8025328 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 8025392:	2600      	movs	r6, #0
 8025394:	4632      	mov	r2, r6
 8025396:	e7d0      	b.n	802533a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8025398:	2600      	movs	r6, #0
 802539a:	e7ce      	b.n	802533a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 802539c:	4606      	mov	r6, r0
 802539e:	e7cc      	b.n	802533a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 80253a0:	2400      	movs	r4, #0
 80253a2:	e7d7      	b.n	8025354 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x84>
 80253a4:	2300      	movs	r3, #0
 80253a6:	461c      	mov	r4, r3
 80253a8:	e7de      	b.n	8025368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80253aa:	463b      	mov	r3, r7
 80253ac:	463c      	mov	r4, r7
 80253ae:	e7db      	b.n	8025368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80253b0:	2300      	movs	r3, #0
 80253b2:	e7d9      	b.n	8025368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80253b4:	4603      	mov	r3, r0
 80253b6:	e7d7      	b.n	8025368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x98>
 80253b8:	b280      	uxth	r0, r0
 80253ba:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80253be:	b2bf      	uxth	r7, r7
 80253c0:	fb00 fe07 	mul.w	lr, r0, r7
 80253c4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80253c8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80253cc:	eba0 0c0e 	sub.w	ip, r0, lr
 80253d0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 80253d4:	b2bf      	uxth	r7, r7
 80253d6:	fa1f fc8c 	uxth.w	ip, ip
 80253da:	eba5 0507 	sub.w	r5, r5, r7
 80253de:	fb0c f00a 	mul.w	r0, ip, sl
 80253e2:	b2ad      	uxth	r5, r5
 80253e4:	fb05 000b 	mla	r0, r5, fp, r0
 80253e8:	fb07 0009 	mla	r0, r7, r9, r0
 80253ec:	fb0e 0008 	mla	r0, lr, r8, r0
 80253f0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80253f4:	9003      	str	r0, [sp, #12]
 80253f6:	d018      	beq.n	802542a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x15a>
 80253f8:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80253fc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025400:	fb0b f000 	mul.w	r0, fp, r0
 8025404:	fb0b fb02 	mul.w	fp, fp, r2
 8025408:	0a02      	lsrs	r2, r0, #8
 802540a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802540e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025412:	4402      	add	r2, r0
 8025414:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8025418:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802541c:	0a12      	lsrs	r2, r2, #8
 802541e:	0a00      	lsrs	r0, r0, #8
 8025420:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025424:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8025428:	4302      	orrs	r2, r0
 802542a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802542e:	d019      	beq.n	8025464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x194>
 8025430:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8025434:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8025438:	fb0a fb0b 	mul.w	fp, sl, fp
 802543c:	fb0a fa06 	mul.w	sl, sl, r6
 8025440:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8025444:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025448:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 802544c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025450:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8025454:	445e      	add	r6, fp
 8025456:	0a00      	lsrs	r0, r0, #8
 8025458:	0a36      	lsrs	r6, r6, #8
 802545a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802545e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8025462:	4306      	orrs	r6, r0
 8025464:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8025468:	d019      	beq.n	802549e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1ce>
 802546a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 802546e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8025472:	fb09 fa0a 	mul.w	sl, r9, sl
 8025476:	fb09 f904 	mul.w	r9, r9, r4
 802547a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 802547e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025482:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8025486:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802548a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 802548e:	4454      	add	r4, sl
 8025490:	0a00      	lsrs	r0, r0, #8
 8025492:	0a24      	lsrs	r4, r4, #8
 8025494:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8025498:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802549c:	4304      	orrs	r4, r0
 802549e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80254a2:	d019      	beq.n	80254d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x208>
 80254a4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80254a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80254ac:	fb08 f909 	mul.w	r9, r8, r9
 80254b0:	fb08 f803 	mul.w	r8, r8, r3
 80254b4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80254b8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80254bc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80254c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254c4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80254c8:	444b      	add	r3, r9
 80254ca:	0a00      	lsrs	r0, r0, #8
 80254cc:	0a1b      	lsrs	r3, r3, #8
 80254ce:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80254d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80254d6:	4303      	orrs	r3, r0
 80254d8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80254dc:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80254e0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80254e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80254e8:	fb0c f808 	mul.w	r8, ip, r8
 80254ec:	fb0c f606 	mul.w	r6, ip, r6
 80254f0:	fb05 8800 	mla	r8, r5, r0, r8
 80254f4:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 80254f8:	fb05 6202 	mla	r2, r5, r2, r6
 80254fc:	9d01      	ldr	r5, [sp, #4]
 80254fe:	fb07 8800 	mla	r8, r7, r0, r8
 8025502:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8025506:	fb0e 8000 	mla	r0, lr, r0, r8
 802550a:	0a00      	lsrs	r0, r0, #8
 802550c:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8025510:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8025514:	9c02      	ldr	r4, [sp, #8]
 8025516:	fb07 2700 	mla	r7, r7, r0, r2
 802551a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802551e:	9b03      	ldr	r3, [sp, #12]
 8025520:	fb0e 7000 	mla	r0, lr, r0, r7
 8025524:	43da      	mvns	r2, r3
 8025526:	9b00      	ldr	r3, [sp, #0]
 8025528:	0a00      	lsrs	r0, r0, #8
 802552a:	b2d2      	uxtb	r2, r2
 802552c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8025530:	4353      	muls	r3, r2
 8025532:	4354      	muls	r4, r2
 8025534:	ea48 0000 	orr.w	r0, r8, r0
 8025538:	4355      	muls	r5, r2
 802553a:	4622      	mov	r2, r4
 802553c:	1c5c      	adds	r4, r3, #1
 802553e:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8025542:	0c03      	lsrs	r3, r0, #16
 8025544:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025548:	4b0f      	ldr	r3, [pc, #60]	; (8025588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b8>)
 802554a:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 802554e:	1c54      	adds	r4, r2, #1
 8025550:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8025554:	b2c2      	uxtb	r2, r0
 8025556:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802555a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802555e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8025562:	1c6a      	adds	r2, r5, #1
 8025564:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8025568:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802556c:	00c0      	lsls	r0, r0, #3
 802556e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025572:	4318      	orrs	r0, r3
 8025574:	8008      	strh	r0, [r1, #0]
 8025576:	b005      	add	sp, #20
 8025578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802557c:	0803217a 	.word	0x0803217a
 8025580:	0803273d 	.word	0x0803273d
 8025584:	08032263 	.word	0x08032263
 8025588:	fffff800 	.word	0xfffff800

0802558c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802558c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025590:	ed2d 8b08 	vpush	{d8-d11}
 8025594:	b09b      	sub	sp, #108	; 0x6c
 8025596:	eeb0 aa40 	vmov.f32	s20, s0
 802559a:	eef0 9a60 	vmov.f32	s19, s1
 802559e:	9218      	str	r2, [sp, #96]	; 0x60
 80255a0:	eeb0 9a41 	vmov.f32	s18, s2
 80255a4:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 80255a6:	eeb0 8a62 	vmov.f32	s16, s5
 80255aa:	9019      	str	r0, [sp, #100]	; 0x64
 80255ac:	eef0 8a43 	vmov.f32	s17, s6
 80255b0:	6850      	ldr	r0, [r2, #4]
 80255b2:	eef0 ba44 	vmov.f32	s23, s8
 80255b6:	9116      	str	r1, [sp, #88]	; 0x58
 80255b8:	eeb0 ba64 	vmov.f32	s22, s9
 80255bc:	9307      	str	r3, [sp, #28]
 80255be:	eef0 aa45 	vmov.f32	s21, s10
 80255c2:	6812      	ldr	r2, [r2, #0]
 80255c4:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 80255c6:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 80255ca:	fb00 1303 	mla	r3, r0, r3, r1
 80255ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80255d2:	930a      	str	r3, [sp, #40]	; 0x28
 80255d4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80255d6:	681b      	ldr	r3, [r3, #0]
 80255d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80255da:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80255dc:	685e      	ldr	r6, [r3, #4]
 80255de:	3604      	adds	r6, #4
 80255e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80255e2:	2b00      	cmp	r3, #0
 80255e4:	dc03      	bgt.n	80255ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80255e6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255e8:	2b00      	cmp	r3, #0
 80255ea:	f340 836f 	ble.w	8025ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
 80255ee:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80255f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80255f4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80255f8:	1e48      	subs	r0, r1, #1
 80255fa:	1e57      	subs	r7, r2, #1
 80255fc:	9b07      	ldr	r3, [sp, #28]
 80255fe:	2b00      	cmp	r3, #0
 8025600:	f340 8188 	ble.w	8025914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8025604:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8025606:	142b      	asrs	r3, r5, #16
 8025608:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802560c:	d406      	bmi.n	802561c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802560e:	4584      	cmp	ip, r0
 8025610:	da04      	bge.n	802561c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025612:	2b00      	cmp	r3, #0
 8025614:	db02      	blt.n	802561c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8025616:	42bb      	cmp	r3, r7
 8025618:	f2c0 817d 	blt.w	8025916 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802561c:	f11c 0c01 	adds.w	ip, ip, #1
 8025620:	f100 816b 	bmi.w	80258fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8025624:	4561      	cmp	r1, ip
 8025626:	f2c0 8168 	blt.w	80258fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 802562a:	3301      	adds	r3, #1
 802562c:	f100 8165 	bmi.w	80258fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8025630:	429a      	cmp	r2, r3
 8025632:	f2c0 8162 	blt.w	80258fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8025636:	9b07      	ldr	r3, [sp, #28]
 8025638:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802563a:	9317      	str	r3, [sp, #92]	; 0x5c
 802563c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802563e:	2b00      	cmp	r3, #0
 8025640:	f340 8187 	ble.w	8025952 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8025644:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8025646:	ea4f 4c25 	mov.w	ip, r5, asr #16
 802564a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802564e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025652:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8025654:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8025658:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 802565a:	141b      	asrs	r3, r3, #16
 802565c:	f100 81ca 	bmi.w	80259f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8025660:	f101 38ff 	add.w	r8, r1, #4294967295
 8025664:	4543      	cmp	r3, r8
 8025666:	f280 81c5 	bge.w	80259f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 802566a:	f1bc 0f00 	cmp.w	ip, #0
 802566e:	f2c0 81c1 	blt.w	80259f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8025672:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025676:	45c4      	cmp	ip, r8
 8025678:	f280 81bc 	bge.w	80259f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 802567c:	b209      	sxth	r1, r1
 802567e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025680:	fb0c 3301 	mla	r3, ip, r1, r3
 8025684:	eb04 0803 	add.w	r8, r4, r3
 8025688:	5ce3      	ldrb	r3, [r4, r3]
 802568a:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802568e:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8025692:	2a00      	cmp	r2, #0
 8025694:	f000 81a3 	beq.w	80259de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8025698:	f898 c001 	ldrb.w	ip, [r8, #1]
 802569c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80256a0:	940b      	str	r4, [sp, #44]	; 0x2c
 80256a2:	0e24      	lsrs	r4, r4, #24
 80256a4:	9412      	str	r4, [sp, #72]	; 0x48
 80256a6:	b178      	cbz	r0, 80256c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 80256a8:	eb08 0c01 	add.w	ip, r8, r1
 80256ac:	f818 1001 	ldrb.w	r1, [r8, r1]
 80256b0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80256b4:	9108      	str	r1, [sp, #32]
 80256b6:	0e09      	lsrs	r1, r1, #24
 80256b8:	9110      	str	r1, [sp, #64]	; 0x40
 80256ba:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80256be:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80256c2:	910c      	str	r1, [sp, #48]	; 0x30
 80256c4:	0e09      	lsrs	r1, r1, #24
 80256c6:	9113      	str	r1, [sp, #76]	; 0x4c
 80256c8:	b292      	uxth	r2, r2
 80256ca:	9912      	ldr	r1, [sp, #72]	; 0x48
 80256cc:	b280      	uxth	r0, r0
 80256ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80256d0:	fb02 f900 	mul.w	r9, r2, r0
 80256d4:	0112      	lsls	r2, r2, #4
 80256d6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80256da:	eba2 0809 	sub.w	r8, r2, r9
 80256de:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80256e2:	b280      	uxth	r0, r0
 80256e4:	fa1f f888 	uxth.w	r8, r8
 80256e8:	1a12      	subs	r2, r2, r0
 80256ea:	fb08 f101 	mul.w	r1, r8, r1
 80256ee:	b292      	uxth	r2, r2
 80256f0:	fb02 110e 	mla	r1, r2, lr, r1
 80256f4:	fb00 1104 	mla	r1, r0, r4, r1
 80256f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80256fa:	fb09 1104 	mla	r1, r9, r4, r1
 80256fe:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025702:	2900      	cmp	r1, #0
 8025704:	f000 80ee 	beq.w	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025708:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802570c:	d01b      	beq.n	8025746 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802570e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025712:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025716:	fb0e fa0a 	mul.w	sl, lr, sl
 802571a:	fb0e fe03 	mul.w	lr, lr, r3
 802571e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025722:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025726:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802572a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802572e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025732:	4453      	add	r3, sl
 8025734:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025738:	0a1b      	lsrs	r3, r3, #8
 802573a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802573e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025742:	ea43 030c 	orr.w	r3, r3, ip
 8025746:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025748:	2cff      	cmp	r4, #255	; 0xff
 802574a:	d021      	beq.n	8025790 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802574c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802574e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8025752:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025754:	fb04 fb0b 	mul.w	fp, r4, fp
 8025758:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802575a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802575e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025760:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025764:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025768:	fb04 fa0a 	mul.w	sl, r4, sl
 802576c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025770:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025774:	44de      	add	lr, fp
 8025776:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802577a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802577e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025782:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025786:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802578a:	ea4e 040a 	orr.w	r4, lr, sl
 802578e:	940b      	str	r4, [sp, #44]	; 0x2c
 8025790:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8025792:	2cff      	cmp	r4, #255	; 0xff
 8025794:	d021      	beq.n	80257da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8025796:	9c08      	ldr	r4, [sp, #32]
 8025798:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802579c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802579e:	fb04 fb0b 	mul.w	fp, r4, fp
 80257a2:	9c08      	ldr	r4, [sp, #32]
 80257a4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80257a8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80257aa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80257ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80257b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80257b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80257ba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80257be:	44de      	add	lr, fp
 80257c0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80257c4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80257c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80257cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80257d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80257d4:	ea4e 040a 	orr.w	r4, lr, sl
 80257d8:	9408      	str	r4, [sp, #32]
 80257da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80257dc:	2cff      	cmp	r4, #255	; 0xff
 80257de:	d021      	beq.n	8025824 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 80257e0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80257e2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80257e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80257e8:	fb04 fb0b 	mul.w	fp, r4, fp
 80257ec:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80257ee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80257f2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80257f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80257f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80257fc:	fb04 fa0a 	mul.w	sl, r4, sl
 8025800:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025804:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025808:	44de      	add	lr, fp
 802580a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802580e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025812:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025816:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802581a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802581e:	ea4e 040a 	orr.w	r4, lr, sl
 8025822:	940c      	str	r4, [sp, #48]	; 0x30
 8025824:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025826:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802582a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802582e:	43c9      	mvns	r1, r1
 8025830:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025834:	9c08      	ldr	r4, [sp, #32]
 8025836:	b2c9      	uxtb	r1, r1
 8025838:	fb08 fc0c 	mul.w	ip, r8, ip
 802583c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8025840:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8025844:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8025846:	fb00 cc0e 	mla	ip, r0, lr, ip
 802584a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802584e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8025850:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025854:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8025858:	fb08 f80e 	mul.w	r8, r8, lr
 802585c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025860:	fb02 8303 	mla	r3, r2, r3, r8
 8025864:	9a08      	ldr	r2, [sp, #32]
 8025866:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802586a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802586e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025870:	fb00 330a 	mla	r3, r0, sl, r3
 8025874:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8025878:	fb09 3900 	mla	r9, r9, r0, r3
 802587c:	883b      	ldrh	r3, [r7, #0]
 802587e:	1218      	asrs	r0, r3, #8
 8025880:	10da      	asrs	r2, r3, #3
 8025882:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025886:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802588a:	00db      	lsls	r3, r3, #3
 802588c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025890:	4348      	muls	r0, r1
 8025892:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025896:	b2db      	uxtb	r3, r3
 8025898:	434a      	muls	r2, r1
 802589a:	ea4c 0c09 	orr.w	ip, ip, r9
 802589e:	434b      	muls	r3, r1
 80258a0:	1c41      	adds	r1, r0, #1
 80258a2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80258a6:	ea4f 401c 	mov.w	r0, ip, lsr #16
 80258aa:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 80258ae:	4960      	ldr	r1, [pc, #384]	; (8025a30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>)
 80258b0:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 80258b4:	1c59      	adds	r1, r3, #1
 80258b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80258ba:	fa5f f38c 	uxtb.w	r3, ip
 80258be:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80258c2:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80258c6:	1c51      	adds	r1, r2, #1
 80258c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80258cc:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 80258d0:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80258d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80258d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80258dc:	ea43 0c0c 	orr.w	ip, r3, ip
 80258e0:	f8a7 c000 	strh.w	ip, [r7]
 80258e4:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80258e6:	3702      	adds	r7, #2
 80258e8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80258ea:	441a      	add	r2, r3
 80258ec:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80258ee:	441d      	add	r5, r3
 80258f0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80258f2:	922d      	str	r2, [sp, #180]	; 0xb4
 80258f4:	3b01      	subs	r3, #1
 80258f6:	9317      	str	r3, [sp, #92]	; 0x5c
 80258f8:	e6a0      	b.n	802563c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80258fa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80258fc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80258fe:	441c      	add	r4, r3
 8025900:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8025902:	441d      	add	r5, r3
 8025904:	9b07      	ldr	r3, [sp, #28]
 8025906:	942d      	str	r4, [sp, #180]	; 0xb4
 8025908:	3b01      	subs	r3, #1
 802590a:	9307      	str	r3, [sp, #28]
 802590c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802590e:	3302      	adds	r3, #2
 8025910:	930a      	str	r3, [sp, #40]	; 0x28
 8025912:	e673      	b.n	80255fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8025914:	d024      	beq.n	8025960 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8025916:	9b07      	ldr	r3, [sp, #28]
 8025918:	982f      	ldr	r0, [sp, #188]	; 0xbc
 802591a:	3b01      	subs	r3, #1
 802591c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 802591e:	fb00 4003 	mla	r0, r0, r3, r4
 8025922:	1400      	asrs	r0, r0, #16
 8025924:	f53f ae87 	bmi.w	8025636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8025928:	3901      	subs	r1, #1
 802592a:	4288      	cmp	r0, r1
 802592c:	f6bf ae83 	bge.w	8025636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8025930:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8025932:	fb01 5303 	mla	r3, r1, r3, r5
 8025936:	141b      	asrs	r3, r3, #16
 8025938:	f53f ae7d 	bmi.w	8025636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802593c:	3a01      	subs	r2, #1
 802593e:	4293      	cmp	r3, r2
 8025940:	f6bf ae79 	bge.w	8025636 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8025944:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025948:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802594c:	f1bb 0f00 	cmp.w	fp, #0
 8025950:	dc70      	bgt.n	8025a34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8025952:	9b07      	ldr	r3, [sp, #28]
 8025954:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8025958:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802595a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802595e:	930a      	str	r3, [sp, #40]	; 0x28
 8025960:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025962:	2b00      	cmp	r3, #0
 8025964:	f340 81b2 	ble.w	8025ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x740>
 8025968:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802596c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802596e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8025972:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8025976:	eef0 6a48 	vmov.f32	s13, s16
 802597a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802597e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8025982:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025986:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 802598a:	eef0 6a68 	vmov.f32	s13, s17
 802598e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025992:	ee16 5a90 	vmov	r5, s13
 8025996:	ee29 7aa7 	vmul.f32	s14, s19, s15
 802599a:	ee69 7a27 	vmul.f32	s15, s18, s15
 802599e:	ee37 8a48 	vsub.f32	s16, s14, s16
 80259a2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80259a6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80259aa:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80259ae:	ee18 2a10 	vmov	r2, s16
 80259b2:	eeb0 8a47 	vmov.f32	s16, s14
 80259b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80259ba:	ee18 2a90 	vmov	r2, s17
 80259be:	932f      	str	r3, [sp, #188]	; 0xbc
 80259c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80259c2:	eef0 8a67 	vmov.f32	s17, s15
 80259c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80259ca:	9330      	str	r3, [sp, #192]	; 0xc0
 80259cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80259ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80259d0:	3b01      	subs	r3, #1
 80259d2:	9316      	str	r3, [sp, #88]	; 0x58
 80259d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80259d6:	bf08      	it	eq
 80259d8:	4613      	moveq	r3, r2
 80259da:	9307      	str	r3, [sp, #28]
 80259dc:	e600      	b.n	80255e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80259de:	2800      	cmp	r0, #0
 80259e0:	f43f ae72 	beq.w	80256c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 80259e4:	f818 1001 	ldrb.w	r1, [r8, r1]
 80259e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80259ec:	9108      	str	r1, [sp, #32]
 80259ee:	0e09      	lsrs	r1, r1, #24
 80259f0:	9110      	str	r1, [sp, #64]	; 0x40
 80259f2:	e669      	b.n	80256c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13c>
 80259f4:	f113 0801 	adds.w	r8, r3, #1
 80259f8:	f53f af74 	bmi.w	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80259fc:	4541      	cmp	r1, r8
 80259fe:	f6ff af71 	blt.w	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025a02:	f11c 0801 	adds.w	r8, ip, #1
 8025a06:	f53f af6d 	bmi.w	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025a0a:	45c6      	cmp	lr, r8
 8025a0c:	f6ff af6a 	blt.w	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025a10:	b209      	sxth	r1, r1
 8025a12:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8025a16:	fa0f f38e 	sxth.w	r3, lr
 8025a1a:	9100      	str	r1, [sp, #0]
 8025a1c:	4639      	mov	r1, r7
 8025a1e:	9301      	str	r3, [sp, #4]
 8025a20:	4633      	mov	r3, r6
 8025a22:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8025a26:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025a28:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025a2a:	f7ff fc51 	bl	80252d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8025a2e:	e759      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025a30:	fffff800 	.word	0xfffff800
 8025a34:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8025a36:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8025a3a:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8025a3c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8025a40:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8025a42:	1427      	asrs	r7, r4, #16
 8025a44:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8025a46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025a4a:	142b      	asrs	r3, r5, #16
 8025a4c:	fb01 7303 	mla	r3, r1, r3, r7
 8025a50:	18e7      	adds	r7, r4, r3
 8025a52:	5ce3      	ldrb	r3, [r4, r3]
 8025a54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8025a58:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025a5c:	2a00      	cmp	r2, #0
 8025a5e:	f000 812b 	beq.w	8025cb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
 8025a62:	f897 e001 	ldrb.w	lr, [r7, #1]
 8025a66:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8025a6a:	940d      	str	r4, [sp, #52]	; 0x34
 8025a6c:	0e24      	lsrs	r4, r4, #24
 8025a6e:	9414      	str	r4, [sp, #80]	; 0x50
 8025a70:	b170      	cbz	r0, 8025a90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8025a72:	eb07 0e01 	add.w	lr, r7, r1
 8025a76:	5c79      	ldrb	r1, [r7, r1]
 8025a78:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025a7c:	9109      	str	r1, [sp, #36]	; 0x24
 8025a7e:	0e09      	lsrs	r1, r1, #24
 8025a80:	9111      	str	r1, [sp, #68]	; 0x44
 8025a82:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8025a86:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025a8a:	910e      	str	r1, [sp, #56]	; 0x38
 8025a8c:	0e09      	lsrs	r1, r1, #24
 8025a8e:	9115      	str	r1, [sp, #84]	; 0x54
 8025a90:	b292      	uxth	r2, r2
 8025a92:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025a94:	b280      	uxth	r0, r0
 8025a96:	fb02 f800 	mul.w	r8, r2, r0
 8025a9a:	0112      	lsls	r2, r2, #4
 8025a9c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025aa0:	eba2 0e08 	sub.w	lr, r2, r8
 8025aa4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025aa8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025aaa:	b280      	uxth	r0, r0
 8025aac:	fa1f fe8e 	uxth.w	lr, lr
 8025ab0:	1a09      	subs	r1, r1, r0
 8025ab2:	fb0e f202 	mul.w	r2, lr, r2
 8025ab6:	b289      	uxth	r1, r1
 8025ab8:	fb01 220c 	mla	r2, r1, ip, r2
 8025abc:	fb00 2204 	mla	r2, r0, r4, r2
 8025ac0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025ac2:	fb08 2204 	mla	r2, r8, r4, r2
 8025ac6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025aca:	2a00      	cmp	r2, #0
 8025acc:	f000 80e9 	beq.w	8025ca2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x716>
 8025ad0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025ad4:	d019      	beq.n	8025b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 8025ad6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025ada:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025ade:	fb0c fa0a 	mul.w	sl, ip, sl
 8025ae2:	fb0c fc03 	mul.w	ip, ip, r3
 8025ae6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025aea:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025aee:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025af2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025af6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025afa:	4453      	add	r3, sl
 8025afc:	0a3f      	lsrs	r7, r7, #8
 8025afe:	0a1b      	lsrs	r3, r3, #8
 8025b00:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025b04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025b08:	433b      	orrs	r3, r7
 8025b0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025b0c:	2cff      	cmp	r4, #255	; 0xff
 8025b0e:	d020      	beq.n	8025b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8025b10:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025b12:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025b16:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025b18:	4367      	muls	r7, r4
 8025b1a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025b1c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b20:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025b24:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8025b26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b2e:	fb04 fa0a 	mul.w	sl, r4, sl
 8025b32:	44bc      	add	ip, r7
 8025b34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b4c:	ea4c 040a 	orr.w	r4, ip, sl
 8025b50:	940d      	str	r4, [sp, #52]	; 0x34
 8025b52:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025b54:	2cff      	cmp	r4, #255	; 0xff
 8025b56:	d020      	beq.n	8025b9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8025b58:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025b5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025b5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025b60:	4367      	muls	r7, r4
 8025b62:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025b64:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025b6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8025b6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025b72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b76:	fb04 fa0a 	mul.w	sl, r4, sl
 8025b7a:	44bc      	add	ip, r7
 8025b7c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025b80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b84:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025b8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b94:	ea4c 040a 	orr.w	r4, ip, sl
 8025b98:	9409      	str	r4, [sp, #36]	; 0x24
 8025b9a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025b9c:	2cff      	cmp	r4, #255	; 0xff
 8025b9e:	d020      	beq.n	8025be2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 8025ba0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025ba2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025ba6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025ba8:	4367      	muls	r7, r4
 8025baa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025bac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025bb0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8025bb4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8025bb6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025bba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025bbe:	fb04 fa0a 	mul.w	sl, r4, sl
 8025bc2:	44bc      	add	ip, r7
 8025bc4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025bc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025bcc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025bd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025bd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025bd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025bdc:	ea4c 040a 	orr.w	r4, ip, sl
 8025be0:	940e      	str	r4, [sp, #56]	; 0x38
 8025be2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025be4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025be8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025bec:	43d2      	mvns	r2, r2
 8025bee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8025bf2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8025bf4:	b2d2      	uxtb	r2, r2
 8025bf6:	fb0e f707 	mul.w	r7, lr, r7
 8025bfa:	fb01 770c 	mla	r7, r1, ip, r7
 8025bfe:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025c02:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8025c04:	fb00 770c 	mla	r7, r0, ip, r7
 8025c08:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025c0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8025c0e:	fb08 770c 	mla	r7, r8, ip, r7
 8025c12:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8025c16:	fb0e fe0c 	mul.w	lr, lr, ip
 8025c1a:	0a3f      	lsrs	r7, r7, #8
 8025c1c:	fb01 e303 	mla	r3, r1, r3, lr
 8025c20:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025c22:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8025c26:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025c2a:	990e      	ldr	r1, [sp, #56]	; 0x38
 8025c2c:	fb00 330a 	mla	r3, r0, sl, r3
 8025c30:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8025c34:	fb08 3c0c 	mla	ip, r8, ip, r3
 8025c38:	f8b9 3000 	ldrh.w	r3, [r9]
 8025c3c:	1218      	asrs	r0, r3, #8
 8025c3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c42:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025c46:	10d9      	asrs	r1, r3, #3
 8025c48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025c4c:	00db      	lsls	r3, r3, #3
 8025c4e:	4350      	muls	r0, r2
 8025c50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8025c54:	ea47 070c 	orr.w	r7, r7, ip
 8025c58:	b2db      	uxtb	r3, r3
 8025c5a:	f100 0c01 	add.w	ip, r0, #1
 8025c5e:	4351      	muls	r1, r2
 8025c60:	4353      	muls	r3, r2
 8025c62:	4a1d      	ldr	r2, [pc, #116]	; (8025cd8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025c64:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8025c68:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8025c6c:	eb0c 2010 	add.w	r0, ip, r0, lsr #8
 8025c70:	f103 0c01 	add.w	ip, r3, #1
 8025c74:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025c78:	fa5f fc87 	uxtb.w	ip, r7
 8025c7c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025c80:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8025c84:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025c88:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8025c8c:	1c4b      	adds	r3, r1, #1
 8025c8e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025c92:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8025c96:	00ff      	lsls	r7, r7, #3
 8025c98:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025c9c:	4338      	orrs	r0, r7
 8025c9e:	f8a9 0000 	strh.w	r0, [r9]
 8025ca2:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8025ca4:	f109 0902 	add.w	r9, r9, #2
 8025ca8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8025caa:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025cae:	441a      	add	r2, r3
 8025cb0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8025cb2:	922d      	str	r2, [sp, #180]	; 0xb4
 8025cb4:	441d      	add	r5, r3
 8025cb6:	e649      	b.n	802594c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8025cb8:	2800      	cmp	r0, #0
 8025cba:	f43f aee9 	beq.w	8025a90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8025cbe:	5c79      	ldrb	r1, [r7, r1]
 8025cc0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8025cc4:	9109      	str	r1, [sp, #36]	; 0x24
 8025cc6:	0e09      	lsrs	r1, r1, #24
 8025cc8:	9111      	str	r1, [sp, #68]	; 0x44
 8025cca:	e6e1      	b.n	8025a90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8025ccc:	b01b      	add	sp, #108	; 0x6c
 8025cce:	ecbd 8b08 	vpop	{d8-d11}
 8025cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025cd6:	bf00      	nop
 8025cd8:	fffff800 	.word	0xfffff800

08025cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8025cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025ce0:	b085      	sub	sp, #20
 8025ce2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8025ce6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8025cea:	9103      	str	r1, [sp, #12]
 8025cec:	2d00      	cmp	r5, #0
 8025cee:	fb05 7106 	mla	r1, r5, r6, r7
 8025cf2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8025cf6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8025cfa:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8025cfe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8025d02:	eb03 0901 	add.w	r9, r3, r1
 8025d06:	9401      	str	r4, [sp, #4]
 8025d08:	f2c0 80c0 	blt.w	8025e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8025d0c:	45a8      	cmp	r8, r5
 8025d0e:	f340 80bd 	ble.w	8025e8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8025d12:	2f00      	cmp	r7, #0
 8025d14:	f2c0 80b6 	blt.w	8025e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8025d18:	42be      	cmp	r6, r7
 8025d1a:	f340 80b3 	ble.w	8025e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8025d1e:	f813 c001 	ldrb.w	ip, [r3, r1]
 8025d22:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8025d26:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025d2a:	d019      	beq.n	8025d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8025d2c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8025d30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025d34:	435a      	muls	r2, r3
 8025d36:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8025d3a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8025d3e:	fb0c f403 	mul.w	r4, ip, r3
 8025d42:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8025d46:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8025d4a:	441a      	add	r2, r3
 8025d4c:	f104 0320 	add.w	r3, r4, #32
 8025d50:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8025d54:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8025d58:	0a1b      	lsrs	r3, r3, #8
 8025d5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025d5e:	4319      	orrs	r1, r3
 8025d60:	b289      	uxth	r1, r1
 8025d62:	1c7b      	adds	r3, r7, #1
 8025d64:	f100 8097 	bmi.w	8025e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8025d68:	429e      	cmp	r6, r3
 8025d6a:	f340 8094 	ble.w	8025e96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8025d6e:	2800      	cmp	r0, #0
 8025d70:	f000 8094 	beq.w	8025e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8025d74:	f899 4001 	ldrb.w	r4, [r9, #1]
 8025d78:	9b01      	ldr	r3, [sp, #4]
 8025d7a:	2cff      	cmp	r4, #255	; 0xff
 8025d7c:	885b      	ldrh	r3, [r3, #2]
 8025d7e:	d01b      	beq.n	8025db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8025d80:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8025d84:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8025d88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025d8c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025d90:	fb0a f202 	mul.w	r2, sl, r2
 8025d94:	fb04 fa03 	mul.w	sl, r4, r3
 8025d98:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8025d9c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8025da0:	441a      	add	r2, r3
 8025da2:	f10a 0320 	add.w	r3, sl, #32
 8025da6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8025daa:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8025dae:	0a1b      	lsrs	r3, r3, #8
 8025db0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025db4:	ea4b 0303 	orr.w	r3, fp, r3
 8025db8:	b29b      	uxth	r3, r3
 8025dba:	3501      	adds	r5, #1
 8025dbc:	d474      	bmi.n	8025ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8025dbe:	45a8      	cmp	r8, r5
 8025dc0:	dd72      	ble.n	8025ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8025dc2:	f1be 0f00 	cmp.w	lr, #0
 8025dc6:	f000 8120 	beq.w	802600a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8025dca:	2f00      	cmp	r7, #0
 8025dcc:	db69      	blt.n	8025ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8025dce:	42be      	cmp	r6, r7
 8025dd0:	dd67      	ble.n	8025ea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8025dd2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8025dd6:	9a01      	ldr	r2, [sp, #4]
 8025dd8:	2dff      	cmp	r5, #255	; 0xff
 8025dda:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8025dde:	d01c      	beq.n	8025e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8025de0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8025de4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8025de8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8025dec:	fb08 f802 	mul.w	r8, r8, r2
 8025df0:	fb05 fa0b 	mul.w	sl, r5, fp
 8025df4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8025df8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8025dfc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025e00:	4490      	add	r8, r2
 8025e02:	f10a 0220 	add.w	r2, sl, #32
 8025e06:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8025e0a:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8025e0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025e12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8025e16:	ea4b 0b0a 	orr.w	fp, fp, sl
 8025e1a:	fa1f fb8b 	uxth.w	fp, fp
 8025e1e:	3701      	adds	r7, #1
 8025e20:	d447      	bmi.n	8025eb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8025e22:	42be      	cmp	r6, r7
 8025e24:	dd45      	ble.n	8025eb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8025e26:	2800      	cmp	r0, #0
 8025e28:	d046      	beq.n	8025eb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8025e2a:	3601      	adds	r6, #1
 8025e2c:	9a01      	ldr	r2, [sp, #4]
 8025e2e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8025e32:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8025e36:	2fff      	cmp	r7, #255	; 0xff
 8025e38:	d01a      	beq.n	8025e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8025e3a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8025e3e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8025e42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e46:	fb08 f806 	mul.w	r8, r8, r6
 8025e4a:	fb07 f902 	mul.w	r9, r7, r2
 8025e4e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8025e52:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8025e56:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8025e5a:	44b0      	add	r8, r6
 8025e5c:	f109 0620 	add.w	r6, r9, #32
 8025e60:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8025e64:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8025e68:	0a36      	lsrs	r6, r6, #8
 8025e6a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8025e6e:	4332      	orrs	r2, r6
 8025e70:	b292      	uxth	r2, r2
 8025e72:	280f      	cmp	r0, #15
 8025e74:	d922      	bls.n	8025ebc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 8025e76:	4b69      	ldr	r3, [pc, #420]	; (802601c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8025e78:	f240 210d 	movw	r1, #525	; 0x20d
 8025e7c:	4a68      	ldr	r2, [pc, #416]	; (8026020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8025e7e:	4869      	ldr	r0, [pc, #420]	; (8026024 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8025e80:	f006 f832 	bl	802bee8 <__assert_func>
 8025e84:	f04f 0c00 	mov.w	ip, #0
 8025e88:	4661      	mov	r1, ip
 8025e8a:	e76a      	b.n	8025d62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8025e8c:	2400      	movs	r4, #0
 8025e8e:	46a4      	mov	ip, r4
 8025e90:	4623      	mov	r3, r4
 8025e92:	4621      	mov	r1, r4
 8025e94:	e791      	b.n	8025dba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8025e96:	2400      	movs	r4, #0
 8025e98:	4623      	mov	r3, r4
 8025e9a:	e78e      	b.n	8025dba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8025e9c:	4604      	mov	r4, r0
 8025e9e:	4603      	mov	r3, r0
 8025ea0:	e78b      	b.n	8025dba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8025ea2:	2500      	movs	r5, #0
 8025ea4:	46ab      	mov	fp, r5
 8025ea6:	e7ba      	b.n	8025e1e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8025ea8:	2700      	movs	r7, #0
 8025eaa:	463d      	mov	r5, r7
 8025eac:	463a      	mov	r2, r7
 8025eae:	46bb      	mov	fp, r7
 8025eb0:	e7df      	b.n	8025e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8025eb2:	2700      	movs	r7, #0
 8025eb4:	463a      	mov	r2, r7
 8025eb6:	e7dc      	b.n	8025e72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8025eb8:	4607      	mov	r7, r0
 8025eba:	4602      	mov	r2, r0
 8025ebc:	f1be 0f0f 	cmp.w	lr, #15
 8025ec0:	d8d9      	bhi.n	8025e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8025ec2:	b286      	uxth	r6, r0
 8025ec4:	fa1f f98e 	uxth.w	r9, lr
 8025ec8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8025ecc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8025ed0:	fb06 f809 	mul.w	r8, r6, r9
 8025ed4:	0136      	lsls	r6, r6, #4
 8025ed6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025eda:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8025ede:	9601      	str	r6, [sp, #4]
 8025ee0:	ea4a 0101 	orr.w	r1, sl, r1
 8025ee4:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8025ee8:	fa1f f689 	uxth.w	r6, r9
 8025eec:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8025ef0:	fb10 f90e 	smulbb	r9, r0, lr
 8025ef4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025ef8:	9602      	str	r6, [sp, #8]
 8025efa:	460e      	mov	r6, r1
 8025efc:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8025f00:	f1ce 0110 	rsb	r1, lr, #16
 8025f04:	ea4a 0303 	orr.w	r3, sl, r3
 8025f08:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8025f0c:	1a09      	subs	r1, r1, r0
 8025f0e:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8025f12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f16:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8025f1a:	4343      	muls	r3, r0
 8025f1c:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8025f20:	9801      	ldr	r0, [sp, #4]
 8025f22:	ea4a 0202 	orr.w	r2, sl, r2
 8025f26:	fb01 3106 	mla	r1, r1, r6, r3
 8025f2a:	9e02      	ldr	r6, [sp, #8]
 8025f2c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8025f30:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8025f34:	fb09 1302 	mla	r3, r9, r2, r1
 8025f38:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8025f3c:	1b80      	subs	r0, r0, r6
 8025f3e:	9e01      	ldr	r6, [sp, #4]
 8025f40:	9a03      	ldr	r2, [sp, #12]
 8025f42:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8025f46:	eba6 0608 	sub.w	r6, r6, r8
 8025f4a:	b280      	uxth	r0, r0
 8025f4c:	8811      	ldrh	r1, [r2, #0]
 8025f4e:	ea4a 0b0b 	orr.w	fp, sl, fp
 8025f52:	b2b6      	uxth	r6, r6
 8025f54:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8025f58:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8025f5c:	4374      	muls	r4, r6
 8025f5e:	b292      	uxth	r2, r2
 8025f60:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8025f64:	fb0c 4400 	mla	r4, ip, r0, r4
 8025f68:	9802      	ldr	r0, [sp, #8]
 8025f6a:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8025f6e:	fb00 4505 	mla	r5, r0, r5, r4
 8025f72:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8025f76:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025f7a:	1208      	asrs	r0, r1, #8
 8025f7c:	fb08 5707 	mla	r7, r8, r7, r5
 8025f80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8025f84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025f88:	10cd      	asrs	r5, r1, #3
 8025f8a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8025f8e:	ea43 0e0e 	orr.w	lr, r3, lr
 8025f92:	00c9      	lsls	r1, r1, #3
 8025f94:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025f98:	4357      	muls	r7, r2
 8025f9a:	fa1f f38e 	uxth.w	r3, lr
 8025f9e:	b2c9      	uxtb	r1, r1
 8025fa0:	f107 0801 	add.w	r8, r7, #1
 8025fa4:	121c      	asrs	r4, r3, #8
 8025fa6:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8025faa:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025fae:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8025fb2:	b2ff      	uxtb	r7, r7
 8025fb4:	fb10 f007 	smulbb	r0, r0, r7
 8025fb8:	fb11 f107 	smulbb	r1, r1, r7
 8025fbc:	fb04 0402 	mla	r4, r4, r2, r0
 8025fc0:	10d8      	asrs	r0, r3, #3
 8025fc2:	fb15 f507 	smulbb	r5, r5, r7
 8025fc6:	00db      	lsls	r3, r3, #3
 8025fc8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025fcc:	b2a4      	uxth	r4, r4
 8025fce:	b2db      	uxtb	r3, r3
 8025fd0:	fb00 5002 	mla	r0, r0, r2, r5
 8025fd4:	fb03 1202 	mla	r2, r3, r2, r1
 8025fd8:	1c63      	adds	r3, r4, #1
 8025fda:	b280      	uxth	r0, r0
 8025fdc:	b292      	uxth	r2, r2
 8025fde:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8025fe2:	1c51      	adds	r1, r2, #1
 8025fe4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8025fe8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025fec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8025ff0:	4313      	orrs	r3, r2
 8025ff2:	1c42      	adds	r2, r0, #1
 8025ff4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025ff8:	9a03      	ldr	r2, [sp, #12]
 8025ffa:	0940      	lsrs	r0, r0, #5
 8025ffc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026000:	4303      	orrs	r3, r0
 8026002:	8013      	strh	r3, [r2, #0]
 8026004:	b005      	add	sp, #20
 8026006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802600a:	280f      	cmp	r0, #15
 802600c:	f63f af33 	bhi.w	8025e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 8026010:	4677      	mov	r7, lr
 8026012:	4675      	mov	r5, lr
 8026014:	4672      	mov	r2, lr
 8026016:	46f3      	mov	fp, lr
 8026018:	e753      	b.n	8025ec2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 802601a:	bf00      	nop
 802601c:	0803217a 	.word	0x0803217a
 8026020:	0803273d 	.word	0x0803273d
 8026024:	08032263 	.word	0x08032263

08026028 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802602c:	ed2d 8b08 	vpush	{d8-d11}
 8026030:	b097      	sub	sp, #92	; 0x5c
 8026032:	eeb0 aa40 	vmov.f32	s20, s0
 8026036:	eef0 9a60 	vmov.f32	s19, s1
 802603a:	9214      	str	r2, [sp, #80]	; 0x50
 802603c:	eeb0 9a41 	vmov.f32	s18, s2
 8026040:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8026042:	eeb0 8a62 	vmov.f32	s16, s5
 8026046:	9308      	str	r3, [sp, #32]
 8026048:	eef0 8a43 	vmov.f32	s17, s6
 802604c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8026050:	eef0 ba44 	vmov.f32	s23, s8
 8026054:	9015      	str	r0, [sp, #84]	; 0x54
 8026056:	eeb0 ba64 	vmov.f32	s22, s9
 802605a:	9312      	str	r3, [sp, #72]	; 0x48
 802605c:	eef0 aa45 	vmov.f32	s21, s10
 8026060:	6850      	ldr	r0, [r2, #4]
 8026062:	9111      	str	r1, [sp, #68]	; 0x44
 8026064:	6812      	ldr	r2, [r2, #0]
 8026066:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 802606a:	fb00 1303 	mla	r3, r0, r3, r1
 802606e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026072:	9309      	str	r3, [sp, #36]	; 0x24
 8026074:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8026076:	681b      	ldr	r3, [r3, #0]
 8026078:	930b      	str	r3, [sp, #44]	; 0x2c
 802607a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802607c:	685b      	ldr	r3, [r3, #4]
 802607e:	930c      	str	r3, [sp, #48]	; 0x30
 8026080:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8026084:	930a      	str	r3, [sp, #40]	; 0x28
 8026086:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026088:	2b00      	cmp	r3, #0
 802608a:	dc03      	bgt.n	8026094 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802608c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802608e:	2b00      	cmp	r3, #0
 8026090:	f340 83cd 	ble.w	802682e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
 8026094:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8026096:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802609a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802609e:	1e48      	subs	r0, r1, #1
 80260a0:	1e55      	subs	r5, r2, #1
 80260a2:	9b08      	ldr	r3, [sp, #32]
 80260a4:	2b00      	cmp	r3, #0
 80260a6:	f340 81a5 	ble.w	80263f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 80260aa:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80260ac:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80260ae:	1436      	asrs	r6, r6, #16
 80260b0:	ea4f 4323 	mov.w	r3, r3, asr #16
 80260b4:	d406      	bmi.n	80260c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80260b6:	4286      	cmp	r6, r0
 80260b8:	da04      	bge.n	80260c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80260ba:	2b00      	cmp	r3, #0
 80260bc:	db02      	blt.n	80260c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80260be:	42ab      	cmp	r3, r5
 80260c0:	f2c0 8199 	blt.w	80263f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 80260c4:	3601      	adds	r6, #1
 80260c6:	f100 8186 	bmi.w	80263d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80260ca:	42b1      	cmp	r1, r6
 80260cc:	f2c0 8183 	blt.w	80263d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80260d0:	3301      	adds	r3, #1
 80260d2:	f100 8180 	bmi.w	80263d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80260d6:	429a      	cmp	r2, r3
 80260d8:	f2c0 817d 	blt.w	80263d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80260dc:	9b08      	ldr	r3, [sp, #32]
 80260de:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80260e2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80260e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80260e6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80260e8:	2b00      	cmp	r3, #0
 80260ea:	f340 81a6 	ble.w	802643a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x412>
 80260ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80260f0:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80260f2:	1418      	asrs	r0, r3, #16
 80260f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80260f6:	142d      	asrs	r5, r5, #16
 80260f8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80260fc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80260fe:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8026102:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8026104:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8026108:	f100 81fa 	bmi.w	8026500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802610c:	f102 3eff 	add.w	lr, r2, #4294967295
 8026110:	4575      	cmp	r5, lr
 8026112:	f280 81f5 	bge.w	8026500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026116:	2800      	cmp	r0, #0
 8026118:	f2c0 81f2 	blt.w	8026500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802611c:	f103 3eff 	add.w	lr, r3, #4294967295
 8026120:	4570      	cmp	r0, lr
 8026122:	f280 81ed 	bge.w	8026500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026126:	b212      	sxth	r2, r2
 8026128:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802612a:	fa1f fe81 	uxth.w	lr, r1
 802612e:	fb00 5002 	mla	r0, r0, r2, r5
 8026132:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8026136:	eb03 0a00 	add.w	sl, r3, r0
 802613a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802613e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8026142:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026146:	b29b      	uxth	r3, r3
 8026148:	f1bc 0f00 	cmp.w	ip, #0
 802614c:	f000 81bb 	beq.w	80264c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 8026150:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026154:	eb0a 0b02 	add.w	fp, sl, r2
 8026158:	fa1f fa8c 	uxth.w	sl, ip
 802615c:	940d      	str	r4, [sp, #52]	; 0x34
 802615e:	fb0a fe0e 	mul.w	lr, sl, lr
 8026162:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026166:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802616a:	eba5 050e 	sub.w	r5, r5, lr
 802616e:	940e      	str	r4, [sp, #56]	; 0x38
 8026170:	fa1f fa8a 	uxth.w	sl, sl
 8026174:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026176:	b2ad      	uxth	r5, r5
 8026178:	eba3 030a 	sub.w	r3, r3, sl
 802617c:	fb08 f505 	mul.w	r5, r8, r5
 8026180:	b29b      	uxth	r3, r3
 8026182:	fb09 5303 	mla	r3, r9, r3, r5
 8026186:	fb0a 3304 	mla	r3, sl, r4, r3
 802618a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802618c:	fb0e 3304 	mla	r3, lr, r4, r3
 8026190:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026194:	2b00      	cmp	r3, #0
 8026196:	f000 8111 	beq.w	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802619a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802619c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80261a0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80261a4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80261a8:	f000 8192 	beq.w	80264d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80261ac:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80261b0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80261b4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80261b8:	fb0a fe0e 	mul.w	lr, sl, lr
 80261bc:	fb09 f000 	mul.w	r0, r9, r0
 80261c0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80261c4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80261c8:	f100 0b20 	add.w	fp, r0, #32
 80261cc:	44ce      	add	lr, r9
 80261ce:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80261d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80261d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80261da:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80261de:	ea4e 0909 	orr.w	r9, lr, r9
 80261e2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80261e6:	8868      	ldrh	r0, [r5, #2]
 80261e8:	d019      	beq.n	802621e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80261ea:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80261ee:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80261f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80261f6:	fb0a fe0e 	mul.w	lr, sl, lr
 80261fa:	fb08 f800 	mul.w	r8, r8, r0
 80261fe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8026202:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026206:	f108 0b20 	add.w	fp, r8, #32
 802620a:	4486      	add	lr, r0
 802620c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8026210:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026214:	0a00      	lsrs	r0, r0, #8
 8026216:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802621a:	ea4e 0000 	orr.w	r0, lr, r0
 802621e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8026222:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026226:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802622a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802622e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026232:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026236:	ea4e 0909 	orr.w	r9, lr, r9
 802623a:	ea4a 0000 	orr.w	r0, sl, r0
 802623e:	f1bc 0f00 	cmp.w	ip, #0
 8026242:	f000 8147 	beq.w	80264d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8026246:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802624a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802624c:	3a01      	subs	r2, #1
 802624e:	2cff      	cmp	r4, #255	; 0xff
 8026250:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8026254:	f102 0202 	add.w	r2, r2, #2
 8026258:	eb05 0e02 	add.w	lr, r5, r2
 802625c:	5aaa      	ldrh	r2, [r5, r2]
 802625e:	d018      	beq.n	8026292 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8026260:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026264:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026268:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802626c:	fb04 fa02 	mul.w	sl, r4, r2
 8026270:	fb08 f805 	mul.w	r8, r8, r5
 8026274:	f10a 0520 	add.w	r5, sl, #32
 8026278:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802627c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026280:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8026284:	4442      	add	r2, r8
 8026286:	0a2d      	lsrs	r5, r5, #8
 8026288:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802628c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026290:	432a      	orrs	r2, r5
 8026292:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8026294:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8026298:	2cff      	cmp	r4, #255	; 0xff
 802629a:	d01a      	beq.n	80262d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2aa>
 802629c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80262a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80262a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80262a8:	fb04 fa05 	mul.w	sl, r4, r5
 80262ac:	fb08 f80e 	mul.w	r8, r8, lr
 80262b0:	f10a 0e20 	add.w	lr, sl, #32
 80262b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80262b8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80262bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80262c0:	4445      	add	r5, r8
 80262c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80262c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80262ca:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80262ce:	ea45 050e 	orr.w	r5, r5, lr
 80262d2:	fb1c fe01 	smulbb	lr, ip, r1
 80262d6:	f1cc 0810 	rsb	r8, ip, #16
 80262da:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80262de:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80262e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80262e6:	eba8 0801 	sub.w	r8, r8, r1
 80262ea:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80262ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80262f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80262f6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80262fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80262fe:	ea4a 0202 	orr.w	r2, sl, r2
 8026302:	4341      	muls	r1, r0
 8026304:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026308:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802630c:	fb09 1108 	mla	r1, r9, r8, r1
 8026310:	ea4b 0505 	orr.w	r5, fp, r5
 8026314:	fb0c 1102 	mla	r1, ip, r2, r1
 8026318:	fb0e 1e05 	mla	lr, lr, r5, r1
 802631c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026320:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026324:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026328:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802632c:	ea42 0e0e 	orr.w	lr, r2, lr
 8026330:	fa1f f28e 	uxth.w	r2, lr
 8026334:	2bff      	cmp	r3, #255	; 0xff
 8026336:	d103      	bne.n	8026340 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8026338:	9912      	ldr	r1, [sp, #72]	; 0x48
 802633a:	29ff      	cmp	r1, #255	; 0xff
 802633c:	f000 80de 	beq.w	80264fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 8026340:	990a      	ldr	r1, [sp, #40]	; 0x28
 8026342:	8838      	ldrh	r0, [r7, #0]
 8026344:	434b      	muls	r3, r1
 8026346:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026348:	1205      	asrs	r5, r0, #8
 802634a:	f103 0c01 	add.w	ip, r3, #1
 802634e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026352:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8026356:	ea6f 2c23 	mvn.w	ip, r3, asr #8
 802635a:	1213      	asrs	r3, r2, #8
 802635c:	fa5f fc8c 	uxtb.w	ip, ip
 8026360:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026364:	fb15 f50c 	smulbb	r5, r5, ip
 8026368:	fb03 5301 	mla	r3, r3, r1, r5
 802636c:	10d1      	asrs	r1, r2, #3
 802636e:	00d2      	lsls	r2, r2, #3
 8026370:	b29d      	uxth	r5, r3
 8026372:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026376:	10c3      	asrs	r3, r0, #3
 8026378:	00c0      	lsls	r0, r0, #3
 802637a:	b2d2      	uxtb	r2, r2
 802637c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026380:	b2c0      	uxtb	r0, r0
 8026382:	fb13 f30c 	smulbb	r3, r3, ip
 8026386:	fb10 f00c 	smulbb	r0, r0, ip
 802638a:	fb01 3104 	mla	r1, r1, r4, r3
 802638e:	1c6b      	adds	r3, r5, #1
 8026390:	fb02 0204 	mla	r2, r2, r4, r0
 8026394:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8026398:	b292      	uxth	r2, r2
 802639a:	b289      	uxth	r1, r1
 802639c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80263a0:	1c50      	adds	r0, r2, #1
 80263a2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80263a6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80263aa:	4313      	orrs	r3, r2
 80263ac:	1c4a      	adds	r2, r1, #1
 80263ae:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80263b2:	0949      	lsrs	r1, r1, #5
 80263b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80263b8:	430b      	orrs	r3, r1
 80263ba:	803b      	strh	r3, [r7, #0]
 80263bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80263be:	3702      	adds	r7, #2
 80263c0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80263c2:	4413      	add	r3, r2
 80263c4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80263c6:	9329      	str	r3, [sp, #164]	; 0xa4
 80263c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80263ca:	441a      	add	r2, r3
 80263cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80263ce:	3b01      	subs	r3, #1
 80263d0:	922a      	str	r2, [sp, #168]	; 0xa8
 80263d2:	9313      	str	r3, [sp, #76]	; 0x4c
 80263d4:	e687      	b.n	80260e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80263d6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80263d8:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80263da:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 80263dc:	4433      	add	r3, r6
 80263de:	9329      	str	r3, [sp, #164]	; 0xa4
 80263e0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80263e2:	441c      	add	r4, r3
 80263e4:	9b08      	ldr	r3, [sp, #32]
 80263e6:	3b01      	subs	r3, #1
 80263e8:	942a      	str	r4, [sp, #168]	; 0xa8
 80263ea:	9308      	str	r3, [sp, #32]
 80263ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80263ee:	3302      	adds	r3, #2
 80263f0:	9309      	str	r3, [sp, #36]	; 0x24
 80263f2:	e656      	b.n	80260a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80263f4:	d028      	beq.n	8026448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80263f6:	9b08      	ldr	r3, [sp, #32]
 80263f8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80263fa:	3b01      	subs	r3, #1
 80263fc:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80263fe:	fb00 5003 	mla	r0, r0, r3, r5
 8026402:	1400      	asrs	r0, r0, #16
 8026404:	f53f ae6a 	bmi.w	80260dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8026408:	3901      	subs	r1, #1
 802640a:	4288      	cmp	r0, r1
 802640c:	f6bf ae66 	bge.w	80260dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8026410:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8026412:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8026414:	fb01 0303 	mla	r3, r1, r3, r0
 8026418:	141b      	asrs	r3, r3, #16
 802641a:	f53f ae5f 	bmi.w	80260dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802641e:	3a01      	subs	r2, #1
 8026420:	4293      	cmp	r3, r2
 8026422:	f6bf ae5b 	bge.w	80260dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8026426:	9b08      	ldr	r3, [sp, #32]
 8026428:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802642c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8026430:	9313      	str	r3, [sp, #76]	; 0x4c
 8026432:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8026434:	2b00      	cmp	r3, #0
 8026436:	f300 8082 	bgt.w	802653e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x516>
 802643a:	9b08      	ldr	r3, [sp, #32]
 802643c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026440:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026442:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026446:	9309      	str	r3, [sp, #36]	; 0x24
 8026448:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802644a:	2b00      	cmp	r3, #0
 802644c:	f340 81ef 	ble.w	802682e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x806>
 8026450:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026454:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026456:	ee3a aa2b 	vadd.f32	s20, s20, s23
 802645a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 802645e:	eef0 6a48 	vmov.f32	s13, s16
 8026462:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8026466:	ee39 9a2a 	vadd.f32	s18, s18, s21
 802646a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802646e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8026472:	eef0 6a68 	vmov.f32	s13, s17
 8026476:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802647a:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 802647e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8026482:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026486:	ee37 8a48 	vsub.f32	s16, s14, s16
 802648a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802648e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026492:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026496:	ee18 2a10 	vmov	r2, s16
 802649a:	eeb0 8a47 	vmov.f32	s16, s14
 802649e:	fb92 f3f3 	sdiv	r3, r2, r3
 80264a2:	ee18 2a90 	vmov	r2, s17
 80264a6:	932b      	str	r3, [sp, #172]	; 0xac
 80264a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80264aa:	eef0 8a67 	vmov.f32	s17, s15
 80264ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80264b2:	932c      	str	r3, [sp, #176]	; 0xb0
 80264b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80264b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80264b8:	3b01      	subs	r3, #1
 80264ba:	9311      	str	r3, [sp, #68]	; 0x44
 80264bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80264be:	bf08      	it	eq
 80264c0:	4613      	moveq	r3, r2
 80264c2:	9308      	str	r3, [sp, #32]
 80264c4:	e5df      	b.n	8026086 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80264c6:	fb08 f505 	mul.w	r5, r8, r5
 80264ca:	fb09 5303 	mla	r3, r9, r3, r5
 80264ce:	e65f      	b.n	8026190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 80264d0:	4681      	mov	r9, r0
 80264d2:	e686      	b.n	80261e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 80264d4:	f1c1 0210 	rsb	r2, r1, #16
 80264d8:	4341      	muls	r1, r0
 80264da:	fb09 1902 	mla	r9, r9, r2, r1
 80264de:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80264e2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80264e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80264ea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80264ee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80264f2:	ea42 0909 	orr.w	r9, r2, r9
 80264f6:	fa1f f289 	uxth.w	r2, r9
 80264fa:	e71b      	b.n	8026334 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80264fc:	803a      	strh	r2, [r7, #0]
 80264fe:	e75d      	b.n	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8026500:	f115 0e01 	adds.w	lr, r5, #1
 8026504:	f53f af5a 	bmi.w	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8026508:	4572      	cmp	r2, lr
 802650a:	f6ff af57 	blt.w	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802650e:	f110 0e01 	adds.w	lr, r0, #1
 8026512:	f53f af53 	bmi.w	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8026516:	4573      	cmp	r3, lr
 8026518:	f6ff af50 	blt.w	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802651c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802651e:	b21b      	sxth	r3, r3
 8026520:	b212      	sxth	r2, r2
 8026522:	9502      	str	r5, [sp, #8]
 8026524:	9301      	str	r3, [sp, #4]
 8026526:	9200      	str	r2, [sp, #0]
 8026528:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802652c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8026530:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8026534:	4639      	mov	r1, r7
 8026536:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026538:	f7ff fbd0 	bl	8025cdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 802653c:	e73e      	b.n	80263bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 802653e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8026540:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8026544:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026546:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802654a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802654c:	fa1f fc82 	uxth.w	ip, r2
 8026550:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026554:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026556:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802655a:	141f      	asrs	r7, r3, #16
 802655c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802655e:	141b      	asrs	r3, r3, #16
 8026560:	fb01 3707 	mla	r7, r1, r7, r3
 8026564:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026566:	eb03 0a07 	add.w	sl, r3, r7
 802656a:	f813 9007 	ldrb.w	r9, [r3, r7]
 802656e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8026572:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026576:	b29b      	uxth	r3, r3
 8026578:	2d00      	cmp	r5, #0
 802657a:	f000 813d 	beq.w	80267f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 802657e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8026582:	eb0a 0b01 	add.w	fp, sl, r1
 8026586:	fa1f fa85 	uxth.w	sl, r5
 802658a:	940f      	str	r4, [sp, #60]	; 0x3c
 802658c:	fb0a fc0c 	mul.w	ip, sl, ip
 8026590:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026594:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8026598:	eba0 000c 	sub.w	r0, r0, ip
 802659c:	9410      	str	r4, [sp, #64]	; 0x40
 802659e:	fa1f fa8a 	uxth.w	sl, sl
 80265a2:	b280      	uxth	r0, r0
 80265a4:	eba3 030a 	sub.w	r3, r3, sl
 80265a8:	fb08 f000 	mul.w	r0, r8, r0
 80265ac:	b29b      	uxth	r3, r3
 80265ae:	fb09 0303 	mla	r3, r9, r3, r0
 80265b2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80265b4:	fb0a 3300 	mla	r3, sl, r0, r3
 80265b8:	fb0c 3304 	mla	r3, ip, r4, r3
 80265bc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80265c0:	2b00      	cmp	r3, #0
 80265c2:	f000 810b 	beq.w	80267dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
 80265c6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80265c8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80265cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80265ce:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80265d2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80265d6:	f000 8114 	beq.w	8026802 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 80265da:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80265de:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80265e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80265e6:	fb0a fc0c 	mul.w	ip, sl, ip
 80265ea:	fb09 f707 	mul.w	r7, r9, r7
 80265ee:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80265f2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80265f6:	f107 0b20 	add.w	fp, r7, #32
 80265fa:	44cc      	add	ip, r9
 80265fc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8026600:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026604:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026608:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802660c:	ea4c 0909 	orr.w	r9, ip, r9
 8026610:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026614:	8847      	ldrh	r7, [r0, #2]
 8026616:	d019      	beq.n	802664c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x624>
 8026618:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802661c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026620:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026624:	fb0a fc0c 	mul.w	ip, sl, ip
 8026628:	fb08 f807 	mul.w	r8, r8, r7
 802662c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8026630:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8026634:	f108 0b20 	add.w	fp, r8, #32
 8026638:	44bc      	add	ip, r7
 802663a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802663e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8026642:	0a3f      	lsrs	r7, r7, #8
 8026644:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8026648:	ea4c 0707 	orr.w	r7, ip, r7
 802664c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8026650:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026654:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8026658:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802665c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026660:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026664:	ea4c 0909 	orr.w	r9, ip, r9
 8026668:	ea4a 0707 	orr.w	r7, sl, r7
 802666c:	2d00      	cmp	r5, #0
 802666e:	f000 80ca 	beq.w	8026806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8026672:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8026676:	3901      	subs	r1, #1
 8026678:	0049      	lsls	r1, r1, #1
 802667a:	3102      	adds	r1, #2
 802667c:	eb00 0c01 	add.w	ip, r0, r1
 8026680:	5a41      	ldrh	r1, [r0, r1]
 8026682:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8026684:	28ff      	cmp	r0, #255	; 0xff
 8026686:	d019      	beq.n	80266bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x694>
 8026688:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802668c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802668e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026692:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026696:	fb04 fa01 	mul.w	sl, r4, r1
 802669a:	fb08 f800 	mul.w	r8, r8, r0
 802669e:	f10a 0020 	add.w	r0, sl, #32
 80266a2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80266a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266aa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80266ae:	4441      	add	r1, r8
 80266b0:	0a00      	lsrs	r0, r0, #8
 80266b2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80266b6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80266ba:	4301      	orrs	r1, r0
 80266bc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80266be:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80266c2:	2cff      	cmp	r4, #255	; 0xff
 80266c4:	d01a      	beq.n	80266fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d4>
 80266c6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80266ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80266ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80266d2:	fb04 fa00 	mul.w	sl, r4, r0
 80266d6:	fb08 f80c 	mul.w	r8, r8, ip
 80266da:	f10a 0c20 	add.w	ip, sl, #32
 80266de:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80266e2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80266e6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80266ea:	4440      	add	r0, r8
 80266ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80266f0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80266f4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80266f8:	ea40 000c 	orr.w	r0, r0, ip
 80266fc:	fb15 fc02 	smulbb	ip, r5, r2
 8026700:	f1c5 0810 	rsb	r8, r5, #16
 8026704:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026708:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802670c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8026710:	eba8 0802 	sub.w	r8, r8, r2
 8026714:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8026718:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802671c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8026720:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026724:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8026728:	ea4a 0101 	orr.w	r1, sl, r1
 802672c:	437a      	muls	r2, r7
 802672e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8026732:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026736:	fb09 2208 	mla	r2, r9, r8, r2
 802673a:	ea4b 0000 	orr.w	r0, fp, r0
 802673e:	fb05 2201 	mla	r2, r5, r1, r2
 8026742:	fb0c 2200 	mla	r2, ip, r0, r2
 8026746:	0d57      	lsrs	r7, r2, #21
 8026748:	0952      	lsrs	r2, r2, #5
 802674a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802674e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026752:	433a      	orrs	r2, r7
 8026754:	2bff      	cmp	r3, #255	; 0xff
 8026756:	b292      	uxth	r2, r2
 8026758:	d102      	bne.n	8026760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x738>
 802675a:	9912      	ldr	r1, [sp, #72]	; 0x48
 802675c:	29ff      	cmp	r1, #255	; 0xff
 802675e:	d063      	beq.n	8026828 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x800>
 8026760:	980a      	ldr	r0, [sp, #40]	; 0x28
 8026762:	1215      	asrs	r5, r2, #8
 8026764:	f8be 1000 	ldrh.w	r1, [lr]
 8026768:	4343      	muls	r3, r0
 802676a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802676c:	10cf      	asrs	r7, r1, #3
 802676e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026772:	1c58      	adds	r0, r3, #1
 8026774:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026778:	eb00 2323 	add.w	r3, r0, r3, asr #8
 802677c:	1208      	asrs	r0, r1, #8
 802677e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8026782:	00c9      	lsls	r1, r1, #3
 8026784:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026788:	b2db      	uxtb	r3, r3
 802678a:	b2c9      	uxtb	r1, r1
 802678c:	fb10 f003 	smulbb	r0, r0, r3
 8026790:	fb11 f103 	smulbb	r1, r1, r3
 8026794:	fb05 0504 	mla	r5, r5, r4, r0
 8026798:	10d0      	asrs	r0, r2, #3
 802679a:	fb17 f703 	smulbb	r7, r7, r3
 802679e:	00d2      	lsls	r2, r2, #3
 80267a0:	b2ad      	uxth	r5, r5
 80267a2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80267a6:	b2d2      	uxtb	r2, r2
 80267a8:	fb00 7004 	mla	r0, r0, r4, r7
 80267ac:	1c6b      	adds	r3, r5, #1
 80267ae:	fb02 1204 	mla	r2, r2, r4, r1
 80267b2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80267b6:	b292      	uxth	r2, r2
 80267b8:	b280      	uxth	r0, r0
 80267ba:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80267be:	1c57      	adds	r7, r2, #1
 80267c0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80267c4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80267c8:	433d      	orrs	r5, r7
 80267ca:	1c47      	adds	r7, r0, #1
 80267cc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80267d0:	097f      	lsrs	r7, r7, #5
 80267d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80267d6:	433d      	orrs	r5, r7
 80267d8:	f8ae 5000 	strh.w	r5, [lr]
 80267dc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80267de:	f10e 0e02 	add.w	lr, lr, #2
 80267e2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80267e4:	4413      	add	r3, r2
 80267e6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80267e8:	9329      	str	r3, [sp, #164]	; 0xa4
 80267ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80267ec:	441a      	add	r2, r3
 80267ee:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80267f0:	3b01      	subs	r3, #1
 80267f2:	922a      	str	r2, [sp, #168]	; 0xa8
 80267f4:	9313      	str	r3, [sp, #76]	; 0x4c
 80267f6:	e61c      	b.n	8026432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80267f8:	fb08 f000 	mul.w	r0, r8, r0
 80267fc:	fb09 0303 	mla	r3, r9, r3, r0
 8026800:	e6dc      	b.n	80265bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x594>
 8026802:	46b9      	mov	r9, r7
 8026804:	e704      	b.n	8026610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e8>
 8026806:	f1c2 0110 	rsb	r1, r2, #16
 802680a:	437a      	muls	r2, r7
 802680c:	fb09 2901 	mla	r9, r9, r1, r2
 8026810:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8026814:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8026818:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802681c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026820:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026824:	4302      	orrs	r2, r0
 8026826:	e795      	b.n	8026754 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>
 8026828:	f8ae 2000 	strh.w	r2, [lr]
 802682c:	e7d6      	b.n	80267dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b4>
 802682e:	b017      	add	sp, #92	; 0x5c
 8026830:	ecbd 8b08 	vpop	{d8-d11}
 8026834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026838 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8026838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802683c:	b085      	sub	sp, #20
 802683e:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8026842:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8026846:	9103      	str	r1, [sp, #12]
 8026848:	2d00      	cmp	r5, #0
 802684a:	fb05 7106 	mla	r1, r5, r6, r7
 802684e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8026852:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8026856:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 802685a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802685e:	eb02 0901 	add.w	r9, r2, r1
 8026862:	9401      	str	r4, [sp, #4]
 8026864:	f2c0 80c0 	blt.w	80269e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8026868:	45a8      	cmp	r8, r5
 802686a:	f340 80bd 	ble.w	80269e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 802686e:	2f00      	cmp	r7, #0
 8026870:	f2c0 80b6 	blt.w	80269e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8026874:	42be      	cmp	r6, r7
 8026876:	f340 80b3 	ble.w	80269e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 802687a:	f812 c001 	ldrb.w	ip, [r2, r1]
 802687e:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8026882:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8026886:	d019      	beq.n	80268bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8026888:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 802688c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026890:	435a      	muls	r2, r3
 8026892:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8026896:	f64f 011f 	movw	r1, #63519	; 0xf81f
 802689a:	fb0c f403 	mul.w	r4, ip, r3
 802689e:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 80268a2:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80268a6:	441a      	add	r2, r3
 80268a8:	f104 0320 	add.w	r3, r4, #32
 80268ac:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 80268b0:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 80268b4:	0a1b      	lsrs	r3, r3, #8
 80268b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80268ba:	4319      	orrs	r1, r3
 80268bc:	b289      	uxth	r1, r1
 80268be:	1c7b      	adds	r3, r7, #1
 80268c0:	f100 8097 	bmi.w	80269f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80268c4:	429e      	cmp	r6, r3
 80268c6:	f340 8094 	ble.w	80269f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 80268ca:	2800      	cmp	r0, #0
 80268cc:	f000 8094 	beq.w	80269f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 80268d0:	f899 4001 	ldrb.w	r4, [r9, #1]
 80268d4:	9b01      	ldr	r3, [sp, #4]
 80268d6:	2cff      	cmp	r4, #255	; 0xff
 80268d8:	885b      	ldrh	r3, [r3, #2]
 80268da:	d01b      	beq.n	8026914 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 80268dc:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80268e0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 80268e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80268e8:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80268ec:	fb0a f202 	mul.w	r2, sl, r2
 80268f0:	fb04 fa03 	mul.w	sl, r4, r3
 80268f4:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80268f8:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80268fc:	441a      	add	r2, r3
 80268fe:	f10a 0320 	add.w	r3, sl, #32
 8026902:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8026906:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 802690a:	0a1b      	lsrs	r3, r3, #8
 802690c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026910:	ea4b 0303 	orr.w	r3, fp, r3
 8026914:	b29b      	uxth	r3, r3
 8026916:	3501      	adds	r5, #1
 8026918:	d474      	bmi.n	8026a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 802691a:	45a8      	cmp	r8, r5
 802691c:	dd72      	ble.n	8026a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 802691e:	f1be 0f00 	cmp.w	lr, #0
 8026922:	f000 8111 	beq.w	8026b48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x310>
 8026926:	2f00      	cmp	r7, #0
 8026928:	db69      	blt.n	80269fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 802692a:	42be      	cmp	r6, r7
 802692c:	dd67      	ble.n	80269fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 802692e:	f819 5006 	ldrb.w	r5, [r9, r6]
 8026932:	9a01      	ldr	r2, [sp, #4]
 8026934:	2dff      	cmp	r5, #255	; 0xff
 8026936:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 802693a:	d01c      	beq.n	8026976 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 802693c:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8026940:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8026944:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8026948:	fb08 f802 	mul.w	r8, r8, r2
 802694c:	fb05 fa0b 	mul.w	sl, r5, fp
 8026950:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8026954:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8026958:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802695c:	4490      	add	r8, r2
 802695e:	f10a 0220 	add.w	r2, sl, #32
 8026962:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8026966:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 802696a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802696e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8026972:	ea4b 0b0a 	orr.w	fp, fp, sl
 8026976:	fa1f fb8b 	uxth.w	fp, fp
 802697a:	3701      	adds	r7, #1
 802697c:	d447      	bmi.n	8026a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 802697e:	42be      	cmp	r6, r7
 8026980:	dd45      	ble.n	8026a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8026982:	2800      	cmp	r0, #0
 8026984:	d046      	beq.n	8026a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8026986:	3601      	adds	r6, #1
 8026988:	9a01      	ldr	r2, [sp, #4]
 802698a:	f819 7006 	ldrb.w	r7, [r9, r6]
 802698e:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8026992:	2fff      	cmp	r7, #255	; 0xff
 8026994:	d01a      	beq.n	80269cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8026996:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 802699a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 802699e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80269a2:	fb08 f806 	mul.w	r8, r8, r6
 80269a6:	fb07 f902 	mul.w	r9, r7, r2
 80269aa:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80269ae:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 80269b2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80269b6:	44b0      	add	r8, r6
 80269b8:	f109 0620 	add.w	r6, r9, #32
 80269bc:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 80269c0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80269c4:	0a36      	lsrs	r6, r6, #8
 80269c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80269ca:	4332      	orrs	r2, r6
 80269cc:	b292      	uxth	r2, r2
 80269ce:	280f      	cmp	r0, #15
 80269d0:	d922      	bls.n	8026a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 80269d2:	4b61      	ldr	r3, [pc, #388]	; (8026b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 80269d4:	f240 210d 	movw	r1, #525	; 0x20d
 80269d8:	4a60      	ldr	r2, [pc, #384]	; (8026b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 80269da:	4861      	ldr	r0, [pc, #388]	; (8026b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 80269dc:	f005 fa84 	bl	802bee8 <__assert_func>
 80269e0:	f04f 0c00 	mov.w	ip, #0
 80269e4:	4661      	mov	r1, ip
 80269e6:	e76a      	b.n	80268be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 80269e8:	2400      	movs	r4, #0
 80269ea:	46a4      	mov	ip, r4
 80269ec:	4623      	mov	r3, r4
 80269ee:	4621      	mov	r1, r4
 80269f0:	e791      	b.n	8026916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80269f2:	2400      	movs	r4, #0
 80269f4:	4623      	mov	r3, r4
 80269f6:	e78e      	b.n	8026916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80269f8:	4604      	mov	r4, r0
 80269fa:	4603      	mov	r3, r0
 80269fc:	e78b      	b.n	8026916 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 80269fe:	2500      	movs	r5, #0
 8026a00:	46ab      	mov	fp, r5
 8026a02:	e7ba      	b.n	802697a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8026a04:	2700      	movs	r7, #0
 8026a06:	463d      	mov	r5, r7
 8026a08:	463a      	mov	r2, r7
 8026a0a:	46bb      	mov	fp, r7
 8026a0c:	e7df      	b.n	80269ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8026a0e:	2700      	movs	r7, #0
 8026a10:	463a      	mov	r2, r7
 8026a12:	e7dc      	b.n	80269ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8026a14:	4607      	mov	r7, r0
 8026a16:	4602      	mov	r2, r0
 8026a18:	f1be 0f0f 	cmp.w	lr, #15
 8026a1c:	d8d9      	bhi.n	80269d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8026a1e:	b286      	uxth	r6, r0
 8026a20:	fa1f f98e 	uxth.w	r9, lr
 8026a24:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8026a28:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026a2c:	fb06 f809 	mul.w	r8, r6, r9
 8026a30:	0136      	lsls	r6, r6, #4
 8026a32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026a36:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8026a3a:	9601      	str	r6, [sp, #4]
 8026a3c:	ea4a 0101 	orr.w	r1, sl, r1
 8026a40:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8026a44:	fa1f f689 	uxth.w	r6, r9
 8026a48:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026a4c:	fb10 f90e 	smulbb	r9, r0, lr
 8026a50:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026a54:	9602      	str	r6, [sp, #8]
 8026a56:	460e      	mov	r6, r1
 8026a58:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8026a5c:	f1ce 0110 	rsb	r1, lr, #16
 8026a60:	ea4a 0303 	orr.w	r3, sl, r3
 8026a64:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026a68:	1a09      	subs	r1, r1, r0
 8026a6a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8026a6e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026a72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026a76:	4343      	muls	r3, r0
 8026a78:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8026a7c:	ea4a 0202 	orr.w	r2, sl, r2
 8026a80:	9802      	ldr	r0, [sp, #8]
 8026a82:	fb01 3106 	mla	r1, r1, r6, r3
 8026a86:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8026a8a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8026a8e:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8026a92:	fb09 1302 	mla	r3, r9, r2, r1
 8026a96:	9901      	ldr	r1, [sp, #4]
 8026a98:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026a9c:	9a03      	ldr	r2, [sp, #12]
 8026a9e:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8026aa2:	ea4a 0b0b 	orr.w	fp, sl, fp
 8026aa6:	8812      	ldrh	r2, [r2, #0]
 8026aa8:	1a09      	subs	r1, r1, r0
 8026aaa:	9801      	ldr	r0, [sp, #4]
 8026aac:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8026ab0:	eba0 0608 	sub.w	r6, r0, r8
 8026ab4:	b289      	uxth	r1, r1
 8026ab6:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8026aba:	b2b6      	uxth	r6, r6
 8026abc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026ac0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026ac4:	4374      	muls	r4, r6
 8026ac6:	10d0      	asrs	r0, r2, #3
 8026ac8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026acc:	fb0c 4401 	mla	r4, ip, r1, r4
 8026ad0:	9902      	ldr	r1, [sp, #8]
 8026ad2:	ea43 0e0e 	orr.w	lr, r3, lr
 8026ad6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026ada:	fb01 4505 	mla	r5, r1, r5, r4
 8026ade:	1211      	asrs	r1, r2, #8
 8026ae0:	00d2      	lsls	r2, r2, #3
 8026ae2:	fb08 5707 	mla	r7, r8, r7, r5
 8026ae6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026aea:	b2d2      	uxtb	r2, r2
 8026aec:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8026af0:	fa1f f38e 	uxth.w	r3, lr
 8026af4:	b2ff      	uxtb	r7, r7
 8026af6:	4379      	muls	r1, r7
 8026af8:	4378      	muls	r0, r7
 8026afa:	4357      	muls	r7, r2
 8026afc:	1c4a      	adds	r2, r1, #1
 8026afe:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8026b02:	1219      	asrs	r1, r3, #8
 8026b04:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026b08:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026b0c:	4a15      	ldr	r2, [pc, #84]	; (8026b64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x32c>)
 8026b0e:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8026b12:	1c42      	adds	r2, r0, #1
 8026b14:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026b18:	10da      	asrs	r2, r3, #3
 8026b1a:	00db      	lsls	r3, r3, #3
 8026b1c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026b20:	b2db      	uxtb	r3, r3
 8026b22:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8026b26:	00d2      	lsls	r2, r2, #3
 8026b28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026b2c:	430a      	orrs	r2, r1
 8026b2e:	1c79      	adds	r1, r7, #1
 8026b30:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8026b34:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8026b38:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8026b3c:	4313      	orrs	r3, r2
 8026b3e:	9a03      	ldr	r2, [sp, #12]
 8026b40:	8013      	strh	r3, [r2, #0]
 8026b42:	b005      	add	sp, #20
 8026b44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026b48:	280f      	cmp	r0, #15
 8026b4a:	f63f af42 	bhi.w	80269d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8026b4e:	4677      	mov	r7, lr
 8026b50:	4675      	mov	r5, lr
 8026b52:	4672      	mov	r2, lr
 8026b54:	46f3      	mov	fp, lr
 8026b56:	e762      	b.n	8026a1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8026b58:	0803217a 	.word	0x0803217a
 8026b5c:	0803273d 	.word	0x0803273d
 8026b60:	08032263 	.word	0x08032263
 8026b64:	fffff800 	.word	0xfffff800

08026b68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026b68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b6c:	ed2d 8b08 	vpush	{d8-d11}
 8026b70:	b093      	sub	sp, #76	; 0x4c
 8026b72:	eeb0 aa40 	vmov.f32	s20, s0
 8026b76:	eef0 9a60 	vmov.f32	s19, s1
 8026b7a:	9210      	str	r2, [sp, #64]	; 0x40
 8026b7c:	eeb0 9a41 	vmov.f32	s18, s2
 8026b80:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8026b82:	eeb0 8a62 	vmov.f32	s16, s5
 8026b86:	9011      	str	r0, [sp, #68]	; 0x44
 8026b88:	eef0 8a43 	vmov.f32	s17, s6
 8026b8c:	6850      	ldr	r0, [r2, #4]
 8026b8e:	eef0 ba44 	vmov.f32	s23, s8
 8026b92:	910e      	str	r1, [sp, #56]	; 0x38
 8026b94:	eeb0 ba64 	vmov.f32	s22, s9
 8026b98:	9306      	str	r3, [sp, #24]
 8026b9a:	eef0 aa45 	vmov.f32	s21, s10
 8026b9e:	6812      	ldr	r2, [r2, #0]
 8026ba0:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8026ba4:	fb00 1303 	mla	r3, r0, r3, r1
 8026ba8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8026bac:	9307      	str	r3, [sp, #28]
 8026bae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026bb0:	681b      	ldr	r3, [r3, #0]
 8026bb2:	9308      	str	r3, [sp, #32]
 8026bb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026bb6:	685b      	ldr	r3, [r3, #4]
 8026bb8:	9309      	str	r3, [sp, #36]	; 0x24
 8026bba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026bbc:	2b00      	cmp	r3, #0
 8026bbe:	dc03      	bgt.n	8026bc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8026bc0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026bc2:	2b00      	cmp	r3, #0
 8026bc4:	f340 83b8 	ble.w	8027338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 8026bc8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026bca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026bce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026bd2:	1e48      	subs	r0, r1, #1
 8026bd4:	1e55      	subs	r5, r2, #1
 8026bd6:	9b06      	ldr	r3, [sp, #24]
 8026bd8:	2b00      	cmp	r3, #0
 8026bda:	f340 819b 	ble.w	8026f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8026bde:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8026be0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026be2:	1436      	asrs	r6, r6, #16
 8026be4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8026be8:	d406      	bmi.n	8026bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bea:	4286      	cmp	r6, r0
 8026bec:	da04      	bge.n	8026bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bee:	2b00      	cmp	r3, #0
 8026bf0:	db02      	blt.n	8026bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8026bf2:	42ab      	cmp	r3, r5
 8026bf4:	f2c0 818f 	blt.w	8026f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8026bf8:	3601      	adds	r6, #1
 8026bfa:	f100 817c 	bmi.w	8026ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8026bfe:	42b1      	cmp	r1, r6
 8026c00:	f2c0 8179 	blt.w	8026ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8026c04:	3301      	adds	r3, #1
 8026c06:	f100 8176 	bmi.w	8026ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8026c0a:	429a      	cmp	r2, r3
 8026c0c:	f2c0 8173 	blt.w	8026ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38e>
 8026c10:	9b06      	ldr	r3, [sp, #24]
 8026c12:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026c16:	9f07      	ldr	r7, [sp, #28]
 8026c18:	930f      	str	r3, [sp, #60]	; 0x3c
 8026c1a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026c1c:	2b00      	cmp	r3, #0
 8026c1e:	f340 819c 	ble.w	8026f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026c22:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026c24:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8026c26:	1418      	asrs	r0, r3, #16
 8026c28:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026c2a:	142d      	asrs	r5, r5, #16
 8026c2c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8026c30:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026c32:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8026c36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8026c38:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8026c3c:	f100 81f0 	bmi.w	8027020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8026c40:	f102 3eff 	add.w	lr, r2, #4294967295
 8026c44:	4575      	cmp	r5, lr
 8026c46:	f280 81eb 	bge.w	8027020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8026c4a:	2800      	cmp	r0, #0
 8026c4c:	f2c0 81e8 	blt.w	8027020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8026c50:	f103 3eff 	add.w	lr, r3, #4294967295
 8026c54:	4570      	cmp	r0, lr
 8026c56:	f280 81e3 	bge.w	8027020 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8026c5a:	b212      	sxth	r2, r2
 8026c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026c5e:	fa1f fe81 	uxth.w	lr, r1
 8026c62:	fb00 5002 	mla	r0, r0, r2, r5
 8026c66:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8026c6a:	eb03 0a00 	add.w	sl, r3, r0
 8026c6e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8026c72:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8026c76:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8026c7a:	b29b      	uxth	r3, r3
 8026c7c:	f1bc 0f00 	cmp.w	ip, #0
 8026c80:	f000 81b1 	beq.w	8026fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47e>
 8026c84:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8026c88:	eb0a 0b02 	add.w	fp, sl, r2
 8026c8c:	fa1f fa8c 	uxth.w	sl, ip
 8026c90:	940a      	str	r4, [sp, #40]	; 0x28
 8026c92:	fb0a fe0e 	mul.w	lr, sl, lr
 8026c96:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8026c9a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8026c9e:	eba5 050e 	sub.w	r5, r5, lr
 8026ca2:	940b      	str	r4, [sp, #44]	; 0x2c
 8026ca4:	fa1f fa8a 	uxth.w	sl, sl
 8026ca8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026caa:	b2ad      	uxth	r5, r5
 8026cac:	eba3 030a 	sub.w	r3, r3, sl
 8026cb0:	fb08 f505 	mul.w	r5, r8, r5
 8026cb4:	b29b      	uxth	r3, r3
 8026cb6:	fb09 5303 	mla	r3, r9, r3, r5
 8026cba:	fb0a 3304 	mla	r3, sl, r4, r3
 8026cbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026cc0:	fb0e 3304 	mla	r3, lr, r4, r3
 8026cc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026cc8:	2b00      	cmp	r3, #0
 8026cca:	f000 8107 	beq.w	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8026cce:	9c08      	ldr	r4, [sp, #32]
 8026cd0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8026cd4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8026cd8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8026cdc:	f000 8188 	beq.w	8026ff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8026ce0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8026ce4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8026ce8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026cec:	fb0a fe0e 	mul.w	lr, sl, lr
 8026cf0:	fb09 f000 	mul.w	r0, r9, r0
 8026cf4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8026cf8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026cfc:	f100 0b20 	add.w	fp, r0, #32
 8026d00:	44ce      	add	lr, r9
 8026d02:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8026d06:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026d0a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8026d0e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8026d12:	ea4e 0909 	orr.w	r9, lr, r9
 8026d16:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8026d1a:	8868      	ldrh	r0, [r5, #2]
 8026d1c:	d019      	beq.n	8026d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8026d1e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8026d22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8026d26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026d2a:	fb0a fe0e 	mul.w	lr, sl, lr
 8026d2e:	fb08 f800 	mul.w	r8, r8, r0
 8026d32:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8026d36:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8026d3a:	f108 0b20 	add.w	fp, r8, #32
 8026d3e:	4486      	add	lr, r0
 8026d40:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8026d44:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8026d48:	0a00      	lsrs	r0, r0, #8
 8026d4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8026d4e:	ea4e 0000 	orr.w	r0, lr, r0
 8026d52:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8026d56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8026d5a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8026d5e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8026d62:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8026d66:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026d6a:	ea4e 0909 	orr.w	r9, lr, r9
 8026d6e:	ea4a 0000 	orr.w	r0, sl, r0
 8026d72:	f1bc 0f00 	cmp.w	ip, #0
 8026d76:	f000 813d 	beq.w	8026ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026d7a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8026d7e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026d80:	3a01      	subs	r2, #1
 8026d82:	2cff      	cmp	r4, #255	; 0xff
 8026d84:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8026d88:	f102 0202 	add.w	r2, r2, #2
 8026d8c:	eb05 0e02 	add.w	lr, r5, r2
 8026d90:	5aaa      	ldrh	r2, [r5, r2]
 8026d92:	d018      	beq.n	8026dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8026d94:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8026d98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026da0:	fb04 fa02 	mul.w	sl, r4, r2
 8026da4:	fb08 f805 	mul.w	r8, r8, r5
 8026da8:	f10a 0520 	add.w	r5, sl, #32
 8026dac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8026db0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026db4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8026db8:	4442      	add	r2, r8
 8026dba:	0a2d      	lsrs	r5, r5, #8
 8026dbc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8026dc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026dc4:	432a      	orrs	r2, r5
 8026dc6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026dc8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8026dcc:	2cff      	cmp	r4, #255	; 0xff
 8026dce:	d01a      	beq.n	8026e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29e>
 8026dd0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8026dd4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8026dd8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8026ddc:	fb04 fa05 	mul.w	sl, r4, r5
 8026de0:	fb08 f80e 	mul.w	r8, r8, lr
 8026de4:	f10a 0e20 	add.w	lr, sl, #32
 8026de8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8026dec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8026df0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8026df4:	4445      	add	r5, r8
 8026df6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8026dfa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8026dfe:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8026e02:	ea45 050e 	orr.w	r5, r5, lr
 8026e06:	fb1c fe01 	smulbb	lr, ip, r1
 8026e0a:	f1cc 0810 	rsb	r8, ip, #16
 8026e0e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8026e12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026e16:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8026e1a:	eba8 0801 	sub.w	r8, r8, r1
 8026e1e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8026e22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8026e26:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8026e2a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026e2e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8026e32:	ea4a 0202 	orr.w	r2, sl, r2
 8026e36:	4341      	muls	r1, r0
 8026e38:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8026e3c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8026e40:	fb09 1108 	mla	r1, r9, r8, r1
 8026e44:	ea4b 0505 	orr.w	r5, fp, r5
 8026e48:	fb0c 1102 	mla	r1, ip, r2, r1
 8026e4c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8026e50:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8026e54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8026e58:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026e5c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026e60:	ea42 0e0e 	orr.w	lr, r2, lr
 8026e64:	fa1f f28e 	uxth.w	r2, lr
 8026e68:	2bff      	cmp	r3, #255	; 0xff
 8026e6a:	f000 80d7 	beq.w	802701c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8026e6e:	f8b7 c000 	ldrh.w	ip, [r7]
 8026e72:	43db      	mvns	r3, r3
 8026e74:	ea4f 202c 	mov.w	r0, ip, asr #8
 8026e78:	fa5f fe83 	uxtb.w	lr, r3
 8026e7c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026e80:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8026e84:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8026e88:	fb00 f00e 	mul.w	r0, r0, lr
 8026e8c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8026e90:	b2db      	uxtb	r3, r3
 8026e92:	1c41      	adds	r1, r0, #1
 8026e94:	fb05 f50e 	mul.w	r5, r5, lr
 8026e98:	fb03 f30e 	mul.w	r3, r3, lr
 8026e9c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026ea0:	1210      	asrs	r0, r2, #8
 8026ea2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026ea6:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8026eaa:	496c      	ldr	r1, [pc, #432]	; (802705c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>)
 8026eac:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 8026eb0:	1c69      	adds	r1, r5, #1
 8026eb2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8026eb6:	10d1      	asrs	r1, r2, #3
 8026eb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026ebc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8026ec0:	00c9      	lsls	r1, r1, #3
 8026ec2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026ec6:	4301      	orrs	r1, r0
 8026ec8:	1c58      	adds	r0, r3, #1
 8026eca:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026ece:	00d3      	lsls	r3, r2, #3
 8026ed0:	b2db      	uxtb	r3, r3
 8026ed2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026ed6:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8026eda:	803b      	strh	r3, [r7, #0]
 8026edc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026ede:	3702      	adds	r7, #2
 8026ee0:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8026ee2:	4413      	add	r3, r2
 8026ee4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8026ee6:	9325      	str	r3, [sp, #148]	; 0x94
 8026ee8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026eea:	441a      	add	r2, r3
 8026eec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026eee:	3b01      	subs	r3, #1
 8026ef0:	9226      	str	r2, [sp, #152]	; 0x98
 8026ef2:	930f      	str	r3, [sp, #60]	; 0x3c
 8026ef4:	e691      	b.n	8026c1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8026ef6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026ef8:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8026efa:	9c26      	ldr	r4, [sp, #152]	; 0x98
 8026efc:	4433      	add	r3, r6
 8026efe:	9325      	str	r3, [sp, #148]	; 0x94
 8026f00:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026f02:	441c      	add	r4, r3
 8026f04:	9b06      	ldr	r3, [sp, #24]
 8026f06:	3b01      	subs	r3, #1
 8026f08:	9426      	str	r4, [sp, #152]	; 0x98
 8026f0a:	9306      	str	r3, [sp, #24]
 8026f0c:	9b07      	ldr	r3, [sp, #28]
 8026f0e:	3302      	adds	r3, #2
 8026f10:	9307      	str	r3, [sp, #28]
 8026f12:	e660      	b.n	8026bd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8026f14:	d028      	beq.n	8026f68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8026f16:	9b06      	ldr	r3, [sp, #24]
 8026f18:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8026f1a:	3b01      	subs	r3, #1
 8026f1c:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8026f1e:	fb00 5003 	mla	r0, r0, r3, r5
 8026f22:	1400      	asrs	r0, r0, #16
 8026f24:	f53f ae74 	bmi.w	8026c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8026f28:	3901      	subs	r1, #1
 8026f2a:	4288      	cmp	r0, r1
 8026f2c:	f6bf ae70 	bge.w	8026c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8026f30:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8026f32:	9826      	ldr	r0, [sp, #152]	; 0x98
 8026f34:	fb01 0303 	mla	r3, r1, r3, r0
 8026f38:	141b      	asrs	r3, r3, #16
 8026f3a:	f53f ae69 	bmi.w	8026c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8026f3e:	3a01      	subs	r2, #1
 8026f40:	4293      	cmp	r3, r2
 8026f42:	f6bf ae65 	bge.w	8026c10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8026f46:	9b06      	ldr	r3, [sp, #24]
 8026f48:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8026f4c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8026f50:	930f      	str	r3, [sp, #60]	; 0x3c
 8026f52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026f54:	2b00      	cmp	r3, #0
 8026f56:	f300 8083 	bgt.w	8027060 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 8026f5a:	9b06      	ldr	r3, [sp, #24]
 8026f5c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026f60:	9b07      	ldr	r3, [sp, #28]
 8026f62:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8026f66:	9307      	str	r3, [sp, #28]
 8026f68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026f6a:	2b00      	cmp	r3, #0
 8026f6c:	f340 81e4 	ble.w	8027338 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d0>
 8026f70:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026f74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026f76:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8026f7a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8026f7e:	eef0 6a48 	vmov.f32	s13, s16
 8026f82:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8026f86:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8026f8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f8e:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8026f92:	eef0 6a68 	vmov.f32	s13, s17
 8026f96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026f9a:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8026f9e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8026fa2:	ee69 7a27 	vmul.f32	s15, s18, s15
 8026fa6:	ee37 8a48 	vsub.f32	s16, s14, s16
 8026faa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8026fae:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8026fb2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8026fb6:	ee18 2a10 	vmov	r2, s16
 8026fba:	eeb0 8a47 	vmov.f32	s16, s14
 8026fbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8026fc2:	ee18 2a90 	vmov	r2, s17
 8026fc6:	9327      	str	r3, [sp, #156]	; 0x9c
 8026fc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026fca:	eef0 8a67 	vmov.f32	s17, s15
 8026fce:	fb92 f3f3 	sdiv	r3, r2, r3
 8026fd2:	9328      	str	r3, [sp, #160]	; 0xa0
 8026fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026fd6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026fd8:	3b01      	subs	r3, #1
 8026fda:	930e      	str	r3, [sp, #56]	; 0x38
 8026fdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026fde:	bf08      	it	eq
 8026fe0:	4613      	moveq	r3, r2
 8026fe2:	9306      	str	r3, [sp, #24]
 8026fe4:	e5e9      	b.n	8026bba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026fe6:	fb08 f505 	mul.w	r5, r8, r5
 8026fea:	fb09 5303 	mla	r3, r9, r3, r5
 8026fee:	e669      	b.n	8026cc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8026ff0:	4681      	mov	r9, r0
 8026ff2:	e690      	b.n	8026d16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8026ff4:	f1c1 0210 	rsb	r2, r1, #16
 8026ff8:	4341      	muls	r1, r0
 8026ffa:	fb09 1902 	mla	r9, r9, r2, r1
 8026ffe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8027002:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8027006:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802700a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802700e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8027012:	ea42 0909 	orr.w	r9, r2, r9
 8027016:	fa1f f289 	uxth.w	r2, r9
 802701a:	e725      	b.n	8026e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802701c:	803a      	strh	r2, [r7, #0]
 802701e:	e75d      	b.n	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8027020:	f115 0e01 	adds.w	lr, r5, #1
 8027024:	f53f af5a 	bmi.w	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8027028:	4572      	cmp	r2, lr
 802702a:	f6ff af57 	blt.w	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802702e:	f110 0e01 	adds.w	lr, r0, #1
 8027032:	f53f af53 	bmi.w	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8027036:	4573      	cmp	r3, lr
 8027038:	f6ff af50 	blt.w	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802703c:	b21b      	sxth	r3, r3
 802703e:	b212      	sxth	r2, r2
 8027040:	9301      	str	r3, [sp, #4]
 8027042:	9200      	str	r2, [sp, #0]
 8027044:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8027048:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802704c:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8027050:	4639      	mov	r1, r7
 8027052:	9811      	ldr	r0, [sp, #68]	; 0x44
 8027054:	f7ff fbf0 	bl	8026838 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8027058:	e740      	b.n	8026edc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 802705a:	bf00      	nop
 802705c:	fffff800 	.word	0xfffff800
 8027060:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8027062:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8027066:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027068:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802706c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802706e:	fa1f fc82 	uxth.w	ip, r2
 8027072:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027076:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027078:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802707c:	141f      	asrs	r7, r3, #16
 802707e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8027080:	141b      	asrs	r3, r3, #16
 8027082:	fb01 3707 	mla	r7, r1, r7, r3
 8027086:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027088:	eb03 0a07 	add.w	sl, r3, r7
 802708c:	f813 9007 	ldrb.w	r9, [r3, r7]
 8027090:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8027094:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8027098:	b29b      	uxth	r3, r3
 802709a:	2d00      	cmp	r5, #0
 802709c:	f000 8131 	beq.w	8027302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x79a>
 80270a0:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80270a4:	eb0a 0b01 	add.w	fp, sl, r1
 80270a8:	fa1f fa85 	uxth.w	sl, r5
 80270ac:	940c      	str	r4, [sp, #48]	; 0x30
 80270ae:	fb0a fc0c 	mul.w	ip, sl, ip
 80270b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80270b6:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80270ba:	eba0 000c 	sub.w	r0, r0, ip
 80270be:	940d      	str	r4, [sp, #52]	; 0x34
 80270c0:	fa1f fa8a 	uxth.w	sl, sl
 80270c4:	b280      	uxth	r0, r0
 80270c6:	eba3 030a 	sub.w	r3, r3, sl
 80270ca:	fb08 f000 	mul.w	r0, r8, r0
 80270ce:	b29b      	uxth	r3, r3
 80270d0:	fb09 0303 	mla	r3, r9, r3, r0
 80270d4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80270d6:	fb0a 3300 	mla	r3, sl, r0, r3
 80270da:	fb0c 3304 	mla	r3, ip, r4, r3
 80270de:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80270e2:	2b00      	cmp	r3, #0
 80270e4:	f000 80ff 	beq.w	80272e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80270e8:	9808      	ldr	r0, [sp, #32]
 80270ea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80270ee:	9c08      	ldr	r4, [sp, #32]
 80270f0:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80270f4:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80270f8:	f000 8108 	beq.w	802730c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80270fc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8027100:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8027104:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8027108:	fb0a fc0c 	mul.w	ip, sl, ip
 802710c:	fb09 f707 	mul.w	r7, r9, r7
 8027110:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8027114:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8027118:	f107 0b20 	add.w	fp, r7, #32
 802711c:	44cc      	add	ip, r9
 802711e:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8027122:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8027126:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802712a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802712e:	ea4c 0909 	orr.w	r9, ip, r9
 8027132:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8027136:	8847      	ldrh	r7, [r0, #2]
 8027138:	d019      	beq.n	802716e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x606>
 802713a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802713e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8027142:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8027146:	fb0a fc0c 	mul.w	ip, sl, ip
 802714a:	fb08 f807 	mul.w	r8, r8, r7
 802714e:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8027152:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8027156:	f108 0b20 	add.w	fp, r8, #32
 802715a:	44bc      	add	ip, r7
 802715c:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8027160:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8027164:	0a3f      	lsrs	r7, r7, #8
 8027166:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802716a:	ea4c 0707 	orr.w	r7, ip, r7
 802716e:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8027172:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8027176:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802717a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802717e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8027182:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8027186:	ea4c 0909 	orr.w	r9, ip, r9
 802718a:	ea4a 0707 	orr.w	r7, sl, r7
 802718e:	2d00      	cmp	r5, #0
 8027190:	f000 80be 	beq.w	8027310 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8027194:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8027198:	3901      	subs	r1, #1
 802719a:	0049      	lsls	r1, r1, #1
 802719c:	3102      	adds	r1, #2
 802719e:	eb00 0c01 	add.w	ip, r0, r1
 80271a2:	5a41      	ldrh	r1, [r0, r1]
 80271a4:	980c      	ldr	r0, [sp, #48]	; 0x30
 80271a6:	28ff      	cmp	r0, #255	; 0xff
 80271a8:	d019      	beq.n	80271de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x676>
 80271aa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80271ae:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80271b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80271b4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80271b8:	fb04 fa01 	mul.w	sl, r4, r1
 80271bc:	fb08 f800 	mul.w	r8, r8, r0
 80271c0:	f10a 0020 	add.w	r0, sl, #32
 80271c4:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80271c8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80271cc:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80271d0:	4441      	add	r1, r8
 80271d2:	0a00      	lsrs	r0, r0, #8
 80271d4:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80271d8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80271dc:	4301      	orrs	r1, r0
 80271de:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80271e0:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80271e4:	2cff      	cmp	r4, #255	; 0xff
 80271e6:	d01a      	beq.n	802721e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80271e8:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80271ec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80271f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80271f4:	fb04 fa00 	mul.w	sl, r4, r0
 80271f8:	fb08 f80c 	mul.w	r8, r8, ip
 80271fc:	f10a 0c20 	add.w	ip, sl, #32
 8027200:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8027204:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8027208:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802720c:	4440      	add	r0, r8
 802720e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8027212:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8027216:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802721a:	ea40 000c 	orr.w	r0, r0, ip
 802721e:	fb15 fc02 	smulbb	ip, r5, r2
 8027222:	f1c5 0810 	rsb	r8, r5, #16
 8027226:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802722a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802722e:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8027232:	eba8 0802 	sub.w	r8, r8, r2
 8027236:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802723a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802723e:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8027242:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027246:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802724a:	ea4a 0101 	orr.w	r1, sl, r1
 802724e:	437a      	muls	r2, r7
 8027250:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8027254:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027258:	fb09 2208 	mla	r2, r9, r8, r2
 802725c:	ea4b 0000 	orr.w	r0, fp, r0
 8027260:	fb05 2201 	mla	r2, r5, r1, r2
 8027264:	fb0c 2200 	mla	r2, ip, r0, r2
 8027268:	0d57      	lsrs	r7, r2, #21
 802726a:	0952      	lsrs	r2, r2, #5
 802726c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8027270:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027274:	433a      	orrs	r2, r7
 8027276:	2bff      	cmp	r3, #255	; 0xff
 8027278:	b292      	uxth	r2, r2
 802727a:	d05a      	beq.n	8027332 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ca>
 802727c:	f8be 7000 	ldrh.w	r7, [lr]
 8027280:	43db      	mvns	r3, r3
 8027282:	4c30      	ldr	r4, [pc, #192]	; (8027344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>)
 8027284:	1238      	asrs	r0, r7, #8
 8027286:	fa5f fc83 	uxtb.w	ip, r3
 802728a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802728e:	10fd      	asrs	r5, r7, #3
 8027290:	00fb      	lsls	r3, r7, #3
 8027292:	fb00 f00c 	mul.w	r0, r0, ip
 8027296:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802729a:	b2db      	uxtb	r3, r3
 802729c:	fb05 f10c 	mul.w	r1, r5, ip
 80272a0:	1c45      	adds	r5, r0, #1
 80272a2:	fb03 f30c 	mul.w	r3, r3, ip
 80272a6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80272aa:	1215      	asrs	r5, r2, #8
 80272ac:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80272b0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80272b4:	1c4d      	adds	r5, r1, #1
 80272b6:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80272ba:	10d1      	asrs	r1, r2, #3
 80272bc:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80272c0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80272c4:	00d2      	lsls	r2, r2, #3
 80272c6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80272ca:	00c9      	lsls	r1, r1, #3
 80272cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80272d0:	4308      	orrs	r0, r1
 80272d2:	1c59      	adds	r1, r3, #1
 80272d4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80272d8:	b2d1      	uxtb	r1, r2
 80272da:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80272de:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 80272e2:	f8ae 0000 	strh.w	r0, [lr]
 80272e6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80272e8:	f10e 0e02 	add.w	lr, lr, #2
 80272ec:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80272ee:	4413      	add	r3, r2
 80272f0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80272f2:	9325      	str	r3, [sp, #148]	; 0x94
 80272f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80272f6:	441a      	add	r2, r3
 80272f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80272fa:	3b01      	subs	r3, #1
 80272fc:	9226      	str	r2, [sp, #152]	; 0x98
 80272fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8027300:	e627      	b.n	8026f52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8027302:	fb08 f000 	mul.w	r0, r8, r0
 8027306:	fb09 0303 	mla	r3, r9, r3, r0
 802730a:	e6e8      	b.n	80270de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x576>
 802730c:	46b9      	mov	r9, r7
 802730e:	e710      	b.n	8027132 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ca>
 8027310:	f1c2 0110 	rsb	r1, r2, #16
 8027314:	437a      	muls	r2, r7
 8027316:	fb09 2901 	mla	r9, r9, r1, r2
 802731a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802731e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8027322:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8027326:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802732a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802732e:	4302      	orrs	r2, r0
 8027330:	e7a1      	b.n	8027276 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70e>
 8027332:	f8ae 2000 	strh.w	r2, [lr]
 8027336:	e7d6      	b.n	80272e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8027338:	b013      	add	sp, #76	; 0x4c
 802733a:	ecbd 8b08 	vpop	{d8-d11}
 802733e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027342:	bf00      	nop
 8027344:	fffff800 	.word	0xfffff800

08027348 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8027348:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802734c:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8027350:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8027354:	fb0c 4e03 	mla	lr, ip, r3, r4
 8027358:	f1bc 0f00 	cmp.w	ip, #0
 802735c:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8027360:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8027364:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8027368:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 802736c:	8808      	ldrh	r0, [r1, #0]
 802736e:	db2f      	blt.n	80273d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8027370:	45e2      	cmp	sl, ip
 8027372:	dd2d      	ble.n	80273d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8027374:	2c00      	cmp	r4, #0
 8027376:	db29      	blt.n	80273cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8027378:	42a3      	cmp	r3, r4
 802737a:	dd27      	ble.n	80273cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 802737c:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8027380:	1c62      	adds	r2, r4, #1
 8027382:	d428      	bmi.n	80273d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8027384:	4293      	cmp	r3, r2
 8027386:	dd26      	ble.n	80273d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8027388:	b32f      	cbz	r7, 80273d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 802738a:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 802738e:	f11c 0c01 	adds.w	ip, ip, #1
 8027392:	d424      	bmi.n	80273de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8027394:	45e2      	cmp	sl, ip
 8027396:	dd22      	ble.n	80273de <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8027398:	2e00      	cmp	r6, #0
 802739a:	f000 809c 	beq.w	80274d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 802739e:	2c00      	cmp	r4, #0
 80273a0:	db1b      	blt.n	80273da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80273a2:	42a3      	cmp	r3, r4
 80273a4:	dd19      	ble.n	80273da <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 80273a6:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 80273aa:	3401      	adds	r4, #1
 80273ac:	d41a      	bmi.n	80273e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80273ae:	42a3      	cmp	r3, r4
 80273b0:	dd18      	ble.n	80273e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 80273b2:	b1cf      	cbz	r7, 80273e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 80273b4:	3301      	adds	r3, #1
 80273b6:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 80273ba:	2f0f      	cmp	r7, #15
 80273bc:	d915      	bls.n	80273ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 80273be:	4b49      	ldr	r3, [pc, #292]	; (80274e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 80273c0:	f240 11ef 	movw	r1, #495	; 0x1ef
 80273c4:	4a48      	ldr	r2, [pc, #288]	; (80274e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 80273c6:	4849      	ldr	r0, [pc, #292]	; (80274ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 80273c8:	f004 fd8e 	bl	802bee8 <__assert_func>
 80273cc:	4681      	mov	r9, r0
 80273ce:	e7d7      	b.n	8027380 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 80273d0:	4686      	mov	lr, r0
 80273d2:	4681      	mov	r9, r0
 80273d4:	e7db      	b.n	802738e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80273d6:	4686      	mov	lr, r0
 80273d8:	e7d9      	b.n	802738e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 80273da:	4684      	mov	ip, r0
 80273dc:	e7e5      	b.n	80273aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 80273de:	4603      	mov	r3, r0
 80273e0:	4684      	mov	ip, r0
 80273e2:	e7ea      	b.n	80273ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80273e4:	4603      	mov	r3, r0
 80273e6:	e7e8      	b.n	80273ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 80273e8:	4603      	mov	r3, r0
 80273ea:	2e0f      	cmp	r6, #15
 80273ec:	d8e7      	bhi.n	80273be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80273ee:	fb17 f806 	smulbb	r8, r7, r6
 80273f2:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80273f6:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 80273fa:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80273fe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8027402:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8027406:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802740a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802740e:	ea44 0909 	orr.w	r9, r4, r9
 8027412:	f1c6 0410 	rsb	r4, r6, #16
 8027416:	041a      	lsls	r2, r3, #16
 8027418:	ea4a 0e0e 	orr.w	lr, sl, lr
 802741c:	1be4      	subs	r4, r4, r7
 802741e:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8027422:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027426:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802742a:	fb07 fe0e 	mul.w	lr, r7, lr
 802742e:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8027432:	4313      	orrs	r3, r2
 8027434:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8027438:	fb04 e409 	mla	r4, r4, r9, lr
 802743c:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8027440:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027444:	b2af      	uxth	r7, r5
 8027446:	fb08 4303 	mla	r3, r8, r3, r4
 802744a:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 802744e:	43ed      	mvns	r5, r5
 8027450:	4322      	orrs	r2, r4
 8027452:	b2ed      	uxtb	r5, r5
 8027454:	fb06 3202 	mla	r2, r6, r2, r3
 8027458:	10c6      	asrs	r6, r0, #3
 802745a:	0d53      	lsrs	r3, r2, #21
 802745c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8027460:	0952      	lsrs	r2, r2, #5
 8027462:	fb16 f605 	smulbb	r6, r6, r5
 8027466:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802746a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802746e:	431a      	orrs	r2, r3
 8027470:	b293      	uxth	r3, r2
 8027472:	1202      	asrs	r2, r0, #8
 8027474:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8027478:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802747c:	00dc      	lsls	r4, r3, #3
 802747e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8027482:	fb12 f205 	smulbb	r2, r2, r5
 8027486:	b2e4      	uxtb	r4, r4
 8027488:	fb0c 2c07 	mla	ip, ip, r7, r2
 802748c:	10da      	asrs	r2, r3, #3
 802748e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8027492:	fa1f fc8c 	uxth.w	ip, ip
 8027496:	fb02 6207 	mla	r2, r2, r7, r6
 802749a:	f10c 0301 	add.w	r3, ip, #1
 802749e:	b296      	uxth	r6, r2
 80274a0:	00c2      	lsls	r2, r0, #3
 80274a2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80274a6:	b2d2      	uxtb	r2, r2
 80274a8:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80274ac:	fb12 f205 	smulbb	r2, r2, r5
 80274b0:	fb04 2207 	mla	r2, r4, r7, r2
 80274b4:	b292      	uxth	r2, r2
 80274b6:	1c50      	adds	r0, r2, #1
 80274b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80274bc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80274c0:	4313      	orrs	r3, r2
 80274c2:	1c72      	adds	r2, r6, #1
 80274c4:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 80274c8:	0952      	lsrs	r2, r2, #5
 80274ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80274ce:	4313      	orrs	r3, r2
 80274d0:	800b      	strh	r3, [r1, #0]
 80274d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80274d6:	2f0f      	cmp	r7, #15
 80274d8:	f63f af71 	bhi.w	80273be <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 80274dc:	4603      	mov	r3, r0
 80274de:	4684      	mov	ip, r0
 80274e0:	e785      	b.n	80273ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 80274e2:	bf00      	nop
 80274e4:	0803217a 	.word	0x0803217a
 80274e8:	080327e6 	.word	0x080327e6
 80274ec:	08032263 	.word	0x08032263

080274f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80274f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80274f4:	ed2d 8b08 	vpush	{d8-d11}
 80274f8:	b093      	sub	sp, #76	; 0x4c
 80274fa:	461d      	mov	r5, r3
 80274fc:	eeb0 aa40 	vmov.f32	s20, s0
 8027500:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8027502:	eef0 9a60 	vmov.f32	s19, s1
 8027506:	9210      	str	r2, [sp, #64]	; 0x40
 8027508:	eeb0 9a41 	vmov.f32	s18, s2
 802750c:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 8027510:	eeb0 8a62 	vmov.f32	s16, s5
 8027514:	910a      	str	r1, [sp, #40]	; 0x28
 8027516:	eef0 8a43 	vmov.f32	s17, s6
 802751a:	920b      	str	r2, [sp, #44]	; 0x2c
 802751c:	eef0 ba44 	vmov.f32	s23, s8
 8027520:	6859      	ldr	r1, [r3, #4]
 8027522:	eeb0 ba64 	vmov.f32	s22, s9
 8027526:	681b      	ldr	r3, [r3, #0]
 8027528:	eef0 aa45 	vmov.f32	s21, s10
 802752c:	9011      	str	r0, [sp, #68]	; 0x44
 802752e:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 8027532:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8027536:	fb01 2707 	mla	r7, r1, r7, r2
 802753a:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802753e:	9307      	str	r3, [sp, #28]
 8027540:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027542:	681b      	ldr	r3, [r3, #0]
 8027544:	9309      	str	r3, [sp, #36]	; 0x24
 8027546:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027548:	43db      	mvns	r3, r3
 802754a:	b2db      	uxtb	r3, r3
 802754c:	9308      	str	r3, [sp, #32]
 802754e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027550:	2b00      	cmp	r3, #0
 8027552:	dc03      	bgt.n	802755c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027554:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8027556:	2b00      	cmp	r3, #0
 8027558:	f340 8205 	ble.w	8027966 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802755c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802755e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027562:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027566:	1e48      	subs	r0, r1, #1
 8027568:	f102 3cff 	add.w	ip, r2, #4294967295
 802756c:	2d00      	cmp	r5, #0
 802756e:	f340 80da 	ble.w	8027726 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8027572:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027576:	ea4f 4326 	mov.w	r3, r6, asr #16
 802757a:	d406      	bmi.n	802758a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802757c:	4586      	cmp	lr, r0
 802757e:	da04      	bge.n	802758a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8027580:	2b00      	cmp	r3, #0
 8027582:	db02      	blt.n	802758a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8027584:	4563      	cmp	r3, ip
 8027586:	f2c0 80cf 	blt.w	8027728 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802758a:	f11e 0e01 	adds.w	lr, lr, #1
 802758e:	f100 80c1 	bmi.w	8027714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8027592:	4571      	cmp	r1, lr
 8027594:	f2c0 80be 	blt.w	8027714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8027598:	3301      	adds	r3, #1
 802759a:	f100 80bb 	bmi.w	8027714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 802759e:	429a      	cmp	r2, r3
 80275a0:	f2c0 80b8 	blt.w	8027714 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80275a4:	46a9      	mov	r9, r5
 80275a6:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80275aa:	f1b9 0f00 	cmp.w	r9, #0
 80275ae:	f340 80d8 	ble.w	8027762 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80275b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80275b4:	1421      	asrs	r1, r4, #16
 80275b6:	ea4f 4026 	mov.w	r0, r6, asr #16
 80275ba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80275be:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80275c2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80275c6:	f100 8112 	bmi.w	80277ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80275ca:	f10e 3aff 	add.w	sl, lr, #4294967295
 80275ce:	4551      	cmp	r1, sl
 80275d0:	f280 810d 	bge.w	80277ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80275d4:	2800      	cmp	r0, #0
 80275d6:	f2c0 810a 	blt.w	80277ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80275da:	f103 3aff 	add.w	sl, r3, #4294967295
 80275de:	4550      	cmp	r0, sl
 80275e0:	f280 8105 	bge.w	80277ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80275e4:	fa0f f38e 	sxth.w	r3, lr
 80275e8:	fb00 1103 	mla	r1, r0, r3, r1
 80275ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 80275ee:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80275f2:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80275f6:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80275fa:	f1bc 0f00 	cmp.w	ip, #0
 80275fe:	d007      	beq.n	8027610 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 8027600:	005b      	lsls	r3, r3, #1
 8027602:	eb0a 0003 	add.w	r0, sl, r3
 8027606:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802760a:	930c      	str	r3, [sp, #48]	; 0x30
 802760c:	8843      	ldrh	r3, [r0, #2]
 802760e:	930d      	str	r3, [sp, #52]	; 0x34
 8027610:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8027614:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8027618:	fb12 f30c 	smulbb	r3, r2, ip
 802761c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8027620:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027624:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027628:	10db      	asrs	r3, r3, #3
 802762a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802762e:	ea40 000e 	orr.w	r0, r0, lr
 8027632:	f1cc 0e10 	rsb	lr, ip, #16
 8027636:	ea4a 0101 	orr.w	r1, sl, r1
 802763a:	9f08      	ldr	r7, [sp, #32]
 802763c:	ebae 0e02 	sub.w	lr, lr, r2
 8027640:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027644:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8027648:	4351      	muls	r1, r2
 802764a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802764c:	fb0e 1e00 	mla	lr, lr, r0, r1
 8027650:	990c      	ldr	r1, [sp, #48]	; 0x30
 8027652:	0410      	lsls	r0, r2, #16
 8027654:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027658:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802765c:	4310      	orrs	r0, r2
 802765e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027660:	0412      	lsls	r2, r2, #16
 8027662:	fb03 e000 	mla	r0, r3, r0, lr
 8027666:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802766a:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802766e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027672:	f8b8 c000 	ldrh.w	ip, [r8]
 8027676:	ea42 020e 	orr.w	r2, r2, lr
 802767a:	ea4f 212c 	mov.w	r1, ip, asr #8
 802767e:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8027682:	fb03 0302 	mla	r3, r3, r2, r0
 8027686:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802768a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802768e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8027692:	fb11 f107 	smulbb	r1, r1, r7
 8027696:	0d5a      	lsrs	r2, r3, #21
 8027698:	095b      	lsrs	r3, r3, #5
 802769a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802769e:	fa5f fc8c 	uxtb.w	ip, ip
 80276a2:	fb1e fe07 	smulbb	lr, lr, r7
 80276a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80276aa:	fb1c fc07 	smulbb	ip, ip, r7
 80276ae:	4313      	orrs	r3, r2
 80276b0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80276b4:	b29b      	uxth	r3, r3
 80276b6:	1218      	asrs	r0, r3, #8
 80276b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80276bc:	fb00 1002 	mla	r0, r0, r2, r1
 80276c0:	10d9      	asrs	r1, r3, #3
 80276c2:	00db      	lsls	r3, r3, #3
 80276c4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80276c8:	b280      	uxth	r0, r0
 80276ca:	b2db      	uxtb	r3, r3
 80276cc:	fb01 e102 	mla	r1, r1, r2, lr
 80276d0:	fb03 c202 	mla	r2, r3, r2, ip
 80276d4:	1c43      	adds	r3, r0, #1
 80276d6:	b289      	uxth	r1, r1
 80276d8:	b292      	uxth	r2, r2
 80276da:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80276de:	f102 0c01 	add.w	ip, r2, #1
 80276e2:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80276e6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80276ea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80276ee:	4313      	orrs	r3, r2
 80276f0:	1c4a      	adds	r2, r1, #1
 80276f2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80276f6:	0949      	lsrs	r1, r1, #5
 80276f8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80276fc:	430b      	orrs	r3, r1
 80276fe:	f8a8 3000 	strh.w	r3, [r8]
 8027702:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027704:	f108 0802 	add.w	r8, r8, #2
 8027708:	f109 39ff 	add.w	r9, r9, #4294967295
 802770c:	441c      	add	r4, r3
 802770e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027710:	441e      	add	r6, r3
 8027712:	e74a      	b.n	80275aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 8027714:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027716:	3d01      	subs	r5, #1
 8027718:	441c      	add	r4, r3
 802771a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802771c:	441e      	add	r6, r3
 802771e:	9b07      	ldr	r3, [sp, #28]
 8027720:	3302      	adds	r3, #2
 8027722:	9307      	str	r3, [sp, #28]
 8027724:	e722      	b.n	802756c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8027726:	d022      	beq.n	802776e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 8027728:	1e6b      	subs	r3, r5, #1
 802772a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802772c:	fb00 4003 	mla	r0, r0, r3, r4
 8027730:	1400      	asrs	r0, r0, #16
 8027732:	f53f af37 	bmi.w	80275a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8027736:	3901      	subs	r1, #1
 8027738:	4288      	cmp	r0, r1
 802773a:	f6bf af33 	bge.w	80275a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802773e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8027740:	fb01 6303 	mla	r3, r1, r3, r6
 8027744:	141b      	asrs	r3, r3, #16
 8027746:	f53f af2d 	bmi.w	80275a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 802774a:	3a01      	subs	r2, #1
 802774c:	4293      	cmp	r3, r2
 802774e:	f6bf af29 	bge.w	80275a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 8027752:	46a8      	mov	r8, r5
 8027754:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8027758:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802775c:	f1b8 0f00 	cmp.w	r8, #0
 8027760:	dc60      	bgt.n	8027824 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 8027762:	9b07      	ldr	r3, [sp, #28]
 8027764:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027768:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802776c:	9307      	str	r3, [sp, #28]
 802776e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027770:	2b00      	cmp	r3, #0
 8027772:	f340 80f8 	ble.w	8027966 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8027776:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802777a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802777c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8027780:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8027784:	eef0 6a48 	vmov.f32	s13, s16
 8027788:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 802778c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8027790:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027794:	ee16 4a90 	vmov	r4, s13
 8027798:	eef0 6a68 	vmov.f32	s13, s17
 802779c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80277a0:	ee16 6a90 	vmov	r6, s13
 80277a4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80277a8:	ee69 7a27 	vmul.f32	s15, s18, s15
 80277ac:	ee37 8a48 	vsub.f32	s16, s14, s16
 80277b0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80277b4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80277b8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80277bc:	ee18 2a10 	vmov	r2, s16
 80277c0:	eeb0 8a47 	vmov.f32	s16, s14
 80277c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80277c8:	ee18 2a90 	vmov	r2, s17
 80277cc:	9327      	str	r3, [sp, #156]	; 0x9c
 80277ce:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80277d0:	eef0 8a67 	vmov.f32	s17, s15
 80277d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80277d8:	9328      	str	r3, [sp, #160]	; 0xa0
 80277da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80277dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80277de:	3b01      	subs	r3, #1
 80277e0:	930a      	str	r3, [sp, #40]	; 0x28
 80277e2:	bf08      	it	eq
 80277e4:	4615      	moveq	r5, r2
 80277e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80277e8:	bf18      	it	ne
 80277ea:	461d      	movne	r5, r3
 80277ec:	e6af      	b.n	802754e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80277ee:	f111 0a01 	adds.w	sl, r1, #1
 80277f2:	d486      	bmi.n	8027702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80277f4:	45d6      	cmp	lr, sl
 80277f6:	db84      	blt.n	8027702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80277f8:	f110 0a01 	adds.w	sl, r0, #1
 80277fc:	d481      	bmi.n	8027702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80277fe:	4553      	cmp	r3, sl
 8027800:	f6ff af7f 	blt.w	8027702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8027804:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8027806:	b21b      	sxth	r3, r3
 8027808:	9101      	str	r1, [sp, #4]
 802780a:	4641      	mov	r1, r8
 802780c:	9300      	str	r3, [sp, #0]
 802780e:	fa0f f38e 	sxth.w	r3, lr
 8027812:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8027816:	e9cd c704 	strd	ip, r7, [sp, #16]
 802781a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802781c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802781e:	f7ff fd93 	bl	8027348 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8027822:	e76e      	b.n	8027702 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8027824:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8027826:	1430      	asrs	r0, r6, #16
 8027828:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802782a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802782e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027832:	1423      	asrs	r3, r4, #16
 8027834:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027838:	fb01 3000 	mla	r0, r1, r0, r3
 802783c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802783e:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8027842:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8027846:	8858      	ldrh	r0, [r3, #2]
 8027848:	f1be 0f00 	cmp.w	lr, #0
 802784c:	d00b      	beq.n	8027866 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802784e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8027852:	3901      	subs	r1, #1
 8027854:	0049      	lsls	r1, r1, #1
 8027856:	3102      	adds	r1, #2
 8027858:	eb03 0b01 	add.w	fp, r3, r1
 802785c:	5a5b      	ldrh	r3, [r3, r1]
 802785e:	930e      	str	r3, [sp, #56]	; 0x38
 8027860:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8027864:	930f      	str	r3, [sp, #60]	; 0x3c
 8027866:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802786a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802786e:	fb12 f30e 	smulbb	r3, r2, lr
 8027872:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8027876:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802787a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802787e:	10db      	asrs	r3, r3, #3
 8027880:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027884:	ea41 010c 	orr.w	r1, r1, ip
 8027888:	f1ce 0c10 	rsb	ip, lr, #16
 802788c:	ea4b 0000 	orr.w	r0, fp, r0
 8027890:	9f08      	ldr	r7, [sp, #32]
 8027892:	ebac 0c02 	sub.w	ip, ip, r2
 8027896:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802789a:	f108 38ff 	add.w	r8, r8, #4294967295
 802789e:	4350      	muls	r0, r2
 80278a0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80278a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80278a6:	fb0c 0c01 	mla	ip, ip, r1, r0
 80278aa:	980e      	ldr	r0, [sp, #56]	; 0x38
 80278ac:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80278b0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80278b4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80278b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80278ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80278be:	0412      	lsls	r2, r2, #16
 80278c0:	ea4b 0101 	orr.w	r1, fp, r1
 80278c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80278c8:	fb03 c101 	mla	r1, r3, r1, ip
 80278cc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80278d0:	4302      	orrs	r2, r0
 80278d2:	fb03 1202 	mla	r2, r3, r2, r1
 80278d6:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80278da:	0952      	lsrs	r2, r2, #5
 80278dc:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80278e0:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80278e4:	f8b9 2000 	ldrh.w	r2, [r9]
 80278e8:	ea4b 0303 	orr.w	r3, fp, r3
 80278ec:	1211      	asrs	r1, r2, #8
 80278ee:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80278f2:	b29b      	uxth	r3, r3
 80278f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80278f8:	00d2      	lsls	r2, r2, #3
 80278fa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80278fe:	fb11 f107 	smulbb	r1, r1, r7
 8027902:	1218      	asrs	r0, r3, #8
 8027904:	fb1c fc07 	smulbb	ip, ip, r7
 8027908:	b2d2      	uxtb	r2, r2
 802790a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802790e:	fb12 f207 	smulbb	r2, r2, r7
 8027912:	fb00 100a 	mla	r0, r0, sl, r1
 8027916:	10d9      	asrs	r1, r3, #3
 8027918:	00db      	lsls	r3, r3, #3
 802791a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802791e:	b280      	uxth	r0, r0
 8027920:	b2db      	uxtb	r3, r3
 8027922:	fb01 c10a 	mla	r1, r1, sl, ip
 8027926:	fb03 230a 	mla	r3, r3, sl, r2
 802792a:	1c42      	adds	r2, r0, #1
 802792c:	b289      	uxth	r1, r1
 802792e:	b29b      	uxth	r3, r3
 8027930:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8027934:	f101 0c01 	add.w	ip, r1, #1
 8027938:	1c5a      	adds	r2, r3, #1
 802793a:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802793e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8027942:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8027946:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8027948:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802794c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8027950:	441c      	add	r4, r3
 8027952:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8027956:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027958:	4310      	orrs	r0, r2
 802795a:	441e      	add	r6, r3
 802795c:	ea40 000c 	orr.w	r0, r0, ip
 8027960:	f829 0b02 	strh.w	r0, [r9], #2
 8027964:	e6fa      	b.n	802775c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8027966:	b013      	add	sp, #76	; 0x4c
 8027968:	ecbd 8b08 	vpop	{d8-d11}
 802796c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8027970:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027974:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8027978:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 802797c:	fb06 5c03 	mla	ip, r6, r3, r5
 8027980:	2e00      	cmp	r6, #0
 8027982:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8027986:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 802798a:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802798e:	8808      	ldrh	r0, [r1, #0]
 8027990:	db2e      	blt.n	80279f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8027992:	45b0      	cmp	r8, r6
 8027994:	dd2c      	ble.n	80279f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8027996:	2d00      	cmp	r5, #0
 8027998:	db28      	blt.n	80279ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 802799a:	42ab      	cmp	r3, r5
 802799c:	dd26      	ble.n	80279ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 802799e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80279a2:	1c6a      	adds	r2, r5, #1
 80279a4:	d427      	bmi.n	80279f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80279a6:	4293      	cmp	r3, r2
 80279a8:	dd25      	ble.n	80279f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80279aa:	b324      	cbz	r4, 80279f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80279ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80279b0:	3601      	adds	r6, #1
 80279b2:	d424      	bmi.n	80279fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80279b4:	45b0      	cmp	r8, r6
 80279b6:	dd22      	ble.n	80279fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80279b8:	b31f      	cbz	r7, 8027a02 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80279ba:	2d00      	cmp	r5, #0
 80279bc:	db1d      	blt.n	80279fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80279be:	42ab      	cmp	r3, r5
 80279c0:	dd1b      	ble.n	80279fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80279c2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80279c6:	3501      	adds	r5, #1
 80279c8:	d405      	bmi.n	80279d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80279ca:	42ab      	cmp	r3, r5
 80279cc:	dd03      	ble.n	80279d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80279ce:	b124      	cbz	r4, 80279da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80279d0:	3301      	adds	r3, #1
 80279d2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80279d6:	2c0f      	cmp	r4, #15
 80279d8:	d801      	bhi.n	80279de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80279da:	2f0f      	cmp	r7, #15
 80279dc:	d914      	bls.n	8027a08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80279de:	4b27      	ldr	r3, [pc, #156]	; (8027a7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80279e0:	f240 11ef 	movw	r1, #495	; 0x1ef
 80279e4:	4a26      	ldr	r2, [pc, #152]	; (8027a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80279e6:	4827      	ldr	r0, [pc, #156]	; (8027a84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80279e8:	f004 fa7e 	bl	802bee8 <__assert_func>
 80279ec:	4684      	mov	ip, r0
 80279ee:	e7d8      	b.n	80279a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80279f0:	4602      	mov	r2, r0
 80279f2:	4684      	mov	ip, r0
 80279f4:	e7dc      	b.n	80279b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80279f6:	4602      	mov	r2, r0
 80279f8:	e7da      	b.n	80279b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80279fa:	4606      	mov	r6, r0
 80279fc:	e7e3      	b.n	80279c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80279fe:	4606      	mov	r6, r0
 8027a00:	e7e9      	b.n	80279d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8027a02:	2c0f      	cmp	r4, #15
 8027a04:	d8eb      	bhi.n	80279de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8027a06:	4606      	mov	r6, r0
 8027a08:	fb14 f307 	smulbb	r3, r4, r7
 8027a0c:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8027a10:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8027a14:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8027a18:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8027a1c:	10db      	asrs	r3, r3, #3
 8027a1e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8027a22:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027a26:	ea45 0c0c 	orr.w	ip, r5, ip
 8027a2a:	f1c7 0510 	rsb	r5, r7, #16
 8027a2e:	ea4e 0202 	orr.w	r2, lr, r2
 8027a32:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8027a36:	1b2d      	subs	r5, r5, r4
 8027a38:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8027a3c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8027a40:	4354      	muls	r4, r2
 8027a42:	fb05 450c 	mla	r5, r5, ip, r4
 8027a46:	0404      	lsls	r4, r0, #16
 8027a48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027a4c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8027a50:	4320      	orrs	r0, r4
 8027a52:	fb03 5400 	mla	r4, r3, r0, r5
 8027a56:	0430      	lsls	r0, r6, #16
 8027a58:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8027a5c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027a60:	4330      	orrs	r0, r6
 8027a62:	fb07 4000 	mla	r0, r7, r0, r4
 8027a66:	0d43      	lsrs	r3, r0, #21
 8027a68:	0940      	lsrs	r0, r0, #5
 8027a6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027a6e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027a72:	4318      	orrs	r0, r3
 8027a74:	8008      	strh	r0, [r1, #0]
 8027a76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027a7a:	bf00      	nop
 8027a7c:	0803217a 	.word	0x0803217a
 8027a80:	080327e6 	.word	0x080327e6
 8027a84:	08032263 	.word	0x08032263

08027a88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027a8c:	ed2d 8b08 	vpush	{d8-d11}
 8027a90:	b08f      	sub	sp, #60	; 0x3c
 8027a92:	461d      	mov	r5, r3
 8027a94:	eeb0 aa40 	vmov.f32	s20, s0
 8027a98:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8027a9a:	eef0 9a60 	vmov.f32	s19, s1
 8027a9e:	9107      	str	r1, [sp, #28]
 8027aa0:	eeb0 9a41 	vmov.f32	s18, s2
 8027aa4:	6859      	ldr	r1, [r3, #4]
 8027aa6:	eeb0 8a62 	vmov.f32	s16, s5
 8027aaa:	920c      	str	r2, [sp, #48]	; 0x30
 8027aac:	eef0 8a43 	vmov.f32	s17, s6
 8027ab0:	681b      	ldr	r3, [r3, #0]
 8027ab2:	eef0 ba44 	vmov.f32	s23, s8
 8027ab6:	eeb0 ba64 	vmov.f32	s22, s9
 8027aba:	900d      	str	r0, [sp, #52]	; 0x34
 8027abc:	eef0 aa45 	vmov.f32	s21, s10
 8027ac0:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8027ac4:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8027ac8:	fb01 2707 	mla	r7, r1, r7, r2
 8027acc:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8027ad0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027ad2:	f8d3 8000 	ldr.w	r8, [r3]
 8027ad6:	9b07      	ldr	r3, [sp, #28]
 8027ad8:	2b00      	cmp	r3, #0
 8027ada:	dc03      	bgt.n	8027ae4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8027adc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027ade:	2b00      	cmp	r3, #0
 8027ae0:	f340 8182 	ble.w	8027de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 8027ae4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027ae6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027aea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027aee:	1e48      	subs	r0, r1, #1
 8027af0:	f102 3cff 	add.w	ip, r2, #4294967295
 8027af4:	2d00      	cmp	r5, #0
 8027af6:	f340 809b 	ble.w	8027c30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8027afa:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8027afe:	ea4f 4326 	mov.w	r3, r6, asr #16
 8027b02:	d406      	bmi.n	8027b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027b04:	4586      	cmp	lr, r0
 8027b06:	da04      	bge.n	8027b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027b08:	2b00      	cmp	r3, #0
 8027b0a:	db02      	blt.n	8027b12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8027b0c:	4563      	cmp	r3, ip
 8027b0e:	f2c0 8090 	blt.w	8027c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8027b12:	f11e 0e01 	adds.w	lr, lr, #1
 8027b16:	f100 8084 	bmi.w	8027c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027b1a:	4571      	cmp	r1, lr
 8027b1c:	f2c0 8081 	blt.w	8027c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027b20:	3301      	adds	r3, #1
 8027b22:	d47e      	bmi.n	8027c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027b24:	429a      	cmp	r2, r3
 8027b26:	db7c      	blt.n	8027c22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8027b28:	46aa      	mov	sl, r5
 8027b2a:	46b9      	mov	r9, r7
 8027b2c:	f1ba 0f00 	cmp.w	sl, #0
 8027b30:	f340 8099 	ble.w	8027c66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8027b34:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027b36:	1421      	asrs	r1, r4, #16
 8027b38:	ea4f 4026 	mov.w	r0, r6, asr #16
 8027b3c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027b40:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8027b44:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8027b48:	f100 80d1 	bmi.w	8027cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8027b4c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8027b50:	4559      	cmp	r1, fp
 8027b52:	f280 80cc 	bge.w	8027cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8027b56:	2800      	cmp	r0, #0
 8027b58:	f2c0 80c9 	blt.w	8027cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8027b5c:	f103 3bff 	add.w	fp, r3, #4294967295
 8027b60:	4558      	cmp	r0, fp
 8027b62:	f280 80c4 	bge.w	8027cee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8027b66:	fa0f fe8e 	sxth.w	lr, lr
 8027b6a:	fb00 110e 	mla	r1, r0, lr, r1
 8027b6e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027b72:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8027b76:	8841      	ldrh	r1, [r0, #2]
 8027b78:	f1bc 0f00 	cmp.w	ip, #0
 8027b7c:	d00b      	beq.n	8027b96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8027b7e:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8027b82:	3b01      	subs	r3, #1
 8027b84:	005b      	lsls	r3, r3, #1
 8027b86:	3302      	adds	r3, #2
 8027b88:	eb00 0e03 	add.w	lr, r0, r3
 8027b8c:	5ac3      	ldrh	r3, [r0, r3]
 8027b8e:	9308      	str	r3, [sp, #32]
 8027b90:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8027b94:	9309      	str	r3, [sp, #36]	; 0x24
 8027b96:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8027b9a:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8027b9e:	fb12 f30c 	smulbb	r3, r2, ip
 8027ba2:	f1cc 0e10 	rsb	lr, ip, #16
 8027ba6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027baa:	10db      	asrs	r3, r3, #3
 8027bac:	ebae 0e02 	sub.w	lr, lr, r2
 8027bb0:	ea40 000b 	orr.w	r0, r0, fp
 8027bb4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027bb8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027bbc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027bc0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027bc4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8027bc8:	ea4b 0101 	orr.w	r1, fp, r1
 8027bcc:	4351      	muls	r1, r2
 8027bce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8027bd0:	fb0e 1e00 	mla	lr, lr, r0, r1
 8027bd4:	0410      	lsls	r0, r2, #16
 8027bd6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027bda:	9908      	ldr	r1, [sp, #32]
 8027bdc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027be0:	4310      	orrs	r0, r2
 8027be2:	9a08      	ldr	r2, [sp, #32]
 8027be4:	0412      	lsls	r2, r2, #16
 8027be6:	fb03 e000 	mla	r0, r3, r0, lr
 8027bea:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8027bee:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8027bf2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027bf6:	ea42 020e 	orr.w	r2, r2, lr
 8027bfa:	fb03 0302 	mla	r3, r3, r2, r0
 8027bfe:	0d5a      	lsrs	r2, r3, #21
 8027c00:	095b      	lsrs	r3, r3, #5
 8027c02:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027c06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8027c0a:	4313      	orrs	r3, r2
 8027c0c:	f8a9 3000 	strh.w	r3, [r9]
 8027c10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8027c12:	f109 0902 	add.w	r9, r9, #2
 8027c16:	f10a 3aff 	add.w	sl, sl, #4294967295
 8027c1a:	441c      	add	r4, r3
 8027c1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027c1e:	441e      	add	r6, r3
 8027c20:	e784      	b.n	8027b2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8027c22:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8027c24:	3d01      	subs	r5, #1
 8027c26:	3702      	adds	r7, #2
 8027c28:	441c      	add	r4, r3
 8027c2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027c2c:	441e      	add	r6, r3
 8027c2e:	e761      	b.n	8027af4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8027c30:	d01d      	beq.n	8027c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8027c32:	1e6b      	subs	r3, r5, #1
 8027c34:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8027c36:	fb00 4003 	mla	r0, r0, r3, r4
 8027c3a:	1400      	asrs	r0, r0, #16
 8027c3c:	f53f af74 	bmi.w	8027b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027c40:	3901      	subs	r1, #1
 8027c42:	4288      	cmp	r0, r1
 8027c44:	f6bf af70 	bge.w	8027b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027c48:	9924      	ldr	r1, [sp, #144]	; 0x90
 8027c4a:	fb01 6303 	mla	r3, r1, r3, r6
 8027c4e:	141b      	asrs	r3, r3, #16
 8027c50:	f53f af6a 	bmi.w	8027b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027c54:	3a01      	subs	r2, #1
 8027c56:	4293      	cmp	r3, r2
 8027c58:	f6bf af66 	bge.w	8027b28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8027c5c:	46a9      	mov	r9, r5
 8027c5e:	46ba      	mov	sl, r7
 8027c60:	f1b9 0f00 	cmp.w	r9, #0
 8027c64:	dc5b      	bgt.n	8027d1e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8027c66:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027c6a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8027c6e:	9b07      	ldr	r3, [sp, #28]
 8027c70:	2b00      	cmp	r3, #0
 8027c72:	f340 80b9 	ble.w	8027de8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x360>
 8027c76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027c7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027c7c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8027c80:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8027c84:	eef0 6a48 	vmov.f32	s13, s16
 8027c88:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8027c8c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8027c90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027c94:	ee16 4a90 	vmov	r4, s13
 8027c98:	eef0 6a68 	vmov.f32	s13, s17
 8027c9c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027ca0:	ee16 6a90 	vmov	r6, s13
 8027ca4:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8027ca8:	ee69 7a27 	vmul.f32	s15, s18, s15
 8027cac:	ee37 8a48 	vsub.f32	s16, s14, s16
 8027cb0:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8027cb4:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8027cb8:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8027cbc:	ee18 2a10 	vmov	r2, s16
 8027cc0:	eeb0 8a47 	vmov.f32	s16, s14
 8027cc4:	fb92 f3f3 	sdiv	r3, r2, r3
 8027cc8:	ee18 2a90 	vmov	r2, s17
 8027ccc:	9323      	str	r3, [sp, #140]	; 0x8c
 8027cce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027cd0:	eef0 8a67 	vmov.f32	s17, s15
 8027cd4:	fb92 f3f3 	sdiv	r3, r2, r3
 8027cd8:	9324      	str	r3, [sp, #144]	; 0x90
 8027cda:	9b07      	ldr	r3, [sp, #28]
 8027cdc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027cde:	3b01      	subs	r3, #1
 8027ce0:	9307      	str	r3, [sp, #28]
 8027ce2:	bf08      	it	eq
 8027ce4:	4615      	moveq	r5, r2
 8027ce6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027ce8:	bf18      	it	ne
 8027cea:	461d      	movne	r5, r3
 8027cec:	e6f3      	b.n	8027ad6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8027cee:	f111 0b01 	adds.w	fp, r1, #1
 8027cf2:	d48d      	bmi.n	8027c10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8027cf4:	45de      	cmp	lr, fp
 8027cf6:	db8b      	blt.n	8027c10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8027cf8:	f110 0b01 	adds.w	fp, r0, #1
 8027cfc:	d488      	bmi.n	8027c10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8027cfe:	455b      	cmp	r3, fp
 8027d00:	db86      	blt.n	8027c10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8027d02:	b21b      	sxth	r3, r3
 8027d04:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8027d08:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8027d0c:	9300      	str	r3, [sp, #0]
 8027d0e:	4642      	mov	r2, r8
 8027d10:	fa0f f38e 	sxth.w	r3, lr
 8027d14:	4649      	mov	r1, r9
 8027d16:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027d18:	f7ff fe2a 	bl	8027970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8027d1c:	e778      	b.n	8027c10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8027d1e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8027d20:	1420      	asrs	r0, r4, #16
 8027d22:	1431      	asrs	r1, r6, #16
 8027d24:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8027d28:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8027d2c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8027d30:	fb03 0101 	mla	r1, r3, r1, r0
 8027d34:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8027d38:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8027d3c:	8841      	ldrh	r1, [r0, #2]
 8027d3e:	f1be 0f00 	cmp.w	lr, #0
 8027d42:	d00b      	beq.n	8027d5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8027d44:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8027d48:	3b01      	subs	r3, #1
 8027d4a:	005b      	lsls	r3, r3, #1
 8027d4c:	3302      	adds	r3, #2
 8027d4e:	eb00 0b03 	add.w	fp, r0, r3
 8027d52:	5ac3      	ldrh	r3, [r0, r3]
 8027d54:	930a      	str	r3, [sp, #40]	; 0x28
 8027d56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8027d5a:	930b      	str	r3, [sp, #44]	; 0x2c
 8027d5c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8027d60:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8027d64:	fb12 f30e 	smulbb	r3, r2, lr
 8027d68:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8027d6c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8027d70:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8027d74:	10db      	asrs	r3, r3, #3
 8027d76:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027d7a:	ea40 000c 	orr.w	r0, r0, ip
 8027d7e:	f1ce 0c10 	rsb	ip, lr, #16
 8027d82:	ea4b 0101 	orr.w	r1, fp, r1
 8027d86:	f109 39ff 	add.w	r9, r9, #4294967295
 8027d8a:	ebac 0c02 	sub.w	ip, ip, r2
 8027d8e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8027d92:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8027d96:	4351      	muls	r1, r2
 8027d98:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8027d9a:	fb0c 1c00 	mla	ip, ip, r0, r1
 8027d9e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8027da0:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8027da4:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8027da8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8027daa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8027dae:	0412      	lsls	r2, r2, #16
 8027db0:	ea4b 0000 	orr.w	r0, fp, r0
 8027db4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8027db8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8027dbc:	fb03 c000 	mla	r0, r3, r0, ip
 8027dc0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8027dc4:	ea42 0b0b 	orr.w	fp, r2, fp
 8027dc8:	fb03 000b 	mla	r0, r3, fp, r0
 8027dcc:	0d43      	lsrs	r3, r0, #21
 8027dce:	0940      	lsrs	r0, r0, #5
 8027dd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027dd4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027dd8:	4318      	orrs	r0, r3
 8027dda:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8027ddc:	441c      	add	r4, r3
 8027dde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027de0:	f82a 0b02 	strh.w	r0, [sl], #2
 8027de4:	441e      	add	r6, r3
 8027de6:	e73b      	b.n	8027c60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8027de8:	b00f      	add	sp, #60	; 0x3c
 8027dea:	ecbd 8b08 	vpop	{d8-d11}
 8027dee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08027df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8027df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027df8:	880e      	ldrh	r6, [r1, #0]
 8027dfa:	b085      	sub	sp, #20
 8027dfc:	4690      	mov	r8, r2
 8027dfe:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8027e02:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8027e06:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8027e0a:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8027e0e:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8027e12:	00f6      	lsls	r6, r6, #3
 8027e14:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8027e18:	9200      	str	r2, [sp, #0]
 8027e1a:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8027e1e:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8027e22:	9201      	str	r2, [sp, #4]
 8027e24:	b2f2      	uxtb	r2, r6
 8027e26:	2c00      	cmp	r4, #0
 8027e28:	fb04 5603 	mla	r6, r4, r3, r5
 8027e2c:	9202      	str	r2, [sp, #8]
 8027e2e:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 8027e32:	db36      	blt.n	8027ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8027e34:	45a6      	cmp	lr, r4
 8027e36:	dd34      	ble.n	8027ea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8027e38:	2d00      	cmp	r5, #0
 8027e3a:	db30      	blt.n	8027e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8027e3c:	42ab      	cmp	r3, r5
 8027e3e:	dd2e      	ble.n	8027e9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8027e40:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8027e44:	1c6e      	adds	r6, r5, #1
 8027e46:	d42f      	bmi.n	8027ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8027e48:	42b3      	cmp	r3, r6
 8027e4a:	dd2d      	ble.n	8027ea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8027e4c:	b370      	cbz	r0, 8027eac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 8027e4e:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8027e52:	3401      	adds	r4, #1
 8027e54:	d42e      	bmi.n	8027eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8027e56:	45a6      	cmp	lr, r4
 8027e58:	dd2c      	ble.n	8027eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8027e5a:	b377      	cbz	r7, 8027eba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8027e5c:	2d00      	cmp	r5, #0
 8027e5e:	db27      	blt.n	8027eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8027e60:	42ab      	cmp	r3, r5
 8027e62:	dd25      	ble.n	8027eb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8027e64:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8027e68:	3501      	adds	r5, #1
 8027e6a:	d429      	bmi.n	8027ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8027e6c:	42ab      	cmp	r3, r5
 8027e6e:	dd27      	ble.n	8027ec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8027e70:	b340      	cbz	r0, 8027ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8027e72:	3301      	adds	r3, #1
 8027e74:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 8027e78:	280f      	cmp	r0, #15
 8027e7a:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8027e7e:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8027e82:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8027e86:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8027e8a:	d801      	bhi.n	8027e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8027e8c:	2f0f      	cmp	r7, #15
 8027e8e:	d91b      	bls.n	8027ec8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8027e90:	4b85      	ldr	r3, [pc, #532]	; (80280a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8027e92:	f240 210d 	movw	r1, #525	; 0x20d
 8027e96:	4a85      	ldr	r2, [pc, #532]	; (80280ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 8027e98:	4885      	ldr	r0, [pc, #532]	; (80280b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 8027e9a:	f004 f825 	bl	802bee8 <__assert_func>
 8027e9e:	2200      	movs	r2, #0
 8027ea0:	e7d0      	b.n	8027e44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 8027ea2:	2600      	movs	r6, #0
 8027ea4:	4632      	mov	r2, r6
 8027ea6:	e7d4      	b.n	8027e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8027ea8:	2600      	movs	r6, #0
 8027eaa:	e7d2      	b.n	8027e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8027eac:	4606      	mov	r6, r0
 8027eae:	e7d0      	b.n	8027e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8027eb0:	2400      	movs	r4, #0
 8027eb2:	e7d9      	b.n	8027e68 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8027eb4:	2300      	movs	r3, #0
 8027eb6:	461c      	mov	r4, r3
 8027eb8:	e7de      	b.n	8027e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8027eba:	463b      	mov	r3, r7
 8027ebc:	463c      	mov	r4, r7
 8027ebe:	e7db      	b.n	8027e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8027ec0:	2300      	movs	r3, #0
 8027ec2:	e7d9      	b.n	8027e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8027ec4:	4603      	mov	r3, r0
 8027ec6:	e7d7      	b.n	8027e78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8027ec8:	b280      	uxth	r0, r0
 8027eca:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8027ece:	b2bf      	uxth	r7, r7
 8027ed0:	fb00 fe07 	mul.w	lr, r0, r7
 8027ed4:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8027ed8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8027edc:	eba0 0c0e 	sub.w	ip, r0, lr
 8027ee0:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8027ee4:	b2bf      	uxth	r7, r7
 8027ee6:	fa1f fc8c 	uxth.w	ip, ip
 8027eea:	eba5 0507 	sub.w	r5, r5, r7
 8027eee:	fb0c f00a 	mul.w	r0, ip, sl
 8027ef2:	b2ad      	uxth	r5, r5
 8027ef4:	fb05 000b 	mla	r0, r5, fp, r0
 8027ef8:	fb07 0009 	mla	r0, r7, r9, r0
 8027efc:	fb0e 0008 	mla	r0, lr, r8, r0
 8027f00:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8027f04:	9003      	str	r0, [sp, #12]
 8027f06:	d018      	beq.n	8027f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x146>
 8027f08:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8027f0c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027f10:	fb0b f000 	mul.w	r0, fp, r0
 8027f14:	fb0b fb02 	mul.w	fp, fp, r2
 8027f18:	0a02      	lsrs	r2, r0, #8
 8027f1a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8027f1e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027f22:	4402      	add	r2, r0
 8027f24:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8027f28:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8027f2c:	0a12      	lsrs	r2, r2, #8
 8027f2e:	0a00      	lsrs	r0, r0, #8
 8027f30:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8027f34:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8027f38:	4302      	orrs	r2, r0
 8027f3a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8027f3e:	d019      	beq.n	8027f74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x180>
 8027f40:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8027f44:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8027f48:	fb0a fb0b 	mul.w	fp, sl, fp
 8027f4c:	fb0a fa06 	mul.w	sl, sl, r6
 8027f50:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8027f54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8027f58:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8027f5c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8027f60:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8027f64:	445e      	add	r6, fp
 8027f66:	0a00      	lsrs	r0, r0, #8
 8027f68:	0a36      	lsrs	r6, r6, #8
 8027f6a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8027f6e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8027f72:	4306      	orrs	r6, r0
 8027f74:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8027f78:	d019      	beq.n	8027fae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1ba>
 8027f7a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8027f7e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8027f82:	fb09 fa0a 	mul.w	sl, r9, sl
 8027f86:	fb09 f904 	mul.w	r9, r9, r4
 8027f8a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8027f8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8027f92:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8027f96:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027f9a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8027f9e:	4454      	add	r4, sl
 8027fa0:	0a00      	lsrs	r0, r0, #8
 8027fa2:	0a24      	lsrs	r4, r4, #8
 8027fa4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8027fa8:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8027fac:	4304      	orrs	r4, r0
 8027fae:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8027fb2:	d019      	beq.n	8027fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f4>
 8027fb4:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8027fb8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8027fbc:	fb08 f909 	mul.w	r9, r8, r9
 8027fc0:	fb08 f803 	mul.w	r8, r8, r3
 8027fc4:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8027fc8:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8027fcc:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8027fd0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027fd4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8027fd8:	444b      	add	r3, r9
 8027fda:	0a00      	lsrs	r0, r0, #8
 8027fdc:	0a1b      	lsrs	r3, r3, #8
 8027fde:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8027fe2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8027fe6:	4303      	orrs	r3, r0
 8027fe8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8027fec:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8027ff0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8027ff4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8027ff8:	fb0c f808 	mul.w	r8, ip, r8
 8027ffc:	fb0c f606 	mul.w	r6, ip, r6
 8028000:	fb05 8800 	mla	r8, r5, r0, r8
 8028004:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8028008:	fb05 6202 	mla	r2, r5, r2, r6
 802800c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8028010:	fb07 8800 	mla	r8, r7, r0, r8
 8028014:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8028018:	b2ad      	uxth	r5, r5
 802801a:	fb0e 8000 	mla	r0, lr, r0, r8
 802801e:	0a00      	lsrs	r0, r0, #8
 8028020:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8028024:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8028028:	9c00      	ldr	r4, [sp, #0]
 802802a:	fb07 2700 	mla	r7, r7, r0, r2
 802802e:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8028032:	9b03      	ldr	r3, [sp, #12]
 8028034:	fb0e 7000 	mla	r0, lr, r0, r7
 8028038:	436b      	muls	r3, r5
 802803a:	0a00      	lsrs	r0, r0, #8
 802803c:	1c5a      	adds	r2, r3, #1
 802803e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8028042:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8028046:	ea48 0000 	orr.w	r0, r8, r0
 802804a:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 802804e:	0c03      	lsrs	r3, r0, #16
 8028050:	b2d2      	uxtb	r2, r2
 8028052:	fb14 f602 	smulbb	r6, r4, r2
 8028056:	f3c0 2407 	ubfx	r4, r0, #8, #8
 802805a:	b2c0      	uxtb	r0, r0
 802805c:	fb03 6305 	mla	r3, r3, r5, r6
 8028060:	b29e      	uxth	r6, r3
 8028062:	9b01      	ldr	r3, [sp, #4]
 8028064:	fb13 f302 	smulbb	r3, r3, r2
 8028068:	fb04 3405 	mla	r4, r4, r5, r3
 802806c:	9b02      	ldr	r3, [sp, #8]
 802806e:	fb13 f202 	smulbb	r2, r3, r2
 8028072:	b2a4      	uxth	r4, r4
 8028074:	1c73      	adds	r3, r6, #1
 8028076:	fb00 2005 	mla	r0, r0, r5, r2
 802807a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 802807e:	b280      	uxth	r0, r0
 8028080:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8028084:	1c42      	adds	r2, r0, #1
 8028086:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802808a:	1c62      	adds	r2, r4, #1
 802808c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8028090:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8028094:	0952      	lsrs	r2, r2, #5
 8028096:	4303      	orrs	r3, r0
 8028098:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802809c:	4313      	orrs	r3, r2
 802809e:	800b      	strh	r3, [r1, #0]
 80280a0:	b005      	add	sp, #20
 80280a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80280a6:	bf00      	nop
 80280a8:	0803217a 	.word	0x0803217a
 80280ac:	0803273d 	.word	0x0803273d
 80280b0:	08032263 	.word	0x08032263

080280b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80280b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80280b8:	ed2d 8b08 	vpush	{d8-d11}
 80280bc:	b09d      	sub	sp, #116	; 0x74
 80280be:	eeb0 aa40 	vmov.f32	s20, s0
 80280c2:	eef0 9a60 	vmov.f32	s19, s1
 80280c6:	9219      	str	r2, [sp, #100]	; 0x64
 80280c8:	eeb0 9a41 	vmov.f32	s18, s2
 80280cc:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 80280ce:	eeb0 8a62 	vmov.f32	s16, s5
 80280d2:	9307      	str	r3, [sp, #28]
 80280d4:	eef0 8a43 	vmov.f32	s17, s6
 80280d8:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 80280dc:	eef0 ba44 	vmov.f32	s23, s8
 80280e0:	901b      	str	r0, [sp, #108]	; 0x6c
 80280e2:	eeb0 ba64 	vmov.f32	s22, s9
 80280e6:	931a      	str	r3, [sp, #104]	; 0x68
 80280e8:	eef0 aa45 	vmov.f32	s21, s10
 80280ec:	6850      	ldr	r0, [r2, #4]
 80280ee:	9117      	str	r1, [sp, #92]	; 0x5c
 80280f0:	6812      	ldr	r2, [r2, #0]
 80280f2:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 80280f6:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 80280fa:	fb00 1303 	mla	r3, r0, r3, r1
 80280fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028102:	930a      	str	r3, [sp, #40]	; 0x28
 8028104:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8028106:	681b      	ldr	r3, [r3, #0]
 8028108:	9310      	str	r3, [sp, #64]	; 0x40
 802810a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802810e:	930b      	str	r3, [sp, #44]	; 0x2c
 8028110:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028112:	2b00      	cmp	r3, #0
 8028114:	dc03      	bgt.n	802811e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8028116:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8028118:	2b00      	cmp	r3, #0
 802811a:	f340 837b 	ble.w	8028814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 802811e:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8028120:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028124:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028128:	1e48      	subs	r0, r1, #1
 802812a:	1e57      	subs	r7, r2, #1
 802812c:	9b07      	ldr	r3, [sp, #28]
 802812e:	2b00      	cmp	r3, #0
 8028130:	f340 8194 	ble.w	802845c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8028134:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8028138:	ea4f 4326 	mov.w	r3, r6, asr #16
 802813c:	d406      	bmi.n	802814c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 802813e:	4584      	cmp	ip, r0
 8028140:	da04      	bge.n	802814c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8028142:	2b00      	cmp	r3, #0
 8028144:	db02      	blt.n	802814c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8028146:	42bb      	cmp	r3, r7
 8028148:	f2c0 8189 	blt.w	802845e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 802814c:	f11c 0c01 	adds.w	ip, ip, #1
 8028150:	f100 8179 	bmi.w	8028446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8028154:	4561      	cmp	r1, ip
 8028156:	f2c0 8176 	blt.w	8028446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 802815a:	3301      	adds	r3, #1
 802815c:	f100 8173 	bmi.w	8028446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8028160:	429a      	cmp	r2, r3
 8028162:	f2c0 8170 	blt.w	8028446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x392>
 8028166:	9b07      	ldr	r3, [sp, #28]
 8028168:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802816a:	9318      	str	r3, [sp, #96]	; 0x60
 802816c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802816e:	2b00      	cmp	r3, #0
 8028170:	f340 8192 	ble.w	8028498 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8028174:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8028176:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802817a:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 802817c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8028180:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8028184:	1422      	asrs	r2, r4, #16
 8028186:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802818a:	689b      	ldr	r3, [r3, #8]
 802818c:	f100 81d3 	bmi.w	8028536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 8028190:	f103 38ff 	add.w	r8, r3, #4294967295
 8028194:	4542      	cmp	r2, r8
 8028196:	f280 81ce 	bge.w	8028536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 802819a:	f1bc 0f00 	cmp.w	ip, #0
 802819e:	f2c0 81ca 	blt.w	8028536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80281a2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80281a6:	45c4      	cmp	ip, r8
 80281a8:	f280 81c5 	bge.w	8028536 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x482>
 80281ac:	b21b      	sxth	r3, r3
 80281ae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80281b0:	fb0c 2203 	mla	r2, ip, r3, r2
 80281b4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80281b8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80281bc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80281c0:	2800      	cmp	r0, #0
 80281c2:	f000 81af 	beq.w	8028524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x470>
 80281c6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80281ca:	950c      	str	r5, [sp, #48]	; 0x30
 80281cc:	0e2d      	lsrs	r5, r5, #24
 80281ce:	9513      	str	r5, [sp, #76]	; 0x4c
 80281d0:	b181      	cbz	r1, 80281f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80281d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80281d6:	3b01      	subs	r3, #1
 80281d8:	009b      	lsls	r3, r3, #2
 80281da:	3304      	adds	r3, #4
 80281dc:	eb08 0c03 	add.w	ip, r8, r3
 80281e0:	f858 3003 	ldr.w	r3, [r8, r3]
 80281e4:	9308      	str	r3, [sp, #32]
 80281e6:	0e1b      	lsrs	r3, r3, #24
 80281e8:	9311      	str	r3, [sp, #68]	; 0x44
 80281ea:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80281ee:	930d      	str	r3, [sp, #52]	; 0x34
 80281f0:	0e1b      	lsrs	r3, r3, #24
 80281f2:	9314      	str	r3, [sp, #80]	; 0x50
 80281f4:	b280      	uxth	r0, r0
 80281f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80281f8:	b289      	uxth	r1, r1
 80281fa:	fb00 f901 	mul.w	r9, r0, r1
 80281fe:	0100      	lsls	r0, r0, #4
 8028200:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8028204:	eba0 0809 	sub.w	r8, r0, r9
 8028208:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802820c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802820e:	b289      	uxth	r1, r1
 8028210:	fa1f f888 	uxth.w	r8, r8
 8028214:	1a5b      	subs	r3, r3, r1
 8028216:	fb08 f000 	mul.w	r0, r8, r0
 802821a:	b29b      	uxth	r3, r3
 802821c:	fb03 000e 	mla	r0, r3, lr, r0
 8028220:	fb01 0005 	mla	r0, r1, r5, r0
 8028224:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028226:	fb09 0005 	mla	r0, r9, r5, r0
 802822a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802822e:	2800      	cmp	r0, #0
 8028230:	f000 8100 	beq.w	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8028234:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8028238:	d01b      	beq.n	8028272 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 802823a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802823e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028242:	fb0e fa0a 	mul.w	sl, lr, sl
 8028246:	fb0e fe02 	mul.w	lr, lr, r2
 802824a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802824e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028252:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8028256:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802825a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802825e:	4452      	add	r2, sl
 8028260:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028264:	0a12      	lsrs	r2, r2, #8
 8028266:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802826a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802826e:	ea42 020c 	orr.w	r2, r2, ip
 8028272:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028274:	2dff      	cmp	r5, #255	; 0xff
 8028276:	d021      	beq.n	80282bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8028278:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802827a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802827e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028280:	fb05 fb0b 	mul.w	fp, r5, fp
 8028284:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028286:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802828a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802828c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028290:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028294:	fb05 fa0a 	mul.w	sl, r5, sl
 8028298:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802829c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80282a0:	44de      	add	lr, fp
 80282a2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80282a6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80282aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80282ae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80282b2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80282b6:	ea4e 050a 	orr.w	r5, lr, sl
 80282ba:	950c      	str	r5, [sp, #48]	; 0x30
 80282bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80282be:	2dff      	cmp	r5, #255	; 0xff
 80282c0:	d021      	beq.n	8028306 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80282c2:	9d08      	ldr	r5, [sp, #32]
 80282c4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80282c8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80282ca:	fb05 fb0b 	mul.w	fp, r5, fp
 80282ce:	9d08      	ldr	r5, [sp, #32]
 80282d0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80282d4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80282d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80282da:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80282de:	fb05 fa0a 	mul.w	sl, r5, sl
 80282e2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80282e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80282ea:	44de      	add	lr, fp
 80282ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80282f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80282f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80282f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80282fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028300:	ea4e 050a 	orr.w	r5, lr, sl
 8028304:	9508      	str	r5, [sp, #32]
 8028306:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028308:	2dff      	cmp	r5, #255	; 0xff
 802830a:	d021      	beq.n	8028350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802830c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802830e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028312:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028314:	fb05 fb0b 	mul.w	fp, r5, fp
 8028318:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802831a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802831e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8028320:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028324:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028328:	fb05 fa0a 	mul.w	sl, r5, sl
 802832c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028330:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028334:	44de      	add	lr, fp
 8028336:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802833a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802833e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028342:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028346:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802834a:	ea4e 050a 	orr.w	r5, lr, sl
 802834e:	950d      	str	r5, [sp, #52]	; 0x34
 8028350:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028352:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8028356:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802835a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802835e:	9d08      	ldr	r5, [sp, #32]
 8028360:	fb08 fc0c 	mul.w	ip, r8, ip
 8028364:	fb03 cc0e 	mla	ip, r3, lr, ip
 8028368:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802836c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802836e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8028372:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8028376:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028378:	fb09 cc0e 	mla	ip, r9, lr, ip
 802837c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028380:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028382:	fb08 f80e 	mul.w	r8, r8, lr
 8028386:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802838a:	f8b7 e000 	ldrh.w	lr, [r7]
 802838e:	fb03 8202 	mla	r2, r3, r2, r8
 8028392:	9b08      	ldr	r3, [sp, #32]
 8028394:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028398:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802839c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802839e:	fb01 220a 	mla	r2, r1, sl, r2
 80283a2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80283a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80283a8:	fb09 2901 	mla	r9, r9, r1, r2
 80283ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80283ae:	4343      	muls	r3, r0
 80283b0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80283b4:	1c58      	adds	r0, r3, #1
 80283b6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80283ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80283be:	ea4c 0c09 	orr.w	ip, ip, r9
 80283c2:	ea4f 232e 	mov.w	r3, lr, asr #8
 80283c6:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80283ca:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80283ce:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80283d2:	b2c0      	uxtb	r0, r0
 80283d4:	fb11 f102 	smulbb	r1, r1, r2
 80283d8:	ea4f 02ee 	mov.w	r2, lr, asr #3
 80283dc:	fb03 1300 	mla	r3, r3, r0, r1
 80283e0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80283e4:	b299      	uxth	r1, r3
 80283e6:	f3cc 2307 	ubfx	r3, ip, #8, #8
 80283ea:	fa5f fc8c 	uxtb.w	ip, ip
 80283ee:	fb13 f305 	smulbb	r3, r3, r5
 80283f2:	fb1c fc05 	smulbb	ip, ip, r5
 80283f6:	fb02 3200 	mla	r2, r2, r0, r3
 80283fa:	ea4f 03ce 	mov.w	r3, lr, lsl #3
 80283fe:	b2db      	uxtb	r3, r3
 8028400:	b292      	uxth	r2, r2
 8028402:	fb03 cc00 	mla	ip, r3, r0, ip
 8028406:	1c4b      	adds	r3, r1, #1
 8028408:	fa1f fc8c 	uxth.w	ip, ip
 802840c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028410:	1c51      	adds	r1, r2, #1
 8028412:	f10c 0001 	add.w	r0, ip, #1
 8028416:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802841a:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802841e:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8028422:	0952      	lsrs	r2, r2, #5
 8028424:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8028428:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802842c:	ea43 030c 	orr.w	r3, r3, ip
 8028430:	4313      	orrs	r3, r2
 8028432:	803b      	strh	r3, [r7, #0]
 8028434:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8028436:	3702      	adds	r7, #2
 8028438:	441c      	add	r4, r3
 802843a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802843c:	441e      	add	r6, r3
 802843e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028440:	3b01      	subs	r3, #1
 8028442:	9318      	str	r3, [sp, #96]	; 0x60
 8028444:	e692      	b.n	802816c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8028446:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8028448:	441c      	add	r4, r3
 802844a:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 802844c:	441e      	add	r6, r3
 802844e:	9b07      	ldr	r3, [sp, #28]
 8028450:	3b01      	subs	r3, #1
 8028452:	9307      	str	r3, [sp, #28]
 8028454:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028456:	3302      	adds	r3, #2
 8028458:	930a      	str	r3, [sp, #40]	; 0x28
 802845a:	e667      	b.n	802812c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802845c:	d023      	beq.n	80284a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802845e:	9b07      	ldr	r3, [sp, #28]
 8028460:	9831      	ldr	r0, [sp, #196]	; 0xc4
 8028462:	3b01      	subs	r3, #1
 8028464:	fb00 4003 	mla	r0, r0, r3, r4
 8028468:	1400      	asrs	r0, r0, #16
 802846a:	f53f ae7c 	bmi.w	8028166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802846e:	3901      	subs	r1, #1
 8028470:	4288      	cmp	r0, r1
 8028472:	f6bf ae78 	bge.w	8028166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8028476:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8028478:	fb01 6303 	mla	r3, r1, r3, r6
 802847c:	141b      	asrs	r3, r3, #16
 802847e:	f53f ae72 	bmi.w	8028166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8028482:	3a01      	subs	r2, #1
 8028484:	4293      	cmp	r3, r2
 8028486:	f6bf ae6e 	bge.w	8028166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802848a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802848e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8028492:	f1bb 0f00 	cmp.w	fp, #0
 8028496:	dc6c      	bgt.n	8028572 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4be>
 8028498:	9b07      	ldr	r3, [sp, #28]
 802849a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802849e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80284a0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80284a4:	930a      	str	r3, [sp, #40]	; 0x28
 80284a6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80284a8:	2b00      	cmp	r3, #0
 80284aa:	f340 81b3 	ble.w	8028814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x760>
 80284ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80284b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80284b4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80284b8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80284bc:	eef0 6a48 	vmov.f32	s13, s16
 80284c0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80284c4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80284c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80284cc:	ee16 4a90 	vmov	r4, s13
 80284d0:	eef0 6a68 	vmov.f32	s13, s17
 80284d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80284d8:	ee16 6a90 	vmov	r6, s13
 80284dc:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80284e0:	ee69 7a27 	vmul.f32	s15, s18, s15
 80284e4:	ee37 8a48 	vsub.f32	s16, s14, s16
 80284e8:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80284ec:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80284f0:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80284f4:	ee18 2a10 	vmov	r2, s16
 80284f8:	eeb0 8a47 	vmov.f32	s16, s14
 80284fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8028500:	ee18 2a90 	vmov	r2, s17
 8028504:	9331      	str	r3, [sp, #196]	; 0xc4
 8028506:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8028508:	eef0 8a67 	vmov.f32	s17, s15
 802850c:	fb92 f3f3 	sdiv	r3, r2, r3
 8028510:	9332      	str	r3, [sp, #200]	; 0xc8
 8028512:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028514:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8028516:	3b01      	subs	r3, #1
 8028518:	9317      	str	r3, [sp, #92]	; 0x5c
 802851a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802851c:	bf08      	it	eq
 802851e:	4613      	moveq	r3, r2
 8028520:	9307      	str	r3, [sp, #28]
 8028522:	e5f5      	b.n	8028110 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8028524:	2900      	cmp	r1, #0
 8028526:	f43f ae65 	beq.w	80281f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 802852a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802852e:	9308      	str	r3, [sp, #32]
 8028530:	0e1b      	lsrs	r3, r3, #24
 8028532:	9311      	str	r3, [sp, #68]	; 0x44
 8028534:	e65e      	b.n	80281f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8028536:	f112 0801 	adds.w	r8, r2, #1
 802853a:	f53f af7b 	bmi.w	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 802853e:	4543      	cmp	r3, r8
 8028540:	f6ff af78 	blt.w	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8028544:	f11c 0801 	adds.w	r8, ip, #1
 8028548:	f53f af74 	bmi.w	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 802854c:	45c6      	cmp	lr, r8
 802854e:	f6ff af71 	blt.w	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8028552:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8028554:	b21b      	sxth	r3, r3
 8028556:	9201      	str	r2, [sp, #4]
 8028558:	fa0f f28e 	sxth.w	r2, lr
 802855c:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8028560:	e9cd c002 	strd	ip, r0, [sp, #8]
 8028564:	9200      	str	r2, [sp, #0]
 8028566:	4639      	mov	r1, r7
 8028568:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802856a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802856c:	f7ff fc42 	bl	8027df4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8028570:	e760      	b.n	8028434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x380>
 8028572:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8028574:	1427      	asrs	r7, r4, #16
 8028576:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028578:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802857c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028580:	1433      	asrs	r3, r6, #16
 8028582:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028586:	fb01 7303 	mla	r3, r1, r3, r7
 802858a:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802858e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8028592:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028596:	2a00      	cmp	r2, #0
 8028598:	f000 8133 	beq.w	8028802 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74e>
 802859c:	687d      	ldr	r5, [r7, #4]
 802859e:	950e      	str	r5, [sp, #56]	; 0x38
 80285a0:	0e2d      	lsrs	r5, r5, #24
 80285a2:	9515      	str	r5, [sp, #84]	; 0x54
 80285a4:	b178      	cbz	r0, 80285c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80285a6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80285aa:	3901      	subs	r1, #1
 80285ac:	0089      	lsls	r1, r1, #2
 80285ae:	3104      	adds	r1, #4
 80285b0:	eb07 0e01 	add.w	lr, r7, r1
 80285b4:	5879      	ldr	r1, [r7, r1]
 80285b6:	9109      	str	r1, [sp, #36]	; 0x24
 80285b8:	0e09      	lsrs	r1, r1, #24
 80285ba:	9112      	str	r1, [sp, #72]	; 0x48
 80285bc:	f8de 1004 	ldr.w	r1, [lr, #4]
 80285c0:	910f      	str	r1, [sp, #60]	; 0x3c
 80285c2:	0e09      	lsrs	r1, r1, #24
 80285c4:	9116      	str	r1, [sp, #88]	; 0x58
 80285c6:	b292      	uxth	r2, r2
 80285c8:	9915      	ldr	r1, [sp, #84]	; 0x54
 80285ca:	b280      	uxth	r0, r0
 80285cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80285ce:	fb02 f800 	mul.w	r8, r2, r0
 80285d2:	0112      	lsls	r2, r2, #4
 80285d4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80285d8:	eba2 0e08 	sub.w	lr, r2, r8
 80285dc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80285e0:	b280      	uxth	r0, r0
 80285e2:	fa1f fe8e 	uxth.w	lr, lr
 80285e6:	1a12      	subs	r2, r2, r0
 80285e8:	fb0e f101 	mul.w	r1, lr, r1
 80285ec:	b292      	uxth	r2, r2
 80285ee:	fb02 110c 	mla	r1, r2, ip, r1
 80285f2:	fb00 1105 	mla	r1, r0, r5, r1
 80285f6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80285f8:	fb08 1105 	mla	r1, r8, r5, r1
 80285fc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028600:	2900      	cmp	r1, #0
 8028602:	f000 80f5 	beq.w	80287f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73c>
 8028606:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802860a:	d019      	beq.n	8028640 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 802860c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8028610:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028614:	fb0c fa0a 	mul.w	sl, ip, sl
 8028618:	fb0c fc03 	mul.w	ip, ip, r3
 802861c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8028620:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028624:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8028628:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802862c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8028630:	4453      	add	r3, sl
 8028632:	0a3f      	lsrs	r7, r7, #8
 8028634:	0a1b      	lsrs	r3, r3, #8
 8028636:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802863a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802863e:	433b      	orrs	r3, r7
 8028640:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8028642:	2dff      	cmp	r5, #255	; 0xff
 8028644:	d020      	beq.n	8028688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 8028646:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028648:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802864c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802864e:	436f      	muls	r7, r5
 8028650:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028652:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028656:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802865a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802865c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028660:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028664:	fb05 fa0a 	mul.w	sl, r5, sl
 8028668:	44bc      	add	ip, r7
 802866a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802866e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028672:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028676:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802867a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802867e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028682:	ea4c 050a 	orr.w	r5, ip, sl
 8028686:	950e      	str	r5, [sp, #56]	; 0x38
 8028688:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802868a:	2dff      	cmp	r5, #255	; 0xff
 802868c:	d020      	beq.n	80286d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 802868e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028690:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028694:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028696:	436f      	muls	r7, r5
 8028698:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802869a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802869e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80286a2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80286a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80286a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80286ac:	fb05 fa0a 	mul.w	sl, r5, sl
 80286b0:	44bc      	add	ip, r7
 80286b2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80286b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80286ba:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80286be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80286c2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80286c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80286ca:	ea4c 050a 	orr.w	r5, ip, sl
 80286ce:	9509      	str	r5, [sp, #36]	; 0x24
 80286d0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80286d2:	2dff      	cmp	r5, #255	; 0xff
 80286d4:	d020      	beq.n	8028718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 80286d6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80286d8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80286dc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80286de:	436f      	muls	r7, r5
 80286e0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80286e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80286e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80286ea:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80286ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80286f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80286f4:	fb05 fa0a 	mul.w	sl, r5, sl
 80286f8:	44bc      	add	ip, r7
 80286fa:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80286fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028702:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8028706:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802870a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802870e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028712:	ea4c 050a 	orr.w	r5, ip, sl
 8028716:	950f      	str	r5, [sp, #60]	; 0x3c
 8028718:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802871a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802871e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028722:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8028726:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8028728:	fb0e f707 	mul.w	r7, lr, r7
 802872c:	fb02 770c 	mla	r7, r2, ip, r7
 8028730:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028734:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028736:	fb00 770c 	mla	r7, r0, ip, r7
 802873a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802873e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8028740:	fb08 770c 	mla	r7, r8, ip, r7
 8028744:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8028748:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802874a:	fb0e fe0c 	mul.w	lr, lr, ip
 802874e:	0a3f      	lsrs	r7, r7, #8
 8028750:	fb02 e303 	mla	r3, r2, r3, lr
 8028754:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028756:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802875a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802875e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028760:	fb00 330a 	mla	r3, r0, sl, r3
 8028764:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8028768:	f8b9 0000 	ldrh.w	r0, [r9]
 802876c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8028770:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028772:	1202      	asrs	r2, r0, #8
 8028774:	4359      	muls	r1, r3
 8028776:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802877a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802877e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028782:	1c4b      	adds	r3, r1, #1
 8028784:	ea47 070c 	orr.w	r7, r7, ip
 8028788:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802878c:	0c3b      	lsrs	r3, r7, #16
 802878e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8028792:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8028796:	b2ff      	uxtb	r7, r7
 8028798:	fb13 f305 	smulbb	r3, r3, r5
 802879c:	b2c9      	uxtb	r1, r1
 802879e:	fb17 f705 	smulbb	r7, r7, r5
 80287a2:	fb02 3201 	mla	r2, r2, r1, r3
 80287a6:	10c3      	asrs	r3, r0, #3
 80287a8:	fb1c fc05 	smulbb	ip, ip, r5
 80287ac:	00c0      	lsls	r0, r0, #3
 80287ae:	b292      	uxth	r2, r2
 80287b0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80287b4:	b2c0      	uxtb	r0, r0
 80287b6:	fb03 c301 	mla	r3, r3, r1, ip
 80287ba:	fb00 7001 	mla	r0, r0, r1, r7
 80287be:	1c51      	adds	r1, r2, #1
 80287c0:	b29b      	uxth	r3, r3
 80287c2:	b280      	uxth	r0, r0
 80287c4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80287c8:	f100 0c01 	add.w	ip, r0, #1
 80287cc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80287d0:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80287d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80287d8:	ea42 020c 	orr.w	r2, r2, ip
 80287dc:	f103 0c01 	add.w	ip, r3, #1
 80287e0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80287e4:	095b      	lsrs	r3, r3, #5
 80287e6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80287ea:	431a      	orrs	r2, r3
 80287ec:	f8a9 2000 	strh.w	r2, [r9]
 80287f0:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80287f2:	f109 0902 	add.w	r9, r9, #2
 80287f6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80287fa:	441c      	add	r4, r3
 80287fc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80287fe:	441e      	add	r6, r3
 8028800:	e647      	b.n	8028492 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 8028802:	2800      	cmp	r0, #0
 8028804:	f43f aedf 	beq.w	80285c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8028808:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802880c:	9109      	str	r1, [sp, #36]	; 0x24
 802880e:	0e09      	lsrs	r1, r1, #24
 8028810:	9112      	str	r1, [sp, #72]	; 0x48
 8028812:	e6d8      	b.n	80285c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8028814:	b01d      	add	sp, #116	; 0x74
 8028816:	ecbd 8b08 	vpop	{d8-d11}
 802881a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08028820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8028820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028824:	880e      	ldrh	r6, [r1, #0]
 8028826:	b085      	sub	sp, #20
 8028828:	4690      	mov	r8, r2
 802882a:	ea4f 2c26 	mov.w	ip, r6, asr #8
 802882e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8028832:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8028836:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 802883a:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 802883e:	00f6      	lsls	r6, r6, #3
 8028840:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8028844:	9200      	str	r2, [sp, #0]
 8028846:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 802884a:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 802884e:	9201      	str	r2, [sp, #4]
 8028850:	b2f2      	uxtb	r2, r6
 8028852:	2c00      	cmp	r4, #0
 8028854:	fb04 5603 	mla	r6, r4, r3, r5
 8028858:	9202      	str	r2, [sp, #8]
 802885a:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 802885e:	db36      	blt.n	80288ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8028860:	45a6      	cmp	lr, r4
 8028862:	dd34      	ble.n	80288ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xae>
 8028864:	2d00      	cmp	r5, #0
 8028866:	db30      	blt.n	80288ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 8028868:	42ab      	cmp	r3, r5
 802886a:	dd2e      	ble.n	80288ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xaa>
 802886c:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8028870:	1c6e      	adds	r6, r5, #1
 8028872:	d42f      	bmi.n	80288d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8028874:	42b3      	cmp	r3, r6
 8028876:	dd2d      	ble.n	80288d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb4>
 8028878:	b370      	cbz	r0, 80288d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb8>
 802887a:	f8dc 6004 	ldr.w	r6, [ip, #4]
 802887e:	3401      	adds	r4, #1
 8028880:	d42e      	bmi.n	80288e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 8028882:	45a6      	cmp	lr, r4
 8028884:	dd2c      	ble.n	80288e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc0>
 8028886:	b377      	cbz	r7, 80288e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc6>
 8028888:	2d00      	cmp	r5, #0
 802888a:	db27      	blt.n	80288dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 802888c:	42ab      	cmp	r3, r5
 802888e:	dd25      	ble.n	80288dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbc>
 8028890:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8028894:	3501      	adds	r5, #1
 8028896:	d429      	bmi.n	80288ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8028898:	42ab      	cmp	r3, r5
 802889a:	dd27      	ble.n	80288ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 802889c:	b340      	cbz	r0, 80288f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 802889e:	3301      	adds	r3, #1
 80288a0:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 80288a4:	280f      	cmp	r0, #15
 80288a6:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80288aa:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80288ae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80288b2:	ea4f 6813 	mov.w	r8, r3, lsr #24
 80288b6:	d801      	bhi.n	80288bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9c>
 80288b8:	2f0f      	cmp	r7, #15
 80288ba:	d91b      	bls.n	80288f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 80288bc:	4b7e      	ldr	r3, [pc, #504]	; (8028ab8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 80288be:	f240 210d 	movw	r1, #525	; 0x20d
 80288c2:	4a7e      	ldr	r2, [pc, #504]	; (8028abc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 80288c4:	487e      	ldr	r0, [pc, #504]	; (8028ac0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 80288c6:	f003 fb0f 	bl	802bee8 <__assert_func>
 80288ca:	2200      	movs	r2, #0
 80288cc:	e7d0      	b.n	8028870 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 80288ce:	2600      	movs	r6, #0
 80288d0:	4632      	mov	r2, r6
 80288d2:	e7d4      	b.n	802887e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80288d4:	2600      	movs	r6, #0
 80288d6:	e7d2      	b.n	802887e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80288d8:	4606      	mov	r6, r0
 80288da:	e7d0      	b.n	802887e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 80288dc:	2400      	movs	r4, #0
 80288de:	e7d9      	b.n	8028894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x74>
 80288e0:	2300      	movs	r3, #0
 80288e2:	461c      	mov	r4, r3
 80288e4:	e7de      	b.n	80288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80288e6:	463b      	mov	r3, r7
 80288e8:	463c      	mov	r4, r7
 80288ea:	e7db      	b.n	80288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80288ec:	2300      	movs	r3, #0
 80288ee:	e7d9      	b.n	80288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80288f0:	4603      	mov	r3, r0
 80288f2:	e7d7      	b.n	80288a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x84>
 80288f4:	b280      	uxth	r0, r0
 80288f6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80288fa:	b2bf      	uxth	r7, r7
 80288fc:	fb00 fe07 	mul.w	lr, r0, r7
 8028900:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8028904:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8028908:	eba0 0c0e 	sub.w	ip, r0, lr
 802890c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8028910:	b2bf      	uxth	r7, r7
 8028912:	fa1f fc8c 	uxth.w	ip, ip
 8028916:	eba5 0507 	sub.w	r5, r5, r7
 802891a:	fb0c f00a 	mul.w	r0, ip, sl
 802891e:	b2ad      	uxth	r5, r5
 8028920:	fb05 000b 	mla	r0, r5, fp, r0
 8028924:	fb07 0009 	mla	r0, r7, r9, r0
 8028928:	fb0e 0008 	mla	r0, lr, r8, r0
 802892c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8028930:	9003      	str	r0, [sp, #12]
 8028932:	d018      	beq.n	8028966 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x146>
 8028934:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8028938:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802893c:	fb0b f000 	mul.w	r0, fp, r0
 8028940:	fb0b fb02 	mul.w	fp, fp, r2
 8028944:	0a02      	lsrs	r2, r0, #8
 8028946:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 802894a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802894e:	4402      	add	r2, r0
 8028950:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8028954:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8028958:	0a12      	lsrs	r2, r2, #8
 802895a:	0a00      	lsrs	r0, r0, #8
 802895c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8028960:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8028964:	4302      	orrs	r2, r0
 8028966:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802896a:	d019      	beq.n	80289a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x180>
 802896c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8028970:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8028974:	fb0a fb0b 	mul.w	fp, sl, fp
 8028978:	fb0a fa06 	mul.w	sl, sl, r6
 802897c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8028980:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028984:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8028988:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802898c:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8028990:	445e      	add	r6, fp
 8028992:	0a00      	lsrs	r0, r0, #8
 8028994:	0a36      	lsrs	r6, r6, #8
 8028996:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 802899a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 802899e:	4306      	orrs	r6, r0
 80289a0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80289a4:	d019      	beq.n	80289da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1ba>
 80289a6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80289aa:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80289ae:	fb09 fa0a 	mul.w	sl, r9, sl
 80289b2:	fb09 f904 	mul.w	r9, r9, r4
 80289b6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80289ba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80289be:	f509 7080 	add.w	r0, r9, #256	; 0x100
 80289c2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80289c6:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 80289ca:	4454      	add	r4, sl
 80289cc:	0a00      	lsrs	r0, r0, #8
 80289ce:	0a24      	lsrs	r4, r4, #8
 80289d0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80289d4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80289d8:	4304      	orrs	r4, r0
 80289da:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80289de:	d019      	beq.n	8028a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f4>
 80289e0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 80289e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80289e8:	fb08 f909 	mul.w	r9, r8, r9
 80289ec:	fb08 f803 	mul.w	r8, r8, r3
 80289f0:	ea4f 2319 	mov.w	r3, r9, lsr #8
 80289f4:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80289f8:	f508 7080 	add.w	r0, r8, #256	; 0x100
 80289fc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028a00:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8028a04:	444b      	add	r3, r9
 8028a06:	0a00      	lsrs	r0, r0, #8
 8028a08:	0a1b      	lsrs	r3, r3, #8
 8028a0a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8028a0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028a12:	4303      	orrs	r3, r0
 8028a14:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8028a18:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8028a1c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8028a20:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028a24:	fb0c f808 	mul.w	r8, ip, r8
 8028a28:	fb0c f606 	mul.w	r6, ip, r6
 8028a2c:	fb05 8800 	mla	r8, r5, r0, r8
 8028a30:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8028a34:	fb05 6202 	mla	r2, r5, r2, r6
 8028a38:	9d01      	ldr	r5, [sp, #4]
 8028a3a:	fb07 8800 	mla	r8, r7, r0, r8
 8028a3e:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8028a42:	fb0e 8000 	mla	r0, lr, r0, r8
 8028a46:	0a00      	lsrs	r0, r0, #8
 8028a48:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8028a4c:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8028a50:	9c02      	ldr	r4, [sp, #8]
 8028a52:	fb07 2700 	mla	r7, r7, r0, r2
 8028a56:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8028a5a:	9b03      	ldr	r3, [sp, #12]
 8028a5c:	fb0e 7000 	mla	r0, lr, r0, r7
 8028a60:	43da      	mvns	r2, r3
 8028a62:	9b00      	ldr	r3, [sp, #0]
 8028a64:	0a00      	lsrs	r0, r0, #8
 8028a66:	b2d2      	uxtb	r2, r2
 8028a68:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8028a6c:	4353      	muls	r3, r2
 8028a6e:	4354      	muls	r4, r2
 8028a70:	ea48 0000 	orr.w	r0, r8, r0
 8028a74:	4355      	muls	r5, r2
 8028a76:	4622      	mov	r2, r4
 8028a78:	1c5c      	adds	r4, r3, #1
 8028a7a:	eb04 2413 	add.w	r4, r4, r3, lsr #8
 8028a7e:	0c03      	lsrs	r3, r0, #16
 8028a80:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8028a84:	4b0f      	ldr	r3, [pc, #60]	; (8028ac4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 8028a86:	ea03 2304 	and.w	r3, r3, r4, lsl #8
 8028a8a:	1c54      	adds	r4, r2, #1
 8028a8c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8028a90:	b2c2      	uxtb	r2, r0
 8028a92:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8028a96:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8028a9a:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8028a9e:	1c6a      	adds	r2, r5, #1
 8028aa0:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8028aa4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8028aa8:	00c0      	lsls	r0, r0, #3
 8028aaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8028aae:	4318      	orrs	r0, r3
 8028ab0:	8008      	strh	r0, [r1, #0]
 8028ab2:	b005      	add	sp, #20
 8028ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028ab8:	0803217a 	.word	0x0803217a
 8028abc:	0803273d 	.word	0x0803273d
 8028ac0:	08032263 	.word	0x08032263
 8028ac4:	fffff800 	.word	0xfffff800

08028ac8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028acc:	ed2d 8b08 	vpush	{d8-d11}
 8028ad0:	b09b      	sub	sp, #108	; 0x6c
 8028ad2:	eeb0 aa40 	vmov.f32	s20, s0
 8028ad6:	eef0 9a60 	vmov.f32	s19, s1
 8028ada:	9218      	str	r2, [sp, #96]	; 0x60
 8028adc:	eeb0 9a41 	vmov.f32	s18, s2
 8028ae0:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8028ae2:	eeb0 8a62 	vmov.f32	s16, s5
 8028ae6:	9019      	str	r0, [sp, #100]	; 0x64
 8028ae8:	eef0 8a43 	vmov.f32	s17, s6
 8028aec:	6850      	ldr	r0, [r2, #4]
 8028aee:	eef0 ba44 	vmov.f32	s23, s8
 8028af2:	9116      	str	r1, [sp, #88]	; 0x58
 8028af4:	eeb0 ba64 	vmov.f32	s22, s9
 8028af8:	9307      	str	r3, [sp, #28]
 8028afa:	eef0 aa45 	vmov.f32	s21, s10
 8028afe:	6812      	ldr	r2, [r2, #0]
 8028b00:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8028b04:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8028b08:	fb00 1303 	mla	r3, r0, r3, r1
 8028b0c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028b10:	930a      	str	r3, [sp, #40]	; 0x28
 8028b12:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8028b14:	681b      	ldr	r3, [r3, #0]
 8028b16:	930f      	str	r3, [sp, #60]	; 0x3c
 8028b18:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028b1a:	2b00      	cmp	r3, #0
 8028b1c:	dc03      	bgt.n	8028b26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8028b1e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028b20:	2b00      	cmp	r3, #0
 8028b22:	f340 838b 	ble.w	802923c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 8028b26:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8028b28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028b2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028b30:	1e48      	subs	r0, r1, #1
 8028b32:	1e57      	subs	r7, r2, #1
 8028b34:	9b07      	ldr	r3, [sp, #28]
 8028b36:	2b00      	cmp	r3, #0
 8028b38:	f340 818b 	ble.w	8028e52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8028b3c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8028b40:	ea4f 4326 	mov.w	r3, r6, asr #16
 8028b44:	d406      	bmi.n	8028b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8028b46:	4584      	cmp	ip, r0
 8028b48:	da04      	bge.n	8028b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8028b4a:	2b00      	cmp	r3, #0
 8028b4c:	db02      	blt.n	8028b54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8028b4e:	42bb      	cmp	r3, r7
 8028b50:	f2c0 8180 	blt.w	8028e54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8028b54:	f11c 0c01 	adds.w	ip, ip, #1
 8028b58:	f100 8170 	bmi.w	8028e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8028b5c:	4561      	cmp	r1, ip
 8028b5e:	f2c0 816d 	blt.w	8028e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8028b62:	3301      	adds	r3, #1
 8028b64:	f100 816a 	bmi.w	8028e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8028b68:	429a      	cmp	r2, r3
 8028b6a:	f2c0 8167 	blt.w	8028e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8028b6e:	9b07      	ldr	r3, [sp, #28]
 8028b70:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028b72:	9317      	str	r3, [sp, #92]	; 0x5c
 8028b74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028b76:	2b00      	cmp	r3, #0
 8028b78:	f340 8189 	ble.w	8028e8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8028b7c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8028b7e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8028b82:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8028b84:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8028b88:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8028b8c:	1422      	asrs	r2, r4, #16
 8028b8e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028b92:	689b      	ldr	r3, [r3, #8]
 8028b94:	f100 81d8 	bmi.w	8028f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8028b98:	f103 38ff 	add.w	r8, r3, #4294967295
 8028b9c:	4542      	cmp	r2, r8
 8028b9e:	f280 81d3 	bge.w	8028f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8028ba2:	f1bc 0f00 	cmp.w	ip, #0
 8028ba6:	f2c0 81cf 	blt.w	8028f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8028baa:	f10e 38ff 	add.w	r8, lr, #4294967295
 8028bae:	45c4      	cmp	ip, r8
 8028bb0:	f280 81ca 	bge.w	8028f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8028bb4:	b21b      	sxth	r3, r3
 8028bb6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028bb8:	fb0c 2203 	mla	r2, ip, r3, r2
 8028bbc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8028bc0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8028bc4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8028bc8:	2900      	cmp	r1, #0
 8028bca:	f000 81a6 	beq.w	8028f1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8028bce:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8028bd2:	950b      	str	r5, [sp, #44]	; 0x2c
 8028bd4:	0e2d      	lsrs	r5, r5, #24
 8028bd6:	9512      	str	r5, [sp, #72]	; 0x48
 8028bd8:	b180      	cbz	r0, 8028bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8028bda:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8028bde:	3b01      	subs	r3, #1
 8028be0:	009b      	lsls	r3, r3, #2
 8028be2:	3304      	adds	r3, #4
 8028be4:	eb08 0c03 	add.w	ip, r8, r3
 8028be8:	f858 3003 	ldr.w	r3, [r8, r3]
 8028bec:	9308      	str	r3, [sp, #32]
 8028bee:	0e1b      	lsrs	r3, r3, #24
 8028bf0:	9310      	str	r3, [sp, #64]	; 0x40
 8028bf2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8028bf6:	930c      	str	r3, [sp, #48]	; 0x30
 8028bf8:	0e1b      	lsrs	r3, r3, #24
 8028bfa:	9313      	str	r3, [sp, #76]	; 0x4c
 8028bfc:	b289      	uxth	r1, r1
 8028bfe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8028c00:	b280      	uxth	r0, r0
 8028c02:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028c04:	fb01 f900 	mul.w	r9, r1, r0
 8028c08:	0109      	lsls	r1, r1, #4
 8028c0a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028c0e:	eba1 0809 	sub.w	r8, r1, r9
 8028c12:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8028c16:	b280      	uxth	r0, r0
 8028c18:	fa1f f888 	uxth.w	r8, r8
 8028c1c:	1a09      	subs	r1, r1, r0
 8028c1e:	fb08 f303 	mul.w	r3, r8, r3
 8028c22:	b289      	uxth	r1, r1
 8028c24:	fb01 330e 	mla	r3, r1, lr, r3
 8028c28:	fb00 3305 	mla	r3, r0, r5, r3
 8028c2c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028c2e:	fb09 3305 	mla	r3, r9, r5, r3
 8028c32:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8028c36:	2b00      	cmp	r3, #0
 8028c38:	f000 80f7 	beq.w	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028c3c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8028c40:	d01b      	beq.n	8028c7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8028c42:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8028c46:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028c4a:	fb0e fa0a 	mul.w	sl, lr, sl
 8028c4e:	fb0e fe02 	mul.w	lr, lr, r2
 8028c52:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8028c56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028c5a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8028c5e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8028c62:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8028c66:	4452      	add	r2, sl
 8028c68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028c6c:	0a12      	lsrs	r2, r2, #8
 8028c6e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028c72:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8028c76:	ea42 020c 	orr.w	r2, r2, ip
 8028c7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028c7c:	2dff      	cmp	r5, #255	; 0xff
 8028c7e:	d021      	beq.n	8028cc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8028c80:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028c82:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028c86:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028c88:	fb05 fb0b 	mul.w	fp, r5, fp
 8028c8c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028c8e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028c92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8028c94:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028c98:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028c9c:	fb05 fa0a 	mul.w	sl, r5, sl
 8028ca0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028ca4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028ca8:	44de      	add	lr, fp
 8028caa:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028cae:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028cb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028cb6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028cba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028cbe:	ea4e 050a 	orr.w	r5, lr, sl
 8028cc2:	950b      	str	r5, [sp, #44]	; 0x2c
 8028cc4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028cc6:	2dff      	cmp	r5, #255	; 0xff
 8028cc8:	d021      	beq.n	8028d0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8028cca:	9d08      	ldr	r5, [sp, #32]
 8028ccc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028cd0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028cd2:	fb05 fb0b 	mul.w	fp, r5, fp
 8028cd6:	9d08      	ldr	r5, [sp, #32]
 8028cd8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028cdc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8028cde:	fb05 fa0e 	mul.w	sl, r5, lr
 8028ce2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028ce6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028cea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028cee:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028cf2:	44de      	add	lr, fp
 8028cf4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028cf8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028cfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028d00:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028d04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028d08:	ea4e 050a 	orr.w	r5, lr, sl
 8028d0c:	9508      	str	r5, [sp, #32]
 8028d0e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028d10:	2dff      	cmp	r5, #255	; 0xff
 8028d12:	d021      	beq.n	8028d58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8028d14:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028d16:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8028d1a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028d1c:	fb05 fb0b 	mul.w	fp, r5, fp
 8028d20:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028d22:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8028d26:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8028d28:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028d2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028d30:	fb05 fa0a 	mul.w	sl, r5, sl
 8028d34:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028d38:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028d3c:	44de      	add	lr, fp
 8028d3e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028d42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028d46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028d4a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028d4e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028d52:	ea4e 050a 	orr.w	r5, lr, sl
 8028d56:	950c      	str	r5, [sp, #48]	; 0x30
 8028d58:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028d5a:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8028d5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8028d62:	2bff      	cmp	r3, #255	; 0xff
 8028d64:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028d68:	9d08      	ldr	r5, [sp, #32]
 8028d6a:	fb08 fc0c 	mul.w	ip, r8, ip
 8028d6e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8028d72:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8028d76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8028d78:	fb00 cc0e 	mla	ip, r0, lr, ip
 8028d7c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8028d80:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8028d82:	fb09 cc0e 	mla	ip, r9, lr, ip
 8028d86:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8028d8a:	fb08 f80e 	mul.w	r8, r8, lr
 8028d8e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028d92:	fb01 8202 	mla	r2, r1, r2, r8
 8028d96:	9908      	ldr	r1, [sp, #32]
 8028d98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028d9c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8028da0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028da2:	fb00 220a 	mla	r2, r0, sl, r2
 8028da6:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8028daa:	fb09 2900 	mla	r9, r9, r0, r2
 8028dae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028db2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8028db6:	ea4c 0c09 	orr.w	ip, ip, r9
 8028dba:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8028dbe:	f000 80b5 	beq.w	8028f2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8028dc2:	8839      	ldrh	r1, [r7, #0]
 8028dc4:	43db      	mvns	r3, r3
 8028dc6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8028dca:	fa5f f883 	uxtb.w	r8, r3
 8028dce:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8028dd2:	10c8      	asrs	r0, r1, #3
 8028dd4:	00cb      	lsls	r3, r1, #3
 8028dd6:	fb0e fe08 	mul.w	lr, lr, r8
 8028dda:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028dde:	b2db      	uxtb	r3, r3
 8028de0:	f10e 0101 	add.w	r1, lr, #1
 8028de4:	fb00 f008 	mul.w	r0, r0, r8
 8028de8:	fb03 f308 	mul.w	r3, r3, r8
 8028dec:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8028df0:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8028df4:	fa5f fc8c 	uxtb.w	ip, ip
 8028df8:	eb0e 2e11 	add.w	lr, lr, r1, lsr #8
 8028dfc:	4960      	ldr	r1, [pc, #384]	; (8028f80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>)
 8028dfe:	ea01 2e0e 	and.w	lr, r1, lr, lsl #8
 8028e02:	1c59      	adds	r1, r3, #1
 8028e04:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8028e08:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8028e0c:	1c43      	adds	r3, r0, #1
 8028e0e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028e12:	b2d3      	uxtb	r3, r2
 8028e14:	ea4e 0cdc 	orr.w	ip, lr, ip, lsr #3
 8028e18:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8028e1c:	00db      	lsls	r3, r3, #3
 8028e1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028e22:	ea4c 0c03 	orr.w	ip, ip, r3
 8028e26:	f8a7 c000 	strh.w	ip, [r7]
 8028e2a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8028e2c:	3702      	adds	r7, #2
 8028e2e:	441c      	add	r4, r3
 8028e30:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8028e32:	441e      	add	r6, r3
 8028e34:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028e36:	3b01      	subs	r3, #1
 8028e38:	9317      	str	r3, [sp, #92]	; 0x5c
 8028e3a:	e69b      	b.n	8028b74 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8028e3c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8028e3e:	441c      	add	r4, r3
 8028e40:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8028e42:	441e      	add	r6, r3
 8028e44:	9b07      	ldr	r3, [sp, #28]
 8028e46:	3b01      	subs	r3, #1
 8028e48:	9307      	str	r3, [sp, #28]
 8028e4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028e4c:	3302      	adds	r3, #2
 8028e4e:	930a      	str	r3, [sp, #40]	; 0x28
 8028e50:	e670      	b.n	8028b34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8028e52:	d023      	beq.n	8028e9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8028e54:	9b07      	ldr	r3, [sp, #28]
 8028e56:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8028e58:	3b01      	subs	r3, #1
 8028e5a:	fb00 4003 	mla	r0, r0, r3, r4
 8028e5e:	1400      	asrs	r0, r0, #16
 8028e60:	f53f ae85 	bmi.w	8028b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8028e64:	3901      	subs	r1, #1
 8028e66:	4288      	cmp	r0, r1
 8028e68:	f6bf ae81 	bge.w	8028b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8028e6c:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8028e6e:	fb01 6303 	mla	r3, r1, r3, r6
 8028e72:	141b      	asrs	r3, r3, #16
 8028e74:	f53f ae7b 	bmi.w	8028b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8028e78:	3a01      	subs	r2, #1
 8028e7a:	4293      	cmp	r3, r2
 8028e7c:	f6bf ae77 	bge.w	8028b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8028e80:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8028e84:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8028e88:	f1bb 0f00 	cmp.w	fp, #0
 8028e8c:	dc7a      	bgt.n	8028f84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4bc>
 8028e8e:	9b07      	ldr	r3, [sp, #28]
 8028e90:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8028e94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028e96:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8028e9a:	930a      	str	r3, [sp, #40]	; 0x28
 8028e9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028e9e:	2b00      	cmp	r3, #0
 8028ea0:	f340 81cc 	ble.w	802923c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x774>
 8028ea4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028ea8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028eaa:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8028eae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8028eb2:	eef0 6a48 	vmov.f32	s13, s16
 8028eb6:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8028eba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8028ebe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028ec2:	ee16 4a90 	vmov	r4, s13
 8028ec6:	eef0 6a68 	vmov.f32	s13, s17
 8028eca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028ece:	ee16 6a90 	vmov	r6, s13
 8028ed2:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8028ed6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8028eda:	ee37 8a48 	vsub.f32	s16, s14, s16
 8028ede:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8028ee2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8028ee6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8028eea:	ee18 2a10 	vmov	r2, s16
 8028eee:	eeb0 8a47 	vmov.f32	s16, s14
 8028ef2:	fb92 f3f3 	sdiv	r3, r2, r3
 8028ef6:	ee18 2a90 	vmov	r2, s17
 8028efa:	932f      	str	r3, [sp, #188]	; 0xbc
 8028efc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028efe:	eef0 8a67 	vmov.f32	s17, s15
 8028f02:	fb92 f3f3 	sdiv	r3, r2, r3
 8028f06:	9330      	str	r3, [sp, #192]	; 0xc0
 8028f08:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028f0a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8028f0c:	3b01      	subs	r3, #1
 8028f0e:	9316      	str	r3, [sp, #88]	; 0x58
 8028f10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028f12:	bf08      	it	eq
 8028f14:	4613      	moveq	r3, r2
 8028f16:	9307      	str	r3, [sp, #28]
 8028f18:	e5fe      	b.n	8028b18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8028f1a:	2800      	cmp	r0, #0
 8028f1c:	f43f ae6e 	beq.w	8028bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8028f20:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8028f24:	9308      	str	r3, [sp, #32]
 8028f26:	0e1b      	lsrs	r3, r3, #24
 8028f28:	9310      	str	r3, [sp, #64]	; 0x40
 8028f2a:	e667      	b.n	8028bfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8028f2c:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8028f30:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8028f34:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8028f38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028f3c:	f022 0207 	bic.w	r2, r2, #7
 8028f40:	431a      	orrs	r2, r3
 8028f42:	ea42 0c0c 	orr.w	ip, r2, ip
 8028f46:	e76e      	b.n	8028e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8028f48:	f112 0801 	adds.w	r8, r2, #1
 8028f4c:	f53f af6d 	bmi.w	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028f50:	4543      	cmp	r3, r8
 8028f52:	f6ff af6a 	blt.w	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028f56:	f11c 0801 	adds.w	r8, ip, #1
 8028f5a:	f53f af66 	bmi.w	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028f5e:	45c6      	cmp	lr, r8
 8028f60:	f6ff af63 	blt.w	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028f64:	b21b      	sxth	r3, r3
 8028f66:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8028f6a:	fa0f f28e 	sxth.w	r2, lr
 8028f6e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8028f72:	9200      	str	r2, [sp, #0]
 8028f74:	4639      	mov	r1, r7
 8028f76:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028f78:	9819      	ldr	r0, [sp, #100]	; 0x64
 8028f7a:	f7ff fc51 	bl	8028820 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8028f7e:	e754      	b.n	8028e2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8028f80:	fffff800 	.word	0xfffff800
 8028f84:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8028f86:	1421      	asrs	r1, r4, #16
 8028f88:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8028f8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8028f8e:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8028f92:	1433      	asrs	r3, r6, #16
 8028f94:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8028f98:	fb07 1303 	mla	r3, r7, r3, r1
 8028f9c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028f9e:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8028fa2:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8028fa6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8028faa:	2a00      	cmp	r2, #0
 8028fac:	f000 812f 	beq.w	802920e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8028fb0:	684d      	ldr	r5, [r1, #4]
 8028fb2:	950d      	str	r5, [sp, #52]	; 0x34
 8028fb4:	0e2d      	lsrs	r5, r5, #24
 8028fb6:	9514      	str	r5, [sp, #80]	; 0x50
 8028fb8:	b178      	cbz	r0, 8028fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8028fba:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8028fbe:	3f01      	subs	r7, #1
 8028fc0:	00bf      	lsls	r7, r7, #2
 8028fc2:	3704      	adds	r7, #4
 8028fc4:	eb01 0e07 	add.w	lr, r1, r7
 8028fc8:	59c9      	ldr	r1, [r1, r7]
 8028fca:	9109      	str	r1, [sp, #36]	; 0x24
 8028fcc:	0e09      	lsrs	r1, r1, #24
 8028fce:	9111      	str	r1, [sp, #68]	; 0x44
 8028fd0:	f8de 1004 	ldr.w	r1, [lr, #4]
 8028fd4:	910e      	str	r1, [sp, #56]	; 0x38
 8028fd6:	0e09      	lsrs	r1, r1, #24
 8028fd8:	9115      	str	r1, [sp, #84]	; 0x54
 8028fda:	b292      	uxth	r2, r2
 8028fdc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8028fde:	b280      	uxth	r0, r0
 8028fe0:	fb02 f900 	mul.w	r9, r2, r0
 8028fe4:	0112      	lsls	r2, r2, #4
 8028fe6:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028fea:	eba2 0e09 	sub.w	lr, r2, r9
 8028fee:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8028ff2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8028ff4:	b280      	uxth	r0, r0
 8028ff6:	fa1f fe8e 	uxth.w	lr, lr
 8028ffa:	1a09      	subs	r1, r1, r0
 8028ffc:	fb0e f202 	mul.w	r2, lr, r2
 8029000:	b289      	uxth	r1, r1
 8029002:	fb01 220c 	mla	r2, r1, ip, r2
 8029006:	fb00 2205 	mla	r2, r0, r5, r2
 802900a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802900c:	fb09 2205 	mla	r2, r9, r5, r2
 8029010:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8029014:	2a00      	cmp	r2, #0
 8029016:	f000 80f1 	beq.w	80291fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 802901a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802901e:	d019      	beq.n	8029054 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58c>
 8029020:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8029024:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8029028:	fb0c fa0a 	mul.w	sl, ip, sl
 802902c:	fb0c fc03 	mul.w	ip, ip, r3
 8029030:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8029034:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8029038:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802903c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8029040:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8029044:	4453      	add	r3, sl
 8029046:	0a3f      	lsrs	r7, r7, #8
 8029048:	0a1b      	lsrs	r3, r3, #8
 802904a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802904e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8029052:	433b      	orrs	r3, r7
 8029054:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8029056:	2dff      	cmp	r5, #255	; 0xff
 8029058:	d020      	beq.n	802909c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d4>
 802905a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802905c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8029060:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8029062:	436f      	muls	r7, r5
 8029064:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8029066:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802906a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802906e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8029070:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8029074:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8029078:	fb05 fa0a 	mul.w	sl, r5, sl
 802907c:	44bc      	add	ip, r7
 802907e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8029082:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029086:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802908a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802908e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8029092:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8029096:	ea4c 050a 	orr.w	r5, ip, sl
 802909a:	950d      	str	r5, [sp, #52]	; 0x34
 802909c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802909e:	2dff      	cmp	r5, #255	; 0xff
 80290a0:	d020      	beq.n	80290e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61c>
 80290a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80290a4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80290a8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80290aa:	436f      	muls	r7, r5
 80290ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80290ae:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80290b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80290b4:	fb05 fa0c 	mul.w	sl, r5, ip
 80290b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80290bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80290c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80290c4:	44bc      	add	ip, r7
 80290c6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80290ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80290ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80290d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80290d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80290da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80290de:	ea4c 050a 	orr.w	r5, ip, sl
 80290e2:	9509      	str	r5, [sp, #36]	; 0x24
 80290e4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80290e6:	2dff      	cmp	r5, #255	; 0xff
 80290e8:	d020      	beq.n	802912c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x664>
 80290ea:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80290ec:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80290f0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80290f2:	436f      	muls	r7, r5
 80290f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80290f6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80290fa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80290fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8029100:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8029104:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8029108:	fb05 fa0a 	mul.w	sl, r5, sl
 802910c:	44bc      	add	ip, r7
 802910e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8029112:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029116:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802911a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802911e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8029122:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8029126:	ea4c 050a 	orr.w	r5, ip, sl
 802912a:	950e      	str	r5, [sp, #56]	; 0x38
 802912c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802912e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8029132:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8029136:	2aff      	cmp	r2, #255	; 0xff
 8029138:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802913c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802913e:	fb0e f707 	mul.w	r7, lr, r7
 8029142:	fb01 770c 	mla	r7, r1, ip, r7
 8029146:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802914a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802914c:	fb00 770c 	mla	r7, r0, ip, r7
 8029150:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8029154:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8029156:	fb09 770c 	mla	r7, r9, ip, r7
 802915a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802915e:	fb0e fe0c 	mul.w	lr, lr, ip
 8029162:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8029166:	fb01 e303 	mla	r3, r1, r3, lr
 802916a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802916c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8029170:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8029174:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029176:	fb00 330a 	mla	r3, r0, sl, r3
 802917a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802917e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8029182:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029186:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802918a:	ea47 070c 	orr.w	r7, r7, ip
 802918e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8029192:	d045      	beq.n	8029220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8029194:	f8b8 1000 	ldrh.w	r1, [r8]
 8029198:	43d2      	mvns	r2, r2
 802919a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802919e:	fa5f fe82 	uxtb.w	lr, r2
 80291a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80291a6:	10c8      	asrs	r0, r1, #3
 80291a8:	00ca      	lsls	r2, r1, #3
 80291aa:	fb0c fc0e 	mul.w	ip, ip, lr
 80291ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80291b2:	b2d2      	uxtb	r2, r2
 80291b4:	f10c 0101 	add.w	r1, ip, #1
 80291b8:	fb00 f00e 	mul.w	r0, r0, lr
 80291bc:	fb02 f20e 	mul.w	r2, r2, lr
 80291c0:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80291c4:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80291c8:	b2ff      	uxtb	r7, r7
 80291ca:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80291ce:	491e      	ldr	r1, [pc, #120]	; (8029248 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x780>)
 80291d0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80291d4:	1c51      	adds	r1, r2, #1
 80291d6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80291da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80291de:	1c42      	adds	r2, r0, #1
 80291e0:	ea4c 0cd7 	orr.w	ip, ip, r7, lsr #3
 80291e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80291e8:	b2df      	uxtb	r7, r3
 80291ea:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80291ee:	00ff      	lsls	r7, r7, #3
 80291f0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80291f4:	ea4c 0c07 	orr.w	ip, ip, r7
 80291f8:	f8a8 c000 	strh.w	ip, [r8]
 80291fc:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 80291fe:	f108 0802 	add.w	r8, r8, #2
 8029202:	f10b 3bff 	add.w	fp, fp, #4294967295
 8029206:	441c      	add	r4, r3
 8029208:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802920a:	441e      	add	r6, r3
 802920c:	e63c      	b.n	8028e88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802920e:	2800      	cmp	r0, #0
 8029210:	f43f aee3 	beq.w	8028fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8029214:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029218:	9109      	str	r1, [sp, #36]	; 0x24
 802921a:	0e09      	lsrs	r1, r1, #24
 802921c:	9111      	str	r1, [sp, #68]	; 0x44
 802921e:	e6dc      	b.n	8028fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8029220:	097a      	lsrs	r2, r7, #5
 8029222:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8029226:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802922a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802922e:	f023 0307 	bic.w	r3, r3, #7
 8029232:	4313      	orrs	r3, r2
 8029234:	431f      	orrs	r7, r3
 8029236:	f8a8 7000 	strh.w	r7, [r8]
 802923a:	e7df      	b.n	80291fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 802923c:	b01b      	add	sp, #108	; 0x6c
 802923e:	ecbd 8b08 	vpop	{d8-d11}
 8029242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029246:	bf00      	nop
 8029248:	fffff800 	.word	0xfffff800

0802924c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802924c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029250:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8029254:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8029258:	2c00      	cmp	r4, #0
 802925a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802925e:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8029262:	fb04 ce03 	mla	lr, r4, r3, ip
 8029266:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 802926a:	db60      	blt.n	802932e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 802926c:	45a1      	cmp	r9, r4
 802926e:	dd5e      	ble.n	802932e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8029270:	f1bc 0f00 	cmp.w	ip, #0
 8029274:	db59      	blt.n	802932a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8029276:	45e0      	cmp	r8, ip
 8029278:	dd57      	ble.n	802932a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 802927a:	ea4f 005e 	mov.w	r0, lr, lsr #1
 802927e:	f01e 0f01 	tst.w	lr, #1
 8029282:	5c16      	ldrb	r6, [r2, r0]
 8029284:	bf0c      	ite	eq
 8029286:	f006 060f 	andeq.w	r6, r6, #15
 802928a:	1136      	asrne	r6, r6, #4
 802928c:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8029290:	b2f6      	uxtb	r6, r6
 8029292:	f11c 0001 	adds.w	r0, ip, #1
 8029296:	d44d      	bmi.n	8029334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8029298:	4580      	cmp	r8, r0
 802929a:	dd4b      	ble.n	8029334 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 802929c:	2d00      	cmp	r5, #0
 802929e:	d04b      	beq.n	8029338 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 80292a0:	f10e 0a01 	add.w	sl, lr, #1
 80292a4:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80292a8:	f01a 0f01 	tst.w	sl, #1
 80292ac:	5c10      	ldrb	r0, [r2, r0]
 80292ae:	bf0c      	ite	eq
 80292b0:	f000 000f 	andeq.w	r0, r0, #15
 80292b4:	1100      	asrne	r0, r0, #4
 80292b6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80292ba:	b2c0      	uxtb	r0, r0
 80292bc:	3401      	adds	r4, #1
 80292be:	d43f      	bmi.n	8029340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80292c0:	45a1      	cmp	r9, r4
 80292c2:	dd3d      	ble.n	8029340 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 80292c4:	2f00      	cmp	r7, #0
 80292c6:	f000 809e 	beq.w	8029406 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 80292ca:	f1bc 0f00 	cmp.w	ip, #0
 80292ce:	db35      	blt.n	802933c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80292d0:	45e0      	cmp	r8, ip
 80292d2:	dd33      	ble.n	802933c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 80292d4:	eb03 090e 	add.w	r9, r3, lr
 80292d8:	ea4f 0459 	mov.w	r4, r9, lsr #1
 80292dc:	f019 0f01 	tst.w	r9, #1
 80292e0:	5d14      	ldrb	r4, [r2, r4]
 80292e2:	bf0c      	ite	eq
 80292e4:	f004 040f 	andeq.w	r4, r4, #15
 80292e8:	1124      	asrne	r4, r4, #4
 80292ea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80292ee:	b2e4      	uxtb	r4, r4
 80292f0:	f11c 0c01 	adds.w	ip, ip, #1
 80292f4:	d427      	bmi.n	8029346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80292f6:	45e0      	cmp	r8, ip
 80292f8:	dd25      	ble.n	8029346 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 80292fa:	b335      	cbz	r5, 802934a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 80292fc:	3301      	adds	r3, #1
 80292fe:	449e      	add	lr, r3
 8029300:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8029304:	f01e 0f01 	tst.w	lr, #1
 8029308:	5cd2      	ldrb	r2, [r2, r3]
 802930a:	bf0c      	ite	eq
 802930c:	f002 020f 	andeq.w	r2, r2, #15
 8029310:	1112      	asrne	r2, r2, #4
 8029312:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029316:	b2d3      	uxtb	r3, r2
 8029318:	2d0f      	cmp	r5, #15
 802931a:	d917      	bls.n	802934c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 802931c:	4b3c      	ldr	r3, [pc, #240]	; (8029410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 802931e:	f240 210d 	movw	r1, #525	; 0x20d
 8029322:	4a3c      	ldr	r2, [pc, #240]	; (8029414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8029324:	483c      	ldr	r0, [pc, #240]	; (8029418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8029326:	f002 fddf 	bl	802bee8 <__assert_func>
 802932a:	2600      	movs	r6, #0
 802932c:	e7b1      	b.n	8029292 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 802932e:	2000      	movs	r0, #0
 8029330:	4606      	mov	r6, r0
 8029332:	e7c3      	b.n	80292bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8029334:	2000      	movs	r0, #0
 8029336:	e7c1      	b.n	80292bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8029338:	4628      	mov	r0, r5
 802933a:	e7bf      	b.n	80292bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 802933c:	2400      	movs	r4, #0
 802933e:	e7d7      	b.n	80292f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8029340:	2300      	movs	r3, #0
 8029342:	461c      	mov	r4, r3
 8029344:	e7e8      	b.n	8029318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8029346:	2300      	movs	r3, #0
 8029348:	e7e6      	b.n	8029318 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 802934a:	462b      	mov	r3, r5
 802934c:	2f0f      	cmp	r7, #15
 802934e:	d8e5      	bhi.n	802931c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8029350:	b2ad      	uxth	r5, r5
 8029352:	b2bf      	uxth	r7, r7
 8029354:	fb05 fc07 	mul.w	ip, r5, r7
 8029358:	012d      	lsls	r5, r5, #4
 802935a:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 802935e:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8029362:	eba5 050c 	sub.w	r5, r5, ip
 8029366:	b2bf      	uxth	r7, r7
 8029368:	b2ad      	uxth	r5, r5
 802936a:	1bd2      	subs	r2, r2, r7
 802936c:	4368      	muls	r0, r5
 802936e:	b292      	uxth	r2, r2
 8029370:	fb06 0002 	mla	r0, r6, r2, r0
 8029374:	fb07 0404 	mla	r4, r7, r4, r0
 8029378:	fb0c 4303 	mla	r3, ip, r3, r4
 802937c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029380:	2b00      	cmp	r3, #0
 8029382:	d03e      	beq.n	8029402 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b6>
 8029384:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8029388:	4a24      	ldr	r2, [pc, #144]	; (802941c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 802938a:	4343      	muls	r3, r0
 802938c:	6816      	ldr	r6, [r2, #0]
 802938e:	1c58      	adds	r0, r3, #1
 8029390:	880a      	ldrh	r2, [r1, #0]
 8029392:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8029396:	1215      	asrs	r5, r2, #8
 8029398:	1200      	asrs	r0, r0, #8
 802939a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802939e:	10d7      	asrs	r7, r2, #3
 80293a0:	b284      	uxth	r4, r0
 80293a2:	43c0      	mvns	r0, r0
 80293a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80293a8:	00d2      	lsls	r2, r2, #3
 80293aa:	b2c3      	uxtb	r3, r0
 80293ac:	0a30      	lsrs	r0, r6, #8
 80293ae:	fb15 f503 	smulbb	r5, r5, r3
 80293b2:	b2d2      	uxtb	r2, r2
 80293b4:	fb17 f703 	smulbb	r7, r7, r3
 80293b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80293bc:	fb12 f303 	smulbb	r3, r2, r3
 80293c0:	fb00 5004 	mla	r0, r0, r4, r5
 80293c4:	08f5      	lsrs	r5, r6, #3
 80293c6:	00f6      	lsls	r6, r6, #3
 80293c8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80293cc:	b280      	uxth	r0, r0
 80293ce:	b2f6      	uxtb	r6, r6
 80293d0:	fb05 7504 	mla	r5, r5, r4, r7
 80293d4:	fb06 3304 	mla	r3, r6, r4, r3
 80293d8:	1c44      	adds	r4, r0, #1
 80293da:	b2ad      	uxth	r5, r5
 80293dc:	b29a      	uxth	r2, r3
 80293de:	1c6b      	adds	r3, r5, #1
 80293e0:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 80293e4:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 80293e8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80293ec:	095b      	lsrs	r3, r3, #5
 80293ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80293f2:	4303      	orrs	r3, r0
 80293f4:	1c50      	adds	r0, r2, #1
 80293f6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80293fa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80293fe:	4313      	orrs	r3, r2
 8029400:	800b      	strh	r3, [r1, #0]
 8029402:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029406:	2d0f      	cmp	r5, #15
 8029408:	d888      	bhi.n	802931c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 802940a:	463b      	mov	r3, r7
 802940c:	463c      	mov	r4, r7
 802940e:	e79f      	b.n	8029350 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8029410:	0803217a 	.word	0x0803217a
 8029414:	0803273d 	.word	0x0803273d
 8029418:	08032263 	.word	0x08032263
 802941c:	20004190 	.word	0x20004190

08029420 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029424:	ed2d 8b08 	vpush	{d8-d11}
 8029428:	b097      	sub	sp, #92	; 0x5c
 802942a:	eeb0 aa40 	vmov.f32	s20, s0
 802942e:	eef0 9a60 	vmov.f32	s19, s1
 8029432:	9214      	str	r2, [sp, #80]	; 0x50
 8029434:	eeb0 9a41 	vmov.f32	s18, s2
 8029438:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 802943a:	eeb0 8a62 	vmov.f32	s16, s5
 802943e:	9309      	str	r3, [sp, #36]	; 0x24
 8029440:	eef0 8a43 	vmov.f32	s17, s6
 8029444:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8029448:	eef0 ba44 	vmov.f32	s23, s8
 802944c:	9015      	str	r0, [sp, #84]	; 0x54
 802944e:	eeb0 ba64 	vmov.f32	s22, s9
 8029452:	6850      	ldr	r0, [r2, #4]
 8029454:	eef0 aa45 	vmov.f32	s21, s10
 8029458:	910d      	str	r1, [sp, #52]	; 0x34
 802945a:	930e      	str	r3, [sp, #56]	; 0x38
 802945c:	6812      	ldr	r2, [r2, #0]
 802945e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8029462:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 8029466:	fb00 1303 	mla	r3, r0, r3, r1
 802946a:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 802946e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8029470:	689b      	ldr	r3, [r3, #8]
 8029472:	3301      	adds	r3, #1
 8029474:	f023 0301 	bic.w	r3, r3, #1
 8029478:	930a      	str	r3, [sp, #40]	; 0x28
 802947a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802947c:	681f      	ldr	r7, [r3, #0]
 802947e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8029480:	2b00      	cmp	r3, #0
 8029482:	dc03      	bgt.n	802948c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8029484:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8029486:	2b00      	cmp	r3, #0
 8029488:	f340 826b 	ble.w	8029962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
 802948c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802948e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029492:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029496:	1e48      	subs	r0, r1, #1
 8029498:	f102 3cff 	add.w	ip, r2, #4294967295
 802949c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802949e:	2b00      	cmp	r3, #0
 80294a0:	f340 80f4 	ble.w	802968c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 80294a4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80294a8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80294ac:	d406      	bmi.n	80294bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80294ae:	4586      	cmp	lr, r0
 80294b0:	da04      	bge.n	80294bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80294b2:	2b00      	cmp	r3, #0
 80294b4:	db02      	blt.n	80294bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80294b6:	4563      	cmp	r3, ip
 80294b8:	f2c0 80e9 	blt.w	802968e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26e>
 80294bc:	f11e 0e01 	adds.w	lr, lr, #1
 80294c0:	f100 80da 	bmi.w	8029678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80294c4:	4571      	cmp	r1, lr
 80294c6:	f2c0 80d7 	blt.w	8029678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80294ca:	3301      	adds	r3, #1
 80294cc:	f100 80d4 	bmi.w	8029678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80294d0:	429a      	cmp	r2, r3
 80294d2:	f2c0 80d1 	blt.w	8029678 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 80294d6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80294da:	46d0      	mov	r8, sl
 80294dc:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 80294e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80294e2:	f1b9 0f00 	cmp.w	r9, #0
 80294e6:	f340 80f1 	ble.w	80296cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ac>
 80294ea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80294ec:	1430      	asrs	r0, r6, #16
 80294ee:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80294f2:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80294f6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80294fa:	1423      	asrs	r3, r4, #16
 80294fc:	f100 813b 	bmi.w	8029776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8029500:	f10c 3bff 	add.w	fp, ip, #4294967295
 8029504:	455b      	cmp	r3, fp
 8029506:	f280 8136 	bge.w	8029776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802950a:	2800      	cmp	r0, #0
 802950c:	f2c0 8133 	blt.w	8029776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8029510:	f10e 3bff 	add.w	fp, lr, #4294967295
 8029514:	4558      	cmp	r0, fp
 8029516:	f280 812e 	bge.w	8029776 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802951a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802951c:	fb00 3305 	mla	r3, r0, r5, r3
 8029520:	0858      	lsrs	r0, r3, #1
 8029522:	07dd      	lsls	r5, r3, #31
 8029524:	f817 c000 	ldrb.w	ip, [r7, r0]
 8029528:	bf54      	ite	pl
 802952a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802952e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029532:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8029536:	fa5f fc8c 	uxtb.w	ip, ip
 802953a:	2a00      	cmp	r2, #0
 802953c:	f000 810a 	beq.w	8029754 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x334>
 8029540:	1c58      	adds	r0, r3, #1
 8029542:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8029546:	07c0      	lsls	r0, r0, #31
 8029548:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802954c:	bf54      	ite	pl
 802954e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8029552:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8029556:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802955a:	fa5f f08e 	uxtb.w	r0, lr
 802955e:	9010      	str	r0, [sp, #64]	; 0x40
 8029560:	b1e1      	cbz	r1, 802959c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8029562:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8029564:	4403      	add	r3, r0
 8029566:	0858      	lsrs	r0, r3, #1
 8029568:	07dd      	lsls	r5, r3, #31
 802956a:	f103 0301 	add.w	r3, r3, #1
 802956e:	5c38      	ldrb	r0, [r7, r0]
 8029570:	bf54      	ite	pl
 8029572:	f000 000f 	andpl.w	r0, r0, #15
 8029576:	1100      	asrmi	r0, r0, #4
 8029578:	07dd      	lsls	r5, r3, #31
 802957a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802957e:	b2c0      	uxtb	r0, r0
 8029580:	900b      	str	r0, [sp, #44]	; 0x2c
 8029582:	ea4f 0053 	mov.w	r0, r3, lsr #1
 8029586:	f817 e000 	ldrb.w	lr, [r7, r0]
 802958a:	bf54      	ite	pl
 802958c:	f00e 030f 	andpl.w	r3, lr, #15
 8029590:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8029594:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8029598:	b2db      	uxtb	r3, r3
 802959a:	9311      	str	r3, [sp, #68]	; 0x44
 802959c:	b292      	uxth	r2, r2
 802959e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80295a0:	b289      	uxth	r1, r1
 80295a2:	fb02 f301 	mul.w	r3, r2, r1
 80295a6:	0112      	lsls	r2, r2, #4
 80295a8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80295ac:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80295b0:	1ad2      	subs	r2, r2, r3
 80295b2:	b289      	uxth	r1, r1
 80295b4:	b292      	uxth	r2, r2
 80295b6:	1a40      	subs	r0, r0, r1
 80295b8:	436a      	muls	r2, r5
 80295ba:	b280      	uxth	r0, r0
 80295bc:	fb0c 2c00 	mla	ip, ip, r0, r2
 80295c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80295c2:	fb01 c102 	mla	r1, r1, r2, ip
 80295c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80295c8:	fb03 1302 	mla	r3, r3, r2, r1
 80295cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80295d0:	2b00      	cmp	r3, #0
 80295d2:	d048      	beq.n	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80295d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80295d6:	4a78      	ldr	r2, [pc, #480]	; (80297b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 80295d8:	434b      	muls	r3, r1
 80295da:	f8d2 e000 	ldr.w	lr, [r2]
 80295de:	1c59      	adds	r1, r3, #1
 80295e0:	f8b8 2000 	ldrh.w	r2, [r8]
 80295e4:	ea4f 201e 	mov.w	r0, lr, lsr #8
 80295e8:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80295ec:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80295f0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80295f4:	121b      	asrs	r3, r3, #8
 80295f6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80295fa:	ea4f 0be2 	mov.w	fp, r2, asr #3
 80295fe:	b299      	uxth	r1, r3
 8029600:	43db      	mvns	r3, r3
 8029602:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8029606:	00d2      	lsls	r2, r2, #3
 8029608:	b2db      	uxtb	r3, r3
 802960a:	b2d2      	uxtb	r2, r2
 802960c:	fb1c fc03 	smulbb	ip, ip, r3
 8029610:	fb1b fb03 	smulbb	fp, fp, r3
 8029614:	fb00 c001 	mla	r0, r0, r1, ip
 8029618:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 802961c:	fb12 f303 	smulbb	r3, r2, r3
 8029620:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8029624:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8029628:	b280      	uxth	r0, r0
 802962a:	fa5f fe8e 	uxtb.w	lr, lr
 802962e:	fb0c bc01 	mla	ip, ip, r1, fp
 8029632:	fb0e 3101 	mla	r1, lr, r1, r3
 8029636:	1c43      	adds	r3, r0, #1
 8029638:	fa1f fc8c 	uxth.w	ip, ip
 802963c:	b289      	uxth	r1, r1
 802963e:	f10c 0201 	add.w	r2, ip, #1
 8029642:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8029646:	1c4b      	adds	r3, r1, #1
 8029648:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 802964c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8029650:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8029654:	0952      	lsrs	r2, r2, #5
 8029656:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802965a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802965e:	4310      	orrs	r0, r2
 8029660:	4308      	orrs	r0, r1
 8029662:	f8a8 0000 	strh.w	r0, [r8]
 8029666:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8029668:	f108 0802 	add.w	r8, r8, #2
 802966c:	f109 39ff 	add.w	r9, r9, #4294967295
 8029670:	441c      	add	r4, r3
 8029672:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029674:	441e      	add	r6, r3
 8029676:	e734      	b.n	80294e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc2>
 8029678:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802967a:	f10a 0a02 	add.w	sl, sl, #2
 802967e:	441c      	add	r4, r3
 8029680:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029682:	441e      	add	r6, r3
 8029684:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029686:	3b01      	subs	r3, #1
 8029688:	9309      	str	r3, [sp, #36]	; 0x24
 802968a:	e707      	b.n	802949c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802968c:	d023      	beq.n	80296d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802968e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029690:	982b      	ldr	r0, [sp, #172]	; 0xac
 8029692:	3b01      	subs	r3, #1
 8029694:	fb00 4003 	mla	r0, r0, r3, r4
 8029698:	1400      	asrs	r0, r0, #16
 802969a:	f53f af1c 	bmi.w	80294d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 802969e:	3901      	subs	r1, #1
 80296a0:	4288      	cmp	r0, r1
 80296a2:	f6bf af18 	bge.w	80294d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80296a6:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80296a8:	fb01 6303 	mla	r3, r1, r3, r6
 80296ac:	141b      	asrs	r3, r3, #16
 80296ae:	f53f af12 	bmi.w	80294d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80296b2:	3a01      	subs	r2, #1
 80296b4:	4293      	cmp	r3, r2
 80296b6:	f6bf af0e 	bge.w	80294d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80296ba:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80296be:	46d1      	mov	r9, sl
 80296c0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80296c4:	930f      	str	r3, [sp, #60]	; 0x3c
 80296c6:	f1bb 0f00 	cmp.w	fp, #0
 80296ca:	dc77      	bgt.n	80297bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80296cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80296ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80296d2:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80296d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80296d8:	2b00      	cmp	r3, #0
 80296da:	f340 8142 	ble.w	8029962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x542>
 80296de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80296e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80296e4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80296e8:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80296ec:	eef0 6a48 	vmov.f32	s13, s16
 80296f0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80296f4:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80296f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80296fc:	ee16 4a90 	vmov	r4, s13
 8029700:	eef0 6a68 	vmov.f32	s13, s17
 8029704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029708:	ee16 6a90 	vmov	r6, s13
 802970c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8029710:	ee69 7a27 	vmul.f32	s15, s18, s15
 8029714:	ee37 8a48 	vsub.f32	s16, s14, s16
 8029718:	ee77 8ae8 	vsub.f32	s17, s15, s17
 802971c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8029720:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8029724:	ee18 2a10 	vmov	r2, s16
 8029728:	eeb0 8a47 	vmov.f32	s16, s14
 802972c:	fb92 f3f3 	sdiv	r3, r2, r3
 8029730:	ee18 2a90 	vmov	r2, s17
 8029734:	932b      	str	r3, [sp, #172]	; 0xac
 8029736:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029738:	eef0 8a67 	vmov.f32	s17, s15
 802973c:	fb92 f3f3 	sdiv	r3, r2, r3
 8029740:	932c      	str	r3, [sp, #176]	; 0xb0
 8029742:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8029744:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8029746:	3b01      	subs	r3, #1
 8029748:	930d      	str	r3, [sp, #52]	; 0x34
 802974a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802974c:	bf08      	it	eq
 802974e:	4613      	moveq	r3, r2
 8029750:	9309      	str	r3, [sp, #36]	; 0x24
 8029752:	e694      	b.n	802947e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8029754:	2900      	cmp	r1, #0
 8029756:	f43f af21 	beq.w	802959c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 802975a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802975c:	4418      	add	r0, r3
 802975e:	0843      	lsrs	r3, r0, #1
 8029760:	07c0      	lsls	r0, r0, #31
 8029762:	5cfb      	ldrb	r3, [r7, r3]
 8029764:	bf54      	ite	pl
 8029766:	f003 030f 	andpl.w	r3, r3, #15
 802976a:	111b      	asrmi	r3, r3, #4
 802976c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8029770:	b2db      	uxtb	r3, r3
 8029772:	930b      	str	r3, [sp, #44]	; 0x2c
 8029774:	e712      	b.n	802959c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8029776:	f113 0b01 	adds.w	fp, r3, #1
 802977a:	f53f af74 	bmi.w	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802977e:	45dc      	cmp	ip, fp
 8029780:	f6ff af71 	blt.w	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8029784:	f110 0b01 	adds.w	fp, r0, #1
 8029788:	f53f af6d 	bmi.w	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 802978c:	45de      	cmp	lr, fp
 802978e:	f6ff af6a 	blt.w	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8029792:	9302      	str	r3, [sp, #8]
 8029794:	fa0f f38e 	sxth.w	r3, lr
 8029798:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802979a:	9301      	str	r3, [sp, #4]
 802979c:	fa0f f38c 	sxth.w	r3, ip
 80297a0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80297a4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80297a8:	9300      	str	r3, [sp, #0]
 80297aa:	463a      	mov	r2, r7
 80297ac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80297ae:	4641      	mov	r1, r8
 80297b0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80297b2:	f7ff fd4b 	bl	802924c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80297b6:	e756      	b.n	8029666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80297b8:	20004190 	.word	0x20004190
 80297bc:	1422      	asrs	r2, r4, #16
 80297be:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80297c0:	1433      	asrs	r3, r6, #16
 80297c2:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80297c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80297ca:	fb05 2303 	mla	r3, r5, r3, r2
 80297ce:	085a      	lsrs	r2, r3, #1
 80297d0:	07dd      	lsls	r5, r3, #31
 80297d2:	5cba      	ldrb	r2, [r7, r2]
 80297d4:	bf54      	ite	pl
 80297d6:	f002 020f 	andpl.w	r2, r2, #15
 80297da:	1112      	asrmi	r2, r2, #4
 80297dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80297e0:	b2d2      	uxtb	r2, r2
 80297e2:	2900      	cmp	r1, #0
 80297e4:	f000 80a9 	beq.w	802993a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 80297e8:	f103 0e01 	add.w	lr, r3, #1
 80297ec:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80297f0:	f01e 0f01 	tst.w	lr, #1
 80297f4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80297f8:	bf0c      	ite	eq
 80297fa:	f00c 0c0f 	andeq.w	ip, ip, #15
 80297fe:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8029802:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8029806:	fa5f f58c 	uxtb.w	r5, ip
 802980a:	9512      	str	r5, [sp, #72]	; 0x48
 802980c:	b308      	cbz	r0, 8029852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802980e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8029810:	442b      	add	r3, r5
 8029812:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8029816:	07dd      	lsls	r5, r3, #31
 8029818:	f103 0301 	add.w	r3, r3, #1
 802981c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8029820:	bf54      	ite	pl
 8029822:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029826:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802982a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802982e:	fa5f f58c 	uxtb.w	r5, ip
 8029832:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8029836:	950c      	str	r5, [sp, #48]	; 0x30
 8029838:	07dd      	lsls	r5, r3, #31
 802983a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802983e:	bf54      	ite	pl
 8029840:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029844:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029848:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802984c:	fa5f f38c 	uxtb.w	r3, ip
 8029850:	9313      	str	r3, [sp, #76]	; 0x4c
 8029852:	b289      	uxth	r1, r1
 8029854:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8029856:	b280      	uxth	r0, r0
 8029858:	fb01 f300 	mul.w	r3, r1, r0
 802985c:	0109      	lsls	r1, r1, #4
 802985e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8029862:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8029866:	1ac9      	subs	r1, r1, r3
 8029868:	b280      	uxth	r0, r0
 802986a:	b289      	uxth	r1, r1
 802986c:	ebac 0c00 	sub.w	ip, ip, r0
 8029870:	4369      	muls	r1, r5
 8029872:	fa1f fc8c 	uxth.w	ip, ip
 8029876:	fb02 120c 	mla	r2, r2, ip, r1
 802987a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802987c:	fb00 2001 	mla	r0, r0, r1, r2
 8029880:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8029882:	fb03 0302 	mla	r3, r3, r2, r0
 8029886:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802988a:	2b00      	cmp	r3, #0
 802988c:	d04c      	beq.n	8029928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 802988e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8029890:	4a36      	ldr	r2, [pc, #216]	; (802996c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>)
 8029892:	434b      	muls	r3, r1
 8029894:	f8d2 e000 	ldr.w	lr, [r2]
 8029898:	1c59      	adds	r1, r3, #1
 802989a:	f8b9 2000 	ldrh.w	r2, [r9]
 802989e:	ea4f 201e 	mov.w	r0, lr, lsr #8
 80298a2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80298a6:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80298aa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80298ae:	121b      	asrs	r3, r3, #8
 80298b0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80298b4:	ea4f 08e2 	mov.w	r8, r2, asr #3
 80298b8:	b299      	uxth	r1, r3
 80298ba:	43db      	mvns	r3, r3
 80298bc:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80298c0:	00d2      	lsls	r2, r2, #3
 80298c2:	b2db      	uxtb	r3, r3
 80298c4:	b2d2      	uxtb	r2, r2
 80298c6:	fb1c fc03 	smulbb	ip, ip, r3
 80298ca:	fb18 f803 	smulbb	r8, r8, r3
 80298ce:	fb00 c001 	mla	r0, r0, r1, ip
 80298d2:	ea4f 0cde 	mov.w	ip, lr, lsr #3
 80298d6:	fb12 f203 	smulbb	r2, r2, r3
 80298da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80298de:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80298e2:	b280      	uxth	r0, r0
 80298e4:	fa5f fe8e 	uxtb.w	lr, lr
 80298e8:	fb0c 8c01 	mla	ip, ip, r1, r8
 80298ec:	fb0e 2201 	mla	r2, lr, r1, r2
 80298f0:	fa1f fc8c 	uxth.w	ip, ip
 80298f4:	b292      	uxth	r2, r2
 80298f6:	f10c 0801 	add.w	r8, ip, #1
 80298fa:	1c51      	adds	r1, r2, #1
 80298fc:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8029900:	f100 0801 	add.w	r8, r0, #1
 8029904:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8029908:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802990c:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 8029910:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8029914:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8029918:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802991c:	ea4c 0c00 	orr.w	ip, ip, r0
 8029920:	ea4c 0c02 	orr.w	ip, ip, r2
 8029924:	f8a9 c000 	strh.w	ip, [r9]
 8029928:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802992a:	f109 0902 	add.w	r9, r9, #2
 802992e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8029932:	441c      	add	r4, r3
 8029934:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029936:	441e      	add	r6, r3
 8029938:	e6c5      	b.n	80296c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802993a:	2800      	cmp	r0, #0
 802993c:	d089      	beq.n	8029852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 802993e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8029940:	442b      	add	r3, r5
 8029942:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8029946:	07db      	lsls	r3, r3, #31
 8029948:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802994c:	bf54      	ite	pl
 802994e:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029952:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029956:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802995a:	fa5f f38c 	uxtb.w	r3, ip
 802995e:	930c      	str	r3, [sp, #48]	; 0x30
 8029960:	e777      	b.n	8029852 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x432>
 8029962:	b017      	add	sp, #92	; 0x5c
 8029964:	ecbd 8b08 	vpop	{d8-d11}
 8029968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802996c:	20004190 	.word	0x20004190

08029970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8029970:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8029974:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8029978:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802997c:	2c00      	cmp	r4, #0
 802997e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8029982:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8029986:	fb04 ce03 	mla	lr, r4, r3, ip
 802998a:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 802998e:	db60      	blt.n	8029a52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8029990:	45a1      	cmp	r9, r4
 8029992:	dd5e      	ble.n	8029a52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8029994:	f1bc 0f00 	cmp.w	ip, #0
 8029998:	db59      	blt.n	8029a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802999a:	45e0      	cmp	r8, ip
 802999c:	dd57      	ble.n	8029a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 802999e:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80299a2:	f01e 0f01 	tst.w	lr, #1
 80299a6:	5c16      	ldrb	r6, [r2, r0]
 80299a8:	bf0c      	ite	eq
 80299aa:	f006 060f 	andeq.w	r6, r6, #15
 80299ae:	1136      	asrne	r6, r6, #4
 80299b0:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80299b4:	b2f6      	uxtb	r6, r6
 80299b6:	f11c 0001 	adds.w	r0, ip, #1
 80299ba:	d44d      	bmi.n	8029a58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80299bc:	4580      	cmp	r8, r0
 80299be:	dd4b      	ble.n	8029a58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 80299c0:	2d00      	cmp	r5, #0
 80299c2:	d04b      	beq.n	8029a5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 80299c4:	f10e 0a01 	add.w	sl, lr, #1
 80299c8:	ea4f 005a 	mov.w	r0, sl, lsr #1
 80299cc:	f01a 0f01 	tst.w	sl, #1
 80299d0:	5c10      	ldrb	r0, [r2, r0]
 80299d2:	bf0c      	ite	eq
 80299d4:	f000 000f 	andeq.w	r0, r0, #15
 80299d8:	1100      	asrne	r0, r0, #4
 80299da:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80299de:	b2c0      	uxtb	r0, r0
 80299e0:	3401      	adds	r4, #1
 80299e2:	d43f      	bmi.n	8029a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80299e4:	45a1      	cmp	r9, r4
 80299e6:	dd3d      	ble.n	8029a64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 80299e8:	2f00      	cmp	r7, #0
 80299ea:	f000 8097 	beq.w	8029b1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 80299ee:	f1bc 0f00 	cmp.w	ip, #0
 80299f2:	db35      	blt.n	8029a60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80299f4:	45e0      	cmp	r8, ip
 80299f6:	dd33      	ble.n	8029a60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 80299f8:	eb03 090e 	add.w	r9, r3, lr
 80299fc:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8029a00:	f019 0f01 	tst.w	r9, #1
 8029a04:	5d14      	ldrb	r4, [r2, r4]
 8029a06:	bf0c      	ite	eq
 8029a08:	f004 040f 	andeq.w	r4, r4, #15
 8029a0c:	1124      	asrne	r4, r4, #4
 8029a0e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8029a12:	b2e4      	uxtb	r4, r4
 8029a14:	f11c 0c01 	adds.w	ip, ip, #1
 8029a18:	d427      	bmi.n	8029a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8029a1a:	45e0      	cmp	r8, ip
 8029a1c:	dd25      	ble.n	8029a6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8029a1e:	b335      	cbz	r5, 8029a6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8029a20:	3301      	adds	r3, #1
 8029a22:	449e      	add	lr, r3
 8029a24:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8029a28:	f01e 0f01 	tst.w	lr, #1
 8029a2c:	5cd2      	ldrb	r2, [r2, r3]
 8029a2e:	bf0c      	ite	eq
 8029a30:	f002 020f 	andeq.w	r2, r2, #15
 8029a34:	1112      	asrne	r2, r2, #4
 8029a36:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029a3a:	b2d3      	uxtb	r3, r2
 8029a3c:	2d0f      	cmp	r5, #15
 8029a3e:	d917      	bls.n	8029a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8029a40:	4b39      	ldr	r3, [pc, #228]	; (8029b28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8029a42:	f240 210d 	movw	r1, #525	; 0x20d
 8029a46:	4a39      	ldr	r2, [pc, #228]	; (8029b2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8029a48:	4839      	ldr	r0, [pc, #228]	; (8029b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 8029a4a:	f002 fa4d 	bl	802bee8 <__assert_func>
 8029a4e:	2600      	movs	r6, #0
 8029a50:	e7b1      	b.n	80299b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8029a52:	2000      	movs	r0, #0
 8029a54:	4606      	mov	r6, r0
 8029a56:	e7c3      	b.n	80299e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8029a58:	2000      	movs	r0, #0
 8029a5a:	e7c1      	b.n	80299e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8029a5c:	4628      	mov	r0, r5
 8029a5e:	e7bf      	b.n	80299e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8029a60:	2400      	movs	r4, #0
 8029a62:	e7d7      	b.n	8029a14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8029a64:	2300      	movs	r3, #0
 8029a66:	461c      	mov	r4, r3
 8029a68:	e7e8      	b.n	8029a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8029a6a:	2300      	movs	r3, #0
 8029a6c:	e7e6      	b.n	8029a3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8029a6e:	462b      	mov	r3, r5
 8029a70:	2f0f      	cmp	r7, #15
 8029a72:	d8e5      	bhi.n	8029a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8029a74:	b2ad      	uxth	r5, r5
 8029a76:	b2bf      	uxth	r7, r7
 8029a78:	fb05 fc07 	mul.w	ip, r5, r7
 8029a7c:	012d      	lsls	r5, r5, #4
 8029a7e:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8029a82:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8029a86:	eba5 050c 	sub.w	r5, r5, ip
 8029a8a:	b2bf      	uxth	r7, r7
 8029a8c:	b2ad      	uxth	r5, r5
 8029a8e:	1bd2      	subs	r2, r2, r7
 8029a90:	4368      	muls	r0, r5
 8029a92:	b292      	uxth	r2, r2
 8029a94:	fb06 0002 	mla	r0, r6, r2, r0
 8029a98:	fb07 0404 	mla	r4, r7, r4, r0
 8029a9c:	fb0c 4303 	mla	r3, ip, r3, r4
 8029aa0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029aa4:	2b00      	cmp	r3, #0
 8029aa6:	d037      	beq.n	8029b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>
 8029aa8:	4a22      	ldr	r2, [pc, #136]	; (8029b34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 8029aaa:	b298      	uxth	r0, r3
 8029aac:	43db      	mvns	r3, r3
 8029aae:	6816      	ldr	r6, [r2, #0]
 8029ab0:	880a      	ldrh	r2, [r1, #0]
 8029ab2:	b2db      	uxtb	r3, r3
 8029ab4:	0a34      	lsrs	r4, r6, #8
 8029ab6:	1215      	asrs	r5, r2, #8
 8029ab8:	10d7      	asrs	r7, r2, #3
 8029aba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8029abe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8029ac2:	00d2      	lsls	r2, r2, #3
 8029ac4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8029ac8:	fb15 f503 	smulbb	r5, r5, r3
 8029acc:	b2d2      	uxtb	r2, r2
 8029ace:	fb17 f703 	smulbb	r7, r7, r3
 8029ad2:	fb04 5400 	mla	r4, r4, r0, r5
 8029ad6:	08f5      	lsrs	r5, r6, #3
 8029ad8:	fb12 f303 	smulbb	r3, r2, r3
 8029adc:	00f6      	lsls	r6, r6, #3
 8029ade:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8029ae2:	b2a4      	uxth	r4, r4
 8029ae4:	b2f6      	uxtb	r6, r6
 8029ae6:	fb05 7500 	mla	r5, r5, r0, r7
 8029aea:	1c62      	adds	r2, r4, #1
 8029aec:	fb06 3000 	mla	r0, r6, r0, r3
 8029af0:	b2ad      	uxth	r5, r5
 8029af2:	b280      	uxth	r0, r0
 8029af4:	1c6b      	adds	r3, r5, #1
 8029af6:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029afa:	1c42      	adds	r2, r0, #1
 8029afc:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8029b00:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8029b04:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029b08:	095b      	lsrs	r3, r3, #5
 8029b0a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8029b0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029b12:	4323      	orrs	r3, r4
 8029b14:	4303      	orrs	r3, r0
 8029b16:	800b      	strh	r3, [r1, #0]
 8029b18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8029b1c:	2d0f      	cmp	r5, #15
 8029b1e:	d88f      	bhi.n	8029a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8029b20:	463b      	mov	r3, r7
 8029b22:	463c      	mov	r4, r7
 8029b24:	e7a6      	b.n	8029a74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8029b26:	bf00      	nop
 8029b28:	0803217a 	.word	0x0803217a
 8029b2c:	0803273d 	.word	0x0803273d
 8029b30:	08032263 	.word	0x08032263
 8029b34:	20004190 	.word	0x20004190

08029b38 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8029b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029b3c:	ed2d 8b08 	vpush	{d8-d11}
 8029b40:	b093      	sub	sp, #76	; 0x4c
 8029b42:	461d      	mov	r5, r3
 8029b44:	eeb0 aa40 	vmov.f32	s20, s0
 8029b48:	920c      	str	r2, [sp, #48]	; 0x30
 8029b4a:	eef0 9a60 	vmov.f32	s19, s1
 8029b4e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8029b50:	eeb0 9a41 	vmov.f32	s18, s2
 8029b54:	9011      	str	r0, [sp, #68]	; 0x44
 8029b56:	eeb0 8a62 	vmov.f32	s16, s5
 8029b5a:	6850      	ldr	r0, [r2, #4]
 8029b5c:	eef0 8a43 	vmov.f32	s17, s6
 8029b60:	9107      	str	r1, [sp, #28]
 8029b62:	eef0 ba44 	vmov.f32	s23, s8
 8029b66:	6812      	ldr	r2, [r2, #0]
 8029b68:	eeb0 ba64 	vmov.f32	s22, s9
 8029b6c:	eef0 aa45 	vmov.f32	s21, s10
 8029b70:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8029b74:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8029b78:	fb00 1303 	mla	r3, r0, r3, r1
 8029b7c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8029b80:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029b82:	689b      	ldr	r3, [r3, #8]
 8029b84:	3301      	adds	r3, #1
 8029b86:	f023 0301 	bic.w	r3, r3, #1
 8029b8a:	9306      	str	r3, [sp, #24]
 8029b8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029b8e:	681f      	ldr	r7, [r3, #0]
 8029b90:	9b07      	ldr	r3, [sp, #28]
 8029b92:	2b00      	cmp	r3, #0
 8029b94:	dc03      	bgt.n	8029b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8029b96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8029b98:	2b00      	cmp	r3, #0
 8029b9a:	f340 8262 	ble.w	802a062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8029b9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029ba0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029ba4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029ba8:	1e48      	subs	r0, r1, #1
 8029baa:	f102 3cff 	add.w	ip, r2, #4294967295
 8029bae:	2d00      	cmp	r5, #0
 8029bb0:	f340 80ee 	ble.w	8029d90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8029bb4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8029bb8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8029bbc:	d406      	bmi.n	8029bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8029bbe:	4586      	cmp	lr, r0
 8029bc0:	da04      	bge.n	8029bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8029bc2:	2b00      	cmp	r3, #0
 8029bc4:	db02      	blt.n	8029bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8029bc6:	4563      	cmp	r3, ip
 8029bc8:	f2c0 80e3 	blt.w	8029d92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8029bcc:	f11e 0e01 	adds.w	lr, lr, #1
 8029bd0:	f100 80d6 	bmi.w	8029d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029bd4:	4571      	cmp	r1, lr
 8029bd6:	f2c0 80d3 	blt.w	8029d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029bda:	3301      	adds	r3, #1
 8029bdc:	f100 80d0 	bmi.w	8029d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029be0:	429a      	cmp	r2, r3
 8029be2:	f2c0 80cd 	blt.w	8029d80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8029be6:	46c8      	mov	r8, r9
 8029be8:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8029bec:	9509      	str	r5, [sp, #36]	; 0x24
 8029bee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029bf0:	2b00      	cmp	r3, #0
 8029bf2:	f340 80eb 	ble.w	8029dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8029bf6:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8029bfa:	1430      	asrs	r0, r6, #16
 8029bfc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8029c00:	9308      	str	r3, [sp, #32]
 8029c02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029c04:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8029c08:	1423      	asrs	r3, r4, #16
 8029c0a:	f100 813c 	bmi.w	8029e86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029c0e:	f10c 3bff 	add.w	fp, ip, #4294967295
 8029c12:	455b      	cmp	r3, fp
 8029c14:	f280 8137 	bge.w	8029e86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029c18:	2800      	cmp	r0, #0
 8029c1a:	f2c0 8134 	blt.w	8029e86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029c1e:	f10e 3bff 	add.w	fp, lr, #4294967295
 8029c22:	4558      	cmp	r0, fp
 8029c24:	f280 812f 	bge.w	8029e86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8029c28:	9a06      	ldr	r2, [sp, #24]
 8029c2a:	fb00 3302 	mla	r3, r0, r2, r3
 8029c2e:	0858      	lsrs	r0, r3, #1
 8029c30:	07da      	lsls	r2, r3, #31
 8029c32:	9a08      	ldr	r2, [sp, #32]
 8029c34:	f817 c000 	ldrb.w	ip, [r7, r0]
 8029c38:	bf54      	ite	pl
 8029c3a:	f00c 0c0f 	andpl.w	ip, ip, #15
 8029c3e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8029c42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8029c46:	fa5f fc8c 	uxtb.w	ip, ip
 8029c4a:	2a00      	cmp	r2, #0
 8029c4c:	f000 8102 	beq.w	8029e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8029c50:	1c58      	adds	r0, r3, #1
 8029c52:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8029c56:	07c0      	lsls	r0, r0, #31
 8029c58:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8029c5c:	bf54      	ite	pl
 8029c5e:	f00e 0e0f 	andpl.w	lr, lr, #15
 8029c62:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8029c66:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8029c6a:	fa5f fe8e 	uxtb.w	lr, lr
 8029c6e:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8029c72:	b1b9      	cbz	r1, 8029ca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8029c74:	4453      	add	r3, sl
 8029c76:	0858      	lsrs	r0, r3, #1
 8029c78:	07da      	lsls	r2, r3, #31
 8029c7a:	5c38      	ldrb	r0, [r7, r0]
 8029c7c:	bf54      	ite	pl
 8029c7e:	f000 000f 	andpl.w	r0, r0, #15
 8029c82:	1100      	asrmi	r0, r0, #4
 8029c84:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8029c88:	b2c0      	uxtb	r0, r0
 8029c8a:	900a      	str	r0, [sp, #40]	; 0x28
 8029c8c:	1c58      	adds	r0, r3, #1
 8029c8e:	0843      	lsrs	r3, r0, #1
 8029c90:	07c2      	lsls	r2, r0, #31
 8029c92:	5cfb      	ldrb	r3, [r7, r3]
 8029c94:	bf54      	ite	pl
 8029c96:	f003 030f 	andpl.w	r3, r3, #15
 8029c9a:	111b      	asrmi	r3, r3, #4
 8029c9c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8029ca0:	b2db      	uxtb	r3, r3
 8029ca2:	930e      	str	r3, [sp, #56]	; 0x38
 8029ca4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8029ca8:	b289      	uxth	r1, r1
 8029caa:	fb02 f301 	mul.w	r3, r2, r1
 8029cae:	0112      	lsls	r2, r2, #4
 8029cb0:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8029cb4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8029cb8:	1ad2      	subs	r2, r2, r3
 8029cba:	b289      	uxth	r1, r1
 8029cbc:	b292      	uxth	r2, r2
 8029cbe:	1a40      	subs	r0, r0, r1
 8029cc0:	fa1f fe80 	uxth.w	lr, r0
 8029cc4:	980d      	ldr	r0, [sp, #52]	; 0x34
 8029cc6:	4342      	muls	r2, r0
 8029cc8:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8029ccc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8029cce:	fb01 c102 	mla	r1, r1, r2, ip
 8029cd2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8029cd4:	fb03 1302 	mla	r3, r3, r2, r1
 8029cd8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029cdc:	2b00      	cmp	r3, #0
 8029cde:	d045      	beq.n	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029ce0:	4a79      	ldr	r2, [pc, #484]	; (8029ec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>)
 8029ce2:	2bff      	cmp	r3, #255	; 0xff
 8029ce4:	6811      	ldr	r1, [r2, #0]
 8029ce6:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8029cea:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8029cee:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8029cf2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8029cf6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029cfa:	b2c9      	uxtb	r1, r1
 8029cfc:	f000 80bb 	beq.w	8029e76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8029d00:	f8b8 c000 	ldrh.w	ip, [r8]
 8029d04:	fa1f fb83 	uxth.w	fp, r3
 8029d08:	43db      	mvns	r3, r3
 8029d0a:	fb1e fe0b 	smulbb	lr, lr, fp
 8029d0e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8029d12:	fb12 f20b 	smulbb	r2, r2, fp
 8029d16:	b2db      	uxtb	r3, r3
 8029d18:	fb11 f10b 	smulbb	r1, r1, fp
 8029d1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029d20:	fb00 e003 	mla	r0, r0, r3, lr
 8029d24:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8029d28:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8029d2c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8029d30:	b280      	uxth	r0, r0
 8029d32:	fa5f fc8c 	uxtb.w	ip, ip
 8029d36:	fb0e 2203 	mla	r2, lr, r3, r2
 8029d3a:	fb0c 1303 	mla	r3, ip, r3, r1
 8029d3e:	1c41      	adds	r1, r0, #1
 8029d40:	b292      	uxth	r2, r2
 8029d42:	b29b      	uxth	r3, r3
 8029d44:	f102 0e01 	add.w	lr, r2, #1
 8029d48:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8029d4c:	1c59      	adds	r1, r3, #1
 8029d4e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8029d52:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8029d56:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8029d5a:	0952      	lsrs	r2, r2, #5
 8029d5c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029d60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029d64:	4310      	orrs	r0, r2
 8029d66:	4318      	orrs	r0, r3
 8029d68:	f8a8 0000 	strh.w	r0, [r8]
 8029d6c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8029d6e:	f108 0802 	add.w	r8, r8, #2
 8029d72:	441c      	add	r4, r3
 8029d74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029d76:	441e      	add	r6, r3
 8029d78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029d7a:	3b01      	subs	r3, #1
 8029d7c:	9309      	str	r3, [sp, #36]	; 0x24
 8029d7e:	e736      	b.n	8029bee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8029d80:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8029d82:	3d01      	subs	r5, #1
 8029d84:	f109 0902 	add.w	r9, r9, #2
 8029d88:	441c      	add	r4, r3
 8029d8a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029d8c:	441e      	add	r6, r3
 8029d8e:	e70e      	b.n	8029bae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8029d90:	d020      	beq.n	8029dd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8029d92:	1e6b      	subs	r3, r5, #1
 8029d94:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8029d96:	fb00 4003 	mla	r0, r0, r3, r4
 8029d9a:	1400      	asrs	r0, r0, #16
 8029d9c:	f53f af23 	bmi.w	8029be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8029da0:	3901      	subs	r1, #1
 8029da2:	4288      	cmp	r0, r1
 8029da4:	f6bf af1f 	bge.w	8029be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8029da8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8029daa:	fb01 6303 	mla	r3, r1, r3, r6
 8029dae:	141b      	asrs	r3, r3, #16
 8029db0:	f53f af19 	bmi.w	8029be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8029db4:	3a01      	subs	r2, #1
 8029db6:	4293      	cmp	r3, r2
 8029db8:	f6bf af15 	bge.w	8029be6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8029dbc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8029dc0:	46aa      	mov	sl, r5
 8029dc2:	46c8      	mov	r8, r9
 8029dc4:	9308      	str	r3, [sp, #32]
 8029dc6:	f1ba 0f00 	cmp.w	sl, #0
 8029dca:	dc7f      	bgt.n	8029ecc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8029dcc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8029dd0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8029dd4:	9b07      	ldr	r3, [sp, #28]
 8029dd6:	2b00      	cmp	r3, #0
 8029dd8:	f340 8143 	ble.w	802a062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8029ddc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029de0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029de2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8029de6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8029dea:	eef0 6a48 	vmov.f32	s13, s16
 8029dee:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8029df2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8029df6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029dfa:	ee16 4a90 	vmov	r4, s13
 8029dfe:	eef0 6a68 	vmov.f32	s13, s17
 8029e02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029e06:	ee16 6a90 	vmov	r6, s13
 8029e0a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8029e0e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8029e12:	ee37 8a48 	vsub.f32	s16, s14, s16
 8029e16:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8029e1a:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8029e1e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8029e22:	ee18 2a10 	vmov	r2, s16
 8029e26:	eeb0 8a47 	vmov.f32	s16, s14
 8029e2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8029e2e:	ee18 2a90 	vmov	r2, s17
 8029e32:	9327      	str	r3, [sp, #156]	; 0x9c
 8029e34:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029e36:	eef0 8a67 	vmov.f32	s17, s15
 8029e3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8029e3e:	9328      	str	r3, [sp, #160]	; 0xa0
 8029e40:	9b07      	ldr	r3, [sp, #28]
 8029e42:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8029e44:	3b01      	subs	r3, #1
 8029e46:	9307      	str	r3, [sp, #28]
 8029e48:	bf08      	it	eq
 8029e4a:	4615      	moveq	r5, r2
 8029e4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029e4e:	bf18      	it	ne
 8029e50:	461d      	movne	r5, r3
 8029e52:	e69d      	b.n	8029b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8029e54:	2900      	cmp	r1, #0
 8029e56:	f43f af25 	beq.w	8029ca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8029e5a:	eb0a 0003 	add.w	r0, sl, r3
 8029e5e:	0843      	lsrs	r3, r0, #1
 8029e60:	07c0      	lsls	r0, r0, #31
 8029e62:	5cfb      	ldrb	r3, [r7, r3]
 8029e64:	bf54      	ite	pl
 8029e66:	f003 030f 	andpl.w	r3, r3, #15
 8029e6a:	111b      	asrmi	r3, r3, #4
 8029e6c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8029e70:	b2db      	uxtb	r3, r3
 8029e72:	930a      	str	r3, [sp, #40]	; 0x28
 8029e74:	e716      	b.n	8029ca4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8029e76:	00d2      	lsls	r2, r2, #3
 8029e78:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 8029e7c:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 8029e80:	f8a8 1000 	strh.w	r1, [r8]
 8029e84:	e772      	b.n	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029e86:	f113 0b01 	adds.w	fp, r3, #1
 8029e8a:	f53f af6f 	bmi.w	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029e8e:	45dc      	cmp	ip, fp
 8029e90:	f6ff af6c 	blt.w	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029e94:	f110 0b01 	adds.w	fp, r0, #1
 8029e98:	f53f af68 	bmi.w	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029e9c:	45de      	cmp	lr, fp
 8029e9e:	f6ff af65 	blt.w	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029ea2:	9302      	str	r3, [sp, #8]
 8029ea4:	fa0f f38e 	sxth.w	r3, lr
 8029ea8:	9a08      	ldr	r2, [sp, #32]
 8029eaa:	9301      	str	r3, [sp, #4]
 8029eac:	fa0f f38c 	sxth.w	r3, ip
 8029eb0:	9105      	str	r1, [sp, #20]
 8029eb2:	4641      	mov	r1, r8
 8029eb4:	9300      	str	r3, [sp, #0]
 8029eb6:	4653      	mov	r3, sl
 8029eb8:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8029ebc:	463a      	mov	r2, r7
 8029ebe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8029ec0:	f7ff fd56 	bl	8029970 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8029ec4:	e752      	b.n	8029d6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8029ec6:	bf00      	nop
 8029ec8:	20004190 	.word	0x20004190
 8029ecc:	1422      	asrs	r2, r4, #16
 8029ece:	9906      	ldr	r1, [sp, #24]
 8029ed0:	1433      	asrs	r3, r6, #16
 8029ed2:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8029ed6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8029eda:	fb01 2303 	mla	r3, r1, r3, r2
 8029ede:	085a      	lsrs	r2, r3, #1
 8029ee0:	07d9      	lsls	r1, r3, #31
 8029ee2:	5cba      	ldrb	r2, [r7, r2]
 8029ee4:	bf54      	ite	pl
 8029ee6:	f002 020f 	andpl.w	r2, r2, #15
 8029eea:	1112      	asrmi	r2, r2, #4
 8029eec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8029ef0:	b2d2      	uxtb	r2, r2
 8029ef2:	2800      	cmp	r0, #0
 8029ef4:	f000 809c 	beq.w	802a030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 8029ef8:	f103 0e01 	add.w	lr, r3, #1
 8029efc:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8029f00:	f01e 0f01 	tst.w	lr, #1
 8029f04:	5c79      	ldrb	r1, [r7, r1]
 8029f06:	bf0c      	ite	eq
 8029f08:	f001 010f 	andeq.w	r1, r1, #15
 8029f0c:	1109      	asrne	r1, r1, #4
 8029f0e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029f12:	b2c9      	uxtb	r1, r1
 8029f14:	910f      	str	r1, [sp, #60]	; 0x3c
 8029f16:	f1bc 0f00 	cmp.w	ip, #0
 8029f1a:	d01a      	beq.n	8029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 8029f1c:	9908      	ldr	r1, [sp, #32]
 8029f1e:	440b      	add	r3, r1
 8029f20:	0859      	lsrs	r1, r3, #1
 8029f22:	f013 0f01 	tst.w	r3, #1
 8029f26:	f103 0301 	add.w	r3, r3, #1
 8029f2a:	5c79      	ldrb	r1, [r7, r1]
 8029f2c:	bf0c      	ite	eq
 8029f2e:	f001 010f 	andeq.w	r1, r1, #15
 8029f32:	1109      	asrne	r1, r1, #4
 8029f34:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029f38:	b2c9      	uxtb	r1, r1
 8029f3a:	910b      	str	r1, [sp, #44]	; 0x2c
 8029f3c:	0859      	lsrs	r1, r3, #1
 8029f3e:	07db      	lsls	r3, r3, #31
 8029f40:	5c79      	ldrb	r1, [r7, r1]
 8029f42:	bf54      	ite	pl
 8029f44:	f001 010f 	andpl.w	r1, r1, #15
 8029f48:	1109      	asrmi	r1, r1, #4
 8029f4a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8029f4e:	b2c9      	uxtb	r1, r1
 8029f50:	9110      	str	r1, [sp, #64]	; 0x40
 8029f52:	b280      	uxth	r0, r0
 8029f54:	fa1f fc8c 	uxth.w	ip, ip
 8029f58:	fb00 f30c 	mul.w	r3, r0, ip
 8029f5c:	0100      	lsls	r0, r0, #4
 8029f5e:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8029f62:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8029f66:	1ac0      	subs	r0, r0, r3
 8029f68:	fa1f fc8c 	uxth.w	ip, ip
 8029f6c:	b280      	uxth	r0, r0
 8029f6e:	eba1 010c 	sub.w	r1, r1, ip
 8029f72:	fa1f fe81 	uxth.w	lr, r1
 8029f76:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8029f78:	4348      	muls	r0, r1
 8029f7a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8029f7c:	fb02 020e 	mla	r2, r2, lr, r0
 8029f80:	fb0c 2c01 	mla	ip, ip, r1, r2
 8029f84:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8029f86:	fb03 c302 	mla	r3, r3, r2, ip
 8029f8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029f8e:	2b00      	cmp	r3, #0
 8029f90:	d045      	beq.n	802a01e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 8029f92:	4a36      	ldr	r2, [pc, #216]	; (802a06c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>)
 8029f94:	2bff      	cmp	r3, #255	; 0xff
 8029f96:	6811      	ldr	r1, [r2, #0]
 8029f98:	ea4f 2e11 	mov.w	lr, r1, lsr #8
 8029f9c:	ea4f 02d1 	mov.w	r2, r1, lsr #3
 8029fa0:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 8029fa4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8029fa8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8029fac:	b2c9      	uxtb	r1, r1
 8029fae:	d050      	beq.n	802a052 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 8029fb0:	f8b8 c000 	ldrh.w	ip, [r8]
 8029fb4:	fa1f fb83 	uxth.w	fp, r3
 8029fb8:	43db      	mvns	r3, r3
 8029fba:	fb1e fe0b 	smulbb	lr, lr, fp
 8029fbe:	ea4f 202c 	mov.w	r0, ip, asr #8
 8029fc2:	fb12 f20b 	smulbb	r2, r2, fp
 8029fc6:	b2db      	uxtb	r3, r3
 8029fc8:	fb11 f10b 	smulbb	r1, r1, fp
 8029fcc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029fd0:	fb00 e003 	mla	r0, r0, r3, lr
 8029fd4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8029fd8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8029fdc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8029fe0:	b280      	uxth	r0, r0
 8029fe2:	fa5f fc8c 	uxtb.w	ip, ip
 8029fe6:	fb0e 2203 	mla	r2, lr, r3, r2
 8029fea:	fb0c 1103 	mla	r1, ip, r3, r1
 8029fee:	b292      	uxth	r2, r2
 8029ff0:	b289      	uxth	r1, r1
 8029ff2:	f102 0e01 	add.w	lr, r2, #1
 8029ff6:	1c4b      	adds	r3, r1, #1
 8029ff8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8029ffc:	f100 0e01 	add.w	lr, r0, #1
 802a000:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802a004:	0952      	lsrs	r2, r2, #5
 802a006:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802a00a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802a00e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802a012:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802a016:	4302      	orrs	r2, r0
 802a018:	430a      	orrs	r2, r1
 802a01a:	f8a8 2000 	strh.w	r2, [r8]
 802a01e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802a020:	f108 0802 	add.w	r8, r8, #2
 802a024:	f10a 3aff 	add.w	sl, sl, #4294967295
 802a028:	441c      	add	r4, r3
 802a02a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802a02c:	441e      	add	r6, r3
 802a02e:	e6ca      	b.n	8029dc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 802a030:	f1bc 0f00 	cmp.w	ip, #0
 802a034:	d08d      	beq.n	8029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 802a036:	9908      	ldr	r1, [sp, #32]
 802a038:	440b      	add	r3, r1
 802a03a:	0859      	lsrs	r1, r3, #1
 802a03c:	07db      	lsls	r3, r3, #31
 802a03e:	5c79      	ldrb	r1, [r7, r1]
 802a040:	bf54      	ite	pl
 802a042:	f001 010f 	andpl.w	r1, r1, #15
 802a046:	1109      	asrmi	r1, r1, #4
 802a048:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802a04c:	b2c9      	uxtb	r1, r1
 802a04e:	910b      	str	r1, [sp, #44]	; 0x2c
 802a050:	e77f      	b.n	8029f52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41a>
 802a052:	00d2      	lsls	r2, r2, #3
 802a054:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 802a058:	ea4e 01d1 	orr.w	r1, lr, r1, lsr #3
 802a05c:	f8a8 1000 	strh.w	r1, [r8]
 802a060:	e7dd      	b.n	802a01e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 802a062:	b013      	add	sp, #76	; 0x4c
 802a064:	ecbd 8b08 	vpop	{d8-d11}
 802a068:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a06c:	20004190 	.word	0x20004190

0802a070 <CRC_Lock>:
 802a070:	4a1d      	ldr	r2, [pc, #116]	; (802a0e8 <CRC_Lock+0x78>)
 802a072:	b530      	push	{r4, r5, lr}
 802a074:	6813      	ldr	r3, [r2, #0]
 802a076:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 802a07a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802a07e:	f023 0301 	bic.w	r3, r3, #1
 802a082:	6013      	str	r3, [r2, #0]
 802a084:	4b19      	ldr	r3, [pc, #100]	; (802a0ec <CRC_Lock+0x7c>)
 802a086:	681a      	ldr	r2, [r3, #0]
 802a088:	4022      	ands	r2, r4
 802a08a:	42aa      	cmp	r2, r5
 802a08c:	d005      	beq.n	802a09a <CRC_Lock+0x2a>
 802a08e:	681b      	ldr	r3, [r3, #0]
 802a090:	f24c 2270 	movw	r2, #49776	; 0xc270
 802a094:	4023      	ands	r3, r4
 802a096:	4293      	cmp	r3, r2
 802a098:	d11d      	bne.n	802a0d6 <CRC_Lock+0x66>
 802a09a:	4b15      	ldr	r3, [pc, #84]	; (802a0f0 <CRC_Lock+0x80>)
 802a09c:	681b      	ldr	r3, [r3, #0]
 802a09e:	b9d3      	cbnz	r3, 802a0d6 <CRC_Lock+0x66>
 802a0a0:	4a14      	ldr	r2, [pc, #80]	; (802a0f4 <CRC_Lock+0x84>)
 802a0a2:	6813      	ldr	r3, [r2, #0]
 802a0a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802a0a8:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 802a0ac:	d006      	beq.n	802a0bc <CRC_Lock+0x4c>
 802a0ae:	6813      	ldr	r3, [r2, #0]
 802a0b0:	f240 4283 	movw	r2, #1155	; 0x483
 802a0b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802a0b8:	4293      	cmp	r3, r2
 802a0ba:	d10c      	bne.n	802a0d6 <CRC_Lock+0x66>
 802a0bc:	4b0e      	ldr	r3, [pc, #56]	; (802a0f8 <CRC_Lock+0x88>)
 802a0be:	2201      	movs	r2, #1
 802a0c0:	601a      	str	r2, [r3, #0]
 802a0c2:	681a      	ldr	r2, [r3, #0]
 802a0c4:	2a00      	cmp	r2, #0
 802a0c6:	d1fc      	bne.n	802a0c2 <CRC_Lock+0x52>
 802a0c8:	4b0c      	ldr	r3, [pc, #48]	; (802a0fc <CRC_Lock+0x8c>)
 802a0ca:	6018      	str	r0, [r3, #0]
 802a0cc:	6818      	ldr	r0, [r3, #0]
 802a0ce:	1a43      	subs	r3, r0, r1
 802a0d0:	4258      	negs	r0, r3
 802a0d2:	4158      	adcs	r0, r3
 802a0d4:	bd30      	pop	{r4, r5, pc}
 802a0d6:	4b0a      	ldr	r3, [pc, #40]	; (802a100 <CRC_Lock+0x90>)
 802a0d8:	2201      	movs	r2, #1
 802a0da:	601a      	str	r2, [r3, #0]
 802a0dc:	681a      	ldr	r2, [r3, #0]
 802a0de:	2a00      	cmp	r2, #0
 802a0e0:	d1fc      	bne.n	802a0dc <CRC_Lock+0x6c>
 802a0e2:	4b08      	ldr	r3, [pc, #32]	; (802a104 <CRC_Lock+0x94>)
 802a0e4:	e7f1      	b.n	802a0ca <CRC_Lock+0x5a>
 802a0e6:	bf00      	nop
 802a0e8:	e0002000 	.word	0xe0002000
 802a0ec:	e000ed00 	.word	0xe000ed00
 802a0f0:	e0042000 	.word	0xe0042000
 802a0f4:	5c001000 	.word	0x5c001000
 802a0f8:	58024c08 	.word	0x58024c08
 802a0fc:	58024c00 	.word	0x58024c00
 802a100:	40023008 	.word	0x40023008
 802a104:	40023000 	.word	0x40023000

0802a108 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802a108:	6101      	str	r1, [r0, #16]
 802a10a:	4770      	bx	lr

0802a10c <_ZN8touchgfx8Gestures4tickEv>:
 802a10c:	7b83      	ldrb	r3, [r0, #14]
 802a10e:	b14b      	cbz	r3, 802a124 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802a110:	8903      	ldrh	r3, [r0, #8]
 802a112:	3301      	adds	r3, #1
 802a114:	b29b      	uxth	r3, r3
 802a116:	2b07      	cmp	r3, #7
 802a118:	8103      	strh	r3, [r0, #8]
 802a11a:	bf81      	itttt	hi
 802a11c:	2300      	movhi	r3, #0
 802a11e:	8143      	strhhi	r3, [r0, #10]
 802a120:	8183      	strhhi	r3, [r0, #12]
 802a122:	7383      	strbhi	r3, [r0, #14]
 802a124:	4770      	bx	lr
	...

0802a128 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802a128:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802a12c:	4604      	mov	r4, r0
 802a12e:	4698      	mov	r8, r3
 802a130:	8880      	ldrh	r0, [r0, #4]
 802a132:	4617      	mov	r7, r2
 802a134:	4b1d      	ldr	r3, [pc, #116]	; (802a1ac <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 802a136:	460e      	mov	r6, r1
 802a138:	f8ad 0006 	strh.w	r0, [sp, #6]
 802a13c:	eba8 0000 	sub.w	r0, r8, r0
 802a140:	9300      	str	r3, [sp, #0]
 802a142:	2300      	movs	r3, #0
 802a144:	b280      	uxth	r0, r0
 802a146:	8aa2      	ldrh	r2, [r4, #20]
 802a148:	f88d 3004 	strb.w	r3, [sp, #4]
 802a14c:	b203      	sxth	r3, r0
 802a14e:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802a152:	88e1      	ldrh	r1, [r4, #6]
 802a154:	2b00      	cmp	r3, #0
 802a156:	f8ad 800a 	strh.w	r8, [sp, #10]
 802a15a:	f8ad 1008 	strh.w	r1, [sp, #8]
 802a15e:	bfb8      	it	lt
 802a160:	4240      	neglt	r0, r0
 802a162:	f8ad 500c 	strh.w	r5, [sp, #12]
 802a166:	bfb8      	it	lt
 802a168:	b203      	sxthlt	r3, r0
 802a16a:	4293      	cmp	r3, r2
 802a16c:	dc08      	bgt.n	802a180 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 802a16e:	1a69      	subs	r1, r5, r1
 802a170:	b289      	uxth	r1, r1
 802a172:	b20b      	sxth	r3, r1
 802a174:	2b00      	cmp	r3, #0
 802a176:	bfbc      	itt	lt
 802a178:	4249      	neglt	r1, r1
 802a17a:	b20b      	sxthlt	r3, r1
 802a17c:	429a      	cmp	r2, r3
 802a17e:	da13      	bge.n	802a1a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 802a180:	6920      	ldr	r0, [r4, #16]
 802a182:	4669      	mov	r1, sp
 802a184:	eba8 0606 	sub.w	r6, r8, r6
 802a188:	1bef      	subs	r7, r5, r7
 802a18a:	6803      	ldr	r3, [r0, #0]
 802a18c:	685b      	ldr	r3, [r3, #4]
 802a18e:	4798      	blx	r3
 802a190:	2300      	movs	r3, #0
 802a192:	2001      	movs	r0, #1
 802a194:	8166      	strh	r6, [r4, #10]
 802a196:	8123      	strh	r3, [r4, #8]
 802a198:	81a7      	strh	r7, [r4, #12]
 802a19a:	f8a4 8004 	strh.w	r8, [r4, #4]
 802a19e:	80e5      	strh	r5, [r4, #6]
 802a1a0:	73a0      	strb	r0, [r4, #14]
 802a1a2:	b004      	add	sp, #16
 802a1a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a1a8:	2000      	movs	r0, #0
 802a1aa:	e7fa      	b.n	802a1a2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 802a1ac:	080315f8 	.word	0x080315f8

0802a1b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802a1b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a1b2:	461e      	mov	r6, r3
 802a1b4:	1e4b      	subs	r3, r1, #1
 802a1b6:	b085      	sub	sp, #20
 802a1b8:	4604      	mov	r4, r0
 802a1ba:	2b01      	cmp	r3, #1
 802a1bc:	460d      	mov	r5, r1
 802a1be:	4617      	mov	r7, r2
 802a1c0:	d84b      	bhi.n	802a25a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802a1c2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802a1c6:	1cd3      	adds	r3, r2, #3
 802a1c8:	b29b      	uxth	r3, r3
 802a1ca:	2b06      	cmp	r3, #6
 802a1cc:	d916      	bls.n	802a1fc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802a1ce:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802a270 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a1d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a1d6:	f8cd c004 	str.w	ip, [sp, #4]
 802a1da:	f04f 0c00 	mov.w	ip, #0
 802a1de:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a1e2:	6900      	ldr	r0, [r0, #16]
 802a1e4:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a1e8:	a901      	add	r1, sp, #4
 802a1ea:	f88d c008 	strb.w	ip, [sp, #8]
 802a1ee:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a1f2:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a1f6:	6803      	ldr	r3, [r0, #0]
 802a1f8:	689b      	ldr	r3, [r3, #8]
 802a1fa:	4798      	blx	r3
 802a1fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a200:	1cd3      	adds	r3, r2, #3
 802a202:	b29b      	uxth	r3, r3
 802a204:	2b06      	cmp	r3, #6
 802a206:	d916      	bls.n	802a236 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a208:	f8df c064 	ldr.w	ip, [pc, #100]	; 802a270 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802a20c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802a210:	f8cd c004 	str.w	ip, [sp, #4]
 802a214:	f04f 0c01 	mov.w	ip, #1
 802a218:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802a21c:	6920      	ldr	r0, [r4, #16]
 802a21e:	f8ad 100c 	strh.w	r1, [sp, #12]
 802a222:	a901      	add	r1, sp, #4
 802a224:	f88d c008 	strb.w	ip, [sp, #8]
 802a228:	f8ad 200a 	strh.w	r2, [sp, #10]
 802a22c:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a230:	6803      	ldr	r3, [r0, #0]
 802a232:	689b      	ldr	r3, [r3, #8]
 802a234:	4798      	blx	r3
 802a236:	4b0d      	ldr	r3, [pc, #52]	; (802a26c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802a238:	a901      	add	r1, sp, #4
 802a23a:	6920      	ldr	r0, [r4, #16]
 802a23c:	9301      	str	r3, [sp, #4]
 802a23e:	2300      	movs	r3, #0
 802a240:	f88d 5008 	strb.w	r5, [sp, #8]
 802a244:	f8ad 700a 	strh.w	r7, [sp, #10]
 802a248:	f8ad 600c 	strh.w	r6, [sp, #12]
 802a24c:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a250:	6803      	ldr	r3, [r0, #0]
 802a252:	681b      	ldr	r3, [r3, #0]
 802a254:	4798      	blx	r3
 802a256:	b005      	add	sp, #20
 802a258:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a25a:	2900      	cmp	r1, #0
 802a25c:	d1eb      	bne.n	802a236 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a25e:	80a2      	strh	r2, [r4, #4]
 802a260:	80c6      	strh	r6, [r0, #6]
 802a262:	60a1      	str	r1, [r4, #8]
 802a264:	81a1      	strh	r1, [r4, #12]
 802a266:	73a1      	strb	r1, [r4, #14]
 802a268:	e7e5      	b.n	802a236 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802a26a:	bf00      	nop
 802a26c:	080315e4 	.word	0x080315e4
 802a270:	0803160c 	.word	0x0803160c

0802a274 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>:
 802a274:	10c9      	asrs	r1, r1, #3
 802a276:	2900      	cmp	r1, #0
 802a278:	bfb8      	it	lt
 802a27a:	4249      	neglt	r1, r1
 802a27c:	2801      	cmp	r0, #1
 802a27e:	d108      	bne.n	802a292 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 802a280:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802a284:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802a288:	4601      	mov	r1, r0
 802a28a:	dd02      	ble.n	802a292 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15+0x1e>
 802a28c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802a290:	4770      	bx	lr
 802a292:	29ff      	cmp	r1, #255	; 0xff
 802a294:	bfa8      	it	ge
 802a296:	21ff      	movge	r1, #255	; 0xff
 802a298:	4608      	mov	r0, r1
 802a29a:	4770      	bx	lr

0802a29c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>:
 802a29c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a2a0:	688c      	ldr	r4, [r1, #8]
 802a2a2:	b087      	sub	sp, #28
 802a2a4:	4607      	mov	r7, r0
 802a2a6:	2c00      	cmp	r4, #0
 802a2a8:	db2b      	blt.n	802a302 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 802a2aa:	6803      	ldr	r3, [r0, #0]
 802a2ac:	691a      	ldr	r2, [r3, #16]
 802a2ae:	42a2      	cmp	r2, r4
 802a2b0:	dd27      	ble.n	802a302 <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x66>
 802a2b2:	685a      	ldr	r2, [r3, #4]
 802a2b4:	695e      	ldr	r6, [r3, #20]
 802a2b6:	68cd      	ldr	r5, [r1, #12]
 802a2b8:	fb06 2604 	mla	r6, r6, r4, r2
 802a2bc:	f8d1 901c 	ldr.w	r9, [r1, #28]
 802a2c0:	698a      	ldr	r2, [r1, #24]
 802a2c2:	f893 a008 	ldrb.w	sl, [r3, #8]
 802a2c6:	f8d1 8020 	ldr.w	r8, [r1, #32]
 802a2ca:	9205      	str	r2, [sp, #20]
 802a2cc:	f839 2f02 	ldrh.w	r2, [r9, #2]!
 802a2d0:	9b05      	ldr	r3, [sp, #20]
 802a2d2:	6839      	ldr	r1, [r7, #0]
 802a2d4:	eb03 0c02 	add.w	ip, r3, r2
 802a2d8:	f838 3f02 	ldrh.w	r3, [r8, #2]!
 802a2dc:	68c9      	ldr	r1, [r1, #12]
 802a2de:	1898      	adds	r0, r3, r2
 802a2e0:	4288      	cmp	r0, r1
 802a2e2:	db02      	blt.n	802a2ea <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x4e>
 802a2e4:	1a8b      	subs	r3, r1, r2
 802a2e6:	2b00      	cmp	r3, #0
 802a2e8:	dd09      	ble.n	802a2fe <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x62>
 802a2ea:	6878      	ldr	r0, [r7, #4]
 802a2ec:	6801      	ldr	r1, [r0, #0]
 802a2ee:	9400      	str	r4, [sp, #0]
 802a2f0:	e9cd 3c01 	strd	r3, ip, [sp, #4]
 802a2f4:	4653      	mov	r3, sl
 802a2f6:	f8d1 b008 	ldr.w	fp, [r1, #8]
 802a2fa:	4631      	mov	r1, r6
 802a2fc:	47d8      	blx	fp
 802a2fe:	3d01      	subs	r5, #1
 802a300:	d1e4      	bne.n	802a2cc <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE+0x30>
 802a302:	b007      	add	sp, #28
 802a304:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a308 <_ZN8touchgfx10Rasterizer6lineToEii>:
 802a308:	f890 3044 	ldrb.w	r3, [r0, #68]	; 0x44
 802a30c:	b90b      	cbnz	r3, 802a312 <_ZN8touchgfx10Rasterizer6lineToEii+0xa>
 802a30e:	f001 b972 	b.w	802b5f6 <_ZN8touchgfx7Outline6lineToEii>
 802a312:	4770      	bx	lr

0802a314 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802a314:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a318:	4604      	mov	r4, r0
 802a31a:	2600      	movs	r6, #0
 802a31c:	4b8e      	ldr	r3, [pc, #568]	; (802a558 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x244>)
 802a31e:	f100 0518 	add.w	r5, r0, #24
 802a322:	f104 0730 	add.w	r7, r4, #48	; 0x30
 802a326:	b086      	sub	sp, #24
 802a328:	4690      	mov	r8, r2
 802a32a:	e9c0 3100 	strd	r3, r1, [r0]
 802a32e:	e9c0 6602 	strd	r6, r6, [r0, #8]
 802a332:	e9c0 6604 	strd	r6, r6, [r0, #16]
 802a336:	4628      	mov	r0, r5
 802a338:	f001 fb7c 	bl	802ba34 <_ZN8touchgfx15RenderingBufferC1Ev>
 802a33c:	4638      	mov	r0, r7
 802a33e:	f000 fb43 	bl	802a9c8 <_ZN8touchgfx7OutlineC1Ev>
 802a342:	f104 0078 	add.w	r0, r4, #120	; 0x78
 802a346:	f001 fb21 	bl	802b98c <_ZN8touchgfx8ScanlineC1Ev>
 802a34a:	2301      	movs	r3, #1
 802a34c:	f884 609c 	strb.w	r6, [r4, #156]	; 0x9c
 802a350:	f884 60a4 	strb.w	r6, [r4, #164]	; 0xa4
 802a354:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802a358:	f884 60a6 	strb.w	r6, [r4, #166]	; 0xa6
 802a35c:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 802a360:	e9c4 662a 	strd	r6, r6, [r4, #168]	; 0xa8
 802a364:	e9c4 662d 	strd	r6, r6, [r4, #180]	; 0xb4
 802a368:	f7ef fc38 	bl	8019bdc <_ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv>
 802a36c:	b928      	cbnz	r0, 802a37a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x66>
 802a36e:	4b7b      	ldr	r3, [pc, #492]	; (802a55c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x248>)
 802a370:	2118      	movs	r1, #24
 802a372:	4a7b      	ldr	r2, [pc, #492]	; (802a560 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 802a374:	487b      	ldr	r0, [pc, #492]	; (802a564 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x250>)
 802a376:	f001 fdb7 	bl	802bee8 <__assert_func>
 802a37a:	f9b8 2000 	ldrsh.w	r2, [r8]
 802a37e:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802a382:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802a386:	4410      	add	r0, r2
 802a388:	9602      	str	r6, [sp, #8]
 802a38a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802a38e:	b280      	uxth	r0, r0
 802a390:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802a394:	fa0f fa80 	sxth.w	sl, r0
 802a398:	f1ba 0f00 	cmp.w	sl, #0
 802a39c:	dd70      	ble.n	802a480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 802a39e:	4591      	cmp	r9, r2
 802a3a0:	dd6e      	ble.n	802a480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 802a3a2:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802a3a6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802a3aa:	440b      	add	r3, r1
 802a3ac:	b29b      	uxth	r3, r3
 802a3ae:	b21e      	sxth	r6, r3
 802a3b0:	2e00      	cmp	r6, #0
 802a3b2:	dd65      	ble.n	802a480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 802a3b4:	458e      	cmp	lr, r1
 802a3b6:	dd63      	ble.n	802a480 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x16c>
 802a3b8:	45d1      	cmp	r9, sl
 802a3ba:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802a3be:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802a3c2:	bfb8      	it	lt
 802a3c4:	fa1f f089 	uxthlt.w	r0, r9
 802a3c8:	45b6      	cmp	lr, r6
 802a3ca:	f8ad 2008 	strh.w	r2, [sp, #8]
 802a3ce:	bfb8      	it	lt
 802a3d0:	fa1f f38e 	uxthlt.w	r3, lr
 802a3d4:	1a80      	subs	r0, r0, r2
 802a3d6:	f8ad 100a 	strh.w	r1, [sp, #10]
 802a3da:	1a5b      	subs	r3, r3, r1
 802a3dc:	f8ad 000c 	strh.w	r0, [sp, #12]
 802a3e0:	f8ad 300e 	strh.w	r3, [sp, #14]
 802a3e4:	f10d 0808 	add.w	r8, sp, #8
 802a3e8:	ae04      	add	r6, sp, #16
 802a3ea:	e898 0003 	ldmia.w	r8, {r0, r1}
 802a3ee:	e886 0003 	stmia.w	r6, {r0, r1}
 802a3f2:	f8dc 3000 	ldr.w	r3, [ip]
 802a3f6:	4660      	mov	r0, ip
 802a3f8:	4631      	mov	r1, r6
 802a3fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802a3fc:	4798      	blx	r3
 802a3fe:	6861      	ldr	r1, [r4, #4]
 802a400:	4640      	mov	r0, r8
 802a402:	3104      	adds	r1, #4
 802a404:	f7f0 fef2 	bl	801b1ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802a408:	4630      	mov	r0, r6
 802a40a:	f7f0 ff07 	bl	801b21c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802a40e:	f9bd 000c 	ldrsh.w	r0, [sp, #12]
 802a412:	f7ef fb73 	bl	8019afc <_ZN8touchgfx20CanvasWidgetRenderer16setScanlineWidthEj>
 802a416:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 802a41a:	4638      	mov	r0, r7
 802a41c:	f000 fab0 	bl	802a980 <_ZN8touchgfx7Outline5resetEv>
 802a420:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 802a424:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 802a428:	f8a4 30a2 	strh.w	r3, [r4, #162]	; 0xa2
 802a42c:	015b      	lsls	r3, r3, #5
 802a42e:	f8a4 20a0 	strh.w	r2, [r4, #160]	; 0xa0
 802a432:	0152      	lsls	r2, r2, #5
 802a434:	60e3      	str	r3, [r4, #12]
 802a436:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802a43a:	60a2      	str	r2, [r4, #8]
 802a43c:	015b      	lsls	r3, r3, #5
 802a43e:	6123      	str	r3, [r4, #16]
 802a440:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 802a444:	015b      	lsls	r3, r3, #5
 802a446:	6163      	str	r3, [r4, #20]
 802a448:	4b47      	ldr	r3, [pc, #284]	; (802a568 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x254>)
 802a44a:	6818      	ldr	r0, [r3, #0]
 802a44c:	6803      	ldr	r3, [r0, #0]
 802a44e:	6a1b      	ldr	r3, [r3, #32]
 802a450:	4798      	blx	r3
 802a452:	4606      	mov	r6, r0
 802a454:	f7df f92e 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 802a458:	6803      	ldr	r3, [r0, #0]
 802a45a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802a45c:	4798      	blx	r3
 802a45e:	4607      	mov	r7, r0
 802a460:	f7df f928 	bl	80096b4 <_ZN8touchgfx3HAL3lcdEv>
 802a464:	6803      	ldr	r3, [r0, #0]
 802a466:	6a1b      	ldr	r3, [r3, #32]
 802a468:	4798      	blx	r3
 802a46a:	280d      	cmp	r0, #13
 802a46c:	d854      	bhi.n	802a518 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x204>
 802a46e:	e8df f000 	tbb	[pc, r0]
 802a472:	554b      	.short	0x554b
 802a474:	2b6e0a66 	.word	0x2b6e0a66
 802a478:	5f5f5f3b 	.word	0x5f5f5f3b
 802a47c:	6e6e5f5f 	.word	0x6e6e5f5f
 802a480:	2300      	movs	r3, #0
 802a482:	9303      	str	r3, [sp, #12]
 802a484:	e7ae      	b.n	802a3e4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xd0>
 802a486:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a48a:	2108      	movs	r1, #8
 802a48c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a490:	fb92 f1f1 	sdiv	r1, r2, r1
 802a494:	fb07 1303 	mla	r3, r7, r3, r1
 802a498:	441e      	add	r6, r3
 802a49a:	4253      	negs	r3, r2
 802a49c:	f002 0207 	and.w	r2, r2, #7
 802a4a0:	f003 0307 	and.w	r3, r3, #7
 802a4a4:	bf58      	it	pl
 802a4a6:	425a      	negpl	r2, r3
 802a4a8:	b2d2      	uxtb	r2, r2
 802a4aa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 802a4ae:	4628      	mov	r0, r5
 802a4b0:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 802a4b4:	6721      	str	r1, [r4, #112]	; 0x70
 802a4b6:	e9cd 1700 	strd	r1, r7, [sp]
 802a4ba:	4631      	mov	r1, r6
 802a4bc:	f001 fac6 	bl	802ba4c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>
 802a4c0:	4620      	mov	r0, r4
 802a4c2:	b006      	add	sp, #24
 802a4c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a4c8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a4cc:	2104      	movs	r1, #4
 802a4ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a4d2:	fb92 f1f1 	sdiv	r1, r2, r1
 802a4d6:	fb07 1303 	mla	r3, r7, r3, r1
 802a4da:	441e      	add	r6, r3
 802a4dc:	4253      	negs	r3, r2
 802a4de:	f002 0203 	and.w	r2, r2, #3
 802a4e2:	f003 0303 	and.w	r3, r3, #3
 802a4e6:	e7dd      	b.n	802a4a4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x190>
 802a4e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a4ec:	2102      	movs	r1, #2
 802a4ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a4f2:	2a00      	cmp	r2, #0
 802a4f4:	fb92 f1f1 	sdiv	r1, r2, r1
 802a4f8:	f002 0201 	and.w	r2, r2, #1
 802a4fc:	fb07 1303 	mla	r3, r7, r3, r1
 802a500:	bfb8      	it	lt
 802a502:	4252      	neglt	r2, r2
 802a504:	441e      	add	r6, r3
 802a506:	e7cf      	b.n	802a4a8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x194>
 802a508:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a50c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a510:	437b      	muls	r3, r7
 802a512:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802a516:	441e      	add	r6, r3
 802a518:	2200      	movs	r2, #0
 802a51a:	e7c6      	b.n	802a4aa <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x196>
 802a51c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a520:	2103      	movs	r1, #3
 802a522:	fb07 f203 	mul.w	r2, r7, r3
 802a526:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 802a52a:	fb13 2301 	smlabb	r3, r3, r1, r2
 802a52e:	e7f2      	b.n	802a516 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x202>
 802a530:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a534:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a538:	fb07 2303 	mla	r3, r7, r3, r2
 802a53c:	e7eb      	b.n	802a516 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x202>
 802a53e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802a542:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802a546:	437b      	muls	r3, r7
 802a548:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802a54c:	e7e3      	b.n	802a516 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x202>
 802a54e:	4b07      	ldr	r3, [pc, #28]	; (802a56c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x258>)
 802a550:	2157      	movs	r1, #87	; 0x57
 802a552:	4a03      	ldr	r2, [pc, #12]	; (802a560 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x24c>)
 802a554:	e70e      	b.n	802a374 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x60>
 802a556:	bf00      	nop
 802a558:	08032a8c 	.word	0x08032a8c
 802a55c:	080329d7 	.word	0x080329d7
 802a560:	08032a94 	.word	0x08032a94
 802a564:	08032a33 	.word	0x08032a33
 802a568:	20004168 	.word	0x20004168
 802a56c:	08032a67 	.word	0x08032a67

0802a570 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>:
 802a570:	6812      	ldr	r2, [r2, #0]
 802a572:	2a00      	cmp	r2, #0
 802a574:	db0b      	blt.n	802a58e <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x1e>
 802a576:	9800      	ldr	r0, [sp, #0]
 802a578:	6800      	ldr	r0, [r0, #0]
 802a57a:	4290      	cmp	r0, r2
 802a57c:	bfd4      	ite	le
 802a57e:	2002      	movle	r0, #2
 802a580:	2000      	movgt	r0, #0
 802a582:	680a      	ldr	r2, [r1, #0]
 802a584:	2a00      	cmp	r2, #0
 802a586:	da04      	bge.n	802a592 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x22>
 802a588:	f040 0004 	orr.w	r0, r0, #4
 802a58c:	4770      	bx	lr
 802a58e:	2001      	movs	r0, #1
 802a590:	e7f7      	b.n	802a582 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_+0x12>
 802a592:	681b      	ldr	r3, [r3, #0]
 802a594:	4293      	cmp	r3, r2
 802a596:	bfd8      	it	le
 802a598:	f040 0008 	orrle.w	r0, r0, #8
 802a59c:	4770      	bx	lr
	...

0802a5a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802a5a0:	4b07      	ldr	r3, [pc, #28]	; (802a5c0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802a5a2:	b510      	push	{r4, lr}
 802a5a4:	781b      	ldrb	r3, [r3, #0]
 802a5a6:	2b01      	cmp	r3, #1
 802a5a8:	d108      	bne.n	802a5bc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802a5aa:	6843      	ldr	r3, [r0, #4]
 802a5ac:	6814      	ldr	r4, [r2, #0]
 802a5ae:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802a5b2:	680b      	ldr	r3, [r1, #0]
 802a5b4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802a5b8:	6013      	str	r3, [r2, #0]
 802a5ba:	600c      	str	r4, [r1, #0]
 802a5bc:	bd10      	pop	{r4, pc}
 802a5be:	bf00      	nop
 802a5c0:	2000415e 	.word	0x2000415e

0802a5c4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802a5c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a5c6:	b085      	sub	sp, #20
 802a5c8:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 802a5cc:	4604      	mov	r4, r0
 802a5ce:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802a5d2:	b33b      	cbz	r3, 802a624 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x60>
 802a5d4:	aa02      	add	r2, sp, #8
 802a5d6:	a903      	add	r1, sp, #12
 802a5d8:	f7ff ffe2 	bl	802a5a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a5dc:	68a3      	ldr	r3, [r4, #8]
 802a5de:	9e03      	ldr	r6, [sp, #12]
 802a5e0:	aa02      	add	r2, sp, #8
 802a5e2:	9f02      	ldr	r7, [sp, #8]
 802a5e4:	a903      	add	r1, sp, #12
 802a5e6:	1af6      	subs	r6, r6, r3
 802a5e8:	68e3      	ldr	r3, [r4, #12]
 802a5ea:	4620      	mov	r0, r4
 802a5ec:	1aff      	subs	r7, r7, r3
 802a5ee:	f104 0314 	add.w	r3, r4, #20
 802a5f2:	9603      	str	r6, [sp, #12]
 802a5f4:	9300      	str	r3, [sp, #0]
 802a5f6:	f104 0310 	add.w	r3, r4, #16
 802a5fa:	9702      	str	r7, [sp, #8]
 802a5fc:	f7ff ffb8 	bl	802a570 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 802a600:	f894 30b0 	ldrb.w	r3, [r4, #176]	; 0xb0
 802a604:	4605      	mov	r5, r0
 802a606:	b97b      	cbnz	r3, 802a628 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x64>
 802a608:	463a      	mov	r2, r7
 802a60a:	4631      	mov	r1, r6
 802a60c:	f104 0030 	add.w	r0, r4, #48	; 0x30
 802a610:	f7ff fe7a 	bl	802a308 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a614:	9b03      	ldr	r3, [sp, #12]
 802a616:	f884 50b0 	strb.w	r5, [r4, #176]	; 0xb0
 802a61a:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 802a61e:	9b02      	ldr	r3, [sp, #8]
 802a620:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
 802a624:	b005      	add	sp, #20
 802a626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a628:	b110      	cbz	r0, 802a630 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6c>
 802a62a:	ea13 0200 	ands.w	r2, r3, r0
 802a62e:	d11c      	bne.n	802a66a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 802a630:	f894 00a5 	ldrb.w	r0, [r4, #165]	; 0xa5
 802a634:	f104 0630 	add.w	r6, r4, #48	; 0x30
 802a638:	e9d4 122a 	ldrd	r1, r2, [r4, #168]	; 0xa8
 802a63c:	b188      	cbz	r0, 802a662 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802a63e:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 802a642:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 802a646:	b913      	cbnz	r3, 802a64e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x8a>
 802a648:	4630      	mov	r0, r6
 802a64a:	f001 f804 	bl	802b656 <_ZN8touchgfx7Outline6moveToEii>
 802a64e:	2300      	movs	r3, #0
 802a650:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802a654:	2301      	movs	r3, #1
 802a656:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 802a65a:	4630      	mov	r0, r6
 802a65c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 802a660:	e7d6      	b.n	802a610 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4c>
 802a662:	4630      	mov	r0, r6
 802a664:	f7ff fe50 	bl	802a308 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a668:	e7f7      	b.n	802a65a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x96>
 802a66a:	4615      	mov	r5, r2
 802a66c:	e7d2      	b.n	802a614 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x50>

0802a66e <_ZN8touchgfx6Canvas5closeEv>:
 802a66e:	b538      	push	{r3, r4, r5, lr}
 802a670:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 802a674:	4604      	mov	r4, r0
 802a676:	b993      	cbnz	r3, 802a69e <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a678:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 802a67c:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 802a680:	4213      	tst	r3, r2
 802a682:	d10c      	bne.n	802a69e <_ZN8touchgfx6Canvas5closeEv+0x30>
 802a684:	f100 0530 	add.w	r5, r0, #48	; 0x30
 802a688:	b123      	cbz	r3, 802a694 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802a68a:	e9d0 122a 	ldrd	r1, r2, [r0, #168]	; 0xa8
 802a68e:	4628      	mov	r0, r5
 802a690:	f7ff fe3a 	bl	802a308 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a694:	4628      	mov	r0, r5
 802a696:	e9d4 122d 	ldrd	r1, r2, [r4, #180]	; 0xb4
 802a69a:	f7ff fe35 	bl	802a308 <_ZN8touchgfx10Rasterizer6lineToEii>
 802a69e:	2300      	movs	r3, #0
 802a6a0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802a6a4:	bd38      	pop	{r3, r4, r5, pc}

0802a6a6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802a6a6:	b5f0      	push	{r4, r5, r6, r7, lr}
 802a6a8:	b085      	sub	sp, #20
 802a6aa:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 802a6ae:	4604      	mov	r4, r0
 802a6b0:	e9cd 2102 	strd	r2, r1, [sp, #8]
 802a6b4:	b353      	cbz	r3, 802a70c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>
 802a6b6:	f890 30a5 	ldrb.w	r3, [r0, #165]	; 0xa5
 802a6ba:	b90b      	cbnz	r3, 802a6c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x1a>
 802a6bc:	f7ff ffd7 	bl	802a66e <_ZN8touchgfx6Canvas5closeEv>
 802a6c0:	aa02      	add	r2, sp, #8
 802a6c2:	a903      	add	r1, sp, #12
 802a6c4:	4620      	mov	r0, r4
 802a6c6:	f7ff ff6b 	bl	802a5a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802a6ca:	68a3      	ldr	r3, [r4, #8]
 802a6cc:	9d03      	ldr	r5, [sp, #12]
 802a6ce:	aa02      	add	r2, sp, #8
 802a6d0:	9e02      	ldr	r6, [sp, #8]
 802a6d2:	a903      	add	r1, sp, #12
 802a6d4:	1aed      	subs	r5, r5, r3
 802a6d6:	68e3      	ldr	r3, [r4, #12]
 802a6d8:	4620      	mov	r0, r4
 802a6da:	1af6      	subs	r6, r6, r3
 802a6dc:	f104 0314 	add.w	r3, r4, #20
 802a6e0:	9503      	str	r5, [sp, #12]
 802a6e2:	9300      	str	r3, [sp, #0]
 802a6e4:	f104 0310 	add.w	r3, r4, #16
 802a6e8:	9602      	str	r6, [sp, #8]
 802a6ea:	f7ff ff41 	bl	802a570 <_ZNK8touchgfx6Canvas9isOutsideERKNS_7CWRUtil2Q5ES4_S4_S4_>
 802a6ee:	4607      	mov	r7, r0
 802a6f0:	b170      	cbz	r0, 802a710 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x6a>
 802a6f2:	2301      	movs	r3, #1
 802a6f4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802a6f8:	9a03      	ldr	r2, [sp, #12]
 802a6fa:	9b02      	ldr	r3, [sp, #8]
 802a6fc:	f8c4 20b4 	str.w	r2, [r4, #180]	; 0xb4
 802a700:	f8c4 30b8 	str.w	r3, [r4, #184]	; 0xb8
 802a704:	f884 70b0 	strb.w	r7, [r4, #176]	; 0xb0
 802a708:	e9c4 232a 	strd	r2, r3, [r4, #168]	; 0xa8
 802a70c:	b005      	add	sp, #20
 802a70e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802a710:	f894 3074 	ldrb.w	r3, [r4, #116]	; 0x74
 802a714:	f884 00b1 	strb.w	r0, [r4, #177]	; 0xb1
 802a718:	b92b      	cbnz	r3, 802a726 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x80>
 802a71a:	4632      	mov	r2, r6
 802a71c:	4629      	mov	r1, r5
 802a71e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 802a722:	f000 ff98 	bl	802b656 <_ZN8touchgfx7Outline6moveToEii>
 802a726:	2300      	movs	r3, #0
 802a728:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 802a72c:	2301      	movs	r3, #1
 802a72e:	f884 30a6 	strb.w	r3, [r4, #166]	; 0xa6
 802a732:	e7e1      	b.n	802a6f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x52>

0802a734 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>:
 802a734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a738:	4604      	mov	r4, r0
 802a73a:	b087      	sub	sp, #28
 802a73c:	9105      	str	r1, [sp, #20]
 802a73e:	f001 f8ce 	bl	802b8de <_ZN8touchgfx7Outline8getCellsEv>
 802a742:	f8d4 9008 	ldr.w	r9, [r4, #8]
 802a746:	4605      	mov	r5, r0
 802a748:	f1b9 0f00 	cmp.w	r9, #0
 802a74c:	d103      	bne.n	802a756 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x22>
 802a74e:	2001      	movs	r0, #1
 802a750:	b007      	add	sp, #28
 802a752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a756:	f894 6044 	ldrb.w	r6, [r4, #68]	; 0x44
 802a75a:	2e00      	cmp	r6, #0
 802a75c:	d139      	bne.n	802a7d2 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x9e>
 802a75e:	f104 0848 	add.w	r8, r4, #72	; 0x48
 802a762:	f105 0708 	add.w	r7, r5, #8
 802a766:	4640      	mov	r0, r8
 802a768:	f001 f8fb 	bl	802b962 <_ZN8touchgfx8Scanline5resetEv>
 802a76c:	f109 33ff 	add.w	r3, r9, #4294967295
 802a770:	9303      	str	r3, [sp, #12]
 802a772:	f9b5 b000 	ldrsh.w	fp, [r5]
 802a776:	f9b5 9002 	ldrsh.w	r9, [r5, #2]
 802a77a:	46da      	mov	sl, fp
 802a77c:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 802a780:	eb0b 4009 	add.w	r0, fp, r9, lsl #16
 802a784:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 802a788:	9b03      	ldr	r3, [sp, #12]
 802a78a:	4416      	add	r6, r2
 802a78c:	9504      	str	r5, [sp, #16]
 802a78e:	463d      	mov	r5, r7
 802a790:	3b01      	subs	r3, #1
 802a792:	9303      	str	r3, [sp, #12]
 802a794:	3301      	adds	r3, #1
 802a796:	d01e      	beq.n	802a7d6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa2>
 802a798:	3708      	adds	r7, #8
 802a79a:	f937 cc06 	ldrsh.w	ip, [r7, #-6]
 802a79e:	f937 2c08 	ldrsh.w	r2, [r7, #-8]
 802a7a2:	eb02 420c 	add.w	r2, r2, ip, lsl #16
 802a7a6:	4290      	cmp	r0, r2
 802a7a8:	d11e      	bne.n	802a7e8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xb4>
 802a7aa:	f937 2c02 	ldrsh.w	r2, [r7, #-2]
 802a7ae:	4411      	add	r1, r2
 802a7b0:	f937 2c04 	ldrsh.w	r2, [r7, #-4]
 802a7b4:	e7e8      	b.n	802a788 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x54>
 802a7b6:	1c91      	adds	r1, r2, #2
 802a7b8:	f04f 0301 	mov.w	r3, #1
 802a7bc:	65e1      	str	r1, [r4, #92]	; 0x5c
 802a7be:	8053      	strh	r3, [r2, #2]
 802a7c0:	6da2      	ldr	r2, [r4, #88]	; 0x58
 802a7c2:	1c91      	adds	r1, r2, #2
 802a7c4:	65a1      	str	r1, [r4, #88]	; 0x58
 802a7c6:	f8a2 b002 	strh.w	fp, [r2, #2]
 802a7ca:	6d62      	ldr	r2, [r4, #84]	; 0x54
 802a7cc:	3201      	adds	r2, #1
 802a7ce:	6562      	str	r2, [r4, #84]	; 0x54
 802a7d0:	e03a      	b.n	802a848 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x114>
 802a7d2:	2000      	movs	r0, #0
 802a7d4:	e7bc      	b.n	802a750 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1c>
 802a7d6:	b951      	cbnz	r1, 802a7ee <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xba>
 802a7d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 802a7da:	2b00      	cmp	r3, #0
 802a7dc:	d0b7      	beq.n	802a74e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 802a7de:	4641      	mov	r1, r8
 802a7e0:	9805      	ldr	r0, [sp, #20]
 802a7e2:	f7ff fd5b 	bl	802a29c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 802a7e6:	e7b2      	b.n	802a74e <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x1a>
 802a7e8:	2900      	cmp	r1, #0
 802a7ea:	d035      	beq.n	802a858 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x124>
 802a7ec:	9504      	str	r5, [sp, #16]
 802a7ee:	ebc1 1186 	rsb	r1, r1, r6, lsl #6
 802a7f2:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 802a7f6:	f7ff fd3d 	bl	802a274 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 802a7fa:	4605      	mov	r5, r0
 802a7fc:	b330      	cbz	r0, 802a84c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 802a7fe:	6d62      	ldr	r2, [r4, #84]	; 0x54
 802a800:	b182      	cbz	r2, 802a824 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 802a802:	6d22      	ldr	r2, [r4, #80]	; 0x50
 802a804:	454a      	cmp	r2, r9
 802a806:	d00d      	beq.n	802a824 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xf0>
 802a808:	4641      	mov	r1, r8
 802a80a:	9805      	ldr	r0, [sp, #20]
 802a80c:	f7ff fd46 	bl	802a29c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 802a810:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a814:	6ea2      	ldr	r2, [r4, #104]	; 0x68
 802a816:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 802a81a:	65e2      	str	r2, [r4, #92]	; 0x5c
 802a81c:	2300      	movs	r3, #0
 802a81e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802a820:	6563      	str	r3, [r4, #84]	; 0x54
 802a822:	65a2      	str	r2, [r4, #88]	; 0x58
 802a824:	f1bb 0f00 	cmp.w	fp, #0
 802a828:	db10      	blt.n	802a84c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 802a82a:	f7ef f9e5 	bl	8019bf8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802a82e:	4583      	cmp	fp, r0
 802a830:	d20c      	bcs.n	802a84c <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x118>
 802a832:	6e22      	ldr	r2, [r4, #96]	; 0x60
 802a834:	f802 500b 	strb.w	r5, [r2, fp]
 802a838:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 802a83a:	3201      	adds	r2, #1
 802a83c:	455a      	cmp	r2, fp
 802a83e:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 802a840:	d1b9      	bne.n	802a7b6 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x82>
 802a842:	8811      	ldrh	r1, [r2, #0]
 802a844:	3101      	adds	r1, #1
 802a846:	8011      	strh	r1, [r2, #0]
 802a848:	e9c4 b913 	strd	fp, r9, [r4, #76]	; 0x4c
 802a84c:	9b03      	ldr	r3, [sp, #12]
 802a84e:	3301      	adds	r3, #1
 802a850:	d0c2      	beq.n	802a7d8 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0xa4>
 802a852:	f10b 0a01 	add.w	sl, fp, #1
 802a856:	9d04      	ldr	r5, [sp, #16]
 802a858:	f9b5 3000 	ldrsh.w	r3, [r5]
 802a85c:	4553      	cmp	r3, sl
 802a85e:	dd88      	ble.n	802a772 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 802a860:	01b1      	lsls	r1, r6, #6
 802a862:	f894 006c 	ldrb.w	r0, [r4, #108]	; 0x6c
 802a866:	f7ff fd05 	bl	802a274 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.15>
 802a86a:	4683      	mov	fp, r0
 802a86c:	2800      	cmp	r0, #0
 802a86e:	d080      	beq.n	802a772 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>
 802a870:	6d63      	ldr	r3, [r4, #84]	; 0x54
 802a872:	b183      	cbz	r3, 802a896 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 802a874:	6d23      	ldr	r3, [r4, #80]	; 0x50
 802a876:	454b      	cmp	r3, r9
 802a878:	d00d      	beq.n	802a896 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x162>
 802a87a:	4641      	mov	r1, r8
 802a87c:	9805      	ldr	r0, [sp, #20]
 802a87e:	f7ff fd0d 	bl	802a29c <_ZN8touchgfx8Renderer6renderERKNS_8ScanlineE>
 802a882:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a886:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 802a88a:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 802a88c:	65e3      	str	r3, [r4, #92]	; 0x5c
 802a88e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802a890:	65a3      	str	r3, [r4, #88]	; 0x58
 802a892:	2300      	movs	r3, #0
 802a894:	6563      	str	r3, [r4, #84]	; 0x54
 802a896:	f9b5 3000 	ldrsh.w	r3, [r5]
 802a89a:	464a      	mov	r2, r9
 802a89c:	f8cd b000 	str.w	fp, [sp]
 802a8a0:	4651      	mov	r1, sl
 802a8a2:	eba3 030a 	sub.w	r3, r3, sl
 802a8a6:	4640      	mov	r0, r8
 802a8a8:	f001 f882 	bl	802b9b0 <_ZN8touchgfx8Scanline7addSpanEiijj>
 802a8ac:	e761      	b.n	802a772 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_+0x3e>

0802a8ae <_ZN8touchgfx6Canvas6renderEh>:
 802a8ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a8b0:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 802a8b4:	4604      	mov	r4, r0
 802a8b6:	460d      	mov	r5, r1
 802a8b8:	b913      	cbnz	r3, 802a8c0 <_ZN8touchgfx6Canvas6renderEh+0x12>
 802a8ba:	2001      	movs	r0, #1
 802a8bc:	b003      	add	sp, #12
 802a8be:	bd30      	pop	{r4, r5, pc}
 802a8c0:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 802a8c4:	2b00      	cmp	r3, #0
 802a8c6:	d12f      	bne.n	802a928 <_ZN8touchgfx6Canvas6renderEh+0x7a>
 802a8c8:	f890 30a6 	ldrb.w	r3, [r0, #166]	; 0xa6
 802a8cc:	2b00      	cmp	r3, #0
 802a8ce:	d0f4      	beq.n	802a8ba <_ZN8touchgfx6Canvas6renderEh+0xc>
 802a8d0:	6840      	ldr	r0, [r0, #4]
 802a8d2:	6803      	ldr	r3, [r0, #0]
 802a8d4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 802a8d6:	4798      	blx	r3
 802a8d8:	fb10 f105 	smulbb	r1, r0, r5
 802a8dc:	b288      	uxth	r0, r1
 802a8de:	1c41      	adds	r1, r0, #1
 802a8e0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a8e4:	120d      	asrs	r5, r1, #8
 802a8e6:	d0e8      	beq.n	802a8ba <_ZN8touchgfx6Canvas6renderEh+0xc>
 802a8e8:	4620      	mov	r0, r4
 802a8ea:	f7ff fec0 	bl	802a66e <_ZN8touchgfx6Canvas5closeEv>
 802a8ee:	6860      	ldr	r0, [r4, #4]
 802a8f0:	6803      	ldr	r3, [r0, #0]
 802a8f2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802a8f4:	4798      	blx	r3
 802a8f6:	f9b4 20a0 	ldrsh.w	r2, [r4, #160]	; 0xa0
 802a8fa:	f9b4 30a2 	ldrsh.w	r3, [r4, #162]	; 0xa2
 802a8fe:	8082      	strh	r2, [r0, #4]
 802a900:	80c3      	strh	r3, [r0, #6]
 802a902:	6860      	ldr	r0, [r4, #4]
 802a904:	6803      	ldr	r3, [r0, #0]
 802a906:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802a908:	4798      	blx	r3
 802a90a:	7205      	strb	r5, [r0, #8]
 802a90c:	6860      	ldr	r0, [r4, #4]
 802a90e:	6803      	ldr	r3, [r0, #0]
 802a910:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 802a912:	4798      	blx	r3
 802a914:	f104 0318 	add.w	r3, r4, #24
 802a918:	4669      	mov	r1, sp
 802a91a:	e9cd 3000 	strd	r3, r0, [sp]
 802a91e:	f104 0030 	add.w	r0, r4, #48	; 0x30
 802a922:	f7ff ff07 	bl	802a734 <_ZN8touchgfx10Rasterizer6renderINS_8RendererEEEbRT_>
 802a926:	e7c9      	b.n	802a8bc <_ZN8touchgfx6Canvas6renderEh+0xe>
 802a928:	2000      	movs	r0, #0
 802a92a:	e7c7      	b.n	802a8bc <_ZN8touchgfx6Canvas6renderEh+0xe>

0802a92c <_ZN8touchgfx6CanvasD1Ev>:
 802a92c:	b538      	push	{r3, r4, r5, lr}
 802a92e:	4605      	mov	r5, r0
 802a930:	4b08      	ldr	r3, [pc, #32]	; (802a954 <_ZN8touchgfx6CanvasD1Ev+0x28>)
 802a932:	4604      	mov	r4, r0
 802a934:	f845 3b30 	str.w	r3, [r5], #48
 802a938:	4b07      	ldr	r3, [pc, #28]	; (802a958 <_ZN8touchgfx6CanvasD1Ev+0x2c>)
 802a93a:	6818      	ldr	r0, [r3, #0]
 802a93c:	6803      	ldr	r3, [r0, #0]
 802a93e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 802a940:	4798      	blx	r3
 802a942:	4628      	mov	r0, r5
 802a944:	f000 f814 	bl	802a970 <_ZN8touchgfx7OutlineD1Ev>
 802a948:	f104 0018 	add.w	r0, r4, #24
 802a94c:	f001 f869 	bl	802ba22 <_ZN8touchgfx15RenderingBufferD1Ev>
 802a950:	4620      	mov	r0, r4
 802a952:	bd38      	pop	{r3, r4, r5, pc}
 802a954:	08032a8c 	.word	0x08032a8c
 802a958:	20004168 	.word	0x20004168

0802a95c <_ZN8touchgfx6CanvasD0Ev>:
 802a95c:	b510      	push	{r4, lr}
 802a95e:	4604      	mov	r4, r0
 802a960:	f7ff ffe4 	bl	802a92c <_ZN8touchgfx6CanvasD1Ev>
 802a964:	21bc      	movs	r1, #188	; 0xbc
 802a966:	4620      	mov	r0, r4
 802a968:	f001 f87d 	bl	802ba66 <_ZdlPvj>
 802a96c:	4620      	mov	r0, r4
 802a96e:	bd10      	pop	{r4, pc}

0802a970 <_ZN8touchgfx7OutlineD1Ev>:
 802a970:	4770      	bx	lr

0802a972 <_ZN8touchgfx7OutlineD0Ev>:
 802a972:	b510      	push	{r4, lr}
 802a974:	4604      	mov	r4, r0
 802a976:	2148      	movs	r1, #72	; 0x48
 802a978:	f001 f875 	bl	802ba66 <_ZdlPvj>
 802a97c:	4620      	mov	r0, r4
 802a97e:	bd10      	pop	{r4, pc}

0802a980 <_ZN8touchgfx7Outline5resetEv>:
 802a980:	b510      	push	{r4, lr}
 802a982:	4604      	mov	r4, r0
 802a984:	f7ef f950 	bl	8019c28 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 802a988:	60e0      	str	r0, [r4, #12]
 802a98a:	f7ef f953 	bl	8019c34 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 802a98e:	68e3      	ldr	r3, [r4, #12]
 802a990:	2200      	movs	r2, #0
 802a992:	08c0      	lsrs	r0, r0, #3
 802a994:	6123      	str	r3, [r4, #16]
 802a996:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802a99a:	6060      	str	r0, [r4, #4]
 802a99c:	82a3      	strh	r3, [r4, #20]
 802a99e:	82e3      	strh	r3, [r4, #22]
 802a9a0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802a9a2:	60a2      	str	r2, [r4, #8]
 802a9a4:	f023 0301 	bic.w	r3, r3, #1
 802a9a8:	8322      	strh	r2, [r4, #24]
 802a9aa:	8362      	strh	r2, [r4, #26]
 802a9ac:	f043 0302 	orr.w	r3, r3, #2
 802a9b0:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802a9b4:	63e3      	str	r3, [r4, #60]	; 0x3c
 802a9b6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 802a9ba:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802a9be:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802a9c2:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802a9c6:	bd10      	pop	{r4, pc}

0802a9c8 <_ZN8touchgfx7OutlineC1Ev>:
 802a9c8:	4b0f      	ldr	r3, [pc, #60]	; (802aa08 <_ZN8touchgfx7OutlineC1Ev+0x40>)
 802a9ca:	f06f 4200 	mvn.w	r2, #2147483648	; 0x80000000
 802a9ce:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 802a9d2:	b510      	push	{r4, lr}
 802a9d4:	6003      	str	r3, [r0, #0]
 802a9d6:	2300      	movs	r3, #0
 802a9d8:	4604      	mov	r4, r0
 802a9da:	f880 3044 	strb.w	r3, [r0, #68]	; 0x44
 802a9de:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802a9e2:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802a9e6:	e9c0 3305 	strd	r3, r3, [r0, #20]
 802a9ea:	e9c0 3307 	strd	r3, r3, [r0, #28]
 802a9ee:	e9c0 3309 	strd	r3, r3, [r0, #36]	; 0x24
 802a9f2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 802a9f6:	e9c0 110d 	strd	r1, r1, [r0, #52]	; 0x34
 802a9fa:	e9c0 320f 	strd	r3, r2, [r0, #60]	; 0x3c
 802a9fe:	f7ff ffbf 	bl	802a980 <_ZN8touchgfx7Outline5resetEv>
 802aa02:	4620      	mov	r0, r4
 802aa04:	bd10      	pop	{r4, pc}
 802aa06:	bf00      	nop
 802aa08:	08032aec 	.word	0x08032aec

0802aa0c <_ZN8touchgfx7Outline10renderLineEiiii>:
 802aa0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802aa10:	b093      	sub	sp, #76	; 0x4c
 802aa12:	4604      	mov	r4, r0
 802aa14:	1156      	asrs	r6, r2, #5
 802aa16:	f002 0e1f 	and.w	lr, r2, #31
 802aa1a:	981c      	ldr	r0, [sp, #112]	; 0x70
 802aa1c:	9305      	str	r3, [sp, #20]
 802aa1e:	1143      	asrs	r3, r0, #5
 802aa20:	1145      	asrs	r5, r0, #5
 802aa22:	930c      	str	r3, [sp, #48]	; 0x30
 802aa24:	f000 031f 	and.w	r3, r0, #31
 802aa28:	9303      	str	r3, [sp, #12]
 802aa2a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa2c:	42b3      	cmp	r3, r6
 802aa2e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802aa30:	bfc8      	it	gt
 802aa32:	6326      	strgt	r6, [r4, #48]	; 0x30
 802aa34:	42b3      	cmp	r3, r6
 802aa36:	bfdc      	itt	le
 802aa38:	1c73      	addle	r3, r6, #1
 802aa3a:	63a3      	strle	r3, [r4, #56]	; 0x38
 802aa3c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802aa3e:	42ab      	cmp	r3, r5
 802aa40:	bfc8      	it	gt
 802aa42:	462b      	movgt	r3, r5
 802aa44:	ea4f 1560 	mov.w	r5, r0, asr #5
 802aa48:	bfc8      	it	gt
 802aa4a:	6323      	strgt	r3, [r4, #48]	; 0x30
 802aa4c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 802aa4e:	42ab      	cmp	r3, r5
 802aa50:	bfd8      	it	le
 802aa52:	462b      	movle	r3, r5
 802aa54:	ea4f 1561 	mov.w	r5, r1, asr #5
 802aa58:	bfdc      	itt	le
 802aa5a:	3301      	addle	r3, #1
 802aa5c:	63a3      	strle	r3, [r4, #56]	; 0x38
 802aa5e:	9b05      	ldr	r3, [sp, #20]
 802aa60:	eba3 0a01 	sub.w	sl, r3, r1
 802aa64:	1143      	asrs	r3, r0, #5
 802aa66:	429e      	cmp	r6, r3
 802aa68:	f040 8119 	bne.w	802ac9e <_ZN8touchgfx7Outline10renderLineEiiii+0x292>
 802aa6c:	9b05      	ldr	r3, [sp, #20]
 802aa6e:	ea4f 1c63 	mov.w	ip, r3, asr #5
 802aa72:	9b03      	ldr	r3, [sp, #12]
 802aa74:	459e      	cmp	lr, r3
 802aa76:	d12c      	bne.n	802aad2 <_ZN8touchgfx7Outline10renderLineEiiii+0xc6>
 802aa78:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802aa7c:	eb0c 4106 	add.w	r1, ip, r6, lsl #16
 802aa80:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 802aa84:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 802aa88:	4291      	cmp	r1, r2
 802aa8a:	d037      	beq.n	802aafc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 802aa8c:	8b61      	ldrh	r1, [r4, #26]
 802aa8e:	8b22      	ldrh	r2, [r4, #24]
 802aa90:	430a      	orrs	r2, r1
 802aa92:	d00b      	beq.n	802aaac <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 802aa94:	2b00      	cmp	r3, #0
 802aa96:	db09      	blt.n	802aaac <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 802aa98:	6c22      	ldr	r2, [r4, #64]	; 0x40
 802aa9a:	429a      	cmp	r2, r3
 802aa9c:	dd06      	ble.n	802aaac <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 802aa9e:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 802aaa2:	429a      	cmp	r2, r3
 802aaa4:	d308      	bcc.n	802aab8 <_ZN8touchgfx7Outline10renderLineEiiii+0xac>
 802aaa6:	2301      	movs	r3, #1
 802aaa8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802aaac:	f8a4 c014 	strh.w	ip, [r4, #20]
 802aab0:	82e6      	strh	r6, [r4, #22]
 802aab2:	2300      	movs	r3, #0
 802aab4:	8323      	strh	r3, [r4, #24]
 802aab6:	e0c6      	b.n	802ac46 <_ZN8touchgfx7Outline10renderLineEiiii+0x23a>
 802aab8:	f104 0314 	add.w	r3, r4, #20
 802aabc:	6922      	ldr	r2, [r4, #16]
 802aabe:	cb03      	ldmia	r3!, {r0, r1}
 802aac0:	6010      	str	r0, [r2, #0]
 802aac2:	6051      	str	r1, [r2, #4]
 802aac4:	6923      	ldr	r3, [r4, #16]
 802aac6:	3308      	adds	r3, #8
 802aac8:	6123      	str	r3, [r4, #16]
 802aaca:	68a3      	ldr	r3, [r4, #8]
 802aacc:	3301      	adds	r3, #1
 802aace:	60a3      	str	r3, [r4, #8]
 802aad0:	e7ec      	b.n	802aaac <_ZN8touchgfx7Outline10renderLineEiiii+0xa0>
 802aad2:	9b05      	ldr	r3, [sp, #20]
 802aad4:	45ac      	cmp	ip, r5
 802aad6:	f001 011f 	and.w	r1, r1, #31
 802aada:	8b20      	ldrh	r0, [r4, #24]
 802aadc:	f003 031f 	and.w	r3, r3, #31
 802aae0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
 802aae4:	9304      	str	r3, [sp, #16]
 802aae6:	9b03      	ldr	r3, [sp, #12]
 802aae8:	eba3 020e 	sub.w	r2, r3, lr
 802aaec:	d109      	bne.n	802ab02 <_ZN8touchgfx7Outline10renderLineEiiii+0xf6>
 802aaee:	9b04      	ldr	r3, [sp, #16]
 802aaf0:	4410      	add	r0, r2
 802aaf2:	4419      	add	r1, r3
 802aaf4:	8320      	strh	r0, [r4, #24]
 802aaf6:	fb02 8201 	mla	r2, r2, r1, r8
 802aafa:	8362      	strh	r2, [r4, #26]
 802aafc:	b013      	add	sp, #76	; 0x4c
 802aafe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802ab02:	f1ba 0f00 	cmp.w	sl, #0
 802ab06:	f2c0 80a0 	blt.w	802ac4a <_ZN8touchgfx7Outline10renderLineEiiii+0x23e>
 802ab0a:	f1c1 0320 	rsb	r3, r1, #32
 802ab0e:	f04f 0b20 	mov.w	fp, #32
 802ab12:	435a      	muls	r2, r3
 802ab14:	2301      	movs	r3, #1
 802ab16:	9302      	str	r3, [sp, #8]
 802ab18:	4459      	add	r1, fp
 802ab1a:	fb92 f7fa 	sdiv	r7, r2, sl
 802ab1e:	fb0a 2217 	mls	r2, sl, r7, r2
 802ab22:	2a00      	cmp	r2, #0
 802ab24:	bfbc      	itt	lt
 802ab26:	f107 37ff 	addlt.w	r7, r7, #4294967295
 802ab2a:	4452      	addlt	r2, sl
 802ab2c:	fb07 8101 	mla	r1, r7, r1, r8
 802ab30:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 802ab34:	4438      	add	r0, r7
 802ab36:	b20b      	sxth	r3, r1
 802ab38:	9902      	ldr	r1, [sp, #8]
 802ab3a:	b200      	sxth	r0, r0
 802ab3c:	9301      	str	r3, [sp, #4]
 802ab3e:	8363      	strh	r3, [r4, #26]
 802ab40:	186b      	adds	r3, r5, r1
 802ab42:	0435      	lsls	r5, r6, #16
 802ab44:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 802ab48:	8320      	strh	r0, [r4, #24]
 802ab4a:	eb03 0905 	add.w	r9, r3, r5
 802ab4e:	eb08 4801 	add.w	r8, r8, r1, lsl #16
 802ab52:	9300      	str	r3, [sp, #0]
 802ab54:	45c1      	cmp	r9, r8
 802ab56:	9505      	str	r5, [sp, #20]
 802ab58:	d014      	beq.n	802ab84 <_ZN8touchgfx7Outline10renderLineEiiii+0x178>
 802ab5a:	9b01      	ldr	r3, [sp, #4]
 802ab5c:	4303      	orrs	r3, r0
 802ab5e:	d00b      	beq.n	802ab78 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 802ab60:	2900      	cmp	r1, #0
 802ab62:	db09      	blt.n	802ab78 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 802ab64:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ab66:	428b      	cmp	r3, r1
 802ab68:	dd06      	ble.n	802ab78 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 802ab6a:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802ab6e:	4299      	cmp	r1, r3
 802ab70:	d374      	bcc.n	802ac5c <_ZN8touchgfx7Outline10renderLineEiiii+0x250>
 802ab72:	2301      	movs	r3, #1
 802ab74:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802ab78:	9b00      	ldr	r3, [sp, #0]
 802ab7a:	82e6      	strh	r6, [r4, #22]
 802ab7c:	82a3      	strh	r3, [r4, #20]
 802ab7e:	2300      	movs	r3, #0
 802ab80:	8323      	strh	r3, [r4, #24]
 802ab82:	8363      	strh	r3, [r4, #26]
 802ab84:	9900      	ldr	r1, [sp, #0]
 802ab86:	eb0e 0307 	add.w	r3, lr, r7
 802ab8a:	458c      	cmp	ip, r1
 802ab8c:	d04e      	beq.n	802ac2c <_ZN8touchgfx7Outline10renderLineEiiii+0x220>
 802ab8e:	9903      	ldr	r1, [sp, #12]
 802ab90:	eba2 020a 	sub.w	r2, r2, sl
 802ab94:	1ac9      	subs	r1, r1, r3
 802ab96:	9201      	str	r2, [sp, #4]
 802ab98:	440f      	add	r7, r1
 802ab9a:	017f      	lsls	r7, r7, #5
 802ab9c:	fb97 fefa 	sdiv	lr, r7, sl
 802aba0:	fb0a 771e 	mls	r7, sl, lr, r7
 802aba4:	2f00      	cmp	r7, #0
 802aba6:	bfbc      	itt	lt
 802aba8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 802abac:	4457      	addlt	r7, sl
 802abae:	f10e 0101 	add.w	r1, lr, #1
 802abb2:	9106      	str	r1, [sp, #24]
 802abb4:	9a01      	ldr	r2, [sp, #4]
 802abb6:	8b20      	ldrh	r0, [r4, #24]
 802abb8:	19d2      	adds	r2, r2, r7
 802abba:	8b61      	ldrh	r1, [r4, #26]
 802abbc:	9d02      	ldr	r5, [sp, #8]
 802abbe:	9201      	str	r2, [sp, #4]
 802abc0:	bf5b      	ittet	pl
 802abc2:	eba2 020a 	subpl.w	r2, r2, sl
 802abc6:	f8dd 8018 	ldrpl.w	r8, [sp, #24]
 802abca:	46f0      	movmi	r8, lr
 802abcc:	9201      	strpl	r2, [sp, #4]
 802abce:	9a00      	ldr	r2, [sp, #0]
 802abd0:	4440      	add	r0, r8
 802abd2:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 802abd6:	4443      	add	r3, r8
 802abd8:	442a      	add	r2, r5
 802abda:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 802abde:	9d05      	ldr	r5, [sp, #20]
 802abe0:	b200      	sxth	r0, r0
 802abe2:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 802abe6:	b209      	sxth	r1, r1
 802abe8:	4415      	add	r5, r2
 802abea:	8320      	strh	r0, [r4, #24]
 802abec:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802abf0:	8361      	strh	r1, [r4, #26]
 802abf2:	9200      	str	r2, [sp, #0]
 802abf4:	454d      	cmp	r5, r9
 802abf6:	d016      	beq.n	802ac26 <_ZN8touchgfx7Outline10renderLineEiiii+0x21a>
 802abf8:	4301      	orrs	r1, r0
 802abfa:	d00d      	beq.n	802ac18 <_ZN8touchgfx7Outline10renderLineEiiii+0x20c>
 802abfc:	f1b8 0f00 	cmp.w	r8, #0
 802ac00:	db0a      	blt.n	802ac18 <_ZN8touchgfx7Outline10renderLineEiiii+0x20c>
 802ac02:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802ac04:	4541      	cmp	r1, r8
 802ac06:	dd07      	ble.n	802ac18 <_ZN8touchgfx7Outline10renderLineEiiii+0x20c>
 802ac08:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802ac0c:	4288      	cmp	r0, r1
 802ac0e:	d335      	bcc.n	802ac7c <_ZN8touchgfx7Outline10renderLineEiiii+0x270>
 802ac10:	f04f 0101 	mov.w	r1, #1
 802ac14:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802ac18:	9900      	ldr	r1, [sp, #0]
 802ac1a:	82e6      	strh	r6, [r4, #22]
 802ac1c:	82a1      	strh	r1, [r4, #20]
 802ac1e:	f04f 0100 	mov.w	r1, #0
 802ac22:	8321      	strh	r1, [r4, #24]
 802ac24:	8361      	strh	r1, [r4, #26]
 802ac26:	9a00      	ldr	r2, [sp, #0]
 802ac28:	4594      	cmp	ip, r2
 802ac2a:	d1c3      	bne.n	802abb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1a8>
 802ac2c:	9a03      	ldr	r2, [sp, #12]
 802ac2e:	f8b4 c01a 	ldrh.w	ip, [r4, #26]
 802ac32:	1ad3      	subs	r3, r2, r3
 802ac34:	8b22      	ldrh	r2, [r4, #24]
 802ac36:	441a      	add	r2, r3
 802ac38:	8322      	strh	r2, [r4, #24]
 802ac3a:	9a04      	ldr	r2, [sp, #16]
 802ac3c:	3220      	adds	r2, #32
 802ac3e:	eba2 020b 	sub.w	r2, r2, fp
 802ac42:	fb03 c302 	mla	r3, r3, r2, ip
 802ac46:	8363      	strh	r3, [r4, #26]
 802ac48:	e758      	b.n	802aafc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 802ac4a:	f04f 33ff 	mov.w	r3, #4294967295
 802ac4e:	434a      	muls	r2, r1
 802ac50:	f1ca 0a00 	rsb	sl, sl, #0
 802ac54:	f04f 0b00 	mov.w	fp, #0
 802ac58:	9302      	str	r3, [sp, #8]
 802ac5a:	e75d      	b.n	802ab18 <_ZN8touchgfx7Outline10renderLineEiiii+0x10c>
 802ac5c:	f104 0314 	add.w	r3, r4, #20
 802ac60:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802ac64:	cb03      	ldmia	r3!, {r0, r1}
 802ac66:	f8c8 0000 	str.w	r0, [r8]
 802ac6a:	f8c8 1004 	str.w	r1, [r8, #4]
 802ac6e:	6923      	ldr	r3, [r4, #16]
 802ac70:	3308      	adds	r3, #8
 802ac72:	6123      	str	r3, [r4, #16]
 802ac74:	68a3      	ldr	r3, [r4, #8]
 802ac76:	3301      	adds	r3, #1
 802ac78:	60a3      	str	r3, [r4, #8]
 802ac7a:	e77d      	b.n	802ab78 <_ZN8touchgfx7Outline10renderLineEiiii+0x16c>
 802ac7c:	f104 0814 	add.w	r8, r4, #20
 802ac80:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802ac84:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802ac88:	f8c9 0000 	str.w	r0, [r9]
 802ac8c:	f8c9 1004 	str.w	r1, [r9, #4]
 802ac90:	6921      	ldr	r1, [r4, #16]
 802ac92:	3108      	adds	r1, #8
 802ac94:	6121      	str	r1, [r4, #16]
 802ac96:	68a1      	ldr	r1, [r4, #8]
 802ac98:	3101      	adds	r1, #1
 802ac9a:	60a1      	str	r1, [r4, #8]
 802ac9c:	e7bc      	b.n	802ac18 <_ZN8touchgfx7Outline10renderLineEiiii+0x20c>
 802ac9e:	1a83      	subs	r3, r0, r2
 802aca0:	9301      	str	r3, [sp, #4]
 802aca2:	f1ba 0f00 	cmp.w	sl, #0
 802aca6:	f040 8094 	bne.w	802add2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c6>
 802acaa:	9a01      	ldr	r2, [sp, #4]
 802acac:	0049      	lsls	r1, r1, #1
 802acae:	f9b4 0016 	ldrsh.w	r0, [r4, #22]
 802acb2:	2a00      	cmp	r2, #0
 802acb4:	f001 033e 	and.w	r3, r1, #62	; 0x3e
 802acb8:	8b62      	ldrh	r2, [r4, #26]
 802acba:	bfaa      	itet	ge
 802acbc:	f04f 0a20 	movge.w	sl, #32
 802acc0:	f04f 38ff 	movlt.w	r8, #4294967295
 802acc4:	f04f 0801 	movge.w	r8, #1
 802acc8:	8b21      	ldrh	r1, [r4, #24]
 802acca:	ebaa 0e0e 	sub.w	lr, sl, lr
 802acce:	4471      	add	r1, lr
 802acd0:	fb0e 2e03 	mla	lr, lr, r3, r2
 802acd4:	eb08 0206 	add.w	r2, r8, r6
 802acd8:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 802acdc:	b209      	sxth	r1, r1
 802acde:	eb05 4702 	add.w	r7, r5, r2, lsl #16
 802ace2:	eb06 4600 	add.w	r6, r6, r0, lsl #16
 802ace6:	8321      	strh	r1, [r4, #24]
 802ace8:	fa0f fe8e 	sxth.w	lr, lr
 802acec:	42b7      	cmp	r7, r6
 802acee:	f8a4 e01a 	strh.w	lr, [r4, #26]
 802acf2:	d013      	beq.n	802ad1c <_ZN8touchgfx7Outline10renderLineEiiii+0x310>
 802acf4:	ea51 010e 	orrs.w	r1, r1, lr
 802acf8:	d00b      	beq.n	802ad12 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 802acfa:	2800      	cmp	r0, #0
 802acfc:	db09      	blt.n	802ad12 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 802acfe:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802ad00:	4281      	cmp	r1, r0
 802ad02:	dd06      	ble.n	802ad12 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 802ad04:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802ad08:	4288      	cmp	r0, r1
 802ad0a:	d339      	bcc.n	802ad80 <_ZN8touchgfx7Outline10renderLineEiiii+0x374>
 802ad0c:	2101      	movs	r1, #1
 802ad0e:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802ad12:	2100      	movs	r1, #0
 802ad14:	82a5      	strh	r5, [r4, #20]
 802ad16:	82e2      	strh	r2, [r4, #22]
 802ad18:	8321      	strh	r1, [r4, #24]
 802ad1a:	8361      	strh	r1, [r4, #26]
 802ad1c:	f1aa 0610 	sub.w	r6, sl, #16
 802ad20:	f04f 0e00 	mov.w	lr, #0
 802ad24:	f04f 0b01 	mov.w	fp, #1
 802ad28:	0076      	lsls	r6, r6, #1
 802ad2a:	fb06 f703 	mul.w	r7, r6, r3
 802ad2e:	b236      	sxth	r6, r6
 802ad30:	b23f      	sxth	r7, r7
 802ad32:	ea46 0107 	orr.w	r1, r6, r7
 802ad36:	9100      	str	r1, [sp, #0]
 802ad38:	990c      	ldr	r1, [sp, #48]	; 0x30
 802ad3a:	428a      	cmp	r2, r1
 802ad3c:	d03e      	beq.n	802adbc <_ZN8touchgfx7Outline10renderLineEiiii+0x3b0>
 802ad3e:	4442      	add	r2, r8
 802ad40:	f9b4 1016 	ldrsh.w	r1, [r4, #22]
 802ad44:	f9b4 0014 	ldrsh.w	r0, [r4, #20]
 802ad48:	eb05 4c02 	add.w	ip, r5, r2, lsl #16
 802ad4c:	8326      	strh	r6, [r4, #24]
 802ad4e:	eb00 4001 	add.w	r0, r0, r1, lsl #16
 802ad52:	8367      	strh	r7, [r4, #26]
 802ad54:	4584      	cmp	ip, r0
 802ad56:	d0ef      	beq.n	802ad38 <_ZN8touchgfx7Outline10renderLineEiiii+0x32c>
 802ad58:	9800      	ldr	r0, [sp, #0]
 802ad5a:	b150      	cbz	r0, 802ad72 <_ZN8touchgfx7Outline10renderLineEiiii+0x366>
 802ad5c:	2900      	cmp	r1, #0
 802ad5e:	db08      	blt.n	802ad72 <_ZN8touchgfx7Outline10renderLineEiiii+0x366>
 802ad60:	6c20      	ldr	r0, [r4, #64]	; 0x40
 802ad62:	4288      	cmp	r0, r1
 802ad64:	dd05      	ble.n	802ad72 <_ZN8touchgfx7Outline10renderLineEiiii+0x366>
 802ad66:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802ad6a:	4288      	cmp	r0, r1
 802ad6c:	d315      	bcc.n	802ad9a <_ZN8touchgfx7Outline10renderLineEiiii+0x38e>
 802ad6e:	f884 b044 	strb.w	fp, [r4, #68]	; 0x44
 802ad72:	82a5      	strh	r5, [r4, #20]
 802ad74:	82e2      	strh	r2, [r4, #22]
 802ad76:	f8a4 e018 	strh.w	lr, [r4, #24]
 802ad7a:	f8a4 e01a 	strh.w	lr, [r4, #26]
 802ad7e:	e7db      	b.n	802ad38 <_ZN8touchgfx7Outline10renderLineEiiii+0x32c>
 802ad80:	f104 0614 	add.w	r6, r4, #20
 802ad84:	6927      	ldr	r7, [r4, #16]
 802ad86:	ce03      	ldmia	r6!, {r0, r1}
 802ad88:	6038      	str	r0, [r7, #0]
 802ad8a:	6079      	str	r1, [r7, #4]
 802ad8c:	6921      	ldr	r1, [r4, #16]
 802ad8e:	3108      	adds	r1, #8
 802ad90:	6121      	str	r1, [r4, #16]
 802ad92:	68a1      	ldr	r1, [r4, #8]
 802ad94:	3101      	adds	r1, #1
 802ad96:	60a1      	str	r1, [r4, #8]
 802ad98:	e7bb      	b.n	802ad12 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 802ad9a:	f104 0c14 	add.w	ip, r4, #20
 802ad9e:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802ada2:	e8bc 0003 	ldmia.w	ip!, {r0, r1}
 802ada6:	f8c9 0000 	str.w	r0, [r9]
 802adaa:	f8c9 1004 	str.w	r1, [r9, #4]
 802adae:	6921      	ldr	r1, [r4, #16]
 802adb0:	3108      	adds	r1, #8
 802adb2:	6121      	str	r1, [r4, #16]
 802adb4:	68a1      	ldr	r1, [r4, #8]
 802adb6:	3101      	adds	r1, #1
 802adb8:	60a1      	str	r1, [r4, #8]
 802adba:	e7da      	b.n	802ad72 <_ZN8touchgfx7Outline10renderLineEiiii+0x366>
 802adbc:	9a03      	ldr	r2, [sp, #12]
 802adbe:	8b61      	ldrh	r1, [r4, #26]
 802adc0:	f1a2 0c20 	sub.w	ip, r2, #32
 802adc4:	8b22      	ldrh	r2, [r4, #24]
 802adc6:	44d4      	add	ip, sl
 802adc8:	4462      	add	r2, ip
 802adca:	fb0c 1303 	mla	r3, ip, r3, r1
 802adce:	8322      	strh	r2, [r4, #24]
 802add0:	e739      	b.n	802ac46 <_ZN8touchgfx7Outline10renderLineEiiii+0x23a>
 802add2:	9b01      	ldr	r3, [sp, #4]
 802add4:	2b00      	cmp	r3, #0
 802add6:	db3f      	blt.n	802ae58 <_ZN8touchgfx7Outline10renderLineEiiii+0x44c>
 802add8:	2201      	movs	r2, #1
 802adda:	f1ce 0320 	rsb	r3, lr, #32
 802adde:	920b      	str	r2, [sp, #44]	; 0x2c
 802ade0:	2220      	movs	r2, #32
 802ade2:	fb0a f303 	mul.w	r3, sl, r3
 802ade6:	9202      	str	r2, [sp, #8]
 802ade8:	9a01      	ldr	r2, [sp, #4]
 802adea:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 802adee:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 802adf2:	fb93 f7f2 	sdiv	r7, r3, r2
 802adf6:	fb02 3317 	mls	r3, r2, r7, r3
 802adfa:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802adfe:	2b00      	cmp	r3, #0
 802ae00:	9308      	str	r3, [sp, #32]
 802ae02:	bfbc      	itt	lt
 802ae04:	f107 37ff 	addlt.w	r7, r7, #4294967295
 802ae08:	189b      	addlt	r3, r3, r2
 802ae0a:	eb07 0b01 	add.w	fp, r7, r1
 802ae0e:	bfb8      	it	lt
 802ae10:	9308      	strlt	r3, [sp, #32]
 802ae12:	ea4f 136b 	mov.w	r3, fp, asr #5
 802ae16:	9304      	str	r3, [sp, #16]
 802ae18:	9b02      	ldr	r3, [sp, #8]
 802ae1a:	4573      	cmp	r3, lr
 802ae1c:	d133      	bne.n	802ae86 <_ZN8touchgfx7Outline10renderLineEiiii+0x47a>
 802ae1e:	9b04      	ldr	r3, [sp, #16]
 802ae20:	eb03 4306 	add.w	r3, r3, r6, lsl #16
 802ae24:	454b      	cmp	r3, r9
 802ae26:	d045      	beq.n	802aeb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4a8>
 802ae28:	8b62      	ldrh	r2, [r4, #26]
 802ae2a:	8b23      	ldrh	r3, [r4, #24]
 802ae2c:	4313      	orrs	r3, r2
 802ae2e:	d00c      	beq.n	802ae4a <_ZN8touchgfx7Outline10renderLineEiiii+0x43e>
 802ae30:	f1b8 0f00 	cmp.w	r8, #0
 802ae34:	db09      	blt.n	802ae4a <_ZN8touchgfx7Outline10renderLineEiiii+0x43e>
 802ae36:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ae38:	4543      	cmp	r3, r8
 802ae3a:	dd06      	ble.n	802ae4a <_ZN8touchgfx7Outline10renderLineEiiii+0x43e>
 802ae3c:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 802ae40:	429a      	cmp	r2, r3
 802ae42:	d313      	bcc.n	802ae6c <_ZN8touchgfx7Outline10renderLineEiiii+0x460>
 802ae44:	2301      	movs	r3, #1
 802ae46:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802ae4a:	9b04      	ldr	r3, [sp, #16]
 802ae4c:	82e6      	strh	r6, [r4, #22]
 802ae4e:	82a3      	strh	r3, [r4, #20]
 802ae50:	2300      	movs	r3, #0
 802ae52:	8323      	strh	r3, [r4, #24]
 802ae54:	8363      	strh	r3, [r4, #26]
 802ae56:	e02d      	b.n	802aeb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4a8>
 802ae58:	9a01      	ldr	r2, [sp, #4]
 802ae5a:	fb0a f30e 	mul.w	r3, sl, lr
 802ae5e:	4252      	negs	r2, r2
 802ae60:	9201      	str	r2, [sp, #4]
 802ae62:	f04f 32ff 	mov.w	r2, #4294967295
 802ae66:	920b      	str	r2, [sp, #44]	; 0x2c
 802ae68:	2200      	movs	r2, #0
 802ae6a:	e7bc      	b.n	802ade6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 802ae6c:	f104 0314 	add.w	r3, r4, #20
 802ae70:	6922      	ldr	r2, [r4, #16]
 802ae72:	cb03      	ldmia	r3!, {r0, r1}
 802ae74:	6010      	str	r0, [r2, #0]
 802ae76:	6051      	str	r1, [r2, #4]
 802ae78:	6923      	ldr	r3, [r4, #16]
 802ae7a:	3308      	adds	r3, #8
 802ae7c:	6123      	str	r3, [r4, #16]
 802ae7e:	68a3      	ldr	r3, [r4, #8]
 802ae80:	3301      	adds	r3, #1
 802ae82:	60a3      	str	r3, [r4, #8]
 802ae84:	e7e1      	b.n	802ae4a <_ZN8touchgfx7Outline10renderLineEiiii+0x43e>
 802ae86:	f00b 031f 	and.w	r3, fp, #31
 802ae8a:	f001 011f 	and.w	r1, r1, #31
 802ae8e:	8b20      	ldrh	r0, [r4, #24]
 802ae90:	9309      	str	r3, [sp, #36]	; 0x24
 802ae92:	9b02      	ldr	r3, [sp, #8]
 802ae94:	eba3 020e 	sub.w	r2, r3, lr
 802ae98:	8b63      	ldrh	r3, [r4, #26]
 802ae9a:	9300      	str	r3, [sp, #0]
 802ae9c:	9b04      	ldr	r3, [sp, #16]
 802ae9e:	42ab      	cmp	r3, r5
 802aea0:	f040 80ef 	bne.w	802b082 <_ZN8touchgfx7Outline10renderLineEiiii+0x676>
 802aea4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802aea6:	4410      	add	r0, r2
 802aea8:	4419      	add	r1, r3
 802aeaa:	9b00      	ldr	r3, [sp, #0]
 802aeac:	8320      	strh	r0, [r4, #24]
 802aeae:	fb02 3101 	mla	r1, r2, r1, r3
 802aeb2:	8361      	strh	r1, [r4, #26]
 802aeb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802aeb6:	9904      	ldr	r1, [sp, #16]
 802aeb8:	4433      	add	r3, r6
 802aeba:	9300      	str	r3, [sp, #0]
 802aebc:	9a00      	ldr	r2, [sp, #0]
 802aebe:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802aec2:	eb01 4002 	add.w	r0, r1, r2, lsl #16
 802aec6:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802aeca:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802aece:	4288      	cmp	r0, r1
 802aed0:	d018      	beq.n	802af04 <_ZN8touchgfx7Outline10renderLineEiiii+0x4f8>
 802aed2:	8b60      	ldrh	r0, [r4, #26]
 802aed4:	8b21      	ldrh	r1, [r4, #24]
 802aed6:	ea50 0201 	orrs.w	r2, r0, r1
 802aeda:	d00c      	beq.n	802aef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ea>
 802aedc:	2b00      	cmp	r3, #0
 802aede:	db0a      	blt.n	802aef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ea>
 802aee0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802aee2:	4299      	cmp	r1, r3
 802aee4:	dd07      	ble.n	802aef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ea>
 802aee6:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802aeea:	4299      	cmp	r1, r3
 802aeec:	f0c0 818b 	bcc.w	802b206 <_ZN8touchgfx7Outline10renderLineEiiii+0x7fa>
 802aef0:	2301      	movs	r3, #1
 802aef2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802aef6:	9b04      	ldr	r3, [sp, #16]
 802aef8:	82a3      	strh	r3, [r4, #20]
 802aefa:	9b00      	ldr	r3, [sp, #0]
 802aefc:	82e3      	strh	r3, [r4, #22]
 802aefe:	2300      	movs	r3, #0
 802af00:	8323      	strh	r3, [r4, #24]
 802af02:	8363      	strh	r3, [r4, #26]
 802af04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802af06:	9a00      	ldr	r2, [sp, #0]
 802af08:	4293      	cmp	r3, r2
 802af0a:	f000 808d 	beq.w	802b028 <_ZN8touchgfx7Outline10renderLineEiiii+0x61c>
 802af0e:	ea4f 134a 	mov.w	r3, sl, lsl #5
 802af12:	9901      	ldr	r1, [sp, #4]
 802af14:	9801      	ldr	r0, [sp, #4]
 802af16:	fb93 f1f1 	sdiv	r1, r3, r1
 802af1a:	fb00 3311 	mls	r3, r0, r1, r3
 802af1e:	9106      	str	r1, [sp, #24]
 802af20:	2b00      	cmp	r3, #0
 802af22:	9307      	str	r3, [sp, #28]
 802af24:	da04      	bge.n	802af30 <_ZN8touchgfx7Outline10renderLineEiiii+0x524>
 802af26:	1e4b      	subs	r3, r1, #1
 802af28:	9306      	str	r3, [sp, #24]
 802af2a:	9b07      	ldr	r3, [sp, #28]
 802af2c:	4403      	add	r3, r0
 802af2e:	9307      	str	r3, [sp, #28]
 802af30:	9b08      	ldr	r3, [sp, #32]
 802af32:	f04f 0c00 	mov.w	ip, #0
 802af36:	9901      	ldr	r1, [sp, #4]
 802af38:	1a5b      	subs	r3, r3, r1
 802af3a:	4659      	mov	r1, fp
 802af3c:	9308      	str	r3, [sp, #32]
 802af3e:	9b02      	ldr	r3, [sp, #8]
 802af40:	f1c3 0320 	rsb	r3, r3, #32
 802af44:	930a      	str	r3, [sp, #40]	; 0x28
 802af46:	980a      	ldr	r0, [sp, #40]	; 0x28
 802af48:	9b02      	ldr	r3, [sp, #8]
 802af4a:	1a1b      	subs	r3, r3, r0
 802af4c:	9309      	str	r3, [sp, #36]	; 0x24
 802af4e:	f9b4 e016 	ldrsh.w	lr, [r4, #22]
 802af52:	f9b4 8014 	ldrsh.w	r8, [r4, #20]
 802af56:	e9dd 0307 	ldrd	r0, r3, [sp, #28]
 802af5a:	eb08 480e 	add.w	r8, r8, lr, lsl #16
 802af5e:	181b      	adds	r3, r3, r0
 802af60:	bf58      	it	pl
 802af62:	9801      	ldrpl	r0, [sp, #4]
 802af64:	9308      	str	r3, [sp, #32]
 802af66:	bf54      	ite	pl
 802af68:	1a1b      	subpl	r3, r3, r0
 802af6a:	9d06      	ldrmi	r5, [sp, #24]
 802af6c:	9802      	ldr	r0, [sp, #8]
 802af6e:	bf5e      	ittt	pl
 802af70:	9308      	strpl	r3, [sp, #32]
 802af72:	9b06      	ldrpl	r3, [sp, #24]
 802af74:	1c5d      	addpl	r5, r3, #1
 802af76:	44ab      	add	fp, r5
 802af78:	ea4f 136b 	mov.w	r3, fp, asr #5
 802af7c:	9304      	str	r3, [sp, #16]
 802af7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802af80:	4283      	cmp	r3, r0
 802af82:	f040 815a 	bne.w	802b23a <_ZN8touchgfx7Outline10renderLineEiiii+0x82e>
 802af86:	9b04      	ldr	r3, [sp, #16]
 802af88:	9a00      	ldr	r2, [sp, #0]
 802af8a:	eb03 4302 	add.w	r3, r3, r2, lsl #16
 802af8e:	4543      	cmp	r3, r8
 802af90:	d01a      	beq.n	802afc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5bc>
 802af92:	8b61      	ldrh	r1, [r4, #26]
 802af94:	8b23      	ldrh	r3, [r4, #24]
 802af96:	430b      	orrs	r3, r1
 802af98:	d00e      	beq.n	802afb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ac>
 802af9a:	f1be 0f00 	cmp.w	lr, #0
 802af9e:	db0b      	blt.n	802afb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ac>
 802afa0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802afa2:	4573      	cmp	r3, lr
 802afa4:	dd08      	ble.n	802afb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ac>
 802afa6:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802afaa:	4299      	cmp	r1, r3
 802afac:	f0c0 8138 	bcc.w	802b220 <_ZN8touchgfx7Outline10renderLineEiiii+0x814>
 802afb0:	f04f 0301 	mov.w	r3, #1
 802afb4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802afb8:	9b04      	ldr	r3, [sp, #16]
 802afba:	f8a4 c018 	strh.w	ip, [r4, #24]
 802afbe:	82a3      	strh	r3, [r4, #20]
 802afc0:	9b00      	ldr	r3, [sp, #0]
 802afc2:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802afc6:	82e3      	strh	r3, [r4, #22]
 802afc8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802afca:	9a00      	ldr	r2, [sp, #0]
 802afcc:	441a      	add	r2, r3
 802afce:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802afd2:	9200      	str	r2, [sp, #0]
 802afd4:	9900      	ldr	r1, [sp, #0]
 802afd6:	9a04      	ldr	r2, [sp, #16]
 802afd8:	eb02 4001 	add.w	r0, r2, r1, lsl #16
 802afdc:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802afe0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802afe4:	4288      	cmp	r0, r1
 802afe6:	d01a      	beq.n	802b01e <_ZN8touchgfx7Outline10renderLineEiiii+0x612>
 802afe8:	8b60      	ldrh	r0, [r4, #26]
 802afea:	8b21      	ldrh	r1, [r4, #24]
 802afec:	ea50 0201 	orrs.w	r2, r0, r1
 802aff0:	d00d      	beq.n	802b00e <_ZN8touchgfx7Outline10renderLineEiiii+0x602>
 802aff2:	2b00      	cmp	r3, #0
 802aff4:	db0b      	blt.n	802b00e <_ZN8touchgfx7Outline10renderLineEiiii+0x602>
 802aff6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802aff8:	4299      	cmp	r1, r3
 802affa:	dd08      	ble.n	802b00e <_ZN8touchgfx7Outline10renderLineEiiii+0x602>
 802affc:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802b000:	4299      	cmp	r1, r3
 802b002:	f0c0 81f9 	bcc.w	802b3f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ec>
 802b006:	f04f 0301 	mov.w	r3, #1
 802b00a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802b00e:	9b04      	ldr	r3, [sp, #16]
 802b010:	f8a4 c018 	strh.w	ip, [r4, #24]
 802b014:	82a3      	strh	r3, [r4, #20]
 802b016:	9b00      	ldr	r3, [sp, #0]
 802b018:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802b01c:	82e3      	strh	r3, [r4, #22]
 802b01e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802b020:	4659      	mov	r1, fp
 802b022:	9a00      	ldr	r2, [sp, #0]
 802b024:	4293      	cmp	r3, r2
 802b026:	d192      	bne.n	802af4e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 802b028:	9b02      	ldr	r3, [sp, #8]
 802b02a:	f1c3 0c20 	rsb	ip, r3, #32
 802b02e:	9b05      	ldr	r3, [sp, #20]
 802b030:	ea4f 1e63 	mov.w	lr, r3, asr #5
 802b034:	9b03      	ldr	r3, [sp, #12]
 802b036:	459c      	cmp	ip, r3
 802b038:	f040 81f8 	bne.w	802b42c <_ZN8touchgfx7Outline10renderLineEiiii+0xa20>
 802b03c:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802b040:	9a00      	ldr	r2, [sp, #0]
 802b042:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
 802b046:	eb0e 4002 	add.w	r0, lr, r2, lsl #16
 802b04a:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 802b04e:	4288      	cmp	r0, r1
 802b050:	f43f ad54 	beq.w	802aafc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 802b054:	8b60      	ldrh	r0, [r4, #26]
 802b056:	8b21      	ldrh	r1, [r4, #24]
 802b058:	ea50 0201 	orrs.w	r2, r0, r1
 802b05c:	d00c      	beq.n	802b078 <_ZN8touchgfx7Outline10renderLineEiiii+0x66c>
 802b05e:	2b00      	cmp	r3, #0
 802b060:	db0a      	blt.n	802b078 <_ZN8touchgfx7Outline10renderLineEiiii+0x66c>
 802b062:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b064:	4299      	cmp	r1, r3
 802b066:	dd07      	ble.n	802b078 <_ZN8touchgfx7Outline10renderLineEiiii+0x66c>
 802b068:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802b06c:	4299      	cmp	r1, r3
 802b06e:	f0c0 81d0 	bcc.w	802b412 <_ZN8touchgfx7Outline10renderLineEiiii+0xa06>
 802b072:	2301      	movs	r3, #1
 802b074:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802b078:	9b00      	ldr	r3, [sp, #0]
 802b07a:	f8a4 e014 	strh.w	lr, [r4, #20]
 802b07e:	82e3      	strh	r3, [r4, #22]
 802b080:	e517      	b.n	802aab2 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6>
 802b082:	2f00      	cmp	r7, #0
 802b084:	f2c0 8097 	blt.w	802b1b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x7aa>
 802b088:	2301      	movs	r3, #1
 802b08a:	f1c1 0c20 	rsb	ip, r1, #32
 802b08e:	9307      	str	r3, [sp, #28]
 802b090:	2320      	movs	r3, #32
 802b092:	fb02 f20c 	mul.w	r2, r2, ip
 802b096:	9306      	str	r3, [sp, #24]
 802b098:	9b06      	ldr	r3, [sp, #24]
 802b09a:	fb92 fcf7 	sdiv	ip, r2, r7
 802b09e:	fb07 221c 	mls	r2, r7, ip, r2
 802b0a2:	4419      	add	r1, r3
 802b0a4:	9b00      	ldr	r3, [sp, #0]
 802b0a6:	2a00      	cmp	r2, #0
 802b0a8:	bfbc      	itt	lt
 802b0aa:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 802b0ae:	19d2      	addlt	r2, r2, r7
 802b0b0:	fb0c 3101 	mla	r1, ip, r1, r3
 802b0b4:	9b07      	ldr	r3, [sp, #28]
 802b0b6:	4460      	add	r0, ip
 802b0b8:	441d      	add	r5, r3
 802b0ba:	0433      	lsls	r3, r6, #16
 802b0bc:	b200      	sxth	r0, r0
 802b0be:	930a      	str	r3, [sp, #40]	; 0x28
 802b0c0:	18eb      	adds	r3, r5, r3
 802b0c2:	b209      	sxth	r1, r1
 802b0c4:	8320      	strh	r0, [r4, #24]
 802b0c6:	454b      	cmp	r3, r9
 802b0c8:	8361      	strh	r1, [r4, #26]
 802b0ca:	d014      	beq.n	802b0f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6ea>
 802b0cc:	ea50 0301 	orrs.w	r3, r0, r1
 802b0d0:	d00c      	beq.n	802b0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 802b0d2:	f1b8 0f00 	cmp.w	r8, #0
 802b0d6:	db09      	blt.n	802b0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 802b0d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802b0da:	4543      	cmp	r3, r8
 802b0dc:	dd06      	ble.n	802b0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 802b0de:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 802b0e2:	4299      	cmp	r1, r3
 802b0e4:	d36e      	bcc.n	802b1c4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 802b0e6:	2301      	movs	r3, #1
 802b0e8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802b0ec:	2300      	movs	r3, #0
 802b0ee:	82a5      	strh	r5, [r4, #20]
 802b0f0:	82e6      	strh	r6, [r4, #22]
 802b0f2:	8323      	strh	r3, [r4, #24]
 802b0f4:	8363      	strh	r3, [r4, #26]
 802b0f6:	9904      	ldr	r1, [sp, #16]
 802b0f8:	eb0e 030c 	add.w	r3, lr, ip
 802b0fc:	42a9      	cmp	r1, r5
 802b0fe:	d04d      	beq.n	802b19c <_ZN8touchgfx7Outline10renderLineEiiii+0x790>
 802b100:	9902      	ldr	r1, [sp, #8]
 802b102:	1bd2      	subs	r2, r2, r7
 802b104:	1ac9      	subs	r1, r1, r3
 802b106:	9200      	str	r2, [sp, #0]
 802b108:	448c      	add	ip, r1
 802b10a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
 802b10e:	fb9c fef7 	sdiv	lr, ip, r7
 802b112:	fb07 cc1e 	mls	ip, r7, lr, ip
 802b116:	f1bc 0f00 	cmp.w	ip, #0
 802b11a:	bfbc      	itt	lt
 802b11c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 802b120:	44bc      	addlt	ip, r7
 802b122:	f10e 0101 	add.w	r1, lr, #1
 802b126:	910d      	str	r1, [sp, #52]	; 0x34
 802b128:	9a00      	ldr	r2, [sp, #0]
 802b12a:	8b20      	ldrh	r0, [r4, #24]
 802b12c:	eb12 020c 	adds.w	r2, r2, ip
 802b130:	8b61      	ldrh	r1, [r4, #26]
 802b132:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 802b136:	9200      	str	r2, [sp, #0]
 802b138:	bf5b      	ittet	pl
 802b13a:	1bd2      	subpl	r2, r2, r7
 802b13c:	f8dd 8034 	ldrpl.w	r8, [sp, #52]	; 0x34
 802b140:	46f0      	movmi	r8, lr
 802b142:	9200      	strpl	r2, [sp, #0]
 802b144:	9a07      	ldr	r2, [sp, #28]
 802b146:	4440      	add	r0, r8
 802b148:	eb01 1148 	add.w	r1, r1, r8, lsl #5
 802b14c:	4443      	add	r3, r8
 802b14e:	4415      	add	r5, r2
 802b150:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 802b154:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802b156:	b200      	sxth	r0, r0
 802b158:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802b15c:	442a      	add	r2, r5
 802b15e:	b209      	sxth	r1, r1
 802b160:	8320      	strh	r0, [r4, #24]
 802b162:	454a      	cmp	r2, r9
 802b164:	8361      	strh	r1, [r4, #26]
 802b166:	d016      	beq.n	802b196 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 802b168:	ea50 0201 	orrs.w	r2, r0, r1
 802b16c:	d00d      	beq.n	802b18a <_ZN8touchgfx7Outline10renderLineEiiii+0x77e>
 802b16e:	f1b8 0f00 	cmp.w	r8, #0
 802b172:	db0a      	blt.n	802b18a <_ZN8touchgfx7Outline10renderLineEiiii+0x77e>
 802b174:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b176:	4541      	cmp	r1, r8
 802b178:	dd07      	ble.n	802b18a <_ZN8touchgfx7Outline10renderLineEiiii+0x77e>
 802b17a:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802b17e:	4288      	cmp	r0, r1
 802b180:	d330      	bcc.n	802b1e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7d8>
 802b182:	f04f 0201 	mov.w	r2, #1
 802b186:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802b18a:	f04f 0200 	mov.w	r2, #0
 802b18e:	82a5      	strh	r5, [r4, #20]
 802b190:	82e6      	strh	r6, [r4, #22]
 802b192:	8322      	strh	r2, [r4, #24]
 802b194:	8362      	strh	r2, [r4, #26]
 802b196:	9904      	ldr	r1, [sp, #16]
 802b198:	42a9      	cmp	r1, r5
 802b19a:	d1c5      	bne.n	802b128 <_ZN8touchgfx7Outline10renderLineEiiii+0x71c>
 802b19c:	9a02      	ldr	r2, [sp, #8]
 802b19e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802b1a0:	1ad3      	subs	r3, r2, r3
 802b1a2:	8b22      	ldrh	r2, [r4, #24]
 802b1a4:	3120      	adds	r1, #32
 802b1a6:	441a      	add	r2, r3
 802b1a8:	8322      	strh	r2, [r4, #24]
 802b1aa:	9a06      	ldr	r2, [sp, #24]
 802b1ac:	1a89      	subs	r1, r1, r2
 802b1ae:	8b62      	ldrh	r2, [r4, #26]
 802b1b0:	fb03 2301 	mla	r3, r3, r1, r2
 802b1b4:	e64e      	b.n	802ae54 <_ZN8touchgfx7Outline10renderLineEiiii+0x448>
 802b1b6:	f04f 33ff 	mov.w	r3, #4294967295
 802b1ba:	434a      	muls	r2, r1
 802b1bc:	427f      	negs	r7, r7
 802b1be:	9307      	str	r3, [sp, #28]
 802b1c0:	2300      	movs	r3, #0
 802b1c2:	e768      	b.n	802b096 <_ZN8touchgfx7Outline10renderLineEiiii+0x68a>
 802b1c4:	f104 0314 	add.w	r3, r4, #20
 802b1c8:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802b1cc:	cb03      	ldmia	r3!, {r0, r1}
 802b1ce:	f8c8 0000 	str.w	r0, [r8]
 802b1d2:	f8c8 1004 	str.w	r1, [r8, #4]
 802b1d6:	6923      	ldr	r3, [r4, #16]
 802b1d8:	3308      	adds	r3, #8
 802b1da:	6123      	str	r3, [r4, #16]
 802b1dc:	68a3      	ldr	r3, [r4, #8]
 802b1de:	3301      	adds	r3, #1
 802b1e0:	60a3      	str	r3, [r4, #8]
 802b1e2:	e783      	b.n	802b0ec <_ZN8touchgfx7Outline10renderLineEiiii+0x6e0>
 802b1e4:	f104 0814 	add.w	r8, r4, #20
 802b1e8:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802b1ec:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802b1f0:	f8c9 0000 	str.w	r0, [r9]
 802b1f4:	f8c9 1004 	str.w	r1, [r9, #4]
 802b1f8:	6921      	ldr	r1, [r4, #16]
 802b1fa:	3108      	adds	r1, #8
 802b1fc:	6121      	str	r1, [r4, #16]
 802b1fe:	68a1      	ldr	r1, [r4, #8]
 802b200:	3101      	adds	r1, #1
 802b202:	60a1      	str	r1, [r4, #8]
 802b204:	e7c1      	b.n	802b18a <_ZN8touchgfx7Outline10renderLineEiiii+0x77e>
 802b206:	f104 0314 	add.w	r3, r4, #20
 802b20a:	6925      	ldr	r5, [r4, #16]
 802b20c:	cb03      	ldmia	r3!, {r0, r1}
 802b20e:	6028      	str	r0, [r5, #0]
 802b210:	6069      	str	r1, [r5, #4]
 802b212:	6923      	ldr	r3, [r4, #16]
 802b214:	3308      	adds	r3, #8
 802b216:	6123      	str	r3, [r4, #16]
 802b218:	68a3      	ldr	r3, [r4, #8]
 802b21a:	3301      	adds	r3, #1
 802b21c:	60a3      	str	r3, [r4, #8]
 802b21e:	e66a      	b.n	802aef6 <_ZN8touchgfx7Outline10renderLineEiiii+0x4ea>
 802b220:	f104 0314 	add.w	r3, r4, #20
 802b224:	6925      	ldr	r5, [r4, #16]
 802b226:	cb03      	ldmia	r3!, {r0, r1}
 802b228:	6028      	str	r0, [r5, #0]
 802b22a:	6069      	str	r1, [r5, #4]
 802b22c:	6923      	ldr	r3, [r4, #16]
 802b22e:	3308      	adds	r3, #8
 802b230:	6123      	str	r3, [r4, #16]
 802b232:	68a3      	ldr	r3, [r4, #8]
 802b234:	3301      	adds	r3, #1
 802b236:	60a3      	str	r3, [r4, #8]
 802b238:	e6be      	b.n	802afb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ac>
 802b23a:	f00b 031f 	and.w	r3, fp, #31
 802b23e:	114f      	asrs	r7, r1, #5
 802b240:	8b20      	ldrh	r0, [r4, #24]
 802b242:	f001 011f 	and.w	r1, r1, #31
 802b246:	930f      	str	r3, [sp, #60]	; 0x3c
 802b248:	9b04      	ldr	r3, [sp, #16]
 802b24a:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 802b24e:	429f      	cmp	r7, r3
 802b250:	d10a      	bne.n	802b268 <_ZN8touchgfx7Outline10renderLineEiiii+0x85c>
 802b252:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b254:	4418      	add	r0, r3
 802b256:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802b258:	4419      	add	r1, r3
 802b25a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b25c:	8320      	strh	r0, [r4, #24]
 802b25e:	fb03 9901 	mla	r9, r3, r1, r9
 802b262:	f8a4 901a 	strh.w	r9, [r4, #26]
 802b266:	e6af      	b.n	802afc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5bc>
 802b268:	2d00      	cmp	r5, #0
 802b26a:	f2c0 809b 	blt.w	802b3a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x998>
 802b26e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 802b270:	f1c1 0320 	rsb	r3, r1, #32
 802b274:	4373      	muls	r3, r6
 802b276:	2601      	movs	r6, #1
 802b278:	960e      	str	r6, [sp, #56]	; 0x38
 802b27a:	2620      	movs	r6, #32
 802b27c:	960d      	str	r6, [sp, #52]	; 0x34
 802b27e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802b280:	fb93 f6f5 	sdiv	r6, r3, r5
 802b284:	4411      	add	r1, r2
 802b286:	fb05 3316 	mls	r3, r5, r6, r3
 802b28a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b28c:	2b00      	cmp	r3, #0
 802b28e:	4417      	add	r7, r2
 802b290:	9a00      	ldr	r2, [sp, #0]
 802b292:	bfbc      	itt	lt
 802b294:	f106 36ff 	addlt.w	r6, r6, #4294967295
 802b298:	195b      	addlt	r3, r3, r5
 802b29a:	0412      	lsls	r2, r2, #16
 802b29c:	fb06 9101 	mla	r1, r6, r1, r9
 802b2a0:	4430      	add	r0, r6
 802b2a2:	eb07 0902 	add.w	r9, r7, r2
 802b2a6:	9210      	str	r2, [sp, #64]	; 0x40
 802b2a8:	b200      	sxth	r0, r0
 802b2aa:	b209      	sxth	r1, r1
 802b2ac:	45c1      	cmp	r9, r8
 802b2ae:	8320      	strh	r0, [r4, #24]
 802b2b0:	8361      	strh	r1, [r4, #26]
 802b2b2:	d017      	beq.n	802b2e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8d8>
 802b2b4:	ea50 0201 	orrs.w	r2, r0, r1
 802b2b8:	d00d      	beq.n	802b2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ca>
 802b2ba:	f1be 0f00 	cmp.w	lr, #0
 802b2be:	db0a      	blt.n	802b2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ca>
 802b2c0:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b2c2:	4571      	cmp	r1, lr
 802b2c4:	dd07      	ble.n	802b2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ca>
 802b2c6:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802b2ca:	4288      	cmp	r0, r1
 802b2cc:	d372      	bcc.n	802b3b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x9a8>
 802b2ce:	f04f 0201 	mov.w	r2, #1
 802b2d2:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802b2d6:	9a00      	ldr	r2, [sp, #0]
 802b2d8:	82a7      	strh	r7, [r4, #20]
 802b2da:	82e2      	strh	r2, [r4, #22]
 802b2dc:	f8a4 c018 	strh.w	ip, [r4, #24]
 802b2e0:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802b2e4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802b2e6:	eb02 0e06 	add.w	lr, r2, r6
 802b2ea:	9a04      	ldr	r2, [sp, #16]
 802b2ec:	42ba      	cmp	r2, r7
 802b2ee:	d049      	beq.n	802b384 <_ZN8touchgfx7Outline10renderLineEiiii+0x978>
 802b2f0:	9a02      	ldr	r2, [sp, #8]
 802b2f2:	1b5b      	subs	r3, r3, r5
 802b2f4:	eba2 010e 	sub.w	r1, r2, lr
 802b2f8:	440e      	add	r6, r1
 802b2fa:	0176      	lsls	r6, r6, #5
 802b2fc:	fb96 f8f5 	sdiv	r8, r6, r5
 802b300:	fb05 6618 	mls	r6, r5, r8, r6
 802b304:	2e00      	cmp	r6, #0
 802b306:	bfbc      	itt	lt
 802b308:	f108 38ff 	addlt.w	r8, r8, #4294967295
 802b30c:	1976      	addlt	r6, r6, r5
 802b30e:	f108 0201 	add.w	r2, r8, #1
 802b312:	9211      	str	r2, [sp, #68]	; 0x44
 802b314:	199b      	adds	r3, r3, r6
 802b316:	8b20      	ldrh	r0, [r4, #24]
 802b318:	8b61      	ldrh	r1, [r4, #26]
 802b31a:	bf54      	ite	pl
 802b31c:	f8dd 9044 	ldrpl.w	r9, [sp, #68]	; 0x44
 802b320:	46c1      	movmi	r9, r8
 802b322:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802b324:	bf58      	it	pl
 802b326:	1b5b      	subpl	r3, r3, r5
 802b328:	4448      	add	r0, r9
 802b32a:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 802b32e:	4417      	add	r7, r2
 802b330:	44ce      	add	lr, r9
 802b332:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802b334:	b200      	sxth	r0, r0
 802b336:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 802b33a:	b209      	sxth	r1, r1
 802b33c:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 802b340:	443a      	add	r2, r7
 802b342:	8320      	strh	r0, [r4, #24]
 802b344:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 802b348:	8361      	strh	r1, [r4, #26]
 802b34a:	4552      	cmp	r2, sl
 802b34c:	d017      	beq.n	802b37e <_ZN8touchgfx7Outline10renderLineEiiii+0x972>
 802b34e:	ea50 0201 	orrs.w	r2, r0, r1
 802b352:	d00d      	beq.n	802b370 <_ZN8touchgfx7Outline10renderLineEiiii+0x964>
 802b354:	f1b9 0f00 	cmp.w	r9, #0
 802b358:	db0a      	blt.n	802b370 <_ZN8touchgfx7Outline10renderLineEiiii+0x964>
 802b35a:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b35c:	4549      	cmp	r1, r9
 802b35e:	dd07      	ble.n	802b370 <_ZN8touchgfx7Outline10renderLineEiiii+0x964>
 802b360:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802b364:	4288      	cmp	r0, r1
 802b366:	d336      	bcc.n	802b3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x9ca>
 802b368:	f04f 0201 	mov.w	r2, #1
 802b36c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802b370:	9a00      	ldr	r2, [sp, #0]
 802b372:	82a7      	strh	r7, [r4, #20]
 802b374:	82e2      	strh	r2, [r4, #22]
 802b376:	f8a4 c018 	strh.w	ip, [r4, #24]
 802b37a:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802b37e:	9a04      	ldr	r2, [sp, #16]
 802b380:	42ba      	cmp	r2, r7
 802b382:	d1c7      	bne.n	802b314 <_ZN8touchgfx7Outline10renderLineEiiii+0x908>
 802b384:	9b02      	ldr	r3, [sp, #8]
 802b386:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802b388:	eba3 0e0e 	sub.w	lr, r3, lr
 802b38c:	8b23      	ldrh	r3, [r4, #24]
 802b38e:	3120      	adds	r1, #32
 802b390:	4473      	add	r3, lr
 802b392:	8323      	strh	r3, [r4, #24]
 802b394:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802b396:	1ac9      	subs	r1, r1, r3
 802b398:	8b63      	ldrh	r3, [r4, #26]
 802b39a:	fb0e 3e01 	mla	lr, lr, r1, r3
 802b39e:	f8a4 e01a 	strh.w	lr, [r4, #26]
 802b3a2:	e611      	b.n	802afc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x5bc>
 802b3a4:	f04f 36ff 	mov.w	r6, #4294967295
 802b3a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802b3aa:	426d      	negs	r5, r5
 802b3ac:	960e      	str	r6, [sp, #56]	; 0x38
 802b3ae:	2600      	movs	r6, #0
 802b3b0:	434b      	muls	r3, r1
 802b3b2:	e763      	b.n	802b27c <_ZN8touchgfx7Outline10renderLineEiiii+0x870>
 802b3b4:	f104 0e14 	add.w	lr, r4, #20
 802b3b8:	f8d4 8010 	ldr.w	r8, [r4, #16]
 802b3bc:	e8be 0003 	ldmia.w	lr!, {r0, r1}
 802b3c0:	f8c8 0000 	str.w	r0, [r8]
 802b3c4:	f8c8 1004 	str.w	r1, [r8, #4]
 802b3c8:	6921      	ldr	r1, [r4, #16]
 802b3ca:	3108      	adds	r1, #8
 802b3cc:	6121      	str	r1, [r4, #16]
 802b3ce:	68a1      	ldr	r1, [r4, #8]
 802b3d0:	3101      	adds	r1, #1
 802b3d2:	60a1      	str	r1, [r4, #8]
 802b3d4:	e77f      	b.n	802b2d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ca>
 802b3d6:	f104 0914 	add.w	r9, r4, #20
 802b3da:	f8d4 a010 	ldr.w	sl, [r4, #16]
 802b3de:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 802b3e2:	f8ca 0000 	str.w	r0, [sl]
 802b3e6:	f8ca 1004 	str.w	r1, [sl, #4]
 802b3ea:	6921      	ldr	r1, [r4, #16]
 802b3ec:	3108      	adds	r1, #8
 802b3ee:	6121      	str	r1, [r4, #16]
 802b3f0:	68a1      	ldr	r1, [r4, #8]
 802b3f2:	3101      	adds	r1, #1
 802b3f4:	60a1      	str	r1, [r4, #8]
 802b3f6:	e7bb      	b.n	802b370 <_ZN8touchgfx7Outline10renderLineEiiii+0x964>
 802b3f8:	f104 0314 	add.w	r3, r4, #20
 802b3fc:	6925      	ldr	r5, [r4, #16]
 802b3fe:	cb03      	ldmia	r3!, {r0, r1}
 802b400:	6028      	str	r0, [r5, #0]
 802b402:	6069      	str	r1, [r5, #4]
 802b404:	6923      	ldr	r3, [r4, #16]
 802b406:	3308      	adds	r3, #8
 802b408:	6123      	str	r3, [r4, #16]
 802b40a:	68a3      	ldr	r3, [r4, #8]
 802b40c:	3301      	adds	r3, #1
 802b40e:	60a3      	str	r3, [r4, #8]
 802b410:	e5fd      	b.n	802b00e <_ZN8touchgfx7Outline10renderLineEiiii+0x602>
 802b412:	f104 0314 	add.w	r3, r4, #20
 802b416:	6925      	ldr	r5, [r4, #16]
 802b418:	cb03      	ldmia	r3!, {r0, r1}
 802b41a:	6028      	str	r0, [r5, #0]
 802b41c:	6069      	str	r1, [r5, #4]
 802b41e:	6923      	ldr	r3, [r4, #16]
 802b420:	3308      	adds	r3, #8
 802b422:	6123      	str	r3, [r4, #16]
 802b424:	68a3      	ldr	r3, [r4, #8]
 802b426:	3301      	adds	r3, #1
 802b428:	60a3      	str	r3, [r4, #8]
 802b42a:	e625      	b.n	802b078 <_ZN8touchgfx7Outline10renderLineEiiii+0x66c>
 802b42c:	9b05      	ldr	r3, [sp, #20]
 802b42e:	ea4f 176b 	mov.w	r7, fp, asr #5
 802b432:	f00b 081f 	and.w	r8, fp, #31
 802b436:	8b20      	ldrh	r0, [r4, #24]
 802b438:	f003 031f 	and.w	r3, r3, #31
 802b43c:	4577      	cmp	r7, lr
 802b43e:	f8b4 901a 	ldrh.w	r9, [r4, #26]
 802b442:	9302      	str	r3, [sp, #8]
 802b444:	9b03      	ldr	r3, [sp, #12]
 802b446:	eba3 050c 	sub.w	r5, r3, ip
 802b44a:	d108      	bne.n	802b45e <_ZN8touchgfx7Outline10renderLineEiiii+0xa52>
 802b44c:	9b02      	ldr	r3, [sp, #8]
 802b44e:	4428      	add	r0, r5
 802b450:	4498      	add	r8, r3
 802b452:	8320      	strh	r0, [r4, #24]
 802b454:	fb05 9508 	mla	r5, r5, r8, r9
 802b458:	8365      	strh	r5, [r4, #26]
 802b45a:	f7ff bb4f 	b.w	802aafc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 802b45e:	9b05      	ldr	r3, [sp, #20]
 802b460:	ebb3 030b 	subs.w	r3, r3, fp
 802b464:	f100 809c 	bmi.w	802b5a0 <_ZN8touchgfx7Outline10renderLineEiiii+0xb94>
 802b468:	f1c8 0120 	rsb	r1, r8, #32
 802b46c:	2201      	movs	r2, #1
 802b46e:	f04f 0b20 	mov.w	fp, #32
 802b472:	434d      	muls	r5, r1
 802b474:	9201      	str	r2, [sp, #4]
 802b476:	9a01      	ldr	r2, [sp, #4]
 802b478:	44d8      	add	r8, fp
 802b47a:	fb95 f6f3 	sdiv	r6, r5, r3
 802b47e:	fb03 5516 	mls	r5, r3, r6, r5
 802b482:	4417      	add	r7, r2
 802b484:	9a00      	ldr	r2, [sp, #0]
 802b486:	2d00      	cmp	r5, #0
 802b488:	ea4f 4202 	mov.w	r2, r2, lsl #16
 802b48c:	bfbc      	itt	lt
 802b48e:	f106 36ff 	addlt.w	r6, r6, #4294967295
 802b492:	18ed      	addlt	r5, r5, r3
 802b494:	eb07 0a02 	add.w	sl, r7, r2
 802b498:	9204      	str	r2, [sp, #16]
 802b49a:	fb06 9808 	mla	r8, r6, r8, r9
 802b49e:	f9b4 9014 	ldrsh.w	r9, [r4, #20]
 802b4a2:	4430      	add	r0, r6
 802b4a4:	fa0f f188 	sxth.w	r1, r8
 802b4a8:	f9b4 8016 	ldrsh.w	r8, [r4, #22]
 802b4ac:	b200      	sxth	r0, r0
 802b4ae:	eb09 4908 	add.w	r9, r9, r8, lsl #16
 802b4b2:	8361      	strh	r1, [r4, #26]
 802b4b4:	8320      	strh	r0, [r4, #24]
 802b4b6:	45ca      	cmp	sl, r9
 802b4b8:	d015      	beq.n	802b4e6 <_ZN8touchgfx7Outline10renderLineEiiii+0xada>
 802b4ba:	ea50 0201 	orrs.w	r2, r0, r1
 802b4be:	d00c      	beq.n	802b4da <_ZN8touchgfx7Outline10renderLineEiiii+0xace>
 802b4c0:	f1b8 0f00 	cmp.w	r8, #0
 802b4c4:	db09      	blt.n	802b4da <_ZN8touchgfx7Outline10renderLineEiiii+0xace>
 802b4c6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b4c8:	4541      	cmp	r1, r8
 802b4ca:	dd06      	ble.n	802b4da <_ZN8touchgfx7Outline10renderLineEiiii+0xace>
 802b4cc:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802b4d0:	4288      	cmp	r0, r1
 802b4d2:	d36e      	bcc.n	802b5b2 <_ZN8touchgfx7Outline10renderLineEiiii+0xba6>
 802b4d4:	2101      	movs	r1, #1
 802b4d6:	f884 1044 	strb.w	r1, [r4, #68]	; 0x44
 802b4da:	2100      	movs	r1, #0
 802b4dc:	9a00      	ldr	r2, [sp, #0]
 802b4de:	82a7      	strh	r7, [r4, #20]
 802b4e0:	82e2      	strh	r2, [r4, #22]
 802b4e2:	8321      	strh	r1, [r4, #24]
 802b4e4:	8361      	strh	r1, [r4, #26]
 802b4e6:	45be      	cmp	lr, r7
 802b4e8:	44b4      	add	ip, r6
 802b4ea:	d048      	beq.n	802b57e <_ZN8touchgfx7Outline10renderLineEiiii+0xb72>
 802b4ec:	9a03      	ldr	r2, [sp, #12]
 802b4ee:	1aed      	subs	r5, r5, r3
 802b4f0:	eba2 010c 	sub.w	r1, r2, ip
 802b4f4:	440e      	add	r6, r1
 802b4f6:	0176      	lsls	r6, r6, #5
 802b4f8:	fb96 f8f3 	sdiv	r8, r6, r3
 802b4fc:	fb03 6618 	mls	r6, r3, r8, r6
 802b500:	2e00      	cmp	r6, #0
 802b502:	bfbc      	itt	lt
 802b504:	f108 38ff 	addlt.w	r8, r8, #4294967295
 802b508:	18f6      	addlt	r6, r6, r3
 802b50a:	f108 0201 	add.w	r2, r8, #1
 802b50e:	9205      	str	r2, [sp, #20]
 802b510:	19ad      	adds	r5, r5, r6
 802b512:	8b20      	ldrh	r0, [r4, #24]
 802b514:	8b61      	ldrh	r1, [r4, #26]
 802b516:	bf54      	ite	pl
 802b518:	f8dd 9014 	ldrpl.w	r9, [sp, #20]
 802b51c:	46c1      	movmi	r9, r8
 802b51e:	9a01      	ldr	r2, [sp, #4]
 802b520:	bf58      	it	pl
 802b522:	1aed      	subpl	r5, r5, r3
 802b524:	4448      	add	r0, r9
 802b526:	eb01 1149 	add.w	r1, r1, r9, lsl #5
 802b52a:	4417      	add	r7, r2
 802b52c:	44cc      	add	ip, r9
 802b52e:	9a04      	ldr	r2, [sp, #16]
 802b530:	b200      	sxth	r0, r0
 802b532:	f9b4 9016 	ldrsh.w	r9, [r4, #22]
 802b536:	b209      	sxth	r1, r1
 802b538:	f9b4 a014 	ldrsh.w	sl, [r4, #20]
 802b53c:	443a      	add	r2, r7
 802b53e:	8320      	strh	r0, [r4, #24]
 802b540:	eb0a 4a09 	add.w	sl, sl, r9, lsl #16
 802b544:	8361      	strh	r1, [r4, #26]
 802b546:	4552      	cmp	r2, sl
 802b548:	d017      	beq.n	802b57a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6e>
 802b54a:	ea50 0201 	orrs.w	r2, r0, r1
 802b54e:	d00d      	beq.n	802b56c <_ZN8touchgfx7Outline10renderLineEiiii+0xb60>
 802b550:	f1b9 0f00 	cmp.w	r9, #0
 802b554:	db0a      	blt.n	802b56c <_ZN8touchgfx7Outline10renderLineEiiii+0xb60>
 802b556:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802b558:	4549      	cmp	r1, r9
 802b55a:	dd07      	ble.n	802b56c <_ZN8touchgfx7Outline10renderLineEiiii+0xb60>
 802b55c:	e9d4 1001 	ldrd	r1, r0, [r4, #4]
 802b560:	4288      	cmp	r0, r1
 802b562:	d337      	bcc.n	802b5d4 <_ZN8touchgfx7Outline10renderLineEiiii+0xbc8>
 802b564:	f04f 0201 	mov.w	r2, #1
 802b568:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 802b56c:	9a00      	ldr	r2, [sp, #0]
 802b56e:	82a7      	strh	r7, [r4, #20]
 802b570:	82e2      	strh	r2, [r4, #22]
 802b572:	f04f 0200 	mov.w	r2, #0
 802b576:	8322      	strh	r2, [r4, #24]
 802b578:	8362      	strh	r2, [r4, #26]
 802b57a:	45be      	cmp	lr, r7
 802b57c:	d1c8      	bne.n	802b510 <_ZN8touchgfx7Outline10renderLineEiiii+0xb04>
 802b57e:	9b03      	ldr	r3, [sp, #12]
 802b580:	8b62      	ldrh	r2, [r4, #26]
 802b582:	eba3 0c0c 	sub.w	ip, r3, ip
 802b586:	8b23      	ldrh	r3, [r4, #24]
 802b588:	4463      	add	r3, ip
 802b58a:	8323      	strh	r3, [r4, #24]
 802b58c:	9b02      	ldr	r3, [sp, #8]
 802b58e:	3320      	adds	r3, #32
 802b590:	eba3 030b 	sub.w	r3, r3, fp
 802b594:	fb0c 2c03 	mla	ip, ip, r3, r2
 802b598:	f8a4 c01a 	strh.w	ip, [r4, #26]
 802b59c:	f7ff baae 	b.w	802aafc <_ZN8touchgfx7Outline10renderLineEiiii+0xf0>
 802b5a0:	f04f 32ff 	mov.w	r2, #4294967295
 802b5a4:	fb05 f508 	mul.w	r5, r5, r8
 802b5a8:	425b      	negs	r3, r3
 802b5aa:	f04f 0b00 	mov.w	fp, #0
 802b5ae:	9201      	str	r2, [sp, #4]
 802b5b0:	e761      	b.n	802b476 <_ZN8touchgfx7Outline10renderLineEiiii+0xa6a>
 802b5b2:	f104 0814 	add.w	r8, r4, #20
 802b5b6:	f8d4 9010 	ldr.w	r9, [r4, #16]
 802b5ba:	e8b8 0003 	ldmia.w	r8!, {r0, r1}
 802b5be:	f8c9 0000 	str.w	r0, [r9]
 802b5c2:	f8c9 1004 	str.w	r1, [r9, #4]
 802b5c6:	6921      	ldr	r1, [r4, #16]
 802b5c8:	3108      	adds	r1, #8
 802b5ca:	6121      	str	r1, [r4, #16]
 802b5cc:	68a1      	ldr	r1, [r4, #8]
 802b5ce:	3101      	adds	r1, #1
 802b5d0:	60a1      	str	r1, [r4, #8]
 802b5d2:	e782      	b.n	802b4da <_ZN8touchgfx7Outline10renderLineEiiii+0xace>
 802b5d4:	f104 0914 	add.w	r9, r4, #20
 802b5d8:	f8d4 a010 	ldr.w	sl, [r4, #16]
 802b5dc:	e8b9 0003 	ldmia.w	r9!, {r0, r1}
 802b5e0:	f8ca 0000 	str.w	r0, [sl]
 802b5e4:	f8ca 1004 	str.w	r1, [sl, #4]
 802b5e8:	6921      	ldr	r1, [r4, #16]
 802b5ea:	3108      	adds	r1, #8
 802b5ec:	6121      	str	r1, [r4, #16]
 802b5ee:	68a1      	ldr	r1, [r4, #8]
 802b5f0:	3101      	adds	r1, #1
 802b5f2:	60a1      	str	r1, [r4, #8]
 802b5f4:	e7ba      	b.n	802b56c <_ZN8touchgfx7Outline10renderLineEiiii+0xb60>

0802b5f6 <_ZN8touchgfx7Outline6lineToEii>:
 802b5f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802b5f8:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 802b5fa:	4604      	mov	r4, r0
 802b5fc:	460d      	mov	r5, r1
 802b5fe:	4616      	mov	r6, r2
 802b600:	079b      	lsls	r3, r3, #30
 802b602:	d526      	bpl.n	802b652 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 802b604:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 802b608:	ea85 0001 	eor.w	r0, r5, r1
 802b60c:	ea86 0302 	eor.w	r3, r6, r2
 802b610:	4303      	orrs	r3, r0
 802b612:	d01e      	beq.n	802b652 <_ZN8touchgfx7Outline6lineToEii+0x5c>
 802b614:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 802b616:	114b      	asrs	r3, r1, #5
 802b618:	9600      	str	r6, [sp, #0]
 802b61a:	4283      	cmp	r3, r0
 802b61c:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802b61e:	bfb8      	it	lt
 802b620:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 802b622:	3301      	adds	r3, #1
 802b624:	4283      	cmp	r3, r0
 802b626:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 802b628:	bfc8      	it	gt
 802b62a:	6363      	strgt	r3, [r4, #52]	; 0x34
 802b62c:	116b      	asrs	r3, r5, #5
 802b62e:	4283      	cmp	r3, r0
 802b630:	6b60      	ldr	r0, [r4, #52]	; 0x34
 802b632:	bfb8      	it	lt
 802b634:	62e3      	strlt	r3, [r4, #44]	; 0x2c
 802b636:	3301      	adds	r3, #1
 802b638:	4283      	cmp	r3, r0
 802b63a:	4620      	mov	r0, r4
 802b63c:	bfc8      	it	gt
 802b63e:	6363      	strgt	r3, [r4, #52]	; 0x34
 802b640:	462b      	mov	r3, r5
 802b642:	f7ff f9e3 	bl	802aa0c <_ZN8touchgfx7Outline10renderLineEiiii>
 802b646:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b648:	f043 0301 	orr.w	r3, r3, #1
 802b64c:	e9c4 5607 	strd	r5, r6, [r4, #28]
 802b650:	63e3      	str	r3, [r4, #60]	; 0x3c
 802b652:	b002      	add	sp, #8
 802b654:	bd70      	pop	{r4, r5, r6, pc}

0802b656 <_ZN8touchgfx7Outline6moveToEii>:
 802b656:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802b658:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 802b65a:	4615      	mov	r5, r2
 802b65c:	4604      	mov	r4, r0
 802b65e:	460e      	mov	r6, r1
 802b660:	079a      	lsls	r2, r3, #30
 802b662:	d401      	bmi.n	802b668 <_ZN8touchgfx7Outline6moveToEii+0x12>
 802b664:	f7ff f98c 	bl	802a980 <_ZN8touchgfx7Outline5resetEv>
 802b668:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b66a:	07db      	lsls	r3, r3, #31
 802b66c:	d504      	bpl.n	802b678 <_ZN8touchgfx7Outline6moveToEii+0x22>
 802b66e:	4620      	mov	r0, r4
 802b670:	e9d4 1209 	ldrd	r1, r2, [r4, #36]	; 0x24
 802b674:	f7ff ffbf 	bl	802b5f6 <_ZN8touchgfx7Outline6lineToEii>
 802b678:	ea4f 1c66 	mov.w	ip, r6, asr #5
 802b67c:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802b680:	116f      	asrs	r7, r5, #5
 802b682:	f9b4 2014 	ldrsh.w	r2, [r4, #20]
 802b686:	eb0c 4107 	add.w	r1, ip, r7, lsl #16
 802b68a:	eb02 4203 	add.w	r2, r2, r3, lsl #16
 802b68e:	4291      	cmp	r1, r2
 802b690:	d015      	beq.n	802b6be <_ZN8touchgfx7Outline6moveToEii+0x68>
 802b692:	8b61      	ldrh	r1, [r4, #26]
 802b694:	8b22      	ldrh	r2, [r4, #24]
 802b696:	430a      	orrs	r2, r1
 802b698:	d00b      	beq.n	802b6b2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 802b69a:	2b00      	cmp	r3, #0
 802b69c:	db09      	blt.n	802b6b2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 802b69e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 802b6a0:	429a      	cmp	r2, r3
 802b6a2:	dd06      	ble.n	802b6b2 <_ZN8touchgfx7Outline6moveToEii+0x5c>
 802b6a4:	e9d4 3201 	ldrd	r3, r2, [r4, #4]
 802b6a8:	429a      	cmp	r2, r3
 802b6aa:	d30d      	bcc.n	802b6c8 <_ZN8touchgfx7Outline6moveToEii+0x72>
 802b6ac:	2301      	movs	r3, #1
 802b6ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802b6b2:	2300      	movs	r3, #0
 802b6b4:	f8a4 c014 	strh.w	ip, [r4, #20]
 802b6b8:	82e7      	strh	r7, [r4, #22]
 802b6ba:	8323      	strh	r3, [r4, #24]
 802b6bc:	8363      	strh	r3, [r4, #26]
 802b6be:	61e6      	str	r6, [r4, #28]
 802b6c0:	62a5      	str	r5, [r4, #40]	; 0x28
 802b6c2:	e9c4 5608 	strd	r5, r6, [r4, #32]
 802b6c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802b6c8:	f104 0314 	add.w	r3, r4, #20
 802b6cc:	6922      	ldr	r2, [r4, #16]
 802b6ce:	cb03      	ldmia	r3!, {r0, r1}
 802b6d0:	6010      	str	r0, [r2, #0]
 802b6d2:	6051      	str	r1, [r2, #4]
 802b6d4:	6923      	ldr	r3, [r4, #16]
 802b6d6:	3308      	adds	r3, #8
 802b6d8:	6123      	str	r3, [r4, #16]
 802b6da:	68a3      	ldr	r3, [r4, #8]
 802b6dc:	3301      	adds	r3, #1
 802b6de:	60a3      	str	r3, [r4, #8]
 802b6e0:	e7e7      	b.n	802b6b2 <_ZN8touchgfx7Outline6moveToEii+0x5c>

0802b6e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 802b6e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b6e6:	b0d1      	sub	sp, #324	; 0x144
 802b6e8:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 802b6ec:	466c      	mov	r4, sp
 802b6ee:	1a0d      	subs	r5, r1, r0
 802b6f0:	f100 0208 	add.w	r2, r0, #8
 802b6f4:	2d48      	cmp	r5, #72	; 0x48
 802b6f6:	f340 80ba 	ble.w	802b86e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 802b6fa:	112d      	asrs	r5, r5, #4
 802b6fc:	f9b0 e002 	ldrsh.w	lr, [r0, #2]
 802b700:	f9b0 c004 	ldrsh.w	ip, [r0, #4]
 802b704:	eb00 03c5 	add.w	r3, r0, r5, lsl #3
 802b708:	f9b0 7006 	ldrsh.w	r7, [r0, #6]
 802b70c:	f9b0 8000 	ldrsh.w	r8, [r0]
 802b710:	681e      	ldr	r6, [r3, #0]
 802b712:	6006      	str	r6, [r0, #0]
 802b714:	685e      	ldr	r6, [r3, #4]
 802b716:	6046      	str	r6, [r0, #4]
 802b718:	f820 8035 	strh.w	r8, [r0, r5, lsl #3]
 802b71c:	f8a3 c004 	strh.w	ip, [r3, #4]
 802b720:	f8a3 e002 	strh.w	lr, [r3, #2]
 802b724:	80df      	strh	r7, [r3, #6]
 802b726:	f1a1 0308 	sub.w	r3, r1, #8
 802b72a:	f9b0 7008 	ldrsh.w	r7, [r0, #8]
 802b72e:	f9b0 600a 	ldrsh.w	r6, [r0, #10]
 802b732:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 802b736:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 802b73a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 802b73e:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 802b742:	45ac      	cmp	ip, r5
 802b744:	dd0f      	ble.n	802b766 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x84>
 802b746:	681d      	ldr	r5, [r3, #0]
 802b748:	f9b0 e00c 	ldrsh.w	lr, [r0, #12]
 802b74c:	f9b0 c00e 	ldrsh.w	ip, [r0, #14]
 802b750:	6015      	str	r5, [r2, #0]
 802b752:	685d      	ldr	r5, [r3, #4]
 802b754:	6055      	str	r5, [r2, #4]
 802b756:	f821 7c08 	strh.w	r7, [r1, #-8]
 802b75a:	f821 6c06 	strh.w	r6, [r1, #-6]
 802b75e:	f821 ec04 	strh.w	lr, [r1, #-4]
 802b762:	f821 cc02 	strh.w	ip, [r1, #-2]
 802b766:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 802b76a:	f9b0 7000 	ldrsh.w	r7, [r0]
 802b76e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 802b772:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 802b776:	eb05 450c 	add.w	r5, r5, ip, lsl #16
 802b77a:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 802b77e:	4565      	cmp	r5, ip
 802b780:	dd0d      	ble.n	802b79e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xbc>
 802b782:	6815      	ldr	r5, [r2, #0]
 802b784:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 802b788:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 802b78c:	6005      	str	r5, [r0, #0]
 802b78e:	6855      	ldr	r5, [r2, #4]
 802b790:	8107      	strh	r7, [r0, #8]
 802b792:	6045      	str	r5, [r0, #4]
 802b794:	8146      	strh	r6, [r0, #10]
 802b796:	f8a0 e00c 	strh.w	lr, [r0, #12]
 802b79a:	f8a0 c00e 	strh.w	ip, [r0, #14]
 802b79e:	f9b0 7000 	ldrsh.w	r7, [r0]
 802b7a2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 802b7a6:	f931 ec06 	ldrsh.w	lr, [r1, #-6]
 802b7aa:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 802b7ae:	eb07 4c06 	add.w	ip, r7, r6, lsl #16
 802b7b2:	eb05 450e 	add.w	r5, r5, lr, lsl #16
 802b7b6:	45ac      	cmp	ip, r5
 802b7b8:	dd0f      	ble.n	802b7da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 802b7ba:	681d      	ldr	r5, [r3, #0]
 802b7bc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 802b7c0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 802b7c4:	6005      	str	r5, [r0, #0]
 802b7c6:	685d      	ldr	r5, [r3, #4]
 802b7c8:	6045      	str	r5, [r0, #4]
 802b7ca:	f821 7c08 	strh.w	r7, [r1, #-8]
 802b7ce:	f821 6c06 	strh.w	r6, [r1, #-6]
 802b7d2:	f821 ec04 	strh.w	lr, [r1, #-4]
 802b7d6:	f821 cc02 	strh.w	ip, [r1, #-2]
 802b7da:	f9b2 9008 	ldrsh.w	r9, [r2, #8]
 802b7de:	f102 0508 	add.w	r5, r2, #8
 802b7e2:	f9b2 800a 	ldrsh.w	r8, [r2, #10]
 802b7e6:	f9b0 e000 	ldrsh.w	lr, [r0]
 802b7ea:	462f      	mov	r7, r5
 802b7ec:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 802b7f0:	eb09 4608 	add.w	r6, r9, r8, lsl #16
 802b7f4:	eb0e 4a0c 	add.w	sl, lr, ip, lsl #16
 802b7f8:	45b2      	cmp	sl, r6
 802b7fa:	dc18      	bgt.n	802b82e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x14c>
 802b7fc:	3b08      	subs	r3, #8
 802b7fe:	f9b3 b002 	ldrsh.w	fp, [r3, #2]
 802b802:	f9b3 6000 	ldrsh.w	r6, [r3]
 802b806:	eb06 460b 	add.w	r6, r6, fp, lsl #16
 802b80a:	45b2      	cmp	sl, r6
 802b80c:	dbf6      	blt.n	802b7fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x11a>
 802b80e:	42ab      	cmp	r3, r5
 802b810:	681e      	ldr	r6, [r3, #0]
 802b812:	d30e      	bcc.n	802b832 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x150>
 802b814:	f9b2 700c 	ldrsh.w	r7, [r2, #12]
 802b818:	f9b2 200e 	ldrsh.w	r2, [r2, #14]
 802b81c:	602e      	str	r6, [r5, #0]
 802b81e:	685e      	ldr	r6, [r3, #4]
 802b820:	606e      	str	r6, [r5, #4]
 802b822:	f8a3 9000 	strh.w	r9, [r3]
 802b826:	f8a3 8002 	strh.w	r8, [r3, #2]
 802b82a:	809f      	strh	r7, [r3, #4]
 802b82c:	80da      	strh	r2, [r3, #6]
 802b82e:	462a      	mov	r2, r5
 802b830:	e7d3      	b.n	802b7da <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xf8>
 802b832:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 802b836:	6006      	str	r6, [r0, #0]
 802b838:	685e      	ldr	r6, [r3, #4]
 802b83a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 802b83e:	6046      	str	r6, [r0, #4]
 802b840:	1a1e      	subs	r6, r3, r0
 802b842:	80da      	strh	r2, [r3, #6]
 802b844:	1b4a      	subs	r2, r1, r5
 802b846:	f8a3 e000 	strh.w	lr, [r3]
 802b84a:	10d2      	asrs	r2, r2, #3
 802b84c:	f8a3 c002 	strh.w	ip, [r3, #2]
 802b850:	f8a3 8004 	strh.w	r8, [r3, #4]
 802b854:	ebb2 0fe6 	cmp.w	r2, r6, asr #3
 802b858:	bfb5      	itete	lt
 802b85a:	e9c4 0300 	strdlt	r0, r3, [r4]
 802b85e:	4607      	movge	r7, r0
 802b860:	460b      	movlt	r3, r1
 802b862:	e9c4 5100 	strdge	r5, r1, [r4]
 802b866:	4638      	mov	r0, r7
 802b868:	3408      	adds	r4, #8
 802b86a:	4619      	mov	r1, r3
 802b86c:	e73f      	b.n	802b6ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 802b86e:	4291      	cmp	r1, r2
 802b870:	d925      	bls.n	802b8be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1dc>
 802b872:	f1a2 0310 	sub.w	r3, r2, #16
 802b876:	f9b3 600a 	ldrsh.w	r6, [r3, #10]
 802b87a:	f9b3 c010 	ldrsh.w	ip, [r3, #16]
 802b87e:	f9b3 7012 	ldrsh.w	r7, [r3, #18]
 802b882:	f9b3 5008 	ldrsh.w	r5, [r3, #8]
 802b886:	eb05 4506 	add.w	r5, r5, r6, lsl #16
 802b88a:	eb0c 4607 	add.w	r6, ip, r7, lsl #16
 802b88e:	42b5      	cmp	r5, r6
 802b890:	dd13      	ble.n	802b8ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1d8>
 802b892:	461d      	mov	r5, r3
 802b894:	f9b3 8014 	ldrsh.w	r8, [r3, #20]
 802b898:	f9b3 e016 	ldrsh.w	lr, [r3, #22]
 802b89c:	3b08      	subs	r3, #8
 802b89e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 802b8a2:	619e      	str	r6, [r3, #24]
 802b8a4:	42a8      	cmp	r0, r5
 802b8a6:	686e      	ldr	r6, [r5, #4]
 802b8a8:	f8a3 c010 	strh.w	ip, [r3, #16]
 802b8ac:	61de      	str	r6, [r3, #28]
 802b8ae:	825f      	strh	r7, [r3, #18]
 802b8b0:	f8a3 8014 	strh.w	r8, [r3, #20]
 802b8b4:	f8a3 e016 	strh.w	lr, [r3, #22]
 802b8b8:	d1dd      	bne.n	802b876 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x194>
 802b8ba:	3208      	adds	r2, #8
 802b8bc:	e7d7      	b.n	802b86e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x18c>
 802b8be:	466b      	mov	r3, sp
 802b8c0:	429c      	cmp	r4, r3
 802b8c2:	d903      	bls.n	802b8cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1ea>
 802b8c4:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 802b8c8:	3c08      	subs	r4, #8
 802b8ca:	e710      	b.n	802b6ee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xc>
 802b8cc:	b051      	add	sp, #324	; 0x144
 802b8ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802b8d2 <_ZN8touchgfx7Outline9sortCellsEv>:
 802b8d2:	6881      	ldr	r1, [r0, #8]
 802b8d4:	b111      	cbz	r1, 802b8dc <_ZN8touchgfx7Outline9sortCellsEv+0xa>
 802b8d6:	68c0      	ldr	r0, [r0, #12]
 802b8d8:	f7ff bf03 	b.w	802b6e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 802b8dc:	4770      	bx	lr

0802b8de <_ZN8touchgfx7Outline8getCellsEv>:
 802b8de:	b510      	push	{r4, lr}
 802b8e0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 802b8e2:	4604      	mov	r4, r0
 802b8e4:	07da      	lsls	r2, r3, #31
 802b8e6:	d507      	bpl.n	802b8f8 <_ZN8touchgfx7Outline8getCellsEv+0x1a>
 802b8e8:	e9d0 1209 	ldrd	r1, r2, [r0, #36]	; 0x24
 802b8ec:	f7ff fe83 	bl	802b5f6 <_ZN8touchgfx7Outline6lineToEii>
 802b8f0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b8f2:	f023 0301 	bic.w	r3, r3, #1
 802b8f6:	63e3      	str	r3, [r4, #60]	; 0x3c
 802b8f8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b8fa:	079b      	lsls	r3, r3, #30
 802b8fc:	d51a      	bpl.n	802b934 <_ZN8touchgfx7Outline8getCellsEv+0x56>
 802b8fe:	8b62      	ldrh	r2, [r4, #26]
 802b900:	8b23      	ldrh	r3, [r4, #24]
 802b902:	4313      	orrs	r3, r2
 802b904:	d00d      	beq.n	802b922 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802b906:	f9b4 3016 	ldrsh.w	r3, [r4, #22]
 802b90a:	2b00      	cmp	r3, #0
 802b90c:	db09      	blt.n	802b922 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802b90e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 802b910:	4293      	cmp	r3, r2
 802b912:	da06      	bge.n	802b922 <_ZN8touchgfx7Outline8getCellsEv+0x44>
 802b914:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 802b918:	429a      	cmp	r2, r3
 802b91a:	d80d      	bhi.n	802b938 <_ZN8touchgfx7Outline8getCellsEv+0x5a>
 802b91c:	2301      	movs	r3, #1
 802b91e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 802b922:	68a0      	ldr	r0, [r4, #8]
 802b924:	b138      	cbz	r0, 802b936 <_ZN8touchgfx7Outline8getCellsEv+0x58>
 802b926:	4620      	mov	r0, r4
 802b928:	f7ff ffd3 	bl	802b8d2 <_ZN8touchgfx7Outline9sortCellsEv>
 802b92c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 802b92e:	f023 0302 	bic.w	r3, r3, #2
 802b932:	63e3      	str	r3, [r4, #60]	; 0x3c
 802b934:	68e0      	ldr	r0, [r4, #12]
 802b936:	bd10      	pop	{r4, pc}
 802b938:	f104 0314 	add.w	r3, r4, #20
 802b93c:	6922      	ldr	r2, [r4, #16]
 802b93e:	cb03      	ldmia	r3!, {r0, r1}
 802b940:	6010      	str	r0, [r2, #0]
 802b942:	6051      	str	r1, [r2, #4]
 802b944:	6923      	ldr	r3, [r4, #16]
 802b946:	3308      	adds	r3, #8
 802b948:	6123      	str	r3, [r4, #16]
 802b94a:	68a3      	ldr	r3, [r4, #8]
 802b94c:	3301      	adds	r3, #1
 802b94e:	60a3      	str	r3, [r4, #8]
 802b950:	e7e7      	b.n	802b922 <_ZN8touchgfx7Outline8getCellsEv+0x44>

0802b952 <_ZN8touchgfx8ScanlineD1Ev>:
 802b952:	4770      	bx	lr

0802b954 <_ZN8touchgfx8ScanlineD0Ev>:
 802b954:	b510      	push	{r4, lr}
 802b956:	4604      	mov	r4, r0
 802b958:	2124      	movs	r1, #36	; 0x24
 802b95a:	f000 f884 	bl	802ba66 <_ZdlPvj>
 802b95e:	4620      	mov	r0, r4
 802b960:	bd10      	pop	{r4, pc}

0802b962 <_ZN8touchgfx8Scanline5resetEv>:
 802b962:	b510      	push	{r4, lr}
 802b964:	4604      	mov	r4, r0
 802b966:	f7ee f94d 	bl	8019c04 <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCoversEv>
 802b96a:	61a0      	str	r0, [r4, #24]
 802b96c:	f7ee f950 	bl	8019c10 <_ZN8touchgfx20CanvasWidgetRenderer23getScanlineStartIndicesEv>
 802b970:	61e0      	str	r0, [r4, #28]
 802b972:	f7ee f953 	bl	8019c1c <_ZN8touchgfx20CanvasWidgetRenderer17getScanlineCountsEv>
 802b976:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802b97a:	6220      	str	r0, [r4, #32]
 802b97c:	6160      	str	r0, [r4, #20]
 802b97e:	e9c4 3301 	strd	r3, r3, [r4, #4]
 802b982:	69e3      	ldr	r3, [r4, #28]
 802b984:	6123      	str	r3, [r4, #16]
 802b986:	2300      	movs	r3, #0
 802b988:	60e3      	str	r3, [r4, #12]
 802b98a:	bd10      	pop	{r4, pc}

0802b98c <_ZN8touchgfx8ScanlineC1Ev>:
 802b98c:	4b07      	ldr	r3, [pc, #28]	; (802b9ac <_ZN8touchgfx8ScanlineC1Ev+0x20>)
 802b98e:	b510      	push	{r4, lr}
 802b990:	6003      	str	r3, [r0, #0]
 802b992:	f647 73ff 	movw	r3, #32767	; 0x7fff
 802b996:	4604      	mov	r4, r0
 802b998:	e9c0 3301 	strd	r3, r3, [r0, #4]
 802b99c:	2300      	movs	r3, #0
 802b99e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 802b9a2:	6143      	str	r3, [r0, #20]
 802b9a4:	f7ff ffdd 	bl	802b962 <_ZN8touchgfx8Scanline5resetEv>
 802b9a8:	4620      	mov	r0, r4
 802b9aa:	bd10      	pop	{r4, pc}
 802b9ac:	08032afc 	.word	0x08032afc

0802b9b0 <_ZN8touchgfx8Scanline7addSpanEiijj>:
 802b9b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b9b4:	1e0c      	subs	r4, r1, #0
 802b9b6:	4605      	mov	r5, r0
 802b9b8:	4617      	mov	r7, r2
 802b9ba:	461e      	mov	r6, r3
 802b9bc:	da03      	bge.n	802b9c6 <_ZN8touchgfx8Scanline7addSpanEiijj+0x16>
 802b9be:	4426      	add	r6, r4
 802b9c0:	2e01      	cmp	r6, #1
 802b9c2:	d421      	bmi.n	802ba08 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802b9c4:	2400      	movs	r4, #0
 802b9c6:	f7ee f917 	bl	8019bf8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802b9ca:	42a0      	cmp	r0, r4
 802b9cc:	d91c      	bls.n	802ba08 <_ZN8touchgfx8Scanline7addSpanEiijj+0x58>
 802b9ce:	eb04 0806 	add.w	r8, r4, r6
 802b9d2:	f7ee f911 	bl	8019bf8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802b9d6:	4580      	cmp	r8, r0
 802b9d8:	d902      	bls.n	802b9e0 <_ZN8touchgfx8Scanline7addSpanEiijj+0x30>
 802b9da:	f7ee f90d 	bl	8019bf8 <_ZN8touchgfx20CanvasWidgetRenderer16getScanlineWidthEv>
 802b9de:	1b06      	subs	r6, r0, r4
 802b9e0:	69a8      	ldr	r0, [r5, #24]
 802b9e2:	4632      	mov	r2, r6
 802b9e4:	f89d 1018 	ldrb.w	r1, [sp, #24]
 802b9e8:	4420      	add	r0, r4
 802b9ea:	f7f0 fe05 	bl	801c5f8 <_ZN8touchgfx6memsetEPvhm>
 802b9ee:	686b      	ldr	r3, [r5, #4]
 802b9f0:	b2b2      	uxth	r2, r6
 802b9f2:	3301      	adds	r3, #1
 802b9f4:	42a3      	cmp	r3, r4
 802b9f6:	696b      	ldr	r3, [r5, #20]
 802b9f8:	d108      	bne.n	802ba0c <_ZN8touchgfx8Scanline7addSpanEiijj+0x5c>
 802b9fa:	8819      	ldrh	r1, [r3, #0]
 802b9fc:	440a      	add	r2, r1
 802b9fe:	801a      	strh	r2, [r3, #0]
 802ba00:	3c01      	subs	r4, #1
 802ba02:	4434      	add	r4, r6
 802ba04:	e9c5 4701 	strd	r4, r7, [r5, #4]
 802ba08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ba0c:	1c99      	adds	r1, r3, #2
 802ba0e:	6169      	str	r1, [r5, #20]
 802ba10:	805a      	strh	r2, [r3, #2]
 802ba12:	692b      	ldr	r3, [r5, #16]
 802ba14:	1c9a      	adds	r2, r3, #2
 802ba16:	612a      	str	r2, [r5, #16]
 802ba18:	805c      	strh	r4, [r3, #2]
 802ba1a:	68eb      	ldr	r3, [r5, #12]
 802ba1c:	3301      	adds	r3, #1
 802ba1e:	60eb      	str	r3, [r5, #12]
 802ba20:	e7ee      	b.n	802ba00 <_ZN8touchgfx8Scanline7addSpanEiijj+0x50>

0802ba22 <_ZN8touchgfx15RenderingBufferD1Ev>:
 802ba22:	4770      	bx	lr

0802ba24 <_ZN8touchgfx15RenderingBufferD0Ev>:
 802ba24:	b510      	push	{r4, lr}
 802ba26:	4604      	mov	r4, r0
 802ba28:	2118      	movs	r1, #24
 802ba2a:	f000 f81c 	bl	802ba66 <_ZdlPvj>
 802ba2e:	4620      	mov	r0, r4
 802ba30:	bd10      	pop	{r4, pc}
	...

0802ba34 <_ZN8touchgfx15RenderingBufferC1Ev>:
 802ba34:	4a04      	ldr	r2, [pc, #16]	; (802ba48 <_ZN8touchgfx15RenderingBufferC1Ev+0x14>)
 802ba36:	6002      	str	r2, [r0, #0]
 802ba38:	2200      	movs	r2, #0
 802ba3a:	6042      	str	r2, [r0, #4]
 802ba3c:	7202      	strb	r2, [r0, #8]
 802ba3e:	6142      	str	r2, [r0, #20]
 802ba40:	e9c0 2203 	strd	r2, r2, [r0, #12]
 802ba44:	4770      	bx	lr
 802ba46:	bf00      	nop
 802ba48:	08032b0c 	.word	0x08032b0c

0802ba4c <_ZN8touchgfx15RenderingBuffer6attachEPhhjji>:
 802ba4c:	60c3      	str	r3, [r0, #12]
 802ba4e:	9b00      	ldr	r3, [sp, #0]
 802ba50:	6041      	str	r1, [r0, #4]
 802ba52:	6103      	str	r3, [r0, #16]
 802ba54:	9b01      	ldr	r3, [sp, #4]
 802ba56:	7202      	strb	r2, [r0, #8]
 802ba58:	6143      	str	r3, [r0, #20]
 802ba5a:	4770      	bx	lr

0802ba5c <__aeabi_atexit>:
 802ba5c:	460b      	mov	r3, r1
 802ba5e:	4601      	mov	r1, r0
 802ba60:	4618      	mov	r0, r3
 802ba62:	f000 ba65 	b.w	802bf30 <__cxa_atexit>

0802ba66 <_ZdlPvj>:
 802ba66:	f000 ba1a 	b.w	802be9e <_ZdlPv>

0802ba6a <__cxa_guard_acquire>:
 802ba6a:	6803      	ldr	r3, [r0, #0]
 802ba6c:	07db      	lsls	r3, r3, #31
 802ba6e:	d406      	bmi.n	802ba7e <__cxa_guard_acquire+0x14>
 802ba70:	7843      	ldrb	r3, [r0, #1]
 802ba72:	b103      	cbz	r3, 802ba76 <__cxa_guard_acquire+0xc>
 802ba74:	deff      	udf	#255	; 0xff
 802ba76:	2301      	movs	r3, #1
 802ba78:	7043      	strb	r3, [r0, #1]
 802ba7a:	4618      	mov	r0, r3
 802ba7c:	4770      	bx	lr
 802ba7e:	2000      	movs	r0, #0
 802ba80:	4770      	bx	lr

0802ba82 <__cxa_guard_release>:
 802ba82:	2301      	movs	r3, #1
 802ba84:	6003      	str	r3, [r0, #0]
 802ba86:	4770      	bx	lr

0802ba88 <_Znwj>:
 802ba88:	2801      	cmp	r0, #1
 802ba8a:	bf38      	it	cc
 802ba8c:	2001      	movcc	r0, #1
 802ba8e:	b510      	push	{r4, lr}
 802ba90:	4604      	mov	r4, r0
 802ba92:	4620      	mov	r0, r4
 802ba94:	f000 fa96 	bl	802bfc4 <malloc>
 802ba98:	b930      	cbnz	r0, 802baa8 <_Znwj+0x20>
 802ba9a:	f000 fa15 	bl	802bec8 <_ZSt15get_new_handlerv>
 802ba9e:	b908      	cbnz	r0, 802baa4 <_Znwj+0x1c>
 802baa0:	f000 fa1a 	bl	802bed8 <abort>
 802baa4:	4780      	blx	r0
 802baa6:	e7f4      	b.n	802ba92 <_Znwj+0xa>
 802baa8:	bd10      	pop	{r4, pc}

0802baaa <__cxa_pure_virtual>:
 802baaa:	b508      	push	{r3, lr}
 802baac:	f000 fa06 	bl	802bebc <_ZSt9terminatev>

0802bab0 <_ZNSaIcEC1Ev>:
 802bab0:	4770      	bx	lr

0802bab2 <_ZNSaIcED1Ev>:
 802bab2:	4770      	bx	lr

0802bab4 <_ZNSt8__detail15_List_node_base7_M_hookEPS0_>:
 802bab4:	684b      	ldr	r3, [r1, #4]
 802bab6:	6043      	str	r3, [r0, #4]
 802bab8:	684b      	ldr	r3, [r1, #4]
 802baba:	6001      	str	r1, [r0, #0]
 802babc:	6018      	str	r0, [r3, #0]
 802babe:	6048      	str	r0, [r1, #4]
 802bac0:	4770      	bx	lr

0802bac2 <_ZNSt8__detail15_List_node_base9_M_unhookEv>:
 802bac2:	e9d0 3200 	ldrd	r3, r2, [r0]
 802bac6:	6013      	str	r3, [r2, #0]
 802bac8:	605a      	str	r2, [r3, #4]
 802baca:	4770      	bx	lr

0802bacc <_ZSt17__throw_bad_allocv>:
 802bacc:	b508      	push	{r3, lr}
 802bace:	f000 fa03 	bl	802bed8 <abort>

0802bad2 <_ZSt19__throw_logic_errorPKc>:
 802bad2:	b508      	push	{r3, lr}
 802bad4:	f000 fa00 	bl	802bed8 <abort>

0802bad8 <_ZSt20__throw_length_errorPKc>:
 802bad8:	b508      	push	{r3, lr}
 802bada:	f000 f9fd 	bl	802bed8 <abort>

0802bade <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>:
 802bade:	b10a      	cbz	r2, 802bae4 <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0+0x6>
 802bae0:	f000 ba80 	b.w	802bfe4 <memcpy>
 802bae4:	4770      	bx	lr
	...

0802bae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>:
 802bae8:	b508      	push	{r3, lr}
 802baea:	680b      	ldr	r3, [r1, #0]
 802baec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 802baf0:	d302      	bcc.n	802baf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x10>
 802baf2:	480d      	ldr	r0, [pc, #52]	; (802bb28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x40>)
 802baf4:	f7ff fff0 	bl	802bad8 <_ZSt20__throw_length_errorPKc>
 802baf8:	4293      	cmp	r3, r2
 802bafa:	d90b      	bls.n	802bb14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 802bafc:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 802bb00:	ea4f 0042 	mov.w	r0, r2, lsl #1
 802bb04:	d206      	bcs.n	802bb14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x2c>
 802bb06:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 802bb0a:	bf2a      	itet	cs
 802bb0c:	f06f 4340 	mvncs.w	r3, #3221225472	; 0xc0000000
 802bb10:	6008      	strcc	r0, [r1, #0]
 802bb12:	600b      	strcs	r3, [r1, #0]
 802bb14:	6808      	ldr	r0, [r1, #0]
 802bb16:	3001      	adds	r0, #1
 802bb18:	d501      	bpl.n	802bb1e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj+0x36>
 802bb1a:	f7ff ffd7 	bl	802bacc <_ZSt17__throw_bad_allocv>
 802bb1e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 802bb22:	f7ff bfb1 	b.w	802ba88 <_Znwj>
 802bb26:	bf00      	nop
 802bb28:	08032b14 	.word	0x08032b14

0802bb2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>:
 802bb2c:	f850 3b08 	ldr.w	r3, [r0], #8
 802bb30:	4283      	cmp	r3, r0
 802bb32:	d002      	beq.n	802bb3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv+0xe>
 802bb34:	4618      	mov	r0, r3
 802bb36:	f000 b9b2 	b.w	802be9e <_ZdlPv>
 802bb3a:	4770      	bx	lr

0802bb3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>:
 802bb3c:	6840      	ldr	r0, [r0, #4]
 802bb3e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802bb42:	3901      	subs	r1, #1
 802bb44:	1a09      	subs	r1, r1, r0
 802bb46:	4291      	cmp	r1, r2
 802bb48:	b508      	push	{r3, lr}
 802bb4a:	d202      	bcs.n	802bb52 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc+0x16>
 802bb4c:	4618      	mov	r0, r3
 802bb4e:	f7ff ffc3 	bl	802bad8 <_ZSt20__throw_length_errorPKc>
 802bb52:	bd08      	pop	{r3, pc}

0802bb54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>:
 802bb54:	6803      	ldr	r3, [r0, #0]
 802bb56:	428b      	cmp	r3, r1
 802bb58:	d806      	bhi.n	802bb68 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc+0x14>
 802bb5a:	6840      	ldr	r0, [r0, #4]
 802bb5c:	4418      	add	r0, r3
 802bb5e:	4281      	cmp	r1, r0
 802bb60:	bf94      	ite	ls
 802bb62:	2000      	movls	r0, #0
 802bb64:	2001      	movhi	r0, #1
 802bb66:	4770      	bx	lr
 802bb68:	2001      	movs	r0, #1
 802bb6a:	4770      	bx	lr

0802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>:
 802bb6c:	2a01      	cmp	r2, #1
 802bb6e:	b410      	push	{r4}
 802bb70:	d104      	bne.n	802bb7c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj+0x10>
 802bb72:	780a      	ldrb	r2, [r1, #0]
 802bb74:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bb78:	7002      	strb	r2, [r0, #0]
 802bb7a:	4770      	bx	lr
 802bb7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bb80:	f7ff bfad 	b.w	802bade <_ZNSt11char_traitsIcE4copyEPcPKcj.isra.0>

0802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>:
 802bb84:	2a01      	cmp	r2, #1
 802bb86:	b430      	push	{r4, r5}
 802bb88:	d103      	bne.n	802bb92 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xe>
 802bb8a:	780b      	ldrb	r3, [r1, #0]
 802bb8c:	7003      	strb	r3, [r0, #0]
 802bb8e:	bc30      	pop	{r4, r5}
 802bb90:	4770      	bx	lr
 802bb92:	2a00      	cmp	r2, #0
 802bb94:	d0fb      	beq.n	802bb8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj+0xa>
 802bb96:	bc30      	pop	{r4, r5}
 802bb98:	f000 ba32 	b.w	802c000 <memmove>

0802bb9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>:
 802bb9c:	b508      	push	{r3, lr}
 802bb9e:	1a52      	subs	r2, r2, r1
 802bba0:	f7ff ffe4 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bba4:	bd08      	pop	{r3, pc}

0802bba6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>:
 802bba6:	b508      	push	{r3, lr}
 802bba8:	1a52      	subs	r2, r2, r1
 802bbaa:	f7ff ffdf 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bbae:	bd08      	pop	{r3, pc}

0802bbb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>:
 802bbb0:	4288      	cmp	r0, r1
 802bbb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 802bbb4:	4604      	mov	r4, r0
 802bbb6:	460e      	mov	r6, r1
 802bbb8:	d01e      	beq.n	802bbf8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x48>
 802bbba:	4603      	mov	r3, r0
 802bbbc:	684d      	ldr	r5, [r1, #4]
 802bbbe:	f853 2b08 	ldr.w	r2, [r3], #8
 802bbc2:	429a      	cmp	r2, r3
 802bbc4:	bf14      	ite	ne
 802bbc6:	6882      	ldrne	r2, [r0, #8]
 802bbc8:	220f      	moveq	r2, #15
 802bbca:	42aa      	cmp	r2, r5
 802bbcc:	d20a      	bcs.n	802bbe4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x34>
 802bbce:	a901      	add	r1, sp, #4
 802bbd0:	9501      	str	r5, [sp, #4]
 802bbd2:	f7ff ff89 	bl	802bae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 802bbd6:	4607      	mov	r7, r0
 802bbd8:	4620      	mov	r0, r4
 802bbda:	f7ff ffa7 	bl	802bb2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 802bbde:	9b01      	ldr	r3, [sp, #4]
 802bbe0:	6027      	str	r7, [r4, #0]
 802bbe2:	60a3      	str	r3, [r4, #8]
 802bbe4:	b125      	cbz	r5, 802bbf0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_+0x40>
 802bbe6:	6831      	ldr	r1, [r6, #0]
 802bbe8:	6820      	ldr	r0, [r4, #0]
 802bbea:	462a      	mov	r2, r5
 802bbec:	f7ff ffbe 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bbf0:	6823      	ldr	r3, [r4, #0]
 802bbf2:	6065      	str	r5, [r4, #4]
 802bbf4:	2200      	movs	r2, #0
 802bbf6:	555a      	strb	r2, [r3, r5]
 802bbf8:	b003      	add	sp, #12
 802bbfa:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802bbfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>:
 802bbfc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802bc00:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 802bc02:	461f      	mov	r7, r3
 802bc04:	6843      	ldr	r3, [r0, #4]
 802bc06:	eb01 0802 	add.w	r8, r1, r2
 802bc0a:	1ab2      	subs	r2, r6, r2
 802bc0c:	441a      	add	r2, r3
 802bc0e:	eba3 0908 	sub.w	r9, r3, r8
 802bc12:	4603      	mov	r3, r0
 802bc14:	9201      	str	r2, [sp, #4]
 802bc16:	f853 2b08 	ldr.w	r2, [r3], #8
 802bc1a:	429a      	cmp	r2, r3
 802bc1c:	bf18      	it	ne
 802bc1e:	6882      	ldrne	r2, [r0, #8]
 802bc20:	460d      	mov	r5, r1
 802bc22:	bf08      	it	eq
 802bc24:	220f      	moveq	r2, #15
 802bc26:	a901      	add	r1, sp, #4
 802bc28:	4604      	mov	r4, r0
 802bc2a:	f7ff ff5d 	bl	802bae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 802bc2e:	4682      	mov	sl, r0
 802bc30:	b11d      	cbz	r5, 802bc3a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x3e>
 802bc32:	6821      	ldr	r1, [r4, #0]
 802bc34:	462a      	mov	r2, r5
 802bc36:	f7ff ff99 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bc3a:	b137      	cbz	r7, 802bc4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 802bc3c:	b12e      	cbz	r6, 802bc4a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x4e>
 802bc3e:	4632      	mov	r2, r6
 802bc40:	4639      	mov	r1, r7
 802bc42:	eb0a 0005 	add.w	r0, sl, r5
 802bc46:	f7ff ff91 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bc4a:	f1b9 0f00 	cmp.w	r9, #0
 802bc4e:	d007      	beq.n	802bc60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj+0x64>
 802bc50:	6821      	ldr	r1, [r4, #0]
 802bc52:	4435      	add	r5, r6
 802bc54:	464a      	mov	r2, r9
 802bc56:	4441      	add	r1, r8
 802bc58:	eb0a 0005 	add.w	r0, sl, r5
 802bc5c:	f7ff ff86 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bc60:	4620      	mov	r0, r4
 802bc62:	f7ff ff63 	bl	802bb2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 802bc66:	9b01      	ldr	r3, [sp, #4]
 802bc68:	f8c4 a000 	str.w	sl, [r4]
 802bc6c:	60a3      	str	r3, [r4, #8]
 802bc6e:	b002      	add	sp, #8
 802bc70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0802bc74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev>:
 802bc74:	f100 0208 	add.w	r2, r0, #8
 802bc78:	6002      	str	r2, [r0, #0]
 802bc7a:	2200      	movs	r2, #0
 802bc7c:	6042      	str	r2, [r0, #4]
 802bc7e:	7202      	strb	r2, [r0, #8]
 802bc80:	4770      	bx	lr

0802bc82 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev>:
 802bc82:	b510      	push	{r4, lr}
 802bc84:	4604      	mov	r4, r0
 802bc86:	f7ff ff51 	bl	802bb2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv>
 802bc8a:	4620      	mov	r0, r4
 802bc8c:	bd10      	pop	{r4, pc}

0802bc8e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_>:
 802bc8e:	b510      	push	{r4, lr}
 802bc90:	4604      	mov	r4, r0
 802bc92:	f7ff ff8d 	bl	802bbb0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 802bc96:	4620      	mov	r0, r4
 802bc98:	bd10      	pop	{r4, pc}
	...

0802bc9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>:
 802bc9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bca0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802bca2:	4614      	mov	r4, r2
 802bca4:	4680      	mov	r8, r0
 802bca6:	462a      	mov	r2, r5
 802bca8:	4689      	mov	r9, r1
 802bcaa:	461f      	mov	r7, r3
 802bcac:	4621      	mov	r1, r4
 802bcae:	4b39      	ldr	r3, [pc, #228]	; (802bd94 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xf8>)
 802bcb0:	f7ff ff44 	bl	802bb3c <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEjjPKc>
 802bcb4:	4642      	mov	r2, r8
 802bcb6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 802bcba:	f852 6b08 	ldr.w	r6, [r2], #8
 802bcbe:	4296      	cmp	r6, r2
 802bcc0:	bf18      	it	ne
 802bcc2:	f8d8 2008 	ldrne.w	r2, [r8, #8]
 802bcc6:	eba5 0b04 	sub.w	fp, r5, r4
 802bcca:	eb03 0a0b 	add.w	sl, r3, fp
 802bcce:	bf08      	it	eq
 802bcd0:	220f      	moveq	r2, #15
 802bcd2:	4552      	cmp	r2, sl
 802bcd4:	d351      	bcc.n	802bd7a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xde>
 802bcd6:	444e      	add	r6, r9
 802bcd8:	4639      	mov	r1, r7
 802bcda:	44a1      	add	r9, r4
 802bcdc:	4640      	mov	r0, r8
 802bcde:	eba3 0909 	sub.w	r9, r3, r9
 802bce2:	f7ff ff37 	bl	802bb54 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc>
 802bce6:	b180      	cbz	r0, 802bd0a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x6e>
 802bce8:	f1b9 0f00 	cmp.w	r9, #0
 802bcec:	d006      	beq.n	802bcfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 802bcee:	42ac      	cmp	r4, r5
 802bcf0:	d004      	beq.n	802bcfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x60>
 802bcf2:	464a      	mov	r2, r9
 802bcf4:	1931      	adds	r1, r6, r4
 802bcf6:	1970      	adds	r0, r6, r5
 802bcf8:	f7ff ff44 	bl	802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 802bcfc:	b315      	cbz	r5, 802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bcfe:	462a      	mov	r2, r5
 802bd00:	4639      	mov	r1, r7
 802bd02:	4630      	mov	r0, r6
 802bd04:	f7ff ff32 	bl	802bb6c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcj>
 802bd08:	e01c      	b.n	802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bd0a:	b135      	cbz	r5, 802bd1a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x7e>
 802bd0c:	42ac      	cmp	r4, r5
 802bd0e:	d33c      	bcc.n	802bd8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xee>
 802bd10:	462a      	mov	r2, r5
 802bd12:	4639      	mov	r1, r7
 802bd14:	4630      	mov	r0, r6
 802bd16:	f7ff ff35 	bl	802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 802bd1a:	f1b9 0f00 	cmp.w	r9, #0
 802bd1e:	d011      	beq.n	802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bd20:	42ac      	cmp	r4, r5
 802bd22:	d00f      	beq.n	802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bd24:	464a      	mov	r2, r9
 802bd26:	1931      	adds	r1, r6, r4
 802bd28:	1970      	adds	r0, r6, r5
 802bd2a:	f7ff ff2b 	bl	802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 802bd2e:	42ac      	cmp	r4, r5
 802bd30:	d208      	bcs.n	802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bd32:	4434      	add	r4, r6
 802bd34:	197b      	adds	r3, r7, r5
 802bd36:	429c      	cmp	r4, r3
 802bd38:	d30f      	bcc.n	802bd5a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xbe>
 802bd3a:	462a      	mov	r2, r5
 802bd3c:	4639      	mov	r1, r7
 802bd3e:	4630      	mov	r0, r6
 802bd40:	f7ff ff20 	bl	802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 802bd44:	f8d8 3000 	ldr.w	r3, [r8]
 802bd48:	f8c8 a004 	str.w	sl, [r8, #4]
 802bd4c:	2200      	movs	r2, #0
 802bd4e:	4640      	mov	r0, r8
 802bd50:	f803 200a 	strb.w	r2, [r3, sl]
 802bd54:	b003      	add	sp, #12
 802bd56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bd5a:	42bc      	cmp	r4, r7
 802bd5c:	d803      	bhi.n	802bd66 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xca>
 802bd5e:	462a      	mov	r2, r5
 802bd60:	eb07 010b 	add.w	r1, r7, fp
 802bd64:	e7cd      	b.n	802bd02 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x66>
 802bd66:	1be4      	subs	r4, r4, r7
 802bd68:	4622      	mov	r2, r4
 802bd6a:	4639      	mov	r1, r7
 802bd6c:	4630      	mov	r0, r6
 802bd6e:	f7ff ff09 	bl	802bb84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcj>
 802bd72:	1b2a      	subs	r2, r5, r4
 802bd74:	1971      	adds	r1, r6, r5
 802bd76:	1930      	adds	r0, r6, r4
 802bd78:	e7c4      	b.n	802bd04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x68>
 802bd7a:	9500      	str	r5, [sp, #0]
 802bd7c:	463b      	mov	r3, r7
 802bd7e:	4622      	mov	r2, r4
 802bd80:	4649      	mov	r1, r9
 802bd82:	4640      	mov	r0, r8
 802bd84:	f7ff ff3a 	bl	802bbfc <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEjjPKcj>
 802bd88:	e7dc      	b.n	802bd44 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0xa8>
 802bd8a:	f1b9 0f00 	cmp.w	r9, #0
 802bd8e:	d0d0      	beq.n	802bd32 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x96>
 802bd90:	e7c8      	b.n	802bd24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj+0x88>
 802bd92:	bf00      	nop
 802bd94:	08032b2c 	.word	0x08032b2c

0802bd98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>:
 802bd98:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802bd9a:	4604      	mov	r4, r0
 802bd9c:	4608      	mov	r0, r1
 802bd9e:	9103      	str	r1, [sp, #12]
 802bda0:	f7d4 fa86 	bl	80002b0 <strlen>
 802bda4:	9b03      	ldr	r3, [sp, #12]
 802bda6:	9000      	str	r0, [sp, #0]
 802bda8:	6862      	ldr	r2, [r4, #4]
 802bdaa:	2100      	movs	r1, #0
 802bdac:	4620      	mov	r0, r4
 802bdae:	f7ff ff75 	bl	802bc9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj>
 802bdb2:	b004      	add	sp, #16
 802bdb4:	bd10      	pop	{r4, pc}

0802bdb6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc>:
 802bdb6:	b508      	push	{r3, lr}
 802bdb8:	f7ff ffee 	bl	802bd98 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc>
 802bdbc:	bd08      	pop	{r3, pc}

0802bdbe <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv>:
 802bdbe:	6800      	ldr	r0, [r0, #0]
 802bdc0:	4770      	bx	lr
	...

0802bdc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
 802bdc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802bdc6:	4604      	mov	r4, r0
 802bdc8:	4616      	mov	r6, r2
 802bdca:	460d      	mov	r5, r1
 802bdcc:	b919      	cbnz	r1, 802bdd6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 802bdce:	b112      	cbz	r2, 802bdd6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x12>
 802bdd0:	480d      	ldr	r0, [pc, #52]	; (802be08 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x44>)
 802bdd2:	f7ff fe7e 	bl	802bad2 <_ZSt19__throw_logic_errorPKc>
 802bdd6:	1b73      	subs	r3, r6, r5
 802bdd8:	2b0f      	cmp	r3, #15
 802bdda:	9301      	str	r3, [sp, #4]
 802bddc:	d907      	bls.n	802bdee <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x2a>
 802bdde:	2200      	movs	r2, #0
 802bde0:	a901      	add	r1, sp, #4
 802bde2:	4620      	mov	r0, r4
 802bde4:	f7ff fe80 	bl	802bae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 802bde8:	9b01      	ldr	r3, [sp, #4]
 802bdea:	6020      	str	r0, [r4, #0]
 802bdec:	60a3      	str	r3, [r4, #8]
 802bdee:	4632      	mov	r2, r6
 802bdf0:	4629      	mov	r1, r5
 802bdf2:	6820      	ldr	r0, [r4, #0]
 802bdf4:	f7ff fed2 	bl	802bb9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_>
 802bdf8:	9b01      	ldr	r3, [sp, #4]
 802bdfa:	6822      	ldr	r2, [r4, #0]
 802bdfc:	6063      	str	r3, [r4, #4]
 802bdfe:	2100      	movs	r1, #0
 802be00:	54d1      	strb	r1, [r2, r3]
 802be02:	b002      	add	sp, #8
 802be04:	bd70      	pop	{r4, r5, r6, pc}
 802be06:	bf00      	nop
 802be08:	08032b45 	.word	0x08032b45

0802be0c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_>:
 802be0c:	b538      	push	{r3, r4, r5, lr}
 802be0e:	f100 0308 	add.w	r3, r0, #8
 802be12:	6003      	str	r3, [r0, #0]
 802be14:	e9d1 5200 	ldrd	r5, r2, [r1]
 802be18:	4604      	mov	r4, r0
 802be1a:	f04f 0300 	mov.w	r3, #0
 802be1e:	442a      	add	r2, r5
 802be20:	4629      	mov	r1, r5
 802be22:	f7ff ffcf 	bl	802bdc4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
 802be26:	4620      	mov	r0, r4
 802be28:	bd38      	pop	{r3, r4, r5, pc}
	...

0802be2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
 802be2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802be2e:	4604      	mov	r4, r0
 802be30:	4616      	mov	r6, r2
 802be32:	460d      	mov	r5, r1
 802be34:	b919      	cbnz	r1, 802be3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 802be36:	b112      	cbz	r2, 802be3e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x12>
 802be38:	480d      	ldr	r0, [pc, #52]	; (802be70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x44>)
 802be3a:	f7ff fe4a 	bl	802bad2 <_ZSt19__throw_logic_errorPKc>
 802be3e:	1b73      	subs	r3, r6, r5
 802be40:	2b0f      	cmp	r3, #15
 802be42:	9301      	str	r3, [sp, #4]
 802be44:	d907      	bls.n	802be56 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x2a>
 802be46:	2200      	movs	r2, #0
 802be48:	a901      	add	r1, sp, #4
 802be4a:	4620      	mov	r0, r4
 802be4c:	f7ff fe4c 	bl	802bae8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj>
 802be50:	9b01      	ldr	r3, [sp, #4]
 802be52:	6020      	str	r0, [r4, #0]
 802be54:	60a3      	str	r3, [r4, #8]
 802be56:	4632      	mov	r2, r6
 802be58:	4629      	mov	r1, r5
 802be5a:	6820      	ldr	r0, [r4, #0]
 802be5c:	f7ff fea3 	bl	802bba6 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_>
 802be60:	9b01      	ldr	r3, [sp, #4]
 802be62:	6822      	ldr	r2, [r4, #0]
 802be64:	6063      	str	r3, [r4, #4]
 802be66:	2100      	movs	r1, #0
 802be68:	54d1      	strb	r1, [r2, r3]
 802be6a:	b002      	add	sp, #8
 802be6c:	bd70      	pop	{r4, r5, r6, pc}
 802be6e:	bf00      	nop
 802be70:	08032b45 	.word	0x08032b45

0802be74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_>:
 802be74:	b538      	push	{r3, r4, r5, lr}
 802be76:	f100 0308 	add.w	r3, r0, #8
 802be7a:	4604      	mov	r4, r0
 802be7c:	6003      	str	r3, [r0, #0]
 802be7e:	460d      	mov	r5, r1
 802be80:	b159      	cbz	r1, 802be9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x26>
 802be82:	4608      	mov	r0, r1
 802be84:	f7d4 fa14 	bl	80002b0 <strlen>
 802be88:	182a      	adds	r2, r5, r0
 802be8a:	4620      	mov	r0, r4
 802be8c:	f04f 0300 	mov.w	r3, #0
 802be90:	4629      	mov	r1, r5
 802be92:	f7ff ffcb 	bl	802be2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
 802be96:	4620      	mov	r0, r4
 802be98:	bd38      	pop	{r3, r4, r5, pc}
 802be9a:	2201      	movs	r2, #1
 802be9c:	e7f5      	b.n	802be8a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_+0x16>

0802be9e <_ZdlPv>:
 802be9e:	f000 b899 	b.w	802bfd4 <free>

0802bea2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802bea2:	b508      	push	{r3, lr}
 802bea4:	4780      	blx	r0
 802bea6:	f000 f817 	bl	802bed8 <abort>
	...

0802beac <_ZSt13get_terminatev>:
 802beac:	4b02      	ldr	r3, [pc, #8]	; (802beb8 <_ZSt13get_terminatev+0xc>)
 802beae:	6818      	ldr	r0, [r3, #0]
 802beb0:	f3bf 8f5b 	dmb	ish
 802beb4:	4770      	bx	lr
 802beb6:	bf00      	nop
 802beb8:	200000b8 	.word	0x200000b8

0802bebc <_ZSt9terminatev>:
 802bebc:	b508      	push	{r3, lr}
 802bebe:	f7ff fff5 	bl	802beac <_ZSt13get_terminatev>
 802bec2:	f7ff ffee 	bl	802bea2 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802bec8 <_ZSt15get_new_handlerv>:
 802bec8:	4b02      	ldr	r3, [pc, #8]	; (802bed4 <_ZSt15get_new_handlerv+0xc>)
 802beca:	6818      	ldr	r0, [r3, #0]
 802becc:	f3bf 8f5b 	dmb	ish
 802bed0:	4770      	bx	lr
 802bed2:	bf00      	nop
 802bed4:	20004284 	.word	0x20004284

0802bed8 <abort>:
 802bed8:	b508      	push	{r3, lr}
 802beda:	2006      	movs	r0, #6
 802bedc:	f000 fcb8 	bl	802c850 <raise>
 802bee0:	2001      	movs	r0, #1
 802bee2:	f7d6 f881 	bl	8001fe8 <_exit>
	...

0802bee8 <__assert_func>:
 802bee8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802beea:	4614      	mov	r4, r2
 802beec:	461a      	mov	r2, r3
 802beee:	4b09      	ldr	r3, [pc, #36]	; (802bf14 <__assert_func+0x2c>)
 802bef0:	681b      	ldr	r3, [r3, #0]
 802bef2:	4605      	mov	r5, r0
 802bef4:	68d8      	ldr	r0, [r3, #12]
 802bef6:	b14c      	cbz	r4, 802bf0c <__assert_func+0x24>
 802bef8:	4b07      	ldr	r3, [pc, #28]	; (802bf18 <__assert_func+0x30>)
 802befa:	9100      	str	r1, [sp, #0]
 802befc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802bf00:	4906      	ldr	r1, [pc, #24]	; (802bf1c <__assert_func+0x34>)
 802bf02:	462b      	mov	r3, r5
 802bf04:	f000 f828 	bl	802bf58 <fiprintf>
 802bf08:	f7ff ffe6 	bl	802bed8 <abort>
 802bf0c:	4b04      	ldr	r3, [pc, #16]	; (802bf20 <__assert_func+0x38>)
 802bf0e:	461c      	mov	r4, r3
 802bf10:	e7f3      	b.n	802befa <__assert_func+0x12>
 802bf12:	bf00      	nop
 802bf14:	200000bc 	.word	0x200000bc
 802bf18:	08032b6f 	.word	0x08032b6f
 802bf1c:	08032b7c 	.word	0x08032b7c
 802bf20:	08032baa 	.word	0x08032baa

0802bf24 <atexit>:
 802bf24:	2300      	movs	r3, #0
 802bf26:	4601      	mov	r1, r0
 802bf28:	461a      	mov	r2, r3
 802bf2a:	4618      	mov	r0, r3
 802bf2c:	f000 bd8c 	b.w	802ca48 <__register_exitproc>

0802bf30 <__cxa_atexit>:
 802bf30:	b510      	push	{r4, lr}
 802bf32:	4c05      	ldr	r4, [pc, #20]	; (802bf48 <__cxa_atexit+0x18>)
 802bf34:	4613      	mov	r3, r2
 802bf36:	b12c      	cbz	r4, 802bf44 <__cxa_atexit+0x14>
 802bf38:	460a      	mov	r2, r1
 802bf3a:	4601      	mov	r1, r0
 802bf3c:	2002      	movs	r0, #2
 802bf3e:	f000 fd83 	bl	802ca48 <__register_exitproc>
 802bf42:	bd10      	pop	{r4, pc}
 802bf44:	4620      	mov	r0, r4
 802bf46:	e7fc      	b.n	802bf42 <__cxa_atexit+0x12>
 802bf48:	0802ca49 	.word	0x0802ca49

0802bf4c <__errno>:
 802bf4c:	4b01      	ldr	r3, [pc, #4]	; (802bf54 <__errno+0x8>)
 802bf4e:	6818      	ldr	r0, [r3, #0]
 802bf50:	4770      	bx	lr
 802bf52:	bf00      	nop
 802bf54:	200000bc 	.word	0x200000bc

0802bf58 <fiprintf>:
 802bf58:	b40e      	push	{r1, r2, r3}
 802bf5a:	b503      	push	{r0, r1, lr}
 802bf5c:	4601      	mov	r1, r0
 802bf5e:	ab03      	add	r3, sp, #12
 802bf60:	4805      	ldr	r0, [pc, #20]	; (802bf78 <fiprintf+0x20>)
 802bf62:	f853 2b04 	ldr.w	r2, [r3], #4
 802bf66:	6800      	ldr	r0, [r0, #0]
 802bf68:	9301      	str	r3, [sp, #4]
 802bf6a:	f000 f975 	bl	802c258 <_vfiprintf_r>
 802bf6e:	b002      	add	sp, #8
 802bf70:	f85d eb04 	ldr.w	lr, [sp], #4
 802bf74:	b003      	add	sp, #12
 802bf76:	4770      	bx	lr
 802bf78:	200000bc 	.word	0x200000bc

0802bf7c <__libc_init_array>:
 802bf7c:	b570      	push	{r4, r5, r6, lr}
 802bf7e:	4d0d      	ldr	r5, [pc, #52]	; (802bfb4 <__libc_init_array+0x38>)
 802bf80:	4c0d      	ldr	r4, [pc, #52]	; (802bfb8 <__libc_init_array+0x3c>)
 802bf82:	1b64      	subs	r4, r4, r5
 802bf84:	10a4      	asrs	r4, r4, #2
 802bf86:	2600      	movs	r6, #0
 802bf88:	42a6      	cmp	r6, r4
 802bf8a:	d109      	bne.n	802bfa0 <__libc_init_array+0x24>
 802bf8c:	4d0b      	ldr	r5, [pc, #44]	; (802bfbc <__libc_init_array+0x40>)
 802bf8e:	4c0c      	ldr	r4, [pc, #48]	; (802bfc0 <__libc_init_array+0x44>)
 802bf90:	f001 fa26 	bl	802d3e0 <_init>
 802bf94:	1b64      	subs	r4, r4, r5
 802bf96:	10a4      	asrs	r4, r4, #2
 802bf98:	2600      	movs	r6, #0
 802bf9a:	42a6      	cmp	r6, r4
 802bf9c:	d105      	bne.n	802bfaa <__libc_init_array+0x2e>
 802bf9e:	bd70      	pop	{r4, r5, r6, pc}
 802bfa0:	f855 3b04 	ldr.w	r3, [r5], #4
 802bfa4:	4798      	blx	r3
 802bfa6:	3601      	adds	r6, #1
 802bfa8:	e7ee      	b.n	802bf88 <__libc_init_array+0xc>
 802bfaa:	f855 3b04 	ldr.w	r3, [r5], #4
 802bfae:	4798      	blx	r3
 802bfb0:	3601      	adds	r6, #1
 802bfb2:	e7f2      	b.n	802bf9a <__libc_init_array+0x1e>
 802bfb4:	0803b280 	.word	0x0803b280
 802bfb8:	0803b280 	.word	0x0803b280
 802bfbc:	0803b280 	.word	0x0803b280
 802bfc0:	0803b2a4 	.word	0x0803b2a4

0802bfc4 <malloc>:
 802bfc4:	4b02      	ldr	r3, [pc, #8]	; (802bfd0 <malloc+0xc>)
 802bfc6:	4601      	mov	r1, r0
 802bfc8:	6818      	ldr	r0, [r3, #0]
 802bfca:	f000 b8a7 	b.w	802c11c <_malloc_r>
 802bfce:	bf00      	nop
 802bfd0:	200000bc 	.word	0x200000bc

0802bfd4 <free>:
 802bfd4:	4b02      	ldr	r3, [pc, #8]	; (802bfe0 <free+0xc>)
 802bfd6:	4601      	mov	r1, r0
 802bfd8:	6818      	ldr	r0, [r3, #0]
 802bfda:	f000 b833 	b.w	802c044 <_free_r>
 802bfde:	bf00      	nop
 802bfe0:	200000bc 	.word	0x200000bc

0802bfe4 <memcpy>:
 802bfe4:	440a      	add	r2, r1
 802bfe6:	4291      	cmp	r1, r2
 802bfe8:	f100 33ff 	add.w	r3, r0, #4294967295
 802bfec:	d100      	bne.n	802bff0 <memcpy+0xc>
 802bfee:	4770      	bx	lr
 802bff0:	b510      	push	{r4, lr}
 802bff2:	f811 4b01 	ldrb.w	r4, [r1], #1
 802bff6:	f803 4f01 	strb.w	r4, [r3, #1]!
 802bffa:	4291      	cmp	r1, r2
 802bffc:	d1f9      	bne.n	802bff2 <memcpy+0xe>
 802bffe:	bd10      	pop	{r4, pc}

0802c000 <memmove>:
 802c000:	4288      	cmp	r0, r1
 802c002:	b510      	push	{r4, lr}
 802c004:	eb01 0402 	add.w	r4, r1, r2
 802c008:	d902      	bls.n	802c010 <memmove+0x10>
 802c00a:	4284      	cmp	r4, r0
 802c00c:	4623      	mov	r3, r4
 802c00e:	d807      	bhi.n	802c020 <memmove+0x20>
 802c010:	1e43      	subs	r3, r0, #1
 802c012:	42a1      	cmp	r1, r4
 802c014:	d008      	beq.n	802c028 <memmove+0x28>
 802c016:	f811 2b01 	ldrb.w	r2, [r1], #1
 802c01a:	f803 2f01 	strb.w	r2, [r3, #1]!
 802c01e:	e7f8      	b.n	802c012 <memmove+0x12>
 802c020:	4402      	add	r2, r0
 802c022:	4601      	mov	r1, r0
 802c024:	428a      	cmp	r2, r1
 802c026:	d100      	bne.n	802c02a <memmove+0x2a>
 802c028:	bd10      	pop	{r4, pc}
 802c02a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802c02e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 802c032:	e7f7      	b.n	802c024 <memmove+0x24>

0802c034 <memset>:
 802c034:	4402      	add	r2, r0
 802c036:	4603      	mov	r3, r0
 802c038:	4293      	cmp	r3, r2
 802c03a:	d100      	bne.n	802c03e <memset+0xa>
 802c03c:	4770      	bx	lr
 802c03e:	f803 1b01 	strb.w	r1, [r3], #1
 802c042:	e7f9      	b.n	802c038 <memset+0x4>

0802c044 <_free_r>:
 802c044:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802c046:	2900      	cmp	r1, #0
 802c048:	d044      	beq.n	802c0d4 <_free_r+0x90>
 802c04a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802c04e:	9001      	str	r0, [sp, #4]
 802c050:	2b00      	cmp	r3, #0
 802c052:	f1a1 0404 	sub.w	r4, r1, #4
 802c056:	bfb8      	it	lt
 802c058:	18e4      	addlt	r4, r4, r3
 802c05a:	f000 ff77 	bl	802cf4c <__malloc_lock>
 802c05e:	4a1e      	ldr	r2, [pc, #120]	; (802c0d8 <_free_r+0x94>)
 802c060:	9801      	ldr	r0, [sp, #4]
 802c062:	6813      	ldr	r3, [r2, #0]
 802c064:	b933      	cbnz	r3, 802c074 <_free_r+0x30>
 802c066:	6063      	str	r3, [r4, #4]
 802c068:	6014      	str	r4, [r2, #0]
 802c06a:	b003      	add	sp, #12
 802c06c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802c070:	f000 bf72 	b.w	802cf58 <__malloc_unlock>
 802c074:	42a3      	cmp	r3, r4
 802c076:	d908      	bls.n	802c08a <_free_r+0x46>
 802c078:	6825      	ldr	r5, [r4, #0]
 802c07a:	1961      	adds	r1, r4, r5
 802c07c:	428b      	cmp	r3, r1
 802c07e:	bf01      	itttt	eq
 802c080:	6819      	ldreq	r1, [r3, #0]
 802c082:	685b      	ldreq	r3, [r3, #4]
 802c084:	1949      	addeq	r1, r1, r5
 802c086:	6021      	streq	r1, [r4, #0]
 802c088:	e7ed      	b.n	802c066 <_free_r+0x22>
 802c08a:	461a      	mov	r2, r3
 802c08c:	685b      	ldr	r3, [r3, #4]
 802c08e:	b10b      	cbz	r3, 802c094 <_free_r+0x50>
 802c090:	42a3      	cmp	r3, r4
 802c092:	d9fa      	bls.n	802c08a <_free_r+0x46>
 802c094:	6811      	ldr	r1, [r2, #0]
 802c096:	1855      	adds	r5, r2, r1
 802c098:	42a5      	cmp	r5, r4
 802c09a:	d10b      	bne.n	802c0b4 <_free_r+0x70>
 802c09c:	6824      	ldr	r4, [r4, #0]
 802c09e:	4421      	add	r1, r4
 802c0a0:	1854      	adds	r4, r2, r1
 802c0a2:	42a3      	cmp	r3, r4
 802c0a4:	6011      	str	r1, [r2, #0]
 802c0a6:	d1e0      	bne.n	802c06a <_free_r+0x26>
 802c0a8:	681c      	ldr	r4, [r3, #0]
 802c0aa:	685b      	ldr	r3, [r3, #4]
 802c0ac:	6053      	str	r3, [r2, #4]
 802c0ae:	4421      	add	r1, r4
 802c0b0:	6011      	str	r1, [r2, #0]
 802c0b2:	e7da      	b.n	802c06a <_free_r+0x26>
 802c0b4:	d902      	bls.n	802c0bc <_free_r+0x78>
 802c0b6:	230c      	movs	r3, #12
 802c0b8:	6003      	str	r3, [r0, #0]
 802c0ba:	e7d6      	b.n	802c06a <_free_r+0x26>
 802c0bc:	6825      	ldr	r5, [r4, #0]
 802c0be:	1961      	adds	r1, r4, r5
 802c0c0:	428b      	cmp	r3, r1
 802c0c2:	bf04      	itt	eq
 802c0c4:	6819      	ldreq	r1, [r3, #0]
 802c0c6:	685b      	ldreq	r3, [r3, #4]
 802c0c8:	6063      	str	r3, [r4, #4]
 802c0ca:	bf04      	itt	eq
 802c0cc:	1949      	addeq	r1, r1, r5
 802c0ce:	6021      	streq	r1, [r4, #0]
 802c0d0:	6054      	str	r4, [r2, #4]
 802c0d2:	e7ca      	b.n	802c06a <_free_r+0x26>
 802c0d4:	b003      	add	sp, #12
 802c0d6:	bd30      	pop	{r4, r5, pc}
 802c0d8:	20004288 	.word	0x20004288

0802c0dc <sbrk_aligned>:
 802c0dc:	b570      	push	{r4, r5, r6, lr}
 802c0de:	4e0e      	ldr	r6, [pc, #56]	; (802c118 <sbrk_aligned+0x3c>)
 802c0e0:	460c      	mov	r4, r1
 802c0e2:	6831      	ldr	r1, [r6, #0]
 802c0e4:	4605      	mov	r5, r0
 802c0e6:	b911      	cbnz	r1, 802c0ee <sbrk_aligned+0x12>
 802c0e8:	f000 fb7a 	bl	802c7e0 <_sbrk_r>
 802c0ec:	6030      	str	r0, [r6, #0]
 802c0ee:	4621      	mov	r1, r4
 802c0f0:	4628      	mov	r0, r5
 802c0f2:	f000 fb75 	bl	802c7e0 <_sbrk_r>
 802c0f6:	1c43      	adds	r3, r0, #1
 802c0f8:	d00a      	beq.n	802c110 <sbrk_aligned+0x34>
 802c0fa:	1cc4      	adds	r4, r0, #3
 802c0fc:	f024 0403 	bic.w	r4, r4, #3
 802c100:	42a0      	cmp	r0, r4
 802c102:	d007      	beq.n	802c114 <sbrk_aligned+0x38>
 802c104:	1a21      	subs	r1, r4, r0
 802c106:	4628      	mov	r0, r5
 802c108:	f000 fb6a 	bl	802c7e0 <_sbrk_r>
 802c10c:	3001      	adds	r0, #1
 802c10e:	d101      	bne.n	802c114 <sbrk_aligned+0x38>
 802c110:	f04f 34ff 	mov.w	r4, #4294967295
 802c114:	4620      	mov	r0, r4
 802c116:	bd70      	pop	{r4, r5, r6, pc}
 802c118:	2000428c 	.word	0x2000428c

0802c11c <_malloc_r>:
 802c11c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c120:	1ccd      	adds	r5, r1, #3
 802c122:	f025 0503 	bic.w	r5, r5, #3
 802c126:	3508      	adds	r5, #8
 802c128:	2d0c      	cmp	r5, #12
 802c12a:	bf38      	it	cc
 802c12c:	250c      	movcc	r5, #12
 802c12e:	2d00      	cmp	r5, #0
 802c130:	4607      	mov	r7, r0
 802c132:	db01      	blt.n	802c138 <_malloc_r+0x1c>
 802c134:	42a9      	cmp	r1, r5
 802c136:	d905      	bls.n	802c144 <_malloc_r+0x28>
 802c138:	230c      	movs	r3, #12
 802c13a:	603b      	str	r3, [r7, #0]
 802c13c:	2600      	movs	r6, #0
 802c13e:	4630      	mov	r0, r6
 802c140:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c144:	4e2e      	ldr	r6, [pc, #184]	; (802c200 <_malloc_r+0xe4>)
 802c146:	f000 ff01 	bl	802cf4c <__malloc_lock>
 802c14a:	6833      	ldr	r3, [r6, #0]
 802c14c:	461c      	mov	r4, r3
 802c14e:	bb34      	cbnz	r4, 802c19e <_malloc_r+0x82>
 802c150:	4629      	mov	r1, r5
 802c152:	4638      	mov	r0, r7
 802c154:	f7ff ffc2 	bl	802c0dc <sbrk_aligned>
 802c158:	1c43      	adds	r3, r0, #1
 802c15a:	4604      	mov	r4, r0
 802c15c:	d14d      	bne.n	802c1fa <_malloc_r+0xde>
 802c15e:	6834      	ldr	r4, [r6, #0]
 802c160:	4626      	mov	r6, r4
 802c162:	2e00      	cmp	r6, #0
 802c164:	d140      	bne.n	802c1e8 <_malloc_r+0xcc>
 802c166:	6823      	ldr	r3, [r4, #0]
 802c168:	4631      	mov	r1, r6
 802c16a:	4638      	mov	r0, r7
 802c16c:	eb04 0803 	add.w	r8, r4, r3
 802c170:	f000 fb36 	bl	802c7e0 <_sbrk_r>
 802c174:	4580      	cmp	r8, r0
 802c176:	d13a      	bne.n	802c1ee <_malloc_r+0xd2>
 802c178:	6821      	ldr	r1, [r4, #0]
 802c17a:	3503      	adds	r5, #3
 802c17c:	1a6d      	subs	r5, r5, r1
 802c17e:	f025 0503 	bic.w	r5, r5, #3
 802c182:	3508      	adds	r5, #8
 802c184:	2d0c      	cmp	r5, #12
 802c186:	bf38      	it	cc
 802c188:	250c      	movcc	r5, #12
 802c18a:	4629      	mov	r1, r5
 802c18c:	4638      	mov	r0, r7
 802c18e:	f7ff ffa5 	bl	802c0dc <sbrk_aligned>
 802c192:	3001      	adds	r0, #1
 802c194:	d02b      	beq.n	802c1ee <_malloc_r+0xd2>
 802c196:	6823      	ldr	r3, [r4, #0]
 802c198:	442b      	add	r3, r5
 802c19a:	6023      	str	r3, [r4, #0]
 802c19c:	e00e      	b.n	802c1bc <_malloc_r+0xa0>
 802c19e:	6822      	ldr	r2, [r4, #0]
 802c1a0:	1b52      	subs	r2, r2, r5
 802c1a2:	d41e      	bmi.n	802c1e2 <_malloc_r+0xc6>
 802c1a4:	2a0b      	cmp	r2, #11
 802c1a6:	d916      	bls.n	802c1d6 <_malloc_r+0xba>
 802c1a8:	1961      	adds	r1, r4, r5
 802c1aa:	42a3      	cmp	r3, r4
 802c1ac:	6025      	str	r5, [r4, #0]
 802c1ae:	bf18      	it	ne
 802c1b0:	6059      	strne	r1, [r3, #4]
 802c1b2:	6863      	ldr	r3, [r4, #4]
 802c1b4:	bf08      	it	eq
 802c1b6:	6031      	streq	r1, [r6, #0]
 802c1b8:	5162      	str	r2, [r4, r5]
 802c1ba:	604b      	str	r3, [r1, #4]
 802c1bc:	4638      	mov	r0, r7
 802c1be:	f104 060b 	add.w	r6, r4, #11
 802c1c2:	f000 fec9 	bl	802cf58 <__malloc_unlock>
 802c1c6:	f026 0607 	bic.w	r6, r6, #7
 802c1ca:	1d23      	adds	r3, r4, #4
 802c1cc:	1af2      	subs	r2, r6, r3
 802c1ce:	d0b6      	beq.n	802c13e <_malloc_r+0x22>
 802c1d0:	1b9b      	subs	r3, r3, r6
 802c1d2:	50a3      	str	r3, [r4, r2]
 802c1d4:	e7b3      	b.n	802c13e <_malloc_r+0x22>
 802c1d6:	6862      	ldr	r2, [r4, #4]
 802c1d8:	42a3      	cmp	r3, r4
 802c1da:	bf0c      	ite	eq
 802c1dc:	6032      	streq	r2, [r6, #0]
 802c1de:	605a      	strne	r2, [r3, #4]
 802c1e0:	e7ec      	b.n	802c1bc <_malloc_r+0xa0>
 802c1e2:	4623      	mov	r3, r4
 802c1e4:	6864      	ldr	r4, [r4, #4]
 802c1e6:	e7b2      	b.n	802c14e <_malloc_r+0x32>
 802c1e8:	4634      	mov	r4, r6
 802c1ea:	6876      	ldr	r6, [r6, #4]
 802c1ec:	e7b9      	b.n	802c162 <_malloc_r+0x46>
 802c1ee:	230c      	movs	r3, #12
 802c1f0:	603b      	str	r3, [r7, #0]
 802c1f2:	4638      	mov	r0, r7
 802c1f4:	f000 feb0 	bl	802cf58 <__malloc_unlock>
 802c1f8:	e7a1      	b.n	802c13e <_malloc_r+0x22>
 802c1fa:	6025      	str	r5, [r4, #0]
 802c1fc:	e7de      	b.n	802c1bc <_malloc_r+0xa0>
 802c1fe:	bf00      	nop
 802c200:	20004288 	.word	0x20004288

0802c204 <__sfputc_r>:
 802c204:	6893      	ldr	r3, [r2, #8]
 802c206:	3b01      	subs	r3, #1
 802c208:	2b00      	cmp	r3, #0
 802c20a:	b410      	push	{r4}
 802c20c:	6093      	str	r3, [r2, #8]
 802c20e:	da08      	bge.n	802c222 <__sfputc_r+0x1e>
 802c210:	6994      	ldr	r4, [r2, #24]
 802c212:	42a3      	cmp	r3, r4
 802c214:	db01      	blt.n	802c21a <__sfputc_r+0x16>
 802c216:	290a      	cmp	r1, #10
 802c218:	d103      	bne.n	802c222 <__sfputc_r+0x1e>
 802c21a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c21e:	f000 bb53 	b.w	802c8c8 <__swbuf_r>
 802c222:	6813      	ldr	r3, [r2, #0]
 802c224:	1c58      	adds	r0, r3, #1
 802c226:	6010      	str	r0, [r2, #0]
 802c228:	7019      	strb	r1, [r3, #0]
 802c22a:	4608      	mov	r0, r1
 802c22c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802c230:	4770      	bx	lr

0802c232 <__sfputs_r>:
 802c232:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c234:	4606      	mov	r6, r0
 802c236:	460f      	mov	r7, r1
 802c238:	4614      	mov	r4, r2
 802c23a:	18d5      	adds	r5, r2, r3
 802c23c:	42ac      	cmp	r4, r5
 802c23e:	d101      	bne.n	802c244 <__sfputs_r+0x12>
 802c240:	2000      	movs	r0, #0
 802c242:	e007      	b.n	802c254 <__sfputs_r+0x22>
 802c244:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c248:	463a      	mov	r2, r7
 802c24a:	4630      	mov	r0, r6
 802c24c:	f7ff ffda 	bl	802c204 <__sfputc_r>
 802c250:	1c43      	adds	r3, r0, #1
 802c252:	d1f3      	bne.n	802c23c <__sfputs_r+0xa>
 802c254:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802c258 <_vfiprintf_r>:
 802c258:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c25c:	460d      	mov	r5, r1
 802c25e:	b09d      	sub	sp, #116	; 0x74
 802c260:	4614      	mov	r4, r2
 802c262:	4698      	mov	r8, r3
 802c264:	4606      	mov	r6, r0
 802c266:	b118      	cbz	r0, 802c270 <_vfiprintf_r+0x18>
 802c268:	6983      	ldr	r3, [r0, #24]
 802c26a:	b90b      	cbnz	r3, 802c270 <_vfiprintf_r+0x18>
 802c26c:	f000 fd68 	bl	802cd40 <__sinit>
 802c270:	4b89      	ldr	r3, [pc, #548]	; (802c498 <_vfiprintf_r+0x240>)
 802c272:	429d      	cmp	r5, r3
 802c274:	d11b      	bne.n	802c2ae <_vfiprintf_r+0x56>
 802c276:	6875      	ldr	r5, [r6, #4]
 802c278:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c27a:	07d9      	lsls	r1, r3, #31
 802c27c:	d405      	bmi.n	802c28a <_vfiprintf_r+0x32>
 802c27e:	89ab      	ldrh	r3, [r5, #12]
 802c280:	059a      	lsls	r2, r3, #22
 802c282:	d402      	bmi.n	802c28a <_vfiprintf_r+0x32>
 802c284:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c286:	f000 fdf9 	bl	802ce7c <__retarget_lock_acquire_recursive>
 802c28a:	89ab      	ldrh	r3, [r5, #12]
 802c28c:	071b      	lsls	r3, r3, #28
 802c28e:	d501      	bpl.n	802c294 <_vfiprintf_r+0x3c>
 802c290:	692b      	ldr	r3, [r5, #16]
 802c292:	b9eb      	cbnz	r3, 802c2d0 <_vfiprintf_r+0x78>
 802c294:	4629      	mov	r1, r5
 802c296:	4630      	mov	r0, r6
 802c298:	f000 fb68 	bl	802c96c <__swsetup_r>
 802c29c:	b1c0      	cbz	r0, 802c2d0 <_vfiprintf_r+0x78>
 802c29e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c2a0:	07dc      	lsls	r4, r3, #31
 802c2a2:	d50e      	bpl.n	802c2c2 <_vfiprintf_r+0x6a>
 802c2a4:	f04f 30ff 	mov.w	r0, #4294967295
 802c2a8:	b01d      	add	sp, #116	; 0x74
 802c2aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c2ae:	4b7b      	ldr	r3, [pc, #492]	; (802c49c <_vfiprintf_r+0x244>)
 802c2b0:	429d      	cmp	r5, r3
 802c2b2:	d101      	bne.n	802c2b8 <_vfiprintf_r+0x60>
 802c2b4:	68b5      	ldr	r5, [r6, #8]
 802c2b6:	e7df      	b.n	802c278 <_vfiprintf_r+0x20>
 802c2b8:	4b79      	ldr	r3, [pc, #484]	; (802c4a0 <_vfiprintf_r+0x248>)
 802c2ba:	429d      	cmp	r5, r3
 802c2bc:	bf08      	it	eq
 802c2be:	68f5      	ldreq	r5, [r6, #12]
 802c2c0:	e7da      	b.n	802c278 <_vfiprintf_r+0x20>
 802c2c2:	89ab      	ldrh	r3, [r5, #12]
 802c2c4:	0598      	lsls	r0, r3, #22
 802c2c6:	d4ed      	bmi.n	802c2a4 <_vfiprintf_r+0x4c>
 802c2c8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c2ca:	f000 fdd9 	bl	802ce80 <__retarget_lock_release_recursive>
 802c2ce:	e7e9      	b.n	802c2a4 <_vfiprintf_r+0x4c>
 802c2d0:	2300      	movs	r3, #0
 802c2d2:	9309      	str	r3, [sp, #36]	; 0x24
 802c2d4:	2320      	movs	r3, #32
 802c2d6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802c2da:	f8cd 800c 	str.w	r8, [sp, #12]
 802c2de:	2330      	movs	r3, #48	; 0x30
 802c2e0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802c4a4 <_vfiprintf_r+0x24c>
 802c2e4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802c2e8:	f04f 0901 	mov.w	r9, #1
 802c2ec:	4623      	mov	r3, r4
 802c2ee:	469a      	mov	sl, r3
 802c2f0:	f813 2b01 	ldrb.w	r2, [r3], #1
 802c2f4:	b10a      	cbz	r2, 802c2fa <_vfiprintf_r+0xa2>
 802c2f6:	2a25      	cmp	r2, #37	; 0x25
 802c2f8:	d1f9      	bne.n	802c2ee <_vfiprintf_r+0x96>
 802c2fa:	ebba 0b04 	subs.w	fp, sl, r4
 802c2fe:	d00b      	beq.n	802c318 <_vfiprintf_r+0xc0>
 802c300:	465b      	mov	r3, fp
 802c302:	4622      	mov	r2, r4
 802c304:	4629      	mov	r1, r5
 802c306:	4630      	mov	r0, r6
 802c308:	f7ff ff93 	bl	802c232 <__sfputs_r>
 802c30c:	3001      	adds	r0, #1
 802c30e:	f000 80aa 	beq.w	802c466 <_vfiprintf_r+0x20e>
 802c312:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802c314:	445a      	add	r2, fp
 802c316:	9209      	str	r2, [sp, #36]	; 0x24
 802c318:	f89a 3000 	ldrb.w	r3, [sl]
 802c31c:	2b00      	cmp	r3, #0
 802c31e:	f000 80a2 	beq.w	802c466 <_vfiprintf_r+0x20e>
 802c322:	2300      	movs	r3, #0
 802c324:	f04f 32ff 	mov.w	r2, #4294967295
 802c328:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802c32c:	f10a 0a01 	add.w	sl, sl, #1
 802c330:	9304      	str	r3, [sp, #16]
 802c332:	9307      	str	r3, [sp, #28]
 802c334:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802c338:	931a      	str	r3, [sp, #104]	; 0x68
 802c33a:	4654      	mov	r4, sl
 802c33c:	2205      	movs	r2, #5
 802c33e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c342:	4858      	ldr	r0, [pc, #352]	; (802c4a4 <_vfiprintf_r+0x24c>)
 802c344:	f7d3 ff64 	bl	8000210 <memchr>
 802c348:	9a04      	ldr	r2, [sp, #16]
 802c34a:	b9d8      	cbnz	r0, 802c384 <_vfiprintf_r+0x12c>
 802c34c:	06d1      	lsls	r1, r2, #27
 802c34e:	bf44      	itt	mi
 802c350:	2320      	movmi	r3, #32
 802c352:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c356:	0713      	lsls	r3, r2, #28
 802c358:	bf44      	itt	mi
 802c35a:	232b      	movmi	r3, #43	; 0x2b
 802c35c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802c360:	f89a 3000 	ldrb.w	r3, [sl]
 802c364:	2b2a      	cmp	r3, #42	; 0x2a
 802c366:	d015      	beq.n	802c394 <_vfiprintf_r+0x13c>
 802c368:	9a07      	ldr	r2, [sp, #28]
 802c36a:	4654      	mov	r4, sl
 802c36c:	2000      	movs	r0, #0
 802c36e:	f04f 0c0a 	mov.w	ip, #10
 802c372:	4621      	mov	r1, r4
 802c374:	f811 3b01 	ldrb.w	r3, [r1], #1
 802c378:	3b30      	subs	r3, #48	; 0x30
 802c37a:	2b09      	cmp	r3, #9
 802c37c:	d94e      	bls.n	802c41c <_vfiprintf_r+0x1c4>
 802c37e:	b1b0      	cbz	r0, 802c3ae <_vfiprintf_r+0x156>
 802c380:	9207      	str	r2, [sp, #28]
 802c382:	e014      	b.n	802c3ae <_vfiprintf_r+0x156>
 802c384:	eba0 0308 	sub.w	r3, r0, r8
 802c388:	fa09 f303 	lsl.w	r3, r9, r3
 802c38c:	4313      	orrs	r3, r2
 802c38e:	9304      	str	r3, [sp, #16]
 802c390:	46a2      	mov	sl, r4
 802c392:	e7d2      	b.n	802c33a <_vfiprintf_r+0xe2>
 802c394:	9b03      	ldr	r3, [sp, #12]
 802c396:	1d19      	adds	r1, r3, #4
 802c398:	681b      	ldr	r3, [r3, #0]
 802c39a:	9103      	str	r1, [sp, #12]
 802c39c:	2b00      	cmp	r3, #0
 802c39e:	bfbb      	ittet	lt
 802c3a0:	425b      	neglt	r3, r3
 802c3a2:	f042 0202 	orrlt.w	r2, r2, #2
 802c3a6:	9307      	strge	r3, [sp, #28]
 802c3a8:	9307      	strlt	r3, [sp, #28]
 802c3aa:	bfb8      	it	lt
 802c3ac:	9204      	strlt	r2, [sp, #16]
 802c3ae:	7823      	ldrb	r3, [r4, #0]
 802c3b0:	2b2e      	cmp	r3, #46	; 0x2e
 802c3b2:	d10c      	bne.n	802c3ce <_vfiprintf_r+0x176>
 802c3b4:	7863      	ldrb	r3, [r4, #1]
 802c3b6:	2b2a      	cmp	r3, #42	; 0x2a
 802c3b8:	d135      	bne.n	802c426 <_vfiprintf_r+0x1ce>
 802c3ba:	9b03      	ldr	r3, [sp, #12]
 802c3bc:	1d1a      	adds	r2, r3, #4
 802c3be:	681b      	ldr	r3, [r3, #0]
 802c3c0:	9203      	str	r2, [sp, #12]
 802c3c2:	2b00      	cmp	r3, #0
 802c3c4:	bfb8      	it	lt
 802c3c6:	f04f 33ff 	movlt.w	r3, #4294967295
 802c3ca:	3402      	adds	r4, #2
 802c3cc:	9305      	str	r3, [sp, #20]
 802c3ce:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802c4b4 <_vfiprintf_r+0x25c>
 802c3d2:	7821      	ldrb	r1, [r4, #0]
 802c3d4:	2203      	movs	r2, #3
 802c3d6:	4650      	mov	r0, sl
 802c3d8:	f7d3 ff1a 	bl	8000210 <memchr>
 802c3dc:	b140      	cbz	r0, 802c3f0 <_vfiprintf_r+0x198>
 802c3de:	2340      	movs	r3, #64	; 0x40
 802c3e0:	eba0 000a 	sub.w	r0, r0, sl
 802c3e4:	fa03 f000 	lsl.w	r0, r3, r0
 802c3e8:	9b04      	ldr	r3, [sp, #16]
 802c3ea:	4303      	orrs	r3, r0
 802c3ec:	3401      	adds	r4, #1
 802c3ee:	9304      	str	r3, [sp, #16]
 802c3f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 802c3f4:	482c      	ldr	r0, [pc, #176]	; (802c4a8 <_vfiprintf_r+0x250>)
 802c3f6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802c3fa:	2206      	movs	r2, #6
 802c3fc:	f7d3 ff08 	bl	8000210 <memchr>
 802c400:	2800      	cmp	r0, #0
 802c402:	d03f      	beq.n	802c484 <_vfiprintf_r+0x22c>
 802c404:	4b29      	ldr	r3, [pc, #164]	; (802c4ac <_vfiprintf_r+0x254>)
 802c406:	bb1b      	cbnz	r3, 802c450 <_vfiprintf_r+0x1f8>
 802c408:	9b03      	ldr	r3, [sp, #12]
 802c40a:	3307      	adds	r3, #7
 802c40c:	f023 0307 	bic.w	r3, r3, #7
 802c410:	3308      	adds	r3, #8
 802c412:	9303      	str	r3, [sp, #12]
 802c414:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c416:	443b      	add	r3, r7
 802c418:	9309      	str	r3, [sp, #36]	; 0x24
 802c41a:	e767      	b.n	802c2ec <_vfiprintf_r+0x94>
 802c41c:	fb0c 3202 	mla	r2, ip, r2, r3
 802c420:	460c      	mov	r4, r1
 802c422:	2001      	movs	r0, #1
 802c424:	e7a5      	b.n	802c372 <_vfiprintf_r+0x11a>
 802c426:	2300      	movs	r3, #0
 802c428:	3401      	adds	r4, #1
 802c42a:	9305      	str	r3, [sp, #20]
 802c42c:	4619      	mov	r1, r3
 802c42e:	f04f 0c0a 	mov.w	ip, #10
 802c432:	4620      	mov	r0, r4
 802c434:	f810 2b01 	ldrb.w	r2, [r0], #1
 802c438:	3a30      	subs	r2, #48	; 0x30
 802c43a:	2a09      	cmp	r2, #9
 802c43c:	d903      	bls.n	802c446 <_vfiprintf_r+0x1ee>
 802c43e:	2b00      	cmp	r3, #0
 802c440:	d0c5      	beq.n	802c3ce <_vfiprintf_r+0x176>
 802c442:	9105      	str	r1, [sp, #20]
 802c444:	e7c3      	b.n	802c3ce <_vfiprintf_r+0x176>
 802c446:	fb0c 2101 	mla	r1, ip, r1, r2
 802c44a:	4604      	mov	r4, r0
 802c44c:	2301      	movs	r3, #1
 802c44e:	e7f0      	b.n	802c432 <_vfiprintf_r+0x1da>
 802c450:	ab03      	add	r3, sp, #12
 802c452:	9300      	str	r3, [sp, #0]
 802c454:	462a      	mov	r2, r5
 802c456:	4b16      	ldr	r3, [pc, #88]	; (802c4b0 <_vfiprintf_r+0x258>)
 802c458:	a904      	add	r1, sp, #16
 802c45a:	4630      	mov	r0, r6
 802c45c:	f3af 8000 	nop.w
 802c460:	4607      	mov	r7, r0
 802c462:	1c78      	adds	r0, r7, #1
 802c464:	d1d6      	bne.n	802c414 <_vfiprintf_r+0x1bc>
 802c466:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802c468:	07d9      	lsls	r1, r3, #31
 802c46a:	d405      	bmi.n	802c478 <_vfiprintf_r+0x220>
 802c46c:	89ab      	ldrh	r3, [r5, #12]
 802c46e:	059a      	lsls	r2, r3, #22
 802c470:	d402      	bmi.n	802c478 <_vfiprintf_r+0x220>
 802c472:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802c474:	f000 fd04 	bl	802ce80 <__retarget_lock_release_recursive>
 802c478:	89ab      	ldrh	r3, [r5, #12]
 802c47a:	065b      	lsls	r3, r3, #25
 802c47c:	f53f af12 	bmi.w	802c2a4 <_vfiprintf_r+0x4c>
 802c480:	9809      	ldr	r0, [sp, #36]	; 0x24
 802c482:	e711      	b.n	802c2a8 <_vfiprintf_r+0x50>
 802c484:	ab03      	add	r3, sp, #12
 802c486:	9300      	str	r3, [sp, #0]
 802c488:	462a      	mov	r2, r5
 802c48a:	4b09      	ldr	r3, [pc, #36]	; (802c4b0 <_vfiprintf_r+0x258>)
 802c48c:	a904      	add	r1, sp, #16
 802c48e:	4630      	mov	r0, r6
 802c490:	f000 f880 	bl	802c594 <_printf_i>
 802c494:	e7e4      	b.n	802c460 <_vfiprintf_r+0x208>
 802c496:	bf00      	nop
 802c498:	08032c08 	.word	0x08032c08
 802c49c:	08032c28 	.word	0x08032c28
 802c4a0:	08032be8 	.word	0x08032be8
 802c4a4:	08032bb0 	.word	0x08032bb0
 802c4a8:	08032bba 	.word	0x08032bba
 802c4ac:	00000000 	.word	0x00000000
 802c4b0:	0802c233 	.word	0x0802c233
 802c4b4:	08032bb6 	.word	0x08032bb6

0802c4b8 <_printf_common>:
 802c4b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c4bc:	4616      	mov	r6, r2
 802c4be:	4699      	mov	r9, r3
 802c4c0:	688a      	ldr	r2, [r1, #8]
 802c4c2:	690b      	ldr	r3, [r1, #16]
 802c4c4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802c4c8:	4293      	cmp	r3, r2
 802c4ca:	bfb8      	it	lt
 802c4cc:	4613      	movlt	r3, r2
 802c4ce:	6033      	str	r3, [r6, #0]
 802c4d0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802c4d4:	4607      	mov	r7, r0
 802c4d6:	460c      	mov	r4, r1
 802c4d8:	b10a      	cbz	r2, 802c4de <_printf_common+0x26>
 802c4da:	3301      	adds	r3, #1
 802c4dc:	6033      	str	r3, [r6, #0]
 802c4de:	6823      	ldr	r3, [r4, #0]
 802c4e0:	0699      	lsls	r1, r3, #26
 802c4e2:	bf42      	ittt	mi
 802c4e4:	6833      	ldrmi	r3, [r6, #0]
 802c4e6:	3302      	addmi	r3, #2
 802c4e8:	6033      	strmi	r3, [r6, #0]
 802c4ea:	6825      	ldr	r5, [r4, #0]
 802c4ec:	f015 0506 	ands.w	r5, r5, #6
 802c4f0:	d106      	bne.n	802c500 <_printf_common+0x48>
 802c4f2:	f104 0a19 	add.w	sl, r4, #25
 802c4f6:	68e3      	ldr	r3, [r4, #12]
 802c4f8:	6832      	ldr	r2, [r6, #0]
 802c4fa:	1a9b      	subs	r3, r3, r2
 802c4fc:	42ab      	cmp	r3, r5
 802c4fe:	dc26      	bgt.n	802c54e <_printf_common+0x96>
 802c500:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802c504:	1e13      	subs	r3, r2, #0
 802c506:	6822      	ldr	r2, [r4, #0]
 802c508:	bf18      	it	ne
 802c50a:	2301      	movne	r3, #1
 802c50c:	0692      	lsls	r2, r2, #26
 802c50e:	d42b      	bmi.n	802c568 <_printf_common+0xb0>
 802c510:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c514:	4649      	mov	r1, r9
 802c516:	4638      	mov	r0, r7
 802c518:	47c0      	blx	r8
 802c51a:	3001      	adds	r0, #1
 802c51c:	d01e      	beq.n	802c55c <_printf_common+0xa4>
 802c51e:	6823      	ldr	r3, [r4, #0]
 802c520:	68e5      	ldr	r5, [r4, #12]
 802c522:	6832      	ldr	r2, [r6, #0]
 802c524:	f003 0306 	and.w	r3, r3, #6
 802c528:	2b04      	cmp	r3, #4
 802c52a:	bf08      	it	eq
 802c52c:	1aad      	subeq	r5, r5, r2
 802c52e:	68a3      	ldr	r3, [r4, #8]
 802c530:	6922      	ldr	r2, [r4, #16]
 802c532:	bf0c      	ite	eq
 802c534:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c538:	2500      	movne	r5, #0
 802c53a:	4293      	cmp	r3, r2
 802c53c:	bfc4      	itt	gt
 802c53e:	1a9b      	subgt	r3, r3, r2
 802c540:	18ed      	addgt	r5, r5, r3
 802c542:	2600      	movs	r6, #0
 802c544:	341a      	adds	r4, #26
 802c546:	42b5      	cmp	r5, r6
 802c548:	d11a      	bne.n	802c580 <_printf_common+0xc8>
 802c54a:	2000      	movs	r0, #0
 802c54c:	e008      	b.n	802c560 <_printf_common+0xa8>
 802c54e:	2301      	movs	r3, #1
 802c550:	4652      	mov	r2, sl
 802c552:	4649      	mov	r1, r9
 802c554:	4638      	mov	r0, r7
 802c556:	47c0      	blx	r8
 802c558:	3001      	adds	r0, #1
 802c55a:	d103      	bne.n	802c564 <_printf_common+0xac>
 802c55c:	f04f 30ff 	mov.w	r0, #4294967295
 802c560:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c564:	3501      	adds	r5, #1
 802c566:	e7c6      	b.n	802c4f6 <_printf_common+0x3e>
 802c568:	18e1      	adds	r1, r4, r3
 802c56a:	1c5a      	adds	r2, r3, #1
 802c56c:	2030      	movs	r0, #48	; 0x30
 802c56e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c572:	4422      	add	r2, r4
 802c574:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c578:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c57c:	3302      	adds	r3, #2
 802c57e:	e7c7      	b.n	802c510 <_printf_common+0x58>
 802c580:	2301      	movs	r3, #1
 802c582:	4622      	mov	r2, r4
 802c584:	4649      	mov	r1, r9
 802c586:	4638      	mov	r0, r7
 802c588:	47c0      	blx	r8
 802c58a:	3001      	adds	r0, #1
 802c58c:	d0e6      	beq.n	802c55c <_printf_common+0xa4>
 802c58e:	3601      	adds	r6, #1
 802c590:	e7d9      	b.n	802c546 <_printf_common+0x8e>
	...

0802c594 <_printf_i>:
 802c594:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c598:	7e0f      	ldrb	r7, [r1, #24]
 802c59a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c59c:	2f78      	cmp	r7, #120	; 0x78
 802c59e:	4691      	mov	r9, r2
 802c5a0:	4680      	mov	r8, r0
 802c5a2:	460c      	mov	r4, r1
 802c5a4:	469a      	mov	sl, r3
 802c5a6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c5aa:	d807      	bhi.n	802c5bc <_printf_i+0x28>
 802c5ac:	2f62      	cmp	r7, #98	; 0x62
 802c5ae:	d80a      	bhi.n	802c5c6 <_printf_i+0x32>
 802c5b0:	2f00      	cmp	r7, #0
 802c5b2:	f000 80d8 	beq.w	802c766 <_printf_i+0x1d2>
 802c5b6:	2f58      	cmp	r7, #88	; 0x58
 802c5b8:	f000 80a3 	beq.w	802c702 <_printf_i+0x16e>
 802c5bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c5c0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c5c4:	e03a      	b.n	802c63c <_printf_i+0xa8>
 802c5c6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c5ca:	2b15      	cmp	r3, #21
 802c5cc:	d8f6      	bhi.n	802c5bc <_printf_i+0x28>
 802c5ce:	a101      	add	r1, pc, #4	; (adr r1, 802c5d4 <_printf_i+0x40>)
 802c5d0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c5d4:	0802c62d 	.word	0x0802c62d
 802c5d8:	0802c641 	.word	0x0802c641
 802c5dc:	0802c5bd 	.word	0x0802c5bd
 802c5e0:	0802c5bd 	.word	0x0802c5bd
 802c5e4:	0802c5bd 	.word	0x0802c5bd
 802c5e8:	0802c5bd 	.word	0x0802c5bd
 802c5ec:	0802c641 	.word	0x0802c641
 802c5f0:	0802c5bd 	.word	0x0802c5bd
 802c5f4:	0802c5bd 	.word	0x0802c5bd
 802c5f8:	0802c5bd 	.word	0x0802c5bd
 802c5fc:	0802c5bd 	.word	0x0802c5bd
 802c600:	0802c74d 	.word	0x0802c74d
 802c604:	0802c671 	.word	0x0802c671
 802c608:	0802c72f 	.word	0x0802c72f
 802c60c:	0802c5bd 	.word	0x0802c5bd
 802c610:	0802c5bd 	.word	0x0802c5bd
 802c614:	0802c76f 	.word	0x0802c76f
 802c618:	0802c5bd 	.word	0x0802c5bd
 802c61c:	0802c671 	.word	0x0802c671
 802c620:	0802c5bd 	.word	0x0802c5bd
 802c624:	0802c5bd 	.word	0x0802c5bd
 802c628:	0802c737 	.word	0x0802c737
 802c62c:	682b      	ldr	r3, [r5, #0]
 802c62e:	1d1a      	adds	r2, r3, #4
 802c630:	681b      	ldr	r3, [r3, #0]
 802c632:	602a      	str	r2, [r5, #0]
 802c634:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c638:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c63c:	2301      	movs	r3, #1
 802c63e:	e0a3      	b.n	802c788 <_printf_i+0x1f4>
 802c640:	6820      	ldr	r0, [r4, #0]
 802c642:	6829      	ldr	r1, [r5, #0]
 802c644:	0606      	lsls	r6, r0, #24
 802c646:	f101 0304 	add.w	r3, r1, #4
 802c64a:	d50a      	bpl.n	802c662 <_printf_i+0xce>
 802c64c:	680e      	ldr	r6, [r1, #0]
 802c64e:	602b      	str	r3, [r5, #0]
 802c650:	2e00      	cmp	r6, #0
 802c652:	da03      	bge.n	802c65c <_printf_i+0xc8>
 802c654:	232d      	movs	r3, #45	; 0x2d
 802c656:	4276      	negs	r6, r6
 802c658:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c65c:	485e      	ldr	r0, [pc, #376]	; (802c7d8 <_printf_i+0x244>)
 802c65e:	230a      	movs	r3, #10
 802c660:	e019      	b.n	802c696 <_printf_i+0x102>
 802c662:	680e      	ldr	r6, [r1, #0]
 802c664:	602b      	str	r3, [r5, #0]
 802c666:	f010 0f40 	tst.w	r0, #64	; 0x40
 802c66a:	bf18      	it	ne
 802c66c:	b236      	sxthne	r6, r6
 802c66e:	e7ef      	b.n	802c650 <_printf_i+0xbc>
 802c670:	682b      	ldr	r3, [r5, #0]
 802c672:	6820      	ldr	r0, [r4, #0]
 802c674:	1d19      	adds	r1, r3, #4
 802c676:	6029      	str	r1, [r5, #0]
 802c678:	0601      	lsls	r1, r0, #24
 802c67a:	d501      	bpl.n	802c680 <_printf_i+0xec>
 802c67c:	681e      	ldr	r6, [r3, #0]
 802c67e:	e002      	b.n	802c686 <_printf_i+0xf2>
 802c680:	0646      	lsls	r6, r0, #25
 802c682:	d5fb      	bpl.n	802c67c <_printf_i+0xe8>
 802c684:	881e      	ldrh	r6, [r3, #0]
 802c686:	4854      	ldr	r0, [pc, #336]	; (802c7d8 <_printf_i+0x244>)
 802c688:	2f6f      	cmp	r7, #111	; 0x6f
 802c68a:	bf0c      	ite	eq
 802c68c:	2308      	moveq	r3, #8
 802c68e:	230a      	movne	r3, #10
 802c690:	2100      	movs	r1, #0
 802c692:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c696:	6865      	ldr	r5, [r4, #4]
 802c698:	60a5      	str	r5, [r4, #8]
 802c69a:	2d00      	cmp	r5, #0
 802c69c:	bfa2      	ittt	ge
 802c69e:	6821      	ldrge	r1, [r4, #0]
 802c6a0:	f021 0104 	bicge.w	r1, r1, #4
 802c6a4:	6021      	strge	r1, [r4, #0]
 802c6a6:	b90e      	cbnz	r6, 802c6ac <_printf_i+0x118>
 802c6a8:	2d00      	cmp	r5, #0
 802c6aa:	d04d      	beq.n	802c748 <_printf_i+0x1b4>
 802c6ac:	4615      	mov	r5, r2
 802c6ae:	fbb6 f1f3 	udiv	r1, r6, r3
 802c6b2:	fb03 6711 	mls	r7, r3, r1, r6
 802c6b6:	5dc7      	ldrb	r7, [r0, r7]
 802c6b8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c6bc:	4637      	mov	r7, r6
 802c6be:	42bb      	cmp	r3, r7
 802c6c0:	460e      	mov	r6, r1
 802c6c2:	d9f4      	bls.n	802c6ae <_printf_i+0x11a>
 802c6c4:	2b08      	cmp	r3, #8
 802c6c6:	d10b      	bne.n	802c6e0 <_printf_i+0x14c>
 802c6c8:	6823      	ldr	r3, [r4, #0]
 802c6ca:	07de      	lsls	r6, r3, #31
 802c6cc:	d508      	bpl.n	802c6e0 <_printf_i+0x14c>
 802c6ce:	6923      	ldr	r3, [r4, #16]
 802c6d0:	6861      	ldr	r1, [r4, #4]
 802c6d2:	4299      	cmp	r1, r3
 802c6d4:	bfde      	ittt	le
 802c6d6:	2330      	movle	r3, #48	; 0x30
 802c6d8:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c6dc:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c6e0:	1b52      	subs	r2, r2, r5
 802c6e2:	6122      	str	r2, [r4, #16]
 802c6e4:	f8cd a000 	str.w	sl, [sp]
 802c6e8:	464b      	mov	r3, r9
 802c6ea:	aa03      	add	r2, sp, #12
 802c6ec:	4621      	mov	r1, r4
 802c6ee:	4640      	mov	r0, r8
 802c6f0:	f7ff fee2 	bl	802c4b8 <_printf_common>
 802c6f4:	3001      	adds	r0, #1
 802c6f6:	d14c      	bne.n	802c792 <_printf_i+0x1fe>
 802c6f8:	f04f 30ff 	mov.w	r0, #4294967295
 802c6fc:	b004      	add	sp, #16
 802c6fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c702:	4835      	ldr	r0, [pc, #212]	; (802c7d8 <_printf_i+0x244>)
 802c704:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802c708:	6829      	ldr	r1, [r5, #0]
 802c70a:	6823      	ldr	r3, [r4, #0]
 802c70c:	f851 6b04 	ldr.w	r6, [r1], #4
 802c710:	6029      	str	r1, [r5, #0]
 802c712:	061d      	lsls	r5, r3, #24
 802c714:	d514      	bpl.n	802c740 <_printf_i+0x1ac>
 802c716:	07df      	lsls	r7, r3, #31
 802c718:	bf44      	itt	mi
 802c71a:	f043 0320 	orrmi.w	r3, r3, #32
 802c71e:	6023      	strmi	r3, [r4, #0]
 802c720:	b91e      	cbnz	r6, 802c72a <_printf_i+0x196>
 802c722:	6823      	ldr	r3, [r4, #0]
 802c724:	f023 0320 	bic.w	r3, r3, #32
 802c728:	6023      	str	r3, [r4, #0]
 802c72a:	2310      	movs	r3, #16
 802c72c:	e7b0      	b.n	802c690 <_printf_i+0xfc>
 802c72e:	6823      	ldr	r3, [r4, #0]
 802c730:	f043 0320 	orr.w	r3, r3, #32
 802c734:	6023      	str	r3, [r4, #0]
 802c736:	2378      	movs	r3, #120	; 0x78
 802c738:	4828      	ldr	r0, [pc, #160]	; (802c7dc <_printf_i+0x248>)
 802c73a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802c73e:	e7e3      	b.n	802c708 <_printf_i+0x174>
 802c740:	0659      	lsls	r1, r3, #25
 802c742:	bf48      	it	mi
 802c744:	b2b6      	uxthmi	r6, r6
 802c746:	e7e6      	b.n	802c716 <_printf_i+0x182>
 802c748:	4615      	mov	r5, r2
 802c74a:	e7bb      	b.n	802c6c4 <_printf_i+0x130>
 802c74c:	682b      	ldr	r3, [r5, #0]
 802c74e:	6826      	ldr	r6, [r4, #0]
 802c750:	6961      	ldr	r1, [r4, #20]
 802c752:	1d18      	adds	r0, r3, #4
 802c754:	6028      	str	r0, [r5, #0]
 802c756:	0635      	lsls	r5, r6, #24
 802c758:	681b      	ldr	r3, [r3, #0]
 802c75a:	d501      	bpl.n	802c760 <_printf_i+0x1cc>
 802c75c:	6019      	str	r1, [r3, #0]
 802c75e:	e002      	b.n	802c766 <_printf_i+0x1d2>
 802c760:	0670      	lsls	r0, r6, #25
 802c762:	d5fb      	bpl.n	802c75c <_printf_i+0x1c8>
 802c764:	8019      	strh	r1, [r3, #0]
 802c766:	2300      	movs	r3, #0
 802c768:	6123      	str	r3, [r4, #16]
 802c76a:	4615      	mov	r5, r2
 802c76c:	e7ba      	b.n	802c6e4 <_printf_i+0x150>
 802c76e:	682b      	ldr	r3, [r5, #0]
 802c770:	1d1a      	adds	r2, r3, #4
 802c772:	602a      	str	r2, [r5, #0]
 802c774:	681d      	ldr	r5, [r3, #0]
 802c776:	6862      	ldr	r2, [r4, #4]
 802c778:	2100      	movs	r1, #0
 802c77a:	4628      	mov	r0, r5
 802c77c:	f7d3 fd48 	bl	8000210 <memchr>
 802c780:	b108      	cbz	r0, 802c786 <_printf_i+0x1f2>
 802c782:	1b40      	subs	r0, r0, r5
 802c784:	6060      	str	r0, [r4, #4]
 802c786:	6863      	ldr	r3, [r4, #4]
 802c788:	6123      	str	r3, [r4, #16]
 802c78a:	2300      	movs	r3, #0
 802c78c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c790:	e7a8      	b.n	802c6e4 <_printf_i+0x150>
 802c792:	6923      	ldr	r3, [r4, #16]
 802c794:	462a      	mov	r2, r5
 802c796:	4649      	mov	r1, r9
 802c798:	4640      	mov	r0, r8
 802c79a:	47d0      	blx	sl
 802c79c:	3001      	adds	r0, #1
 802c79e:	d0ab      	beq.n	802c6f8 <_printf_i+0x164>
 802c7a0:	6823      	ldr	r3, [r4, #0]
 802c7a2:	079b      	lsls	r3, r3, #30
 802c7a4:	d413      	bmi.n	802c7ce <_printf_i+0x23a>
 802c7a6:	68e0      	ldr	r0, [r4, #12]
 802c7a8:	9b03      	ldr	r3, [sp, #12]
 802c7aa:	4298      	cmp	r0, r3
 802c7ac:	bfb8      	it	lt
 802c7ae:	4618      	movlt	r0, r3
 802c7b0:	e7a4      	b.n	802c6fc <_printf_i+0x168>
 802c7b2:	2301      	movs	r3, #1
 802c7b4:	4632      	mov	r2, r6
 802c7b6:	4649      	mov	r1, r9
 802c7b8:	4640      	mov	r0, r8
 802c7ba:	47d0      	blx	sl
 802c7bc:	3001      	adds	r0, #1
 802c7be:	d09b      	beq.n	802c6f8 <_printf_i+0x164>
 802c7c0:	3501      	adds	r5, #1
 802c7c2:	68e3      	ldr	r3, [r4, #12]
 802c7c4:	9903      	ldr	r1, [sp, #12]
 802c7c6:	1a5b      	subs	r3, r3, r1
 802c7c8:	42ab      	cmp	r3, r5
 802c7ca:	dcf2      	bgt.n	802c7b2 <_printf_i+0x21e>
 802c7cc:	e7eb      	b.n	802c7a6 <_printf_i+0x212>
 802c7ce:	2500      	movs	r5, #0
 802c7d0:	f104 0619 	add.w	r6, r4, #25
 802c7d4:	e7f5      	b.n	802c7c2 <_printf_i+0x22e>
 802c7d6:	bf00      	nop
 802c7d8:	08032bc1 	.word	0x08032bc1
 802c7dc:	08032bd2 	.word	0x08032bd2

0802c7e0 <_sbrk_r>:
 802c7e0:	b538      	push	{r3, r4, r5, lr}
 802c7e2:	4d06      	ldr	r5, [pc, #24]	; (802c7fc <_sbrk_r+0x1c>)
 802c7e4:	2300      	movs	r3, #0
 802c7e6:	4604      	mov	r4, r0
 802c7e8:	4608      	mov	r0, r1
 802c7ea:	602b      	str	r3, [r5, #0]
 802c7ec:	f7d5 fc74 	bl	80020d8 <_sbrk>
 802c7f0:	1c43      	adds	r3, r0, #1
 802c7f2:	d102      	bne.n	802c7fa <_sbrk_r+0x1a>
 802c7f4:	682b      	ldr	r3, [r5, #0]
 802c7f6:	b103      	cbz	r3, 802c7fa <_sbrk_r+0x1a>
 802c7f8:	6023      	str	r3, [r4, #0]
 802c7fa:	bd38      	pop	{r3, r4, r5, pc}
 802c7fc:	2000442c 	.word	0x2000442c

0802c800 <_raise_r>:
 802c800:	291f      	cmp	r1, #31
 802c802:	b538      	push	{r3, r4, r5, lr}
 802c804:	4604      	mov	r4, r0
 802c806:	460d      	mov	r5, r1
 802c808:	d904      	bls.n	802c814 <_raise_r+0x14>
 802c80a:	2316      	movs	r3, #22
 802c80c:	6003      	str	r3, [r0, #0]
 802c80e:	f04f 30ff 	mov.w	r0, #4294967295
 802c812:	bd38      	pop	{r3, r4, r5, pc}
 802c814:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802c816:	b112      	cbz	r2, 802c81e <_raise_r+0x1e>
 802c818:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802c81c:	b94b      	cbnz	r3, 802c832 <_raise_r+0x32>
 802c81e:	4620      	mov	r0, r4
 802c820:	f000 f830 	bl	802c884 <_getpid_r>
 802c824:	462a      	mov	r2, r5
 802c826:	4601      	mov	r1, r0
 802c828:	4620      	mov	r0, r4
 802c82a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802c82e:	f000 b817 	b.w	802c860 <_kill_r>
 802c832:	2b01      	cmp	r3, #1
 802c834:	d00a      	beq.n	802c84c <_raise_r+0x4c>
 802c836:	1c59      	adds	r1, r3, #1
 802c838:	d103      	bne.n	802c842 <_raise_r+0x42>
 802c83a:	2316      	movs	r3, #22
 802c83c:	6003      	str	r3, [r0, #0]
 802c83e:	2001      	movs	r0, #1
 802c840:	e7e7      	b.n	802c812 <_raise_r+0x12>
 802c842:	2400      	movs	r4, #0
 802c844:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802c848:	4628      	mov	r0, r5
 802c84a:	4798      	blx	r3
 802c84c:	2000      	movs	r0, #0
 802c84e:	e7e0      	b.n	802c812 <_raise_r+0x12>

0802c850 <raise>:
 802c850:	4b02      	ldr	r3, [pc, #8]	; (802c85c <raise+0xc>)
 802c852:	4601      	mov	r1, r0
 802c854:	6818      	ldr	r0, [r3, #0]
 802c856:	f7ff bfd3 	b.w	802c800 <_raise_r>
 802c85a:	bf00      	nop
 802c85c:	200000bc 	.word	0x200000bc

0802c860 <_kill_r>:
 802c860:	b538      	push	{r3, r4, r5, lr}
 802c862:	4d07      	ldr	r5, [pc, #28]	; (802c880 <_kill_r+0x20>)
 802c864:	2300      	movs	r3, #0
 802c866:	4604      	mov	r4, r0
 802c868:	4608      	mov	r0, r1
 802c86a:	4611      	mov	r1, r2
 802c86c:	602b      	str	r3, [r5, #0]
 802c86e:	f7d5 fbab 	bl	8001fc8 <_kill>
 802c872:	1c43      	adds	r3, r0, #1
 802c874:	d102      	bne.n	802c87c <_kill_r+0x1c>
 802c876:	682b      	ldr	r3, [r5, #0]
 802c878:	b103      	cbz	r3, 802c87c <_kill_r+0x1c>
 802c87a:	6023      	str	r3, [r4, #0]
 802c87c:	bd38      	pop	{r3, r4, r5, pc}
 802c87e:	bf00      	nop
 802c880:	2000442c 	.word	0x2000442c

0802c884 <_getpid_r>:
 802c884:	f7d5 bb98 	b.w	8001fb8 <_getpid>

0802c888 <_vsiprintf_r>:
 802c888:	b500      	push	{lr}
 802c88a:	b09b      	sub	sp, #108	; 0x6c
 802c88c:	9100      	str	r1, [sp, #0]
 802c88e:	9104      	str	r1, [sp, #16]
 802c890:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 802c894:	9105      	str	r1, [sp, #20]
 802c896:	9102      	str	r1, [sp, #8]
 802c898:	4905      	ldr	r1, [pc, #20]	; (802c8b0 <_vsiprintf_r+0x28>)
 802c89a:	9103      	str	r1, [sp, #12]
 802c89c:	4669      	mov	r1, sp
 802c89e:	f000 fbeb 	bl	802d078 <_svfiprintf_r>
 802c8a2:	9b00      	ldr	r3, [sp, #0]
 802c8a4:	2200      	movs	r2, #0
 802c8a6:	701a      	strb	r2, [r3, #0]
 802c8a8:	b01b      	add	sp, #108	; 0x6c
 802c8aa:	f85d fb04 	ldr.w	pc, [sp], #4
 802c8ae:	bf00      	nop
 802c8b0:	ffff0208 	.word	0xffff0208

0802c8b4 <vsiprintf>:
 802c8b4:	4613      	mov	r3, r2
 802c8b6:	460a      	mov	r2, r1
 802c8b8:	4601      	mov	r1, r0
 802c8ba:	4802      	ldr	r0, [pc, #8]	; (802c8c4 <vsiprintf+0x10>)
 802c8bc:	6800      	ldr	r0, [r0, #0]
 802c8be:	f7ff bfe3 	b.w	802c888 <_vsiprintf_r>
 802c8c2:	bf00      	nop
 802c8c4:	200000bc 	.word	0x200000bc

0802c8c8 <__swbuf_r>:
 802c8c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c8ca:	460e      	mov	r6, r1
 802c8cc:	4614      	mov	r4, r2
 802c8ce:	4605      	mov	r5, r0
 802c8d0:	b118      	cbz	r0, 802c8da <__swbuf_r+0x12>
 802c8d2:	6983      	ldr	r3, [r0, #24]
 802c8d4:	b90b      	cbnz	r3, 802c8da <__swbuf_r+0x12>
 802c8d6:	f000 fa33 	bl	802cd40 <__sinit>
 802c8da:	4b21      	ldr	r3, [pc, #132]	; (802c960 <__swbuf_r+0x98>)
 802c8dc:	429c      	cmp	r4, r3
 802c8de:	d12b      	bne.n	802c938 <__swbuf_r+0x70>
 802c8e0:	686c      	ldr	r4, [r5, #4]
 802c8e2:	69a3      	ldr	r3, [r4, #24]
 802c8e4:	60a3      	str	r3, [r4, #8]
 802c8e6:	89a3      	ldrh	r3, [r4, #12]
 802c8e8:	071a      	lsls	r2, r3, #28
 802c8ea:	d52f      	bpl.n	802c94c <__swbuf_r+0x84>
 802c8ec:	6923      	ldr	r3, [r4, #16]
 802c8ee:	b36b      	cbz	r3, 802c94c <__swbuf_r+0x84>
 802c8f0:	6923      	ldr	r3, [r4, #16]
 802c8f2:	6820      	ldr	r0, [r4, #0]
 802c8f4:	1ac0      	subs	r0, r0, r3
 802c8f6:	6963      	ldr	r3, [r4, #20]
 802c8f8:	b2f6      	uxtb	r6, r6
 802c8fa:	4283      	cmp	r3, r0
 802c8fc:	4637      	mov	r7, r6
 802c8fe:	dc04      	bgt.n	802c90a <__swbuf_r+0x42>
 802c900:	4621      	mov	r1, r4
 802c902:	4628      	mov	r0, r5
 802c904:	f000 f988 	bl	802cc18 <_fflush_r>
 802c908:	bb30      	cbnz	r0, 802c958 <__swbuf_r+0x90>
 802c90a:	68a3      	ldr	r3, [r4, #8]
 802c90c:	3b01      	subs	r3, #1
 802c90e:	60a3      	str	r3, [r4, #8]
 802c910:	6823      	ldr	r3, [r4, #0]
 802c912:	1c5a      	adds	r2, r3, #1
 802c914:	6022      	str	r2, [r4, #0]
 802c916:	701e      	strb	r6, [r3, #0]
 802c918:	6963      	ldr	r3, [r4, #20]
 802c91a:	3001      	adds	r0, #1
 802c91c:	4283      	cmp	r3, r0
 802c91e:	d004      	beq.n	802c92a <__swbuf_r+0x62>
 802c920:	89a3      	ldrh	r3, [r4, #12]
 802c922:	07db      	lsls	r3, r3, #31
 802c924:	d506      	bpl.n	802c934 <__swbuf_r+0x6c>
 802c926:	2e0a      	cmp	r6, #10
 802c928:	d104      	bne.n	802c934 <__swbuf_r+0x6c>
 802c92a:	4621      	mov	r1, r4
 802c92c:	4628      	mov	r0, r5
 802c92e:	f000 f973 	bl	802cc18 <_fflush_r>
 802c932:	b988      	cbnz	r0, 802c958 <__swbuf_r+0x90>
 802c934:	4638      	mov	r0, r7
 802c936:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c938:	4b0a      	ldr	r3, [pc, #40]	; (802c964 <__swbuf_r+0x9c>)
 802c93a:	429c      	cmp	r4, r3
 802c93c:	d101      	bne.n	802c942 <__swbuf_r+0x7a>
 802c93e:	68ac      	ldr	r4, [r5, #8]
 802c940:	e7cf      	b.n	802c8e2 <__swbuf_r+0x1a>
 802c942:	4b09      	ldr	r3, [pc, #36]	; (802c968 <__swbuf_r+0xa0>)
 802c944:	429c      	cmp	r4, r3
 802c946:	bf08      	it	eq
 802c948:	68ec      	ldreq	r4, [r5, #12]
 802c94a:	e7ca      	b.n	802c8e2 <__swbuf_r+0x1a>
 802c94c:	4621      	mov	r1, r4
 802c94e:	4628      	mov	r0, r5
 802c950:	f000 f80c 	bl	802c96c <__swsetup_r>
 802c954:	2800      	cmp	r0, #0
 802c956:	d0cb      	beq.n	802c8f0 <__swbuf_r+0x28>
 802c958:	f04f 37ff 	mov.w	r7, #4294967295
 802c95c:	e7ea      	b.n	802c934 <__swbuf_r+0x6c>
 802c95e:	bf00      	nop
 802c960:	08032c08 	.word	0x08032c08
 802c964:	08032c28 	.word	0x08032c28
 802c968:	08032be8 	.word	0x08032be8

0802c96c <__swsetup_r>:
 802c96c:	4b32      	ldr	r3, [pc, #200]	; (802ca38 <__swsetup_r+0xcc>)
 802c96e:	b570      	push	{r4, r5, r6, lr}
 802c970:	681d      	ldr	r5, [r3, #0]
 802c972:	4606      	mov	r6, r0
 802c974:	460c      	mov	r4, r1
 802c976:	b125      	cbz	r5, 802c982 <__swsetup_r+0x16>
 802c978:	69ab      	ldr	r3, [r5, #24]
 802c97a:	b913      	cbnz	r3, 802c982 <__swsetup_r+0x16>
 802c97c:	4628      	mov	r0, r5
 802c97e:	f000 f9df 	bl	802cd40 <__sinit>
 802c982:	4b2e      	ldr	r3, [pc, #184]	; (802ca3c <__swsetup_r+0xd0>)
 802c984:	429c      	cmp	r4, r3
 802c986:	d10f      	bne.n	802c9a8 <__swsetup_r+0x3c>
 802c988:	686c      	ldr	r4, [r5, #4]
 802c98a:	89a3      	ldrh	r3, [r4, #12]
 802c98c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c990:	0719      	lsls	r1, r3, #28
 802c992:	d42c      	bmi.n	802c9ee <__swsetup_r+0x82>
 802c994:	06dd      	lsls	r5, r3, #27
 802c996:	d411      	bmi.n	802c9bc <__swsetup_r+0x50>
 802c998:	2309      	movs	r3, #9
 802c99a:	6033      	str	r3, [r6, #0]
 802c99c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c9a0:	81a3      	strh	r3, [r4, #12]
 802c9a2:	f04f 30ff 	mov.w	r0, #4294967295
 802c9a6:	e03e      	b.n	802ca26 <__swsetup_r+0xba>
 802c9a8:	4b25      	ldr	r3, [pc, #148]	; (802ca40 <__swsetup_r+0xd4>)
 802c9aa:	429c      	cmp	r4, r3
 802c9ac:	d101      	bne.n	802c9b2 <__swsetup_r+0x46>
 802c9ae:	68ac      	ldr	r4, [r5, #8]
 802c9b0:	e7eb      	b.n	802c98a <__swsetup_r+0x1e>
 802c9b2:	4b24      	ldr	r3, [pc, #144]	; (802ca44 <__swsetup_r+0xd8>)
 802c9b4:	429c      	cmp	r4, r3
 802c9b6:	bf08      	it	eq
 802c9b8:	68ec      	ldreq	r4, [r5, #12]
 802c9ba:	e7e6      	b.n	802c98a <__swsetup_r+0x1e>
 802c9bc:	0758      	lsls	r0, r3, #29
 802c9be:	d512      	bpl.n	802c9e6 <__swsetup_r+0x7a>
 802c9c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c9c2:	b141      	cbz	r1, 802c9d6 <__swsetup_r+0x6a>
 802c9c4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c9c8:	4299      	cmp	r1, r3
 802c9ca:	d002      	beq.n	802c9d2 <__swsetup_r+0x66>
 802c9cc:	4630      	mov	r0, r6
 802c9ce:	f7ff fb39 	bl	802c044 <_free_r>
 802c9d2:	2300      	movs	r3, #0
 802c9d4:	6363      	str	r3, [r4, #52]	; 0x34
 802c9d6:	89a3      	ldrh	r3, [r4, #12]
 802c9d8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c9dc:	81a3      	strh	r3, [r4, #12]
 802c9de:	2300      	movs	r3, #0
 802c9e0:	6063      	str	r3, [r4, #4]
 802c9e2:	6923      	ldr	r3, [r4, #16]
 802c9e4:	6023      	str	r3, [r4, #0]
 802c9e6:	89a3      	ldrh	r3, [r4, #12]
 802c9e8:	f043 0308 	orr.w	r3, r3, #8
 802c9ec:	81a3      	strh	r3, [r4, #12]
 802c9ee:	6923      	ldr	r3, [r4, #16]
 802c9f0:	b94b      	cbnz	r3, 802ca06 <__swsetup_r+0x9a>
 802c9f2:	89a3      	ldrh	r3, [r4, #12]
 802c9f4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c9f8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c9fc:	d003      	beq.n	802ca06 <__swsetup_r+0x9a>
 802c9fe:	4621      	mov	r1, r4
 802ca00:	4630      	mov	r0, r6
 802ca02:	f000 fa63 	bl	802cecc <__smakebuf_r>
 802ca06:	89a0      	ldrh	r0, [r4, #12]
 802ca08:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ca0c:	f010 0301 	ands.w	r3, r0, #1
 802ca10:	d00a      	beq.n	802ca28 <__swsetup_r+0xbc>
 802ca12:	2300      	movs	r3, #0
 802ca14:	60a3      	str	r3, [r4, #8]
 802ca16:	6963      	ldr	r3, [r4, #20]
 802ca18:	425b      	negs	r3, r3
 802ca1a:	61a3      	str	r3, [r4, #24]
 802ca1c:	6923      	ldr	r3, [r4, #16]
 802ca1e:	b943      	cbnz	r3, 802ca32 <__swsetup_r+0xc6>
 802ca20:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ca24:	d1ba      	bne.n	802c99c <__swsetup_r+0x30>
 802ca26:	bd70      	pop	{r4, r5, r6, pc}
 802ca28:	0781      	lsls	r1, r0, #30
 802ca2a:	bf58      	it	pl
 802ca2c:	6963      	ldrpl	r3, [r4, #20]
 802ca2e:	60a3      	str	r3, [r4, #8]
 802ca30:	e7f4      	b.n	802ca1c <__swsetup_r+0xb0>
 802ca32:	2000      	movs	r0, #0
 802ca34:	e7f7      	b.n	802ca26 <__swsetup_r+0xba>
 802ca36:	bf00      	nop
 802ca38:	200000bc 	.word	0x200000bc
 802ca3c:	08032c08 	.word	0x08032c08
 802ca40:	08032c28 	.word	0x08032c28
 802ca44:	08032be8 	.word	0x08032be8

0802ca48 <__register_exitproc>:
 802ca48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ca4c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802cb08 <__register_exitproc+0xc0>
 802ca50:	4606      	mov	r6, r0
 802ca52:	f8d8 0000 	ldr.w	r0, [r8]
 802ca56:	461f      	mov	r7, r3
 802ca58:	460d      	mov	r5, r1
 802ca5a:	4691      	mov	r9, r2
 802ca5c:	f000 fa0e 	bl	802ce7c <__retarget_lock_acquire_recursive>
 802ca60:	4b25      	ldr	r3, [pc, #148]	; (802caf8 <__register_exitproc+0xb0>)
 802ca62:	681c      	ldr	r4, [r3, #0]
 802ca64:	b934      	cbnz	r4, 802ca74 <__register_exitproc+0x2c>
 802ca66:	4c25      	ldr	r4, [pc, #148]	; (802cafc <__register_exitproc+0xb4>)
 802ca68:	601c      	str	r4, [r3, #0]
 802ca6a:	4b25      	ldr	r3, [pc, #148]	; (802cb00 <__register_exitproc+0xb8>)
 802ca6c:	b113      	cbz	r3, 802ca74 <__register_exitproc+0x2c>
 802ca6e:	681b      	ldr	r3, [r3, #0]
 802ca70:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802ca74:	6863      	ldr	r3, [r4, #4]
 802ca76:	2b1f      	cmp	r3, #31
 802ca78:	dd07      	ble.n	802ca8a <__register_exitproc+0x42>
 802ca7a:	f8d8 0000 	ldr.w	r0, [r8]
 802ca7e:	f000 f9ff 	bl	802ce80 <__retarget_lock_release_recursive>
 802ca82:	f04f 30ff 	mov.w	r0, #4294967295
 802ca86:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ca8a:	b34e      	cbz	r6, 802cae0 <__register_exitproc+0x98>
 802ca8c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802ca90:	b988      	cbnz	r0, 802cab6 <__register_exitproc+0x6e>
 802ca92:	4b1c      	ldr	r3, [pc, #112]	; (802cb04 <__register_exitproc+0xbc>)
 802ca94:	b923      	cbnz	r3, 802caa0 <__register_exitproc+0x58>
 802ca96:	f8d8 0000 	ldr.w	r0, [r8]
 802ca9a:	f000 f9f0 	bl	802ce7e <__retarget_lock_release>
 802ca9e:	e7f0      	b.n	802ca82 <__register_exitproc+0x3a>
 802caa0:	f44f 7084 	mov.w	r0, #264	; 0x108
 802caa4:	f7ff fa8e 	bl	802bfc4 <malloc>
 802caa8:	2800      	cmp	r0, #0
 802caaa:	d0f4      	beq.n	802ca96 <__register_exitproc+0x4e>
 802caac:	2300      	movs	r3, #0
 802caae:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802cab2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802cab6:	6863      	ldr	r3, [r4, #4]
 802cab8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802cabc:	2201      	movs	r2, #1
 802cabe:	409a      	lsls	r2, r3
 802cac0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802cac4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802cac8:	4313      	orrs	r3, r2
 802caca:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802cace:	2e02      	cmp	r6, #2
 802cad0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802cad4:	bf02      	ittt	eq
 802cad6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802cada:	4313      	orreq	r3, r2
 802cadc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802cae0:	6863      	ldr	r3, [r4, #4]
 802cae2:	f8d8 0000 	ldr.w	r0, [r8]
 802cae6:	1c5a      	adds	r2, r3, #1
 802cae8:	3302      	adds	r3, #2
 802caea:	6062      	str	r2, [r4, #4]
 802caec:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802caf0:	f000 f9c6 	bl	802ce80 <__retarget_lock_release_recursive>
 802caf4:	2000      	movs	r0, #0
 802caf6:	e7c6      	b.n	802ca86 <__register_exitproc+0x3e>
 802caf8:	20004424 	.word	0x20004424
 802cafc:	20004398 	.word	0x20004398
 802cb00:	08032be4 	.word	0x08032be4
 802cb04:	0802bfc5 	.word	0x0802bfc5
 802cb08:	20000120 	.word	0x20000120

0802cb0c <__sflush_r>:
 802cb0c:	898a      	ldrh	r2, [r1, #12]
 802cb0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cb12:	4605      	mov	r5, r0
 802cb14:	0710      	lsls	r0, r2, #28
 802cb16:	460c      	mov	r4, r1
 802cb18:	d458      	bmi.n	802cbcc <__sflush_r+0xc0>
 802cb1a:	684b      	ldr	r3, [r1, #4]
 802cb1c:	2b00      	cmp	r3, #0
 802cb1e:	dc05      	bgt.n	802cb2c <__sflush_r+0x20>
 802cb20:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802cb22:	2b00      	cmp	r3, #0
 802cb24:	dc02      	bgt.n	802cb2c <__sflush_r+0x20>
 802cb26:	2000      	movs	r0, #0
 802cb28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cb2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802cb2e:	2e00      	cmp	r6, #0
 802cb30:	d0f9      	beq.n	802cb26 <__sflush_r+0x1a>
 802cb32:	2300      	movs	r3, #0
 802cb34:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802cb38:	682f      	ldr	r7, [r5, #0]
 802cb3a:	602b      	str	r3, [r5, #0]
 802cb3c:	d032      	beq.n	802cba4 <__sflush_r+0x98>
 802cb3e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802cb40:	89a3      	ldrh	r3, [r4, #12]
 802cb42:	075a      	lsls	r2, r3, #29
 802cb44:	d505      	bpl.n	802cb52 <__sflush_r+0x46>
 802cb46:	6863      	ldr	r3, [r4, #4]
 802cb48:	1ac0      	subs	r0, r0, r3
 802cb4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802cb4c:	b10b      	cbz	r3, 802cb52 <__sflush_r+0x46>
 802cb4e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802cb50:	1ac0      	subs	r0, r0, r3
 802cb52:	2300      	movs	r3, #0
 802cb54:	4602      	mov	r2, r0
 802cb56:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802cb58:	6a21      	ldr	r1, [r4, #32]
 802cb5a:	4628      	mov	r0, r5
 802cb5c:	47b0      	blx	r6
 802cb5e:	1c43      	adds	r3, r0, #1
 802cb60:	89a3      	ldrh	r3, [r4, #12]
 802cb62:	d106      	bne.n	802cb72 <__sflush_r+0x66>
 802cb64:	6829      	ldr	r1, [r5, #0]
 802cb66:	291d      	cmp	r1, #29
 802cb68:	d82c      	bhi.n	802cbc4 <__sflush_r+0xb8>
 802cb6a:	4a2a      	ldr	r2, [pc, #168]	; (802cc14 <__sflush_r+0x108>)
 802cb6c:	40ca      	lsrs	r2, r1
 802cb6e:	07d6      	lsls	r6, r2, #31
 802cb70:	d528      	bpl.n	802cbc4 <__sflush_r+0xb8>
 802cb72:	2200      	movs	r2, #0
 802cb74:	6062      	str	r2, [r4, #4]
 802cb76:	04d9      	lsls	r1, r3, #19
 802cb78:	6922      	ldr	r2, [r4, #16]
 802cb7a:	6022      	str	r2, [r4, #0]
 802cb7c:	d504      	bpl.n	802cb88 <__sflush_r+0x7c>
 802cb7e:	1c42      	adds	r2, r0, #1
 802cb80:	d101      	bne.n	802cb86 <__sflush_r+0x7a>
 802cb82:	682b      	ldr	r3, [r5, #0]
 802cb84:	b903      	cbnz	r3, 802cb88 <__sflush_r+0x7c>
 802cb86:	6560      	str	r0, [r4, #84]	; 0x54
 802cb88:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802cb8a:	602f      	str	r7, [r5, #0]
 802cb8c:	2900      	cmp	r1, #0
 802cb8e:	d0ca      	beq.n	802cb26 <__sflush_r+0x1a>
 802cb90:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802cb94:	4299      	cmp	r1, r3
 802cb96:	d002      	beq.n	802cb9e <__sflush_r+0x92>
 802cb98:	4628      	mov	r0, r5
 802cb9a:	f7ff fa53 	bl	802c044 <_free_r>
 802cb9e:	2000      	movs	r0, #0
 802cba0:	6360      	str	r0, [r4, #52]	; 0x34
 802cba2:	e7c1      	b.n	802cb28 <__sflush_r+0x1c>
 802cba4:	6a21      	ldr	r1, [r4, #32]
 802cba6:	2301      	movs	r3, #1
 802cba8:	4628      	mov	r0, r5
 802cbaa:	47b0      	blx	r6
 802cbac:	1c41      	adds	r1, r0, #1
 802cbae:	d1c7      	bne.n	802cb40 <__sflush_r+0x34>
 802cbb0:	682b      	ldr	r3, [r5, #0]
 802cbb2:	2b00      	cmp	r3, #0
 802cbb4:	d0c4      	beq.n	802cb40 <__sflush_r+0x34>
 802cbb6:	2b1d      	cmp	r3, #29
 802cbb8:	d001      	beq.n	802cbbe <__sflush_r+0xb2>
 802cbba:	2b16      	cmp	r3, #22
 802cbbc:	d101      	bne.n	802cbc2 <__sflush_r+0xb6>
 802cbbe:	602f      	str	r7, [r5, #0]
 802cbc0:	e7b1      	b.n	802cb26 <__sflush_r+0x1a>
 802cbc2:	89a3      	ldrh	r3, [r4, #12]
 802cbc4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802cbc8:	81a3      	strh	r3, [r4, #12]
 802cbca:	e7ad      	b.n	802cb28 <__sflush_r+0x1c>
 802cbcc:	690f      	ldr	r7, [r1, #16]
 802cbce:	2f00      	cmp	r7, #0
 802cbd0:	d0a9      	beq.n	802cb26 <__sflush_r+0x1a>
 802cbd2:	0793      	lsls	r3, r2, #30
 802cbd4:	680e      	ldr	r6, [r1, #0]
 802cbd6:	bf08      	it	eq
 802cbd8:	694b      	ldreq	r3, [r1, #20]
 802cbda:	600f      	str	r7, [r1, #0]
 802cbdc:	bf18      	it	ne
 802cbde:	2300      	movne	r3, #0
 802cbe0:	eba6 0807 	sub.w	r8, r6, r7
 802cbe4:	608b      	str	r3, [r1, #8]
 802cbe6:	f1b8 0f00 	cmp.w	r8, #0
 802cbea:	dd9c      	ble.n	802cb26 <__sflush_r+0x1a>
 802cbec:	6a21      	ldr	r1, [r4, #32]
 802cbee:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802cbf0:	4643      	mov	r3, r8
 802cbf2:	463a      	mov	r2, r7
 802cbf4:	4628      	mov	r0, r5
 802cbf6:	47b0      	blx	r6
 802cbf8:	2800      	cmp	r0, #0
 802cbfa:	dc06      	bgt.n	802cc0a <__sflush_r+0xfe>
 802cbfc:	89a3      	ldrh	r3, [r4, #12]
 802cbfe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802cc02:	81a3      	strh	r3, [r4, #12]
 802cc04:	f04f 30ff 	mov.w	r0, #4294967295
 802cc08:	e78e      	b.n	802cb28 <__sflush_r+0x1c>
 802cc0a:	4407      	add	r7, r0
 802cc0c:	eba8 0800 	sub.w	r8, r8, r0
 802cc10:	e7e9      	b.n	802cbe6 <__sflush_r+0xda>
 802cc12:	bf00      	nop
 802cc14:	20400001 	.word	0x20400001

0802cc18 <_fflush_r>:
 802cc18:	b538      	push	{r3, r4, r5, lr}
 802cc1a:	690b      	ldr	r3, [r1, #16]
 802cc1c:	4605      	mov	r5, r0
 802cc1e:	460c      	mov	r4, r1
 802cc20:	b913      	cbnz	r3, 802cc28 <_fflush_r+0x10>
 802cc22:	2500      	movs	r5, #0
 802cc24:	4628      	mov	r0, r5
 802cc26:	bd38      	pop	{r3, r4, r5, pc}
 802cc28:	b118      	cbz	r0, 802cc32 <_fflush_r+0x1a>
 802cc2a:	6983      	ldr	r3, [r0, #24]
 802cc2c:	b90b      	cbnz	r3, 802cc32 <_fflush_r+0x1a>
 802cc2e:	f000 f887 	bl	802cd40 <__sinit>
 802cc32:	4b14      	ldr	r3, [pc, #80]	; (802cc84 <_fflush_r+0x6c>)
 802cc34:	429c      	cmp	r4, r3
 802cc36:	d11b      	bne.n	802cc70 <_fflush_r+0x58>
 802cc38:	686c      	ldr	r4, [r5, #4]
 802cc3a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cc3e:	2b00      	cmp	r3, #0
 802cc40:	d0ef      	beq.n	802cc22 <_fflush_r+0xa>
 802cc42:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802cc44:	07d0      	lsls	r0, r2, #31
 802cc46:	d404      	bmi.n	802cc52 <_fflush_r+0x3a>
 802cc48:	0599      	lsls	r1, r3, #22
 802cc4a:	d402      	bmi.n	802cc52 <_fflush_r+0x3a>
 802cc4c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802cc4e:	f000 f915 	bl	802ce7c <__retarget_lock_acquire_recursive>
 802cc52:	4628      	mov	r0, r5
 802cc54:	4621      	mov	r1, r4
 802cc56:	f7ff ff59 	bl	802cb0c <__sflush_r>
 802cc5a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802cc5c:	07da      	lsls	r2, r3, #31
 802cc5e:	4605      	mov	r5, r0
 802cc60:	d4e0      	bmi.n	802cc24 <_fflush_r+0xc>
 802cc62:	89a3      	ldrh	r3, [r4, #12]
 802cc64:	059b      	lsls	r3, r3, #22
 802cc66:	d4dd      	bmi.n	802cc24 <_fflush_r+0xc>
 802cc68:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802cc6a:	f000 f909 	bl	802ce80 <__retarget_lock_release_recursive>
 802cc6e:	e7d9      	b.n	802cc24 <_fflush_r+0xc>
 802cc70:	4b05      	ldr	r3, [pc, #20]	; (802cc88 <_fflush_r+0x70>)
 802cc72:	429c      	cmp	r4, r3
 802cc74:	d101      	bne.n	802cc7a <_fflush_r+0x62>
 802cc76:	68ac      	ldr	r4, [r5, #8]
 802cc78:	e7df      	b.n	802cc3a <_fflush_r+0x22>
 802cc7a:	4b04      	ldr	r3, [pc, #16]	; (802cc8c <_fflush_r+0x74>)
 802cc7c:	429c      	cmp	r4, r3
 802cc7e:	bf08      	it	eq
 802cc80:	68ec      	ldreq	r4, [r5, #12]
 802cc82:	e7da      	b.n	802cc3a <_fflush_r+0x22>
 802cc84:	08032c08 	.word	0x08032c08
 802cc88:	08032c28 	.word	0x08032c28
 802cc8c:	08032be8 	.word	0x08032be8

0802cc90 <std>:
 802cc90:	2300      	movs	r3, #0
 802cc92:	b510      	push	{r4, lr}
 802cc94:	4604      	mov	r4, r0
 802cc96:	e9c0 3300 	strd	r3, r3, [r0]
 802cc9a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802cc9e:	6083      	str	r3, [r0, #8]
 802cca0:	8181      	strh	r1, [r0, #12]
 802cca2:	6643      	str	r3, [r0, #100]	; 0x64
 802cca4:	81c2      	strh	r2, [r0, #14]
 802cca6:	6183      	str	r3, [r0, #24]
 802cca8:	4619      	mov	r1, r3
 802ccaa:	2208      	movs	r2, #8
 802ccac:	305c      	adds	r0, #92	; 0x5c
 802ccae:	f7ff f9c1 	bl	802c034 <memset>
 802ccb2:	4b05      	ldr	r3, [pc, #20]	; (802ccc8 <std+0x38>)
 802ccb4:	6263      	str	r3, [r4, #36]	; 0x24
 802ccb6:	4b05      	ldr	r3, [pc, #20]	; (802cccc <std+0x3c>)
 802ccb8:	62a3      	str	r3, [r4, #40]	; 0x28
 802ccba:	4b05      	ldr	r3, [pc, #20]	; (802ccd0 <std+0x40>)
 802ccbc:	62e3      	str	r3, [r4, #44]	; 0x2c
 802ccbe:	4b05      	ldr	r3, [pc, #20]	; (802ccd4 <std+0x44>)
 802ccc0:	6224      	str	r4, [r4, #32]
 802ccc2:	6323      	str	r3, [r4, #48]	; 0x30
 802ccc4:	bd10      	pop	{r4, pc}
 802ccc6:	bf00      	nop
 802ccc8:	0802d279 	.word	0x0802d279
 802cccc:	0802d29b 	.word	0x0802d29b
 802ccd0:	0802d2d3 	.word	0x0802d2d3
 802ccd4:	0802d2f7 	.word	0x0802d2f7

0802ccd8 <_cleanup_r>:
 802ccd8:	4901      	ldr	r1, [pc, #4]	; (802cce0 <_cleanup_r+0x8>)
 802ccda:	f000 b8af 	b.w	802ce3c <_fwalk_reent>
 802ccde:	bf00      	nop
 802cce0:	0802cc19 	.word	0x0802cc19

0802cce4 <__sfmoreglue>:
 802cce4:	b570      	push	{r4, r5, r6, lr}
 802cce6:	2268      	movs	r2, #104	; 0x68
 802cce8:	1e4d      	subs	r5, r1, #1
 802ccea:	4355      	muls	r5, r2
 802ccec:	460e      	mov	r6, r1
 802ccee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802ccf2:	f7ff fa13 	bl	802c11c <_malloc_r>
 802ccf6:	4604      	mov	r4, r0
 802ccf8:	b140      	cbz	r0, 802cd0c <__sfmoreglue+0x28>
 802ccfa:	2100      	movs	r1, #0
 802ccfc:	e9c0 1600 	strd	r1, r6, [r0]
 802cd00:	300c      	adds	r0, #12
 802cd02:	60a0      	str	r0, [r4, #8]
 802cd04:	f105 0268 	add.w	r2, r5, #104	; 0x68
 802cd08:	f7ff f994 	bl	802c034 <memset>
 802cd0c:	4620      	mov	r0, r4
 802cd0e:	bd70      	pop	{r4, r5, r6, pc}

0802cd10 <__sfp_lock_acquire>:
 802cd10:	4801      	ldr	r0, [pc, #4]	; (802cd18 <__sfp_lock_acquire+0x8>)
 802cd12:	f000 b8b3 	b.w	802ce7c <__retarget_lock_acquire_recursive>
 802cd16:	bf00      	nop
 802cd18:	2000442a 	.word	0x2000442a

0802cd1c <__sfp_lock_release>:
 802cd1c:	4801      	ldr	r0, [pc, #4]	; (802cd24 <__sfp_lock_release+0x8>)
 802cd1e:	f000 b8af 	b.w	802ce80 <__retarget_lock_release_recursive>
 802cd22:	bf00      	nop
 802cd24:	2000442a 	.word	0x2000442a

0802cd28 <__sinit_lock_acquire>:
 802cd28:	4801      	ldr	r0, [pc, #4]	; (802cd30 <__sinit_lock_acquire+0x8>)
 802cd2a:	f000 b8a7 	b.w	802ce7c <__retarget_lock_acquire_recursive>
 802cd2e:	bf00      	nop
 802cd30:	2000442b 	.word	0x2000442b

0802cd34 <__sinit_lock_release>:
 802cd34:	4801      	ldr	r0, [pc, #4]	; (802cd3c <__sinit_lock_release+0x8>)
 802cd36:	f000 b8a3 	b.w	802ce80 <__retarget_lock_release_recursive>
 802cd3a:	bf00      	nop
 802cd3c:	2000442b 	.word	0x2000442b

0802cd40 <__sinit>:
 802cd40:	b510      	push	{r4, lr}
 802cd42:	4604      	mov	r4, r0
 802cd44:	f7ff fff0 	bl	802cd28 <__sinit_lock_acquire>
 802cd48:	69a3      	ldr	r3, [r4, #24]
 802cd4a:	b11b      	cbz	r3, 802cd54 <__sinit+0x14>
 802cd4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802cd50:	f7ff bff0 	b.w	802cd34 <__sinit_lock_release>
 802cd54:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 802cd58:	6523      	str	r3, [r4, #80]	; 0x50
 802cd5a:	4b13      	ldr	r3, [pc, #76]	; (802cda8 <__sinit+0x68>)
 802cd5c:	4a13      	ldr	r2, [pc, #76]	; (802cdac <__sinit+0x6c>)
 802cd5e:	681b      	ldr	r3, [r3, #0]
 802cd60:	62a2      	str	r2, [r4, #40]	; 0x28
 802cd62:	42a3      	cmp	r3, r4
 802cd64:	bf04      	itt	eq
 802cd66:	2301      	moveq	r3, #1
 802cd68:	61a3      	streq	r3, [r4, #24]
 802cd6a:	4620      	mov	r0, r4
 802cd6c:	f000 f820 	bl	802cdb0 <__sfp>
 802cd70:	6060      	str	r0, [r4, #4]
 802cd72:	4620      	mov	r0, r4
 802cd74:	f000 f81c 	bl	802cdb0 <__sfp>
 802cd78:	60a0      	str	r0, [r4, #8]
 802cd7a:	4620      	mov	r0, r4
 802cd7c:	f000 f818 	bl	802cdb0 <__sfp>
 802cd80:	2200      	movs	r2, #0
 802cd82:	60e0      	str	r0, [r4, #12]
 802cd84:	2104      	movs	r1, #4
 802cd86:	6860      	ldr	r0, [r4, #4]
 802cd88:	f7ff ff82 	bl	802cc90 <std>
 802cd8c:	68a0      	ldr	r0, [r4, #8]
 802cd8e:	2201      	movs	r2, #1
 802cd90:	2109      	movs	r1, #9
 802cd92:	f7ff ff7d 	bl	802cc90 <std>
 802cd96:	68e0      	ldr	r0, [r4, #12]
 802cd98:	2202      	movs	r2, #2
 802cd9a:	2112      	movs	r1, #18
 802cd9c:	f7ff ff78 	bl	802cc90 <std>
 802cda0:	2301      	movs	r3, #1
 802cda2:	61a3      	str	r3, [r4, #24]
 802cda4:	e7d2      	b.n	802cd4c <__sinit+0xc>
 802cda6:	bf00      	nop
 802cda8:	08032bac 	.word	0x08032bac
 802cdac:	0802ccd9 	.word	0x0802ccd9

0802cdb0 <__sfp>:
 802cdb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802cdb2:	4607      	mov	r7, r0
 802cdb4:	f7ff ffac 	bl	802cd10 <__sfp_lock_acquire>
 802cdb8:	4b1e      	ldr	r3, [pc, #120]	; (802ce34 <__sfp+0x84>)
 802cdba:	681e      	ldr	r6, [r3, #0]
 802cdbc:	69b3      	ldr	r3, [r6, #24]
 802cdbe:	b913      	cbnz	r3, 802cdc6 <__sfp+0x16>
 802cdc0:	4630      	mov	r0, r6
 802cdc2:	f7ff ffbd 	bl	802cd40 <__sinit>
 802cdc6:	3648      	adds	r6, #72	; 0x48
 802cdc8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802cdcc:	3b01      	subs	r3, #1
 802cdce:	d503      	bpl.n	802cdd8 <__sfp+0x28>
 802cdd0:	6833      	ldr	r3, [r6, #0]
 802cdd2:	b30b      	cbz	r3, 802ce18 <__sfp+0x68>
 802cdd4:	6836      	ldr	r6, [r6, #0]
 802cdd6:	e7f7      	b.n	802cdc8 <__sfp+0x18>
 802cdd8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802cddc:	b9d5      	cbnz	r5, 802ce14 <__sfp+0x64>
 802cdde:	4b16      	ldr	r3, [pc, #88]	; (802ce38 <__sfp+0x88>)
 802cde0:	60e3      	str	r3, [r4, #12]
 802cde2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802cde6:	6665      	str	r5, [r4, #100]	; 0x64
 802cde8:	f000 f847 	bl	802ce7a <__retarget_lock_init_recursive>
 802cdec:	f7ff ff96 	bl	802cd1c <__sfp_lock_release>
 802cdf0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802cdf4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 802cdf8:	6025      	str	r5, [r4, #0]
 802cdfa:	61a5      	str	r5, [r4, #24]
 802cdfc:	2208      	movs	r2, #8
 802cdfe:	4629      	mov	r1, r5
 802ce00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802ce04:	f7ff f916 	bl	802c034 <memset>
 802ce08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802ce0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 802ce10:	4620      	mov	r0, r4
 802ce12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802ce14:	3468      	adds	r4, #104	; 0x68
 802ce16:	e7d9      	b.n	802cdcc <__sfp+0x1c>
 802ce18:	2104      	movs	r1, #4
 802ce1a:	4638      	mov	r0, r7
 802ce1c:	f7ff ff62 	bl	802cce4 <__sfmoreglue>
 802ce20:	4604      	mov	r4, r0
 802ce22:	6030      	str	r0, [r6, #0]
 802ce24:	2800      	cmp	r0, #0
 802ce26:	d1d5      	bne.n	802cdd4 <__sfp+0x24>
 802ce28:	f7ff ff78 	bl	802cd1c <__sfp_lock_release>
 802ce2c:	230c      	movs	r3, #12
 802ce2e:	603b      	str	r3, [r7, #0]
 802ce30:	e7ee      	b.n	802ce10 <__sfp+0x60>
 802ce32:	bf00      	nop
 802ce34:	08032bac 	.word	0x08032bac
 802ce38:	ffff0001 	.word	0xffff0001

0802ce3c <_fwalk_reent>:
 802ce3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ce40:	4606      	mov	r6, r0
 802ce42:	4688      	mov	r8, r1
 802ce44:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802ce48:	2700      	movs	r7, #0
 802ce4a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802ce4e:	f1b9 0901 	subs.w	r9, r9, #1
 802ce52:	d505      	bpl.n	802ce60 <_fwalk_reent+0x24>
 802ce54:	6824      	ldr	r4, [r4, #0]
 802ce56:	2c00      	cmp	r4, #0
 802ce58:	d1f7      	bne.n	802ce4a <_fwalk_reent+0xe>
 802ce5a:	4638      	mov	r0, r7
 802ce5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ce60:	89ab      	ldrh	r3, [r5, #12]
 802ce62:	2b01      	cmp	r3, #1
 802ce64:	d907      	bls.n	802ce76 <_fwalk_reent+0x3a>
 802ce66:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802ce6a:	3301      	adds	r3, #1
 802ce6c:	d003      	beq.n	802ce76 <_fwalk_reent+0x3a>
 802ce6e:	4629      	mov	r1, r5
 802ce70:	4630      	mov	r0, r6
 802ce72:	47c0      	blx	r8
 802ce74:	4307      	orrs	r7, r0
 802ce76:	3568      	adds	r5, #104	; 0x68
 802ce78:	e7e9      	b.n	802ce4e <_fwalk_reent+0x12>

0802ce7a <__retarget_lock_init_recursive>:
 802ce7a:	4770      	bx	lr

0802ce7c <__retarget_lock_acquire_recursive>:
 802ce7c:	4770      	bx	lr

0802ce7e <__retarget_lock_release>:
 802ce7e:	4770      	bx	lr

0802ce80 <__retarget_lock_release_recursive>:
 802ce80:	4770      	bx	lr

0802ce82 <__swhatbuf_r>:
 802ce82:	b570      	push	{r4, r5, r6, lr}
 802ce84:	460e      	mov	r6, r1
 802ce86:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ce8a:	2900      	cmp	r1, #0
 802ce8c:	b096      	sub	sp, #88	; 0x58
 802ce8e:	4614      	mov	r4, r2
 802ce90:	461d      	mov	r5, r3
 802ce92:	da08      	bge.n	802cea6 <__swhatbuf_r+0x24>
 802ce94:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802ce98:	2200      	movs	r2, #0
 802ce9a:	602a      	str	r2, [r5, #0]
 802ce9c:	061a      	lsls	r2, r3, #24
 802ce9e:	d410      	bmi.n	802cec2 <__swhatbuf_r+0x40>
 802cea0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802cea4:	e00e      	b.n	802cec4 <__swhatbuf_r+0x42>
 802cea6:	466a      	mov	r2, sp
 802cea8:	f000 fa4c 	bl	802d344 <_fstat_r>
 802ceac:	2800      	cmp	r0, #0
 802ceae:	dbf1      	blt.n	802ce94 <__swhatbuf_r+0x12>
 802ceb0:	9a01      	ldr	r2, [sp, #4]
 802ceb2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802ceb6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802ceba:	425a      	negs	r2, r3
 802cebc:	415a      	adcs	r2, r3
 802cebe:	602a      	str	r2, [r5, #0]
 802cec0:	e7ee      	b.n	802cea0 <__swhatbuf_r+0x1e>
 802cec2:	2340      	movs	r3, #64	; 0x40
 802cec4:	2000      	movs	r0, #0
 802cec6:	6023      	str	r3, [r4, #0]
 802cec8:	b016      	add	sp, #88	; 0x58
 802ceca:	bd70      	pop	{r4, r5, r6, pc}

0802cecc <__smakebuf_r>:
 802cecc:	898b      	ldrh	r3, [r1, #12]
 802cece:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802ced0:	079d      	lsls	r5, r3, #30
 802ced2:	4606      	mov	r6, r0
 802ced4:	460c      	mov	r4, r1
 802ced6:	d507      	bpl.n	802cee8 <__smakebuf_r+0x1c>
 802ced8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802cedc:	6023      	str	r3, [r4, #0]
 802cede:	6123      	str	r3, [r4, #16]
 802cee0:	2301      	movs	r3, #1
 802cee2:	6163      	str	r3, [r4, #20]
 802cee4:	b002      	add	sp, #8
 802cee6:	bd70      	pop	{r4, r5, r6, pc}
 802cee8:	ab01      	add	r3, sp, #4
 802ceea:	466a      	mov	r2, sp
 802ceec:	f7ff ffc9 	bl	802ce82 <__swhatbuf_r>
 802cef0:	9900      	ldr	r1, [sp, #0]
 802cef2:	4605      	mov	r5, r0
 802cef4:	4630      	mov	r0, r6
 802cef6:	f7ff f911 	bl	802c11c <_malloc_r>
 802cefa:	b948      	cbnz	r0, 802cf10 <__smakebuf_r+0x44>
 802cefc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802cf00:	059a      	lsls	r2, r3, #22
 802cf02:	d4ef      	bmi.n	802cee4 <__smakebuf_r+0x18>
 802cf04:	f023 0303 	bic.w	r3, r3, #3
 802cf08:	f043 0302 	orr.w	r3, r3, #2
 802cf0c:	81a3      	strh	r3, [r4, #12]
 802cf0e:	e7e3      	b.n	802ced8 <__smakebuf_r+0xc>
 802cf10:	4b0d      	ldr	r3, [pc, #52]	; (802cf48 <__smakebuf_r+0x7c>)
 802cf12:	62b3      	str	r3, [r6, #40]	; 0x28
 802cf14:	89a3      	ldrh	r3, [r4, #12]
 802cf16:	6020      	str	r0, [r4, #0]
 802cf18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802cf1c:	81a3      	strh	r3, [r4, #12]
 802cf1e:	9b00      	ldr	r3, [sp, #0]
 802cf20:	6163      	str	r3, [r4, #20]
 802cf22:	9b01      	ldr	r3, [sp, #4]
 802cf24:	6120      	str	r0, [r4, #16]
 802cf26:	b15b      	cbz	r3, 802cf40 <__smakebuf_r+0x74>
 802cf28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802cf2c:	4630      	mov	r0, r6
 802cf2e:	f000 fa1b 	bl	802d368 <_isatty_r>
 802cf32:	b128      	cbz	r0, 802cf40 <__smakebuf_r+0x74>
 802cf34:	89a3      	ldrh	r3, [r4, #12]
 802cf36:	f023 0303 	bic.w	r3, r3, #3
 802cf3a:	f043 0301 	orr.w	r3, r3, #1
 802cf3e:	81a3      	strh	r3, [r4, #12]
 802cf40:	89a0      	ldrh	r0, [r4, #12]
 802cf42:	4305      	orrs	r5, r0
 802cf44:	81a5      	strh	r5, [r4, #12]
 802cf46:	e7cd      	b.n	802cee4 <__smakebuf_r+0x18>
 802cf48:	0802ccd9 	.word	0x0802ccd9

0802cf4c <__malloc_lock>:
 802cf4c:	4801      	ldr	r0, [pc, #4]	; (802cf54 <__malloc_lock+0x8>)
 802cf4e:	f7ff bf95 	b.w	802ce7c <__retarget_lock_acquire_recursive>
 802cf52:	bf00      	nop
 802cf54:	20004429 	.word	0x20004429

0802cf58 <__malloc_unlock>:
 802cf58:	4801      	ldr	r0, [pc, #4]	; (802cf60 <__malloc_unlock+0x8>)
 802cf5a:	f7ff bf91 	b.w	802ce80 <__retarget_lock_release_recursive>
 802cf5e:	bf00      	nop
 802cf60:	20004429 	.word	0x20004429

0802cf64 <_realloc_r>:
 802cf64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802cf68:	4680      	mov	r8, r0
 802cf6a:	4614      	mov	r4, r2
 802cf6c:	460e      	mov	r6, r1
 802cf6e:	b921      	cbnz	r1, 802cf7a <_realloc_r+0x16>
 802cf70:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802cf74:	4611      	mov	r1, r2
 802cf76:	f7ff b8d1 	b.w	802c11c <_malloc_r>
 802cf7a:	b92a      	cbnz	r2, 802cf88 <_realloc_r+0x24>
 802cf7c:	f7ff f862 	bl	802c044 <_free_r>
 802cf80:	4625      	mov	r5, r4
 802cf82:	4628      	mov	r0, r5
 802cf84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802cf88:	f000 fa10 	bl	802d3ac <_malloc_usable_size_r>
 802cf8c:	4284      	cmp	r4, r0
 802cf8e:	4607      	mov	r7, r0
 802cf90:	d802      	bhi.n	802cf98 <_realloc_r+0x34>
 802cf92:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802cf96:	d812      	bhi.n	802cfbe <_realloc_r+0x5a>
 802cf98:	4621      	mov	r1, r4
 802cf9a:	4640      	mov	r0, r8
 802cf9c:	f7ff f8be 	bl	802c11c <_malloc_r>
 802cfa0:	4605      	mov	r5, r0
 802cfa2:	2800      	cmp	r0, #0
 802cfa4:	d0ed      	beq.n	802cf82 <_realloc_r+0x1e>
 802cfa6:	42bc      	cmp	r4, r7
 802cfa8:	4622      	mov	r2, r4
 802cfaa:	4631      	mov	r1, r6
 802cfac:	bf28      	it	cs
 802cfae:	463a      	movcs	r2, r7
 802cfb0:	f7ff f818 	bl	802bfe4 <memcpy>
 802cfb4:	4631      	mov	r1, r6
 802cfb6:	4640      	mov	r0, r8
 802cfb8:	f7ff f844 	bl	802c044 <_free_r>
 802cfbc:	e7e1      	b.n	802cf82 <_realloc_r+0x1e>
 802cfbe:	4635      	mov	r5, r6
 802cfc0:	e7df      	b.n	802cf82 <_realloc_r+0x1e>

0802cfc2 <__ssputs_r>:
 802cfc2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802cfc6:	688e      	ldr	r6, [r1, #8]
 802cfc8:	429e      	cmp	r6, r3
 802cfca:	4682      	mov	sl, r0
 802cfcc:	460c      	mov	r4, r1
 802cfce:	4690      	mov	r8, r2
 802cfd0:	461f      	mov	r7, r3
 802cfd2:	d838      	bhi.n	802d046 <__ssputs_r+0x84>
 802cfd4:	898a      	ldrh	r2, [r1, #12]
 802cfd6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 802cfda:	d032      	beq.n	802d042 <__ssputs_r+0x80>
 802cfdc:	6825      	ldr	r5, [r4, #0]
 802cfde:	6909      	ldr	r1, [r1, #16]
 802cfe0:	eba5 0901 	sub.w	r9, r5, r1
 802cfe4:	6965      	ldr	r5, [r4, #20]
 802cfe6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 802cfea:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 802cfee:	3301      	adds	r3, #1
 802cff0:	444b      	add	r3, r9
 802cff2:	106d      	asrs	r5, r5, #1
 802cff4:	429d      	cmp	r5, r3
 802cff6:	bf38      	it	cc
 802cff8:	461d      	movcc	r5, r3
 802cffa:	0553      	lsls	r3, r2, #21
 802cffc:	d531      	bpl.n	802d062 <__ssputs_r+0xa0>
 802cffe:	4629      	mov	r1, r5
 802d000:	f7ff f88c 	bl	802c11c <_malloc_r>
 802d004:	4606      	mov	r6, r0
 802d006:	b950      	cbnz	r0, 802d01e <__ssputs_r+0x5c>
 802d008:	230c      	movs	r3, #12
 802d00a:	f8ca 3000 	str.w	r3, [sl]
 802d00e:	89a3      	ldrh	r3, [r4, #12]
 802d010:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802d014:	81a3      	strh	r3, [r4, #12]
 802d016:	f04f 30ff 	mov.w	r0, #4294967295
 802d01a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802d01e:	6921      	ldr	r1, [r4, #16]
 802d020:	464a      	mov	r2, r9
 802d022:	f7fe ffdf 	bl	802bfe4 <memcpy>
 802d026:	89a3      	ldrh	r3, [r4, #12]
 802d028:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 802d02c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802d030:	81a3      	strh	r3, [r4, #12]
 802d032:	6126      	str	r6, [r4, #16]
 802d034:	6165      	str	r5, [r4, #20]
 802d036:	444e      	add	r6, r9
 802d038:	eba5 0509 	sub.w	r5, r5, r9
 802d03c:	6026      	str	r6, [r4, #0]
 802d03e:	60a5      	str	r5, [r4, #8]
 802d040:	463e      	mov	r6, r7
 802d042:	42be      	cmp	r6, r7
 802d044:	d900      	bls.n	802d048 <__ssputs_r+0x86>
 802d046:	463e      	mov	r6, r7
 802d048:	6820      	ldr	r0, [r4, #0]
 802d04a:	4632      	mov	r2, r6
 802d04c:	4641      	mov	r1, r8
 802d04e:	f7fe ffd7 	bl	802c000 <memmove>
 802d052:	68a3      	ldr	r3, [r4, #8]
 802d054:	1b9b      	subs	r3, r3, r6
 802d056:	60a3      	str	r3, [r4, #8]
 802d058:	6823      	ldr	r3, [r4, #0]
 802d05a:	4433      	add	r3, r6
 802d05c:	6023      	str	r3, [r4, #0]
 802d05e:	2000      	movs	r0, #0
 802d060:	e7db      	b.n	802d01a <__ssputs_r+0x58>
 802d062:	462a      	mov	r2, r5
 802d064:	f7ff ff7e 	bl	802cf64 <_realloc_r>
 802d068:	4606      	mov	r6, r0
 802d06a:	2800      	cmp	r0, #0
 802d06c:	d1e1      	bne.n	802d032 <__ssputs_r+0x70>
 802d06e:	6921      	ldr	r1, [r4, #16]
 802d070:	4650      	mov	r0, sl
 802d072:	f7fe ffe7 	bl	802c044 <_free_r>
 802d076:	e7c7      	b.n	802d008 <__ssputs_r+0x46>

0802d078 <_svfiprintf_r>:
 802d078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d07c:	4698      	mov	r8, r3
 802d07e:	898b      	ldrh	r3, [r1, #12]
 802d080:	061b      	lsls	r3, r3, #24
 802d082:	b09d      	sub	sp, #116	; 0x74
 802d084:	4607      	mov	r7, r0
 802d086:	460d      	mov	r5, r1
 802d088:	4614      	mov	r4, r2
 802d08a:	d50e      	bpl.n	802d0aa <_svfiprintf_r+0x32>
 802d08c:	690b      	ldr	r3, [r1, #16]
 802d08e:	b963      	cbnz	r3, 802d0aa <_svfiprintf_r+0x32>
 802d090:	2140      	movs	r1, #64	; 0x40
 802d092:	f7ff f843 	bl	802c11c <_malloc_r>
 802d096:	6028      	str	r0, [r5, #0]
 802d098:	6128      	str	r0, [r5, #16]
 802d09a:	b920      	cbnz	r0, 802d0a6 <_svfiprintf_r+0x2e>
 802d09c:	230c      	movs	r3, #12
 802d09e:	603b      	str	r3, [r7, #0]
 802d0a0:	f04f 30ff 	mov.w	r0, #4294967295
 802d0a4:	e0d1      	b.n	802d24a <_svfiprintf_r+0x1d2>
 802d0a6:	2340      	movs	r3, #64	; 0x40
 802d0a8:	616b      	str	r3, [r5, #20]
 802d0aa:	2300      	movs	r3, #0
 802d0ac:	9309      	str	r3, [sp, #36]	; 0x24
 802d0ae:	2320      	movs	r3, #32
 802d0b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802d0b4:	f8cd 800c 	str.w	r8, [sp, #12]
 802d0b8:	2330      	movs	r3, #48	; 0x30
 802d0ba:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 802d264 <_svfiprintf_r+0x1ec>
 802d0be:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802d0c2:	f04f 0901 	mov.w	r9, #1
 802d0c6:	4623      	mov	r3, r4
 802d0c8:	469a      	mov	sl, r3
 802d0ca:	f813 2b01 	ldrb.w	r2, [r3], #1
 802d0ce:	b10a      	cbz	r2, 802d0d4 <_svfiprintf_r+0x5c>
 802d0d0:	2a25      	cmp	r2, #37	; 0x25
 802d0d2:	d1f9      	bne.n	802d0c8 <_svfiprintf_r+0x50>
 802d0d4:	ebba 0b04 	subs.w	fp, sl, r4
 802d0d8:	d00b      	beq.n	802d0f2 <_svfiprintf_r+0x7a>
 802d0da:	465b      	mov	r3, fp
 802d0dc:	4622      	mov	r2, r4
 802d0de:	4629      	mov	r1, r5
 802d0e0:	4638      	mov	r0, r7
 802d0e2:	f7ff ff6e 	bl	802cfc2 <__ssputs_r>
 802d0e6:	3001      	adds	r0, #1
 802d0e8:	f000 80aa 	beq.w	802d240 <_svfiprintf_r+0x1c8>
 802d0ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802d0ee:	445a      	add	r2, fp
 802d0f0:	9209      	str	r2, [sp, #36]	; 0x24
 802d0f2:	f89a 3000 	ldrb.w	r3, [sl]
 802d0f6:	2b00      	cmp	r3, #0
 802d0f8:	f000 80a2 	beq.w	802d240 <_svfiprintf_r+0x1c8>
 802d0fc:	2300      	movs	r3, #0
 802d0fe:	f04f 32ff 	mov.w	r2, #4294967295
 802d102:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802d106:	f10a 0a01 	add.w	sl, sl, #1
 802d10a:	9304      	str	r3, [sp, #16]
 802d10c:	9307      	str	r3, [sp, #28]
 802d10e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802d112:	931a      	str	r3, [sp, #104]	; 0x68
 802d114:	4654      	mov	r4, sl
 802d116:	2205      	movs	r2, #5
 802d118:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d11c:	4851      	ldr	r0, [pc, #324]	; (802d264 <_svfiprintf_r+0x1ec>)
 802d11e:	f7d3 f877 	bl	8000210 <memchr>
 802d122:	9a04      	ldr	r2, [sp, #16]
 802d124:	b9d8      	cbnz	r0, 802d15e <_svfiprintf_r+0xe6>
 802d126:	06d0      	lsls	r0, r2, #27
 802d128:	bf44      	itt	mi
 802d12a:	2320      	movmi	r3, #32
 802d12c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d130:	0711      	lsls	r1, r2, #28
 802d132:	bf44      	itt	mi
 802d134:	232b      	movmi	r3, #43	; 0x2b
 802d136:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802d13a:	f89a 3000 	ldrb.w	r3, [sl]
 802d13e:	2b2a      	cmp	r3, #42	; 0x2a
 802d140:	d015      	beq.n	802d16e <_svfiprintf_r+0xf6>
 802d142:	9a07      	ldr	r2, [sp, #28]
 802d144:	4654      	mov	r4, sl
 802d146:	2000      	movs	r0, #0
 802d148:	f04f 0c0a 	mov.w	ip, #10
 802d14c:	4621      	mov	r1, r4
 802d14e:	f811 3b01 	ldrb.w	r3, [r1], #1
 802d152:	3b30      	subs	r3, #48	; 0x30
 802d154:	2b09      	cmp	r3, #9
 802d156:	d94e      	bls.n	802d1f6 <_svfiprintf_r+0x17e>
 802d158:	b1b0      	cbz	r0, 802d188 <_svfiprintf_r+0x110>
 802d15a:	9207      	str	r2, [sp, #28]
 802d15c:	e014      	b.n	802d188 <_svfiprintf_r+0x110>
 802d15e:	eba0 0308 	sub.w	r3, r0, r8
 802d162:	fa09 f303 	lsl.w	r3, r9, r3
 802d166:	4313      	orrs	r3, r2
 802d168:	9304      	str	r3, [sp, #16]
 802d16a:	46a2      	mov	sl, r4
 802d16c:	e7d2      	b.n	802d114 <_svfiprintf_r+0x9c>
 802d16e:	9b03      	ldr	r3, [sp, #12]
 802d170:	1d19      	adds	r1, r3, #4
 802d172:	681b      	ldr	r3, [r3, #0]
 802d174:	9103      	str	r1, [sp, #12]
 802d176:	2b00      	cmp	r3, #0
 802d178:	bfbb      	ittet	lt
 802d17a:	425b      	neglt	r3, r3
 802d17c:	f042 0202 	orrlt.w	r2, r2, #2
 802d180:	9307      	strge	r3, [sp, #28]
 802d182:	9307      	strlt	r3, [sp, #28]
 802d184:	bfb8      	it	lt
 802d186:	9204      	strlt	r2, [sp, #16]
 802d188:	7823      	ldrb	r3, [r4, #0]
 802d18a:	2b2e      	cmp	r3, #46	; 0x2e
 802d18c:	d10c      	bne.n	802d1a8 <_svfiprintf_r+0x130>
 802d18e:	7863      	ldrb	r3, [r4, #1]
 802d190:	2b2a      	cmp	r3, #42	; 0x2a
 802d192:	d135      	bne.n	802d200 <_svfiprintf_r+0x188>
 802d194:	9b03      	ldr	r3, [sp, #12]
 802d196:	1d1a      	adds	r2, r3, #4
 802d198:	681b      	ldr	r3, [r3, #0]
 802d19a:	9203      	str	r2, [sp, #12]
 802d19c:	2b00      	cmp	r3, #0
 802d19e:	bfb8      	it	lt
 802d1a0:	f04f 33ff 	movlt.w	r3, #4294967295
 802d1a4:	3402      	adds	r4, #2
 802d1a6:	9305      	str	r3, [sp, #20]
 802d1a8:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 802d274 <_svfiprintf_r+0x1fc>
 802d1ac:	7821      	ldrb	r1, [r4, #0]
 802d1ae:	2203      	movs	r2, #3
 802d1b0:	4650      	mov	r0, sl
 802d1b2:	f7d3 f82d 	bl	8000210 <memchr>
 802d1b6:	b140      	cbz	r0, 802d1ca <_svfiprintf_r+0x152>
 802d1b8:	2340      	movs	r3, #64	; 0x40
 802d1ba:	eba0 000a 	sub.w	r0, r0, sl
 802d1be:	fa03 f000 	lsl.w	r0, r3, r0
 802d1c2:	9b04      	ldr	r3, [sp, #16]
 802d1c4:	4303      	orrs	r3, r0
 802d1c6:	3401      	adds	r4, #1
 802d1c8:	9304      	str	r3, [sp, #16]
 802d1ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 802d1ce:	4826      	ldr	r0, [pc, #152]	; (802d268 <_svfiprintf_r+0x1f0>)
 802d1d0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802d1d4:	2206      	movs	r2, #6
 802d1d6:	f7d3 f81b 	bl	8000210 <memchr>
 802d1da:	2800      	cmp	r0, #0
 802d1dc:	d038      	beq.n	802d250 <_svfiprintf_r+0x1d8>
 802d1de:	4b23      	ldr	r3, [pc, #140]	; (802d26c <_svfiprintf_r+0x1f4>)
 802d1e0:	bb1b      	cbnz	r3, 802d22a <_svfiprintf_r+0x1b2>
 802d1e2:	9b03      	ldr	r3, [sp, #12]
 802d1e4:	3307      	adds	r3, #7
 802d1e6:	f023 0307 	bic.w	r3, r3, #7
 802d1ea:	3308      	adds	r3, #8
 802d1ec:	9303      	str	r3, [sp, #12]
 802d1ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d1f0:	4433      	add	r3, r6
 802d1f2:	9309      	str	r3, [sp, #36]	; 0x24
 802d1f4:	e767      	b.n	802d0c6 <_svfiprintf_r+0x4e>
 802d1f6:	fb0c 3202 	mla	r2, ip, r2, r3
 802d1fa:	460c      	mov	r4, r1
 802d1fc:	2001      	movs	r0, #1
 802d1fe:	e7a5      	b.n	802d14c <_svfiprintf_r+0xd4>
 802d200:	2300      	movs	r3, #0
 802d202:	3401      	adds	r4, #1
 802d204:	9305      	str	r3, [sp, #20]
 802d206:	4619      	mov	r1, r3
 802d208:	f04f 0c0a 	mov.w	ip, #10
 802d20c:	4620      	mov	r0, r4
 802d20e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802d212:	3a30      	subs	r2, #48	; 0x30
 802d214:	2a09      	cmp	r2, #9
 802d216:	d903      	bls.n	802d220 <_svfiprintf_r+0x1a8>
 802d218:	2b00      	cmp	r3, #0
 802d21a:	d0c5      	beq.n	802d1a8 <_svfiprintf_r+0x130>
 802d21c:	9105      	str	r1, [sp, #20]
 802d21e:	e7c3      	b.n	802d1a8 <_svfiprintf_r+0x130>
 802d220:	fb0c 2101 	mla	r1, ip, r1, r2
 802d224:	4604      	mov	r4, r0
 802d226:	2301      	movs	r3, #1
 802d228:	e7f0      	b.n	802d20c <_svfiprintf_r+0x194>
 802d22a:	ab03      	add	r3, sp, #12
 802d22c:	9300      	str	r3, [sp, #0]
 802d22e:	462a      	mov	r2, r5
 802d230:	4b0f      	ldr	r3, [pc, #60]	; (802d270 <_svfiprintf_r+0x1f8>)
 802d232:	a904      	add	r1, sp, #16
 802d234:	4638      	mov	r0, r7
 802d236:	f3af 8000 	nop.w
 802d23a:	1c42      	adds	r2, r0, #1
 802d23c:	4606      	mov	r6, r0
 802d23e:	d1d6      	bne.n	802d1ee <_svfiprintf_r+0x176>
 802d240:	89ab      	ldrh	r3, [r5, #12]
 802d242:	065b      	lsls	r3, r3, #25
 802d244:	f53f af2c 	bmi.w	802d0a0 <_svfiprintf_r+0x28>
 802d248:	9809      	ldr	r0, [sp, #36]	; 0x24
 802d24a:	b01d      	add	sp, #116	; 0x74
 802d24c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d250:	ab03      	add	r3, sp, #12
 802d252:	9300      	str	r3, [sp, #0]
 802d254:	462a      	mov	r2, r5
 802d256:	4b06      	ldr	r3, [pc, #24]	; (802d270 <_svfiprintf_r+0x1f8>)
 802d258:	a904      	add	r1, sp, #16
 802d25a:	4638      	mov	r0, r7
 802d25c:	f7ff f99a 	bl	802c594 <_printf_i>
 802d260:	e7eb      	b.n	802d23a <_svfiprintf_r+0x1c2>
 802d262:	bf00      	nop
 802d264:	08032bb0 	.word	0x08032bb0
 802d268:	08032bba 	.word	0x08032bba
 802d26c:	00000000 	.word	0x00000000
 802d270:	0802cfc3 	.word	0x0802cfc3
 802d274:	08032bb6 	.word	0x08032bb6

0802d278 <__sread>:
 802d278:	b510      	push	{r4, lr}
 802d27a:	460c      	mov	r4, r1
 802d27c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d280:	f000 f89c 	bl	802d3bc <_read_r>
 802d284:	2800      	cmp	r0, #0
 802d286:	bfab      	itete	ge
 802d288:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802d28a:	89a3      	ldrhlt	r3, [r4, #12]
 802d28c:	181b      	addge	r3, r3, r0
 802d28e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802d292:	bfac      	ite	ge
 802d294:	6563      	strge	r3, [r4, #84]	; 0x54
 802d296:	81a3      	strhlt	r3, [r4, #12]
 802d298:	bd10      	pop	{r4, pc}

0802d29a <__swrite>:
 802d29a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802d29e:	461f      	mov	r7, r3
 802d2a0:	898b      	ldrh	r3, [r1, #12]
 802d2a2:	05db      	lsls	r3, r3, #23
 802d2a4:	4605      	mov	r5, r0
 802d2a6:	460c      	mov	r4, r1
 802d2a8:	4616      	mov	r6, r2
 802d2aa:	d505      	bpl.n	802d2b8 <__swrite+0x1e>
 802d2ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d2b0:	2302      	movs	r3, #2
 802d2b2:	2200      	movs	r2, #0
 802d2b4:	f000 f868 	bl	802d388 <_lseek_r>
 802d2b8:	89a3      	ldrh	r3, [r4, #12]
 802d2ba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802d2be:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802d2c2:	81a3      	strh	r3, [r4, #12]
 802d2c4:	4632      	mov	r2, r6
 802d2c6:	463b      	mov	r3, r7
 802d2c8:	4628      	mov	r0, r5
 802d2ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802d2ce:	f000 b817 	b.w	802d300 <_write_r>

0802d2d2 <__sseek>:
 802d2d2:	b510      	push	{r4, lr}
 802d2d4:	460c      	mov	r4, r1
 802d2d6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d2da:	f000 f855 	bl	802d388 <_lseek_r>
 802d2de:	1c43      	adds	r3, r0, #1
 802d2e0:	89a3      	ldrh	r3, [r4, #12]
 802d2e2:	bf15      	itete	ne
 802d2e4:	6560      	strne	r0, [r4, #84]	; 0x54
 802d2e6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802d2ea:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802d2ee:	81a3      	strheq	r3, [r4, #12]
 802d2f0:	bf18      	it	ne
 802d2f2:	81a3      	strhne	r3, [r4, #12]
 802d2f4:	bd10      	pop	{r4, pc}

0802d2f6 <__sclose>:
 802d2f6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802d2fa:	f000 b813 	b.w	802d324 <_close_r>
	...

0802d300 <_write_r>:
 802d300:	b538      	push	{r3, r4, r5, lr}
 802d302:	4d07      	ldr	r5, [pc, #28]	; (802d320 <_write_r+0x20>)
 802d304:	4604      	mov	r4, r0
 802d306:	4608      	mov	r0, r1
 802d308:	4611      	mov	r1, r2
 802d30a:	2200      	movs	r2, #0
 802d30c:	602a      	str	r2, [r5, #0]
 802d30e:	461a      	mov	r2, r3
 802d310:	f7d4 fe91 	bl	8002036 <_write>
 802d314:	1c43      	adds	r3, r0, #1
 802d316:	d102      	bne.n	802d31e <_write_r+0x1e>
 802d318:	682b      	ldr	r3, [r5, #0]
 802d31a:	b103      	cbz	r3, 802d31e <_write_r+0x1e>
 802d31c:	6023      	str	r3, [r4, #0]
 802d31e:	bd38      	pop	{r3, r4, r5, pc}
 802d320:	2000442c 	.word	0x2000442c

0802d324 <_close_r>:
 802d324:	b538      	push	{r3, r4, r5, lr}
 802d326:	4d06      	ldr	r5, [pc, #24]	; (802d340 <_close_r+0x1c>)
 802d328:	2300      	movs	r3, #0
 802d32a:	4604      	mov	r4, r0
 802d32c:	4608      	mov	r0, r1
 802d32e:	602b      	str	r3, [r5, #0]
 802d330:	f7d4 fe9d 	bl	800206e <_close>
 802d334:	1c43      	adds	r3, r0, #1
 802d336:	d102      	bne.n	802d33e <_close_r+0x1a>
 802d338:	682b      	ldr	r3, [r5, #0]
 802d33a:	b103      	cbz	r3, 802d33e <_close_r+0x1a>
 802d33c:	6023      	str	r3, [r4, #0]
 802d33e:	bd38      	pop	{r3, r4, r5, pc}
 802d340:	2000442c 	.word	0x2000442c

0802d344 <_fstat_r>:
 802d344:	b538      	push	{r3, r4, r5, lr}
 802d346:	4d07      	ldr	r5, [pc, #28]	; (802d364 <_fstat_r+0x20>)
 802d348:	2300      	movs	r3, #0
 802d34a:	4604      	mov	r4, r0
 802d34c:	4608      	mov	r0, r1
 802d34e:	4611      	mov	r1, r2
 802d350:	602b      	str	r3, [r5, #0]
 802d352:	f7d4 fe98 	bl	8002086 <_fstat>
 802d356:	1c43      	adds	r3, r0, #1
 802d358:	d102      	bne.n	802d360 <_fstat_r+0x1c>
 802d35a:	682b      	ldr	r3, [r5, #0]
 802d35c:	b103      	cbz	r3, 802d360 <_fstat_r+0x1c>
 802d35e:	6023      	str	r3, [r4, #0]
 802d360:	bd38      	pop	{r3, r4, r5, pc}
 802d362:	bf00      	nop
 802d364:	2000442c 	.word	0x2000442c

0802d368 <_isatty_r>:
 802d368:	b538      	push	{r3, r4, r5, lr}
 802d36a:	4d06      	ldr	r5, [pc, #24]	; (802d384 <_isatty_r+0x1c>)
 802d36c:	2300      	movs	r3, #0
 802d36e:	4604      	mov	r4, r0
 802d370:	4608      	mov	r0, r1
 802d372:	602b      	str	r3, [r5, #0]
 802d374:	f7d4 fe97 	bl	80020a6 <_isatty>
 802d378:	1c43      	adds	r3, r0, #1
 802d37a:	d102      	bne.n	802d382 <_isatty_r+0x1a>
 802d37c:	682b      	ldr	r3, [r5, #0]
 802d37e:	b103      	cbz	r3, 802d382 <_isatty_r+0x1a>
 802d380:	6023      	str	r3, [r4, #0]
 802d382:	bd38      	pop	{r3, r4, r5, pc}
 802d384:	2000442c 	.word	0x2000442c

0802d388 <_lseek_r>:
 802d388:	b538      	push	{r3, r4, r5, lr}
 802d38a:	4d07      	ldr	r5, [pc, #28]	; (802d3a8 <_lseek_r+0x20>)
 802d38c:	4604      	mov	r4, r0
 802d38e:	4608      	mov	r0, r1
 802d390:	4611      	mov	r1, r2
 802d392:	2200      	movs	r2, #0
 802d394:	602a      	str	r2, [r5, #0]
 802d396:	461a      	mov	r2, r3
 802d398:	f7d4 fe90 	bl	80020bc <_lseek>
 802d39c:	1c43      	adds	r3, r0, #1
 802d39e:	d102      	bne.n	802d3a6 <_lseek_r+0x1e>
 802d3a0:	682b      	ldr	r3, [r5, #0]
 802d3a2:	b103      	cbz	r3, 802d3a6 <_lseek_r+0x1e>
 802d3a4:	6023      	str	r3, [r4, #0]
 802d3a6:	bd38      	pop	{r3, r4, r5, pc}
 802d3a8:	2000442c 	.word	0x2000442c

0802d3ac <_malloc_usable_size_r>:
 802d3ac:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802d3b0:	1f18      	subs	r0, r3, #4
 802d3b2:	2b00      	cmp	r3, #0
 802d3b4:	bfbc      	itt	lt
 802d3b6:	580b      	ldrlt	r3, [r1, r0]
 802d3b8:	18c0      	addlt	r0, r0, r3
 802d3ba:	4770      	bx	lr

0802d3bc <_read_r>:
 802d3bc:	b538      	push	{r3, r4, r5, lr}
 802d3be:	4d07      	ldr	r5, [pc, #28]	; (802d3dc <_read_r+0x20>)
 802d3c0:	4604      	mov	r4, r0
 802d3c2:	4608      	mov	r0, r1
 802d3c4:	4611      	mov	r1, r2
 802d3c6:	2200      	movs	r2, #0
 802d3c8:	602a      	str	r2, [r5, #0]
 802d3ca:	461a      	mov	r2, r3
 802d3cc:	f7d4 fe16 	bl	8001ffc <_read>
 802d3d0:	1c43      	adds	r3, r0, #1
 802d3d2:	d102      	bne.n	802d3da <_read_r+0x1e>
 802d3d4:	682b      	ldr	r3, [r5, #0]
 802d3d6:	b103      	cbz	r3, 802d3da <_read_r+0x1e>
 802d3d8:	6023      	str	r3, [r4, #0]
 802d3da:	bd38      	pop	{r3, r4, r5, pc}
 802d3dc:	2000442c 	.word	0x2000442c

0802d3e0 <_init>:
 802d3e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d3e2:	bf00      	nop
 802d3e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d3e6:	bc08      	pop	{r3}
 802d3e8:	469e      	mov	lr, r3
 802d3ea:	4770      	bx	lr

0802d3ec <_fini>:
 802d3ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802d3ee:	bf00      	nop
 802d3f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802d3f2:	bc08      	pop	{r3}
 802d3f4:	469e      	mov	lr, r3
 802d3f6:	4770      	bx	lr
